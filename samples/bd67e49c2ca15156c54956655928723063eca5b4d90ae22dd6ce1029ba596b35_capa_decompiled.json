{
    "1400014e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.1400014e0(int64_t hdc, ulong nLeftRect, ulong nTopRect, ulong nRightRect)\n\n{\n    (*_sym.imp.GDI32.dll_Rectangle)\n              (*(hdc + 0xe0), *(hdc + 0x80), *(hdc + 0x88), *(hdc + 0x80) + *0x1400386a0, *(hdc + 0x88) + *0x1400386a8);\n    (*_sym.imp.GDI32.dll_Rectangle)\n              (*(hdc + 0xe0), *(hdc + 0x90), *(hdc + 0x98), *(hdc + 0x90) + *0x1400386a0, *(hdc + 0x98) + *0x1400386a8);\n    (*_sym.imp.GDI32.dll_Rectangle)\n              (*(hdc + 0xe0), *(hdc + 0xa0), *(hdc + 0xa8), *(hdc + 0xa0) + *0x1400386a0, *(hdc + 0xa8) + *0x1400386a8);\n    return;\n}\n",
        "token_count": 269
    },
    "1400015d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint * fcn.1400015d0(int64_t arg1, ulong noname_1, int64_t *arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong uVar5;\n    uint *puVar6;\n    uchar auStack24 [16];\n    \n    uVar5 = fcn.140002dd0(auStack24, arg1 + 8);\n    fcn.140001680(arg1, 0, uVar5);\n    uVar5 = fcn.140002dd0(auStack24, arg1 + 0x18);\n    fcn.140001680(arg1, 1, uVar5);\n    uVar5 = fcn.140002dd0(auStack24, arg1 + 0x28);\n    fcn.140001680(arg1, 2, uVar5);\n    puVar1 = *arg3;\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    puVar6 = NULL;\n    if ((*arg3 != 0) && (puVar6 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x140040838, 0, *arg3),  puVar6 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.140013804(uVar3);\n        puVar6 = fcn.1400138d8();\n        *puVar6 = uVar4;\n    }\n    return puVar6;\n}\n",
        "token_count": 400
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "14000602": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.140006020(ulong *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t noname_2;\n    ulong *puVar2;\n    \n    iVar1 = arg1[2];\n    noname_2 = arg1[3];\n    if (arg3 <= noname_2 - iVar1) {\n        arg1[2] = iVar1 + arg3;\n        puVar2 = arg1;\n        if (0xf < noname_2) {\n            puVar2 = *arg1;\n        }\n        fcn.14000bbe0(puVar2 + iVar1, arg2, arg3);\n        *(puVar2 + iVar1 + arg3) = 0;\n        return arg1;\n    }\n    puVar2 = fcn.1400073a0(arg1, arg3, noname_2, arg2);\n    return puVar2;\n}\n",
        "token_count": 208
    },
    "140008d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.140008d78(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.14000ba24(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::length_error.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "140008e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.140008e38(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.14000ba24(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::out_of_range.0;\n    return arg1;\n}\n",
        "token_count": 117
    },
    "140008e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\ncode ** fcn.140008e80(code **arg1, ulong arg2)\n\n{\n    ulong uStack24;\n    uchar uStack16;\n    \n    uStack16 = 1;\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack24 = arg2;\n    fcn.14000ba24(&uStack24, arg1 + 1);\n    *arg1 = vtable.std::runtime_error.0;\n    return arg1;\n}\n",
        "token_count": 116
    },
    "14000fb7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.14000fb70(ulong *arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong *in_stack_00000028;\n    uint uStack16;\n    uint uStack12;\n    \n    uVar1 = in_stack_00000028[1];\n    if ((uVar1 < *(arg3 + 8) || uVar1 == *(arg3 + 8)) && (arg1[1] < uVar1 || arg1[1] == uVar1)) {\n        if (uVar1 - arg1[1] < *(arg3 + 8) - uVar1) {\n            uVar2 = *arg1;\n            uStack16 = *(arg1 + 1);\n            uStack12 = *(arg1 + 0xc);\n            if (arg1[1] <= uVar1 && uVar1 != arg1[1]) {\n                do {\n                    fcn.14000f9e8(uVar2, &uStack16);\n                    arg2._0_4_ = arg2 + 1;\n                } while (CONCAT44(uStack12, uStack16) <= in_stack_00000028[1] &&\n                         in_stack_00000028[1] != CONCAT44(uStack12, uStack16));\n            }\n        }\n        else {\n            uVar2 = *in_stack_00000028;\n            uStack16 = *(in_stack_00000028 + 1);\n            uStack12 = *(in_stack_00000028 + 0xc);\n            arg2._0_4_ = arg4;\n            if (uVar1 <= *(arg3 + 8) && *(arg3 + 8) != uVar1) {\n                do {\n                    fcn.14000f9e8(uVar2, &uStack16);\n                    arg2._0_4_ = arg4 + -1;\n                    arg4._0_4_ = arg2;\n                } while (CONCAT44(uStack12, uStack16) <= *(arg3 + 8) && *(arg3 + 8) != CONCAT44(uStack12, uStack16));\n            }\n        }\n    }\n    else {\n        arg2._0_4_ = -1;\n    }\n    return arg2;\n}\n",
        "token_count": 512
    },
    "14001042": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.140010428(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint8_t uVar4;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    iVar2 = fcn.140010170(in_stack_00000030);\n    if (((iVar2 == 0) || (*(iVar2 + 0x3b8) == 0)) &&\n       (puVar3 = fcn.1400101dc(0x14003fd00, in_stack_00000030),  uVar4 = *0x14003e020 & 0x3f, \n       ((*puVar3 ^ *0x14003e020) >> uVar4 | (*puVar3 ^ *0x14003e020) << 0x40 - uVar4) == 0)) {\n        fcn.140010544(arg1, arg2, arg3, arg4, in_stack_00000028);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**0x14002a3f0)(arg1, arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 295
    },
    "1400107e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t fcn.1400107e4(int64_t arg1, char **arg2, ulong arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    char *pcVar9;\n    uint64_t uVar10;\n    char cVar11;\n    uint32_t uVar12;\n    uint32_t in_R9D;\n    uint32_t uVar13;\n    \n    pcVar2 = *arg2;\n    uVar10 = arg3;\n    if (pcVar2 == NULL) {\n        puVar6 = fcn.1400138d8();\n        *puVar6 = 0x16;\n        fcn.1400104f4();\ncode_r0x000140010855:\n        if (arg2[1] != NULL) {\n            *arg2[1] = *arg2;\n        }\n        return 0;\n    }\n    if ((arg3 != 0) && (0x22 < arg3 - 2)) {\n        *(arg1 + 0x30) = 1;\n        *(arg1 + 0x2c) = 0x16;\n        fcn.140010428(0, 0, 0, 0);\n        goto code_r0x000140010855;\n    }\n    cVar11 = *pcVar2;\n    pcVar9 = pcVar2 + 1;\n    uVar12 = in_R9D & 0xff;\n    *arg2 = pcVar9;\n    uVar13 = uVar12 | 2;\n    if ((cVar11 == '-') || (uVar13 = uVar12,  cVar11 == '+')) {\n        uVar12 = uVar13;\n        cVar11 = *pcVar9;\n        pcVar9 = pcVar2 + 2;\n        *arg2 = pcVar9;\n    }\n    uVar7 = uVar10;\n    if ((arg3 & 0xffffffef) == 0) {\n        if (cVar11 - 0x30U < 10) {\n            iVar4 = cVar11 + -0x30;\ncode_r0x0001400108db:\n            if (iVar4 != 0) goto code_r0x000140010929;\n            cVar1 = *pcVar9;\n            *arg2 = pcVar9 + 1;\n            if ((cVar1 + 0xa8U & 0xdf) != 0) {\n                *arg2 = pcVar9;\n                uVar7 = 8;\n                if (arg3 != 0) {\n                    uVar7 = uVar10;\n                }\n                if ((cVar1 != '\\0') && (*pcVar9 != cVar1)) {\n                    puVar6 = fcn.1400138d8();\n                    *puVar6 = 0x16;\n                    fcn.1400104f4();\n                }\n                goto code_r0x000140010935;\n            }\n            cVar11 = pcVar9[1];\n            *arg2 = pcVar9 + 2;\n            uVar7 = 0x10;\n        }\n        else {\n            if (cVar11 + 0x9fU < 0x1a) {\n                iVar4 = cVar11 + -0x57;\n                goto code_r0x0001400108db;\n            }\n            if (cVar11 + 0xbfU < 0x1a) {\n                iVar4 = cVar11 + -0x37;\n                goto code_r0x0001400108db;\n            }\ncode_r0x000140010929:\n            uVar7 = 10;\n        }\n        if (arg3 != 0) {\n            uVar7 = uVar10;\n        }\n    }\ncode_r0x000140010935:\n    pcVar9 = *arg2;\n    uVar13 = 0;\n    while( true ) {\n        if (cVar11 - 0x30U < 10) {\n            uVar8 = cVar11 - 0x30;\n        }\n        else if (cVar11 + 0x9fU < 0x1a) {\n            uVar8 = cVar11 - 0x57;\n        }\n        else if (cVar11 + 0xbfU < 0x1a) {\n            uVar8 = cVar11 - 0x37;\n        }\n        else {\n            uVar8 = 0xffffffff;\n        }\n        if (uVar7 <= uVar8) break;\n        cVar11 = *pcVar9;\n        uVar5 = uVar13 * uVar7;\n        uVar8 = uVar5 + uVar8;\n        uVar12 = uVar12 | (uVar8 < uVar5 || 0xffffffff / uVar7 < uVar13) << 2 | 8;\n        pcVar9 = pcVar9 + 1;\n        *arg2 = pcVar9;\n        uVar13 = uVar8;\n    }\n    *arg2 = pcVar9 + -1;\n    if ((cVar11 != '\\0') && (pcVar9[-1] != cVar11)) {\n        puVar6 = fcn.1400138d8();\n        *puVar6 = 0x16;\n        fcn.1400104f4();\n    }\n    if ((uVar12 & 8) == 0) {\n        *arg2 = pcVar2;\n        if (arg2[1] == NULL) {\n            return 0;\n        }\n        *arg2[1] = pcVar2;\n        return 0;\n    }\n    if ((uVar12 & 4) == 0) {\n        if ((uVar12 & 1) == 0) {\n            if ((uVar12 & 2) == 0) goto code_r0x000140010a68;\ncode_r0x000140010a65:\n            uVar13 = -uVar13;\n            goto code_r0x000140010a68;\n        }\n        if ((uVar12 & 2) == 0) {\n            if (uVar13 < 0x80000000) goto code_r0x000140010a68;\n        }\n        else if (uVar13 < 0x80000001) goto code_r0x000140010a65;\n        uVar8 = 1;\n        uVar13 = uVar12;\n    }\n    else {\n        uVar13 = 1;\n        uVar8 = uVar12;\n    }\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x2c) = 0x22;\n    if ((uVar13 & uVar8) != 0) {\n        ppcVar3 = arg2[1];\n        if ((uVar12 & 2) == 0) {\n            if (ppcVar3 != NULL) {\n                *ppcVar3 = *arg2;\n            }\n            return 0x7fffffff;\n        }\n        if (ppcVar3 != NULL) {\n            *ppcVar3 = *arg2;\n        }\n        return 0x80000000;\n    }\n    uVar13 = 0xffffffff;\ncode_r0x000140010a68:\n    if (arg2[1] != NULL) {\n        *arg2[1] = *arg2;\n        return uVar13;\n    }\n    return uVar13;\n}\n",
        "token_count": 1663
    },
    "140010a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.140010a98(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    \n    iVar9 = *(arg1 + 0x34);\n    if (iVar9 < 6) {\n        if (iVar9 != 5) {\n            if (iVar9 != 0) {\n                if (iVar9 == 1) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 1;\n                    puVar3 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar3 + 8;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar3;\n                    }\n                    else {\n                        uVar7 = *puVar3;\n                    }\n                    goto code_r0x000140010b16;\n                }\n                iVar9 = iVar9 + -2;\n                if (iVar9 == 0) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 2;\n                    puVar2 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar2 + 4;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar2;\n                    }\n                    else {\n                        uVar7 = *puVar2;\n                    }\n                    goto code_r0x000140010b16;\n                }\n                goto code_r0x000140010ae6;\n            }\ncode_r0x000140010beb:\n            uVar6 = *(arg1 + 0x28);\n            iVar8 = 4;\n            puVar4 = *(arg1 + 0x18);\n            *(arg1 + 0x18) = puVar4 + 2;\n            if ((uVar6 >> 4 & 1) == 0) {\n                uVar7 = *puVar4;\n            }\n            else {\n                uVar7 = *puVar4;\n            }\n            goto code_r0x000140010b16;\n        }\n    }\n    else if (((iVar9 != 6) && (iVar9 != 7)) && (iVar9 = iVar9 + -9,  iVar9 != 0)) {\ncode_r0x000140010ae6:\n        if (iVar9 == 1) goto code_r0x000140010beb;\n        if (iVar9 != 2) {\n            iVar8 = *(arg1 + 8);\n            *(iVar8 + 0x30) = 1;\n            *(iVar8 + 0x2c) = 0x16;\n            uVar7 = fcn.140010428(0, 0, 0, 0);\n            return uVar7 & 0xffffffffffffff00;\n        }\n    }\n    uVar6 = *(arg1 + 0x28);\n    iVar8 = 8;\n    puVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = puVar1 + 1;\n    uVar7 = *puVar1;\ncode_r0x000140010b16:\n    if (((uVar6 >> 4 & 1) != 0) && (uVar7 < 0)) {\n        uVar7 = -uVar7;\n        uVar6 = uVar6 | 0x40;\n        *(arg1 + 0x28) = uVar6;\n    }\n    if (*(arg1 + 0x30) < 0) {\n        *(arg1 + 0x30) = 1;\n    }\n    else {\n        *(arg1 + 0x28) = uVar6 & 0xfffffff7;\n        fcn.14001073c(arg1 + 0x50, *(arg1 + 0x30), *(arg1 + 8));\n    }\n    if (uVar7 == 0) {\n        *(arg1 + 0x28) = *(arg1 + 0x28) & 0xffffffdf;\n    }\n    *(arg1 + 0x4c) = 0;\n    if (iVar8 == 8) {\n        fcn.140011244(arg1, uVar7);\n    }\n    else {\n        fcn.1400110a4(arg1, uVar7 & 0xffffffff);\n    }\n    uVar6 = *(arg1 + 0x28) >> 7;\n    pcVar5 = uVar6;\n    if (((uVar6 & 1) != 0) && ((*(arg1 + 0x48) == 0 || (pcVar5 = *(arg1 + 0x40),  *pcVar5 != '0')))) {\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        **(arg1 + 0x40) = 0x30;\n        *(arg1 + 0x48) = *(arg1 + 0x48) + 1;\n    }\n    return CONCAT71(pcVar5 >> 8, 1);\n}\n",
        "token_count": 1182
    },
    "140010c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.140010c9c(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    \n    iVar9 = *(arg1 + 0x34);\n    if (iVar9 < 6) {\n        if (iVar9 != 5) {\n            if (iVar9 != 0) {\n                if (iVar9 == 1) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 1;\n                    puVar3 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar3 + 8;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar3;\n                    }\n                    else {\n                        uVar7 = *puVar3;\n                    }\n                    goto code_r0x000140010d1a;\n                }\n                iVar9 = iVar9 + -2;\n                if (iVar9 == 0) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 2;\n                    puVar2 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar2 + 4;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar2;\n                    }\n                    else {\n                        uVar7 = *puVar2;\n                    }\n                    goto code_r0x000140010d1a;\n                }\n                goto code_r0x000140010cea;\n            }\ncode_r0x000140010def:\n            uVar6 = *(arg1 + 0x28);\n            iVar8 = 4;\n            puVar4 = *(arg1 + 0x18);\n            *(arg1 + 0x18) = puVar4 + 2;\n            if ((uVar6 >> 4 & 1) == 0) {\n                uVar7 = *puVar4;\n            }\n            else {\n                uVar7 = *puVar4;\n            }\n            goto code_r0x000140010d1a;\n        }\n    }\n    else if (((iVar9 != 6) && (iVar9 != 7)) && (iVar9 = iVar9 + -9,  iVar9 != 0)) {\ncode_r0x000140010cea:\n        if (iVar9 == 1) goto code_r0x000140010def;\n        if (iVar9 != 2) {\n            iVar8 = *(arg1 + 8);\n            *(iVar8 + 0x30) = 1;\n            *(iVar8 + 0x2c) = 0x16;\n            uVar7 = fcn.140010428(0, 0, 0, 0);\n            return uVar7 & 0xffffffffffffff00;\n        }\n    }\n    uVar6 = *(arg1 + 0x28);\n    iVar8 = 8;\n    puVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = puVar1 + 1;\n    uVar7 = *puVar1;\ncode_r0x000140010d1a:\n    if (((uVar6 >> 4 & 1) != 0) && (uVar7 < 0)) {\n        uVar7 = -uVar7;\n        uVar6 = uVar6 | 0x40;\n        *(arg1 + 0x28) = uVar6;\n    }\n    if (*(arg1 + 0x30) < 0) {\n        *(arg1 + 0x30) = 1;\n    }\n    else {\n        *(arg1 + 0x28) = uVar6 & 0xfffffff7;\n        fcn.14001073c(arg1 + 0x50, *(arg1 + 0x30), *(arg1 + 8));\n    }\n    if (uVar7 == 0) {\n        *(arg1 + 0x28) = *(arg1 + 0x28) & 0xffffffdf;\n    }\n    *(arg1 + 0x4c) = 0;\n    if (iVar8 == 8) {\n        fcn.1400112b4(arg1, uVar7);\n    }\n    else {\n        fcn.140011114(arg1, uVar7 & 0xffffffff);\n    }\n    uVar6 = *(arg1 + 0x28) >> 7;\n    pcVar5 = uVar6;\n    if (((uVar6 & 1) != 0) && ((*(arg1 + 0x48) == 0 || (pcVar5 = *(arg1 + 0x40),  *pcVar5 != '0')))) {\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        **(arg1 + 0x40) = 0x30;\n        *(arg1 + 0x48) = *(arg1 + 0x48) + 1;\n    }\n    return CONCAT71(pcVar5 >> 8, 1);\n}\n",
        "token_count": 1185
    },
    "140010ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.140010ea0(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    \n    iVar9 = *(arg1 + 0x34);\n    if (iVar9 < 6) {\n        if (iVar9 != 5) {\n            if (iVar9 != 0) {\n                if (iVar9 == 1) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 1;\n                    puVar3 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar3 + 8;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar3;\n                    }\n                    else {\n                        uVar7 = *puVar3;\n                    }\n                    goto code_r0x000140010f1e;\n                }\n                iVar9 = iVar9 + -2;\n                if (iVar9 == 0) {\n                    uVar6 = *(arg1 + 0x28);\n                    iVar8 = 2;\n                    puVar2 = *(arg1 + 0x18);\n                    *(arg1 + 0x18) = puVar2 + 4;\n                    if ((uVar6 >> 4 & 1) == 0) {\n                        uVar7 = *puVar2;\n                    }\n                    else {\n                        uVar7 = *puVar2;\n                    }\n                    goto code_r0x000140010f1e;\n                }\n                goto code_r0x000140010eee;\n            }\ncode_r0x000140010ff3:\n            uVar6 = *(arg1 + 0x28);\n            iVar8 = 4;\n            puVar4 = *(arg1 + 0x18);\n            *(arg1 + 0x18) = puVar4 + 2;\n            if ((uVar6 >> 4 & 1) == 0) {\n                uVar7 = *puVar4;\n            }\n            else {\n                uVar7 = *puVar4;\n            }\n            goto code_r0x000140010f1e;\n        }\n    }\n    else if (((iVar9 != 6) && (iVar9 != 7)) && (iVar9 = iVar9 + -9,  iVar9 != 0)) {\ncode_r0x000140010eee:\n        if (iVar9 == 1) goto code_r0x000140010ff3;\n        if (iVar9 != 2) {\n            iVar8 = *(arg1 + 8);\n            *(iVar8 + 0x30) = 1;\n            *(iVar8 + 0x2c) = 0x16;\n            uVar7 = fcn.140010428(0, 0, 0, 0);\n            return uVar7 & 0xffffffffffffff00;\n        }\n    }\n    uVar6 = *(arg1 + 0x28);\n    iVar8 = 8;\n    puVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = puVar1 + 1;\n    uVar7 = *puVar1;\ncode_r0x000140010f1e:\n    if (((uVar6 >> 4 & 1) != 0) && (uVar7 < 0)) {\n        uVar7 = -uVar7;\n        uVar6 = uVar6 | 0x40;\n        *(arg1 + 0x28) = uVar6;\n    }\n    if (*(arg1 + 0x30) < 0) {\n        *(arg1 + 0x30) = 1;\n    }\n    else {\n        *(arg1 + 0x28) = uVar6 & 0xfffffff7;\n        fcn.14001073c(arg1 + 0x50, *(arg1 + 0x30), *(arg1 + 8));\n    }\n    if (uVar7 == 0) {\n        *(arg1 + 0x28) = *(arg1 + 0x28) & 0xffffffdf;\n    }\n    *(arg1 + 0x4c) = 0;\n    if (iVar8 == 8) {\n        fcn.140011364(arg1, uVar7);\n    }\n    else {\n        fcn.1400111c0(arg1, uVar7 & 0xffffffff);\n    }\n    uVar6 = *(arg1 + 0x28) >> 7;\n    pcVar5 = uVar6;\n    if (((uVar6 & 1) != 0) && ((*(arg1 + 0x48) == 0 || (pcVar5 = *(arg1 + 0x40),  *pcVar5 != '0')))) {\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        **(arg1 + 0x40) = 0x30;\n        *(arg1 + 0x48) = *(arg1 + 0x48) + 1;\n    }\n    return CONCAT71(pcVar5 >> 8, 1);\n}\n",
        "token_count": 1186
    },
    "14001145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.140011454(int64_t arg1, uint *arg2)\n\n{\n    int64_t arg1_00;\n    ulong uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    uint64_t uStackX8;\n    uint64_t uStack24;\n    uint64_t *puStack16;\n    \n    arg1_00 = *(arg1 + 8);\n    puStack16 = &uStackX8;\n    uStackX8 = *(arg1 + 0x10) - 1;\n    uVar1 = *(arg1_00 + 0x2c);\n    uStack24 = uStackX8;\n    uVar2 = fcn.1400107e4(arg1_00, &uStack24, 10);\n    *arg2 = uVar2;\n    uVar3 = *(arg1 + 8);\n    if (((*(uVar3 + 0x30) == '\\0') || (uVar4 = 0,  *(uVar3 + 0x2c) != 0x22)) &&\n       (uVar3 = uStackX8,  uVar4 = 0,  *(arg1 + 0x10) <= uStackX8)) {\n        *(arg1 + 0x10) = uStackX8;\n        uVar4 = 1;\n    }\n    *(arg1_00 + 0x2c) = uVar1;\n    return uVar3 & 0xffffffffffffff00 | uVar4;\n}\n",
        "token_count": 345
    },
    "1400114e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.1400114e4(int64_t arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    \n    iVar7 = *(arg1 + 8);\n    if (*(arg1 + 0x460) == 0) {\n        *(iVar7 + 0x30) = 1;\n        *(iVar7 + 0x2c) = 0x16;\ncode_r0x000140011849:\n        fcn.140010428(0, 0, 0, 0);\ncode_r0x000140011862:\n        uVar4 = 0xffffffff;\n    }\n    else {\n        pcVar6 = *(arg1 + 0x10);\n        if (pcVar6 == NULL) {\n            *(iVar7 + 0x30) = 1;\n            *(iVar7 + 0x2c) = 0x16;\n            fcn.140010428(0, 0, 0, 0);\n            uVar4 = 0xffffffff;\n        }\n        else {\n            iVar3 = *(arg1 + 0x468) + 1;\n            *(arg1 + 0x468) = iVar3;\n            while (iVar3 != 2) {\n                *(arg1 + 0x48) = 0;\n                *(arg1 + 0x24) = 0;\n                cVar2 = *pcVar6;\n                while( true ) {\n                    pcVar6 = pcVar6 + 1;\n                    *(arg1 + 0x10) = pcVar6;\n                    *(arg1 + 0x39) = cVar2;\n                    if ((cVar2 == '\\0') || (*(arg1 + 0x20) < 0)) break;\n                    uVar5 = 0;\n                    if (cVar2 - 0x20U < 0x5b) {\n                        uVar5 = *((cVar2 - 0x20U & 0x7f) * 2 + 0x14002c841);\n                    }\n                    uVar5 = *((uVar5 * 9 + *(arg1 + 0x24) & 0x7f) * 2 + 0x14002c840);\n                    *(arg1 + 0x24) = uVar5;\n                    if (7 < uVar5) goto code_r0x000140011836;\n                    if (uVar5 == 0) {\n                        iVar7 = *(arg1 + 8);\n                        *(arg1 + 0x4c) = 0;\n                        if (*(iVar7 + 0x28) == '\\0') {\n                            fcn.1400122f0(iVar7);\n                        }\n                        cVar2 = *(arg1 + 0x39);\n                        if ((-2 < cVar2) && ((*(**(iVar7 + 0x18) + cVar2 * 2) & 0x8000) != 0)) {\n                            iVar7 = *(arg1 + 0x460);\n                            if (*(iVar7 + 0x10) == *(iVar7 + 8)) {\n                                if (*(iVar7 + 0x18) == '\\0') {\n                                    *(arg1 + 0x20) = 0xffffffff;\n                                }\n                                else {\n                                    *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                                }\n                            }\n                            else {\n                                *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                                *(iVar7 + 0x10) = *(iVar7 + 0x10) + 1;\n                                ***(arg1 + 0x460) = cVar2;\n                                **(arg1 + 0x460) = **(arg1 + 0x460) + 1;\n                            }\n                            cVar2 = **(arg1 + 0x10);\n                            *(arg1 + 0x10) = *(arg1 + 0x10) + 1;\n                            *(arg1 + 0x39) = cVar2;\n                            if (cVar2 == '\\0') {\n                                iVar7 = *(arg1 + 8);\n                                *(iVar7 + 0x30) = 1;\n                                *(iVar7 + 0x2c) = 0x16;\n                                fcn.140010428(0, 0, 0, 0);\n                                goto code_r0x000140011836;\n                            }\n                        }\n                        iVar7 = *(arg1 + 0x460);\n                        if (*(iVar7 + 0x10) == *(iVar7 + 8)) {\n                            if (*(iVar7 + 0x18) == '\\0') {\n                                *(arg1 + 0x20) = 0xffffffff;\n                            }\n                            else {\n                                *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                            }\n                        }\n                        else {\n                            *(arg1 + 0x20) = *(arg1 + 0x20) + 1;\n                            *(iVar7 + 0x10) = *(iVar7 + 0x10) + 1;\n                            ***(arg1 + 0x460) = cVar2;\n                            **(arg1 + 0x460) = **(arg1 + 0x460) + 1;\n                        }\n                    }\n                    else if (uVar5 == 1) {\n                        *(arg1 + 0x28) = 0;\n                        *(arg1 + 0x38) = 0;\n                        *(arg1 + 0x30) = 0xffffffff;\n                        *(arg1 + 0x34) = 0;\n                        *(arg1 + 0x4c) = 0;\n                    }\n                    else if (uVar5 == 2) {\n                        if (cVar2 == ' ') {\n                            *(arg1 + 0x28) = *(arg1 + 0x28) | 2;\n                        }\n                        else if (cVar2 == '#') {\n                            *(arg1 + 0x28) = *(arg1 + 0x28) | 0x20;\n                        }\n                        else if (cVar2 == '+') {\n                            *(arg1 + 0x28) = *(arg1 + 0x28) | 1;\n                        }\n                        else if (cVar2 == '-') {\n                            *(arg1 + 0x28) = *(arg1 + 0x28) | 4;\n                        }\n                        else if (cVar2 == '0') {\n                            *(arg1 + 0x28) = *(arg1 + 0x28) | 8;\n                        }\n                    }\n                    else {\n                        if (uVar5 == 3) {\n                            if (cVar2 == '*') {\n                                piVar1 = *(arg1 + 0x18);\n                                *(arg1 + 0x18) = piVar1 + 2;\n                                iVar3 = *piVar1;\n                                *(arg1 + 0x2c) = iVar3;\n                                if (iVar3 < 0) {\n                                    *(arg1 + 0x28) = *(arg1 + 0x28) | 4;\n                                    *(arg1 + 0x2c) = -iVar3;\n                                }\ncode_r0x000140011679:\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                iVar7 = arg1 + 0x2c;\ncode_r0x000140011624:\n                                cVar2 = fcn.140011454(arg1, iVar7);\n                            }\n                        }\n                        else {\n                            if (uVar5 == 4) {\n                                *(arg1 + 0x30) = 0;\n                                goto code_r0x0001400117b5;\n                            }\n                            if (uVar5 == 5) {\n                                if (cVar2 == '*') {\n                                    piVar1 = *(arg1 + 0x18);\n                                    *(arg1 + 0x18) = piVar1 + 2;\n                                    iVar3 = *piVar1;\n                                    if (iVar3 < 0) {\n                                        iVar3 = -1;\n                                    }\n                                    *(arg1 + 0x30) = iVar3;\n                                    goto code_r0x000140011679;\n                                }\n                                iVar7 = arg1 + 0x30;\n                                goto code_r0x000140011624;\n                            }\n                            if (uVar5 == 6) {\n                                cVar2 = fcn.140011868(arg1);\n                            }\n                            else {\n                                if (uVar5 != 7) goto code_r0x000140011862;\n                                cVar2 = fcn.1400119f0(arg1);\n                            }\n                        }\n                        if (cVar2 == '\\0') goto code_r0x000140011862;\n                    }\ncode_r0x0001400117b5:\n                    pcVar6 = *(arg1 + 0x10);\n                    cVar2 = *pcVar6;\n                }\n                if ((*(arg1 + 0x24) != '\\0') && (*(arg1 + 0x24) != '\\a')) {\ncode_r0x000140011836:\n                    iVar7 = *(arg1 + 8);\n                    *(iVar7 + 0x30) = 1;\n                    *(iVar7 + 0x2c) = 0x16;\n                    goto code_r0x000140011849;\n                }\n                *(arg1 + 0x468) = *(arg1 + 0x468) + 1;\n                iVar3 = *(arg1 + 0x468);\n            }\n            uVar4 = *(arg1 + 0x20);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 2160
    },
    "1400120c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.1400120c4(int64_t arg1)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uint64_t arg3;\n    \n    iVar2 = *(arg1 + 0x34);\n    if ((iVar2 == 2) ||\n       (((iVar2 != 3 && (iVar2 != 0xc)) && ((*(arg1 + 0x34) == 0xd || ((*(arg1 + 0x39) + 0x9dU & 0xef) == 0)))))) {\n        puVar1 = *(arg1 + 0x18);\n        puVar4 = *(arg1 + 0x458);\n        if (*(arg1 + 0x458) == NULL) {\n            puVar4 = arg1 + 0x50;\n        }\n        *(arg1 + 0x18) = puVar1 + 8;\n        *puVar4 = *puVar1;\n        *(arg1 + 0x48) = 1;\n    }\n    else {\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 8;\n        iVar3 = *(arg1 + 0x458);\n        if (iVar3 == 0) {\n            iVar3 = arg1 + 0x50;\n            arg3 = 0x200;\n        }\n        else {\n            arg3 = *(arg1 + 0x450) >> 1;\n        }\n        iVar2 = fcn.14001b5e4(arg1 + 0x48, iVar3, arg3);\n        if (iVar2 != 0) {\n            *(arg1 + 0x38) = 1;\n        }\n    }\n    iVar3 = *(arg1 + 0x458);\n    if (*(arg1 + 0x458) == 0) {\n        iVar3 = arg1 + 0x50;\n    }\n    *(arg1 + 0x40) = iVar3;\n    return 1;\n}\n",
        "token_count": 452
    },
    "14001219": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.140012198(int64_t arg1)\n\n{\n    uint64_t **ppuVar1;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int32_t iVar5;\n    \n    ppuVar1 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = ppuVar1 + 1;\n    puVar2 = *ppuVar1;\n    uVar4 = fcn.14001bac8();\n    if (uVar4 == 0) goto code_r0x0001400121bd;\n    iVar5 = *(arg1 + 0x34);\n    if (iVar5 < 6) {\n        if (iVar5 != 5) {\n            if (iVar5 != 0) {\n                if (iVar5 == 1) {\n                    uVar4 = uVar4 & 0xffffffffffffff00;\n                    *puVar2 = *(arg1 + 0x20);\n                    goto code_r0x000140012236;\n                }\n                iVar5 = iVar5 + -2;\n                if (iVar5 == 0) {\n                    uVar4 = *(arg1 + 0x20);\n                    *puVar2 = *(arg1 + 0x20);\n                    goto code_r0x000140012236;\n                }\n                goto code_r0x000140012225;\n            }\ncode_r0x000140012247:\n            uVar4 = *(arg1 + 0x20);\n            *puVar2 = *(arg1 + 0x20);\n            goto code_r0x000140012236;\n        }\n    }\n    else if (((iVar5 != 6) && (iVar5 != 7)) && (iVar5 = iVar5 + -9,  iVar5 != 0)) {\ncode_r0x000140012225:\n        if (iVar5 == 1) goto code_r0x000140012247;\n        if (iVar5 != 2) {\ncode_r0x0001400121bd:\n            iVar3 = *(arg1 + 8);\n            *(iVar3 + 0x30) = 1;\n            *(iVar3 + 0x2c) = 0x16;\n            uVar4 = fcn.140010428(0, 0, 0, 0);\n            return uVar4 & 0xffffffffffffff00;\n        }\n    }\n    uVar4 = *(arg1 + 0x20);\n    *puVar2 = uVar4;\ncode_r0x000140012236:\n    *(arg1 + 0x38) = 1;\n    return CONCAT71(uVar4 >> 8, 1);\n}\n",
        "token_count": 590
    },
    "14001712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.14001712c(char *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    int64_t *piVar4;\n    char cVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    \n    cVar5 = *arg1;\n    iVar6 = 0;\n    pcVar8 = arg1;\n    while (cVar5 != '\\0') {\n        iVar7 = iVar6 + 1;\n        if (cVar5 == '=') {\n            iVar7 = iVar6;\n        }\n        iVar6 = -1;\n        do {\n            iVar3 = iVar6;\n            iVar6 = iVar3 + 1;\n        } while (pcVar8[iVar6] != '\\0');\n        pcVar8 = pcVar8 + iVar3 + 2;\n        iVar6 = iVar7;\n        cVar5 = *pcVar8;\n    }\n    arg1_00 = fcn.14001c86c(iVar6 + 1, 8);\n    piVar4 = arg1_00;\n    if (arg1_00 == NULL) {\ncode_r0x00014001718f:\n        fcn.14001a674(0);\n        arg1_00 = NULL;\n    }\n    else {\n        for (; *arg1 != '\\0'; arg1 = arg1 + iVar7) {\n            iVar6 = -1;\n            do {\n                iVar7 = iVar6;\n                iVar6 = iVar7 + 1;\n            } while (arg1[iVar6] != '\\0');\n            iVar7 = iVar7 + 2;\n            if (*arg1 != '=') {\n                iVar6 = fcn.14001c86c(iVar7, 1);\n                if (iVar6 == 0) {\n                    fcn.14001723c(arg1_00);\n                    fcn.14001a674(0);\n                    goto code_r0x00014001718f;\n                }\n                iVar2 = fcn.14001962c(iVar6, iVar7, arg1);\n                if (iVar2 != 0) {\n                    fcn.140010544(0, 0, 0, 0, 0);\n                    pcVar1 = swi(3);\n                    piVar4 = (*pcVar1)();\n                    return piVar4;\n                }\n                *piVar4 = iVar6;\n                piVar4 = piVar4 + 1;\n                fcn.14001a674(0);\n            }\n        }\n        fcn.14001a674(0);\n    }\n    return arg1_00;\n}\n",
        "token_count": 588
    },
    "14001743": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.140017438(int32_t **arg1)\n\n{\n    ulong arg1_00;\n    \n    if (*0x140040098 != '\\0') {\n        return;\n    }\n    *0x14004008c = 1;\n    if (**arg1 == 0) {\n        if (*0x140040090 != *0x14003e020) {\n            (**0x14002a3f0)(0, 0, 0);\n        }\n        arg1_00 = 0x1400400a8;\n    }\n    else {\n        if (**arg1 != 1) goto code_r0x0001400174b2;\n        arg1_00 = 0x1400400c0;\n    }\n    fcn.1400193d4(arg1_00);\ncode_r0x0001400174b2:\n    if (**arg1 == 0) {\n        fcn.140017374(0x14002a498, 0x14002a4b8);\n    }\n    fcn.140017374(0x14002a4c0, 0x14002a4c8);\n    if (*arg1[1] == 0) {\n        *0x140040098 = '\\x01';\n        *arg1[2] = 1;\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "14001762": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.140017624(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong in_R9;\n    int64_t aiStackX16 [3];\n    \n    aiStackX16[0] = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, L\"mscoree.dll\", aiStackX16, in_R9, 0xfffffffffffffffe);\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(aiStackX16[0], \"CorExitProcess\"),  iVar1 != 0))\n    {\n        (**0x14002a3f0)(arg1);\n    }\n    if (aiStackX16[0] != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "140018e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.140018e50(int64_t arg1, int64_t *arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t arg1_00;\n    uint64_t uVar8;\n    \n    if (*(arg2 + 2) == 0) {\n        arg1_00 = arg1;\n        if (arg2[1] == 2) {\n            arg1_00 = *arg2;\n            cVar4 = fcn.140018fd4(arg1_00, 2);\n            if (cVar4 != '\\0') goto code_r0x000140018ec0;\n        }\n        if (arg2[1] == 3) {\n            iVar2 = *arg2;\n            uVar8 = 0;\n            do {\n                uVar1 = *(iVar2 + uVar8 * 2);\n                iVar6 = fcn.140012ef4(arg1_00);\n                arg1_00 = 0xff;\n                if (0xff < uVar1) {\n                    return 0;\n                }\n                if ((*(iVar6 + uVar1 * 2) >> 2 & 1) == 0) {\n                    return 0;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < 3);\ncode_r0x000140018ec0:\n            iVar5 = fcn.14001f048(arg1 + 0x80, 0x40, *arg2, arg2[1]);\n            if (((iVar5 == 0) && (iVar5 = fcn.140021a54(arg1 + 0x120, 0x55, 0x14002b6ac, 1),  iVar5 == 0)) &&\n               (iVar5 = fcn.140021a54(arg1 + 0x120, 0x55, *arg2, arg2[1]),  iVar5 == 0)) {\n                return 1;\n            }\n            fcn.140010544(0, 0, 0, 0, 0);\n            pcVar3 = swi(3);\n            uVar7 = (*pcVar3)();\n            return uVar7;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 530
    },
    "14001ac7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.14001ac7c(uchar *arg1, uchar *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uchar *puVar4;\n    uchar *arg2_00;\n    int64_t iVar5;\n    char in_R9B;\n    int32_t in_stack_00000028;\n    int32_t *in_stack_00000030;\n    uint8_t in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t iVar6;\n    \n    iVar2 = 0;\n    if (0 < arg3) {\n        iVar2 = arg3;\n    }\n    if (iVar2 + 9 < arg2) {\n        if ((in_stack_00000038 != 0) && (puVar4 = arg1 + (*in_stack_00000030 == 0x2d),  0 < arg3)) {\n            iVar5 = -1;\n            do {\n                iVar6 = iVar5;\n                iVar5 = iVar6 + 1;\n            } while (puVar4[iVar5] != '\\0');\n            fcn.14000bbe0(puVar4 + 1, puVar4, iVar6 + 2);\n        }\n        puVar4 = arg1;\n        if (*in_stack_00000030 == 0x2d) {\n            *arg1 = 0x2d;\n            puVar4 = arg1 + 1;\n        }\n        if (0 < arg3) {\n            *puVar4 = puVar4[1];\n            puVar4 = puVar4 + 1;\n            if (*(in_stack_00000040 + 0x28) == '\\0') {\n                fcn.1400122f0(in_stack_00000040);\n            }\n            *puVar4 = ***(*(in_stack_00000040 + 0x18) + 0xf8);\n        }\n        puVar4 = puVar4 + (in_stack_00000038 ^ 1) + arg3;\n        arg2_00 = arg1 + (arg2 - puVar4);\n        if (arg2 == 0xffffffffffffffff) {\n            arg2_00 = arg2;\n        }\n        iVar2 = fcn.14001962c(puVar4, arg2_00, \"e+000\");\n        if (iVar2 != 0) {\n            fcn.140010544(0, 0, 0, 0, 0);\n            pcVar1 = swi(3);\n            uVar3 = (*pcVar1)();\n            return uVar3;\n        }\n        if (in_R9B != '\\0') {\n            *puVar4 = 0x45;\n        }\n        if (**(in_stack_00000030 + 2) != '0') {\n            iVar2 = in_stack_00000030[1] + -1;\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n                puVar4[1] = 0x2d;\n            }\n            if (99 < iVar2) {\n                puVar4[2] = puVar4[2] + iVar2 / 100;\n                iVar2 = iVar2 % 100;\n            }\n            if (9 < iVar2) {\n                puVar4[3] = puVar4[3] + iVar2 / 10;\n                iVar2 = iVar2 % 10;\n            }\n            puVar4[4] = puVar4[4] + iVar2;\n        }\n        if ((in_stack_00000028 == 2) && (puVar4[2] == '0')) {\n            fcn.14000bbe0(puVar4 + 2, puVar4 + 3, 3);\n        }\n        uVar3 = 0;\n    }\n    else {\n        *(in_stack_00000040 + 0x30) = 1;\n        *(in_stack_00000040 + 0x2c) = 0x22;\n        fcn.140010428(0, 0, 0, 0);\n        uVar3 = 0x22;\n    }\n    return uVar3;\n}\n",
        "token_count": 920
    },
    "14001b79": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t fcn.14001b794(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        *0x1400400e0 = 0;\n    }\n    else {\n        if (*arg2 != 0) {\n            if (*(arg4 + 0x28) == '\\0') {\n                fcn.1400122f0(arg4);\n            }\n            piVar2 = *(arg4 + 0x18);\n            uVar1 = *(piVar2 + 0xc);\n            if (uVar1 != 0xfde9) {\n                if (piVar2[0x27] == 0) {\n                    if (arg1 != NULL) {\n                        *arg1 = *arg2;\n                    }\n                    return 1;\n                }\n                if (*(*piVar2 + *arg2 * 2) < 0) {\n                    if ((((1 < *(piVar2 + 1)) && (*(piVar2 + 1) <= arg3)) &&\n                        (iVar3 = fcn.14001ec54(uVar1, 9),  iVar3 != 0)) ||\n                       ((*(*(arg4 + 0x18) + 8) <= arg3 && (arg2[1] != 0)))) {\n                        return *(*(arg4 + 0x18) + 8);\n                    }\n                }\n                else {\n                    iVar3 = fcn.14001ec54(uVar1, 9);\n                    if (iVar3 != 0) {\n                        return 1;\n                    }\n                }\n                *(arg4 + 0x30) = 1;\n                *(arg4 + 0x2c) = 0x2a;\n                return -1;\n            }\n            iVar3 = fcn.140024e2c(arg1);\n            if (iVar3 < 0) {\n                return -1;\n            }\n            return iVar3;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 492
    },
    "14001d24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.14001d244(uint64_t *arg1, ushort *arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint uVar3;\n    uint64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = 0;\n    if (arg2 == NULL) {\n        if (arg3 == 0) {\ncode_r0x00014001d2b2:\n            if (arg1 != NULL) {\n                *arg1 = 0;\n            }\n            uVar2 = in_stack_00000028;\n            if (arg3 < in_stack_00000028) {\n                uVar2 = arg3;\n            }\n            if (uVar2 < 0x80000000) {\n                iVar1 = fcn.14001d364(arg2, arg4, uVar2, in_stack_00000030);\n                if (iVar1 == -1) {\n                    if (arg2 != NULL) {\n                        *arg2 = 0;\n                    }\n                    if (*(in_stack_00000030 + 0x30) == '\\0') {\n                        return 0;\n                    }\n                    return *(in_stack_00000030 + 0x2c);\n                }\n                uVar2 = iVar1 + 1;\n                if (arg2 == NULL) goto code_r0x00014001d33f;\n                if (arg3 < uVar2) {\n                    if (in_stack_00000028 != 0xffffffffffffffff) {\n                        *arg2 = 0;\n                        uVar3 = 0x22;\n                        goto code_r0x00014001d320;\n                    }\n                    uVar3 = 0x50;\n                    uVar2 = arg3;\n                }\n                arg2[uVar2 - 1] = 0;\ncode_r0x00014001d33f:\n                if (arg1 == NULL) {\n                    return uVar3;\n                }\n                *arg1 = uVar2;\n                return uVar3;\n            }\n            uVar3 = 0x16;\ncode_r0x00014001d320:\n            *(in_stack_00000030 + 0x2c) = uVar3;\n            *(in_stack_00000030 + 0x30) = 1;\n            goto code_r0x00014001d294;\n        }\n    }\n    else if (arg3 != 0) {\n        *arg2 = 0;\n        goto code_r0x00014001d2b2;\n    }\n    uVar3 = 0x16;\n    *(in_stack_00000030 + 0x30) = 1;\n    *(in_stack_00000030 + 0x2c) = 0x16;\ncode_r0x00014001d294:\n    fcn.140010428(0, 0, 0, 0);\n    return uVar3;\n}\n",
        "token_count": 650
    },
    "14001d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.14001d608(uint64_t *arg1, uchar *arg2, uint64_t arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint uVar3;\n    uint64_t in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    uVar3 = 0;\n    if (arg2 == NULL) {\n        if (arg3 != 0) goto code_r0x00014001d66b;\n    }\n    else {\n        if (arg3 == 0) {\ncode_r0x00014001d66b:\n            uVar3 = 0x16;\n            *(in_stack_00000030 + 0x30) = 1;\n            *(in_stack_00000030 + 0x2c) = 0x16;\n            goto code_r0x00014001d681;\n        }\n        *arg2 = 0;\n    }\n    if (arg1 != NULL) {\n        *arg1 = 0;\n    }\n    uVar2 = in_stack_00000028;\n    if (arg3 < in_stack_00000028) {\n        uVar2 = arg3;\n    }\n    if (0x7fffffff < uVar2) {\n        uVar3 = 0x16;\ncode_r0x00014001d6dc:\n        *(in_stack_00000030 + 0x2c) = uVar3;\n        *(in_stack_00000030 + 0x30) = 1;\ncode_r0x00014001d681:\n        fcn.140010428(0, 0, 0, 0);\n        return uVar3;\n    }\n    iVar1 = fcn.14001d71c(arg2, arg4, uVar2, in_stack_00000030);\n    if (iVar1 == -1) {\n        if (arg2 != NULL) {\n            *arg2 = 0;\n        }\n        if (*(in_stack_00000030 + 0x30) == '\\0') {\n            return 0;\n        }\n        return *(in_stack_00000030 + 0x2c);\n    }\n    uVar2 = iVar1 + 1;\n    if (arg2 == NULL) goto code_r0x00014001d6f7;\n    if (arg3 < uVar2) {\n        if (in_stack_00000028 != 0xffffffffffffffff) {\n            *arg2 = 0;\n            uVar3 = 0x22;\n            goto code_r0x00014001d6dc;\n        }\n        uVar3 = 0x50;\n        uVar2 = arg3;\n    }\n    arg2[uVar2 - 1] = 0;\ncode_r0x00014001d6f7:\n    if (arg1 == NULL) {\n        return uVar3;\n    }\n    *arg1 = uVar2;\n    return uVar3;\n}\n",
        "token_count": 651
    },
    "14001f52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.14001f528(int64_t arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    \n    uVar5 = 0;\n    iVar3 = -1;\n    do {\n        iVar6 = iVar3;\n        iVar3 = iVar6 + 1;\n    } while (*(arg1 + iVar3) != '\\0');\n    uVar4 = iVar6 + 2;\n    if (~arg3 < uVar4) {\n        return 0xc;\n    }\n    iVar6 = arg3 + 1 + uVar4;\n    iVar3 = fcn.14001c86c(iVar6, 1);\n    if (((arg3 != 0) && (iVar2 = fcn.1400254b0(iVar3, iVar6, arg2, arg3),  iVar2 != 0)) ||\n       (iVar2 = fcn.1400254b0(iVar3 + arg3, iVar6 - arg3, arg1, uVar4),  iVar2 != 0)) {\n        fcn.140010544(0, 0, 0, 0, 0);\n        pcVar1 = swi(3);\n        uVar5 = (*pcVar1)();\n        return uVar5;\n    }\n    if (arg4[1] == arg4[2]) {\n        if (*arg4 == 0) {\n            iVar6 = fcn.14001c86c(4, 8);\n            *arg4 = iVar6;\n            fcn.14001a674(0);\n            iVar6 = *arg4;\n            if (iVar6 != 0) {\n                arg4[1] = iVar6;\n                arg4[2] = iVar6 + 0x20;\n                goto code_r0x00014001f67e;\n            }\n        }\n        else {\n            uVar4 = arg4[2] - *arg4 >> 3;\n            if (uVar4 < 0x8000000000000000) {\n                iVar6 = fcn.140023434(*arg4, uVar4 * 2, 8);\n                if (iVar6 != 0) {\n                    *arg4 = iVar6;\n                    arg4[1] = iVar6 + uVar4 * 8;\n                    arg4[2] = iVar6 + uVar4 * 0x10;\n                    fcn.14001a674(0);\n                    goto code_r0x00014001f67e;\n                }\n                fcn.14001a674(0);\n            }\n        }\n        uVar5 = 0xc;\n        fcn.14001a674(iVar3);\n    }\n    else {\ncode_r0x00014001f67e:\n        *arg4[1] = iVar3;\n        arg4[1] = arg4[1] + 8;\n    }\n    fcn.14001a674(0);\n    return uVar5;\n}\n",
        "token_count": 686
    },
    "14002276": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.14002276c(int16_t *arg1, uint32_t *arg2, int16_t **arg3)\n\n{\n    int16_t **ppiVar1;\n    int16_t **ppiVar2;\n    ushort *arg3_00;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t *noname_1;\n    ulong uVar7;\n    int16_t **ppiVar8;\n    int64_t iVar9;\n    \n    noname_1 = arg2;\n    ppiVar8 = arg3;\n    iVar6 = fcn.14001a314(arg1, arg2);\n    ppiVar2 = iVar6 + 0x98;\n    *(iVar6 + 0xa8) = 0;\n    arg3_00 = iVar6 + 0x2f0;\n    *ppiVar2 = arg1;\n    ppiVar1 = iVar6 + 0xa0;\n    *arg3_00 = 0;\n    *ppiVar1 = arg1 + 0x40;\n    if (arg1[0x40] != 0) {\n        noname_1 = 0x16;\n        ppiVar8 = ppiVar1;\n        fcn.1400226d0(0x1400331a0, 0x16, ppiVar1);\n    }\n    if (**ppiVar2 == 0) {\n        fcn.140021fcc(ppiVar2);\ncode_r0x000140022839:\n        if (*(iVar6 + 0xa8) == 0) {\n            return 0;\n        }\n    }\n    else {\n        if (**ppiVar1 == 0) {\n            fcn.140022144(ppiVar2, noname_1, ppiVar8);\n        }\n        else {\n            fcn.140022074(ppiVar2, noname_1, ppiVar8);\n        }\n        if (*(iVar6 + 0xa8) == 0) {\n            uVar7 = 0x40;\n            ppiVar8 = ppiVar2;\n            iVar4 = fcn.1400226d0(0x140032d80, 0x40, ppiVar2);\n            if (iVar4 != 0) {\n                if (**ppiVar1 == 0) {\n                    fcn.140022144(ppiVar2, uVar7, ppiVar8);\n                }\n                else {\n                    fcn.140022074(ppiVar2, uVar7, ppiVar8);\n                }\n            }\n            goto code_r0x000140022839;\n        }\n    }\n    if (((arg1 == NULL) || (*arg1 != 0)) || (arg1[0x80] != 0)) {\n        uVar5 = fcn.1400225a8(-(arg1 != NULL) & arg1 + 0x80, ppiVar2);\n    }\n    else {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    if (((uVar5 != 0) && (uVar5 != 65000)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar5 & 0xffff),  iVar4 != 0)) {\n        if (arg2 != NULL) {\n            *arg2 = uVar5;\n        }\n        if (arg3 == NULL) {\n            return 1;\n        }\n        ppiVar1 = arg3 + 0x24;\n        *ppiVar1 = 0;\n        iVar6 = -1;\n        do {\n            iVar9 = iVar6;\n            iVar6 = iVar9 + 1;\n        } while (arg3_00[iVar6] != 0);\n        iVar4 = fcn.14001f048(ppiVar1, 0x55, arg3_00, iVar9 + 2);\n        if (iVar4 != 0) {\ncode_r0x0001400229c9:\n            fcn.140010544(0, 0, 0, 0, 0);\n            pcVar3 = swi(3);\n            uVar7 = (*pcVar3)();\n            return uVar7;\n        }\n        iVar4 = fcn.14001ccb0(ppiVar1, 0x1001, arg3, 0x40);\n        if (iVar4 != 0) {\n            ppiVar2 = arg3 + 0x10;\n            iVar4 = fcn.14001ccb0(ppiVar1, 0x1002, ppiVar2, 0x40);\n            if ((iVar4 != 0) &&\n               (((iVar6 = fcn.140028f7c(ppiVar2),  iVar6 == 0 && (iVar6 = fcn.140028f7c(ppiVar2),  iVar6 == 0)) ||\n                (iVar4 = fcn.14001ccb0(ppiVar1, 7, ppiVar2, 0x40),  iVar4 != 0)))) {\n                if (uVar5 != 0xfde9) {\n                    fcn.1400267bc(uVar5, arg3 + 0x20, 0x10, 10);\n                    return 1;\n                }\n                iVar4 = fcn.14001f048(arg3 + 0x20, 0x10, L\"utf8\", 5);\n                if (iVar4 == 0) {\n                    return 1;\n                }\n                goto code_r0x0001400229c9;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1229
    },
    "1400239e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.1400239e8(char *arg1, uint64_t arg2, ulong arg3, uint32_t *arg4)\n\n{\n    char *arg1_00;\n    int64_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *arg2_00;\n    uint uVar4;\n    char *pcVar5;\n    int64_t iVar6;\n    uint32_t in_stack_00000028;\n    int64_t in_stack_00000038;\n    \n    if ((arg1 != NULL) && (arg2 != 0)) {\n        *arg1 = '\\0';\n        iVar3 = 0;\n        if (0 < arg3) {\n            iVar3 = arg3;\n        }\n        if (arg2 <= iVar3 + 1) {\n            uVar4 = 0x22;\n            goto code_r0x000140023a0c;\n        }\n        if (arg4 != NULL) {\n            arg1_00 = *(arg4 + 2);\n            pcVar5 = arg1 + 1;\n            *arg1 = '0';\n            arg2_00 = arg1_00;\n            for (; 0 < arg3; arg3._0_4_ = arg3 + -1) {\n                cVar2 = *arg2_00;\n                if (cVar2 == '\\0') {\n                    cVar2 = '0';\n                }\n                else {\n                    arg2_00 = arg2_00 + 1;\n                }\n                *pcVar5 = cVar2;\n                pcVar5 = pcVar5 + 1;\n            }\n            *pcVar5 = '\\0';\n            if ((-1 < arg3) && (cVar2 = fcn.140023918(arg1_00, arg2_00, *arg4, in_stack_00000028),  cVar2 != '\\0')) {\n                while( true ) {\n                    pcVar5 = pcVar5 + -1;\n                    if (*pcVar5 != '9') break;\n                    *pcVar5 = '0';\n                }\n                *pcVar5 = *pcVar5 + '\\x01';\n            }\n            if (*arg1 == '1') {\n                arg4[1] = arg4[1] + 1;\n            }\n            else {\n                iVar1 = -1;\n                do {\n                    iVar6 = iVar1;\n                    iVar1 = iVar6 + 1;\n                } while (arg1[iVar6 + 2] != '\\0');\n                fcn.14000bbe0(arg1, arg1 + 1, iVar6 + 2);\n            }\n            return 0;\n        }\n    }\n    uVar4 = 0x16;\ncode_r0x000140023a0c:\n    *(in_stack_00000038 + 0x2c) = uVar4;\n    *(in_stack_00000038 + 0x30) = 1;\n    fcn.140010428(0, 0, 0, 0);\n    return uVar4;\n}\n",
        "token_count": 662
    },
    "140024e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.140024e70(uint16_t *arg1, char **arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    char *pcVar3;\n    char *arg2_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint32_t auStackX8 [2];\n    int64_t in_stack_00000028;\n    \n    arg2_00 = *arg2;\n    iVar4 = 0;\n    if (arg1 == NULL) {\n        while( true ) {\n            if (*arg2_00 == '\\0') {\n                iVar5 = 1;\n            }\n            else if (arg2_00[1] == '\\0') {\n                iVar5 = 2;\n            }\n            else {\n                iVar5 = (arg2_00[2] != '\\0') + 3;\n            }\n            iVar5 = fcn.140027f48(0, arg2_00, iVar5, arg4);\n            if (iVar5 == -1) {\n                *(in_stack_00000028 + 0x30) = 1;\n                *(in_stack_00000028 + 0x2c) = 0x2a;\n                return -1;\n            }\n            if (iVar5 == 0) break;\n            if (iVar5 == 4) {\n                iVar4 = iVar4 + 1;\n            }\n            arg2_00 = arg2_00 + iVar5;\n            iVar4 = iVar4 + 1;\n        }\n    }\n    else {\n        puVar2 = arg1;\n        pcVar3 = arg2_00;\n        if (arg3 != 0) {\n            do {\n                if (*arg2_00 == '\\0') {\n                    iVar4 = 1;\n                }\n                else if (arg2_00[1] == '\\0') {\n                    iVar4 = 2;\n                }\n                else {\n                    iVar4 = (arg2_00[2] != '\\0') + 3;\n                }\n                iVar4 = fcn.140027f48(auStackX8, arg2_00, iVar4, arg4);\n                if (iVar4 == -1) {\n                    *arg2 = arg2_00;\n                    *(in_stack_00000028 + 0x30) = 1;\n                    *(in_stack_00000028 + 0x2c) = 0x2a;\n                    return -1;\n                }\n                pcVar3 = NULL;\n                if (iVar4 == 0) {\n                    *puVar2 = 0;\n                    break;\n                }\n                uVar1 = auStackX8[0];\n                if (0xffff < auStackX8[0]) {\n                    pcVar3 = arg2_00;\n                    if (arg3 < 2) break;\n                    auStackX8[0] = auStackX8[0] - 0x10000;\n                    arg3 = arg3 - 1;\n                    *puVar2 = auStackX8[0] >> 10 | 0xd800;\n                    puVar2 = puVar2 + 1;\n                    uVar1 = auStackX8[0] & 0x3ff | 0xdc00;\n                }\n                *puVar2 = uVar1;\n                pcVar3 = arg2_00 + iVar4;\n                puVar2 = puVar2 + 1;\n                arg3 = arg3 - 1;\n                arg2_00 = pcVar3;\n            } while (arg3 != 0);\n        }\n        *arg2 = pcVar3;\n        iVar4 = puVar2 - arg1 >> 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 818
    },
    "1400251d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.1400251d0(ulong arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    int32_t iVar8;\n    \n    if (((((arg1 & 0xfffff3ff) != 0) || (arg1 == 0xc00)) && ((arg2 != 0 || (arg3 < 1)))) && (-1 < arg3)) {\n        iVar6 = 0;\n        iVar5 = 0xe3;\n        do {\n            iVar4 = (iVar5 + iVar6) / 2;\n            uVar1 = *(iVar4 * 0x10 + 0x140033da0);\n            iVar8 = arg1 - uVar1;\n            if (arg1 == uVar1) {\n                if (iVar4 < 0) {\n                    return 0;\n                }\n                arg1_00 = *(iVar4 * 0x10 + 0x140033da8);\n                iVar5 = fcn.140016890(arg1_00, 0x55);\n                if (0 < arg3) {\n                    if (arg3 <= iVar5) {\n                        return 0;\n                    }\n                    iVar6 = fcn.14001e4bc(arg2, arg3, arg1_00);\n                    if (iVar6 != 0) {\n                        fcn.140010544(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        uVar7 = (*pcVar2)();\n                        return uVar7;\n                    }\n                }\n                return iVar5 + 1;\n            }\n            iVar3 = iVar4 + -1;\n            if (-1 < iVar8) {\n                iVar3 = iVar5;\n            }\n            iVar5 = iVar3;\n            if (-1 < iVar8) {\n                iVar6 = iVar4 + 1;\n            }\n        } while (iVar6 <= iVar5);\n    }\n    return 0;\n}\n",
        "token_count": 478
    },
    "14002736": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint fcn.140027360(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0xfffffffe) {\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        if ((arg1 < 0) || (*0x140040510 <= arg1)) {\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n        if (bVar1) {\n            iVar3 = arg1 >> 6;\n            if ((*(*(iVar3 * 8 + 0x140040110) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) != 0) {\n                fcn.140020a20(arg1 & 0xffffffff);\n                uVar2 = 0xffffffff;\n                if ((*(*(iVar3 * 8 + 0x140040110) + 0x38 + (arg1 & 0x3f) * 0x48) & 1) == 0) {\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 9;\n                    *(arg4 + 0x38) = 1;\n                    *(arg4 + 0x34) = 0;\n                }\n                else {\n                    uVar2 = fcn.140027480(arg1, arg2, arg3, arg4);\n                }\n                fcn.140020a48(arg1);\n                return uVar2;\n            }\n        }\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n        fcn.140010428(0, 0, 0, 0);\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 495
    },
    "14002838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.14002838c(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t aiStack24 [2];\n    \n    iVar4 = fcn.140020b2c(arg1 & 0xffffffff);\n    if (iVar4 == -1) {\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 9;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(iVar4, arg2, aiStack24, arg3);\n        if (iVar2 == 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.140013894(uVar3, arg4);\n        }\n        else if (aiStack24[0] != -1) {\n            puVar1 = *((arg1 >> 6) * 8 + 0x140040110) + 0x38 + (arg1 & 0x3f) * 0x48;\n            *puVar1 = *puVar1 & 0xfd;\n            return aiStack24[0];\n        }\n    }\n    return -1;\n}\n",
        "token_count": 301
    },
    "14000168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140001680(int64_t arg1, ulong arg2, int64_t **arg3)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t **ppiVar3;\n    code *pcVar4;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    double dVar8;\n    ulong ****ppppuVar9;\n    int32_t *piVar10;\n    uint64_t uVar11;\n    int64_t *piVar12;\n    uint64_t uVar13;\n    ulong ****ppppuVar14;\n    ulong uVar15;\n    uint64_t uVar16;\n    ulong ***pppuVar17;\n    int64_t **ppiVar18;\n    ulong ***pppuVar19;\n    int64_t iVar20;\n    int64_t *piVar21;\n    ulong ****ppppuVar22;\n    ulong ***pppuVar23;\n    double dVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uchar auStack472 [32];\n    int32_t iStack440;\n    char cStack424;\n    char cStack423;\n    uint32_t uStack420;\n    int32_t iStack416;\n    int32_t iStack412;\n    int32_t iStack408;\n    int32_t iStack400;\n    int32_t iStack396;\n    int32_t iStack392;\n    int32_t iStack388;\n    ulong ****ppppuStack384;\n    int64_t **ppiStack376;\n    int64_t iStack368;\n    int64_t iStack360;\n    int64_t *piStack352;\n    ulong uStack344;\n    int64_t *piStack336;\n    ulong uStack328;\n    int64_t *piStack320;\n    ulong uStack312;\n    int64_t **ppiStack304;\n    int32_t *piStack296;\n    ulong ****appppuStack288 [2];\n    ulong ***pppuStack272;\n    uint64_t uStack264;\n    ulong ****ppppuStack256;\n    uint uStack248;\n    uint uStack244;\n    ulong ***pppuStack240;\n    ulong ***pppuStack232;\n    uint64_t uStack224;\n    \n    uStack224 = *0x14003e020 ^ auStack472;\n    pppuVar17 = NULL;\n    pppuStack240 = NULL;\n    pppuVar19 = 0xf;\n    pppuStack232 = 0xf;\n    ppppuStack256 = NULL;\n    iStack408 = arg2;\n    ppiStack376 = arg3;\n    ppiStack304 = arg3;\n    if (arg2 == 0) {\n        puVar1 = *(arg1 + 0x48);\n        *puVar1[1] = 0;\n        puVar1 = *puVar1;\n        while (puVar1 != NULL) {\n            puVar2 = *puVar1;\n            fcn.140009d40(puVar1);\n            puVar1 = puVar2;\n        }\n        **(arg1 + 0x48) = *(arg1 + 0x48);\n        *(*(arg1 + 0x48) + 8) = *(arg1 + 0x48);\n        *(arg1 + 0x50) = 0;\n    }\n    else if (arg2 == 1) {\n        puVar1 = *(arg1 + 0x58);\n        *puVar1[1] = 0;\n        puVar1 = *puVar1;\n        while (puVar1 != NULL) {\n            puVar2 = *puVar1;\n            fcn.140009d40(puVar1);\n            puVar1 = puVar2;\n        }\n        **(arg1 + 0x58) = *(arg1 + 0x58);\n        *(*(arg1 + 0x58) + 8) = *(arg1 + 0x58);\n        *(arg1 + 0x60) = 0;\n    }\n    else if (arg2 == 2) {\n        puVar1 = *(arg1 + 0x68);\n        *puVar1[1] = 0;\n        puVar1 = *puVar1;\n        while (puVar1 != NULL) {\n            puVar2 = *puVar1;\n            fcn.140009d40(puVar1);\n            puVar1 = puVar2;\n        }\n        **(arg1 + 0x68) = *(arg1 + 0x68);\n        *(*(arg1 + 0x68) + 8) = *(arg1 + 0x68);\n        *(arg1 + 0x70) = 0;\n    }\n    ppiVar18 = **arg3;\n    ppppuVar22 = ppppuStack256;\n    if (ppiVar18 != *arg3) {\n        iStack360 = (arg2 + 8) * 0x10;\n        iStack368 = arg2 << 4;\n        uStack420 = 0;\n        uVar35 = *0x140038678;\n        uVar36 = *0x140038678 >> 0x20;\n        uVar33 = *0x140038698;\n        uVar34 = *0x140038698 >> 0x20;\n        uVar37 = *0x1400386a8;\n        uVar38 = *0x1400386a8 >> 0x20;\n        uVar39 = *0x140038690;\n        uVar40 = *0x140038690 >> 0x20;\n        uVar41 = *0x140038688;\n        uVar42 = *0x140038688 >> 0x20;\n        uVar43 = *0x140038670;\n        uVar44 = *0x140038670 >> 0x20;\n        pppuVar23 = pppuVar17;\n        do {\n            dVar24 = *(ppiVar18 + 2) * 0x14 * CONCAT44(uVar36, uVar35);\n            dVar7 = (*(iStack360 + arg1) - dVar24) + CONCAT44(uVar34, uVar33);\n            uVar29 = SUB84(dVar7, 0);\n            uVar30 = dVar7 >> 0x20;\n            dVar6 = (*(iStack368 + 0x88 + arg1) + CONCAT44(uVar38, uVar37)) - pppuVar17;\n            uVar27 = SUB84(dVar6, 0);\n            uVar28 = dVar6 >> 0x20;\n            dVar8 = dVar6 - CONCAT44(uVar40, uVar39);\n            uVar31 = SUB84(dVar8, 0);\n            uVar32 = dVar8 >> 0x20;\n            dVar5 = *(iStack360 + arg1) + dVar24 + CONCAT44(uVar34, uVar33);\n            uVar25 = SUB84(dVar5, 0);\n            uVar26 = dVar5 >> 0x20;\n            iStack400 = dVar7;\n            iStack396 = dVar8;\n            iStack392 = dVar5;\n            iStack388 = dVar6;\n            iStack416 = (dVar7 + dVar24) - CONCAT44(uVar42, uVar41);\n            iStack412 = dVar8 + CONCAT44(uVar44, uVar43);\n            ppppuVar9 = fcn.140003e50(appppuStack288, *(ppiVar18 + 2));\n            if (&ppppuStack256 != ppppuVar9) {\n                if (0xf < pppuVar19) {\n                    ppppuVar14 = ppppuVar22;\n                    if ((0xfff < pppuVar19 + 1U) &&\n                       (ppppuVar14 = ppppuVar22[-1],  0x1f < ppppuVar22 + (-8 - ppppuVar14))) goto code_r0x000140001f17;\n                    fcn.140009d40(ppppuVar14);\n                }\n                ppppuVar22 = *ppppuVar9;\n                uStack248 = *(ppppuVar9 + 1);\n                uStack244 = *(ppppuVar9 + 0xc);\n                pppuVar23 = ppppuVar9[2];\n                pppuStack232 = ppppuVar9[3];\n                ppppuVar9[2] = NULL;\n                ppppuVar9[3] = 0xf;\n                *ppppuVar9 = 0;\n                ppppuStack256 = ppppuVar22;\n                pppuStack240 = pppuVar23;\n            }\n            if (0xf < uStack264) {\n                ppppuVar9 = appppuStack288[0];\n                if ((0xfff < uStack264 + 1) &&\n                   (ppppuVar9 = appppuStack288[0][-1],  0x1f < appppuStack288[0] + (-8 - ppppuVar9)))\n                goto code_r0x000140001f17;\n                fcn.140009d40(ppppuVar9);\n            }\n            piVar10 = fcn.140009d74(0x40);\n            ppppuVar14 = NULL;\n            appppuStack288[0] = NULL;\n            pppuStack272 = NULL;\n            uStack264 = 0;\n            cStack424 = 0xf < pppuStack232;\n            ppppuVar9 = &ppppuStack256;\n            if (cStack424) {\n                ppppuVar9 = ppppuVar22;\n            }\n            piStack296 = piVar10;\n            if (0x7fffffffffffffff < pppuVar23) goto code_r0x000140001f42;\n            cStack423 = pppuVar23 < 0x10;\n            uStack264 = 0xf;\n            if (!cStack423) {\n                uVar16 = pppuVar23 | 0xf;\n                if (0x7fffffffffffffff < uVar16) {\n                    uVar16 = 0x7fffffffffffffff;\n                    uVar11 = 0x8000000000000027;\ncode_r0x000140001a6c:\n                    pppuVar19 = fcn.140009d74(uVar11);\n                    if (pppuVar19 != NULL) {\n                        ppppuVar14 = pppuVar19 + 0x27U & 0xffffffffffffffe0;\n                        ppppuVar14[-1] = pppuVar19;\n                        goto code_r0x000140001a9d;\n                    }\ncode_r0x000140001f23:\n                    fcn.140010514();\n                    goto code_r0x000140001f29;\n                }\n                if (uVar16 < 0x16) {\n                    uVar16 = 0x16;\n                }\n                uVar13 = uVar16 + 1;\n                if (uVar13 < 0x1000) {\n                    if (uVar13 != 0) {\n                        ppppuVar14 = fcn.140009d74(uVar13);\n                    }\ncode_r0x000140001a9d:\n                    appppuStack288[0] = ppppuVar14;\n                    pppuStack272 = pppuVar23;\n                    uStack264 = uVar16;\n                    fcn.14000bbe0(ppppuVar14, ppppuVar9, pppuVar23 + 1);\n                    goto code_r0x000140001ab8;\n                }\n                uVar11 = uVar16 + 0x28;\n                if (uVar13 < uVar11) goto code_r0x000140001a6c;\n                goto code_r0x000140001f1d;\n            }\n            pppuStack272 = pppuVar23;\n            fcn.14000bbe0(appppuStack288, ppppuVar9, 0x10);\ncode_r0x000140001ab8:\n            ppppuStack384 = appppuStack288;\n            ppppuVar9 = piVar10 + 8;\n            *ppppuVar9 = NULL;\n            *(piVar10 + 0xc) = 0;\n            *(piVar10 + 0xe) = 0xf;\n            *ppppuVar9 = 0;\n            if (ppppuVar9 != appppuStack288) {\n                ppppuVar14 = appppuStack288;\n                if (0xf < uStack264) {\n                    ppppuVar14 = appppuStack288[0];\n                }\n                fcn.140003200(ppppuVar9, ppppuVar14, pppuStack272);\n            }\n            *(piVar10 + 6) = CONCAT44(iStack412, iStack416);\n            piVar10[2] = iStack400;\n            piVar10[3] = iStack396;\n            piVar10[4] = iStack392;\n            piVar10[5] = iStack388;\n            *piVar10 = CONCAT44(uVar26, uVar25) - CONCAT44(uVar30, uVar29);\n            piVar10[1] = CONCAT44(uVar28, uVar27) - CONCAT44(uVar32, uVar31);\n            if (0xf < uStack264) {\n                ppppuVar9 = appppuStack288[0];\n                if ((0xfff < uStack264 + 1) &&\n                   (ppppuVar9 = appppuStack288[0][-1],  0x1f < appppuStack288[0] + (-8 - ppppuVar9)))\n                goto code_r0x000140001f23;\n                fcn.140009d40(ppppuVar9);\n            }\n            if (iStack408 == 0) {\n                piVar21 = arg1 + 0x48;\n                iVar20 = *piVar21;\n                if (*(arg1 + 0x50) == 0xaaaaaaaaaaaaaaa) {\ncode_r0x000140001f35:\n                    fcn.140008ee8(\"list too long\");\ncode_r0x000140001f42:\n                    fcn.140001210();\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                uStack312 = 0;\n                piStack320 = piVar21;\n                piVar12 = fcn.140009d74(0x18);\n                piVar12[2] = piVar10;\n                uStack312 = 0;\ncode_r0x000140001c36:\n                piVar21[1] = piVar21[1] + 1;\n                ppiVar3 = *(iVar20 + 8);\n                *piVar12 = iVar20;\n                piVar12[1] = ppiVar3;\n                *(iVar20 + 8) = piVar12;\n                *ppiVar3 = piVar12;\n            }\n            else {\n                if (iStack408 == 1) {\n                    piVar21 = arg1 + 0x58;\n                    iVar20 = *piVar21;\n                    if (*(arg1 + 0x60) == 0xaaaaaaaaaaaaaaa) goto code_r0x000140001f35;\n                    uStack328 = 0;\n                    piStack336 = piVar21;\n                    piVar12 = fcn.140009d74(0x18);\n                    piVar12[2] = piVar10;\n                    uStack328 = 0;\n                    goto code_r0x000140001c36;\n                }\n                if (iStack408 == 2) {\n                    piVar21 = arg1 + 0x68;\n                    iVar20 = *piVar21;\n                    if (*(arg1 + 0x70) == 0xaaaaaaaaaaaaaaa) goto code_r0x000140001f35;\n                    uStack344 = 0;\n                    piStack352 = piVar21;\n                    piVar12 = fcn.140009d74(0x18);\n                    piVar12[2] = piVar10;\n                    uStack344 = 0;\n                    goto code_r0x000140001c36;\n                }\n            }\n            ppppuVar14 = NULL;\n            appppuStack288[0] = NULL;\n            pppuStack272 = NULL;\n            ppppuVar9 = &ppppuStack256;\n            if (cStack424 != '\\0') {\n                ppppuVar9 = ppppuVar22;\n            }\n            uStack264 = 0xf;\n            if (cStack423 == '\\0') {\n                uVar16 = pppuVar23 | 0xf;\n                if (uVar16 < 0x8000000000000000) {\n                    if (uVar16 < 0x16) {\n                        uVar16 = 0x16;\n                    }\n                    uVar11 = uVar16 + 1;\n                    if (0xfff < uVar11) {\n                        uVar13 = uVar16 + 0x28;\n                        if (uVar13 <= uVar11) {\ncode_r0x000140001f29:\n                            fcn.140001170();\n                            pcVar4 = swi(3);\n                            (*pcVar4)();\n                            return;\n                        }\n                        goto code_r0x000140001cd9;\n                    }\n                    if (uVar11 != 0) {\n                        ppppuVar14 = fcn.140009d74(uVar11);\n                    }\n                }\n                else {\n                    uVar16 = 0x7fffffffffffffff;\n                    uVar13 = 0x8000000000000027;\ncode_r0x000140001cd9:\n                    pppuVar19 = fcn.140009d74(uVar13);\n                    if (pppuVar19 == NULL) goto code_r0x000140001f2f;\n                    ppppuVar14 = pppuVar19 + 0x27U & 0xffffffffffffffe0;\n                    ppppuVar14[-1] = pppuVar19;\n                }\n                appppuStack288[0] = ppppuVar14;\n                pppuStack272 = pppuVar23;\n                uStack264 = uVar16;\n                fcn.14000bbe0(ppppuVar14, ppppuVar9, pppuVar23 + 1);\n            }\n            else {\n                pppuStack272 = pppuVar23;\n                fcn.14000bbe0(appppuStack288, ppppuVar9, 0x10);\n            }\n            uVar25 = 0;\n            uVar15 = (*_sym.imp.GDI32.dll_CreatePen)(0, 1);\n            (*_sym.imp.GDI32.dll_SelectObject)(*(arg1 + 0xe0), uVar15);\n            uVar16 = (*_sym.imp.GDI32.dll_CreateSolidBrush)(0xff);\n            (*_sym.imp.GDI32.dll_SelectObject)(*(arg1 + 0xe0), uVar16);\n            iStack440 = iStack388;\n            (*_sym.imp.GDI32.dll_Ellipse)\n                      (*(arg1 + 0xe0), uVar16 & 0xffffffff00000000 | CONCAT44(uVar30, uVar29), \n                       CONCAT44(uVar25, CONCAT44(uVar32, uVar31)), iStack392);\n            (*_sym.imp.GDI32.dll_SetBkMode)(*(arg1 + 0xe0), 1);\n            (*_sym.imp.GDI32.dll_SetTextColor)(*(arg1 + 0xe0), 0xffff);\n            ppppuVar9 = appppuStack288;\n            if (0xf < uStack264) {\n                ppppuVar9 = appppuStack288[0];\n            }\n            iStack440 = pppuStack272._0_4_;\n            (*_sym.imp.GDI32.dll_TextOutA)(*(arg1 + 0xe0), iStack416, iStack412, ppppuVar9);\n            if (0xf < uStack264) {\n                ppppuVar9 = appppuStack288[0];\n                if ((0xfff < uStack264 + 1) &&\n                   (ppppuVar9 = appppuStack288[0][-1],  0x1f < appppuStack288[0] + (-8 - ppppuVar9))) {\ncode_r0x000140001f2f:\n                    fcn.140010514();\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                fcn.140009d40(ppppuVar9);\n            }\n            uStack420 = uStack420 + 0x12;\n            pppuVar17 = uStack420;\n            ppiVar18 = *ppiVar18;\n            pppuVar19 = pppuStack232;\n            arg3 = ppiStack376;\n        } while (ppiVar18 != *ppiStack376);\n    }\n    if (0xf < pppuVar19) {\n        ppppuVar9 = ppppuVar22;\n        if ((0xfff < pppuVar19 + 1U) && (ppppuVar9 = ppppuVar22[-1],  0x1f < ppppuVar22 + (-8 - ppppuVar9))) {\n            fcn.140010514();\ncode_r0x000140001f17:\n            fcn.140010514();\ncode_r0x000140001f1d:\n            fcn.140001170();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n        fcn.140009d40(ppppuVar9);\n    }\n    piVar21 = *arg3;\n    *piVar21[1] = 0;\n    puVar1 = *piVar21;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*arg3);\n    fcn.140009d20(uStack224 ^ auStack472);\n    return;\n}\n",
        "token_count": 5030
    },
    "140008ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140008ca0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    int32_t iVar10;\n    double dVar11;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint64_t uStack80;\n    uint32_t uStack72;\n    uchar uStack68;\n    ulong uStack64;\n    uint64_t lpString;\n    uint64_t var_28h;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    iVar7 = *0x1400408a0;\n    var_28h = 0x140008cc0;\n    uVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(*0x1400408a0 + 0xd8), *(*0x1400408a0 + 0xc0));\n    var_28h = 0x140008cce;\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar8, 1);\n    var_28h = 0x140008ce1;\n    uVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(iVar7 + 0xd8), *(iVar7 + 0xc4));\n    var_28h = 0x140008cef;\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar8, 1);\n    var_28h = 0x140008d02;\n    uVar8 = (*_sym.imp.USER32.dll_GetDlgItem)(*(iVar7 + 0xd8), *(iVar7 + 200));\n    var_28h = 0x140008d10;\n    (*_sym.imp.USER32.dll_ShowWindow)(uVar8);\n    iVar7 = *0x1400408a0;\n    var_28h = *0x14003e020 ^ &stack0xffffffffffffff78;\n    if (*(*0x1400408a0 + 0x40) == 0) {\n        uStack104 = 2;\n        fcn.140002400(*0x1400408a0, *(*0x1400408a0 + 0xb0), 1, 3);\n    }\n    if ((*(iVar7 + 0x40) & 3) == 0) {\n        piVar4 = **(iVar7 + 0x38);\n        iVar5 = *piVar4;\n        *(iVar7 + 0x40) = *(iVar7 + 0x40) + -1;\n        *piVar4[1] = iVar5;\n        *(iVar5 + 8) = piVar4[1];\n        fcn.140009d40(piVar4);\n        piVar4 = **(iVar7 + 0x38);\n        iVar5 = *piVar4;\n        uVar1 = *(piVar4 + 2);\n        *(iVar7 + 0x40) = *(iVar7 + 0x40) + -1;\n        *piVar4[1] = iVar5;\n        *(iVar5 + 8) = piVar4[1];\n        fcn.140009d40(piVar4);\n        piVar4 = **(iVar7 + 0x38);\n        iVar5 = *piVar4;\n        uVar2 = *(piVar4 + 2);\n        *(iVar7 + 0x40) = *(iVar7 + 0x40) + -1;\n        *piVar4[1] = iVar5;\n        *(iVar5 + 8) = piVar4[1];\n        fcn.140009d40(piVar4);\n        piVar4 = **(iVar7 + 0x38);\n        iVar3 = *(piVar4 + 2);\n        iVar5 = *piVar4;\n        *(iVar7 + 0x40) = *(iVar7 + 0x40) + -1;\n        *piVar4[1] = iVar5;\n        *(iVar5 + 8) = piVar4[1];\n        fcn.140009d40(piVar4);\n        fcn.1400025a0(iVar7, uVar1, uVar2);\n        uVar8 = *0x140038680;\n        iVar10 = *(iVar7 + 0xb4) + 1;\n        *(iVar7 + 0xb4) = iVar10;\n        dVar11 = fcn.140013ed0(uVar8);\n        if (iVar10 == dVar11 - *0x140038670) {\n            *(iVar7 + 0x79) = 1;\n        }\n        (*_sym.imp.USER32.dll_SetDlgItemInt)(*(iVar7 + 0xd8), *(iVar7 + 0xbc), iVar10, 0);\n        if (uVar1 == 1) {\n            uStack80._0_6_ = CONCAT24(*0x140038374, *0x140038370);\n            uStack64 = 6;\n            uStack80 = uStack80;\n        }\n        else if (uVar1 == 2) {\n            uStack80 = *0x140038378;\n            uStack64 = 0xc;\n            uStack72 = *0x140038380;\n            uStack68 = 0;\n        }\n        else if (uVar1 == 3) {\n            uStack72._0_3_ = CONCAT12(*0x140038392, *0x140038390);\n            uStack64 = 0xb;\n            uStack80 = *0x140038388;\n            uStack72 = uStack72;\n        }\n        else {\n            uStack80 = 0;\n            uStack64 = 0;\n        }\n        lpString = 0xf;\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(iVar7 + 0xd8), *(iVar7 + 0xc0), &stack0xffffffffffffffb0);\n        if (0xf < lpString) {\n            uVar9 = uStack80;\n            if (0xfff < lpString + 1) {\n                uVar9 = *(uStack80 - 8);\n                if (0x1f < (uStack80 - uVar9) - 8) {\n                    fcn.140010514(uVar9, lpString + 0x28);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n            }\n            fcn.140009d40(uVar9);\n        }\n        if (uVar2 == 1) {\n            uStack80._0_6_ = CONCAT24(*0x140038374, *0x140038370);\n            uStack64 = 6;\n            uStack80 = uStack80;\n        }\n        else if (uVar2 == 2) {\n            uStack80 = *0x140038378;\n            uStack64 = 0xc;\n            uStack72 = *0x140038380;\n            uStack68 = 0;\n        }\n        else if (uVar2 == 3) {\n            uStack72._0_3_ = CONCAT12(*0x140038392, *0x140038390);\n            uStack64 = 0xb;\n            uStack80 = *0x140038388;\n            uStack72 = uStack72;\n        }\n        else {\n            uStack80 = 0;\n            uStack64 = 0;\n        }\n        lpString = 0xf;\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(iVar7 + 0xd8), *(iVar7 + 0xc4), &stack0xffffffffffffffb0);\n        if (0xf < lpString) {\n            uVar9 = uStack80;\n            if (0xfff < lpString + 1) {\n                uVar9 = *(uStack80 - 8);\n                if (0x1f < (uStack80 - uVar9) - 8) {\n                    fcn.140010514(uVar9, lpString + 0x28);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n            }\n            fcn.140009d40(uVar9);\n        }\n        if (iVar3 == 1) {\n            uStack80._0_6_ = CONCAT24(*0x140038374, *0x140038370);\n            uStack64 = 6;\n            uStack80 = uStack80;\n        }\n        else if (iVar3 == 2) {\n            uStack80 = *0x140038378;\n            uStack64 = 0xc;\n            uStack72 = *0x140038380;\n            uStack68 = 0;\n        }\n        else if (iVar3 == 3) {\n            uStack72._0_3_ = CONCAT12(*0x140038392, *0x140038390);\n            uStack64 = 0xb;\n            uStack80 = *0x140038388;\n            uStack72 = uStack72;\n        }\n        else {\n            uStack80 = 0;\n            uStack64 = 0;\n        }\n        lpString = 0xf;\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(iVar7 + 0xd8), *(iVar7 + 200), &stack0xffffffffffffffb0);\n        if (0xf < lpString) {\n            uVar9 = uStack80;\n            if (0xfff < lpString + 1) {\n                uVar9 = *(uStack80 - 8);\n                if (0x1f < (uStack80 - uVar9) - 8) {\n                    fcn.140010514(uVar9, lpString + 0x28);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n            }\n            fcn.140009d40(uVar9);\n        }\n    }\n    fcn.140009d20(var_28h ^ &stack0xffffffffffffff78);\n    return;\n}\n",
        "token_count": 2278
    },
    "14000240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.140002400(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    int64_t **ppiVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    uint64_t arg2_00;\n    uint32_t in_stack_00000028;\n    \n    arg2_00 = arg2;\n    uVar4 = arg3;\n    uVar5 = in_stack_00000028;\n    if (arg2 != 1) {\n        do {\n            arg3._0_4_ = uVar5;\n            in_stack_00000028 = uVar4;\n            arg2._0_4_ = arg2_00 - 1;\n            arg2_00 = arg2;\n            fcn.140002400(arg1, arg2_00, in_stack_00000028, arg3);\n            fcn.140002400(arg1, 1, in_stack_00000028, arg4);\n            uVar4 = arg3;\n            uVar5 = in_stack_00000028;\n        } while (arg2 != 1);\n    }\n    piVar7 = arg1 + 0x38;\n    iVar1 = *piVar7;\n    if (*(arg1 + 0x40) != 0xaaaaaaaaaaaaaaa) {\n        piVar6 = fcn.140009d74(0x18);\n        *(piVar6 + 2) = arg2;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n        ppiVar2 = *(iVar1 + 8);\n        *piVar6 = iVar1;\n        piVar6[1] = ppiVar2;\n        *(iVar1 + 8) = piVar6;\n        *ppiVar2 = piVar6;\n        iVar1 = *piVar7;\n        if (*(arg1 + 0x40) != 0xaaaaaaaaaaaaaaa) {\n            piVar6 = fcn.140009d74(0x18);\n            *(piVar6 + 2) = arg3;\n            *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n            ppiVar2 = *(iVar1 + 8);\n            *piVar6 = iVar1;\n            piVar6[1] = ppiVar2;\n            *(iVar1 + 8) = piVar6;\n            *ppiVar2 = piVar6;\n            iVar1 = *piVar7;\n            if (*(arg1 + 0x40) != 0xaaaaaaaaaaaaaaa) {\n                piVar6 = fcn.140009d74(0x18);\n                *(piVar6 + 2) = arg4;\n                *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n                ppiVar2 = *(iVar1 + 8);\n                *piVar6 = iVar1;\n                piVar6[1] = ppiVar2;\n                *(iVar1 + 8) = piVar6;\n                *ppiVar2 = piVar6;\n                iVar1 = *piVar7;\n                if (*(arg1 + 0x40) != 0xaaaaaaaaaaaaaaa) {\n                    piVar7 = fcn.140009d74(0x18);\n                    *(piVar7 + 2) = in_stack_00000028;\n                    *(arg1 + 0x40) = *(arg1 + 0x40) + 1;\n                    ppiVar2 = *(iVar1 + 8);\n                    *piVar7 = iVar1;\n                    piVar7[1] = ppiVar2;\n                    *(iVar1 + 8) = piVar7;\n                    *ppiVar2 = piVar7;\n                    return;\n                }\n            }\n        }\n    }\n    fcn.140008ee8(\"list too long\");\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 903
    },
    "1400025a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400025a0(int64_t arg1, int64_t ***arg2, int64_t ***arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t **ppiVar5;\n    ulong uVar6;\n    int64_t ***pppiVar7;\n    int64_t iVar8;\n    int64_t **ppiVar9;\n    int32_t iVar10;\n    int64_t ***in_R9;\n    int64_t *piVar11;\n    uchar auStack88 [32];\n    int64_t **ppiStack56;\n    int64_t **ppiStack48;\n    int64_t ***lpRect;\n    uint64_t var_bp_18h;\n    ulong var_bp_10h;\n    ulong var_8h;\n    \n    var_bp_18h = *0x14003e020 ^ auStack88;\n    iVar4 = arg3;\n    iVar3 = arg2;\n    if (iVar3 == 1) {\n        pppiVar7 = &ppiStack56;\n        arg2 = fcn.140002dd0(pppiVar7, arg1 + 8);\n        iVar10 = *(arg1 + 0x10);\ncode_r0x00014000261e:\n        arg3 = iVar10 - 1;\n        ppiStack56._0_4_ = fcn.140002940(pppiVar7, arg2, arg3);\n    }\n    else {\n        if (iVar3 == 2) {\n            pppiVar7 = &ppiStack56;\n            arg2 = fcn.140002dd0(pppiVar7, arg1 + 0x18);\n            iVar10 = *(arg1 + 0x20);\n            goto code_r0x00014000261e;\n        }\n        if (iVar3 == 3) {\n            pppiVar7 = &ppiStack56;\n            arg2 = fcn.140002dd0(pppiVar7, arg1 + 0x28);\n            iVar10 = *(arg1 + 0x30);\n            goto code_r0x00014000261e;\n        }\n    }\n    if (ppiStack56 != -1) {\n        if (iVar3 == 1) {\n            ppiStack56 = arg1 + 8;\n            ppiStack48 = NULL;\n            lpRect = &ppiStack48;\n            in_R9 = *ppiStack56;\n            pppiVar7 = *in_R9;\n            while (arg2 = pppiVar7,  ppiVar9 = ppiStack48,  arg2 != in_R9) {\n                arg3 = *arg2;\n                pppiVar7 = arg3;\n                if (*(arg2 + 2) == ppiStack56) {\n                    *(arg1 + 0x10) = *(arg1 + 0x10) + -1;\n                    ppiVar9 = *arg2;\n                    *arg2 = NULL;\n                    ppiVar5 = arg2[1];\n                    *ppiVar5 = ppiVar9;\n                    ppiVar9[1] = ppiVar5;\n                    *lpRect = arg2;\n                    lpRect = arg2;\n                }\n            }\n            while (ppiVar9 != NULL) {\n                ppiVar5 = *ppiVar9;\n                arg2 = 0x18;\n                fcn.140009d40(ppiVar9);\n                ppiVar9 = ppiVar5;\n            }\n        }\n        else if (iVar3 == 2) {\n            ppiStack56 = arg1 + 0x18;\n            ppiStack48 = NULL;\n            in_R9 = *ppiStack56;\n            lpRect = &ppiStack48;\n            pppiVar7 = *in_R9;\n            while (arg2 = pppiVar7,  ppiVar9 = ppiStack48,  arg2 != in_R9) {\n                arg3 = *arg2;\n                pppiVar7 = arg3;\n                if (*(arg2 + 2) == ppiStack56) {\n                    *(arg1 + 0x20) = *(arg1 + 0x20) + -1;\n                    ppiVar9 = *arg2;\n                    *arg2 = NULL;\n                    ppiVar5 = arg2[1];\n                    *ppiVar5 = ppiVar9;\n                    ppiVar9[1] = ppiVar5;\n                    *lpRect = arg2;\n                    lpRect = arg2;\n                }\n            }\n            while (ppiVar9 != NULL) {\n                ppiVar5 = *ppiVar9;\n                arg2 = 0x18;\n                fcn.140009d40(ppiVar9);\n                ppiVar9 = ppiVar5;\n            }\n        }\n        else if (iVar3 == 3) {\n            ppiStack56 = arg1 + 0x28;\n            ppiStack48 = NULL;\n            in_R9 = *ppiStack56;\n            lpRect = &ppiStack48;\n            pppiVar7 = *in_R9;\n            while (arg2 = pppiVar7,  ppiVar9 = ppiStack48,  arg2 != in_R9) {\n                arg3 = *arg2;\n                pppiVar7 = arg3;\n                if (*(arg2 + 2) == ppiStack56) {\n                    *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n                    ppiVar9 = *arg2;\n                    *arg2 = NULL;\n                    ppiVar5 = arg2[1];\n                    *ppiVar5 = ppiVar9;\n                    ppiVar9[1] = ppiVar5;\n                    *lpRect = arg2;\n                    lpRect = arg2;\n                }\n            }\n            while (ppiVar9 != NULL) {\n                ppiVar5 = *ppiVar9;\n                arg2 = 0x18;\n                fcn.140009d40(ppiVar9);\n                ppiVar9 = ppiVar5;\n            }\n        }\n        if (iVar4 == 1) {\n            ppiVar9 = arg1 + 8;\n            piVar11 = *ppiVar9;\n            if (*(arg1 + 0x10) == 0xaaaaaaaaaaaaaaa) {\ncode_r0x000140002932:\n                fcn.140008ee8(\"list too long\");\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            ppiStack48 = NULL;\n            ppiStack56 = ppiVar9;\n            ppiVar5 = fcn.140009d74(0x18);\n            *(ppiVar5 + 2) = ppiStack56;\n        }\n        else if (iVar4 == 2) {\n            ppiVar9 = arg1 + 0x18;\n            piVar11 = *ppiVar9;\n            if (*(arg1 + 0x20) == 0xaaaaaaaaaaaaaaa) goto code_r0x000140002932;\n            ppiStack48 = NULL;\n            ppiStack56 = ppiVar9;\n            ppiVar5 = fcn.140009d74(0x18);\n            *(ppiVar5 + 2) = ppiStack56;\n        }\n        else {\n            if (iVar4 != 3) goto code_r0x000140002895;\n            ppiVar9 = arg1 + 0x28;\n            piVar11 = *ppiVar9;\n            if (*(arg1 + 0x30) == 0xaaaaaaaaaaaaaaa) goto code_r0x000140002932;\n            ppiStack48 = NULL;\n            ppiStack56 = ppiVar9;\n            ppiVar5 = fcn.140009d74(0x18);\n            *(ppiVar5 + 2) = ppiStack56;\n        }\n        ppiVar9[1] = ppiVar9[1] + 1;\n        piVar1 = piVar11[1];\n        *ppiVar5 = piVar11;\n        ppiVar5[1] = piVar1;\n        piVar11[1] = ppiVar5;\n        *piVar1 = ppiVar5;\n    }\ncode_r0x000140002895:\n    fcn.1400014e0(arg1, arg2, arg3, in_R9);\n    iVar8 = arg1 + 8;\n    uVar6 = fcn.140002dd0(&ppiStack56, iVar8);\n    fcn.1400015d0(arg1, iVar8, uVar6);\n    iVar8 = arg1 + 0x18;\n    uVar6 = fcn.140002dd0(&ppiStack56, iVar8);\n    fcn.1400015d0(arg1, iVar8, uVar6);\n    iVar8 = arg1 + 0x28;\n    uVar6 = fcn.140002dd0(&ppiStack56, iVar8);\n    fcn.1400015d0(arg1, iVar8, uVar6);\n    (*_sym.imp.USER32.dll_GetClientRect)(*(arg1 + 0xd8), &ppiStack56);\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(arg1 + 0xd8), &ppiStack56, 1);\n    fcn.140009d20(var_bp_18h ^ auStack88);\n    return;\n}\n",
        "token_count": 2117
    },
    "1400034a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_27h\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nulong **** fcn.1400034a0(code **arg1, ulong *arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t *arg1_00;\n    ulong ****ppppuVar4;\n    uint32_t uVar5;\n    ulong var_fh;\n    ulong var_17h;\n    ulong var_27h;\n    ulong var_2fh;\n    ulong var_37h;\n    uchar auStack184 [8];\n    code **ppcStack176;\n    code **ppcStack152;\n    uchar auStack144 [40];\n    ulong ****ppppuStack104;\n    uint uStack96;\n    uint uStack92;\n    ulong uStack88;\n    uint64_t uStack80;\n    uchar auStack72 [7];\n    ulong var_39h;\n    ulong var_31h;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    ulong var_9h;\n    ulong var_1h;\n    \n    uStack40 = *0x14003e020 ^ auStack184;\n    ppcStack152 = arg1;\n    arg1_00 = fcn.140002f60(auStack144, arg3);\n    ppppuStack104 = *arg2;\n    uStack96 = *(arg2 + 1);\n    uStack92 = *(arg2 + 0xc);\n    ppcStack152 = arg1_00;\n    if (arg1_00[2] != 0) {\n        fcn.140006020(arg1_00, 0x1400383b4, 2);\n    }\n    (**(*CONCAT44(uStack92, uStack96) + 0x10))(CONCAT44(uStack92, uStack96), &ppppuStack104, ppppuStack104 & 0xffffffff)\n    ;\n    ppppuVar4 = &ppppuStack104;\n    if (0xf < uStack80) {\n        ppppuVar4 = ppppuStack104;\n    }\n    fcn.140006020(arg1_00, ppppuVar4, uStack88);\n    if (0xf < uStack80) {\n        ppppuVar4 = ppppuStack104;\n        if (0xfff < uStack80 + 1) {\n            uVar5 = uStack80 + 0x28;\n            ppppuVar4 = ppppuStack104[-1];\n            if (0x1f < ppppuStack104 + (-8 - ppppuVar4)) goto code_r0x00014000364a;\n        }\n        fcn.140009d40(ppppuVar4);\n    }\n    _auStack72 = *arg1_00;\n    var_39h._1_4_ = *(arg1_00 + 1);\n    unique0x1000026c = *(arg1_00 + 0xc);\n    unique0x1000034c = *(arg1_00 + 2);\n    arg1_00[2] = 0;\n    arg1_00[3] = 0xf;\n    *arg1_00 = 0;\n    uStack48 = SUB168(unique0x1000034c >> 0x40, 0);\n    ppppuStack104 = auStack72;\n    if (0xf < uStack48) {\n        ppppuStack104 = _auStack72;\n    }\n    *arg1 = vtable.std::exception.0;\n    *(arg1 + 1) = ZEXT816(0);\n    uStack96 = CONCAT31(uStack96._1_3_, 1);\n    fcn.14000ba24(&ppppuStack104, arg1 + 1);\n    *arg1 = vtable.std::runtime_error.0;\n    if (0xf < uStack48) {\n        ppppuVar4 = _auStack72;\n        if (0xfff < uStack48 + 1) {\n            uVar5 = SUB164(stack0xffffffffffffffc8 >> 0x40, 0) + 0x28;\n            ppppuVar4 = _auStack72[-1];\n            if (0x1f < _auStack72 + (-8 - ppppuVar4)) {\n                fcn.140010514();\ncode_r0x00014000364a:\n                fcn.140010514();\n                *ppppuVar4 = vtable.std::exception.0;\n                ppcStack176 = arg1;\n                fcn.14000bab4(ppppuVar4 + 1);\n                if ((uVar5 & 1) != 0) {\n                    fcn.140009d40(ppppuVar4);\n                }\n                return ppppuVar4;\n            }\n        }\n        fcn.140009d40(ppppuVar4);\n    }\n    *arg1 = vtable.std::_System_error.0;\n    uVar1 = *(arg2 + 4);\n    uVar2 = *(arg2 + 1);\n    uVar3 = *(arg2 + 0xc);\n    *(arg1 + 3) = *arg2;\n    *(arg1 + 0x1c) = uVar1;\n    *(arg1 + 4) = uVar2;\n    *(arg1 + 0x24) = uVar3;\n    ppppuVar4 = fcn.140009d20(uStack40 ^ auStack184);\n    return ppppuVar4;\n}\n",
        "token_count": 1260
    },
    "140003cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140003cd0(code **arg1, int64_t arg2, uint *arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack120 [32];\n    uchar auStack88 [16];\n    int64_t aiStack72 [2];\n    uchar auStack56 [16];\n    uint64_t uStack40;\n    \n    uStack40 = *0x14003e020 ^ auStack120;\n    auStack88 = CONCAT88(auStack88._0_8_, arg1);\n    uVar3 = *arg3;\n    uVar4 = arg3[1];\n    uVar5 = arg3[2];\n    uVar6 = arg3[3];\n    aiStack72[0] = 0;\n    auStack56 = ZEXT816(0);\n    iVar2 = -1;\n    do {\n        iVar2 = iVar2 + 1;\n    } while (*(arg2 + iVar2) != '\\0');\n    fcn.140003080(aiStack72, arg2, iVar2);\n    auStack88 = CONCAT412(uVar6, CONCAT48(uVar5, CONCAT44(uVar4, uVar3)));\n    fcn.1400034a0(arg1, auStack88, aiStack72);\n    if (0xf < auStack56._8_8_) {\n        iVar2 = aiStack72[0];\n        if (0xfff < auStack56._8_8_ + 1) {\n            iVar2 = *(aiStack72[0] + -8);\n            if (0x1f < (aiStack72[0] - iVar2) - 8U) {\n                fcn.140010514(iVar2, auStack56._8_8_ + 0x28);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        fcn.140009d40(iVar2);\n    }\n    *arg1 = vtable.std::ios_base::failure.0;\n    fcn.140009d20(uStack40 ^ auStack120);\n    return;\n}\n",
        "token_count": 494
    },
    "140003e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_bp_18h\n// WARNING: Could not reconcile some variable overlaps\n\nulong * fcn.140003e50(ulong *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    ulong var_bp_20h;\n    ulong var_28h;\n    ulong var_38h;\n    int32_t iStack332;\n    code *apcStack328 [2];\n    int64_t iStack312;\n    int64_t iStack304;\n    int64_t *piStack296;\n    int64_t *piStack288;\n    int64_t iStack280;\n    uint64_t uStack272;\n    int64_t *piStack264;\n    uint64_t *puStack256;\n    ulong uStack248;\n    ulong *puStack240;\n    int64_t iStack232;\n    int64_t iStack224;\n    uint64_t uStack216;\n    uint32_t uStack208;\n    code *pcStack192;\n    ulong uStack184;\n    ulong uStack144;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_bp_70h;\n    ulong var_68h;\n    ulong var_bp_60h;\n    ulong var_bp_58h;\n    uchar auStack88 [8];\n    int64_t var_48h;\n    ulong var_40h;\n    ulong *puStack64;\n    ulong var_bp_18h;\n    ulong var_10h;\n    \n    apcStack328[0] = 0x140038488;\n    uStack184 = 0;\n    uStack144 = 0;\n    _var_80h = ZEXT816(0);\n    pcStack192 = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    puStack64 = arg1;\n    fcn.140005eb0(apcStack328, apcStack328 + 1);\n    *(apcStack328 + *(apcStack328[0] + 4)) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x88;\n    apcStack328[1] = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    iStack224 = fcn.140009d74(0x10);\n    uVar1 = fcn.140009208(1);\n    *(iStack224 + 8) = uVar1;\n    piStack296 = &iStack312;\n    piStack288 = &iStack304;\n    piStack264 = &iStack280;\n    puStack256 = &uStack272;\n    puStack240 = &uStack248;\n    iStack232 = &uStack248 + 4;\n    iStack304 = 0;\n    uStack272 = 0;\n    uStack248 = 0;\n    iStack312 = 0;\n    iStack280 = 0;\n    apcStack328[1] = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    uStack216 = 0;\n    uStack208 = 4;\n    fcn.140004980(apcStack328, arg2);\n    *arg1 = 0;\n    arg1[2] = 0;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    _auStack88 = ZEXT816(0);\n    if (((uStack208 & 0x22) == 2) || (uVar2 = *puStack256,  uVar2 == 0)) {\n        if (((uStack208 & 4) == 0) && (*piStack264 != 0)) {\n            auStack88 = *piStack296;\n            var_48h = (*puStack240 - auStack88) + *piStack264;\n        }\n        else {\n            var_48h = 0;\n            auStack88 = 0;\n        }\n    }\n    else {\n        auStack88 = *piStack288;\n        if (uVar2 < uStack216) {\n            uVar2 = uStack216;\n        }\n        var_48h = uVar2 - auStack88;\n    }\n    if (auStack88 != 0) {\n        fcn.140003200(arg1, auStack88, var_48h);\n    }\n    *(apcStack328 + *(apcStack328[0] + 4)) =\n         vtable.std::basic_ostringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x88;\n    fcn.140004670(apcStack328 + 1);\n    *(apcStack328 + *(apcStack328[0] + 4)) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(&iStack332 + *(apcStack328[0] + 4)) = *(apcStack328[0] + 4) + -0x10;\n    pcStack192 = vtable.std::ios_base.0;\n    fcn.1400098a8(&pcStack192);\n    return arg1;\n}\n",
        "token_count": 1236
    },
    "14000498": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.140004980(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    char cVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong arg3;\n    int64_t *piVar8;\n    uint32_t uVar9;\n    uint *arg2_00;\n    char *arg2_01;\n    uint32_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    int64_t *piStackX32;\n    uchar auStack168 [16];\n    ulong uStack152;\n    int64_t *piStack144;\n    int64_t *piStack136;\n    char cStack128;\n    uint uStack120;\n    uint uStack116;\n    int64_t *piStack112;\n    uchar auStack104 [48];\n    \n    piVar11 = NULL;\n    piVar8 = *(*(*arg1 + 4) + 0x48 + arg1);\n    piStack136 = arg1;\n    if (piVar8 != NULL) {\n        (**(*piVar8 + 8))();\n    }\n    iVar12 = *arg1;\n    if (*(*(iVar12 + 4) + 0x10 + arg1) == 0) {\n        piVar8 = *(*(iVar12 + 4) + 0x50 + arg1);\n        if ((piVar8 == NULL) || (piVar8 == arg1)) {\n            cStack128 = true;\n        }\n        else {\n            fcn.140006f20(piVar8);\n            iVar12 = *arg1;\n            cStack128 = *(*(iVar12 + 4) + 0x10 + arg1) == 0;\n        }\n    }\n    else {\n        cStack128 = false;\n    }\n    uVar10 = 0;\n    if (cStack128 != false) {\n        piVar8 = *(*(*(iVar12 + 4) + 0x40 + arg1) + 8);\n        piStack112 = piVar8;\n        (**(*piVar8 + 8))(piVar8);\n        fcn.140008f98(auStack168, 0);\n        piVar3 = *0x140040858;\n        uStack152 = *0x140040858;\n        if (*0x140040988 == 0) {\n            fcn.140008f98(&piStackX32, 0);\n            if (*0x140040988 == 0) {\n                *0x14003f330 = *0x14003f330 + 1;\n                *0x140040988 = *0x14003f330;\n            }\n            fcn.140009010(&piStackX32);\n        }\n        uVar4 = *0x140040988;\n        iVar12 = *0x140040988 * 8;\n        if ((piVar8[3] <= *0x140040988) || (piVar11 = *(iVar12 + piVar8[2]),  piVar11 == NULL)) {\n            if (*(piVar8 + 0x24) == '\\0') {\ncode_r0x000140004ac8:\n                if (piVar11 != NULL) goto code_r0x000140004b15;\n            }\n            else {\n                iVar6 = fcn.140009200();\n                if (uVar4 < *(iVar6 + 0x18)) {\n                    piVar11 = *(iVar12 + *(iVar6 + 0x10));\n                    goto code_r0x000140004ac8;\n                }\n            }\n            piVar11 = piVar3;\n            if (piVar3 == NULL) {\n                arg2_00 = &uStack120;\n                iVar12 = fcn.140007ae0(&uStack152, arg2_00);\n                piVar11 = uStack152;\n                if (iVar12 == -1) {\n                    fcn.140003830();\n                    goto code_r0x000140004c20;\n                }\n                piStackX32 = uStack152;\n                fcn.1400091c8(uStack152);\n                (**(*piVar11 + 8))(piVar11);\n                *0x140040858 = piVar11;\n            }\n        }\ncode_r0x000140004b15:\n        fcn.140009010(auStack168);\n        puVar7 = (**(*piVar8 + 0x10))(piVar8);\n        if (puVar7 != NULL) {\n            (***puVar7)(puVar7, 1);\n        }\n        iVar12 = *(*arg1 + 4) + arg1;\n        piStack144 = *(iVar12 + 0x48);\n        uStack152 = uStack152 & 0xffffffffffffff00;\n        uStack120 = uStack152;\n        uStack116 = uStack152._4_4_;\n        piStack112 = piStack144;\n        (**(*piVar11 + 0x30))(piVar11, &uStack152, &uStack120, iVar12, *(iVar12 + 0x58), arg2);\n        uVar10 = 0;\n        if (uStack152 != '\\0') {\n            uVar10 = 4;\n        }\n    }\n    iVar1 = *(*arg1 + 4);\n    uVar9 = 4;\n    if (*(arg1 + iVar1 + 0x48) != 0) {\n        uVar9 = 0;\n    }\n    uVar9 = uVar9 | uVar10 | *(arg1 + iVar1 + 0x10) & 0x17;\n    *(arg1 + iVar1 + 0x10) = uVar9;\n    uVar9 = uVar9 & *(arg1 + iVar1 + 0x14);\n    arg2_00 = uVar9;\n    if (uVar9 == 0) {\n        cVar5 = fcn.1400099a0();\n        if (cVar5 == '\\0') {\n            fcn.140007050(arg1);\n        }\n        piVar8 = *(*(*arg1 + 4) + 0x48 + arg1);\n        if (piVar8 != NULL) {\n            (**(*piVar8 + 0x10))();\n        }\n        return arg1;\n    }\ncode_r0x000140004c20:\n    if ((arg2_00 & 4) == 0) {\n        arg2_01 = \"ios_base::failbit set\";\n        if ((arg2_00 & 2) == 0) {\n            arg2_01 = \"ios_base::eofbit set\";\n        }\n    }\n    else {\n        arg2_01 = \"ios_base::badbit set\";\n    }\n    arg3 = fcn.140003480(&uStack120, 1);\n    fcn.140003cd0(auStack104, arg2_01, arg3);\n    fcn.14000bb04(auStack104, 0x14003c6d8);\n    pcVar2 = swi(3);\n    piVar8 = (*pcVar2)();\n    return piVar8;\n}\n",
        "token_count": 1587
    },
    "140005df": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.140005df0(int64_t **arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    bool bVar2;\n    \n    *arg1 = arg2;\n    piVar1 = *(*(*arg2 + 4) + 0x48 + arg2);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))();\n    }\n    if (*(*(*arg2 + 4) + 0x10 + arg2) == 0) {\n        piVar1 = *(*(*arg2 + 4) + 0x50 + arg2);\n        if ((piVar1 == NULL) || (piVar1 == arg2)) {\n            bVar2 = true;\n        }\n        else {\n            fcn.140006f20(piVar1);\n            bVar2 = *(*(*arg2 + 4) + 0x10 + arg2) == 0;\n        }\n    }\n    else {\n        bVar2 = false;\n    }\n    *(arg1 + 1) = bVar2;\n    return arg1;\n}\n",
        "token_count": 247
    },
    "140005eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140005eb0(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    int64_t *piVar7;\n    ulong *puVar8;\n    int64_t *piVar9;\n    char *arg2_00;\n    uchar auStack88 [8];\n    int64_t *piStack80;\n    uchar auStack72 [48];\n    \n    *(*(*arg1 + 4) + arg1) = vtable.std::basic_ostream_char__struct_std::char_traits_char__.0;\n    *(*(*arg1 + 4) + -4 + arg1) = *(*arg1 + 4) + -0x10;\n    iVar1 = *(*arg1 + 4);\n    *(arg1 + iVar1 + 0x40) = 0;\n    *(arg1 + iVar1 + 8) = 0;\n    *(arg1 + iVar1 + 0x14) = 0;\n    *(arg1 + iVar1 + 0x18) = 0x201;\n    *(arg1 + iVar1 + 0x20) = 6;\n    *(arg1 + iVar1 + 0x28) = 0;\n    *(arg1 + iVar1 + 0x30) = 0;\n    *(arg1 + iVar1 + 0x38) = 0;\n    *(arg1 + iVar1 + 0x10) = 0;\n    iVar5 = fcn.140009d74(0x10);\n    uVar6 = fcn.140009208(1);\n    *(iVar5 + 8) = uVar6;\n    *(arg1 + iVar1 + 0x40) = iVar5;\n    *(arg1 + iVar1 + 0x48) = arg2;\n    *(arg1 + iVar1 + 0x50) = 0;\n    piVar9 = *(iVar5 + 8);\n    piStack80 = piVar9;\n    (**(*piVar9 + 8))(piVar9);\n    piVar7 = fcn.140007180(auStack88);\n    uVar3 = (**(*piVar7 + 0x40))(piVar7, 0x20);\n    puVar8 = (**(*piVar9 + 0x10))(piVar9);\n    if (puVar8 != NULL) {\n        (***puVar8)(puVar8, 1);\n    }\n    *(arg1 + iVar1 + 0x58) = uVar3;\n    if (*(arg1 + iVar1 + 0x48) == 0) {\n        uVar4 = *(arg1 + iVar1 + 0x10) & 0x13 | 4;\n        *(arg1 + iVar1 + 0x10) = uVar4;\n        uVar4 = uVar4 & *(arg1 + iVar1 + 0x14);\n        if (uVar4 != 0) {\n            if ((uVar4 & 4) == 0) {\n                arg2_00 = \"ios_base::failbit set\";\n                if ((uVar4 & 2) == 0) {\n                    arg2_00 = \"ios_base::eofbit set\";\n                }\n            }\n            else {\n                arg2_00 = \"ios_base::badbit set\";\n            }\n            uVar6 = fcn.140003480(auStack88, 1);\n            fcn.140003cd0(auStack72, arg2_00, uVar6);\n            fcn.14000bb04(auStack72, 0x14003c6d8);\n            pcVar2 = swi(3);\n            piVar9 = (*pcVar2)();\n            return piVar9;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 860
    },
    "1400061b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400061b0(ulong noname_0, uchar (*arg2) [16], uchar (*arg3) [16], int64_t arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    uint8_t *puVar4;\n    code *pcVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int64_t *piVar9;\n    ulong *puVar10;\n    uint8_t *puVar11;\n    char *pcVar12;\n    ulong ******ppppppuVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint8_t in_stack_00000028;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack232 [32];\n    ulong uStack200;\n    uint8_t uStack192;\n    uchar auStack184 [8];\n    int64_t *piStack176;\n    uchar (*pauStack168) [16];\n    int64_t iStack160;\n    uchar (*pauStack144) [16];\n    ulong ******ppppppuStack136;\n    uint64_t var_71h;\n    uint64_t var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    uchar auStack88 [7];\n    uint64_t var_49h;\n    uint64_t var_41h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    *NULL = *0x14003e020 ^ auStack232;\n    if ((in_stack_00000038 == 0) || ((*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar16 = 0;\n    }\n    else {\n        uVar16 = 1;\n    }\n    if (((((*(arg4 + 0x18) & 0xe00) == 0x800) && (uVar16 + 2 <= in_stack_00000038)) &&\n        (in_stack_00000030[uVar16] == '0')) && ((in_stack_00000030[uVar16 + 1] + 0xa8U & 0xdf) == 0)) {\n        uVar16 = uVar16 + 2;\n    }\n    piVar3 = *(*(arg4 + 0x40) + 8);\n    _auStack184 = CONCAT88(piVar3, auStack184);\n    pauStack168 = arg3;\n    iStack160 = arg4;\n    pauStack144 = arg2;\n    (**(*piVar3 + 8))(piVar3);\n    piVar9 = fcn.140007180(auStack184);\n    if ((piVar3 != NULL) && (puVar10 = (**(*piVar3 + 0x10))(piVar3),  puVar10 != NULL)) {\n        (***puVar10)(puVar10, 1);\n    }\n    fcn.140004d00(&ppppppuStack136, in_stack_00000038);\n    ppppppuVar13 = &ppppppuStack136;\n    if (0xf < stack0xffffffffffffff90) {\n        ppppppuVar13 = ppppppuStack136;\n    }\n    (**(*piVar9 + 0x38))(piVar9, in_stack_00000030, in_stack_00000030 + in_stack_00000038, ppppppuVar13);\n    piVar3 = *(*(arg4 + 0x40) + 8);\n    _auStack184 = CONCAT88(piVar3, auStack184);\n    (**(*piVar3 + 8))(piVar3);\n    piVar9 = fcn.140007290(auStack184);\n    if ((piVar3 != NULL) && (puVar10 = (**(*piVar3 + 0x10))(piVar3),  puVar10 != NULL)) {\n        (***puVar10)(puVar10, 1);\n    }\n    (**(*piVar9 + 0x28))(piVar9, &var_61h + 1);\n    pcVar12 = &var_61h + 1;\n    if (0xf < stack0xffffffffffffffb0) {\n        pcVar12 = CONCAT71(stack0xffffffffffffff99, var_61h._1_1_);\n    }\n    if (*pcVar12 - 1U < 0x7e) {\n        uVar7 = (**(*piVar9 + 0x20))(piVar9);\n        cVar1 = *pcVar12;\n        while (((cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < in_stack_00000038 - uVar16))) {\n            in_stack_00000038 = in_stack_00000038 - cVar1;\n            if (unique0x10000400 < in_stack_00000038) goto code_r0x0001400067ff;\n            if (unique0x10000408 == unique0x10000400) {\n                uStack200 = 1;\n                uStack192 = uVar7;\n                fcn.140007530(&ppppppuStack136, 1, unique0x10000400, in_stack_00000038);\n            }\n            else {\n                ppppppuVar13 = &ppppppuStack136;\n                if (0xf < unique0x10000408) {\n                    ppppppuVar13 = ppppppuStack136;\n                }\n                puVar11 = ppppppuVar13 + in_stack_00000038;\n                iVar14 = unique0x10000400 - in_stack_00000038;\n                unique0x100007cf = unique0x10000400 + 1;\n                fcn.14000bbe0(puVar11 + 1, puVar11, iVar14 + 1);\n                *puVar11 = uVar7;\n            }\n            if ('\\0' < pcVar12[1]) {\n                pcVar12 = pcVar12 + 1;\n            }\n            cVar1 = *pcVar12;\n        }\n    }\n    uVar6 = stack0xffffffffffffff88;\n    uVar17 = *(iStack160 + 0x28);\n    if ((uVar17 < 1) || (uVar17 <= stack0xffffffffffffff88)) {\n        iVar14 = 0;\n    }\n    else {\n        iVar14 = uVar17 - stack0xffffffffffffff88;\n    }\n    uVar8 = *(iStack160 + 0x18) & 0x1c0;\n    if (uVar8 == 0x40) {\n        _auStack184 = *pauStack168;\n        ppppppuVar13 = &ppppppuStack136;\n        if (0xf < stack0xffffffffffffff90) {\n            ppppppuVar13 = ppppppuStack136;\n        }\n        if (uVar16 != 0) {\n            piStack176 = SUB168(_auStack184 >> 0x40, 0);\n            uVar17 = uVar16;\n            do {\n                uVar7 = *ppppppuVar13;\n                if (piStack176 == NULL) {\ncode_r0x000140006648:\n                    _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n                }\n                else {\n                    if (*piStack176[8] == 0) {\ncode_r0x000140006637:\n                        uVar8 = (**(*piStack176 + 0x18))(piStack176, uVar7);\n                    }\n                    else {\n                        iVar2 = *piStack176[0xb];\n                        if (iVar2 < 1) goto code_r0x000140006637;\n                        *piStack176[0xb] = iVar2 + -1;\n                        puVar11 = *piStack176[8];\n                        *piStack176[8] = puVar11 + 1;\n                        *puVar11 = uVar7;\n                        uVar8 = uVar7;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000140006648;\n                }\n                ppppppuVar13 = ppppppuVar13 + 1;\n                uVar17 = uVar17 - 1;\n            } while (uVar17 != 0);\n        }\ncode_r0x000140006659:\n        *pauStack168 = _auStack184;\n    }\n    else {\n        _auStack184 = *pauStack168;\n        piStack176 = SUB168(_auStack184 >> 0x40, 0);\n        if (uVar8 != 0x100) {\n            for (; iVar14 != 0; iVar14 = iVar14 + -1) {\n                if (piStack176 == NULL) {\ncode_r0x000140006464:\n                    _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n                }\n                else {\n                    if (*piStack176[8] == 0) {\ncode_r0x000140006453:\n                        uVar8 = (**(*piStack176 + 0x18))(piStack176, in_stack_00000028);\n                    }\n                    else {\n                        iVar2 = *piStack176[0xb];\n                        if (iVar2 < 1) goto code_r0x000140006453;\n                        *piStack176[0xb] = iVar2 + -1;\n                        puVar11 = *piStack176[8];\n                        *piStack176[8] = puVar11 + 1;\n                        *puVar11 = in_stack_00000028;\n                        uVar8 = in_stack_00000028;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000140006464;\n                }\n            }\n            iVar14 = 0;\n            ppppppuVar13 = &ppppppuStack136;\n            if (0xf < unique0x100005ec) {\n                ppppppuVar13 = ppppppuStack136;\n            }\n            if (uVar16 != 0) {\n                piStack176 = SUB168(_auStack184 >> 0x40, 0);\n                uVar17 = uVar16;\n                do {\n                    uVar7 = *ppppppuVar13;\n                    if (piStack176 == NULL) {\ncode_r0x0001400064dd:\n                        _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n                    }\n                    else {\n                        if (*piStack176[8] == 0) {\ncode_r0x0001400064cc:\n                            uVar8 = (**(*piStack176 + 0x18))(piStack176, uVar7);\n                        }\n                        else {\n                            iVar2 = *piStack176[0xb];\n                            if (iVar2 < 1) goto code_r0x0001400064cc;\n                            *piStack176[0xb] = iVar2 + -1;\n                            puVar11 = *piStack176[8];\n                            *piStack176[8] = puVar11 + 1;\n                            *puVar11 = uVar7;\n                            uVar8 = uVar7;\n                        }\n                        if (uVar8 == 0xffffffff) goto code_r0x0001400064dd;\n                    }\n                    ppppppuVar13 = ppppppuVar13 + 1;\n                    uVar17 = uVar17 - 1;\n                } while (uVar17 != 0);\n            }\n            goto code_r0x000140006659;\n        }\n        ppppppuVar13 = &ppppppuStack136;\n        uVar17 = uVar16;\n        if (0xf < stack0xffffffffffffff90) {\n            ppppppuVar13 = ppppppuStack136;\n        }\n        for (; uVar17 != 0; uVar17 = uVar17 - 1) {\n            uVar7 = *ppppppuVar13;\n            if (piStack176 == NULL) {\ncode_r0x000140006558:\n                _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n            }\n            else {\n                if (*piStack176[8] == 0) {\ncode_r0x000140006547:\n                    uVar8 = (**(*piStack176 + 0x18))(piStack176, uVar7);\n                }\n                else {\n                    iVar2 = *piStack176[0xb];\n                    if (iVar2 < 1) goto code_r0x000140006547;\n                    *piStack176[0xb] = iVar2 + -1;\n                    puVar11 = *piStack176[8];\n                    *piStack176[8] = puVar11 + 1;\n                    *puVar11 = uVar7;\n                    uVar8 = uVar7;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000140006558;\n            }\n            ppppppuVar13 = ppppppuVar13 + 1;\n        }\n        if (iVar14 != 0) {\n            piStack176 = SUB168(_auStack184 >> 0x40, 0);\n            do {\n                if (piStack176 == NULL) {\ncode_r0x0001400065ba:\n                    _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n                }\n                else {\n                    if (*piStack176[8] == 0) {\ncode_r0x0001400065a9:\n                        uVar8 = (**(*piStack176 + 0x18))(piStack176, in_stack_00000028);\n                    }\n                    else {\n                        iVar2 = *piStack176[0xb];\n                        if (iVar2 < 1) goto code_r0x0001400065a9;\n                        *piStack176[0xb] = iVar2 + -1;\n                        puVar11 = *piStack176[8];\n                        *piStack176[8] = puVar11 + 1;\n                        *puVar11 = in_stack_00000028;\n                        uVar8 = in_stack_00000028;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x0001400065ba;\n                }\n                iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n        }\n        *pauStack168 = _auStack184;\n        iVar14 = 0;\n    }\n    _auStack184 = *pauStack168;\n    ppppppuVar13 = &ppppppuStack136;\n    if (0xf < stack0xffffffffffffff90) {\n        ppppppuVar13 = ppppppuStack136;\n    }\n    puVar11 = ppppppuVar13 + uVar16;\n    iVar15 = uVar6 - uVar16;\n    if (iVar15 != 0) {\n        piStack176 = SUB168(_auStack184 >> 0x40, 0);\n        do {\n            uVar7 = *puVar11;\n            if (piStack176 == NULL) {\ncode_r0x0001400066c9:\n                _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n            }\n            else {\n                if (*piStack176[8] == 0) {\ncode_r0x0001400066b8:\n                    uVar8 = (**(*piStack176 + 0x18))(piStack176, uVar7);\n                }\n                else {\n                    iVar2 = *piStack176[0xb];\n                    if (iVar2 < 1) goto code_r0x0001400066b8;\n                    *piStack176[0xb] = iVar2 + -1;\n                    puVar4 = *piStack176[8];\n                    *piStack176[8] = puVar4 + 1;\n                    *puVar4 = uVar7;\n                    uVar8 = uVar7;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x0001400066c9;\n            }\n            puVar11 = puVar11 + 1;\n            iVar15 = iVar15 + -1;\n        } while (iVar15 != 0);\n    }\n    *(iStack160 + 0x28) = 0;\n    if (iVar14 != 0) {\n        piStack176 = SUB168(_auStack184 >> 0x40, 0);\n        do {\n            if (piStack176 == NULL) {\ncode_r0x000140006737:\n                _auStack184 = CONCAT151(stack0xffffffffffffff49, 1);\n            }\n            else {\n                if (*piStack176[8] == 0) {\ncode_r0x000140006726:\n                    uVar8 = (**(*piStack176 + 0x18))(piStack176, in_stack_00000028);\n                }\n                else {\n                    iVar2 = *piStack176[0xb];\n                    if (iVar2 < 1) goto code_r0x000140006726;\n                    *piStack176[0xb] = iVar2 + -1;\n                    puVar11 = *piStack176[8];\n                    *piStack176[8] = puVar11 + 1;\n                    *puVar11 = in_stack_00000028;\n                    uVar8 = in_stack_00000028;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000140006737;\n            }\n            iVar14 = iVar14 + -1;\n        } while (iVar14 != 0);\n    }\n    *pauStack144 = _auStack184;\n    if (0xf < stack0xffffffffffffffb0) {\n        iVar15 = CONCAT71(stack0xffffffffffffff99, var_61h._1_1_);\n        iVar14 = iVar15;\n        if ((0xfff < stack0xffffffffffffffb0 + 1) && (iVar14 = *(iVar15 + -8),  0x1f < (iVar15 - iVar14) - 8U))\n        goto code_r0x000140006805;\n        fcn.140009d40(iVar14);\n    }\n    _auStack88 = *0x1400386d0;\n    stack0xffffffffffffffb0 = *0x1400386d8;\n    var_61h._1_1_ = 0;\n    if (0xf < stack0xffffffffffffff90) {\n        ppppppuVar13 = ppppppuStack136;\n        if (0xfff < stack0xffffffffffffff90 + 1) {\n            ppppppuVar13 = ppppppuStack136[-1];\n            if (0x1f < ppppppuStack136 + (-8 - ppppppuVar13)) {\n                fcn.140010514(*0x1400386d0, ppppppuVar13, stack0xffffffffffffff90 + 0x28);\ncode_r0x0001400067ff:\n                fcn.140007160();\ncode_r0x000140006805:\n                fcn.140010514();\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n        }\n        fcn.140009d40(ppppppuVar13);\n    }\n    fcn.140009d20(stack0xffffffffffffffb8 ^ auStack232);\n    return;\n}\n",
        "token_count": 4380
    },
    "14000681": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Variable defined which should be unmapped: var_21h\n// WARNING: Variable defined which should be unmapped: var_29h\n// WARNING: Variable defined which should be unmapped: var_31h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140006810(ulong noname_0, uchar (*arg2) [16], uchar (*arg3) [16], int64_t arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    uint8_t *puVar4;\n    code *pcVar5;\n    uint64_t noname_2;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    uint8_t **ppuVar9;\n    int64_t *piVar10;\n    ulong *puVar11;\n    ulong uVar12;\n    uint8_t *puVar13;\n    char *pcVar14;\n    int64_t iVar15;\n    int64_t iVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint8_t in_stack_00000028;\n    char *in_stack_00000030;\n    uint64_t in_stack_00000038;\n    uchar auStack248 [32];\n    ulong uStack216;\n    uint8_t uStack208;\n    uchar auStack200 [8];\n    int64_t *piStack192;\n    uint16_t auStack184 [4];\n    uchar (*pauStack176) [16];\n    int64_t iStack168;\n    uchar (*pauStack160) [16];\n    uchar auStack152 [8];\n    int64_t *piStack144;\n    uchar auStack136 [7];\n    ulong var_79h;\n    uint64_t var_71h;\n    uint64_t var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    ulong var_51h;\n    uint64_t var_49h;\n    uint64_t var_41h;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_11h;\n    ulong var_9h;\n    ulong var_1h;\n    \n    piStack192 = auStack200;\n    *NULL = *0x14003e020 ^ auStack248;\n    if ((in_stack_00000038 == 0) || ((*in_stack_00000030 - 0x2bU & 0xfd) != 0)) {\n        uVar17 = 0;\n    }\n    else {\n        uVar17 = 1;\n    }\n    if ((*(arg4 + 0x18) & 0x3000) == 0x3000) {\n        uVar12 = 0x140038448;\n        if (((uVar17 + 2 <= in_stack_00000038) && (in_stack_00000030[uVar17] == '0')) &&\n           ((in_stack_00000030[uVar17 + 1] + 0xa8U & 0xdf) == 0)) {\n            uVar17 = uVar17 + 2;\n        }\n    }\n    else {\n        uVar12 = 0x140038444;\n    }\n    iVar15 = arg4;\n    pauStack176 = arg3;\n    iStack168 = arg4;\n    pauStack160 = arg2;\n    uVar12 = fcn.140012710(in_stack_00000030, uVar12, arg3, arg4);\n    _auStack200 = CONCAT88(piStack192, uVar12);\n    auStack184[0] = 0x2e;\n    ppuVar9 = fcn.14001262c();\n    auStack184[0] = auStack184[0] & 0xff00 | **ppuVar9;\n    auStack200 = fcn.140012710(in_stack_00000030, auStack184, arg3, iVar15);\n    piVar3 = *(*(arg4 + 0x40) + 8);\n    piStack144 = piVar3;\n    (**(*piVar3 + 8))(piVar3);\n    piVar10 = fcn.140007180(auStack152);\n    if ((piVar3 != NULL) && (puVar11 = (**(*piVar3 + 0x10))(piVar3),  puVar11 != NULL)) {\n        (***puVar11)(puVar11, 1);\n    }\n    fcn.140004d00(auStack136, in_stack_00000038);\n    puVar13 = auStack136;\n    if (0xf < stack0xffffffffffffff90) {\n        puVar13 = _auStack136;\n    }\n    (**(*piVar10 + 0x38))(piVar10, in_stack_00000030, in_stack_00000030 + in_stack_00000038, puVar13);\n    piVar3 = *(*(iStack168 + 0x40) + 8);\n    piStack144 = piVar3;\n    (**(*piVar3 + 8))(piVar3);\n    piVar10 = fcn.140007290(auStack152);\n    if ((piVar3 != NULL) && (puVar11 = (**(*piVar3 + 0x10))(piVar3),  puVar11 != NULL)) {\n        (***puVar11)(puVar11, 1);\n    }\n    (**(*piVar10 + 0x28))(piVar10, &var_61h + 1);\n    uVar6 = (**(*piVar10 + 0x20))(piVar10);\n    if (auStack200 != in_stack_00000038) {\n        uVar7 = (**(*piVar10 + 0x18))();\n        puVar13 = auStack136;\n        if (0xf < stack0xffffffffffffff90) {\n            puVar13 = _auStack136;\n        }\n        puVar13[auStack200] = uVar7;\n    }\n    if (auStack200 == in_stack_00000038) {\n    }\n    pcVar14 = &var_61h + 1;\n    if (0xf < stack0xffffffffffffffb0) {\n        pcVar14 = CONCAT71(stack0xffffffffffffff99, var_61h._1_1_);\n    }\n    cVar1 = *pcVar14;\n    noname_2 = stack0xffffffffffffff88;\n    while (((unique0x100008fa = noname_2,  cVar1 != '\\x7f' && ('\\0' < cVar1)) && (cVar1 < auStack200 - uVar17))) {\n        auStack200 = auStack200 - cVar1;\n        if (noname_2 < auStack200) goto code_r0x000140006ede;\n        if (unique0x1000046f == noname_2) {\n            uStack216 = 1;\n            uStack208 = uVar6;\n            fcn.140007530(auStack136, 1, noname_2, auStack200);\n        }\n        else {\n            unique0x00003100 = noname_2 + 1;\n            puVar13 = auStack136;\n            if (0xf < unique0x1000046f) {\n                puVar13 = _auStack136;\n            }\n            puVar13 = puVar13 + auStack200;\n            fcn.14000bbe0(puVar13 + 1, puVar13, (noname_2 - auStack200) + 1);\n            *puVar13 = uVar6;\n        }\n        if ('\\0' < pcVar14[1]) {\n            pcVar14 = pcVar14 + 1;\n        }\n        noname_2 = stack0xffffffffffffff88;\n        cVar1 = *pcVar14;\n    }\n    uVar18 = *(iStack168 + 0x28);\n    if ((uVar18 < 1) || (uVar18 <= noname_2)) {\n        iVar15 = 0;\n    }\n    else {\n        iVar15 = uVar18 - noname_2;\n    }\n    uVar8 = *(iStack168 + 0x18) & 0x1c0;\n    if (uVar8 == 0x40) {\n        _auStack200 = *pauStack176;\n        puVar13 = auStack136;\n        if (0xf < unique0x1000046f) {\n            puVar13 = _auStack136;\n        }\n        if (uVar17 != 0) {\n            piStack192 = SUB168(_auStack200 >> 0x40, 0);\n            uVar18 = uVar17;\n            do {\n                uVar6 = *puVar13;\n                if (piStack192 == NULL) {\ncode_r0x000140006d18:\n                    _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n                }\n                else {\n                    if (*piStack192[8] == 0) {\ncode_r0x000140006d07:\n                        uVar8 = (**(*piStack192 + 0x18))(piStack192, uVar6);\n                    }\n                    else {\n                        iVar2 = *piStack192[0xb];\n                        if (iVar2 < 1) goto code_r0x000140006d07;\n                        *piStack192[0xb] = iVar2 + -1;\n                        puVar4 = *piStack192[8];\n                        *piStack192[8] = puVar4 + 1;\n                        *puVar4 = uVar6;\n                        uVar8 = uVar6;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000140006d18;\n                }\n                puVar13 = puVar13 + 1;\n                uVar18 = uVar18 - 1;\n            } while (uVar18 != 0);\n        }\ncode_r0x000140006d2b:\n        *pauStack176 = _auStack200;\n    }\n    else {\n        _auStack200 = *pauStack176;\n        piStack192 = SUB168(_auStack200 >> 0x40, 0);\n        if (uVar8 != 0x100) {\n            for (; iVar15 != 0; iVar15 = iVar15 + -1) {\n                if (piStack192 == NULL) {\ncode_r0x000140006b2a:\n                    _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n                }\n                else {\n                    if (*piStack192[8] == 0) {\ncode_r0x000140006b19:\n                        uVar8 = (**(*piStack192 + 0x18))(piStack192, in_stack_00000028);\n                    }\n                    else {\n                        iVar2 = *piStack192[0xb];\n                        if (iVar2 < 1) goto code_r0x000140006b19;\n                        *piStack192[0xb] = iVar2 + -1;\n                        puVar13 = *piStack192[8];\n                        *piStack192[8] = puVar13 + 1;\n                        *puVar13 = in_stack_00000028;\n                        uVar8 = in_stack_00000028;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000140006b2a;\n                }\n            }\n            iVar15 = 0;\n            puVar13 = auStack136;\n            if (0xf < unique0x1000065d) {\n                puVar13 = _auStack136;\n            }\n            if (uVar17 != 0) {\n                piStack192 = SUB168(_auStack200 >> 0x40, 0);\n                uVar18 = uVar17;\n                do {\n                    uVar6 = *puVar13;\n                    if (piStack192 == NULL) {\ncode_r0x000140006ba7:\n                        _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n                    }\n                    else {\n                        if (*piStack192[8] == 0) {\ncode_r0x000140006b96:\n                            uVar8 = (**(*piStack192 + 0x18))(piStack192, uVar6);\n                        }\n                        else {\n                            iVar2 = *piStack192[0xb];\n                            if (iVar2 < 1) goto code_r0x000140006b96;\n                            *piStack192[0xb] = iVar2 + -1;\n                            puVar4 = *piStack192[8];\n                            *piStack192[8] = puVar4 + 1;\n                            *puVar4 = uVar6;\n                            uVar8 = uVar6;\n                        }\n                        if (uVar8 == 0xffffffff) goto code_r0x000140006ba7;\n                    }\n                    puVar13 = puVar13 + 1;\n                    uVar18 = uVar18 - 1;\n                } while (uVar18 != 0);\n            }\n            goto code_r0x000140006d2b;\n        }\n        puVar13 = auStack136;\n        uVar18 = uVar17;\n        if (0xf < unique0x1000046f) {\n            puVar13 = _auStack136;\n        }\n        for (; uVar18 != 0; uVar18 = uVar18 - 1) {\n            uVar6 = *puVar13;\n            if (piStack192 == NULL) {\ncode_r0x000140006c1c:\n                _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n            }\n            else {\n                if (*piStack192[8] == 0) {\ncode_r0x000140006c0b:\n                    uVar8 = (**(*piStack192 + 0x18))(piStack192, uVar6);\n                }\n                else {\n                    iVar2 = *piStack192[0xb];\n                    if (iVar2 < 1) goto code_r0x000140006c0b;\n                    *piStack192[0xb] = iVar2 + -1;\n                    puVar4 = *piStack192[8];\n                    *piStack192[8] = puVar4 + 1;\n                    *puVar4 = uVar6;\n                    uVar8 = uVar6;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000140006c1c;\n            }\n            puVar13 = puVar13 + 1;\n        }\n        if (iVar15 != 0) {\n            piStack192 = SUB168(_auStack200 >> 0x40, 0);\n            do {\n                if (piStack192 == NULL) {\ncode_r0x000140006c84:\n                    _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n                }\n                else {\n                    if (*piStack192[8] == 0) {\ncode_r0x000140006c73:\n                        uVar8 = (**(*piStack192 + 0x18))(piStack192, in_stack_00000028);\n                    }\n                    else {\n                        iVar2 = *piStack192[0xb];\n                        if (iVar2 < 1) goto code_r0x000140006c73;\n                        *piStack192[0xb] = iVar2 + -1;\n                        puVar13 = *piStack192[8];\n                        *piStack192[8] = puVar13 + 1;\n                        *puVar13 = in_stack_00000028;\n                        uVar8 = in_stack_00000028;\n                    }\n                    if (uVar8 == 0xffffffff) goto code_r0x000140006c84;\n                }\n                iVar15 = iVar15 + -1;\n            } while (iVar15 != 0);\n        }\n        *pauStack176 = _auStack200;\n        iVar15 = 0;\n    }\n    _auStack200 = *pauStack176;\n    puVar13 = auStack136;\n    if (0xf < stack0xffffffffffffff90) {\n        puVar13 = _auStack136;\n    }\n    puVar13 = puVar13 + uVar17;\n    iVar16 = noname_2 - uVar17;\n    if (iVar16 != 0) {\n        piStack192 = SUB168(_auStack200 >> 0x40, 0);\n        do {\n            uVar6 = *puVar13;\n            if (piStack192 == NULL) {\ncode_r0x000140006d9c:\n                _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n            }\n            else {\n                if (*piStack192[8] == 0) {\ncode_r0x000140006d8b:\n                    uVar8 = (**(*piStack192 + 0x18))(piStack192, uVar6);\n                }\n                else {\n                    iVar2 = *piStack192[0xb];\n                    if (iVar2 < 1) goto code_r0x000140006d8b;\n                    *piStack192[0xb] = iVar2 + -1;\n                    puVar4 = *piStack192[8];\n                    *piStack192[8] = puVar4 + 1;\n                    *puVar4 = uVar6;\n                    uVar8 = uVar6;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000140006d9c;\n            }\n            puVar13 = puVar13 + 1;\n            iVar16 = iVar16 + -1;\n        } while (iVar16 != 0);\n    }\n    *(iStack168 + 0x28) = 0;\n    if (iVar15 != 0) {\n        piStack192 = SUB168(_auStack200 >> 0x40, 0);\n        do {\n            if (piStack192 == NULL) {\ncode_r0x000140006e14:\n                _auStack200 = CONCAT151(stack0xffffffffffffff39, 1);\n            }\n            else {\n                if (*piStack192[8] == 0) {\ncode_r0x000140006e03:\n                    uVar8 = (**(*piStack192 + 0x18))(piStack192, in_stack_00000028);\n                }\n                else {\n                    iVar2 = *piStack192[0xb];\n                    if (iVar2 < 1) goto code_r0x000140006e03;\n                    *piStack192[0xb] = iVar2 + -1;\n                    puVar13 = *piStack192[8];\n                    *piStack192[8] = puVar13 + 1;\n                    *puVar13 = in_stack_00000028;\n                    uVar8 = in_stack_00000028;\n                }\n                if (uVar8 == 0xffffffff) goto code_r0x000140006e14;\n            }\n            iVar15 = iVar15 + -1;\n        } while (iVar15 != 0);\n    }\n    *pauStack160 = _auStack200;\n    if (0xf < stack0xffffffffffffffb0) {\n        iVar16 = CONCAT71(stack0xffffffffffffff99, var_61h._1_1_);\n        iVar15 = iVar16;\n        if ((0xfff < stack0xffffffffffffffb0 + 1) && (iVar15 = *(iVar16 + -8),  0x1f < (iVar16 - iVar15) - 8U))\n        goto code_r0x000140006ee4;\n        fcn.140009d40(iVar15);\n    }\n    stack0xffffffffffffffa8 = *0x1400386d0;\n    stack0xffffffffffffffb0 = *0x1400386d8;\n    var_61h._1_1_ = 0;\n    if (0xf < stack0xffffffffffffff90) {\n        puVar13 = _auStack136;\n        if (0xfff < stack0xffffffffffffff90 + 1) {\n            puVar13 = *(_auStack136 + -8);\n            if (0x1f < _auStack136 + (-8 - puVar13)) {\n                fcn.140010514(*0x1400386d0, puVar13, stack0xffffffffffffff90 + 0x28);\ncode_r0x000140006ede:\n                fcn.140007160();\ncode_r0x000140006ee4:\n                fcn.140010514();\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n        }\n        fcn.140009d40(puVar13);\n    }\n    fcn.140009d20(stack0xffffffffffffffb8 ^ auStack248);\n    return;\n}\n",
        "token_count": 4554
    },
    "140006f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140006f20(int64_t *arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    ulong arg3;\n    int64_t *piVar4;\n    uint32_t uVar5;\n    char *arg2;\n    uint32_t uVar6;\n    int64_t *piStack104;\n    char cStack96;\n    uchar auStack88 [16];\n    uchar auStack72 [48];\n    \n    piVar4 = *(*(*arg1 + 4) + 0x48 + arg1);\n    if (piVar4 != NULL) {\n        fcn.140005df0(&piStack104, arg1);\n        if (cStack96 != '\\0') {\n            iVar3 = (**(*piVar4 + 0x68))(piVar4);\n            uVar6 = 0;\n            if (iVar3 == -1) {\n                uVar6 = 4;\n            }\n            iVar3 = *(*arg1 + 4);\n            uVar5 = 4;\n            if (*(arg1 + iVar3 + 0x48) != 0) {\n                uVar5 = 0;\n            }\n            uVar5 = uVar5 | uVar6 | *(arg1 + iVar3 + 0x10) & 0x17;\n            *(arg1 + iVar3 + 0x10) = uVar5;\n            uVar5 = uVar5 & *(arg1 + iVar3 + 0x14);\n            if (uVar5 != 0) {\n                if ((uVar5 & 4) == 0) {\n                    arg2 = \"ios_base::failbit set\";\n                    if ((uVar5 & 2) == 0) {\n                        arg2 = \"ios_base::eofbit set\";\n                    }\n                }\n                else {\n                    arg2 = \"ios_base::badbit set\";\n                }\n                arg3 = fcn.140003480(auStack88, 1);\n                fcn.140003cd0(auStack72, arg2, arg3);\n                fcn.14000bb04(auStack72, 0x14003c6d8);\n                pcVar1 = swi(3);\n                piVar4 = (*pcVar1)();\n                return piVar4;\n            }\n        }\n        cVar2 = fcn.1400099a0();\n        if (cVar2 == '\\0') {\n            fcn.140007050(piStack104);\n        }\n        piVar4 = *(*(*piStack104 + 4) + 0x48 + piStack104);\n        if (piVar4 != NULL) {\n            (**(*piVar4 + 0x10))();\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 603
    },
    "14000705": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.140007050(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong arg3;\n    int64_t iVar4;\n    char *arg2;\n    uchar auStack72 [16];\n    uchar auStack56 [48];\n    \n    iVar4 = *(*arg1 + 4);\n    if ((*(iVar4 + 0x10 + arg1) == 0) && ((*(iVar4 + 0x18 + arg1) & 2) != 0)) {\n        iVar2 = (**(**(iVar4 + 0x48 + arg1) + 0x68))();\n        if (iVar2 == -1) {\n            iVar4 = *(*arg1 + 4);\n            uVar3 = *(iVar4 + 0x10 + arg1) & 0x13 | 4;\n            *(iVar4 + 0x10 + arg1) = uVar3;\n            uVar3 = uVar3 & *(iVar4 + 0x14 + arg1);\n            if (uVar3 != 0) {\n                if ((uVar3 & 4) == 0) {\n                    arg2 = \"ios_base::failbit set\";\n                    if ((uVar3 & 2) == 0) {\n                        arg2 = \"ios_base::eofbit set\";\n                    }\n                }\n                else {\n                    arg2 = \"ios_base::badbit set\";\n                }\n                arg3 = fcn.140003480(auStack72, 1);\n                fcn.140003cd0(auStack56, arg2, arg3);\n                fcn.14000bb04(auStack56, 0x14003c6d8);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "14000718": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140007180(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piStackX8;\n    uchar auStackX16 [8];\n    int64_t *apiStackX24 [2];\n    \n    fcn.140008f98(auStackX16, 0);\n    piVar5 = *0x140040860;\n    apiStackX24[0] = *0x140040860;\n    if (*0x14003f348 == 0) {\n        fcn.140008f98(&piStackX8, 0);\n        if (*0x14003f348 == 0) {\n            *0x14003f330 = *0x14003f330 + 1;\n            *0x14003f348 = *0x14003f330;\n        }\n        fcn.140009010(&piStackX8);\n    }\n    uVar2 = *0x14003f348;\n    iVar3 = *(arg1 + 8);\n    iVar4 = *0x14003f348 * 8;\n    if (*0x14003f348 < *(iVar3 + 0x18)) {\n        piVar6 = *(iVar4 + *(iVar3 + 0x10));\n        if (piVar6 != NULL) goto code_r0x000140007270;\n    }\n    else {\n        piVar6 = NULL;\n    }\n    if (*(iVar3 + 0x24) == '\\0') {\ncode_r0x00014000722c:\n        if (piVar6 != NULL) goto code_r0x000140007270;\n    }\n    else {\n        iVar3 = fcn.140009200();\n        if (uVar2 < *(iVar3 + 0x18)) {\n            piVar6 = *(iVar4 + *(iVar3 + 0x10));\n            goto code_r0x00014000722c;\n        }\n    }\n    piVar6 = piVar5;\n    if (piVar5 == NULL) {\n        iVar4 = fcn.1400039c0(apiStackX24, arg1);\n        piVar6 = apiStackX24[0];\n        if (iVar4 == -1) {\n            fcn.140003830();\n            pcVar1 = swi(3);\n            piVar5 = (*pcVar1)();\n            return piVar5;\n        }\n        piStackX8 = apiStackX24[0];\n        fcn.1400091c8(apiStackX24[0]);\n        (**(*piVar6 + 8))(piVar6);\n        *0x140040860 = piVar6;\n    }\ncode_r0x000140007270:\n    fcn.140009010(auStackX16);\n    return piVar6;\n}\n",
        "token_count": 646
    },
    "14000729": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.140007290(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piStackX8;\n    uchar auStackX16 [8];\n    int64_t *apiStackX24 [2];\n    \n    fcn.140008f98(auStackX16, 0);\n    piVar5 = *0x140040850;\n    apiStackX24[0] = *0x140040850;\n    if (*0x140040990 == 0) {\n        fcn.140008f98(&piStackX8, 0);\n        if (*0x140040990 == 0) {\n            *0x14003f330 = *0x14003f330 + 1;\n            *0x140040990 = *0x14003f330;\n        }\n        fcn.140009010(&piStackX8);\n    }\n    uVar2 = *0x140040990;\n    iVar3 = *(arg1 + 8);\n    iVar4 = *0x140040990 * 8;\n    if (*0x140040990 < *(iVar3 + 0x18)) {\n        piVar6 = *(iVar4 + *(iVar3 + 0x10));\n        if (piVar6 != NULL) goto code_r0x000140007380;\n    }\n    else {\n        piVar6 = NULL;\n    }\n    if (*(iVar3 + 0x24) == '\\0') {\ncode_r0x00014000733c:\n        if (piVar6 != NULL) goto code_r0x000140007380;\n    }\n    else {\n        iVar3 = fcn.140009200();\n        if (uVar2 < *(iVar3 + 0x18)) {\n            piVar6 = *(iVar4 + *(iVar3 + 0x10));\n            goto code_r0x00014000733c;\n        }\n    }\n    piVar6 = piVar5;\n    if (piVar5 == NULL) {\n        iVar4 = fcn.1400078a0(apiStackX24, arg1);\n        piVar6 = apiStackX24[0];\n        if (iVar4 == -1) {\n            fcn.140003830();\n            pcVar1 = swi(3);\n            piVar5 = (*pcVar1)();\n            return piVar5;\n        }\n        piStackX8 = apiStackX24[0];\n        fcn.1400091c8(apiStackX24[0]);\n        (**(*piVar6 + 8))(piVar6);\n        *0x140040850 = piVar6;\n    }\ncode_r0x000140007380:\n    fcn.140009010(auStackX16);\n    return piVar6;\n}\n",
        "token_count": 640
    },
    "14000959": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.140009598(ulong arg1, uint *arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1_00;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong uVar7;\n    ulong in_stack_00000000;\n    uchar uStackX16;\n    uchar uStackX17;\n    uchar uStackX18;\n    uint8_t uStackX24;\n    uchar uStackX25;\n    uint in_stack_ffffffffffffffd4;\n    uint in_stack_ffffffffffffffdc;\n    uint in_stack_ffffffffffffffe4;\n    \n    uVar5 = arg1;\n    uVar6 = uVar5;\n    if (arg2 == NULL) {\n        uVar7 = arg1;\n        iVar3 = fcn.1400130b8(arg1);\n        iVar3 = *(iVar3 + 0x10);\n        uVar1 = fcn.140013088(uVar7);\n    }\n    else {\n        iVar3 = *(arg2 + 6);\n        uVar1 = *arg2;\n    }\n    if (iVar3 == 0) {\n        if (uVar5 - 0x41 < 0x1a) {\n            uVar6 = uVar5 + 0x20;\n        }\n        goto code_r0x0001400095d7;\n    }\n    if (uVar5 < 0x100) {\n        if (arg2 == NULL) {\n            arg1_00 = uVar6 & 0xffffffff;\n            iVar2 = fcn.140012fe0(arg1_00);\n            if (iVar2 == 0) goto code_r0x0001400095d7;\n            goto code_r0x000140009647;\n        }\n        if ((*(*(arg2 + 2) + uVar6 * 2) & 1) == 0) goto code_r0x0001400095d7;\ncode_r0x000140009608:\n        uVar5 = *(*(arg2 + 2) + (uVar6 >> 8 & 0xffU) * 2) >> 0xf & 1;\n    }\n    else {\n        arg1_00 = uVar6;\n        if (arg2 != NULL) goto code_r0x000140009608;\ncode_r0x000140009647:\n        iVar4 = fcn.140012ef4(arg1_00);\n        uVar5 = *(iVar4 + (uVar5 >> 8 & 0xff) * 2) & 0x8000;\n    }\n    if (uVar5 == 0) {\n        uVar7 = 1;\n        uStackX17 = 0;\n        uStackX16 = arg1;\n    }\n    else {\n        uVar7 = 2;\n        uStackX18 = 0;\n        uStackX16 = arg1 >> 8;\n        uStackX17 = arg1;\n    }\n    iVar2 = fcn.140009a0c(iVar3, 0x100, &uStackX16, uVar7, &uStackX24, CONCAT44(in_stack_ffffffffffffffd4, 3), \n                          CONCAT44(in_stack_ffffffffffffffdc, uVar1), CONCAT44(in_stack_ffffffffffffffe4, 1), unaff_RDI\n                          , unaff_RSI, unaff_RBP, in_stack_00000000);\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            return uStackX24;\n        }\n        return CONCAT11(uStackX24, uStackX25);\n    }\ncode_r0x0001400095d7:\n    return uVar6 & 0xffffffff;\n}\n",
        "token_count": 855
    },
    "14000976": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.140009764(ulong arg1, uint *arg2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    uint64_t arg1_01;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong unaff_R14;\n    ulong in_stack_00000000;\n    uchar uStackX16;\n    uchar uStackX17;\n    uchar uStackX18;\n    uint8_t uStackX24;\n    uchar uStackX25;\n    uint in_stack_ffffffffffffffd4;\n    uint in_stack_ffffffffffffffdc;\n    uint in_stack_ffffffffffffffe4;\n    \n    uVar5 = arg1;\n    uVar6 = uVar5;\n    if (arg2 == NULL) {\n        arg1_00 = arg1;\n        iVar3 = fcn.1400130b8(arg1);\n        iVar3 = *(iVar3 + 0x10);\n        uVar1 = fcn.140013088(arg1_00);\n    }\n    else {\n        iVar3 = *(arg2 + 6);\n        uVar1 = *arg2;\n    }\n    if (iVar3 == 0) {\n        if (uVar5 - 0x61 < 0x1a) {\n            uVar6 = uVar5 - 0x20;\n        }\n        goto code_r0x0001400097ab;\n    }\n    uVar7 = 2;\n    if (uVar5 < 0x100) {\n        if (arg2 == NULL) {\n            arg1_01 = uVar6 & 0xffffffff;\n            iVar2 = fcn.140012f30(arg1_01);\n            if (iVar2 == 0) goto code_r0x0001400097ab;\n            goto code_r0x00014000981a;\n        }\n        if ((*(*(arg2 + 2) + uVar6 * 2) & 2) == 0) goto code_r0x0001400097ab;\ncode_r0x0001400097e1:\n        uVar5 = *(*(arg2 + 2) + (uVar6 >> 8 & 0xffU) * 2) >> 0xf & 1;\n    }\n    else {\n        arg1_01 = uVar6;\n        if (arg2 != NULL) goto code_r0x0001400097e1;\ncode_r0x00014000981a:\n        iVar4 = fcn.140012ef4(arg1_01);\n        uVar5 = *(iVar4 + (uVar5 >> 8 & 0xff) * 2) & 0x8000;\n    }\n    if (uVar5 == 0) {\n        uVar7 = 1;\n        uStackX17 = 0;\n        uStackX16 = arg1;\n    }\n    else {\n        uStackX18 = 0;\n        uStackX16 = arg1 >> 8;\n        uStackX17 = arg1;\n    }\n    iVar2 = fcn.140009a0c(iVar3, 0x200, &uStackX16, uVar7, &uStackX24, CONCAT44(in_stack_ffffffffffffffd4, 3), \n                          CONCAT44(in_stack_ffffffffffffffdc, uVar1), CONCAT44(in_stack_ffffffffffffffe4, 1), unaff_R14\n                          , unaff_RDI, unaff_RSI, in_stack_00000000);\n    if (iVar2 != 0) {\n        if (iVar2 == 1) {\n            return uStackX24;\n        }\n        return CONCAT11(uStackX24, uStackX25);\n    }\ncode_r0x0001400097ab:\n    return uVar6 & 0xffffffff;\n}\n",
        "token_count": 868
    },
    "14000aac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.14000aac8(void)\n\n{\n    int16_t *piVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    \n    piVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar1 == NULL) || (*piVar1 != 0x5a4d)) || (piVar3 = *(piVar1 + 0x1e) + piVar1,  *piVar3 != 0x4550)) ||\n       ((piVar1 = 0x20b,  *(piVar3 + 6) != 0x20b || (piVar3[0x21] < 0xf)))) {\n        uVar2 = piVar1 & 0xffffffffffffff00;\n    }\n    else {\n        uVar2 = CONCAT71(2, piVar3[0x3e] != 0);\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "14000b4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14000b4cc(int64_t arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint64_t uVar8;\n    \n    puVar5 = *(arg1 + 0x10);\n    *(arg1 + 8) = puVar5;\n    uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n    puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n    uVar2 = *(puVar5 + -4);\n    *(arg1 + 8) = puVar5;\n    *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n    uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n    puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n    uVar2 = *(puVar5 + -4);\n    *(arg1 + 8) = puVar5;\n    *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n    uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n    puVar6 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n    uVar2 = puVar6[-1];\n    *(arg1 + 8) = puVar6;\n    *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n    uVar3 = *puVar6;\n    puVar6 = puVar6 + 1;\n    iVar4 = *(arg2 + 8);\n    *(arg1 + 8) = puVar6;\n    *(arg1 + 0x24) = uVar3;\n    if (iVar4 != 0) {\n        uVar8 = *(arg2 + 8);\n        do {\n            uVar1 = *((*puVar6 & 0xf) + 0x14002b7b0);\n            puVar5 = puVar6 - *((*puVar6 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n            puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n            puVar7 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n            uVar2 = puVar7[-1];\n            puVar6 = puVar7 + 1;\n            *(arg1 + 8) = puVar7;\n            *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n            uVar3 = *puVar7;\n            *(arg1 + 8) = puVar6;\n            *(arg1 + 0x24) = uVar3;\n            uVar1 = *((*puVar6 & 0xf) + 0x14002b7b0);\n            puVar5 = puVar6 - *((*puVar6 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x18) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n            puVar5 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar5 + -4);\n            *(arg1 + 8) = puVar5;\n            *(arg1 + 0x1c) = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar5 & 0xf) + 0x14002b7b0);\n            puVar7 = puVar5 + -*((*puVar5 & 0xf) + 0x14002b7a0);\n            uVar2 = puVar7[-1];\n            puVar6 = puVar7 + 1;\n            *(arg1 + 8) = puVar7;\n            *(arg1 + 0x20) = uVar2 >> (uVar1 & 0x1f);\n            uVar3 = *puVar7;\n            *(arg1 + 8) = puVar6;\n            *(arg1 + 0x24) = uVar3;\n            uVar8 = uVar8 - 1;\n        } while (uVar8 != 0);\n    }\n    return;\n}\n",
        "token_count": 1295
    },
    "14000bbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.14000bbe0(uchar (*arg1) [32], uchar (*arg2) [32], uint64_t arg3)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    ushort uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uchar (*pauVar15) [32];\n    uchar (*pauVar16) [32];\n    uchar (*pauVar17) [32];\n    uint *puVar18;\n    uint *puVar19;\n    uchar (*pauVar20) [32];\n    uint *puVar21;\n    uint64_t uVar22;\n    int64_t iVar23;\n    uint64_t uVar24;\n    uint uVar25;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uchar auVar26 [32];\n    uchar auVar30 [32];\n    uchar auVar31 [32];\n    uchar auVar32 [32];\n    uchar auVar33 [32];\n    uchar auVar34 [32];\n    \n    pauVar15 = arg1;\n    if (arg3 < 0x10) {\n    // switch table (16 cases) at 0x140044000\n        switch(*(arg3 * 4 + 0x140044000) + 0x140000000) {\n        case 0x14000bc0e:\n            return pauVar15;\n        case 0x14000bc10:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            uVar2 = (*arg2)[0xe];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            (*arg1)[0xe] = uVar2;\n            return pauVar15;\n        case 0x14000bc30:\n            uVar3 = *(*arg2 + 8);\n            uVar2 = (*arg2)[10];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            (*arg1)[10] = uVar2;\n            return pauVar15;\n        case 0x14000bc48:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x14000bc50:\n            uVar3 = *(*arg2 + 4);\n            uVar2 = (*arg2)[6];\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            (*arg1)[6] = uVar2;\n            return pauVar15;\n        case 0x14000bc68:\n            uVar4 = *(*arg2 + 8);\n            uVar3 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            *(*arg1 + 0xc) = uVar3;\n            return pauVar15;\n        case 0x14000bc7f:\n            uVar2 = (*arg2)[2];\n            **arg1 = **arg2;\n            (*arg1)[2] = uVar2;\n            return pauVar15;\n        case 0x14000bc90:\n            uVar4 = *(*arg2 + 8);\n            uVar2 = (*arg2)[0xc];\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            (*arg1)[0xc] = uVar2;\n            return pauVar15;\n        case 0x14000bca6:\n            uVar3 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar3;\n            return pauVar15;\n        case 0x14000bcb5:\n            uVar2 = (*arg2)[8];\n            **arg1 = **arg2;\n            (*arg1)[8] = uVar2;\n            return pauVar15;\n        case 0x14000bcc3:\n            uVar4 = *(*arg2 + 8);\n            **arg1 = **arg2;\n            *(*arg1 + 8) = uVar4;\n            return pauVar15;\n        case 0x14000bcd0:\n            uVar3 = *(*arg2 + 4);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar3;\n            return pauVar15;\n        case 0x14000bcdf:\n            uVar2 = (*arg2)[4];\n            **arg1 = **arg2;\n            (*arg1)[4] = uVar2;\n            return pauVar15;\n        case 0x14000bced:\n            **arg1 = **arg2;\n            return pauVar15;\n        case 0x14000bcf4:\n            (*arg1)[0] = (*arg2)[0];\n            return pauVar15;\n        case 0x14000bcfa:\n            **arg1 = **arg2;\n            return pauVar15;\n        }\n    }\n    if (arg3 < 0x21) {\n        uVar4 = *(*arg2 + 4);\n        uVar5 = *(*arg2 + 8);\n        uVar6 = *(*arg2 + 0xc);\n        puVar18 = arg2[-1] + arg3 + 0x10;\n        uVar25 = *puVar18;\n        uVar27 = puVar18[1];\n        uVar28 = puVar18[2];\n        uVar29 = puVar18[3];\n        **arg1 = **arg2;\n        *(*arg1 + 4) = uVar4;\n        *(*arg1 + 8) = uVar5;\n        *(*arg1 + 0xc) = uVar6;\n        puVar18 = arg1[-1] + arg3 + 0x10;\n        *puVar18 = uVar25;\n        puVar18[1] = uVar27;\n        puVar18[2] = uVar28;\n        puVar18[3] = uVar29;\n        return pauVar15;\n    }\n    if ((arg2 < arg1) && (arg1 < *arg2 + arg3)) {\n        iVar23 = arg2 - arg1;\n        puVar18 = arg1 + iVar23 + (arg3 - 0x10);\n        uVar4 = puVar18[1];\n        uVar5 = puVar18[2];\n        uVar6 = puVar18[3];\n        puVar19 = arg1[-1] + arg3 + 0x10;\n        uVar22 = arg3 - 0x10;\n        puVar21 = puVar19;\n        uVar25 = *puVar18;\n        uVar27 = uVar4;\n        uVar28 = uVar5;\n        uVar29 = uVar6;\n        if ((puVar19 & 0xf) != 0) {\n            puVar21 = puVar19 & 0xfffffffffffffff0;\n            puVar1 = puVar21 + iVar23;\n            uVar25 = *puVar1;\n            uVar27 = puVar1[1];\n            uVar28 = puVar1[2];\n            uVar29 = puVar1[3];\n            *puVar19 = *puVar18;\n            *(arg1[-1] + arg3 + 0x14) = uVar4;\n            *(arg1[-1] + arg3 + 0x18) = uVar5;\n            *(arg1[-1] + arg3 + 0x1c) = uVar6;\n            uVar22 = puVar21 - arg1;\n        }\n        uVar24 = uVar22 >> 7;\n        if (uVar24 != 0) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar18 = puVar21;\n            while( true ) {\n                puVar19 = puVar18 + iVar23 + -0x10;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar21 = puVar18 + iVar23 + -0x20;\n                uVar25 = *puVar21;\n                uVar27 = puVar21[1];\n                uVar28 = puVar21[2];\n                uVar29 = puVar21[3];\n                puVar21 = puVar18 + -0x20;\n                puVar18[-4] = *puVar19;\n                puVar18[-3] = uVar4;\n                puVar18[-2] = uVar5;\n                puVar18[-1] = uVar6;\n                puVar18[-8] = uVar25;\n                puVar18[-7] = uVar27;\n                puVar18[-6] = uVar28;\n                puVar18[-5] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x30;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x40;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                uVar24 = uVar24 - 1;\n                puVar18[-0xc] = *puVar19;\n                puVar18[-0xb] = uVar4;\n                puVar18[-10] = uVar5;\n                puVar18[-9] = uVar6;\n                puVar18[-0x10] = uVar25;\n                puVar18[-0xf] = uVar27;\n                puVar18[-0xe] = uVar28;\n                puVar18[-0xd] = uVar29;\n                puVar19 = puVar18 + iVar23 + -0x50;\n                uVar4 = puVar19[1];\n                uVar5 = puVar19[2];\n                uVar6 = puVar19[3];\n                puVar1 = puVar18 + iVar23 + -0x60;\n                uVar25 = *puVar1;\n                uVar27 = puVar1[1];\n                uVar28 = puVar1[2];\n                uVar29 = puVar1[3];\n                puVar18[-0x14] = *puVar19;\n                puVar18[-0x13] = uVar4;\n                puVar18[-0x12] = uVar5;\n                puVar18[-0x11] = uVar6;\n                puVar18[-0x18] = uVar25;\n                puVar18[-0x17] = uVar27;\n                puVar18[-0x16] = uVar28;\n                puVar18[-0x15] = uVar29;\n                puVar1 = puVar18 + iVar23 + -0x70;\n                uVar4 = puVar1[1];\n                uVar5 = puVar1[2];\n                uVar6 = puVar1[3];\n                puVar19 = puVar21 + iVar23;\n                uVar25 = *puVar19;\n                uVar27 = puVar19[1];\n                uVar28 = puVar19[2];\n                uVar29 = puVar19[3];\n                if (uVar24 == 0) break;\n                puVar18[-0x1c] = *puVar1;\n                puVar18[-0x1b] = uVar4;\n                puVar18[-0x1a] = uVar5;\n                puVar18[-0x19] = uVar6;\n                *puVar21 = uVar25;\n                puVar18[-0x1f] = uVar27;\n                puVar18[-0x1e] = uVar28;\n                puVar18[-0x1d] = uVar29;\n                puVar18 = puVar21;\n            }\n            puVar18[-0x1c] = *puVar1;\n            puVar18[-0x1b] = uVar4;\n            puVar18[-0x1a] = uVar5;\n            puVar18[-0x19] = uVar6;\n            uVar22 = uVar22 & 0x7f;\n        }\n        for (uVar24 = uVar22 >> 4; uVar24 != 0; uVar24 = uVar24 - 1) {\n            *puVar21 = uVar25;\n            puVar21[1] = uVar27;\n            puVar21[2] = uVar28;\n            puVar21[3] = uVar29;\n            puVar21 = puVar21 + -4;\n            puVar18 = puVar21 + iVar23;\n            uVar25 = *puVar18;\n            uVar27 = puVar18[1];\n            uVar28 = puVar18[2];\n            uVar29 = puVar18[3];\n        }\n        if ((uVar22 & 0xf) != 0) {\n            uVar4 = *(*arg2 + 4);\n            uVar5 = *(*arg2 + 8);\n            uVar6 = *(*arg2 + 0xc);\n            **arg1 = **arg2;\n            *(*arg1 + 4) = uVar4;\n            *(*arg1 + 8) = uVar5;\n            *(*arg1 + 0xc) = uVar6;\n        }\n        *puVar21 = uVar25;\n        puVar21[1] = uVar27;\n        puVar21[2] = uVar28;\n        puVar21[3] = uVar29;\n        return arg1;\n    }\n    if (*0x14003e030 < 3) {\n        if ((arg3 < 0x801) || ((*0x14003f5f8 & 2) == 0)) {\n            if (0x80 < arg3) {\n                iVar23 = (arg1 & 0xf) - 0x10;\n                puVar18 = arg1 - iVar23;\n                puVar21 = arg2 - iVar23;\n                arg3 = arg3 + iVar23;\n                if (0x80 < arg3) {\n                    do {\n                        uVar4 = puVar21[1];\n                        uVar5 = puVar21[2];\n                        uVar6 = puVar21[3];\n                        uVar25 = puVar21[4];\n                        uVar27 = puVar21[5];\n                        uVar28 = puVar21[6];\n                        uVar29 = puVar21[7];\n                        uVar7 = puVar21[8];\n                        uVar8 = puVar21[9];\n                        uVar9 = puVar21[10];\n                        uVar10 = puVar21[0xb];\n                        uVar11 = puVar21[0xc];\n                        uVar12 = puVar21[0xd];\n                        uVar13 = puVar21[0xe];\n                        uVar14 = puVar21[0xf];\n                        *puVar18 = *puVar21;\n                        puVar18[1] = uVar4;\n                        puVar18[2] = uVar5;\n                        puVar18[3] = uVar6;\n                        puVar18[4] = uVar25;\n                        puVar18[5] = uVar27;\n                        puVar18[6] = uVar28;\n                        puVar18[7] = uVar29;\n                        puVar18[8] = uVar7;\n                        puVar18[9] = uVar8;\n                        puVar18[10] = uVar9;\n                        puVar18[0xb] = uVar10;\n                        puVar18[0xc] = uVar11;\n                        puVar18[0xd] = uVar12;\n                        puVar18[0xe] = uVar13;\n                        puVar18[0xf] = uVar14;\n                        uVar4 = puVar21[0x11];\n                        uVar5 = puVar21[0x12];\n                        uVar6 = puVar21[0x13];\n                        uVar25 = puVar21[0x14];\n                        uVar27 = puVar21[0x15];\n                        uVar28 = puVar21[0x16];\n                        uVar29 = puVar21[0x17];\n                        uVar7 = puVar21[0x18];\n                        uVar8 = puVar21[0x19];\n                        uVar9 = puVar21[0x1a];\n                        uVar10 = puVar21[0x1b];\n                        uVar11 = puVar21[0x1c];\n                        uVar12 = puVar21[0x1d];\n                        uVar13 = puVar21[0x1e];\n                        uVar14 = puVar21[0x1f];\n                        puVar18[0x10] = puVar21[0x10];\n                        puVar18[0x11] = uVar4;\n                        puVar18[0x12] = uVar5;\n                        puVar18[0x13] = uVar6;\n                        puVar18[0x14] = uVar25;\n                        puVar18[0x15] = uVar27;\n                        puVar18[0x16] = uVar28;\n                        puVar18[0x17] = uVar29;\n                        puVar18[0x18] = uVar7;\n                        puVar18[0x19] = uVar8;\n                        puVar18[0x1a] = uVar9;\n                        puVar18[0x1b] = uVar10;\n                        puVar18[0x1c] = uVar11;\n                        puVar18[0x1d] = uVar12;\n                        puVar18[0x1e] = uVar13;\n                        puVar18[0x1f] = uVar14;\n                        puVar18 = puVar18 + 0x20;\n                        puVar21 = puVar21 + 0x20;\n                        arg3 = arg3 - 0x80;\n                    } while (0x7f < arg3);\n                }\n            }\n    // WARNING: Could not recover jumptable at 0x00014000c0f6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x140044088\n            pauVar15 = (*(*((arg3 + 0xf >> 4) * 4 + 0x140044088) + 0x140000000))();\n            return pauVar15;\n        }\n    }\n    else if (((arg3 < 0x2001) || (0x180000 < arg3)) || ((*0x14003f5f8 & 2) == 0)) {\n        auVar26 = vmovdqu_avx(*arg2);\n        auVar34 = vmovdqu_avx(*(arg2[-1] + arg3));\n        if (0x100 < arg3) {\n            iVar23 = (arg1 & 0x1f) - 0x20;\n            pauVar16 = arg1 - iVar23;\n            arg2 = arg2 - iVar23;\n            arg3 = arg3 + iVar23;\n            if (0x100 < arg3) {\n                if (0x180000 < arg3) {\n                    do {\n                        uVar22 = arg3;\n                        pauVar20 = arg2;\n                        pauVar17 = pauVar16;\n                        auVar30 = vmovdqu_avx(*pauVar20);\n                        auVar31 = vmovdqu_avx(pauVar20[1]);\n                        auVar32 = vmovdqu_avx(pauVar20[2]);\n                        auVar33 = vmovdqu_avx(pauVar20[3]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *pauVar17 = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[1] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[2] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[3] = auVar30;\n                        auVar30 = vmovdqu_avx(pauVar20[4]);\n                        auVar31 = vmovdqu_avx(pauVar20[5]);\n                        auVar32 = vmovdqu_avx(pauVar20[6]);\n                        auVar33 = vmovdqu_avx(pauVar20[7]);\n                        auVar30 = vmovntdq_avx(auVar30);\n                        pauVar17[4] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar31);\n                        pauVar17[5] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar32);\n                        pauVar17[6] = auVar30;\n                        auVar30 = vmovntdq_avx(auVar33);\n                        pauVar17[7] = auVar30;\n                        pauVar16 = pauVar17[8];\n                        arg2 = pauVar20[8];\n                        arg3 = uVar22 - 0x100;\n                    } while (0xff < uVar22 - 0x100);\n                    uVar24 = uVar22 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x140044064\n                    switch(uVar22) {\n                    case 0x1e1:\n                    case 0x1e2:\n                    case 0x1e3:\n                    case 0x1e4:\n                    case 0x1e5:\n                    case 0x1e6:\n                    case 0x1e7:\n                    case 0x1e8:\n                    case 0x1e9:\n                    case 0x1ea:\n                    case 0x1eb:\n                    case 0x1ec:\n                    case 0x1ed:\n                    case 0x1ee:\n                    case 0x1ef:\n                    case 0x1f0:\n                    case 0x1f1:\n                    case 0x1f2:\n                    case 499:\n                    case 500:\n                    case 0x1f5:\n                    case 0x1f6:\n                    case 0x1f7:\n                    case 0x1f8:\n                    case 0x1f9:\n                    case 0x1fa:\n                    case 0x1fb:\n                    case 0x1fc:\n                    case 0x1fd:\n                    case 0x1fe:\n                    case 0x1ff:\n                        auVar30 = vmovdqu_avx(*(*pauVar20 + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(*pauVar17 + uVar24) = auVar30;\n                    case 0x1c1:\n                    case 0x1c2:\n                    case 0x1c3:\n                    case 0x1c4:\n                    case 0x1c5:\n                    case 0x1c6:\n                    case 0x1c7:\n                    case 0x1c8:\n                    case 0x1c9:\n                    case 0x1ca:\n                    case 0x1cb:\n                    case 0x1cc:\n                    case 0x1cd:\n                    case 0x1ce:\n                    case 0x1cf:\n                    case 0x1d0:\n                    case 0x1d1:\n                    case 0x1d2:\n                    case 0x1d3:\n                    case 0x1d4:\n                    case 0x1d5:\n                    case 0x1d6:\n                    case 0x1d7:\n                    case 0x1d8:\n                    case 0x1d9:\n                    case 0x1da:\n                    case 0x1db:\n                    case 0x1dc:\n                    case 0x1dd:\n                    case 0x1de:\n                    case 0x1df:\n                    case 0x1e0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[1] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[1] + uVar24) = auVar30;\n                    case 0x1a1:\n                    case 0x1a2:\n                    case 0x1a3:\n                    case 0x1a4:\n                    case 0x1a5:\n                    case 0x1a6:\n                    case 0x1a7:\n                    case 0x1a8:\n                    case 0x1a9:\n                    case 0x1aa:\n                    case 0x1ab:\n                    case 0x1ac:\n                    case 0x1ad:\n                    case 0x1ae:\n                    case 0x1af:\n                    case 0x1b0:\n                    case 0x1b1:\n                    case 0x1b2:\n                    case 0x1b3:\n                    case 0x1b4:\n                    case 0x1b5:\n                    case 0x1b6:\n                    case 0x1b7:\n                    case 0x1b8:\n                    case 0x1b9:\n                    case 0x1ba:\n                    case 0x1bb:\n                    case 0x1bc:\n                    case 0x1bd:\n                    case 0x1be:\n                    case 0x1bf:\n                    case 0x1c0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[2] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[2] + uVar24) = auVar30;\n                    case 0x181:\n                    case 0x182:\n                    case 0x183:\n                    case 0x184:\n                    case 0x185:\n                    case 0x186:\n                    case 0x187:\n                    case 0x188:\n                    case 0x189:\n                    case 0x18a:\n                    case 0x18b:\n                    case 0x18c:\n                    case 0x18d:\n                    case 0x18e:\n                    case 399:\n                    case 400:\n                    case 0x191:\n                    case 0x192:\n                    case 0x193:\n                    case 0x194:\n                    case 0x195:\n                    case 0x196:\n                    case 0x197:\n                    case 0x198:\n                    case 0x199:\n                    case 0x19a:\n                    case 0x19b:\n                    case 0x19c:\n                    case 0x19d:\n                    case 0x19e:\n                    case 0x19f:\n                    case 0x1a0:\n                        auVar30 = vmovdqu_avx(*(pauVar20[3] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[3] + uVar24) = auVar30;\n                    case 0x161:\n                    case 0x162:\n                    case 0x163:\n                    case 0x164:\n                    case 0x165:\n                    case 0x166:\n                    case 0x167:\n                    case 0x168:\n                    case 0x169:\n                    case 0x16a:\n                    case 0x16b:\n                    case 0x16c:\n                    case 0x16d:\n                    case 0x16e:\n                    case 0x16f:\n                    case 0x170:\n                    case 0x171:\n                    case 0x172:\n                    case 0x173:\n                    case 0x174:\n                    case 0x175:\n                    case 0x176:\n                    case 0x177:\n                    case 0x178:\n                    case 0x179:\n                    case 0x17a:\n                    case 0x17b:\n                    case 0x17c:\n                    case 0x17d:\n                    case 0x17e:\n                    case 0x17f:\n                    case 0x180:\n                        auVar30 = vmovdqu_avx(*(pauVar20[4] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[4] + uVar24) = auVar30;\n                    case 0x141:\n                    case 0x142:\n                    case 0x143:\n                    case 0x144:\n                    case 0x145:\n                    case 0x146:\n                    case 0x147:\n                    case 0x148:\n                    case 0x149:\n                    case 0x14a:\n                    case 0x14b:\n                    case 0x14c:\n                    case 0x14d:\n                    case 0x14e:\n                    case 0x14f:\n                    case 0x150:\n                    case 0x151:\n                    case 0x152:\n                    case 0x153:\n                    case 0x154:\n                    case 0x155:\n                    case 0x156:\n                    case 0x157:\n                    case 0x158:\n                    case 0x159:\n                    case 0x15a:\n                    case 0x15b:\n                    case 0x15c:\n                    case 0x15d:\n                    case 0x15e:\n                    case 0x15f:\n                    case 0x160:\n                        auVar30 = vmovdqu_avx(*(pauVar20[5] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[5] + uVar24) = auVar30;\n                    case 0x121:\n                    case 0x122:\n                    case 0x123:\n                    case 0x124:\n                    case 0x125:\n                    case 0x126:\n                    case 0x127:\n                    case 0x128:\n                    case 0x129:\n                    case 0x12a:\n                    case 299:\n                    case 300:\n                    case 0x12d:\n                    case 0x12e:\n                    case 0x12f:\n                    case 0x130:\n                    case 0x131:\n                    case 0x132:\n                    case 0x133:\n                    case 0x134:\n                    case 0x135:\n                    case 0x136:\n                    case 0x137:\n                    case 0x138:\n                    case 0x139:\n                    case 0x13a:\n                    case 0x13b:\n                    case 0x13c:\n                    case 0x13d:\n                    case 0x13e:\n                    case 0x13f:\n                    case 0x140:\n                        auVar30 = vmovdqu_avx(*(pauVar20[6] + uVar24));\n                        auVar30 = vmovntdq_avx(auVar30);\n                        *(pauVar17[6] + uVar24) = auVar30;\n                    default:\n                        auVar34 = vmovdqu_avx(auVar34);\n                        *(pauVar17[-1] + uVar22) = auVar34;\n                    case 0x100:\n                        auVar26 = vmovdqu_avx(auVar26);\n                        *arg1 = auVar26;\n                        vzeroupper_avx();\n                        return pauVar15;\n                    }\n                }\n                do {\n                    auVar34 = vmovdqu_avx(*arg2);\n                    auVar30 = vmovdqu_avx(arg2[1]);\n                    auVar31 = vmovdqu_avx(arg2[2]);\n                    auVar32 = vmovdqu_avx(arg2[3]);\n                    *pauVar16 = auVar34;\n                    pauVar16[1] = auVar30;\n                    pauVar16[2] = auVar31;\n                    pauVar16[3] = auVar32;\n                    auVar34 = vmovdqu_avx(arg2[4]);\n                    auVar30 = vmovdqu_avx(arg2[5]);\n                    auVar31 = vmovdqu_avx(arg2[6]);\n                    auVar32 = vmovdqu_avx(arg2[7]);\n                    pauVar16[4] = auVar34;\n                    pauVar16[5] = auVar30;\n                    pauVar16[6] = auVar31;\n                    pauVar16[7] = auVar32;\n                    pauVar16 = pauVar16[8];\n                    arg2 = arg2[8];\n                    arg3 = arg3 - 0x100;\n                } while (0xff < arg3);\n            }\n        }\n    // WARNING: Could not recover jumptable at 0x00014000be52. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x140044040\n        pauVar15 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x140044040) + 0x140000000))(SUB328(auVar26, 0));\n        return pauVar15;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*arg1)[0] = (*arg2)[0];\n        arg2 = *arg2 + 1;\n        arg1 = *arg1 + 1;\n    }\n    return pauVar15;\n}\n",
        "token_count": 7530
    },
    "14000c2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuchar (*) [32] fcn.14000c2b0(uchar (*arg1) [32], ulong noname_1, uint64_t arg3)\n\n{\n    uchar auVar1 [32];\n    uchar (*pauVar2) [32];\n    uchar (*pauVar3) [32];\n    uchar (*pauVar4) [16];\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar uVar7;\n    int64_t iVar10;\n    uchar auVar11 [16];\n    uchar in_YMM0 [32];\n    uchar auVar12 [32];\n    ushort uVar8;\n    uint uVar9;\n    \n    uVar5 = noname_1;\n    iVar10 = uVar5 * 0x101010101010101;\n    if (arg3 < 0x10) {\n        uVar7 = iVar10;\n        uVar8 = iVar10;\n        uVar9 = iVar10;\n    // switch table (16 cases) at 0x1400440b0\n        switch(*(arg3 * 4 + 0x1400440b0) + 0x140000000) {\n        case 0x14000c2f1:\n            *(arg1[-1] + arg3 + 0x11) = iVar10;\n        case 0x14000c2f5:\n            *(arg1[-1] + arg3 + 0x19) = uVar9;\n        case 0x14000c2f9:\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n        case 0x14000c2fe:\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x14000c302:\n            return arg1;\n        case 0x14000c303:\n            *(arg1[-1] + arg3 + 0x12) = iVar10;\n        case 0x14000c307:\n            *(arg1[-1] + arg3 + 0x1a) = uVar9;\n        case 0x14000c30b:\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x14000c320:\n            *(arg1[-1] + arg3 + 0x13) = iVar10;\n        case 0x14000c324:\n            *(arg1[-1] + arg3 + 0x1b) = uVar9;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x14000c330:\n            *(arg1[-1] + arg3 + 0x14) = iVar10;\n        case 0x14000c334:\n            *(arg1[-1] + arg3 + 0x1c) = uVar9;\n            return arg1;\n        case 0x14000c339:\n            *(arg1[-1] + arg3 + 0x15) = iVar10;\n            *(arg1[-1] + arg3 + 0x1d) = uVar8;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x14000c347:\n            *(arg1[-1] + arg3 + 0x17) = iVar10;\n            arg1[-1][arg3 + 0x1f] = uVar7;\n            return arg1;\n        case 0x14000c350:\n            *(arg1[-1] + arg3 + 0x16) = iVar10;\n            *(arg1[-1] + arg3 + 0x1e) = uVar8;\n            return arg1;\n        case 0x14000c35a:\n            *(arg1[-1] + arg3 + 0x18) = iVar10;\n            return arg1;\n        }\n    }\n    auVar11 = CONCAT88(iVar10, iVar10);\n    if (arg3 < 0x21) {\n        **arg1 = auVar11;\n        *(arg1[-1] + arg3 + 0x10) = auVar11;\n        return arg1;\n    }\n    pauVar2 = arg1;\n    if (*0x14003e030 < 3) {\n        if ((arg3 <= *0x14003e038) || ((*0x14003f5f8 & 2) == 0)) {\n            iVar10 = (arg1 & 0xf) - 0x10;\n            pauVar4 = arg1 - iVar10;\n            arg3 = arg3 + iVar10;\n            if (0x80 < arg3) {\n                do {\n                    *pauVar4 = auVar11;\n                    pauVar4[1] = auVar11;\n                    pauVar4[2] = auVar11;\n                    pauVar4[3] = auVar11;\n                    pauVar4[4] = auVar11;\n                    pauVar4[5] = auVar11;\n                    pauVar4[6] = auVar11;\n                    pauVar4[7] = auVar11;\n                    pauVar4 = pauVar4[8];\n                    arg3 = arg3 - 0x80;\n                } while (0x7f < arg3);\n            }\n    // WARNING: Could not recover jumptable at 0x00014000c5f8. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (9 cases) at 0x140044138\n            pauVar2 = (*(*((arg3 + 0xf >> 4) * 4 + 0x140044138) + 0x140000000))(pauVar4, uVar5 - iVar10);\n            return pauVar2;\n        }\n    }\n    else if (((arg3 <= *0x14003e038) || (*0x14003e040 < arg3)) || ((*0x14003f5f8 & 2) == 0)) {\n        auVar12 = vinsertf128_avx(CONCAT1616(SUB3216(in_YMM0 >> 0x80, 0), auVar11), auVar11, 1);\n        iVar10 = (arg1 & 0x1f) - 0x20;\n        pauVar2 = arg1 - iVar10;\n        arg3 = arg3 + iVar10;\n        if (0x100 < arg3) {\n            if (*0x14003e040 < arg3) {\n                do {\n                    uVar5 = arg3;\n                    pauVar3 = pauVar2;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *pauVar3 = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[1] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[2] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[3] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[4] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[5] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[6] = auVar1;\n                    auVar1 = vmovntdq_avx(auVar12);\n                    pauVar3[7] = auVar1;\n                    pauVar2 = pauVar3[8];\n                    arg3 = uVar5 - 0x100;\n                } while (0xff < uVar5 - 0x100);\n                uVar6 = uVar5 - 0xe1 & 0xffffffffffffffe0;\n    // switch table (18 cases) at 0x140044114\n                switch(uVar5) {\n                case 0x1e1:\n                case 0x1e2:\n                case 0x1e3:\n                case 0x1e4:\n                case 0x1e5:\n                case 0x1e6:\n                case 0x1e7:\n                case 0x1e8:\n                case 0x1e9:\n                case 0x1ea:\n                case 0x1eb:\n                case 0x1ec:\n                case 0x1ed:\n                case 0x1ee:\n                case 0x1ef:\n                case 0x1f0:\n                case 0x1f1:\n                case 0x1f2:\n                case 499:\n                case 500:\n                case 0x1f5:\n                case 0x1f6:\n                case 0x1f7:\n                case 0x1f8:\n                case 0x1f9:\n                case 0x1fa:\n                case 0x1fb:\n                case 0x1fc:\n                case 0x1fd:\n                case 0x1fe:\n                case 0x1ff:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(*pauVar3 + uVar6) = auVar1;\n                case 0x1c1:\n                case 0x1c2:\n                case 0x1c3:\n                case 0x1c4:\n                case 0x1c5:\n                case 0x1c6:\n                case 0x1c7:\n                case 0x1c8:\n                case 0x1c9:\n                case 0x1ca:\n                case 0x1cb:\n                case 0x1cc:\n                case 0x1cd:\n                case 0x1ce:\n                case 0x1cf:\n                case 0x1d0:\n                case 0x1d1:\n                case 0x1d2:\n                case 0x1d3:\n                case 0x1d4:\n                case 0x1d5:\n                case 0x1d6:\n                case 0x1d7:\n                case 0x1d8:\n                case 0x1d9:\n                case 0x1da:\n                case 0x1db:\n                case 0x1dc:\n                case 0x1dd:\n                case 0x1de:\n                case 0x1df:\n                case 0x1e0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[1] + uVar6) = auVar1;\n                case 0x1a1:\n                case 0x1a2:\n                case 0x1a3:\n                case 0x1a4:\n                case 0x1a5:\n                case 0x1a6:\n                case 0x1a7:\n                case 0x1a8:\n                case 0x1a9:\n                case 0x1aa:\n                case 0x1ab:\n                case 0x1ac:\n                case 0x1ad:\n                case 0x1ae:\n                case 0x1af:\n                case 0x1b0:\n                case 0x1b1:\n                case 0x1b2:\n                case 0x1b3:\n                case 0x1b4:\n                case 0x1b5:\n                case 0x1b6:\n                case 0x1b7:\n                case 0x1b8:\n                case 0x1b9:\n                case 0x1ba:\n                case 0x1bb:\n                case 0x1bc:\n                case 0x1bd:\n                case 0x1be:\n                case 0x1bf:\n                case 0x1c0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[2] + uVar6) = auVar1;\n                case 0x181:\n                case 0x182:\n                case 0x183:\n                case 0x184:\n                case 0x185:\n                case 0x186:\n                case 0x187:\n                case 0x188:\n                case 0x189:\n                case 0x18a:\n                case 0x18b:\n                case 0x18c:\n                case 0x18d:\n                case 0x18e:\n                case 399:\n                case 400:\n                case 0x191:\n                case 0x192:\n                case 0x193:\n                case 0x194:\n                case 0x195:\n                case 0x196:\n                case 0x197:\n                case 0x198:\n                case 0x199:\n                case 0x19a:\n                case 0x19b:\n                case 0x19c:\n                case 0x19d:\n                case 0x19e:\n                case 0x19f:\n                case 0x1a0:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[3] + uVar6) = auVar1;\n                case 0x161:\n                case 0x162:\n                case 0x163:\n                case 0x164:\n                case 0x165:\n                case 0x166:\n                case 0x167:\n                case 0x168:\n                case 0x169:\n                case 0x16a:\n                case 0x16b:\n                case 0x16c:\n                case 0x16d:\n                case 0x16e:\n                case 0x16f:\n                case 0x170:\n                case 0x171:\n                case 0x172:\n                case 0x173:\n                case 0x174:\n                case 0x175:\n                case 0x176:\n                case 0x177:\n                case 0x178:\n                case 0x179:\n                case 0x17a:\n                case 0x17b:\n                case 0x17c:\n                case 0x17d:\n                case 0x17e:\n                case 0x17f:\n                case 0x180:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[4] + uVar6) = auVar1;\n                case 0x141:\n                case 0x142:\n                case 0x143:\n                case 0x144:\n                case 0x145:\n                case 0x146:\n                case 0x147:\n                case 0x148:\n                case 0x149:\n                case 0x14a:\n                case 0x14b:\n                case 0x14c:\n                case 0x14d:\n                case 0x14e:\n                case 0x14f:\n                case 0x150:\n                case 0x151:\n                case 0x152:\n                case 0x153:\n                case 0x154:\n                case 0x155:\n                case 0x156:\n                case 0x157:\n                case 0x158:\n                case 0x159:\n                case 0x15a:\n                case 0x15b:\n                case 0x15c:\n                case 0x15d:\n                case 0x15e:\n                case 0x15f:\n                case 0x160:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[5] + uVar6) = auVar1;\n                case 0x121:\n                case 0x122:\n                case 0x123:\n                case 0x124:\n                case 0x125:\n                case 0x126:\n                case 0x127:\n                case 0x128:\n                case 0x129:\n                case 0x12a:\n                case 299:\n                case 300:\n                case 0x12d:\n                case 0x12e:\n                case 0x12f:\n                case 0x130:\n                case 0x131:\n                case 0x132:\n                case 0x133:\n                case 0x134:\n                case 0x135:\n                case 0x136:\n                case 0x137:\n                case 0x138:\n                case 0x139:\n                case 0x13a:\n                case 0x13b:\n                case 0x13c:\n                case 0x13d:\n                case 0x13e:\n                case 0x13f:\n                case 0x140:\n                    auVar1 = vmovntdq_avx(auVar12);\n                    *(pauVar3[6] + uVar6) = auVar1;\n                default:\n                    auVar1 = vmovdqu_avx(auVar12);\n                    *(pauVar3[-1] + uVar5) = auVar1;\n                case 0x100:\n                    auVar12 = vmovdqu_avx(auVar12);\n                    *arg1 = auVar12;\n                    vzeroupper_avx();\n                    return arg1;\n                }\n            }\n            do {\n                *pauVar2 = auVar12;\n                pauVar2[1] = auVar12;\n                pauVar2[2] = auVar12;\n                pauVar2[3] = auVar12;\n                pauVar2[4] = auVar12;\n                pauVar2[5] = auVar12;\n                pauVar2[6] = auVar12;\n                pauVar2[7] = auVar12;\n                pauVar2 = pauVar2[8];\n                arg3 = arg3 - 0x100;\n            } while (0xff < arg3);\n        }\n    // WARNING: Could not recover jumptable at 0x00014000c444. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (27 cases) at 0x1400440f0\n        pauVar2 = (*(*((arg3 + 0x1f >> 5) * 4 + 0x1400440f0) + 0x140000000))\n                            (SUB328(auVar12, 0), pauVar2, uVar5 - iVar10);\n        return pauVar2;\n    }\n    for (; arg3 != 0; arg3 = arg3 - 1) {\n        (*pauVar2)[0] = noname_1;\n        pauVar2 = *pauVar2 + 1;\n    }\n    return arg1;\n}\n",
        "token_count": 4171
    },
    "14000ccc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.14000ccc8(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    \n    if (*(arg1 + 0x10) != 0) {\n        uVar5 = 0;\n        puVar7 = *(arg1 + 0x10) + *(arg2 + 8);\n        uVar6 = 0;\n        iVar4 = -1;\n        uVar3 = *puVar7 & 0xf;\n        puVar7 = puVar7 + -*(uVar3 + 0x14002b7a0);\n        puVar1 = puVar7 + -4;\n        uVar2 = *(uVar3 + 0x14002b7b0) & 0x1f;\n        if (*puVar1 >> uVar2 != 0) {\n            do {\n                puVar8 = puVar7 + -*((*puVar7 & 0xf) + 0x14002b7a0);\n                uVar5 = uVar5 + (*(puVar8 + -4) >> (*((*puVar7 & 0xf) + 0x14002b7b0) & 0x1f));\n                if (arg3 < uVar5 + **(arg2 + 0x10) + *(arg2 + 8)) break;\n                uVar6 = uVar6 + 1;\n                puVar7 = puVar8 + -*((*puVar8 & 0xf) + 0x14002b7a0);\n                iVar4 = (*(puVar7 + -4) >> (*((*puVar8 & 0xf) + 0x14002b7b0) & 0x1f)) - 1;\n            } while (uVar6 < *puVar1 >> uVar2);\n            if (uVar6 != 0) {\n                return iVar4;\n            }\n            return -1;\n        }\n    }\n    return -1;\n}\n",
        "token_count": 497
    },
    "14000d4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n// WARNING: Variable defined which should be unmapped: var_bp_38h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14000d4e8(int32_t *arg1, ulong arg2, ulong arg3, int32_t *arg4, ulong *noname_4, ulong noname_5, \n                  uint64_t noname_6, int32_t *noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11\n                  , ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong arg_90h, ulong arg_98h, \n                  ulong arg_a0h, ulong arg_a8h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint32_t uVar11;\n    ulong var_8h_2;\n    ulong var_10h;\n    uchar auStack360 [32];\n    ulong *puStack328;\n    ulong *puStack320;\n    ulong uStack312;\n    ulong uStack304;\n    uint64_t uStack296;\n    int32_t *piStack288;\n    char cStack280;\n    char cStack272;\n    char cStack264;\n    int32_t iStack260;\n    ulong uStack256;\n    int32_t *piStack248;\n    ulong uStack240;\n    int64_t iStack232;\n    uint64_t uStack224;\n    int64_t iStack216;\n    int32_t *piStack208;\n    int32_t iStack200;\n    int32_t iStack196;\n    int32_t iStack192;\n    uint32_t uStack188;\n    int32_t iStack184;\n    ulong *puStack176;\n    ulong uStack168;\n    uint uStack160;\n    uint uStack156;\n    uint32_t uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_70h;\n    ulong var_bp_68h;\n    ulong var_bp_60h;\n    ulong var_58h;\n    uint64_t var_bp_50h;\n    ulong var_48h;\n    ulong var_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong var_10h_2;\n    ulong var_8h;\n    uint64_t uVar12;\n    \n    var_bp_50h = *0x14003e020 ^ auStack360;\n    piStack208 = noname_7;\n    cStack264 = '\\0';\n    uStack256 = arg3;\n    uStack240 = arg2;\n    uVar6 = fcn.14000f7d8(arg2, arg4, noname_4);\n    if ((-2 < uVar6) && (uVar6 < *(noname_4 + 4))) {\n        if ((*arg1 == -0x1f928c9d) && (((arg1[6] == 4 && (arg1[8] + 0xe66cfae0U < 3)) && (*(arg1 + 0xc) == 0)))) {\n            iVar8 = fcn.14000ca1c();\n            if (*(iVar8 + 0x20) == 0) goto code_r0x00014000d950;\n            iVar8 = fcn.14000ca1c();\n            arg1 = *(iVar8 + 0x20);\n            iVar8 = fcn.14000ca1c();\n            cStack264 = '\\x01';\n            arg3 = *(iVar8 + 0x28);\n            uStack256 = arg3;\n            fcn.14000b760(*(arg1 + 0xe));\n            if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && ((arg1[8] + 0xe66cfae0U < 3 && (*(arg1 + 0xc) == 0))))\n            goto code_r0x00014000d9b7;\n            iVar8 = fcn.14000ca1c();\n            if (*(iVar8 + 0x38) != 0) {\n                iVar8 = fcn.14000ca1c();\n                uVar10 = *(iVar8 + 0x38);\n                iVar8 = fcn.14000ca1c();\n                *(iVar8 + 0x38) = 0;\n                cVar5 = fcn.14000f870(arg1, uVar10);\n                arg3 = uStack256;\n                if (cVar5 == '\\0') {\n                    cVar5 = fcn.14000f960(uVar10);\n                    if (cVar5 != '\\0') {\n                        fcn.14000b8c0(arg1);\n                        fcn.14000eca8(&var_bp_68h);\n                        fcn.14000bb04(&var_bp_68h, 0x14003c568);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    fcn.140019600(uVar10);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n        }\n        uStack168 = *(arg4 + 2);\n        puStack176 = noname_4;\n        if (((*arg1 == -0x1f928c9d) && (arg1[6] == 4)) && (arg1[8] + 0xe66cfae0U < 3)) {\n            if (*(noname_4 + 0xc) != 0) {\n                puStack320 = puStack320 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                puStack328 = noname_4;\n                fcn.14000affc(&uStack144, &puStack176, uVar6, arg4);\n                uStack160 = uStack144;\n                uStack156 = uStack140;\n                uStack152 = var_80h;\n                uStack148 = var_80h._4_4_;\n                if (var_80h < var_70h) {\n                    iVar8 = CONCAT44(uStack140, uStack144);\n                    iStack232 = iVar8;\n                    do {\n                        uVar12 = 0;\n                        iVar9 = *(*CONCAT44(uStack156, uStack160) + 0x10) + var_80h * 0x14;\n                        piVar1 = iVar9 + *(iVar8 + 8);\n                        iStack200 = *piVar1;\n                        iStack196 = piVar1[1];\n                        iStack192 = piVar1[2];\n                        uVar4 = piVar1[3];\n                        iStack184 = *(iVar9 + 0x10 + *(iVar8 + 8));\n                        uStack188 = uVar4;\n                        if (((iStack200 <= uVar6) && (uVar6 <= iStack196)) &&\n                           (iStack216 = iStack184 + *(arg4 + 2),  arg2 = uStack240,  uVar4 != 0)) {\n                            do {\n                                puVar2 = iStack216 + uVar12 * 0x14;\n                                var_bp_68h._0_4_ = *puVar2;\n                                var_bp_68h._4_4_ = puVar2[1];\n                                var_bp_60h._0_4_ = puVar2[2];\n                                var_bp_60h._4_4_ = puVar2[3];\n                                var_58h._0_4_ = *(iStack216 + 0x10 + uVar12 * 0x14);\n                                iVar8 = fcn.14000b734();\n                                piStack248 = iVar8 + 4 + *(*(arg1 + 0xc) + 0xc);\n                                iVar8 = fcn.14000b734();\n                                iStack260 = *(iVar8 + *(*(arg1 + 0xc) + 0xc));\n                                arg2 = uStack240;\n                                iVar8 = iStack232;\n                                for (; uStack240 = arg2,  iStack232 = iVar8,  0 < iStack260; iStack260 = iStack260 + -1)\n                                {\n                                    iVar8 = fcn.14000b734();\n                                    uStack224 = iVar8 + *piStack248;\n                                    iVar7 = fcn.14000e3c8(&var_bp_68h, uStack224, *(arg1 + 0xc));\n                                    arg2 = uStack240;\n                                    if (iVar7 != 0) {\n                                        cStack272 = noname_5;\n                                        cStack280 = cStack264;\n                                        piStack288 = piStack208;\n                                        uStack296 = uStack296 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n                                        uStack304 = &iStack200;\n                                        uStack312 = uStack224;\n                                        puStack320 = &var_bp_68h;\n                                        puStack328 = noname_4;\n                                        fcn.14000d340(arg1, uStack240, uStack256, arg4);\n                                        iVar8 = iStack232;\n                                        goto code_r0x00014000d82b;\n                                    }\n                                    piStack248 = piStack248 + 1;\n                                    iVar8 = iStack232;\n                                }\n                                uVar11 = uVar12 + 1;\n                                uVar12 = uVar11;\n                            } while (uVar11 != uVar4);\n                        }\ncode_r0x00014000d82b:\n                        var_80h._0_4_ = var_80h + 1;\n                    } while (var_80h < var_70h);\n                }\n            }\n            iVar8 = 0;\n            if ((0x19930520 < (*noname_4 & 0x1fffffff)) &&\n               (((*(noname_4 + 4) != 0 && (iVar9 = fcn.14000b720(),  iVar9 + *(noname_4 + 4) != 0)) ||\n                (((*(noname_4 + 0x24) >> 2 & 1) != 0 && (cVar5 = fcn.14000ae40(arg4, noname_4),  cVar5 == '\\0')))))) {\n                if ((*(noname_4 + 0x24) >> 2 & 1) != 0) {\n                    iVar8 = fcn.14000ca1c();\n                    *(iVar8 + 0x20) = arg1;\n                    iVar8 = fcn.14000ca1c();\n                    *(iVar8 + 0x28) = uStack256;\n                    fcn.140019600(uStack256);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (*(noname_4 + 4) != 0) {\n                    iVar8 = fcn.14000b720();\n                    iVar8 = iVar8 + *(noname_4 + 4);\n                }\n                cVar5 = fcn.14000f870(arg1, iVar8);\n                if (cVar5 == '\\0') {\n                    uVar10 = fcn.14000af0c(arg2, arg4, noname_4, &uStack224);\n                    cStack280 = noname_5;\n                    uStack296 = 0;\n                    uStack304 = CONCAT44(uStack304._4_4_, 0xffffffff);\n                    uStack312 = CONCAT44(uStack312._4_4_, 0xffffffff);\n                    puStack320 = noname_4;\n                    puStack328 = NULL;\n                    piStack288 = arg4;\n                    fcn.14000b2a8(arg2, arg1, uStack256, uVar10);\n                }\n            }\n        }\n        else if (*(noname_4 + 0xc) != 0) {\n            if (noname_5 != '\\0') goto code_r0x00014000d9b7;\n            uStack304 = noname_7;\n            uStack312 = uStack312 & 0xffffffff00000000 | noname_6 & 0xffffffff;\n            puStack320 = puStack320 & 0xffffffff00000000 | uVar6;\n            puStack328 = noname_4;\n            fcn.14000debc(arg1, arg2, arg3, arg4);\n        }\n        iVar8 = fcn.14000ca1c();\n        if (*(iVar8 + 0x38) == 0) {\ncode_r0x00014000d950:\n            fcn.140009d20(var_bp_50h ^ auStack360);\n            return;\n        }\n    }\ncode_r0x00014000d9b7:\n    fcn.140016438();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 2965
    },
    "14000f4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14000f4dc(int64_t *arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int32_t iVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    int64_t *piVar9;\n    uint64_t arg2_00;\n    int64_t arg3_00;\n    ulong uVar10;\n    uchar auStack312 [32];\n    uint32_t **ppuStack280;\n    ulong uStack264;\n    ulong uStack256;\n    int32_t iStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t *puStack232;\n    uint64_t uStack224;\n    int64_t *piStack216;\n    ulong uStack208;\n    int64_t *piStack200;\n    int32_t *piStack192;\n    int64_t *piStack184;\n    uchar auStack176 [16];\n    uint32_t *puStack160;\n    uint64_t uStack152;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint32_t auStack120 [2];\n    uint64_t uStack112;\n    uint64_t uStack88;\n    \n    uStack88 = *0x14003e020 ^ auStack312;\n    uStack240 = arg4;\n    piStack216 = arg1;\n    piStack200 = arg1;\n    uStack208 = fcn.14000b720();\n    uVar4 = fcn.14000cc58(arg3, arg2);\n    arg2_00 = uVar4;\n    piVar1 = arg2 + 0x48;\n    piStack192 = piVar1;\n    if (*piVar1 == 0) {\n        iVar5 = fcn.14000ca1c();\n        if (*(iVar5 + 0x78) != -2) {\n            iVar5 = fcn.14000ca1c();\n            arg2_00 = *(iVar5 + 0x78);\n            iVar5 = fcn.14000ca1c();\n            *(iVar5 + 0x78) = 0xfffffffe;\n        }\n    }\n    else {\n        iVar5 = fcn.14000ca1c();\n        if (*(iVar5 + 0x78) != -2) {\n            fcn.140016438();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        arg2_00 = *piVar1 - 2;\n    }\n    iVar5 = fcn.14000ca1c();\n    *(iVar5 + 0x30) = *(iVar5 + 0x30) + 1;\n    piVar9 = arg2 + 8;\n    if (*(arg3 + 8) == 0) {\n        auStack120[0] = 0;\n    }\n    else {\n        puVar8 = *(arg3 + 8) + *piVar9;\n        uVar7 = *puVar8 & 0xf;\n        uStack112 = puVar8 - *(uVar7 + 0x14002b7a0);\n        auStack120[0] = *(uStack112 - 4) >> (*(uVar7 + 0x14002b7b0) & 0x1f);\n    }\n    uStack264 = auStack120;\n    puStack232 = auStack120;\n    ppuStack280 = &puStack232;\n    uStack256 = uStack112;\n    uStack224 = uStack112;\n    piStack184 = piVar9;\n    fcn.14000faa0(auStack120, arg2_00, arg4, &uStack264);\n    while( true ) {\n        uVar7 = uStack256;\n        puStack160 = auStack120;\n        uStack152 = uStack112;\n        if ((uStack256 < uStack112) || (uStack256 <= uStack224)) break;\n        fcn.14000f9e8(uStack264, &uStack256);\n        puVar3 = uStack264;\n        auStack176 = *(uStack264 + 4);\n        uVar10 = SUB168(auStack176 >> 0x40, 0);\n        uStack256._0_4_ = uVar7;\n        uStack256._4_4_ = SUB84(uVar7, 4);\n        uStack136 = uStack264;\n        uStack132 = uStack264._4_4_;\n        uStack128 = uStack256;\n        uStack124 = uStack256._4_4_;\n        uStack256 = uVar7;\n        fcn.14000f9e8(uStack264, &uStack256);\n        uStack256 = uVar7 - puVar3[4];\n        ppuStack280 = &uStack264;\n        uStack244 = fcn.14000fb70(&puStack232, arg4, &uStack136, arg2_00);\n        arg2_00 = uStack244;\n        iVar6 = uVar10;\n        iStack248 = 0;\n        if (iVar6 != 0) {\n            iStack248 = uVar10 >> 0x20;\n        }\n        if (iStack248 != 0) {\n            *piVar1 = uStack244 + 2;\n            if (iVar6 - 1U < 2) {\n                iVar5 = *piStack216;\n                if (iVar6 == 2) {\n                    arg3_00 = *(auStack176._12_4_ + iVar5);\n                }\n                else {\n                    arg3_00 = auStack176._12_4_ + iVar5;\n                }\n                fcn.1400100c0(iStack248 + *piVar9, iVar5, arg3_00, 0x103);\n            }\n            else {\n                fcn.140010010(iStack248 + *piVar9, arg1, 0x103);\n            }\n            fcn.14000b748(uStack208);\n        }\n    }\n    iVar5 = fcn.14000ca1c();\n    if (0 < *(iVar5 + 0x30)) {\n        iVar5 = fcn.14000ca1c();\n        *(iVar5 + 0x30) = *(iVar5 + 0x30) + -1;\n    }\n    fcn.140009d20(uStack88 ^ auStack312);\n    return;\n}\n",
        "token_count": 1466
    },
    "14001010": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.140010108(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint auStackX8 [2];\n    \n    if (*arg1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            arg1[1] = 0;\n            iVar2 = 0;\n            *(arg1 + 2) = 1;\n        }\n        else {\n            iVar2 = arg1[1];\n        }\n        iVar2 = fcn.14001a554(auStackX8, iVar2);\n        *arg1 = iVar2;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n        if (iVar2 == 0) {\n            fcn.140016438();\n            pcVar1 = swi(3);\n            iVar2 = (*pcVar1)();\n            return iVar2;\n        }\n    }\n    return *arg1;\n}\n",
        "token_count": 231
    },
    "14001038": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14001038c(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h)\n\n{\n    int64_t iVar1;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x14004009c == 0;\n    var_30h._0_1_ = 0;\n    var_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_bp_28h._0_4_ = *0x14003e298;\n        var_bp_28h._4_4_ = *0x14003e29c;\n        uStack40 = *0x14003e2a0;\n        uStack36 = *0x14003e2a4;\n    }\n    fcn.140010428(noname_0, noname_1, noname_2, noname_3);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_10h != '\\0') {\n        iVar1 = fcn.140010108(&var_40h);\n        *(iVar1 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar1 = fcn.140010108(&var_40h);\n        *(iVar1 + 0x24) = var_10h._4_4_;\n    }\n    return;\n}\n",
        "token_count": 454
    },
    "14001186": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.140011868(uint8_t *arg1)\n\n{\n    int32_t *arg4;\n    int64_t **arg1_00;\n    uint8_t uVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int64_t *piVar4;\n    bool bVar5;\n    char cVar6;\n    uint64_t in_RAX;\n    char *pcVar7;\n    uint64_t uVar8;\n    int64_t arg3;\n    int32_t iVar9;\n    uchar uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int64_t iVar13;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uint uStack72;\n    uchar auStack68 [4];\n    ulong uStack64;\n    uint64_t uStack56;\n    \n    uVar1 = arg1[0x39];\n    pcVar7 = in_RAX & 0xffffffffffffff00;\n    if (uVar1 != 0x46) {\n        if (uVar1 == 0x4e) {\n            if ((*arg1 & 8) != 0) goto code_r0x0001400119e8;\n            arg1[0x24] = 8;\n        }\n        else if (*(arg1 + 0x34) == 0) {\n            if (uVar1 == 0x49) {\n                pcVar3 = *(arg1 + 0x10);\n                cVar6 = *pcVar3;\n                if ((cVar6 == '3') && (pcVar3[1] == '2')) {\n                    pcVar7 = pcVar3 + 2;\n                    *(arg1 + 0x34) = 10;\n                    *(arg1 + 0x10) = pcVar7;\n                }\n                else if (cVar6 == '6') {\n                    if (pcVar3[1] == '4') {\n                        pcVar7 = pcVar3 + 2;\n                        *(arg1 + 0x34) = 0xb;\n                        *(arg1 + 0x10) = pcVar7;\n                    }\n                }\n                else if ((cVar6 + 0xa8U < 0x21) && ((0x120821001U >> (cVar6 + 0xa8U & 0x3f) & 1) != 0)) {\n                    *(arg1 + 0x34) = 9;\n                }\n            }\n            else if (uVar1 == 0x4c) {\n                *(arg1 + 0x34) = 8;\n            }\n            else if (uVar1 == 0x54) {\n                *(arg1 + 0x34) = 0xd;\n            }\n            else {\n                if (uVar1 == 0x68) {\n                    if (**(arg1 + 0x10) == 'h') {\n                        *(arg1 + 0x10) = *(arg1 + 0x10) + 1;\n                        pcVar7 = 0x1;\n                    }\n                    else {\n                        pcVar7 = 0x2;\n                    }\n                }\n                else {\n                    if (uVar1 == 0x6a) {\n                        *(arg1 + 0x34) = 5;\n                        goto code_r0x0001400119e8;\n                    }\n                    if (uVar1 != 0x6c) {\n                        if (uVar1 == 0x74) {\n                            *(arg1 + 0x34) = 7;\n                        }\n                        else if (uVar1 == 0x77) {\n                            *(arg1 + 0x34) = 0xc;\n                        }\n                        else if (uVar1 == 0x7a) {\n                            *(arg1 + 0x34) = 6;\n                        }\n                        goto code_r0x0001400119e8;\n                    }\n                    if (**(arg1 + 0x10) == 'l') {\n                        *(arg1 + 0x10) = *(arg1 + 0x10) + 1;\n                        pcVar7 = 0x4;\n                    }\n                    else {\n                        pcVar7 = 0x3;\n                    }\n                }\n                *(arg1 + 0x34) = pcVar7;\n            }\ncode_r0x0001400119e8:\n            return CONCAT71(pcVar7 >> 8, 1);\n        }\n        iVar13 = *(arg1 + 8);\n        *(iVar13 + 0x30) = 1;\n        *(iVar13 + 0x2c) = 0x16;\n        uStack64 = 0x1400118c7;\n        uVar8 = fcn.140010428(0, 0, 0, 0);\n        return uVar8 & 0xffffffffffffff00;\n    }\n    if ((*arg1 & 8) != 0) goto code_r0x0001400119e8;\n    arg1[0x24] = 7;\n    uStack56 = *0x14003e020 ^ &stack0xffffffffffffff88;\n    uVar10 = 0x78;\n    uVar1 = arg1[0x39];\n    iVar13 = 1;\n    if (uVar1 < 'e') {\n        if (uVar1 == 100) {\ncode_r0x000140011acf:\n            *(arg1 + 0x28) = *(arg1 + 0x28) | 0x10;\ncode_r0x000140011ad3:\n            cVar6 = fcn.140010c9c(arg1);\n        }\n        else if (uVar1 < 'T') {\n            if (uVar1 == 0x53) {\ncode_r0x000140011b16:\n                cVar6 = fcn.140012250(arg1);\n            }\n            else {\n                if (uVar1 != 0x41) {\n                    if (uVar1 == 0x43) {\ncode_r0x000140011a89:\n                        cVar6 = fcn.1400120c4(arg1);\n                        goto code_r0x000140011b39;\n                    }\n                    if (((uVar1 != 0x45) && (uVar1 != 0x46)) && (uVar1 != 0x47)) goto code_r0x000140011dc7;\n                }\ncode_r0x000140011a60:\n                cVar6 = fcn.140011e70(arg1);\n            }\n        }\n        else {\n            if (uVar1 == 0x58) goto code_r0x000140011b31;\n            if (uVar1 != 0x5a) {\n                if (uVar1 != 0x61) {\n                    if (uVar1 != 99) goto code_r0x000140011dc7;\n                    goto code_r0x000140011a89;\n                }\n                goto code_r0x000140011a60;\n            }\n            cVar6 = fcn.140011df4(arg1);\n        }\n    }\n    else if (uVar1 < 'p') {\n        if (uVar1 == 0x6f) {\n            if ((*(arg1 + 0x28) >> 5 & 1) != 0) {\n                *(arg1 + 0x28) = *(arg1 + 0x28) | 0x80;\n            }\n            cVar6 = fcn.140010a98(arg1);\n        }\n        else {\n            if (((uVar1 == 0x65) || (uVar1 == 0x66)) || (uVar1 == 0x67)) goto code_r0x000140011a60;\n            if (uVar1 == 0x69) goto code_r0x000140011acf;\n            if (uVar1 != 0x6e) goto code_r0x000140011dc7;\n            cVar6 = fcn.140012198(arg1);\n        }\n    }\n    else {\n        if (uVar1 == 0x70) {\n            *(arg1 + 0x30) = 0x10;\n            *(arg1 + 0x34) = 0xb;\n        }\n        else {\n            if (uVar1 == 0x73) goto code_r0x000140011b16;\n            if (uVar1 == 0x75) goto code_r0x000140011ad3;\n            if (uVar1 != 0x78) goto code_r0x000140011dc7;\n        }\ncode_r0x000140011b31:\n        cVar6 = fcn.140010ea0(arg1);\n    }\ncode_r0x000140011b39:\n    if ((cVar6 != '\\0') && (arg1[0x38] == 0)) {\n        uVar2 = *(arg1 + 0x28);\n        uStack72 = (uStack72 >> 0x10 & 0xff00) << 0x10;\n        arg3 = 0;\n        if ((uVar2 >> 4 & 1) != 0) {\n            uStack72._1_3_ = uStack72 >> 8;\n            if ((uVar2 >> 6 & 1) == 0) {\n                if ((uVar2 & 1) == 0) {\n                    if ((uVar2 >> 1 & 1) != 0) {\n                        uStack72 = CONCAT31(uStack72._1_3_, 0x20);\n                        arg3 = iVar13;\n                    }\n                }\n                else {\n                    uStack72 = CONCAT31(uStack72._1_3_, 0x2b);\n                    arg3 = iVar13;\n                }\n            }\n            else {\n                uStack72 = CONCAT31(uStack72._1_3_, 0x2d);\n                arg3 = iVar13;\n            }\n        }\n        uVar1 = arg1[0x39];\n        if (((uVar1 + 0xa8 & 0xdf) == 0) && ((uVar2 >> 5 & 1) != 0)) {\n            bVar5 = true;\n        }\n        else {\n            bVar5 = false;\n        }\n        if ((bVar5) || ((uVar1 + 0xbf & 0xdf) == 0)) {\n            (&stack0xffffffffffffffb8)[arg3] = 0x30;\n            if ((uVar1 == 0x58) || (uVar1 == 0x41)) {\n                uVar10 = 0x58;\n            }\n            (&stack0xffffffffffffffb9)[arg3] = uVar10;\n            arg3 = arg3 + 2;\n        }\n        iVar9 = (*(arg1 + 0x2c) - arg3) - *(arg1 + 0x48);\n        if (((uVar2 & 0xc) == 0) && (iVar12 = 0,  0 < iVar9)) {\n            iVar11 = *(arg1 + 0x20);\n            do {\n                iVar13 = *(arg1 + 0x460);\n                if (*(iVar13 + 0x10) == *(iVar13 + 8)) {\n                    if (*(iVar13 + 0x18) == '\\0') {\n                        iVar11 = -1;\n                    }\n                    else {\n                        iVar11 = iVar11 + 1;\n                    }\n                    *(arg1 + 0x20) = iVar11;\n                }\n                else {\n                    *(arg1 + 0x20) = iVar11 + 1;\n                    *(iVar13 + 0x10) = *(iVar13 + 0x10) + 1;\n                    ***(arg1 + 0x460) = 0x20;\n                    **(arg1 + 0x460) = **(arg1 + 0x460) + 1;\n                }\n                iVar11 = *(arg1 + 0x20);\n            } while ((iVar11 != -1) && (iVar12 = iVar12 + 1,  iVar12 < iVar9));\n        }\n        uStack88 = *(arg1 + 8);\n        arg4 = arg1 + 0x20;\n        arg1_00 = arg1 + 0x460;\n        fcn.140012368(arg1_00, &stack0xffffffffffffffb8, arg3, arg4);\n        if (((*(arg1 + 0x28) >> 3 & 1) != 0) && (((*(arg1 + 0x28) >> 2 & 1) == 0 && (iVar12 = 0,  0 < iVar9)))) {\n            iVar11 = *arg4;\n            do {\n                piVar4 = *arg1_00;\n                if (piVar4[2] == piVar4[1]) {\n                    if (*(piVar4 + 3) == '\\0') {\n                        iVar11 = -1;\n                    }\n                    else {\n                        iVar11 = iVar11 + 1;\n                    }\n                    *arg4 = iVar11;\n                }\n                else {\n                    *arg4 = iVar11 + 1;\n                    piVar4[2] = piVar4[2] + 1;\n                    ***arg1_00 = 0x30;\n                    **arg1_00 = **arg1_00 + 1;\n                }\n                iVar11 = *arg4;\n            } while ((iVar11 != -1) && (iVar12 = iVar12 + 1,  iVar12 < iVar9));\n        }\n        if ((arg1[0x4c] == 0) || (*(arg1 + 0x48) < 1)) {\n            uStack88 = *(arg1 + 8);\n            fcn.140012368(arg1_00, *(arg1 + 0x40), *(arg1 + 0x48), arg4);\n        }\n        else {\n            iVar12 = 0;\n            do {\n                uStack88 = *(arg1 + 8);\n                uStack72 = 0;\n                iVar11 = fcn.14001b5e4(&stack0xffffffffffffffb8, &stack0xffffffffffffffbc, 6);\n                if ((iVar11 != 0) || (uStack72 == 0)) {\n                    *arg4 = -1;\n                    break;\n                }\n                uStack88 = *(arg1 + 8);\n                fcn.140012368(arg1_00, &stack0xffffffffffffffbc, uStack72, arg4);\n                iVar12 = iVar12 + 1;\n            } while (iVar12 != *(arg1 + 0x48));\n        }\n        iVar12 = *arg4;\n        if (((-1 < iVar12) && ((*(arg1 + 0x28) >> 2 & 1) != 0)) && (iVar11 = 0,  0 < iVar9)) {\n            do {\n                piVar4 = *arg1_00;\n                if (piVar4[2] == piVar4[1]) {\n                    if (*(piVar4 + 3) == '\\0') {\n                        iVar12 = -1;\n                    }\n                    else {\n                        iVar12 = iVar12 + 1;\n                    }\n                    *arg4 = iVar12;\n                }\n                else {\n                    *arg4 = iVar12 + 1;\n                    piVar4[2] = piVar4[2] + 1;\n                    ***arg1_00 = 0x20;\n                    **arg1_00 = **arg1_00 + 1;\n                }\n                iVar12 = *arg4;\n            } while ((iVar12 != -1) && (iVar11 = iVar11 + 1,  iVar11 < iVar9));\n        }\n    }\ncode_r0x000140011dc7:\n    uVar8 = fcn.140009d20(uStack56 ^ &stack0xffffffffffffff88);\n    return uVar8;\n}\n",
        "token_count": 3491
    },
    "1400119f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_10h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400119f0(int64_t arg1)\n\n{\n    int32_t *arg4;\n    int64_t **arg1_00;\n    uint32_t uVar1;\n    int64_t *piVar2;\n    bool bVar3;\n    char cVar4;\n    int64_t arg3;\n    int32_t iVar5;\n    uchar uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    ulong var_30h;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uint uStack72;\n    uchar auStack68 [12];\n    uint64_t uStack56;\n    ulong var_bp_20h;\n    ulong var_bp_10h;\n    \n    uStack56 = *0x14003e020 ^ auStack120;\n    uVar6 = 0x78;\n    cVar4 = *(arg1 + 0x39);\n    iVar9 = 1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x000140011acf:\n            *(arg1 + 0x28) = *(arg1 + 0x28) | 0x10;\ncode_r0x000140011ad3:\n            cVar4 = fcn.140010c9c(arg1);\n        }\n        else if (cVar4 < 'T') {\n            if (cVar4 == 'S') {\ncode_r0x000140011b16:\n                cVar4 = fcn.140012250(arg1);\n            }\n            else {\n                if (cVar4 != 'A') {\n                    if (cVar4 == 'C') {\ncode_r0x000140011a89:\n                        cVar4 = fcn.1400120c4(arg1);\n                        goto code_r0x000140011b39;\n                    }\n                    if (((cVar4 != 'E') && (cVar4 != 'F')) && (cVar4 != 'G')) goto code_r0x000140011dc7;\n                }\ncode_r0x000140011a60:\n                cVar4 = fcn.140011e70(arg1);\n            }\n        }\n        else {\n            if (cVar4 == 'X') goto code_r0x000140011b31;\n            if (cVar4 != 'Z') {\n                if (cVar4 != 'a') {\n                    if (cVar4 != 'c') goto code_r0x000140011dc7;\n                    goto code_r0x000140011a89;\n                }\n                goto code_r0x000140011a60;\n            }\n            cVar4 = fcn.140011df4(arg1);\n        }\n    }\n    else if (cVar4 < 'p') {\n        if (cVar4 == 'o') {\n            if ((*(arg1 + 0x28) >> 5 & 1) != 0) {\n                *(arg1 + 0x28) = *(arg1 + 0x28) | 0x80;\n            }\n            cVar4 = fcn.140010a98(arg1);\n        }\n        else {\n            if (((cVar4 == 'e') || (cVar4 == 'f')) || (cVar4 == 'g')) goto code_r0x000140011a60;\n            if (cVar4 == 'i') goto code_r0x000140011acf;\n            if (cVar4 != 'n') goto code_r0x000140011dc7;\n            cVar4 = fcn.140012198(arg1);\n        }\n    }\n    else {\n        if (cVar4 == 'p') {\n            *(arg1 + 0x30) = 0x10;\n            *(arg1 + 0x34) = 0xb;\n        }\n        else {\n            if (cVar4 == 's') goto code_r0x000140011b16;\n            if (cVar4 == 'u') goto code_r0x000140011ad3;\n            if (cVar4 != 'x') goto code_r0x000140011dc7;\n        }\ncode_r0x000140011b31:\n        cVar4 = fcn.140010ea0(arg1);\n    }\ncode_r0x000140011b39:\n    if ((cVar4 != '\\0') && (*(arg1 + 0x38) == '\\0')) {\n        uVar1 = *(arg1 + 0x28);\n        uStack72 = (uStack72 >> 0x10 & 0xff00) << 0x10;\n        arg3 = 0;\n        if ((uVar1 >> 4 & 1) != 0) {\n            uStack72._1_3_ = uStack72 >> 8;\n            if ((uVar1 >> 6 & 1) == 0) {\n                if ((uVar1 & 1) == 0) {\n                    if ((uVar1 >> 1 & 1) != 0) {\n                        uStack72 = CONCAT31(uStack72._1_3_, 0x20);\n                        arg3 = iVar9;\n                    }\n                }\n                else {\n                    uStack72 = CONCAT31(uStack72._1_3_, 0x2b);\n                    arg3 = iVar9;\n                }\n            }\n            else {\n                uStack72 = CONCAT31(uStack72._1_3_, 0x2d);\n                arg3 = iVar9;\n            }\n        }\n        cVar4 = *(arg1 + 0x39);\n        if (((cVar4 + 0xa8U & 0xdf) == 0) && ((uVar1 >> 5 & 1) != 0)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        if ((bVar3) || ((cVar4 + 0xbfU & 0xdf) == 0)) {\n            auStack68[arg3 + -4] = 0x30;\n            if ((cVar4 == 'X') || (cVar4 == 'A')) {\n                uVar6 = 0x58;\n            }\n            auStack68[arg3 + -3] = uVar6;\n            arg3 = arg3 + 2;\n        }\n        iVar5 = (*(arg1 + 0x2c) - arg3) - *(arg1 + 0x48);\n        if (((uVar1 & 0xc) == 0) && (iVar8 = 0,  0 < iVar5)) {\n            iVar7 = *(arg1 + 0x20);\n            do {\n                iVar9 = *(arg1 + 0x460);\n                if (*(iVar9 + 0x10) == *(iVar9 + 8)) {\n                    if (*(iVar9 + 0x18) == '\\0') {\n                        iVar7 = -1;\n                    }\n                    else {\n                        iVar7 = iVar7 + 1;\n                    }\n                    *(arg1 + 0x20) = iVar7;\n                }\n                else {\n                    *(arg1 + 0x20) = iVar7 + 1;\n                    *(iVar9 + 0x10) = *(iVar9 + 0x10) + 1;\n                    ***(arg1 + 0x460) = 0x20;\n                    **(arg1 + 0x460) = **(arg1 + 0x460) + 1;\n                }\n                iVar7 = *(arg1 + 0x20);\n            } while ((iVar7 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar5));\n        }\n        uStack88 = *(arg1 + 8);\n        arg4 = arg1 + 0x20;\n        arg1_00 = arg1 + 0x460;\n        fcn.140012368(arg1_00, &uStack72, arg3, arg4);\n        if (((*(arg1 + 0x28) >> 3 & 1) != 0) && (((*(arg1 + 0x28) >> 2 & 1) == 0 && (iVar8 = 0,  0 < iVar5)))) {\n            iVar7 = *arg4;\n            do {\n                piVar2 = *arg1_00;\n                if (piVar2[2] == piVar2[1]) {\n                    if (*(piVar2 + 3) == '\\0') {\n                        iVar7 = -1;\n                    }\n                    else {\n                        iVar7 = iVar7 + 1;\n                    }\n                    *arg4 = iVar7;\n                }\n                else {\n                    *arg4 = iVar7 + 1;\n                    piVar2[2] = piVar2[2] + 1;\n                    ***arg1_00 = 0x30;\n                    **arg1_00 = **arg1_00 + 1;\n                }\n                iVar7 = *arg4;\n            } while ((iVar7 != -1) && (iVar8 = iVar8 + 1,  iVar8 < iVar5));\n        }\n        if ((*(arg1 + 0x4c) == '\\0') || (*(arg1 + 0x48) < 1)) {\n            uStack88 = *(arg1 + 8);\n            fcn.140012368(arg1_00, *(arg1 + 0x40), *(arg1 + 0x48), arg4);\n        }\n        else {\n            iVar8 = 0;\n            do {\n                uStack88 = *(arg1 + 8);\n                uStack72 = 0;\n                iVar7 = fcn.14001b5e4(&uStack72, auStack68, 6);\n                if ((iVar7 != 0) || (uStack72 == 0)) {\n                    *arg4 = -1;\n                    break;\n                }\n                uStack88 = *(arg1 + 8);\n                fcn.140012368(arg1_00, auStack68, uStack72, arg4);\n                iVar8 = iVar8 + 1;\n            } while (iVar8 != *(arg1 + 0x48));\n        }\n        iVar8 = *arg4;\n        if (((-1 < iVar8) && ((*(arg1 + 0x28) >> 2 & 1) != 0)) && (iVar7 = 0,  0 < iVar5)) {\n            do {\n                piVar2 = *arg1_00;\n                if (piVar2[2] == piVar2[1]) {\n                    if (*(piVar2 + 3) == '\\0') {\n                        iVar8 = -1;\n                    }\n                    else {\n                        iVar8 = iVar8 + 1;\n                    }\n                    *arg4 = iVar8;\n                }\n                else {\n                    *arg4 = iVar8 + 1;\n                    piVar2[2] = piVar2[2] + 1;\n                    ***arg1_00 = 0x20;\n                    **arg1_00 = **arg1_00 + 1;\n                }\n                iVar8 = *arg4;\n            } while ((iVar8 != -1) && (iVar7 = iVar7 + 1,  iVar7 < iVar5));\n        }\n    }\ncode_r0x000140011dc7:\n    fcn.140009d20(uStack56 ^ auStack120);\n    return;\n}\n",
        "token_count": 2523
    },
    "140011e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.140011e70(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong *puVar2;\n    int64_t *piVar3;\n    char cVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    uint8_t *puVar7;\n    char *pcVar8;\n    uint8_t *puVar9;\n    int64_t iVar10;\n    uint8_t uVar11;\n    uint64_t uVar12;\n    int64_t arg4;\n    bool bVar13;\n    ulong uStackX8;\n    \n    *(arg1 + 0x28) = *(arg1 + 0x28) | 0x10;\n    iVar5 = *(arg1 + 0x30);\n    if (iVar5 < 0) {\n        iVar5 = (-((*(arg1 + 0x39) + 0xbfU & 0xdf) != 0) & 0xfffffff9) + 0xd;\n        *(arg1 + 0x30) = iVar5;\n    }\n    else if ((iVar5 == 0) && ((*(arg1 + 0x39) == 'g' || (*(arg1 + 0x39) == 'G')))) {\n        *(arg1 + 0x30) = 1;\n        iVar5 = 1;\n    }\n    iVar10 = arg1 + 0x50;\n    cVar4 = fcn.14001073c(iVar10, iVar5 + 0x15d, *(arg1 + 8));\n    uVar12 = 0x200;\n    if (cVar4 == '\\0') {\n        if (*(arg1 + 0x458) == 0) {\n            iVar5 = 0x200;\n        }\n        else {\n            iVar5 = *(arg1 + 0x450) >> 1;\n        }\n        *(arg1 + 0x30) = iVar5 + -0x15d;\n    }\n    iVar6 = *(arg1 + 0x458);\n    if (*(arg1 + 0x458) == 0) {\n        iVar6 = iVar10;\n    }\n    *(arg1 + 0x40) = iVar6;\n    puVar2 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = puVar2 + 1;\n    iVar6 = *(arg1 + 0x458);\n    uStackX8 = *puVar2;\n    if (iVar6 == 0) {\n        arg4 = arg1 + 0x250;\n        iVar6 = iVar10;\n    }\n    else {\n        arg4 = (*(arg1 + 0x450) >> 1) + iVar6;\n        uVar12 = *(arg1 + 0x450) >> 1;\n    }\n    fcn.14001b2fc(&uStackX8, iVar6, uVar12, arg4);\n    if (((*(arg1 + 0x28) >> 5 & 1) != 0) && (*(arg1 + 0x30) == 0)) {\n        iVar10 = *(arg1 + 8);\n        if (*(iVar10 + 0x28) == '\\0') {\n            fcn.1400122f0(iVar10);\n        }\n        puVar7 = *(arg1 + 0x40);\n        piVar3 = *(iVar10 + 0x18);\n        uVar12 = *puVar7;\n        if (*(uVar12 + piVar3[0x22]) != 'e') {\n            do {\n                puVar7 = puVar7 + 1;\n                uVar12 = *puVar7;\n            } while ((*(*piVar3 + uVar12 * 2) & 4) != 0);\n        }\n        bVar13 = *(uVar12 + piVar3[0x22]) == 'x';\n        if (bVar13) {\n            uVar12 = puVar7[2];\n        }\n        puVar9 = puVar7 + 2;\n        if (!bVar13) {\n            puVar9 = puVar7;\n        }\n        *puVar9 = **piVar3[0x1f];\n        do {\n            puVar9 = puVar9 + 1;\n            uVar1 = *puVar9;\n            uVar11 = uVar12;\n            *puVar9 = uVar11;\n            uVar12 = uVar1;\n        } while (uVar11 != 0);\n    }\n    if (((*(arg1 + 0x39) + 0xb9U & 0xdf) == 0) && ((*(arg1 + 0x28) >> 5 & 1) == 0)) {\n        iVar10 = *(arg1 + 8);\n        if (*(iVar10 + 0x28) == '\\0') {\n            fcn.1400122f0(iVar10);\n        }\n        fcn.1400113e8(*(arg1 + 0x40), iVar10 + 0x18);\n    }\n    pcVar8 = *(arg1 + 0x40);\n    cVar4 = *pcVar8;\n    if (cVar4 == '-') {\n        *(arg1 + 0x28) = *(arg1 + 0x28) | 0x40;\n        pcVar8 = pcVar8 + 1;\n        *(arg1 + 0x40) = pcVar8;\n        cVar4 = *pcVar8;\n    }\n    if ((cVar4 + 0xb7U < 0x26) && ((0x2100000021U >> (cVar4 + 0xb7U & 0x3f) & 1) != 0)) {\n        *(arg1 + 0x28) = *(arg1 + 0x28) & 0xfffffff7;\n        *(arg1 + 0x39) = 0x73;\n    }\n    iVar10 = -1;\n    do {\n        iVar10 = iVar10 + 1;\n    } while (pcVar8[iVar10] != '\\0');\n    *(arg1 + 0x48) = iVar10;\n    return 1;\n}\n",
        "token_count": 1359
    },
    "14001240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.14001240c(ulong noname_0, uchar *arg2, int64_t arg3, int64_t arg4, uint *arg_30h, ulong arg_38h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    ulong var_bp_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_30h._0_1_ = 0;\n    var_bp_18h._0_1_ = '\\0';\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (arg_30h == NULL) {\n        uVar3 = *0x14003e298;\n        uVar4 = *0x14003e29c;\n        uVar5 = *0x14003e2a0;\n        uVar6 = *0x14003e2a4;\n        if (*0x14004009c == 0) goto code_r0x000140012459;\n    }\n    else {\n        uVar3 = *arg_30h;\n        uVar4 = arg_30h[1];\n        uVar5 = arg_30h[2];\n        uVar6 = arg_30h[3];\ncode_r0x000140012459:\n        var_bp_18h._0_1_ = '\\x01';\n        _var_bp_28h = CONCAT412(uVar6, CONCAT48(uVar5, CONCAT44(uVar4, uVar3)));\n    }\n    if (((arg4 == 0) || (arg2 == NULL)) || (arg3 == 0)) {\n        var_bp_18h._4_4_ = 0x16;\n    }\n    else {\n        iVar1 = fcn.14001058c(noname_0, arg2, arg3, arg4);\n        if (iVar1 < 0) {\n            *arg2 = 0;\n        }\n        if (iVar1 != -2) goto code_r0x0001400124ca;\n        var_bp_18h._4_4_ = 0x22;\n    }\n    var_bp_10h._0_1_ = '\\x01';\n    fcn.140010428(0, 0, 0, 0);\n    iVar1 = -1;\ncode_r0x0001400124ca:\n    uVar3 = var_bp_18h._4_4_;\n    if (var_bp_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x20) = uVar3;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return iVar1;\n}\n",
        "token_count": 766
    },
    "1400139a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.1400139a0(uint32_t *arg1, uint32_t *arg2)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    int64_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint64_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint64_t uVar16;\n    uint64_t uVar17;\n    uint32_t uVar18;\n    uint8_t uStackX8;\n    uint32_t uStackX24;\n    uint64_t uStack568;\n    uint64_t uStack552;\n    uchar auStack532 [468];\n    \n    if ((*arg1 == 0) || (uVar5 = *arg2,  uVar5 == 0)) {\n        return 0;\n    }\n    uVar15 = *arg1 - 1;\n    uVar16 = uVar15;\n    uVar14 = uVar5 - 1;\n    if (uVar14 == 0) {\n        uVar5 = arg2[1];\n        uVar17 = uVar5;\n        uVar7 = 0;\n        if (uVar5 == 1) {\n            uVar5 = arg1[1];\n            *arg1 = 0;\n            fcn.140013e3c(arg1 + 1, 0x1cc, auStack532, 0);\n            return uVar5;\n        }\n        uVar2 = uVar7;\n        if (uVar15 != 0) {\n            while (uVar15 != 0xffffffff) {\n                iVar8 = uVar16 + 1;\n                uVar15 = uVar16 - 1;\n                uVar16 = uVar15;\n                uVar13 = arg1[iVar8] | uVar7 << 0x20;\n                uVar7 = uVar13 % uVar17;\n                uVar2 = (uVar2 << 0x20) + (uVar13 / uVar17 & 0xffffffff);\n            }\n            *arg1 = 0;\n            fcn.140013e3c(arg1 + 1, 0x1cc, auStack532, 0);\n            arg1[1] = uVar7;\n            arg1[2] = 0;\n            *arg1 = 1;\n            return uVar2;\n        }\n        uVar14 = arg1[1];\n        *arg1 = 0;\n        fcn.140013e3c(arg1 + 1, 0x1cc, auStack532, 0);\n        uVar5 = uVar14 % uVar5;\n        arg1[1] = uVar5;\n        *arg1 = uVar5 != 0;\n        return uVar14 / uVar17;\n    }\n    if (uVar15 < uVar14) {\n        return 0;\n    }\n    iVar8 = uVar15;\n    iVar12 = uVar15 - uVar14;\n    iVar10 = iVar12;\n    if (iVar10 <= iVar8) {\n        puVar4 = arg1 + iVar8 + 1;\n        uVar7 = uVar16;\n        do {\n            iVar9 = uVar7;\n            if (*(arg2 + (iVar10 * -4 - arg1) + puVar4) != *puVar4) {\n                if (arg1[iVar9 + 1] <= arg2[(iVar9 - iVar12) + 1]) goto code_r0x000140013b44;\n                break;\n            }\n            uVar7 = iVar9 - 1;\n            iVar8 = iVar8 + -1;\n            puVar4 = puVar4 + -1;\n        } while (iVar10 <= iVar8);\n    }\n    iVar12 = iVar12 + 1;\ncode_r0x000140013b44:\n    if (iVar12 == 0) {\n        return 0;\n    }\n    uVar14 = arg2[uVar14 + 1];\n    uStackX24 = arg2[(uVar5 - 2) + 1];\n    uVar11 = 0;\n    uVar7 = 0;\n    iVar9 = 0x1f;\n    if (uVar14 != 0) {\n        for (; uVar14 >> iVar9 == 0; iVar9 = iVar9 + -1) {\n        }\n    }\n    if (uVar14 == 0) {\n        iVar9 = 0x20;\n        uStackX8 = 0;\n    }\n    else {\n        iVar9 = 0x1f - iVar9;\n        uStackX8 = 0x20 - iVar9;\n        if (iVar9 == 0) goto code_r0x000140013bd4;\n    }\n    uVar6 = uStackX24 >> (uStackX8 & 0x1f);\n    uStackX24 = uStackX24 << (iVar9 & 0x1f);\n    uVar14 = uVar6 | uVar14 << (iVar9 & 0x1f);\n    if (2 < uVar5) {\n        uStackX24 = uStackX24 | arg2[(uVar5 - 3) + 1] >> (uStackX8 & 0x1f);\n    }\ncode_r0x000140013bd4:\n    iVar12 = iVar12 + -1;\n    uStack552 = 0;\n    uVar17 = uVar7;\n    if (-1 < iVar12) {\n        uVar2 = uVar14;\n        uVar14 = iVar12 + uVar5;\n        do {\n            uVar15 = uVar11;\n            if (uVar14 <= uVar16) {\n                uVar15 = arg1[uVar14 + 1];\n            }\n            uVar6 = arg1[(uVar14 - 2) + 1];\n            uVar17 = uVar6;\n            uStack568 = CONCAT44(uVar15, arg1[(uVar14 - 1) + 1]);\n            if (iVar9 != 0) {\n                uStack568 = uVar6 >> (uStackX8 & 0x3f) | uStack568 << (iVar9 & 0x3f);\n                uVar6 = uVar6 << (iVar9 & 0x1f);\n                uVar17 = uVar6;\n                if (2 < uVar14) {\n                    uVar17 = uVar6 | arg1[(uVar14 - 3) + 1] >> (uStackX8 & 0x1f);\n                }\n            }\n            uVar13 = uStack568 / uVar2;\n            uStack568 = uStack568 % uVar2;\n            if (0xffffffff < uVar13) {\n                iVar8 = uVar13 - 0xffffffff;\n                uVar13 = 0xffffffff;\n                uStack568 = uStack568 + iVar8 * uVar2;\n            }\n            if (uStack568 < 0x100000000) {\n                uVar3 = uStackX24 * uVar13;\n                do {\n                    if (uVar3 <= (uStack568 << 0x20 | uVar17)) break;\n                    uVar13 = uVar13 - 1;\n                    uVar3 = uVar3 - uStackX24;\n                    uStack568 = uStack568 + uVar2;\n                } while (uStack568 < 0x100000000);\n            }\n            if (uVar13 != 0) {\n                uVar16 = uVar7;\n                uVar6 = uVar11;\n                puVar4 = arg2;\n                if (uVar5 != 0) {\n                    do {\n                        uVar16 = uVar16 + puVar4[1] * uVar13;\n                        uVar1 = uVar16;\n                        uVar17 = uVar16 >> 0x20;\n                        uVar16 = uVar17 + 1;\n                        if (uVar1 <= arg1[uVar6 + iVar12 + 1]) {\n                            uVar16 = uVar17;\n                        }\n                        uVar18 = uVar6 + 1;\n                        arg1[uVar6 + iVar12 + 1] = arg1[uVar6 + iVar12 + 1] - uVar1;\n                        uVar6 = uVar18;\n                        puVar4 = puVar4 + 1;\n                    } while (uVar18 < uVar5);\n                }\n                if (uVar15 < uVar16) {\n                    uVar16 = uVar7;\n                    uVar15 = uVar11;\n                    puVar4 = arg2;\n                    if (uVar5 != 0) {\n                        do {\n                            uVar6 = uVar15 + 1;\n                            uVar16 = uVar16 + puVar4[1] + arg1[uVar15 + iVar12 + 1];\n                            arg1[uVar15 + iVar12 + 1] = uVar16;\n                            uVar16 = uVar16 >> 0x20;\n                            uVar15 = uVar6;\n                            puVar4 = puVar4 + 1;\n                        } while (uVar6 < uVar5);\n                    }\n                    uVar13 = uVar13 - 1;\n                }\n                uVar16 = uVar14 - 1;\n            }\n            uVar15 = uVar16;\n            uVar14 = uVar14 - 1;\n            uVar17 = (uStack552 << 0x20) + (uVar13 & 0xffffffff);\n            iVar12 = iVar12 + -1;\n            uStack552 = uVar17;\n        } while (-1 < iVar12);\n    }\n    uVar15 = uVar15 + 1;\n    uVar5 = uVar15;\n    if (uVar15 < *arg1) {\n        do {\n            uVar16 = uVar5;\n            uVar5 = uVar5 + 1;\n            arg1[uVar16 + 1] = 0;\n        } while (uVar5 < *arg1);\n    }\n    *arg1 = uVar15;\n    while( true ) {\n        if (uVar15 == 0) {\n            return uVar17;\n        }\n        uVar15 = uVar15 - 1;\n        if (arg1[uVar15 + 1] != 0) break;\n        *arg1 = uVar15;\n    }\n    return uVar17;\n}\n",
        "token_count": 2331
    },
    "14001760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.140017600(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.140020850();\n    if (iVar1 == 1) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.14002081c();\n        uVar2 = uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return uVar2;\n}\n",
        "token_count": 106
    },
    "1400176a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140017529)\n// WARNING: Removing unreachable block (ram,0x000140017536)\n// WARNING: Removing unreachable block (ram,0x000140017540)\n// WARNING: Removing unreachable block (ram,0x00014001754f)\n// WARNING: Removing unreachable block (ram,0x00014001755a)\n// WARNING: Removing unreachable block (ram,0x000140017563)\n// WARNING: Removing unreachable block (ram,0x00014001756c)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1400176ac(void)\n\n{\n    code *pcVar1;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    ulong var_28h;\n    uchar var_30h [4];\n    ulong var_2ch;\n    ulong var_20h;\n    uint *var_bp_18h;\n    int32_t *var_bp_10h;\n    ulong *var_8h;\n    \n    aiStackX24[0] = 1;\n    auStackX16[0] = 0;\n    var_20h = 0xfffffffffffffffe;\n    var_28h._0_1_ = 0;\n    var_bp_18h = auStackX16;\n    var_bp_10h = aiStackX24;\n    var_8h = &var_28h;\n    var_2ch._0_4_ = 2;\n    var_2ch._4_4_ = 2;\n    fcn.140017400(var_30h, &var_2ch + 4, &var_bp_18h, &var_2ch);\n    if (aiStackX24[0] == 0) {\n        fcn.1400175cc(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "14001883": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140018834(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    ulong uVar4;\n    int32_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uint *lpMem;\n    uint16_t *puVar11;\n    int16_t *piVar12;\n    ulong uVar13;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    int64_t iVar16;\n    uint32_t uVar17;\n    int64_t iVar19;\n    int64_t iVar20;\n    ulong var_70h;\n    ulong var_120h;\n    ulong var_220h;\n    uchar auStackY872 [32];\n    uchar *noname_5;\n    uint in_stack_fffffffffffffcc8;\n    uint in_stack_fffffffffffffccc;\n    ulong in_stack_fffffffffffffcd0;\n    uint in_stack_fffffffffffffcd8;\n    uint in_stack_fffffffffffffcdc;\n    uint uVar21;\n    ulong in_stack_fffffffffffffce0;\n    ulong in_stack_fffffffffffffce8;\n    ulong noname_10;\n    ulong in_stack_fffffffffffffcf0;\n    int16_t in_stack_fffffffffffffcf8;\n    int16_t in_stack_fffffffffffffcfa;\n    uint in_stack_fffffffffffffcfc;\n    ulong in_stack_fffffffffffffd00;\n    ulong in_stack_fffffffffffffd08;\n    ulong in_stack_fffffffffffffd10;\n    ulong in_stack_fffffffffffffd18;\n    ulong in_stack_fffffffffffffd20;\n    ulong in_stack_fffffffffffffd28;\n    ulong in_stack_fffffffffffffd30;\n    ulong in_stack_fffffffffffffd38;\n    ulong in_stack_fffffffffffffd40;\n    ulong in_stack_fffffffffffffd48;\n    ulong in_stack_fffffffffffffd50;\n    ulong in_stack_fffffffffffffd58;\n    ulong in_stack_fffffffffffffd60;\n    ulong in_stack_fffffffffffffd68;\n    ulong in_stack_fffffffffffffd70;\n    ulong in_stack_fffffffffffffd78;\n    ulong in_stack_fffffffffffffd80;\n    ulong in_stack_fffffffffffffd88;\n    ulong in_stack_fffffffffffffd90;\n    ulong in_stack_fffffffffffffd98;\n    ulong in_stack_fffffffffffffda0;\n    ulong in_stack_fffffffffffffda8;\n    ulong in_stack_fffffffffffffdb0;\n    ulong in_stack_fffffffffffffdb8;\n    ulong in_stack_fffffffffffffdc0;\n    ulong in_stack_fffffffffffffdc8;\n    ulong in_stack_fffffffffffffdd0;\n    ulong in_stack_fffffffffffffdd8;\n    ulong in_stack_fffffffffffffde0;\n    ulong in_stack_fffffffffffffde8;\n    ulong in_stack_fffffffffffffdf0;\n    ulong in_stack_fffffffffffffdf8;\n    ulong in_stack_fffffffffffffe00;\n    ulong in_stack_fffffffffffffe08;\n    ulong in_stack_fffffffffffffe10;\n    ulong in_stack_fffffffffffffe18;\n    ulong in_stack_fffffffffffffe20;\n    ulong in_stack_fffffffffffffe28;\n    ulong in_stack_fffffffffffffe30;\n    ulong in_stack_fffffffffffffe38;\n    ulong in_stack_fffffffffffffe40;\n    ulong in_stack_fffffffffffffe48;\n    ulong in_stack_fffffffffffffe50;\n    ulong in_stack_fffffffffffffe58;\n    ulong in_stack_fffffffffffffe60;\n    uint16_t auStack328 [128];\n    uint64_t uStack72;\n    uint64_t uVar18;\n    \n    uStack72 = *0x14003e020 ^ auStackY872;\n    iVar8 = arg2;\n    iVar20 = iVar8;\n    iVar9 = fcn.14001a314(arg1, arg2);\n    puVar1 = iVar9 + 0x2c8;\n    noname_5 = &stack0xfffffffffffffcd8;\n    iVar10 = fcn.140017e2c(arg3, &stack0xfffffffffffffcf8, 0x83, &stack0xfffffffffffffe08, 0x55, noname_5, \n                           CONCAT44(in_stack_fffffffffffffccc, in_stack_fffffffffffffcc8), in_stack_fffffffffffffcd0, \n                           CONCAT44(in_stack_fffffffffffffcdc, in_stack_fffffffffffffcd8), in_stack_fffffffffffffce0, \n                           in_stack_fffffffffffffce8, in_stack_fffffffffffffcf0, \n                           CONCAT44(in_stack_fffffffffffffcfc, \n                                    CONCAT22(in_stack_fffffffffffffcfa, in_stack_fffffffffffffcf8)), \n                           in_stack_fffffffffffffd00, in_stack_fffffffffffffd08, in_stack_fffffffffffffd10, \n                           in_stack_fffffffffffffd18, in_stack_fffffffffffffd20, in_stack_fffffffffffffd28, \n                           in_stack_fffffffffffffd30, in_stack_fffffffffffffd38, in_stack_fffffffffffffd40, \n                           in_stack_fffffffffffffd48, in_stack_fffffffffffffd50, in_stack_fffffffffffffd58, \n                           in_stack_fffffffffffffd60, in_stack_fffffffffffffd68, in_stack_fffffffffffffd70, \n                           in_stack_fffffffffffffd78, in_stack_fffffffffffffd80, in_stack_fffffffffffffd88, \n                           in_stack_fffffffffffffd90, in_stack_fffffffffffffd98, in_stack_fffffffffffffda0, \n                           in_stack_fffffffffffffda8, in_stack_fffffffffffffdb0, in_stack_fffffffffffffdb8, \n                           in_stack_fffffffffffffdc0, in_stack_fffffffffffffdc8, in_stack_fffffffffffffdd0, \n                           in_stack_fffffffffffffdd8, in_stack_fffffffffffffde0, in_stack_fffffffffffffde8, \n                           in_stack_fffffffffffffdf0, in_stack_fffffffffffffdf8, in_stack_fffffffffffffe00, \n                           in_stack_fffffffffffffe08, in_stack_fffffffffffffe10, in_stack_fffffffffffffe18, \n                           in_stack_fffffffffffffe20, in_stack_fffffffffffffe28, in_stack_fffffffffffffe30, \n                           in_stack_fffffffffffffe38, in_stack_fffffffffffffe40, in_stack_fffffffffffffe48, \n                           in_stack_fffffffffffffe50, in_stack_fffffffffffffe58, in_stack_fffffffffffffe60);\n    if (iVar10 != 0) {\n        piVar12 = &stack0xfffffffffffffcf8;\n        iVar10 = iVar20 * 0x20;\n        iVar19 = *(iVar10 + 0x28 + arg1) - piVar12;\n        do {\n            iVar2 = *piVar12;\n            iVar3 = *(piVar12 + iVar19);\n            if (iVar2 != iVar3) break;\n            piVar12 = piVar12 + 1;\n        } while (iVar3 != 0);\n        if (iVar2 != iVar3) {\n            iVar19 = -1;\n            do {\n                iVar16 = iVar19;\n                iVar19 = iVar16 + 1;\n            } while (*(&stack0xfffffffffffffcf8 + iVar19 * 2) != 0);\n            lpMem = fcn.14001a6b0(iVar19 * 2 + 6);\n            if (lpMem != NULL) {\n                iVar19 = *(iVar10 + 0x28 + arg1);\n                noname_10 = *(arg1 + 0x128 + iVar20 * 8);\n                uVar21 = *(arg1 + 0xc);\n                iVar7 = fcn.14001e4bc(lpMem + 1, iVar16 + 2, &stack0xfffffffffffffcf8);\n                uVar14 = 0;\n                if (iVar7 != 0) {\n                    fcn.140010544(0, 0, 0, 0);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n                *(iVar10 + 0x28 + arg1) = lpMem + 1;\n                if ((in_stack_fffffffffffffcf8 != 0x43) || (uVar15 = uVar14,  in_stack_fffffffffffffcfa != 0)) {\n                    uVar15 = fcn.140017a34(&stack0xfffffffffffffe08);\n                }\n                *(arg1 + 0x128 + iVar20 * 8) = uVar15;\n                if (iVar8 == 2) {\n                    *(arg1 + 0xc) = in_stack_fffffffffffffcd8;\n                    uVar13 = *(iVar9 + 0x2e8);\n                    uVar15 = uVar14;\n                    uVar18 = uVar14;\n                    do {\n                        uVar17 = uVar18;\n                        if (*(arg1 + 0xc) == *(puVar1 + uVar15)) {\n                            if (uVar17 != 0) {\n                                *puVar1 = puVar1[uVar17];\n                                puVar1[uVar17] = uVar13;\n                            }\n                            break;\n                        }\n                        uVar4 = puVar1[uVar15];\n                        uVar17 = uVar17 + 1;\n                        uVar18 = uVar17;\n                        puVar1[uVar15] = uVar13;\n                        uVar15 = uVar15 + 1;\n                        uVar13 = uVar4;\n                    } while (uVar15 < 5);\n                    if (uVar17 == 5) {\n                        iVar8 = fcn.14001df60(0, 1, 0x14002faf0, 0x7f, auStack328, \n                                              noname_5 & 0xffffffff00000000 | *(arg1 + 0xc), \n                                              CONCAT44(in_stack_fffffffffffffccc, 1), in_stack_fffffffffffffcd0, \n                                              CONCAT44(uVar21, in_stack_fffffffffffffcd8), iVar19, noname_10, \n                                              in_stack_fffffffffffffcf0, \n                                              CONCAT44(in_stack_fffffffffffffcfc, \n                                                       CONCAT22(in_stack_fffffffffffffcfa, in_stack_fffffffffffffcf8)), \n                                              in_stack_fffffffffffffd00, in_stack_fffffffffffffd08, \n                                              in_stack_fffffffffffffd10, in_stack_fffffffffffffd18);\n                        if (iVar8 == 0) {\n                            uVar17 = 0;\n                        }\n                        else {\n                            puVar11 = auStack328;\n                            do {\n                                uVar17 = uVar14 + 1;\n                                uVar14 = uVar17;\n                                *puVar11 = *puVar11 & 0x1ff;\n                                puVar11 = puVar11 + 1;\n                            } while (uVar17 < 0x7f);\n                            iVar8 = fcn.14000c6d0(auStack328, *0x14003e128, 0xfe);\n                            uVar17 = iVar8 == 0;\n                        }\n                        *(iVar9 + 0x2cc) = uVar17;\n                        *puVar1 = *(arg1 + 0xc);\n                    }\n                    *(arg1 + 0x1c) = *(iVar9 + 0x2cc);\n                }\n                else if (iVar8 == 1) {\n                    *(arg1 + 0x14) = in_stack_fffffffffffffcd8;\n                }\n                else if (iVar8 == 5) {\n                    *(arg1 + 0x18) = in_stack_fffffffffffffcd8;\n                }\n                iVar8 = (**0x14002a3f0)(arg1);\n                if (iVar8 == 0) {\n                    if (iVar19 != 0x14003e2a8) {\n                        piVar5 = *(iVar10 + 0x38 + arg1);\n                        LOCK();\n                        iVar8 = *piVar5;\n                        *piVar5 = *piVar5 + -1;\n                        if (iVar8 == 1) {\n                            fcn.14001a674(*(iVar10 + 0x38 + arg1));\n                            fcn.14001a674(*(iVar10 + 0x30 + arg1));\n                            fcn.14001a674(*(arg1 + 0x128 + iVar20 * 8));\n                            *(iVar10 + 0x28 + arg1) = 0;\n                            *(arg1 + 0x128 + iVar20 * 8) = 0;\n                        }\n                    }\n                    *lpMem = 1;\n                    *(iVar10 + 0x38 + arg1) = lpMem;\n                }\n                else {\n                    *(iVar10 + 0x28 + arg1) = iVar19;\n                    fcn.14001a674(*(arg1 + 0x128 + iVar20 * 8));\n                    *(arg1 + 0x128 + iVar20 * 8) = noname_10;\n                    fcn.14001a674(lpMem);\n                    *(arg1 + 0xc) = uVar21;\n                }\n            }\n        }\n    }\n    fcn.140009d20(uStack72 ^ auStackY872);\n    return;\n}\n",
        "token_count": 2929
    },
    "1400195b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.1400195b4(void)\n\n{\n    char cVar1;\n    ulong uVar2;\n    int64_t *piVar3;\n    bool bVar4;\n    \n    piVar3 = 0x14002fce0;\n    do {\n        if ((*piVar3 != 0) && (cVar1 = (**0x14002a3f0)(),  cVar1 == '\\0')) break;\n        piVar3 = piVar3 + 2;\n    } while (piVar3 != 0x14002fde0);\n    if (piVar3 == 0x14002fde0) {\n        uVar2 = 1;\n    }\n    else {\n        if (piVar3 != 0x14002fce0) {\n            piVar3 = piVar3 + -1;\n            do {\n                if ((piVar3[-1] != 0) && (*piVar3 != 0)) {\n                    (**0x14002a3f0)(0);\n                }\n                bVar4 = piVar3 != 0x14002fce8;\n                piVar3 = piVar3 + -2;\n            } while (bVar4);\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 278
    },
    "140019e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.140019e28(ulong arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong var_50h;\n    ulong var_48h;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x14004009c == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x14003e298;\n        var_28h._4_4_ = *0x14003e29c;\n        uStack40 = *0x14003e2a0;\n        uStack36 = *0x14003e2a4;\n    }\n    var_48h = 0;\n    var_50h = arg1;\n    uVar1 = fcn.14001968c(&var_40h, &var_50h, 10);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 470
    },
    "14001af3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.14001af38(uchar *arg1, ulong noname_1, ulong arg3, int32_t *arg4)\n\n{\n    uchar *arg1_00;\n    bool bVar1;\n    int32_t iVar2;\n    uchar *arg2;\n    int64_t iVar3;\n    int64_t iVar4;\n    char in_stack_00000028;\n    int64_t in_stack_00000030;\n    \n    if ((in_stack_00000028 != '\\0') && (arg4[1] + -1 == arg3)) {\n        *(arg1 + arg4[1] + -1 + (*arg4 == 0x2d)) = 0x30;\n    }\n    if (*arg4 == 0x2d) {\n        *arg1 = 0x2d;\n        arg1 = arg1 + 1;\n    }\n    iVar2 = arg4[1];\n    if (iVar2 < 1) {\n        if ((iVar2 == 0) && (**(arg4 + 2) == '0')) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        if ((in_stack_00000028 == '\\0') || (!bVar1)) {\n            iVar4 = -1;\n            do {\n                iVar3 = iVar4;\n                iVar4 = iVar3 + 1;\n            } while (arg1[iVar4] != '\\0');\n            fcn.14000bbe0(arg1 + 1, arg1, iVar3 + 2);\n        }\n        arg2 = arg1 + 1;\n        *arg1 = 0x30;\n    }\n    else {\n        arg2 = arg1 + iVar2;\n    }\n    if (0 < arg3) {\n        arg1_00 = arg2 + 1;\n        iVar4 = -1;\n        do {\n            iVar3 = iVar4;\n            iVar4 = iVar3 + 1;\n        } while (arg2[iVar4] != '\\0');\n        fcn.14000bbe0(arg1_00, arg2, iVar3 + 2);\n        if (*(in_stack_00000030 + 0x28) == '\\0') {\n            fcn.1400122f0(in_stack_00000030);\n        }\n        *arg2 = ***(*(in_stack_00000030 + 0x18) + 0xf8);\n        if (arg4[1] < 0) {\n            iVar2 = -arg4[1];\n            if ((in_stack_00000028 != '\\0') || (iVar2 < arg3)) {\n                arg3._0_4_ = iVar2;\n            }\n            iVar4 = -1;\n            do {\n                iVar3 = iVar4;\n                iVar4 = iVar3 + 1;\n            } while (arg1_00[iVar4] != '\\0');\n            fcn.14000bbe0(arg1_00 + arg3, arg1_00, iVar3 + 2);\n            fcn.14000c2b0(arg1_00, 0x30, arg3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 683
    },
    "14001b2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.14001b2fc(uint64_t *arg1, uchar *arg2, uint64_t arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint64_t in_stack_00000040;\n    int64_t in_stack_00000050;\n    \n    if (arg2 == NULL) {\n        *(in_stack_00000050 + 0x30) = 1;\n        *(in_stack_00000050 + 0x2c) = 0x16;\n    }\n    else {\n        if (((arg3 != 0) && (arg4 != 0)) && (in_stack_00000028 != 0)) {\n            if ((in_stack_00000030 == 0x41) || (in_stack_00000030 - 0x45U < 3)) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = 0;\n            }\n            if (((in_stack_00000040 & 8) == 0) && (uVar1 = *arg1,  (uVar1 >> 0x34 & 0x7ff) == 0x7ff)) {\n                if ((uVar1 & 0xfffffffffffff) == 0) {\n                    iVar5 = 0;\n                }\n                else if ((uVar1 < 0) && ((uVar1 & 0xfffffffffffff) == 0x8000000000000)) {\n                    iVar5 = 0xc;\n                }\n                else {\n                    iVar5 = (-((uVar1 & 0x8000000000000) != 0) & 0xfffffffffffffffc) + 8;\n                }\n                if (arg3 < 4U - (uVar1 >> 0x3f)) {\n                    *arg2 = 0;\n                    return 0xc;\n                }\n                uVar7 = 0xffffffffffffffff;\n                if (uVar1 < 0) {\n                    *arg2 = 0x2d;\n                    arg2 = arg2 + 1;\n                    *arg2 = 0;\n                    if (arg3 != 0xffffffffffffffff) {\n                        arg3 = arg3 - 1;\n                    }\n                }\n                uVar6 = (uVar6 ^ 1) * 2;\n                do {\n                    uVar7 = uVar7 + 1;\n                } while (*(*((uVar6 + iVar5) * 8 + 0x140030460) + uVar7) != '\\0');\n                iVar3 = fcn.14001962c(arg2, arg3, *((uVar6 + (arg3 <= uVar7) + iVar5) * 8 + 0x140030460));\n                if (iVar3 == 0) {\n                    return 0;\n                }\n                fcn.140010544(0, 0, 0, 0, 0);\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            if (in_stack_00000030 != 0x41) {\n                if (in_stack_00000030 == 0x45) {\ncode_r0x00014001b549:\n                    uVar4 = fcn.14001ab80(arg1, arg2, arg3, arg4);\n                    return uVar4;\n                }\n                if (in_stack_00000030 == 0x46) {\ncode_r0x00014001b518:\n                    uVar4 = fcn.14001ae60(arg1, arg2, arg3, arg4);\n                    return uVar4;\n                }\n                if (in_stack_00000030 != 0x47) {\n                    if (in_stack_00000030 == 0x61) goto code_r0x00014001b583;\n                    if (in_stack_00000030 == 0x65) goto code_r0x00014001b549;\n                    if (in_stack_00000030 == 0x66) goto code_r0x00014001b518;\n                }\n                uVar4 = fcn.14001b090(arg1, arg2, arg3, arg4);\n                return uVar4;\n            }\ncode_r0x00014001b583:\n            uVar4 = fcn.14001a7e8(arg1, arg2, arg3, arg4);\n            return uVar4;\n        }\n        *(in_stack_00000050 + 0x30) = 1;\n        *(in_stack_00000050 + 0x2c) = 0x16;\n    }\n    fcn.140010428(0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 1096
    },
    "14001c4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.14001c4f4(ulong arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == 1) {\n        puVar1 = fcn.1400138d8();\n        *puVar1 = 0x21;\n    }\n    else if ((arg1 == 2) || (arg1 == 3)) {\n        puVar1 = fcn.1400138d8();\n        *puVar1 = 0x22;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "14001d56": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.14001d560(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x14004009c == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_bp_28h._0_4_ = *0x14003e298;\n        var_bp_28h._4_4_ = *0x14003e29c;\n        uStack40 = *0x14003e2a0;\n        uStack36 = *0x14003e2a4;\n    }\n    uVar1 = fcn.14001d244(noname_0, noname_1, noname_2, noname_3);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "14001d71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_bp_20h\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid fcn.14001d71c(char *arg1, uint16_t *arg2, uint64_t arg3, char *arg4)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint16_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uchar auStack184 [32];\n    char *pcStack152;\n    char *pcStack144;\n    ulong uStack136;\n    int32_t *piStack128;\n    int32_t aiStack120 [2];\n    uint16_t *puStack112;\n    ulong uStack104;\n    char acStack96 [8];\n    uint64_t uStack88;\n    ulong var_38h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    ulong var_bp_20h;\n    ulong var_18h;\n    \n    uStack88 = *0x14003e020 ^ auStack184;\n    uVar9 = 0;\n    aiStack120[0] = 0;\n    puStack112 = arg2;\n    if ((arg1 == NULL) || (arg3 != 0)) {\n        if (arg2 == NULL) {\n            arg4[0x30] = '\\x01';\n            *(arg4 + 0x2c) = 0x16;\n            pcStack152 = NULL;\n            pcStack144 = arg4;\n            fcn.140010428(0, 0, 0, 0);\n        }\n        else {\n            if (arg4[0x28] == '\\0') {\n                fcn.1400122f0(arg4);\n            }\n            iVar3 = *(arg4 + 0x18);\n            uVar5 = *(iVar3 + 0xc);\n            if (uVar5 == 0xfde9) {\n                uStack104 = 0;\n                pcStack152 = arg4;\n                fcn.14002535c(arg1, &puStack112, arg3, &uStack104);\n            }\n            else {\n                if (arg1 == NULL) {\n                    if (*(iVar3 + 0x138) == 0) {\n                        uVar2 = *puStack112;\n                        puVar6 = puStack112;\n                        while (uVar2 != 0) {\n                            if (0xff < uVar2) goto code_r0x00014001d82d;\n                            puVar6 = puVar6 + 1;\n                            uVar2 = *puVar6;\n                        }\n                        goto code_r0x00014001da3e;\n                    }\n                    piStack128 = aiStack120;\n                    uStack136 = 0;\n                    pcStack144 = pcStack144 & 0xffffffff00000000;\n                    pcStack152 = NULL;\n                    iVar4 = fcn.14001ece4(uVar5, 0, puStack112, 0xffffffff);\n                    if ((iVar4 != 0) && (aiStack120[0] == 0)) goto code_r0x00014001da3e;\n                }\n                else {\n                    if (*(iVar3 + 0x138) == 0) {\n                        if (arg3 != 0) {\n                            do {\n                                if (0xff < *puStack112) goto code_r0x00014001d82d;\n                                arg1[uVar9] = *puStack112;\n                                uVar2 = *puStack112;\n                                puStack112 = puStack112 + 1;\n                            } while ((uVar2 != 0) && (uVar9 = uVar9 + 1,  uVar9 < arg3));\n                        }\n                        goto code_r0x00014001da3e;\n                    }\n                    pcStack152 = arg1;\n                    if (*(iVar3 + 8) == 1) {\n                        puVar6 = puStack112;\n                        uVar9 = arg3;\n                        if (arg3 != 0) {\n                            do {\n                                if (*puVar6 == 0) {\n                                    arg3 = (puVar6 - puStack112 >> 1) + 1;\n                                    break;\n                                }\n                                uVar9 = uVar9 - 1;\n                                puVar6 = puVar6 + 1;\n                            } while (uVar9 != 0);\n                        }\n                        piStack128 = aiStack120;\n                        uStack136 = 0;\n                        pcStack144 = pcStack144 & 0xffffffff00000000 | arg3 & 0xffffffff;\n                        iVar4 = fcn.14001ece4(uVar5, 0, puStack112, arg3 & 0xffffffff);\n                        if ((iVar4 == 0) || (aiStack120[0] != 0)) {\ncode_r0x00014001d82d:\n                            arg4[0x30] = '\\x01';\n                            *(arg4 + 0x2c) = 0x2a;\n                        }\n                        goto code_r0x00014001da3e;\n                    }\n                    piStack128 = aiStack120;\n                    uStack136 = 0;\n                    pcStack144 = pcStack144 & 0xffffffff00000000 | arg3 & 0xffffffff;\n                    iVar4 = fcn.14001ece4(uVar5, 0, puStack112, 0xffffffff);\n                    uVar10 = iVar4;\n                    if (aiStack120[0] == 0) {\n                        if (iVar4 != 0) goto code_r0x00014001da3e;\n                        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                        if (iVar4 == 0x7a) {\n                            if (arg3 != 0) {\n                                do {\n                                    piStack128 = aiStack120;\n                                    uStack136 = 0;\n                                    uVar5 = *(*(arg4 + 0x18) + 8);\n                                    if (5 < uVar5) {\n                                        uVar5 = 5;\n                                    }\n                                    pcStack144 = pcStack144 & 0xffffffff00000000 | uVar5;\n                                    pcStack152 = acStack96;\n                                    iVar4 = fcn.14001ece4(*(*(arg4 + 0x18) + 0xc), 0, puStack112, 1);\n                                    if ((((iVar4 == 0) || (aiStack120[0] != 0)) || (iVar4 < 0)) ||\n                                       (uVar8 = iVar4,  5 < uVar8)) goto code_r0x00014001da30;\n                                    if (arg3 < uVar8 + uVar10) break;\n                                    uVar7 = uVar9;\n                                    if (0 < uVar8) {\n                                        do {\n                                            cVar1 = acStack96[uVar7];\n                                            arg1[uVar10] = cVar1;\n                                            if (cVar1 == '\\0') goto code_r0x00014001da3e;\n                                            uVar7 = uVar7 + 1;\n                                            uVar10 = uVar10 + 1;\n                                        } while (uVar7 < uVar8);\n                                    }\n                                    puStack112 = puStack112 + 1;\n                                } while (uVar10 < arg3);\n                            }\n                            goto code_r0x00014001da3e;\n                        }\n                    }\n                }\ncode_r0x00014001da30:\n                *(arg4 + 0x2c) = 0x2a;\n                arg4[0x30] = '\\x01';\n            }\n        }\n    }\ncode_r0x00014001da3e:\n    fcn.140009d20(uStack88 ^ auStack184);\n    return;\n}\n",
        "token_count": 1766
    },
    "14001da5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.14001da5c(ulong noname_0, ulong noname_1, ulong noname_2, ulong noname_3, ulong arg_30h, uint *arg_38h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_bp_28h;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_30h._0_1_ = 0;\n    var_18h._0_1_ = '\\0';\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (arg_38h == NULL) {\n        uVar1 = *0x14003e298;\n        uVar3 = *0x14003e29c;\n        uVar4 = *0x14003e2a0;\n        uVar5 = *0x14003e2a4;\n        if (*0x14004009c != 0) goto code_r0x00014001daaa;\n    }\n    else {\n        uVar1 = *arg_38h;\n        uVar3 = arg_38h[1];\n        uVar4 = arg_38h[2];\n        uVar5 = arg_38h[3];\n    }\n    var_18h._0_1_ = '\\x01';\n    _var_bp_28h = CONCAT412(uVar5, CONCAT48(uVar4, CONCAT44(uVar3, uVar1)));\ncode_r0x00014001daaa:\n    uVar1 = fcn.14001d608(noname_0, noname_1, noname_2, noname_3);\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar2 = fcn.140010108(&var_40h);\n        *(iVar2 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 597
    },
    "14001e69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.14001e690(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    ulong arg4_00;\n    uint in_XMM2_Da;\n    uint in_XMM2_Db;\n    \n    if (arg4 == 2) {\n        arg4_00 = 2;\n    }\n    else {\n        if (((arg4 == 3) || (arg4 == 4)) || (arg4 == 5)) {\n            return CONCAT44(in_XMM2_Db, in_XMM2_Da) | 0x8000000000000;\n        }\n        if (arg4 == 6) {\n            arg4_00 = 1;\n        }\n        else if ((arg4 == 7) || (arg4 == 8)) {\n            arg4_00 = 4;\n        }\n        else {\n            if (arg4 != 9) goto code_r0x00014001e7b5;\n            arg4_00 = 3;\n        }\n    }\n    fcn.1400259c0(0x140030714, 0x1d, CONCAT44(in_XMM2_Db, in_XMM2_Da), arg4_00);\ncode_r0x00014001e7b5:\n    return CONCAT44(in_XMM2_Db, in_XMM2_Da);\n}\n",
        "token_count": 300
    },
    "14001e9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.14001e9d8(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int8_t iVar7;\n    int32_t iVar8;\n    uint64_t noname_0;\n    uint64_t noname_0_00;\n    uint32_t uVar9;\n    uint64_t lpFlsData;\n    code *pcVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint64_t *puVar13;\n    uint64_t *puVar14;\n    uint uStackX16;\n    uint64_t *puVar15;\n    \n    iVar8 = arg1;\n    noname_0_00 = arg1 & 0xffffffff;\n    puVar15 = NULL;\n    puVar14 = NULL;\n    uStackX16 = 0;\n    bVar1 = true;\n    lpFlsData = iVar8 - 2U;\n    uVar11 = noname_0_00;\n    if (iVar8 - 2U == 0) {\ncode_r0x00014001ea2f:\n        noname_0 = iVar8 - 2U;\n        if (iVar8 - 2U == 0) {\n            puVar13 = 0x1400406d8;\n        }\n        else {\n            noname_0 = iVar8 - 6U;\n            if (iVar8 - 6U == 0) {\ncode_r0x00014001ead1:\n                puVar13 = 0x1400406e8;\n                puVar14 = puVar15;\n            }\n            else {\n                noname_0 = iVar8 - 0xfU;\n                if (iVar8 - 0xfU == 0) {\n                    puVar13 = 0x1400406f0;\n                }\n                else {\n                    uVar9 = iVar8 - 0x15;\n                    noname_0 = uVar9;\n                    if (uVar9 == 0) {\n                        puVar13 = 0x1400406e0;\n                        puVar14 = puVar15;\n                    }\n                    else {\n                        if (uVar9 == 1) goto code_r0x00014001ead1;\n                        puVar13 = NULL;\n                        puVar14 = puVar15;\n                    }\n                }\n            }\n        }\n    }\n    else {\n        lpFlsData = iVar8 - 4U;\n        if (iVar8 - 4U != 0) {\n            lpFlsData = iVar8 - 6U;\n            if (iVar8 - 6U != 0) {\n                lpFlsData = iVar8 - 8U;\n                if ((iVar8 - 8U == 0) || (lpFlsData = iVar8 - 0xbU,  iVar8 - 0xbU == 0)) goto code_r0x00014001ea5f;\n                lpFlsData = iVar8 - 0xfU;\n                if (iVar8 - 0xfU != 0) {\n                    uVar9 = iVar8 - 0x15;\n                    lpFlsData = uVar9;\n                    if ((uVar9 != 0) && (uVar9 != 1)) goto code_r0x00014001eab1;\n                }\n            }\n            goto code_r0x00014001ea2f;\n        }\ncode_r0x00014001ea5f:\n        puVar14 = fcn.14001a48c(arg1, lpFlsData);\n        if (puVar14 == NULL) {\n            return 0xffffffff;\n        }\n        uVar2 = *puVar14;\n        noname_0 = *0x14002fa30 * 0x10 + uVar2;\n        for (; uVar2 != noname_0; uVar2 = uVar2 + 0x10) {\n            if (*(uVar2 + 4) == uVar11) goto code_r0x00014001eaac;\n        }\n        uVar2 = 0;\ncode_r0x00014001eaac:\n        if (uVar2 == 0) {\ncode_r0x00014001eab1:\n            puVar3 = fcn.1400138d8();\n            *puVar3 = 0x16;\n            fcn.1400104f4();\n            return 0xffffffff;\n        }\n        puVar13 = uVar2 + 8;\n        bVar1 = false;\n    }\n    uVar2 = 0;\n    if (bVar1) {\n        noname_0 = 3;\n        fcn.140012b28(3);\n    }\n    uVar12 = *puVar13;\n    if (bVar1) {\n        uVar9 = *0x14003e020 & 0x3f;\n        noname_0 = uVar9;\n        iVar7 = uVar9;\n        uVar12 = (uVar12 ^ *0x14003e020) >> iVar7 | (uVar12 ^ *0x14003e020) << 0x40 - iVar7;\n    }\n    if (uVar12 == 1) goto code_r0x00014001ebba;\n    if (uVar12 == 0) {\n        if (bVar1) {\n            fcn.140012b7c(3);\n        }\n        fcn.1400176bc(3);\n        pcVar10 = swi(3);\n        uVar6 = (*pcVar10)();\n        return uVar6;\n    }\n    if ((uVar11 < 0xc) && ((0x910U >> (uVar11 & 0x1f) & 1) != 0)) {\n        uVar2 = puVar14[1];\n        puVar14[1] = 0;\n        if (uVar11 == 8) {\n            iVar4 = fcn.14001a314(noname_0, lpFlsData);\n            uStackX16 = *(iVar4 + 0x10);\n            iVar4 = fcn.14001a314(noname_0, lpFlsData);\n            *(iVar4 + 0x10) = 0x8c;\n            goto code_r0x00014001eb72;\n        }\n    }\n    else {\ncode_r0x00014001eb72:\n        if (uVar11 == 8) {\n            uVar5 = *0x14002fa38 * 0x10 + *puVar14;\n            noname_0 = *0x14002fa40 * 0x10 + uVar5;\n            for (; uVar5 != noname_0; uVar5 = uVar5 + 0x10) {\n                *(uVar5 + 8) = 0;\n            }\n            goto code_r0x00014001ebba;\n        }\n    }\n    *puVar13 = *0x14003e020;\ncode_r0x00014001ebba:\n    if (bVar1) {\n        noname_0 = 3;\n        fcn.140012b7c(3);\n    }\n    if (uVar12 != 1) {\n        if (uVar11 == 8) {\n            iVar4 = fcn.14001a314(noname_0, lpFlsData);\n            pcVar10 = *(iVar4 + 0x10);\n            (**0x14002a3f0)();\n        }\n        else {\n            pcVar10 = *0x14002a3f0;\n            (**0x14002a3f0)();\n        }\n        if (((uVar11 < 0xc) && ((0x910U >> (uVar11 & 0x1f) & 1) != 0)) && (puVar14[1] = uVar2,  uVar11 == 8)) {\n            iVar4 = fcn.14001a314(noname_0_00, pcVar10);\n            *(iVar4 + 0x10) = uStackX16;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1787
    },
    "14001ec5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.14001ec54(ulong arg1, uint64_t arg2)\n\n{\n    bool bVar1;\n    \n    if (arg1 < 0xdead) {\n        if (arg1 != 0xdeac) {\n            if (arg1 < 0xc434) {\n                if ((((arg1 != 0xc433) && (arg1 != 0x2a)) && (arg1 != 0xc42c)) && ((arg1 != 0xc42d && (arg1 != 0xc42e)))\n                   ) {\n                    bVar1 = arg1 == 0xc431;\ncode_r0x00014001eca1:\n                    if (!bVar1) goto code_r0x00014001eca5;\n                }\n            }\n            else if (arg1 != 0xc435) {\n                if (arg1 == 0xd698) goto code_r0x00014001ecdf;\n                if (arg1 != 0xdeaa) {\n                    bVar1 = arg1 == 0xdeab;\n                    goto code_r0x00014001eca1;\n                }\n            }\n        }\n    }\n    else if ((((arg1 != 0xdead) && (arg1 != 0xdeae)) && (arg1 != 0xdeaf)) &&\n            (((arg1 != 0xdeb0 && (arg1 != 0xdeb1)) && ((arg1 != 0xdeb2 && ((arg1 != 0xdeb3 && (arg1 != 65000)))))))) {\n        if (arg1 != 0xfde9) goto code_r0x00014001eca5;\ncode_r0x00014001ecdf:\n        arg2 = arg2 & 8;\n        goto code_r0x00014001eca5;\n    }\n    arg2 = 0;\ncode_r0x00014001eca5:\n    // WARNING: Could not recover jumptable at 0x00014001eca5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(arg1, arg2);\n    return;\n}\n",
        "token_count": 466
    },
    "14001ece": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.14001ece4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint *in_stack_00000040;\n    \n    uVar2 = 0;\n    if (arg1 < 0xdead) {\n        if (arg1 == 0xdeac) goto code_r0x00014001ed84;\n        if (0xc433 < arg1) {\n            if ((arg1 == 0xc435) || (arg1 == 0xd698)) goto code_r0x00014001ed84;\n            iVar1 = arg1 - 0xdeaa;\n            goto code_r0x00014001ed75;\n        }\n        if ((((arg1 == 0xc433) || (arg1 == 0x2a)) || (arg1 == 0xc42c)) || ((arg1 == 0xc42d || (arg1 == 0xc42e))))\n        goto code_r0x00014001ed84;\n        bVar3 = arg1 == 0xc431;\n    }\n    else {\n        if (((((arg1 == 0xdead) || (arg1 == 0xdeae)) || (arg1 == 0xdeaf)) || ((arg1 == 0xdeb0 || (arg1 == 0xdeb1)))) ||\n           ((arg1 == 0xdeb2 || (arg1 == 0xdeb3)))) goto code_r0x00014001ed84;\n        iVar1 = arg1 - 65000;\ncode_r0x00014001ed75:\n        if (iVar1 == 0) goto code_r0x00014001ed84;\n        bVar3 = iVar1 == 1;\n    }\n    if (!bVar3) {\n        uVar2 = arg2 & 0xffffff7f;\n    }\ncode_r0x00014001ed84:\n    if ((arg1 - 65000 < 2) && (in_stack_00000040 != NULL)) {\n        *in_stack_00000040 = 0;\n    }\n    // WARNING: Could not recover jumptable at 0x00014001edbb. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(arg1, uVar2, arg3, arg4);\n    return;\n}\n",
        "token_count": 535
    },
    "14001ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.14001ee04(uint16_t *arg1, uint16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint32_t uVar8;\n    int64_t iStack56;\n    int64_t iStack48;\n    char cStack32;\n    \n    if (*0x14004009c != 0) {\n        if ((arg1 == NULL) || (arg2 == NULL)) {\n            puVar4 = fcn.1400138d8();\n            *puVar4 = 0x16;\n            fcn.1400104f4();\n            iVar3 = 0x7fffffff;\n        }\n        else {\n            fcn.1400138f8(&stack0xffffffffffffffc8, 0);\n            iVar6 = iStack48;\n            if (*(iStack48 + 0x138) == 0) {\n                iVar3 = fcn.14001edc4(arg1, arg2);\n            }\n            else {\n                do {\n                    uVar1 = *arg1;\n                    arg1 = arg1 + 1;\n                    if (uVar1 < 0x100) {\n                        uVar7 = uVar1;\n                        if ((*(\n                              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                              + uVar7) & 1) != 0) {\n                            uVar7 = *(uVar7 + *(iVar6 + 0x110));\n                        }\n                        uVar1 = uVar7;\n                    }\n                    else {\n                        uVar1 = fcn.140025c48(uVar1, &stack0xffffffffffffffd0);\n                        iVar6 = iStack48;\n                    }\n                    uVar2 = *arg2;\n                    arg2 = arg2 + 1;\n                    if (uVar2 < 0x100) {\n                        uVar7 = uVar2;\n                        if ((*(\n                              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n                              + uVar7) & 1) != 0) {\n                            uVar7 = *(uVar7 + *(iVar6 + 0x110));\n                        }\n                        uVar2 = uVar7;\n                    }\n                    else {\n                        uVar2 = fcn.140025c48(uVar2, &stack0xffffffffffffffd0);\n                        iVar6 = iStack48;\n                    }\n                    iVar3 = uVar1 - uVar2;\n                } while ((iVar3 == 0) && (uVar1 != 0));\n            }\n            if (cStack32 != '\\0') {\n                *(iStack56 + 0x3a8) = *(iStack56 + 0x3a8) & 0xfffffffd;\n            }\n        }\n        return iVar3;\n    }\n    if ((arg1 != NULL) && (arg2 != NULL)) {\n        do {\n            uVar1 = *arg1;\n            arg1 = arg1 + 1;\n            uVar2 = *arg2;\n            arg2 = arg2 + 1;\n            uVar8 = uVar1 + 0x20;\n            if (0x19 < uVar1 - 0x41) {\n                uVar8 = uVar1;\n            }\n            uVar5 = uVar2 + 0x20;\n            if (0x19 < uVar2 - 0x41) {\n                uVar5 = uVar2;\n            }\n        } while ((uVar8 - uVar5 == 0) && (uVar8 != 0));\n        return uVar8 - uVar5;\n    }\n    iStack48 = 0x14001ee1b;\n    puVar4 = fcn.1400138d8();\n    *puVar4 = 0x16;\n    iStack48 = 0x14001ee26;\n    fcn.1400104f4();\n    return 0x7fffffff;\n}\n",
        "token_count": 1536
    },
    "14001f6a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: var_bp_28h\n// WARNING: Variable defined which should be unmapped: var_bp_30h\n\nvoid fcn.14001f6ac(char *arg1, char *arg2, int64_t *arg3)\n\n{\n    uint8_t uVar1;\n    char *lpMem;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *arg1_00;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t uVar7;\n    ulong uVar8;\n    uint64_t arg3_00;\n    ulong var_ch;\n    ulong var_230h;\n    uchar auStack888 [32];\n    ulong uStack856;\n    uint uStack848;\n    uchar auStack840 [8];\n    uint64_t uStack832;\n    ulong uStack824;\n    ulong uStack816;\n    ulong uStack808;\n    ulong uStack800;\n    ulong uStack792;\n    char cStack784;\n    int64_t iStack776;\n    int64_t iStack768;\n    char cStack752;\n    int64_t iStack744;\n    int64_t iStack736;\n    char cStack720;\n    ulong uStack712;\n    ulong uStack704;\n    char *pcStack696;\n    ulong uStack688;\n    ulong uStack680;\n    char cStack672;\n    uchar auStack620 [492];\n    ulong var_bp_78h;\n    ulong var_bp_70h;\n    ulong var_bp_68h;\n    ulong var_bp_58h;\n    ulong var_bp_50h;\n    ulong var_bp_48h;\n    uint64_t var_bp_40h;\n    ulong var_bp_38h;\n    ulong var_bp_30h;\n    ulong var_bp_28h;\n    ulong lpFindFileData;\n    \n    var_bp_40h = *0x14003e020 ^ auStack888;\n    if (arg2 != arg1) {\n        do {\n            if ((*arg2 - 0x2fU < 0x2e) && ((0x200000000801U >> (*arg2 - 0x2fU & 0x3fU) & 1) != 0)) break;\n            arg2 = fcn.1400265b8(arg1, arg2);\n        } while (arg2 != arg1);\n    }\n    if ((*arg2 == ':') && (arg2 != arg1 + 1)) {\n        fcn.14001f528(arg1, 0, 0, arg3);\n    }\n    else {\n        uVar7 = *arg2 - 0x2f;\n        uVar8 = 0;\n        if ((0x2d < uVar7) || (uVar1 = 1,  (0x200000000801U >> (uVar7 & 0x3fU) & 1) == 0)) {\n            uVar1 = 0;\n        }\n        uStack824 = 0;\n        uStack816 = 0;\n        uStack808 = 0;\n        uStack800 = 0;\n        uStack792 = 0;\n        arg3_00 = -uVar1 & arg2 + (1 - arg1);\n        cStack784 = '\\0';\n        uStack832 = arg3_00;\n        fcn.1400138f8(&iStack776, 0);\n        if (*(iStack768 + 0xc) == 0xfde9) {\n            if (cStack752 != '\\0') {\n                *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n            }\n            uVar4 = 0xfde9;\n        }\n        else {\n            iVar2 = fcn.14001cbac();\n            if (iVar2 == 0) {\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = uVar8;\n                if (cStack752 != '\\0') {\n                    *(iStack776 + 0x3a8) = *(iStack776 + 0x3a8) & 0xfffffffd;\n                }\n            }\n        }\n        iVar2 = fcn.1400164a8(arg1, &uStack824, auStack840, uVar4);\n        uStack848 = 0;\n        uStack856 = 0;\n        uVar4 = uStack808;\n        if (iVar2 != 0) {\n            uVar4 = uVar8;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileExW)(uVar4);\n        if (iVar3 == -1) {\n            fcn.14001f528(arg1, 0, 0, arg3);\n            if (cStack784 != '\\0') {\n                fcn.14001a674(uStack808);\n            }\n        }\n        else {\n            iVar6 = arg3[1] - *arg3 >> 3;\n            do {\n                uVar8 = 0;\n                uStack712 = 0;\n                uStack704 = 0;\n                pcStack696 = NULL;\n                uStack688 = 0;\n                uStack680 = 0;\n                cStack672 = '\\0';\n                fcn.1400138f8(&iStack744, 0);\n                if (*(iStack736 + 0xc) == 0xfde9) {\n                    if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                    uVar8 = 0xfde9;\n                }\n                else {\n                    iVar2 = fcn.14001cbac();\n                    if (iVar2 == 0) {\n                        if (cStack720 != '\\0') {\n                            *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                        }\n                        uVar8 = 1;\n                    }\n                    else if (cStack720 != '\\0') {\n                        *(iStack744 + 0x3a8) = *(iStack744 + 0x3a8) & 0xfffffffd;\n                    }\n                }\n                iVar2 = fcn.14001f158(auStack620, &uStack712, auStack840, uVar8);\n                lpMem = pcStack696;\n                arg1_00 = pcStack696;\n                if (iVar2 != 0) {\n                    arg1_00 = NULL;\n                }\n                if ((*arg1_00 == '.') && ((arg1_00[1] == '\\0' || ((arg1_00[1] == '.' && (arg1_00[2] == '\\0')))))) {\n                    if (cStack672 != '\\0') {\n                        fcn.14001a674(pcStack696);\n                    }\n                }\n                else {\n                    iVar2 = fcn.14001f528(arg1_00, arg1, arg3_00, arg3);\n                    if (iVar2 != 0) {\n                        if (cStack672 != '\\0') {\n                            fcn.14001a674(lpMem);\n                        }\n                        (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n                        if (cStack784 != '\\0') {\n                            fcn.14001a674(uStack808);\n                        }\n                        goto code_r0x00014001f9d8;\n                    }\n                    arg3_00 = uStack832;\n                    if (cStack672 != '\\0') {\n                        fcn.14001a674(lpMem);\n                        arg3_00 = uStack832;\n                    }\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3);\n            } while (iVar2 != 0);\n            iVar5 = arg3[1] - *arg3 >> 3;\n            if (iVar6 != iVar5) {\n                fcn.140025d40(*arg3 + iVar6 * 8, iVar5 - iVar6, 8, 0x14001f144);\n            }\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            if (cStack784 != '\\0') {\n                fcn.14001a674(uStack808);\n            }\n        }\n    }\ncode_r0x00014001f9d8:\n    fcn.140009d20(var_bp_40h ^ auStack888);\n    return;\n}\n",
        "token_count": 1915
    },
    "14001f9f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.14001f9fc(int64_t *arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    ulong uStackX16;\n    int64_t iStackX24;\n    int64_t iStackX32;\n    ulong var_48h;\n    ulong var_50h;\n    ulong var_58h;\n    uchar auStack88 [16];\n    ulong uStack72;\n    ulong var_20h;\n    ulong var_18h;\n    ulong var_10h;\n    \n    if (arg2 == NULL) {\n        puVar4 = fcn.1400138d8();\n        *puVar4 = 0x16;\n        fcn.1400104f4();\n        uVar8 = 0x16;\n    }\n    else {\n        *arg2 = 0;\n        iVar5 = *arg1;\n        auStack88 = ZEXT816(0);\n        uStack72 = 0;\n        while (iVar5 != 0) {\n            uStackX16 = CONCAT53(uStackX16._3_5_, 0x3f2a);\n            iVar5 = fcn.1400261f0(iVar5, &uStackX16);\n            if (iVar5 == 0) {\n                uVar2 = fcn.14001f528(*arg1, 0, 0, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.14001a674(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x00014001f45b;\n                }\n            }\n            else {\n                uVar2 = fcn.14001f6ac(*arg1, iVar5, auStack88);\n                uVar8 = uVar2;\n                if (uVar2 != 0) {\n                    piVar7 = auStack88._0_8_;\n                    if (auStack88._0_8_ != auStack88._8_8_) {\n                        do {\n                            fcn.14001a674(*piVar7);\n                            piVar7 = piVar7 + 1;\n                        } while (piVar7 != auStack88._8_8_);\n                    }\n                    goto code_r0x00014001f45b;\n                }\n            }\n            arg1 = arg1 + 1;\n            iVar5 = *arg1;\n        }\n        iVar5 = (auStack88._8_8_ - auStack88._0_8_ >> 3) + 1;\n        iStackX24 = 0;\n        for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n            iVar6 = -1;\n            do {\n                iVar6 = iVar6 + 1;\n            } while (*(*piVar7 + iVar6) != '\\0');\n            iStackX24 = iStackX24 + 1 + iVar6;\n        }\n        iVar6 = fcn.140016ed0(iVar5, iStackX24);\n        if (iVar6 == 0) {\n            fcn.14001a674(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.14001a674(*piVar7);\n            }\n            uVar8 = 0xffffffff;\ncode_r0x00014001f45b:\n            fcn.14001a674(auStack88._0_8_);\n        }\n        else {\n            iVar5 = iVar6 + iVar5 * 8;\n            iStackX32 = iVar5;\n            if (auStack88._0_8_ != auStack88._8_8_) {\n                uStackX16 = iVar6 - auStack88._0_8_;\n                piVar7 = auStack88._0_8_;\n                do {\n                    iVar9 = -1;\n                    do {\n                        iVar10 = iVar9;\n                        iVar9 = iVar10 + 1;\n                    } while (*(*piVar7 + iVar9) != '\\0');\n                    iVar10 = iVar10 + 2;\n                    iVar3 = fcn.1400254b0(iVar5, (iStackX32 - iVar5) + iStackX24, *piVar7, iVar10);\n                    if (iVar3 != 0) {\n                        fcn.140010544(0, 0, 0, 0, 0);\n                        pcVar1 = swi(3);\n                        uVar8 = (*pcVar1)();\n                        return uVar8;\n                    }\n                    *(uStackX16 + piVar7) = iVar5;\n                    iVar5 = iVar5 + iVar10;\n                    piVar7 = piVar7 + 1;\n                } while (piVar7 != auStack88._8_8_);\n            }\n            *arg2 = iVar6;\n            fcn.14001a674(0);\n            for (piVar7 = auStack88._0_8_; piVar7 != auStack88._8_8_; piVar7 = piVar7 + 1) {\n                fcn.14001a674(*piVar7);\n            }\n            fcn.14001a674(auStack88._0_8_);\n            uVar8 = 0;\n        }\n    }\n    return uVar8;\n}\n",
        "token_count": 1371
    },
    "14001fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14001fa04(ulong hModule, ulong arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong arg4;\n    ulong var_190h;\n    uchar auStack680 [32];\n    uchar auStack648 [8];\n    int64_t iStack640;\n    int64_t iStack632;\n    char cStack616;\n    ulong uStack608;\n    uint64_t uStack600;\n    ulong uStack592;\n    uint64_t uStack584;\n    ulong uStack576;\n    uchar uStack568;\n    uchar auStack552 [416];\n    ulong lpFilename;\n    uint64_t uStack24;\n    \n    uStack24 = *0x14003e020 ^ auStack680;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, auStack552, 0x105);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.14001384c(uVar2);\n    }\n    else {\n        uStack576 = 0;\n        uStack568 = 0;\n        uStack608 = arg2;\n        uStack600 = arg3 & 0xffffffff;\n        uStack592 = arg2;\n        uStack584 = arg3 & 0xffffffff;\n        fcn.1400138f8(&iStack640, 0);\n        arg4 = 0xfde9;\n        if (*(iStack632 + 0xc) == 0xfde9) {\n            if (cStack616 != '\\0') {\n                *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n            }\n        }\n        else {\n            iVar1 = fcn.14001cbac();\n            if (iVar1 == 0) {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 1;\n            }\n            else {\n                if (cStack616 != '\\0') {\n                    *(iStack640 + 0x3a8) = *(iStack640 + 0x3a8) & 0xfffffffd;\n                }\n                arg4 = 0;\n            }\n        }\n        fcn.140016624(auStack552, &uStack608, auStack648, arg4);\n    }\n    fcn.140009d20(uStack24 ^ auStack680);\n    return;\n}\n",
        "token_count": 574
    },
    "14001fb2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.14001fb28(ulong noname_0, uint32_t *arg2, int64_t **arg3, uint32_t *arg4)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    \n    fcn.140012b28(*arg2);\n    puVar6 = *(**arg3 + 0x88) + 0x18;\n    if (*0x1400407e0 == NULL) {\ncode_r0x00014001fbdb:\n        puVar6 = fcn.1400138d8();\n        *puVar6 = 0x16;\n        fcn.1400104f4();\n    }\n    else {\n        if (puVar6 == NULL) {\n            fcn.14000c2b0(*0x1400407e0, 0, 0x101);\n            goto code_r0x00014001fbdb;\n        }\n        iVar9 = 2;\n        puVar8 = *0x1400407e0;\n        do {\n            uVar3 = puVar6[1];\n            uVar4 = puVar6[2];\n            uVar5 = puVar6[3];\n            *puVar8 = *puVar6;\n            puVar8[1] = uVar3;\n            puVar8[2] = uVar4;\n            puVar8[3] = uVar5;\n            uVar3 = puVar6[5];\n            uVar4 = puVar6[6];\n            uVar5 = puVar6[7];\n            puVar8[4] = puVar6[4];\n            puVar8[5] = uVar3;\n            puVar8[6] = uVar4;\n            puVar8[7] = uVar5;\n            uVar3 = puVar6[9];\n            uVar4 = puVar6[10];\n            uVar5 = puVar6[0xb];\n            puVar8[8] = puVar6[8];\n            puVar8[9] = uVar3;\n            puVar8[10] = uVar4;\n            puVar8[0xb] = uVar5;\n            uVar3 = puVar6[0xd];\n            uVar4 = puVar6[0xe];\n            uVar5 = puVar6[0xf];\n            puVar8[0xc] = puVar6[0xc];\n            puVar8[0xd] = uVar3;\n            puVar8[0xe] = uVar4;\n            puVar8[0xf] = uVar5;\n            uVar3 = puVar6[0x11];\n            uVar4 = puVar6[0x12];\n            uVar5 = puVar6[0x13];\n            puVar8[0x10] = puVar6[0x10];\n            puVar8[0x11] = uVar3;\n            puVar8[0x12] = uVar4;\n            puVar8[0x13] = uVar5;\n            uVar3 = puVar6[0x15];\n            uVar4 = puVar6[0x16];\n            uVar5 = puVar6[0x17];\n            puVar8[0x14] = puVar6[0x14];\n            puVar8[0x15] = uVar3;\n            puVar8[0x16] = uVar4;\n            puVar8[0x17] = uVar5;\n            uVar3 = puVar6[0x19];\n            uVar4 = puVar6[0x1a];\n            uVar5 = puVar6[0x1b];\n            puVar8[0x18] = puVar6[0x18];\n            puVar8[0x19] = uVar3;\n            puVar8[0x1a] = uVar4;\n            puVar8[0x1b] = uVar5;\n            puVar7 = puVar8 + 0x20;\n            uVar3 = puVar6[0x1d];\n            uVar4 = puVar6[0x1e];\n            uVar5 = puVar6[0x1f];\n            puVar8[0x1c] = puVar6[0x1c];\n            puVar8[0x1d] = uVar3;\n            puVar8[0x1e] = uVar4;\n            puVar8[0x1f] = uVar5;\n            puVar6 = puVar6 + 0x20;\n            iVar9 = iVar9 + -1;\n            puVar8 = puVar7;\n        } while (iVar9 != 0);\n        *puVar7 = *puVar6;\n    }\n    iVar9 = 2;\n    puVar6 = *(**arg3 + 0x88) + 0x119;\n    if (*0x1400407e8 != NULL) {\n        puVar8 = *0x1400407e8;\n        if (puVar6 != NULL) {\n            do {\n                uVar3 = puVar6[1];\n                uVar4 = puVar6[2];\n                uVar5 = puVar6[3];\n                *puVar8 = *puVar6;\n                puVar8[1] = uVar3;\n                puVar8[2] = uVar4;\n                puVar8[3] = uVar5;\n                uVar3 = puVar6[5];\n                uVar4 = puVar6[6];\n                uVar5 = puVar6[7];\n                puVar8[4] = puVar6[4];\n                puVar8[5] = uVar3;\n                puVar8[6] = uVar4;\n                puVar8[7] = uVar5;\n                uVar3 = puVar6[9];\n                uVar4 = puVar6[10];\n                uVar5 = puVar6[0xb];\n                puVar8[8] = puVar6[8];\n                puVar8[9] = uVar3;\n                puVar8[10] = uVar4;\n                puVar8[0xb] = uVar5;\n                uVar3 = puVar6[0xd];\n                uVar4 = puVar6[0xe];\n                uVar5 = puVar6[0xf];\n                puVar8[0xc] = puVar6[0xc];\n                puVar8[0xd] = uVar3;\n                puVar8[0xe] = uVar4;\n                puVar8[0xf] = uVar5;\n                uVar3 = puVar6[0x11];\n                uVar4 = puVar6[0x12];\n                uVar5 = puVar6[0x13];\n                puVar8[0x10] = puVar6[0x10];\n                puVar8[0x11] = uVar3;\n                puVar8[0x12] = uVar4;\n                puVar8[0x13] = uVar5;\n                uVar3 = puVar6[0x15];\n                uVar4 = puVar6[0x16];\n                uVar5 = puVar6[0x17];\n                puVar8[0x14] = puVar6[0x14];\n                puVar8[0x15] = uVar3;\n                puVar8[0x16] = uVar4;\n                puVar8[0x17] = uVar5;\n                uVar3 = puVar6[0x19];\n                uVar4 = puVar6[0x1a];\n                uVar5 = puVar6[0x1b];\n                puVar8[0x18] = puVar6[0x18];\n                puVar8[0x19] = uVar3;\n                puVar8[0x1a] = uVar4;\n                puVar8[0x1b] = uVar5;\n                uVar3 = puVar6[0x1d];\n                uVar4 = puVar6[0x1e];\n                uVar5 = puVar6[0x1f];\n                puVar8[0x1c] = puVar6[0x1c];\n                puVar8[0x1d] = uVar3;\n                puVar8[0x1e] = uVar4;\n                puVar8[0x1f] = uVar5;\n                puVar6 = puVar6 + 0x20;\n                iVar9 = iVar9 + -1;\n                puVar8 = puVar8 + 0x20;\n            } while (iVar9 != 0);\n            goto code_r0x00014001fc8c;\n        }\n        fcn.14000c2b0(*0x1400407e8, 0, 0x100);\n    }\n    puVar6 = fcn.1400138d8();\n    *puVar6 = 0x16;\n    fcn.1400104f4();\ncode_r0x00014001fc8c:\n    piVar2 = **arg3[1];\n    LOCK();\n    iVar1 = *piVar2;\n    *piVar2 = *piVar2 + -1;\n    if ((iVar1 == 1) && (**arg3[1] != 0x14003e560)) {\n        fcn.14001a674(**arg3[1]);\n    }\n    **arg3[1] = *(**arg3 + 0x88);\n    LOCK();\n    **(**arg3 + 0x88) = **(**arg3 + 0x88) + 1;\n    fcn.140012b7c(*arg4);\n    return;\n}\n",
        "token_count": 2187
    },
    "14002026": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.140020268(int64_t arg1, int32_t **arg2)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    uchar uVar2;\n    unkbyte7 Var3;\n    int32_t *lpMem;\n    \n    uVar2 = SUB81(arg2, 0);\n    Var3 = arg2 >> 8;\n    if (((*(arg1 + 0x3a8) & *0x14003e3bc) == 0) || (*(arg1 + 0x90) == 0)) {\n        fcn.140012b28(5);\n        lpMem = *(arg1 + 0x88);\n        if (lpMem != *arg2) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x14003e560)) {\n                    fcn.14001a674(lpMem);\n                }\n            }\n            lpMem = *arg2;\n            *(arg1 + 0x88) = lpMem;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        fcn.140012b7c(5);\n    }\n    else {\n        lpMem = *(arg1 + 0x88);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.140016438();\n    if (*0x1400407fc == '\\0') {\n        *0x1400407e8 = 0x14003e8a0;\n        *0x1400407f0 = 0x14003e560;\n        *0x1400407e0 = 0x14003e790;\n        fcn.14001a3e8(0x14003e790, CONCAT71(Var3, uVar2));\n        fcn.14001fff8(0xfffffffd, CONCAT71(Var3, 1), arg3, 0x1400407f0);\n        *0x1400407fc = '\\x01';\n    }\n    return 0x1;\n}\n",
        "token_count": 480
    },
    "14002039": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14002039c(ulong arg1, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    ushort uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    int64_t iVar7;\n    uint8_t *puVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    ushort *puVar11;\n    uint64_t uVar12;\n    uint64_t uVar13;\n    uint uVar14;\n    ushort *puVar15;\n    uint32_t uVar16;\n    uint8_t *puVar17;\n    uint32_t uVar18;\n    uchar auStack104 [32];\n    int32_t iStack72;\n    uint8_t auStack66 [18];\n    uint64_t uStack48;\n    \n    uStack48 = *0x14003e020 ^ auStack104;\n    uVar4 = fcn.14001fcf8(arg1);\n    uVar12 = 0;\n    if (uVar4 != 0) {\n        puVar6 = 0x14003e9b0;\n        uVar14 = 1;\n        uVar9 = uVar12;\ncode_r0x0001400203e5:\n        if (*puVar6 != uVar4) goto code_r0x0001400203ed;\n        fcn.14000c2b0(arg2 + 0x18, 0, 0x101);\n        puVar17 = 0x14003e9a0;\n        iVar7 = 4;\n        puVar8 = uVar9 * 0x30 + 0x14003e9c0;\n        do {\n            uVar2 = *puVar8;\n            puVar10 = puVar8;\n            while ((uVar2 != 0 && (puVar10[1] != 0))) {\n                uVar2 = *puVar10;\n                uVar18 = uVar2;\n                if (uVar2 <= puVar10[1]) {\n                    uVar16 = uVar2;\n                    do {\n                        uVar16 = uVar16 + 1;\n                        if (0x100 < uVar16) break;\n                        uVar18 = uVar18 + 1;\n                        puVar1 = uVar16 + 0x18 + arg2;\n                        *puVar1 = *puVar1 | *puVar17;\n                    } while (uVar18 <= puVar10[1]);\n                }\n                puVar10 = puVar10 + 2;\n                uVar2 = *puVar10;\n            }\n            puVar8 = puVar8 + 8;\n            puVar17 = puVar17 + 1;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        *(arg2 + 4) = uVar4;\n        *(arg2 + 8) = 1;\n        uVar13 = *0x140032d20;\n        if (((uVar4 != 0x3a4) && (uVar13 = *0x140032d28,  uVar4 != 0x3a8)) &&\n           ((uVar13 = *0x140032d30,  uVar4 != 0x3b5 && (uVar13 = uVar12,  uVar4 == 0x3b6)))) {\n            uVar13 = *0x140032d38;\n        }\n        *(arg2 + 0x220) = uVar13;\n        puVar15 = uVar9 * 0x30 + 0x14003e9b4;\n        puVar11 = arg2 + 0xc;\n        iVar7 = 6;\n        do {\n            uVar3 = *puVar15;\n            puVar15 = puVar15 + 1;\n            *puVar11 = uVar3;\n            puVar11 = puVar11 + 1;\n            iVar7 = iVar7 + -1;\n        } while (iVar7 != 0);\n        goto code_r0x00014002061f;\n    }\ncode_r0x000140020629:\n    fcn.14001fd78(arg2);\ncode_r0x000140020633:\n    fcn.140009d20(uStack48 ^ auStack104);\n    return;\ncode_r0x0001400203ed:\n    uVar18 = uVar9 + 1;\n    uVar9 = uVar18;\n    puVar6 = puVar6 + 0xc;\n    if (4 < uVar18) goto code_r0x0001400203fa;\n    goto code_r0x0001400203e5;\ncode_r0x0001400203fa:\n    if ((uVar4 == 65000) || (iVar5 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(uVar4 & 0xffff),  iVar5 == 0))\n    goto code_r0x000140020633;\n    if (uVar4 == 0xfde9) {\n        *(arg2 + 4) = 0xfde9;\n        *(arg2 + 0x220) = 0;\n        *(arg2 + 0x18) = 0;\n        *(arg2 + 0x1c) = 0;\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar4);\n        if (iVar5 == 0) {\n            if (*0x1400407f8 == 0) goto code_r0x000140020633;\n            goto code_r0x000140020629;\n        }\n        fcn.14000c2b0(arg2 + 0x18, 0, 0x101);\n        *(arg2 + 4) = uVar4;\n        *(arg2 + 0x220) = 0;\n        if (iStack72 == 2) {\n            puVar8 = auStack66;\n            while ((auStack66[0] != 0 && (puVar8[1] != 0))) {\n                uVar2 = *puVar8;\n                if (uVar2 <= puVar8[1]) {\n                    uVar4 = uVar2;\n                    uVar9 = (puVar8[1] - uVar2) + 1;\n                    do {\n                        uVar4 = uVar4 + 1;\n                        puVar17 = uVar4 + 0x18 + arg2;\n                        *puVar17 = *puVar17 | 4;\n                        uVar9 = uVar9 - 1;\n                    } while (uVar9 != 0);\n                }\n                puVar8 = puVar8 + 2;\n                auStack66[0] = *puVar8;\n            }\n            puVar8 = arg2 + 0x1a;\n            iVar7 = 0xfe;\n            do {\n                *puVar8 = *puVar8 | 8;\n                puVar8 = puVar8 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n            iVar5 = *(arg2 + 4);\n            uVar9 = *0x140032d20;\n            if ((((iVar5 != 0x3a4) && (uVar9 = *0x140032d28,  iVar5 != 0x3a8)) &&\n                (uVar9 = *0x140032d30,  iVar5 != 0x3b5)) && (uVar9 = *0x140032d38,  iVar5 != 0x3b6)) {\n                uVar9 = uVar12;\n            }\n            *(arg2 + 0x220) = uVar9;\n        }\n        else {\n            uVar14 = 0;\n        }\n        *(arg2 + 8) = uVar14;\n    }\n    puVar11 = arg2 + 0xc;\n    for (iVar7 = 6; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = 0;\n        puVar11 = puVar11 + 1;\n    }\ncode_r0x00014002061f:\n    fcn.14001fe10(arg2);\n    goto code_r0x000140020633;\n}\n",
        "token_count": 1828
    },
    "14002085": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.140020850(void)\n\n{\n    char cVar1;\n    int32_t aiStackX8 [8];\n    \n    aiStackX8[0] = 0;\n    cVar1 = fcn.140020838();\n    if (cVar1 == '\\0') {\n        fcn.14001cb54(aiStackX8);\n    }\n    return aiStackX8[0] != 1;\n}\n",
        "token_count": 93
    },
    "1400225a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.1400225a8(int16_t *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong arg2_00;\n    uint32_t auStackX8 [2];\n    \n    if (((arg1 == NULL) || (*arg1 == 0)) || (iVar1 = fcn.1400269c4(arg1, 0x140033d38),  iVar1 == 0)) {\n        arg2_00 = 0x20001004;\n    }\n    else {\n        iVar1 = fcn.14001ee04(arg1, L\"utf8\");\n        if (iVar1 == 0) {\n            return 0xfde9;\n        }\n        iVar1 = fcn.14001ee04(arg1, L\"utf-8\");\n        if (iVar1 == 0) {\n            return 0xfde9;\n        }\n        iVar1 = fcn.1400269c4(arg1, 0x140033d50);\n        if (iVar1 != 0) {\n            uVar2 = fcn.140019e28(arg1);\n            return uVar2;\n        }\n        arg2_00 = 0x2000000b;\n    }\n    uVar2 = fcn.14001ccb0(arg2 + 600, arg2_00, auStackX8, 2);\n    if (uVar2 == 0) {\n        return uVar2;\n    }\n    if (auStackX8[0] < 3) {\n        return 0xfde9;\n    }\n    return auStackX8[0];\n}\n",
        "token_count": 362
    },
    "1400235d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400235d0(ulong noname_0, ulong *arg2, int64_t **arg3, ulong *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    fcn.14001bab0(*arg2);\n    if ((**arg3 != 0) && (uVar1 = *(**arg3 + 0x14),  (uVar1 >> 0xd & 1) != 0)) {\n        if ((((uVar1 & 3) == 2) && ((uVar1 & 0xc0) != 0)) || ((uVar1 >> 0xb & 1) != 0)) {\n            if ((*arg3[2] != '\\0') || ((*(**arg3 + 0x14) >> 1 & 1) != 0)) {\n                iVar2 = fcn.14002383c(**arg3);\n                if (iVar2 == -1) {\n                    *arg3[3] = 0xffffffff;\n                }\n                else {\n                    *arg3[1] = *arg3[1] + 1;\n                }\n            }\n        }\n        else {\n            *arg3[1] = *arg3[1] + 1;\n        }\n    }\n    fcn.14001babc(*arg4);\n    return;\n}\n",
        "token_count": 297
    },
    "14002366": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.14002366c(ulong noname_0, uint32_t *arg2, int32_t **arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    uchar auStackX16 [16];\n    uint32_t *puStackX32;\n    int64_t iStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t *piStack64;\n    int64_t *piStack56;\n    int32_t *piStack48;\n    int32_t *piStack40;\n    int32_t *piStack32;\n    \n    puStackX32 = arg4;\n    fcn.140012b28(*arg2);\n    piVar1 = *0x1400400f0 + *0x1400400e8;\n    for (piVar3 = *0x1400400f0; piStack64 = piVar3,  piVar3 != piVar1; piVar3 = piVar3 + 1) {\n        iStack88 = *piVar3;\n        if ((iStack88 != 0) && (uVar2 = *(iStack88 + 0x14),  (uVar2 >> 0xd & 1) != 0)) {\n            if ((((uVar2 & 3) == 2) && ((uVar2 & 0xc0) != 0)) || ((uVar2 >> 0xb & 1) != 0)) {\n                piStack32 = arg3[2];\n                piStack40 = arg3[1];\n                piStack48 = *arg3;\n                piStack56 = &iStack88;\n                iStack80 = iStack88;\n                iStack72 = iStack88;\n                fcn.1400235d0(auStackX16, &iStack72, &piStack56, &iStack80);\n            }\n            else {\n                **arg3 = **arg3 + 1;\n            }\n        }\n    }\n    fcn.140012b7c(*arg4);\n    return;\n}\n",
        "token_count": 470
    },
    "1400237b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.1400237b0(ulong *arg1, ulong arg2)\n\n{\n    ulong arg2_00;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (((*(arg1 + 0x14) & 3) == 2) && ((*(arg1 + 0x14) & 0xc0) != 0)) {\n        uVar2 = *arg1 - *(arg1 + 1);\n        *(arg1 + 2) = 0;\n        arg2_00 = arg1[1];\n        *arg1 = arg2_00;\n        if (0 < uVar2) {\n            uVar1 = fcn.14001b90c(arg1);\n            uVar1 = fcn.140027360(uVar1, arg2_00, uVar2, arg2);\n            if (uVar2 != uVar1) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) | 0x10;\n                return 0xffffffff;\n            }\n            if ((*(arg1 + 0x14) >> 2 & 1) != 0) {\n                LOCK();\n                *(arg1 + 0x14) = *(arg1 + 0x14) & 0xfffffffd;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "14002383": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.14002383c(int64_t arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t var_40h;\n    ulong var_30h;\n    ulong var_28h;\n    uint uStack40;\n    uint uStack36;\n    ulong var_18h;\n    ulong var_bp_10h;\n    ulong var_bp_8h;\n    \n    var_40h = 0;\n    var_18h._0_1_ = *0x14004009c == 0;\n    var_30h._0_1_ = 0;\n    var_bp_10h._0_1_ = '\\0';\n    var_bp_8h._0_1_ = '\\0';\n    if (var_18h) {\n        var_28h._0_4_ = *0x14003e298;\n        var_28h._4_4_ = *0x14003e29c;\n        uStack40 = *0x14003e2a0;\n        uStack36 = *0x14003e2a4;\n    }\n    if (arg1 == 0) {\n        uVar1 = fcn.140023750(0);\n        goto code_r0x0001400238c1;\n    }\n    iVar2 = fcn.1400237b0(arg1, &var_40h);\n    if (iVar2 == 0) {\n        if ((*(arg1 + 0x14) >> 0xb & 1) != 0) {\n            uVar3 = fcn.14001b90c(arg1);\n            iVar2 = fcn.140026ac4(uVar3);\n            if (iVar2 != 0) goto code_r0x00014002389c;\n        }\n        uVar1 = 0;\n    }\n    else {\ncode_r0x00014002389c:\n        uVar1 = 0xffffffff;\n    }\ncode_r0x0001400238c1:\n    if (var_18h == '\\x02') {\n        *(var_40h + 0x3a8) = *(var_40h + 0x3a8) & 0xfffffffd;\n    }\n    if (var_bp_10h != '\\0') {\n        iVar4 = fcn.140010108(&var_40h);\n        *(iVar4 + 0x20) = var_18h._4_4_;\n    }\n    if (var_bp_8h != '\\0') {\n        iVar4 = fcn.140010108(&var_40h);\n        *(iVar4 + 0x24) = var_bp_10h._4_4_;\n    }\n    return uVar1;\n}\n",
        "token_count": 620
    },
    "14002391": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.140023918(char *arg1, char *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint64_t in_RAX;\n    char *pcVar2;\n    uint64_t uVar3;\n    int32_t in_stack_00000028;\n    \n    if (in_stack_00000028 == 0) {\n        return in_RAX & 0xffffffffffffff00 | '4' < *arg2;\n    }\n    pcVar2 = fcn.14001e60c();\n    iVar1 = pcVar2;\n    if (iVar1 == 0) {\n        uVar3 = 1;\n        if (*arg2 < '6') {\n            if (*arg2 < '5') {\ncode_r0x0001400239d1:\n                return pcVar2 & 0xffffffffffffff00;\n            }\n            pcVar2 = arg2 + 1;\n            if (arg4 != 0) {\n                for (; *pcVar2 == '0'; pcVar2 = pcVar2 + 1) {\n                }\n                if (*pcVar2 == '\\0') {\n                    if (arg2 != arg1) {\n                        return pcVar2 & 0xffffffffffffff00 | arg2[-1] & 1;\n                    }\n                    goto code_r0x0001400239d1;\n                }\n            }\n        }\n        goto code_r0x000140023965;\n    }\n    if (iVar1 == 0x200) {\n        if (arg4 == 0) goto joined_r0x0001400239cd;\n        while( true ) {\n            pcVar2 = pcVar2 & 0xffffffffffffff00;\n            if (*arg2 != '0') break;\n            arg2 = arg2 + 1;\n        }\n        if (*arg2 != '\\0') goto joined_r0x0001400239cd;\n    }\n    else {\n        if (iVar1 != 0x100) goto code_r0x0001400239d1;\n        if (arg4 != 0) {\n            while( true ) {\n                pcVar2 = pcVar2 & 0xffffffffffffff00;\n                if (*arg2 != '0') break;\n                arg2 = arg2 + 1;\n            }\n            if (*arg2 == '\\0') goto code_r0x0001400239a7;\n        }\njoined_r0x0001400239cd:\n        uVar3 = 1;\n        if (arg3 == 0x2d) goto code_r0x000140023965;\n    }\ncode_r0x0001400239a7:\n    uVar3 = 0;\ncode_r0x000140023965:\n    return pcVar2 & 0xffffffffffffff00 | uVar3;\n}\n",
        "token_count": 602
    },
    "14002535": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.14002535c(uchar *arg1, uint16_t **arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint64_t arg3_00;\n    int64_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uchar *arg1_00;\n    ulong in_stack_00000028;\n    uchar auStack120 [32];\n    ulong uStack88;\n    ulong uStack80;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    uStack64 = *0x14003e020 ^ auStack120;\n    puVar2 = *arg2;\n    uStack88 = in_stack_00000028;\n    puVar3 = puVar2;\n    uStack80 = arg4;\n    if (arg1 == NULL) {\n        iVar1 = fcn.140028394(auStack72, *puVar2, arg4, in_stack_00000028);\n        while ((iVar1 != -1 && ((iVar1 == 0 || (auStack72[iVar1 + -1] != '\\0'))))) {\n            puVar2 = puVar2 + 1;\n            iVar1 = fcn.140028394(auStack72, *puVar2, arg4, uStack88);\n        }\n    }\n    else {\n        while( true ) {\n            arg1_00 = auStack72;\n            if (3 < arg3) {\n                arg1_00 = arg1;\n            }\n            arg3_00 = fcn.140028394(arg1_00, *puVar2, uStack80, uStack88);\n            if (arg3_00 == 0xffffffffffffffff) {\n                *arg2 = puVar3;\n                goto code_r0x00014002548b;\n            }\n            if (arg1_00 != arg1) {\n                if (arg3 < arg3_00) goto code_r0x000140025406;\n                fcn.14000bbe0(arg1, arg1_00, arg3_00);\n            }\n            if ((arg3_00 != 0) && (arg1[arg3_00 - 1] == '\\0')) break;\n            arg1 = arg1 + arg3_00;\n            puVar2 = puVar2 + 1;\n            if (arg3_00 != 0) {\n                puVar3 = puVar2;\n            }\n            arg3 = arg3 - arg3_00;\n        }\n        puVar3 = NULL;\ncode_r0x000140025406:\n        *arg2 = puVar3;\n    }\ncode_r0x00014002548b:\n    fcn.140009d20(uStack64 ^ auStack120);\n    return;\n}\n",
        "token_count": 599
    },
    "1400259c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.1400259c0(ulong arg1, ulong arg2, ulong ***arg3, ulong arg4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000040;\n    int32_t in_stack_00000048;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    ulong ***pppuStack224;\n    ulong uStack216;\n    ulong ***pppuStack200;\n    ulong uStack192;\n    uchar auStack184 [48];\n    ulong uStack136;\n    uint32_t uStack120;\n    uint64_t uStack72;\n    \n    uStack72 = *0x14003e020 ^ auStack264;\n    uStack192 = fcn.14001c7bc(0x1f80, 0xffc0);\n    pppuStack200 = arg3;\n    iVar2 = fcn.140025904(in_stack_00000028, uStack192);\n    uVar3 = in_stack_00000040;\n    uVar4 = in_stack_00000040 >> 0x20;\n    if (iVar2 == 0) {\n        if (in_stack_00000048 == 2) {\n            uStack136 = in_stack_00000040;\n            uStack120 = uStack120 & 0xffffffe3 | 3;\n        }\n        pppuStack224 = &pppuStack200;\n        puStack232 = &stack0x00000038;\n        fcn.14001c198(auStack184, &uStack192, in_stack_00000028);\n    }\n    cVar1 = fcn.140016c7c();\n    if ((cVar1 == '\\0') || (arg4 == 0)) {\n        fcn.14001c4f4(arg4);\n        fcn.14001c7bc(uStack192, 0xffc0);\n    }\n    else {\n        uStack216 = uStack192;\n        pppuStack224 = pppuStack200;\n        puStack232 = CONCAT44(uVar4, uVar3);\n        fcn.14002589c(arg4, in_stack_00000030, arg1);\n    }\n    fcn.140009d20(uStack72 ^ auStack264);\n    return;\n}\n",
        "token_count": 532
    },
    "140025c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint16_t fcn.140025c48(ulong noname_0, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint16_t auStackX8 [8];\n    uint16_t uStackX24;\n    int64_t iStack40;\n    int64_t iStack32;\n    char cStack16;\n    \n    if (noname_0 == 0xffff) {\n        return 0xffff;\n    }\n    auStackX8[0] = noname_0;\n    fcn.1400138f8(&iStack40, arg2);\n    uVar2 = auStackX8[0];\n    if (*(iStack32 + 0xc) == 0xfde9) {\n        if (0x7f < auStackX8[0]) {\ncode_r0x000140025ce4:\n            iVar1 = fcn.140028438(*(iStack32 + 0x138), 0x100, auStackX8, 1);\n            if (iVar1 != 0) {\n                auStackX8[0] = uStackX24;\n            }\n            goto code_r0x000140025d1e;\n        }\n        if ((*(\n              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n              + uVar2) & 1) == 0) {\n            auStackX8[0] = auStackX8[0] & 0xff;\n            goto code_r0x000140025d1e;\n        }\n    }\n    else {\n        if (0xff < auStackX8[0]) {\n            if (*(iStack32 + 0x138) == 0) goto code_r0x000140025d1e;\n            goto code_r0x000140025ce4;\n        }\n        if ((*(\n              L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10      (                          \\b\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0112\\x10\\x100\\x10\\x10\\x10\\x10\\x14\\x14\\x10\u0112\\x10\\x10\\x10\\x14\u0112\\x10\\x10\\x10\\x10\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0101\"\n              + uVar2) & 1) == 0) {\n            auStackX8[0] = auStackX8[0] & 0xff;\n            goto code_r0x000140025d1e;\n        }\n    }\n    auStackX8[0] = *(*(iStack32 + 0x110) + uVar2);\ncode_r0x000140025d1e:\n    if (cStack16 != '\\0') {\n        *(iStack40 + 0x3a8) = *(iStack40 + 0x3a8) & 0xfffffffd;\n    }\n    return auStackX8[0];\n}\n",
        "token_count": 1210
    },
    "1400265b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint8_t * fcn.1400265b8(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint *puVar1;\n    uint8_t *puVar2;\n    int64_t aiStack40 [2];\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar1 = fcn.1400138d8();\n        *puVar1 = 0x16;\n        fcn.1400104f4();\n    }\n    else if (arg1 < arg2) {\n        fcn.1400138f8(aiStack40, 0);\n        puVar2 = arg2 + -1;\n        if (*(iStack24 + 8) != 0) {\n            do {\n                puVar2 = puVar2 + -1;\n                if (puVar2 < arg1) break;\n            } while ((*(*puVar2 + 0x19 + iStack24) & 4) != 0);\n            puVar2 = arg2 + (-1 - (arg2 - puVar2 & 1));\n        }\n        if (cStack16 == '\\0') {\n            return puVar2;\n        }\n        *(aiStack40[0] + 0x3a8) = *(aiStack40[0] + 0x3a8) & 0xfffffffd;\n        return puVar2;\n    }\n    return NULL;\n}\n",
        "token_count": 322
    },
    "140026b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140026b58(ulong *arg1, ulong arg2, uint8_t *arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint uVar3;\n    uint64_t uVar4;\n    char *pcVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uint8_t *puVar11;\n    uint64_t uVar12;\n    int64_t arg3_00;\n    ulong uVar13;\n    int32_t iVar14;\n    uint64_t uVar15;\n    int64_t iVar16;\n    uchar *in_stack_00000028;\n    uchar auStack264 [32];\n    uchar *puStack232;\n    uint uStack224;\n    ulong uStack216;\n    ulong uStack208;\n    uint16_t auStack200 [2];\n    uint uStack196;\n    uint32_t auStack192 [2];\n    uint8_t *puStack184;\n    uchar *puStack176;\n    uint64_t uStack168;\n    uint32_t uStack160;\n    int32_t iStack156;\n    uint8_t *puStack152;\n    int64_t iStack144;\n    ulong uStack136;\n    uchar *puStack128;\n    uint8_t *puStack120;\n    ulong uStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    uchar auStack88 [8];\n    uint8_t uStack80;\n    uint8_t uStack79;\n    uchar auStack72 [8];\n    uint64_t uStack64;\n    \n    uStack96 = 0xfffffffffffffffe;\n    uStack64 = *0x14003e020 ^ auStack264;\n    puStack176 = in_stack_00000028;\n    iVar16 = arg2 >> 6;\n    uVar4 = arg2 & 0x3f;\n    uStack112 = *(*(iVar16 * 8 + 0x140040110) + 0x28 + uVar4 * 0x48);\n    puStack184 = arg3 + (arg4 & 0xffffffff);\n    puStack152 = arg3;\n    iStack144 = iVar16;\n    uStack160 = (*_sym.imp.KERNEL32.dll_GetConsoleOutputCP)();\n    uVar12 = 0;\n    if (puStack176[0x28] == '\\0') {\n        fcn.1400122f0(puStack176);\n    }\n    iStack156 = *(*(puStack176 + 0x18) + 0xc);\n    *arg1 = 0;\n    *(arg1 + 1) = 0;\n    uVar6 = uVar12;\n    iVar9 = iVar16;\n    if (puStack152 < arg3 + (arg4 & 0xffffffff)) {\n        do {\n            iStack104 = iVar9;\n            auStack200[0] = auStack200[0] & 0xff00 | *arg3;\n            uStack196 = 0;\n            uVar15 = 1;\n            if (iStack156 == 0xfde9) {\n                pcVar5 = uVar4 * 0x48 + 0x3e + *(iStack104 * 8 + 0x140040110);\n                uVar6 = uVar12;\n                uVar15 = uVar12;\n                do {\n                    uVar7 = uVar6;\n                    if (*pcVar5 == '\\0') break;\n                    uVar7 = uVar7 + 1;\n                    uVar6 = uVar7;\n                    uVar15 = uVar15 + 1;\n                    pcVar5 = pcVar5 + 1;\n                } while (uVar15 < 5);\n                if (uVar15 < 1) {\n                    cVar2 = *(*arg3 + 0x14003eaa0);\n                    iVar14 = cVar2 + 1;\n                    iVar16 = puStack184 - arg3;\n                    if (iVar16 < iVar14) {\n                        uVar6 = uVar12;\n                        if (0 < iVar16) {\n                            do {\n                                *(*(iStack144 * 8 + 0x140040110) + uVar12 + 0x3e + uVar4 * 0x48) = arg3[uVar12];\n                                uVar7 = uVar6 + 1;\n                                uVar12 = uVar12 + 1;\n                                uVar6 = uVar7;\n                            } while (uVar7 < iVar16);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar16;\n                        break;\n                    }\n                    uStack168 = 0;\n                    uVar7 = (iVar14 == 4) + 1;\n                    puStack232 = puStack176;\n                    puStack120 = arg3;\n                    iVar16 = fcn.140024e70(&uStack196, &puStack120, uVar7, &uStack168);\n                    if (iVar16 == -1) break;\n                    uVar15 = uVar7;\n                    puVar11 = arg3 + cVar2;\n                    iVar16 = iStack144;\n                }\n                else {\n                    iVar14 = *(*(*(iVar16 * 8 + 0x140040110) + 0x3e + uVar4 * 0x48) + 0x14003eaa0) + 1;\n                    uVar7 = iVar14 - uVar7;\n                    uStack168 = uStack168 & 0xffffffff00000000 | uVar7;\n                    iVar9 = puStack184 - arg3;\n                    arg3_00 = uVar7;\n                    if (iVar9 < arg3_00) {\n                        if (0 < iVar9) {\n                            uVar6 = uVar15;\n                            do {\n                                *(*(iVar16 * 8 + 0x140040110) + uVar6 + 0x3e + uVar4 * 0x48) = arg3[uVar6 - uVar15];\n                                uVar7 = uVar12 + 1;\n                                uVar12 = uVar7;\n                                uVar6 = uVar6 + 1;\n                            } while (uVar7 < iVar9);\n                        }\n                        *(arg1 + 4) = *(arg1 + 4) + iVar9;\n                        break;\n                    }\n                    puVar10 = uVar4 * 0x48 + 0x3e + *(iStack104 * 8 + 0x140040110);\n                    uVar6 = uVar12;\n                    do {\n                        auStack88[uVar6] = *puVar10;\n                        uVar6 = uVar6 + 1;\n                        puVar10 = puVar10 + 1;\n                    } while (uVar6 < uVar15);\n                    uVar6 = uVar12;\n                    if (0 < arg3_00) {\n                        fcn.14000bbe0(auStack88 + uVar15, arg3, arg3_00);\n                    }\n                    do {\n                        *(*(iVar16 * 8 + 0x140040110) + uVar6 + 0x3e + uVar4 * 0x48) = 0;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < uVar15);\n                    uStack136 = 0;\n                    puStack128 = auStack88;\n                    uVar7 = (iVar14 == 4) + 1;\n                    uVar15 = uVar7;\n                    puStack232 = puStack176;\n                    iVar9 = fcn.140024e70(&uStack196, &puStack128, uVar7, &uStack136);\n                    if (iVar9 == -1) break;\n                    puVar11 = arg3 + (uStack168 + -1);\n                }\n            }\n            else {\n                iVar9 = *(iVar16 * 8 + 0x140040110);\n                uVar1 = *(iVar9 + 0x3d + uVar4 * 0x48);\n                if ((uVar1 & 4) == 0) {\n                    if (*(**(puStack176 + 0x18) + *arg3 * 2) < 0) {\n                        puVar11 = arg3 + 1;\n                        if (puVar11 < puStack184) {\n                            iVar14 = fcn.14001b794(&uStack196, arg3, 2, puStack176);\n                            if (iVar14 != -1) goto code_r0x000140026e4e;\n                        }\n                        else {\n                            *(iVar9 + 0x3e + uVar4 * 0x48) = *arg3;\n                            puVar11 = *(iVar16 * 8 + 0x140040110) + 0x3d + uVar4 * 0x48;\n                            *puVar11 = *puVar11 | 4;\n                            *(arg1 + 4) = uVar6 + 1;\n                        }\n                        break;\n                    }\n                    uVar13 = 1;\n                    puVar11 = arg3;\n                }\n                else {\n                    uStack80 = *(iVar9 + 0x3e + uVar4 * 0x48);\n                    uStack79 = *arg3;\n                    *(iVar9 + 0x3d + uVar4 * 0x48) = uVar1 & 0xfb;\n                    uVar13 = 2;\n                    puVar11 = &uStack80;\n                }\n                iVar14 = fcn.14001b794(&uStack196, puVar11, uVar13, puStack176);\n                puVar11 = arg3;\n                if (iVar14 == -1) break;\n            }\ncode_r0x000140026e4e:\n            arg3 = puVar11 + 1;\n            uStack208 = 0;\n            uStack216 = 0;\n            uStack224 = 5;\n            puStack232 = auStack72;\n            uVar7 = fcn.14001ece4(uStack160, 0, &uStack196, uVar15);\n            uVar13 = uStack112;\n            if (uVar7 == 0) break;\n            puStack232 = NULL;\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uStack112, auStack72, uVar7, auStack192);\n            if (iVar14 == 0) {\ncode_r0x000140026f9b:\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                *arg1 = uVar3;\n                break;\n            }\n            uVar8 = (arg3 - puStack152) + *(arg1 + 1);\n            *(arg1 + 4) = uVar8;\n            if (auStack192[0] < uVar7) break;\n            if (auStack200[0] == '\\n') {\n                auStack200[0] = 0xd;\n                puStack232 = NULL;\n                iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar13, auStack200, 1, auStack192);\n                if (iVar14 == 0) goto code_r0x000140026f9b;\n                if (auStack192[0] == 0) break;\n                *(arg1 + 1) = *(arg1 + 1) + 1;\n                *(arg1 + 4) = *(arg1 + 4) + 1;\n                uVar8 = *(arg1 + 4);\n            }\n            uVar6 = uVar8;\n            iVar9 = iStack104;\n        } while (arg3 < puStack184);\n    }\n    fcn.140009d20(uStack64 ^ auStack264);\n    return;\n}\n",
        "token_count": 2588
    },
    "14002748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpMode\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.140027480(ulong arg1, int16_t *arg2, ulong arg3, int64_t arg4)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    int32_t iVar10;\n    int64_t iVar11;\n    uint64_t arg4_00;\n    uint64_t uVar12;\n    int16_t *piVar13;\n    ulong uStack128;\n    int32_t iStack120;\n    uint64_t uStack112;\n    int64_t iStack88;\n    ulong var_48h;\n    ulong lpNumberOfBytesWritten;\n    ulong var_30h;\n    ulong lpMode;\n    ulong var_18h;\n    \n    iVar10 = 0;\n    arg4_00 = arg3;\n    uVar12 = arg1;\n    if (arg3 == 0) {\n        return 0;\n    }\n    if (arg2 == NULL) {\ncode_r0x0001400274b0:\n        *(arg4 + 0x38) = 1;\n        *(arg4 + 0x34) = 0;\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 0x16;\n        fcn.140010428(0, 0, 0, 0);\n        return -1;\n    }\n    uVar8 = arg1 & 0x3f;\n    iVar11 = uVar12 >> 6;\n    iVar2 = *(iVar11 * 8 + 0x140040110);\n    cVar1 = *(iVar2 + 0x39 + uVar8 * 0x48);\n    iStack88 = iVar11;\n    if ((cVar1 - 1U < 2) && ((~arg3 & 1) == 0)) goto code_r0x0001400274b0;\n    if ((*(iVar2 + 0x38 + uVar8 * 0x48) & 0x20) != 0) {\n        fcn.14002838c(uVar12 & 0xffffffff, 0, 2, arg4);\n    }\n    uStack112 = 0;\n    iVar6 = fcn.14002510c(uVar12 & 0xffffffff);\n    if ((iVar6 == 0) || (-1 < *(*(iVar11 * 8 + 0x140040110) + 0x38 + uVar8 * 0x48))) {\ncode_r0x000140027663:\n        iVar2 = *(iVar11 * 8 + 0x140040110);\n        if (-1 < *(iVar2 + 0x38 + uVar8 * 0x48)) {\n            uStack128 = 0;\n            iStack120 = 0;\n            iVar6 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(iVar2 + 0x28 + uVar8 * 0x48), arg2, arg4_00, &uStack128 + 4, 0)\n            ;\n            iVar10 = iStack120;\n            uVar3 = uStack128;\n            if (iVar6 == 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                uStack128 = uStack128 & 0xffffffff00000000 | uVar7;\n                iVar10 = iStack120;\n                uVar3 = uStack128;\n            }\n            goto code_r0x000140027704;\n        }\n        if (cVar1 == '\\0') {\n            puVar9 = fcn.140026fd0(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n        else if (cVar1 == '\\x01') {\n            puVar9 = fcn.1400271f0(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n        else {\n            iVar10 = 0;\n            uVar3 = uStack112;\n            if (cVar1 != '\\x02') goto code_r0x000140027704;\n            puVar9 = fcn.1400270d4(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n        }\n    }\n    else {\n        if (*(arg4 + 0x28) == '\\0') {\n            fcn.1400122f0(arg4);\n        }\n        if (((*(*(arg4 + 0x18) + 0x138) == 0) && (*(*(iVar11 * 8 + 0x140040110) + 0x39 + uVar8 * 0x48) == '\\0')) ||\n           (iVar6 = (*_sym.imp.KERNEL32.dll_GetConsoleMode)(),  iVar6 == 0)) goto code_r0x000140027663;\n        if (cVar1 != '\\0') {\n            if ((cVar1 == '\\x01') || (uVar3 = uStack112,  cVar1 == '\\x02')) {\n                uStack128 = 0;\n                iVar11 = iStack88;\n                uVar3 = uStack128;\n                if (arg2 < arg2 + arg4_00) {\n                    uStack128._4_4_ = 0;\n                    piVar13 = arg2;\n                    do {\n                        iVar5 = *piVar13;\n                        iVar4 = fcn.1400284c0();\n                        if (iVar4 != iVar5) {\ncode_r0x000140027627:\n                            uVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                            uStack128 = uStack128 & 0xffffffff00000000 | uVar7;\n                            iVar11 = iStack88;\n                            uVar3 = uStack128;\n                            break;\n                        }\n                        uStack128 = uStack128 & 0xffffffff | uStack128._4_4_ + 2 << 0x20;\n                        uVar7 = uStack128._4_4_ + 2;\n                        if (iVar5 == 10) {\n                            iVar5 = fcn.1400284c0(0xd);\n                            if (iVar5 != 0xd) goto code_r0x000140027627;\n                            uStack128 = uStack128 & 0xffffffff | uStack128._4_4_ + 3 << 0x20;\n                            iVar10 = iVar10 + 1;\n                            uVar7 = uStack128._4_4_ + 3;\n                        }\n                        uStack128._4_4_ = uVar7;\n                        piVar13 = piVar13 + 1;\n                        iVar11 = iStack88;\n                        uVar3 = uStack128;\n                    } while (piVar13 < arg2 + arg4_00);\n                }\n            }\n            goto code_r0x000140027704;\n        }\n        puVar9 = fcn.140026b58(&uStack128, uVar12 & 0xffffffff, arg2, arg4_00);\n    }\n    iVar10 = *(puVar9 + 1);\n    uVar3 = *puVar9;\ncode_r0x000140027704:\n    uStack112 = uVar3;\n    iVar6 = uStack112 >> 0x20;\n    if (iVar6 != 0) {\n        return iVar6 - iVar10;\n    }\n    if (uStack112 != 0) {\n        if (uStack112 == 5) {\n            *(arg4 + 0x30) = 1;\n            *(arg4 + 0x2c) = 9;\n            *(arg4 + 0x38) = 1;\n            *(arg4 + 0x34) = 5;\n            return -1;\n        }\n        fcn.140013894(uStack112 & 0xffffffff, arg4);\n        return -1;\n    }\n    if (((*(*(iVar11 * 8 + 0x140040110) + 0x38 + uVar8 * 0x48) & 0x40) != 0) && (*arg2 == '\\x1a')) {\n        return 0;\n    }\n    *(arg4 + 0x34) = 0;\n    *(arg4 + 0x30) = 1;\n    *(arg4 + 0x2c) = 0x1c;\n    *(arg4 + 0x38) = 1;\n    return -1;\n}\n",
        "token_count": 1960
    },
    "140027f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.140027f48(uint64_t arg1, uint8_t *arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint8_t uVar6;\n    uint64_t uVar7;\n    uint32_t *arg1_00;\n    uint32_t *puVar8;\n    uint64_t uVar9;\n    ulong in_stack_00000028;\n    uchar auStack120 [24];\n    uint32_t auStack96 [6];\n    uint64_t uStack72;\n    \n    uStack72 = *0x14003e020 ^ auStack120;\n    arg1_00 = 0x140040840;\n    if (arg4 != NULL) {\n        arg1_00 = arg4;\n    }\n    puVar5 = 0x140038394;\n    if (arg2 != NULL) {\n        puVar5 = arg2;\n    }\n    uVar9 = 1;\n    if (arg2 != NULL) {\n        uVar9 = arg3;\n    }\n    puVar8 = -(arg2 != NULL) & arg1;\n    if (uVar9 == 0) goto code_r0x000140028105;\n    if (*(arg1_00 + 6) == 0) {\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n        if (-1 < uVar3) {\n            if (puVar8 != NULL) {\n                *puVar8 = uVar3;\n            }\n            goto code_r0x000140028105;\n        }\n        if ((uVar3 & 0xe0) == 0xc0) {\n            uVar6 = 2;\n        }\n        else if ((uVar3 & 0xf0) == 0xe0) {\n            uVar6 = 3;\n        }\n        else {\n            if ((uVar3 & 0xf8) != 0xf0) goto code_r0x0001400280fa;\n            uVar6 = 4;\n        }\n        uVar2 = (1 << (7 - uVar6 & 0x1f)) - 1U & uVar3;\n        uVar3 = uVar6;\ncode_r0x000140028050:\n        uVar4 = uVar3;\n        uVar7 = uVar3;\n        if (uVar9 <= uVar4) {\n            uVar7 = uVar9;\n        }\n        while (puVar5 - arg2 < uVar7) {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            if ((uVar1 & 0xc0) != 0x80) goto code_r0x0001400280fa;\n            uVar2 = uVar1 & 0x3f | uVar2 << 6;\n        }\n        if (uVar7 < uVar4) {\n            *(arg1_00 + 1) = uVar6;\n            *(arg1_00 + 6) = uVar3 - uVar7;\n            *arg1_00 = uVar2;\n            goto code_r0x000140028105;\n        }\n        if ((0x7ff < uVar2 - 0xd800) && (uVar2 < 0x110000)) {\n            auStack96[2] = 0x80;\n            auStack96[3] = 0x800;\n            auStack96[4] = 0x10000;\n            if (auStack96[uVar6] <= uVar2) {\n                if (puVar8 != NULL) {\n                    *puVar8 = uVar2;\n                }\n                fcn.140027f2c(-(uVar2 != 0) & uVar4, arg1_00);\n                goto code_r0x000140028105;\n            }\n        }\n    }\n    else {\n        uVar6 = *(arg1_00 + 1);\n        uVar2 = *arg1_00;\n        uVar3 = *(arg1_00 + 6);\n        if (((uVar6 - 2 < 3) && (uVar3 != 0)) && (uVar3 < uVar6)) goto code_r0x000140028050;\n    }\ncode_r0x0001400280fa:\n    fcn.140027f34(arg1_00, in_stack_00000028);\ncode_r0x000140028105:\n    fcn.140009d20(uStack72 ^ auStack120);\n    return;\n}\n",
        "token_count": 1029
    },
    "14002839": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x000140024de0)\n// WARNING: Removing unreachable block (ram,0x000140024de8)\n// WARNING: Removing unreachable block (ram,0x000140024df0)\n\nint64_t fcn.140028394(uint8_t *arg1, ulong arg2, ulong *arg3, int64_t arg4)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    uint32_t uVar5;\n    ulong *arg2_00;\n    uint8_t uVar7;\n    ulong auStackX24 [2];\n    uint64_t uVar6;\n    \n    arg2_00 = 0x140040848;\n    if (arg3 != NULL) {\n        arg2_00 = arg3;\n    }\n    uVar2 = arg2 + 0x2400;\n    if (*arg2_00 == 0) {\n        if (0x3ff < uVar2) {\n            if (arg2 + 0x2800U < 0x400) {\n                *arg2_00 = (arg2 & 0x27ff) * 0x400 + 0x10000;\n                return 0;\n            }\n            uVar5 = arg2 & 0xffff;\n            uVar6 = uVar5;\n            if (arg1 != NULL) {\n                if (uVar5 != 0) {\n                    if ((arg2 & 0xff80) == 0) {\n                        *arg1 = uVar5;\n                        return 1;\n                    }\n                    if ((arg2 & 0xf800) == 0) {\n                        iVar4 = 1;\n                        uVar7 = 0xc0;\n                        iVar3 = iVar4;\n                    }\n                    else {\n                        if (uVar5 - 0xd800 < 0x800) {\n                            *arg2_00 = 0;\n                            *(arg4 + 0x30) = 1;\n                            *(arg4 + 0x2c) = 0x2a;\n                            return -1;\n                        }\n                        iVar4 = 2;\n                        uVar7 = 0xe0;\n                        iVar3 = iVar4;\n                    }\n                    do {\n                        uVar1 = uVar6;\n                        uVar6 = uVar6 >> 6;\n                        arg1[iVar4] = uVar1 & 0x3f | 0x80;\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                    *arg1 = uVar6 | uVar7;\n                    *arg2_00 = 0;\n                    return iVar3 + 1;\n                }\n                *arg1 = 0;\n            }\n            *arg2_00 = 0;\n            return 1;\n        }\n    }\n    else if (uVar2 < 0x400) {\n        auStackX24[0] = 0;\n        arg1_00 = fcn.140024d88(arg1, (arg2 & 0x23ff) + *arg2_00, auStackX24, arg4);\n        iVar3 = fcn.140027f2c(arg1_00, arg2_00);\n        return iVar3;\n    }\n    iVar3 = fcn.140027f34(arg2_00, arg4);\n    return iVar3;\n}\n",
        "token_count": 750
    },
    "14002856": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t fcn.140028568(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint64_t arg1_00;\n    uint32_t uVar3;\n    \n    uVar1 = fcn.140025180();\n    uVar3 = uVar1 >> 3 & 0x10;\n    uVar2 = uVar3 | 8;\n    if ((uVar1 & 0x200) == 0) {\n        uVar2 = uVar3;\n    }\n    uVar3 = uVar2 | 4;\n    if ((uVar1 >> 10 & 1) == 0) {\n        uVar3 = uVar2;\n    }\n    uVar2 = uVar3 | 2;\n    if ((uVar1 & 0x800) == 0) {\n        uVar2 = uVar3;\n    }\n    uVar3 = uVar2 | 1;\n    if ((uVar1 & 0x1000) == 0) {\n        uVar3 = uVar2;\n    }\n    uVar2 = uVar3 | 0x80000;\n    if ((uVar1 & 0x100) == 0) {\n        uVar2 = uVar3;\n    }\n    uVar3 = uVar1 & 0x6000;\n    if (uVar3 != 0) {\n        if (uVar3 == 0x2000) {\n            uVar2 = uVar2 | 0x100;\n        }\n        else if (uVar3 == 0x4000) {\n            uVar2 = uVar2 | 0x200;\n        }\n        else if (uVar3 == 0x6000) {\n            uVar2 = uVar2 | 0x300;\n        }\n    }\n    uVar1 = uVar1 & 0x8040;\n    if (uVar1 == 0x40) {\n        uVar2 = uVar2 | 0x2000000;\n    }\n    else if (uVar1 == 0x8000) {\n        uVar2 = uVar2 | 0x3000000;\n    }\n    else if (uVar1 == 0x8040) {\n        uVar2 = uVar2 | 0x1000000;\n    }\n    uVar1 = ~(arg2 & 0x308031f) & uVar2 | arg1 & arg2 & 0x308031f;\n    if (uVar1 != uVar2) {\n        uVar3 = (uVar1 & 0x10) << 3;\n        uVar2 = uVar3 | 0x200;\n        if ((uVar1 & 8) == 0) {\n            uVar2 = uVar3;\n        }\n        uVar3 = uVar2 | 0x400;\n        if ((uVar1 & 4) == 0) {\n            uVar3 = uVar2;\n        }\n        uVar2 = uVar3 | 0x800;\n        if ((uVar1 & 2) == 0) {\n            uVar2 = uVar3;\n        }\n        uVar3 = uVar2 | 0x1000;\n        if ((uVar1 & 1) == 0) {\n            uVar3 = uVar2;\n        }\n        uVar2 = uVar3 | 0x100;\n        if ((uVar1 >> 0x13 & 1) == 0) {\n            uVar2 = uVar3;\n        }\n        arg1_00 = uVar2;\n        uVar3 = uVar1 & 0x300;\n        if (uVar3 != 0) {\n            if (uVar3 == 0x100) {\n                arg1_00 = uVar2 | 0x2000;\n            }\n            else if (uVar3 == 0x200) {\n                arg1_00 = uVar2 | 0x4000;\n            }\n            else if (uVar3 == 0x300) {\n                arg1_00 = uVar2 | 0x6000;\n            }\n        }\n        uVar1 = uVar1 & 0x3000000;\n        uVar2 = arg1_00;\n        if (uVar1 == 0x1000000) {\n            arg1_00 = uVar2 | 0x8040;\n        }\n        else if (uVar1 == 0x2000000) {\n            arg1_00 = uVar2 | 0x40;\n        }\n        else if (uVar1 == 0x3000000) {\n            arg1_00 = uVar2 | 0x8000;\n        }\n        if ((*0x14003eba0 == '\\0') || ((arg1_00 & 0x40) == 0)) {\n            arg1_00 = arg1_00 & 0xffffffbf;\n            fcn.140025190(arg1_00);\n        }\n        else {\n            fcn.140025190(arg1_00);\n        }\n        uVar3 = arg1_00;\n        uVar1 = arg1_00 >> 3 & 0x10;\n        uVar2 = uVar1 | 8;\n        if ((arg1_00 & 0x200) == 0) {\n            uVar2 = uVar1;\n        }\n        uVar1 = uVar2 | 4;\n        if ((uVar3 >> 10 & 1) == 0) {\n            uVar1 = uVar2;\n        }\n        uVar2 = uVar1 | 2;\n        if ((uVar3 >> 0xb & 1) == 0) {\n            uVar2 = uVar1;\n        }\n        uVar1 = uVar2 | 1;\n        if ((uVar3 >> 0xc & 1) == 0) {\n            uVar1 = uVar2;\n        }\n        uVar2 = uVar1 | 0x80000;\n        if ((arg1_00 & 0x100) == 0) {\n            uVar2 = uVar1;\n        }\n        uVar1 = uVar3 & 0x6000;\n        if ((arg1_00 & 0x6000) != 0) {\n            if (uVar1 == 0x2000) {\n                uVar2 = uVar2 | 0x100;\n            }\n            else if (uVar1 == 0x4000) {\n                uVar2 = uVar2 | 0x200;\n            }\n            else if (uVar1 == 0x6000) {\n                uVar2 = uVar2 | 0x300;\n            }\n        }\n        uVar3 = uVar3 & 0x8040;\n        if (uVar3 == 0x40) {\n            uVar2 = uVar2 | 0x2000000;\n        }\n        else if (uVar3 == 0x8000) {\n            uVar2 = uVar2 | 0x3000000;\n        }\n        else if (uVar3 == 0x8040) {\n            uVar2 = uVar2 | 0x1000000;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1613
    },
    "140028e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuchar (*) [16] fcn.140028e40(uchar (*arg1) [16], ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uchar (*pauVar3) [16];\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    bool bVar8;\n    bool bVar9;\n    char cVar10;\n    char cVar12;\n    char cVar13;\n    char cVar14;\n    uchar auVar11 [16];\n    uchar in_XMM1 [16];\n    uchar auVar16 [16];\n    uint8_t uVar15;\n    \n    pauVar3 = NULL;\n    if (arg2 == 0) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        auVar11 = ZEXT416(CONCAT13(-(pcVar5[3] == '\\0'), \n                                   CONCAT12(-(pcVar5[2] == '\\0'), CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0')))))\n                  & 0xffffffffffffffff;\n        uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar5[0xf]);\n        auVar11 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar5[0xe]), \n                                              CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar5[0xd]), \n                                                        CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar5[0xc]), \n                                                                  CONCAT111(-(SUB161(auVar11 >> 0x58, 0) == pcVar5[0xb])\n                                                                            , CONCAT110(-(SUB161(auVar11 >> 0x50, 0) ==\n                                                                                         pcVar5[10]), \n                                                                                        CONCAT19(-(SUB161(auVar11 >>\n                                                                                                          0x48, 0) ==\n                                                                                                  pcVar5[9]), \n                                                                                                 CONCAT18(-(SUB161(\n                                                            auVar11 >> 0x40, 0) == pcVar5[8]), \n                                                            CONCAT17(-(pcVar5[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                                SUB164(auVar11, 0)))))))\n                                                            ))))));\n        uVar2 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf) & -1 << (arg1 & 0xf);\n        pcVar6 = pcVar5;\n        if (uVar2 == 0) {\n            do {\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar11 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                uVar1 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf;\n                uVar2 = uVar1;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar7 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n            }\n        }\n        pauVar3 = pcVar5 + uVar7;\n    }\n    else if (*0x14003e030 < 2) {\n        pcVar5 = arg1 & 0xfffffffffffffff0;\n        uVar15 = arg1 & 0xf;\n        auVar16 = pshuflw(in_XMM1, ZEXT416((arg2 & 0xff) << 8 | arg2 & 0xff), 0);\n        auVar11 = CONCAT115(-(pcVar5[0xf] == '\\0'), \n                            CONCAT114(-(pcVar5[0xe] == '\\0'), \n                                      CONCAT113(-(pcVar5[0xd] == '\\0'), \n                                                CONCAT112(-(pcVar5[0xc] == '\\0'), \n                                                          CONCAT111(-(pcVar5[0xb] == '\\0'), \n                                                                    CONCAT110(-(pcVar5[10] == '\\0'), \n                                                                              CONCAT19(-(pcVar5[9] == '\\0'), \n                                                                                       CONCAT18(-(pcVar5[8] == '\\0'), \n                                                                                                CONCAT17(-(pcVar5[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(pcVar5[6] == '\\0'), \n                                                                     CONCAT15(-(pcVar5[5] == '\\0'), \n                                                                              CONCAT14(-(pcVar5[4] == '\\0'), \n                                                                                       CONCAT13(-(pcVar5[3] == '\\0'), \n                                                                                                CONCAT12(-(pcVar5[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(pcVar5[1] == '\\0'), -(*pcVar5 == '\\0'))))))))))))\n                                                         ))));\n        cVar10 = SUB161(auVar16, 0);\n        cVar12 = SUB161(auVar16 >> 8, 0);\n        cVar13 = SUB161(auVar16 >> 0x10, 0);\n        cVar14 = SUB161(auVar16 >> 0x18, 0);\n        auVar16 = CONCAT115(-(cVar14 == pcVar5[0xf]), \n                            CONCAT114(-(cVar13 == pcVar5[0xe]), \n                                      CONCAT113(-(cVar12 == pcVar5[0xd]), \n                                                CONCAT112(-(cVar10 == pcVar5[0xc]), \n                                                          CONCAT111(-(cVar14 == pcVar5[0xb]), \n                                                                    CONCAT110(-(cVar13 == pcVar5[10]), \n                                                                              CONCAT19(-(cVar12 == pcVar5[9]), \n                                                                                       CONCAT18(-(cVar10 == pcVar5[8]), \n                                                                                                CONCAT17(-(cVar14 ==\n                                                                                                          pcVar5[7]), \n                                                                                                         CONCAT16(-(\n                                                            cVar13 == pcVar5[6]), \n                                                            CONCAT15(-(cVar12 == pcVar5[5]), \n                                                                     CONCAT14(-(cVar10 == pcVar5[4]), \n                                                                              CONCAT13(-(cVar14 == pcVar5[3]), \n                                                                                       CONCAT12(-(cVar13 == pcVar5[2]), \n                                                                                                CONCAT11(-(cVar12 ==\n                                                                                                          pcVar5[1]), \n                                                                                                         -(cVar10 ==\n                                                                                                          *pcVar5)))))))\n                                                            )))))))));\n        uVar2 = (SUB161(auVar16 >> 7, 0) & 1 | (SUB161(auVar16 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar16 >> 0x17, 0) & 1) << 2 | (SUB161(auVar16 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar16 >> 0x27, 0) & 1) << 4 | (SUB161(auVar16 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar16 >> 0x37, 0) & 1) << 6 | (SUB161(auVar16 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar16 >> 0x47, 0) & 1) << 8 | (SUB161(auVar16 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar16 >> 0x57, 0) & 1) << 10 | (SUB161(auVar16 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar16 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar16 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar16 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar5[0xf]) >> 7) << 0xf) & -1 << uVar15;\n        uVar7 = (SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                 (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                 (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                 (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                 (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                 (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                 (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                 (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(pcVar5[0xf] == '\\0') >> 7) << 0xf) & -1 << uVar15;\n        pcVar6 = pcVar5;\n        if (uVar7 == 0) {\n            do {\n                uVar7 = 0x1f;\n                if (uVar2 != 0) {\n                    for (; uVar2 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n                    }\n                }\n                if (uVar2 != 0) {\n                    pauVar3 = pcVar6 + uVar7;\n                }\n                pcVar5 = pcVar6 + 0x10;\n                auVar11 = ZEXT416(CONCAT13(-(pcVar6[0x13] == '\\0'), \n                                           CONCAT12(-(pcVar6[0x12] == '\\0'), \n                                                    CONCAT11(-(pcVar6[0x11] == '\\0'), -(*pcVar5 == '\\0'))))) &\n                          0xffffffffffffffff;\n                uVar15 = -(SUB161(auVar11 >> 0x78, 0) == pcVar6[0x1f]);\n                auVar16 = CONCAT115(uVar15, CONCAT114(-(SUB161(auVar11 >> 0x70, 0) == pcVar6[0x1e]), \n                                                      CONCAT113(-(SUB161(auVar11 >> 0x68, 0) == pcVar6[0x1d]), \n                                                                CONCAT112(-(SUB161(auVar11 >> 0x60, 0) == pcVar6[0x1c])\n                                                                          , CONCAT111(-(SUB161(auVar11 >> 0x58, 0) ==\n                                                                                       pcVar6[0x1b]), \n                                                                                      CONCAT110(-(SUB161(auVar11 >> 0x50\n                                                                                                         , 0) ==\n                                                                                                 pcVar6[0x1a]), \n                                                                                                CONCAT19(-(SUB161(\n                                                            auVar11 >> 0x48, 0) == pcVar6[0x19]), \n                                                            CONCAT18(-(SUB161(auVar11 >> 0x40, 0) == pcVar6[0x18]), \n                                                                     CONCAT17(-(pcVar6[0x17] == '\\0'), \n                                                                              CONCAT16(-(pcVar6[0x16] == '\\0'), \n                                                                                       CONCAT15(-(pcVar6[0x15] == '\\0')\n                                                                                                , CONCAT14(-(pcVar6[0x14\n                                                            ] == '\\0'), SUB164(auVar11, 0)))))))))))));\n                auVar11 = CONCAT115(-(cVar14 == pcVar6[0x1f]), \n                                    CONCAT114(-(cVar13 == pcVar6[0x1e]), \n                                              CONCAT113(-(cVar12 == pcVar6[0x1d]), \n                                                        CONCAT112(-(cVar10 == pcVar6[0x1c]), \n                                                                  CONCAT111(-(cVar14 == pcVar6[0x1b]), \n                                                                            CONCAT110(-(cVar13 == pcVar6[0x1a]), \n                                                                                      CONCAT19(-(cVar12 == pcVar6[0x19])\n                                                                                               , CONCAT18(-(cVar10 ==\n                                                                                                           pcVar6[0x18])\n                                                                                                          , CONCAT17(-(\n                                                            cVar14 == pcVar6[0x17]), \n                                                            CONCAT16(-(cVar13 == pcVar6[0x16]), \n                                                                     CONCAT15(-(cVar12 == pcVar6[0x15]), \n                                                                              CONCAT14(-(cVar10 == pcVar6[0x14]), \n                                                                                       CONCAT13(-(cVar14 == pcVar6[0x13]\n                                                                                                 ), CONCAT12(-(cVar13 ==\n                                                                                                              pcVar6[\n                                                            0x12]), CONCAT11(-(cVar12 == pcVar6[0x11]), \n                                                                             -(cVar10 == *pcVar5))))))))))))))));\n                uVar1 = SUB161(auVar16 >> 7, 0) & 1 | (SUB161(auVar16 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar16 >> 0x17, 0) & 1) << 2 | (SUB161(auVar16 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar16 >> 0x27, 0) & 1) << 4 | (SUB161(auVar16 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar16 >> 0x37, 0) & 1) << 6 | (SUB161(auVar16 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar16 >> 0x47, 0) & 1) << 8 | (SUB161(auVar16 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar16 >> 0x57, 0) & 1) << 10 | (SUB161(auVar16 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar16 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar16 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar16 >> 0x77, 0) & 1) << 0xe | (uVar15 >> 7) << 0xf;\n                uVar7 = uVar1;\n                uVar2 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (-(cVar14 == pcVar6[0x1f]) >> 7) << 0xf;\n                pcVar6 = pcVar5;\n            } while (uVar1 == 0);\n        }\n        uVar2 = uVar2 & (-uVar7 & uVar7) - 1;\n        uVar7 = 0x1f;\n        if (uVar2 != 0) {\n            for (; uVar2 >> uVar7 == 0; uVar7 = uVar7 - 1) {\n            }\n        }\n        if (uVar2 != 0) {\n            pauVar3 = pcVar5 + uVar7;\n        }\n    }\n    else {\n        while( true ) {\n            bVar8 = false;\n            bVar9 = (arg1 & 0xf) == 0;\n            if (bVar9) break;\n            if ((*arg1)[0] == arg2) {\n                pauVar3 = arg1;\n            }\n            if ((*arg1)[0] == '\\0') {\n                return pauVar3;\n            }\n            arg1 = *arg1 + 1;\n        }\n        while( true ) {\n            iVar4 = pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            if (bVar8) {\n                pauVar3 = *arg1 + iVar4;\n                bVar9 = pauVar3 == NULL;\n                pcmpistri(ZEXT416(arg2 & 0xff), *arg1, 0x40);\n            }\n            if (bVar9) break;\n            bVar8 = 0xffffffffffffffef < arg1;\n            arg1 = arg1[1];\n            bVar9 = arg1 == NULL;\n        }\n    }\n    return pauVar3;\n}\n",
        "token_count": 5367
    },
    "14000cb9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuchar fcn.14000cb90(void)\n\n{\n    if (*0x14003e050 != 0xffffffff) {\n        fcn.14000feb4(*0x14003e050);\n        *0x14003e050 = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 64
    },
    "14001225": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.140012250(int64_t arg1)\n\n{\n    int32_t iVar1;\n    char **ppcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *arg1_00;\n    \n    ppcVar2 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = ppcVar2 + 1;\n    arg1_00 = *ppcVar2;\n    iVar3 = *(arg1 + 0x30);\n    iVar1 = *(arg1 + 0x34);\n    if (iVar3 == -1) {\n        iVar3 = 0x7fffffff;\n    }\n    *(arg1 + 0x40) = arg1_00;\n    if ((iVar1 == 2) ||\n       (((iVar1 != 3 && (iVar1 != 0xc)) && ((*(arg1 + 0x34) == 0xd || ((*(arg1 + 0x39) + 0x9dU & 0xef) == 0)))))) {\n        if (arg1_00 == NULL) {\n            arg1_00 = \"(null)\";\n            *(arg1 + 0x40) = \"(null)\";\n        }\n        uVar4 = fcn.140016740(arg1_00, iVar3);\n    }\n    else {\n        if (arg1_00 == NULL) {\n            arg1_00 = 0x14002c940;\n            *(arg1 + 0x40) = 0x14002c940;\n        }\n        *(arg1 + 0x4c) = 1;\n        uVar4 = fcn.140016890(arg1_00, iVar3);\n    }\n    *(arg1 + 0x48) = uVar4;\n    return 1;\n}\n",
        "token_count": 395
    },
    "14001968": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.14001968c(int64_t arg1, uint16_t **arg2, ulong arg3)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint16_t **ppuVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint16_t uVar11;\n    uint32_t uVar12;\n    uint32_t in_R9D;\n    uint64_t uVar13;\n    int32_t iStack168;\n    \n    puVar2 = *arg2;\n    uVar13 = arg3;\n    if (puVar2 == NULL) {\n        puVar7 = fcn.1400138d8();\n        *puVar7 = 0x16;\n        fcn.1400104f4();\ncode_r0x000140019708:\n        if (arg2[1] != NULL) {\n            *arg2[1] = *arg2;\n        }\n        return 0;\n    }\n    if ((arg3 != 0) && (0x22 < arg3 - 2)) {\n        *(arg1 + 0x30) = 1;\n        *(arg1 + 0x2c) = 0x16;\n        fcn.140010428(0, 0, 0, 0);\n        goto code_r0x000140019708;\n    }\n    uVar11 = *puVar2;\n    *arg2 = puVar2 + 1;\n    if (*(arg1 + 0x28) == '\\0') {\n        fcn.1400122f0(arg1);\n    }\n    while (iVar5 = fcn.14001e5a0(uVar11, 8),  iVar5 != 0) {\n        uVar11 = **arg2;\n        *arg2 = *arg2 + 1;\n    }\n    uVar12 = in_R9D & 0xff | 2;\n    if (uVar11 != 0x2d) {\n        uVar12 = in_R9D & 0xff;\n    }\n    if ((uVar11 - 0x2b & 0xfffd) == 0) {\n        uVar11 = **arg2;\n        *arg2 = *arg2 + 1;\n    }\n    iStack168 = 0xae6;\n    uVar8 = uVar13;\n    if ((arg3 & 0xffffffef) != 0) goto code_r0x000140019ac4;\n    if (uVar11 < 0x30) goto code_r0x000140019a49;\n    iVar5 = 0x30;\n    if (uVar11 < 0x3a) {\ncode_r0x00014001988e:\n        iVar5 = uVar11 - iVar5;\ncode_r0x000140019a44:\n        if (iVar5 == -1) goto code_r0x000140019a49;\ncode_r0x000140019a6f:\n        if (iVar5 != 0) goto code_r0x000140019b1e;\n        puVar3 = *arg2;\n        uVar1 = *puVar3;\n        *arg2 = puVar3 + 1;\n        if ((uVar1 - 0x58 & 0xffdf) != 0) {\n            *arg2 = puVar3;\n            uVar8 = 8;\n            if (arg3 != 0) {\n                uVar8 = uVar13;\n            }\n            if ((uVar1 != 0) && (*puVar3 != uVar1)) {\n                puVar7 = fcn.1400138d8();\n                *puVar7 = 0x16;\n                fcn.1400104f4();\n            }\n            goto code_r0x000140019ac4;\n        }\n        uVar11 = puVar3[1];\n        *arg2 = puVar3 + 2;\n        uVar8 = 0x10;\n    }\n    else {\n        if (uVar11 < 0xff10) {\n            if (0x65f < uVar11) {\n                if (uVar11 < 0x66a) {\n                    iVar5 = uVar11 - 0x660;\n                    goto code_r0x000140019a44;\n                }\n                if (0x6ef < uVar11) {\n                    if (uVar11 < 0x6fa) {\n                        iVar5 = uVar11 - 0x6f0;\n                        goto code_r0x000140019a44;\n                    }\n                    if (0x965 < uVar11) {\n                        if (uVar11 < 0x970) {\n                            iVar5 = uVar11 - 0x966;\n                            goto code_r0x000140019a44;\n                        }\n                        if (0x9e5 < uVar11) {\n                            if (uVar11 < 0x9f0) {\n                                iVar5 = uVar11 - 0x9e6;\n                                goto code_r0x000140019a44;\n                            }\n                            if (0xa65 < uVar11) {\n                                if (uVar11 < 0xa70) {\n                                    iVar5 = uVar11 - 0xa66;\n                                    goto code_r0x000140019a44;\n                                }\n                                if ((0xae5 < uVar11) &&\n                                   ((iVar5 = iStack168,  uVar11 < 0xaf0 ||\n                                    ((iVar5 = 0xb66,  0xb65 < uVar11 &&\n                                     ((uVar11 < 0xb70 ||\n                                      ((iVar5 = 0xc66,  0xc65 < uVar11 &&\n                                       ((uVar11 < 0xc70 ||\n                                        ((iVar5 = 0xce6,  0xce5 < uVar11 &&\n                                         ((uVar11 < 0xcf0 ||\n                                          ((iVar5 = 0xd66,  0xd65 < uVar11 &&\n                                           ((uVar11 < 0xd70 ||\n                                            ((iVar5 = 0xe50,  0xe4f < uVar11 &&\n                                             ((uVar11 < 0xe5a ||\n                                              ((iVar5 = 0xed0,  0xecf < uVar11 &&\n                                               ((uVar11 < 0xeda ||\n                                                ((iVar5 = 0xf20,  0xf1f < uVar11 &&\n                                                 ((uVar11 < 0xf2a ||\n                                                  ((iVar5 = 0x1040,  0x103f < uVar11 &&\n                                                   ((uVar11 < 0x104a ||\n                                                    ((iVar5 = 0x17e0,  0x17df < uVar11 &&\n                                                     ((uVar11 < 0x17ea || (iVar5 = 0x1810,  uVar11 + 0xe7f0 < 10))))))))\n                                                  )))))))))))))))))))))))))))))))) goto code_r0x00014001988e;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else if (uVar11 < 0xff1a) {\n            iVar5 = uVar11 - 0xff10;\n            goto code_r0x000140019a44;\n        }\ncode_r0x000140019a49:\n        uVar9 = uVar11;\n        if ((uVar11 - 0x41 < 0x1a) || (uVar11 - 0x61 < 0x1a)) {\n            if (uVar11 - 0x61 < 0x1a) {\n                uVar9 = uVar11 - 0x20;\n            }\n            iVar5 = uVar9 - 0x37;\n            goto code_r0x000140019a6f;\n        }\ncode_r0x000140019b1e:\n        uVar8 = 10;\n    }\n    if (arg3 != 0) {\n        uVar8 = uVar13;\n    }\ncode_r0x000140019ac4:\n    uVar9 = 0;\n    do {\n        if (uVar11 < 0x30) goto code_r0x000140019cb3;\n        if (uVar11 < 0x3a) {\n            uVar10 = uVar11 - 0x30;\ncode_r0x000140019cae:\n            if (uVar10 == 0xffffffff) goto code_r0x000140019cb3;\n        }\n        else {\n            if (uVar11 < 0xff10) {\n                if (0x65f < uVar11) {\n                    if (uVar11 < 0x66a) {\n                        uVar10 = uVar11 - 0x660;\n                        goto code_r0x000140019cae;\n                    }\n                    if (0x6ef < uVar11) {\n                        iVar5 = 0x6f0;\n                        if (uVar11 < 0x6fa) {\ncode_r0x000140019b62:\n                            uVar10 = uVar11 - iVar5;\n                            goto code_r0x000140019cae;\n                        }\n                        if (0x965 < uVar11) {\n                            iVar5 = 0x966;\n                            if (uVar11 < 0x970) goto code_r0x000140019b62;\n                            if (0x9e5 < uVar11) {\n                                iVar5 = 0x9e6;\n                                if (uVar11 < 0x9f0) goto code_r0x000140019b62;\n                                if (0xa65 < uVar11) {\n                                    iVar5 = 0xa66;\n                                    if (uVar11 < 0xa70) goto code_r0x000140019b62;\n                                    if (0xae5 < uVar11) {\n                                        iVar5 = iStack168;\n                                        if (uVar11 < 0xaf0) goto code_r0x000140019b62;\n                                        iVar5 = 0xb66;\n                                        if (0xb65 < uVar11) {\n                                            if (uVar11 < 0xb70) goto code_r0x000140019b62;\n                                            iVar5 = 0xc66;\n                                            if (0xc65 < uVar11) {\n                                                if (uVar11 < 0xc70) goto code_r0x000140019b62;\n                                                iVar5 = 0xce6;\n                                                if (0xce5 < uVar11) {\n                                                    if (uVar11 < 0xcf0) goto code_r0x000140019b62;\n                                                    iVar5 = 0xd66;\n                                                    if (0xd65 < uVar11) {\n                                                        if (uVar11 < 0xd70) goto code_r0x000140019b62;\n                                                        iVar5 = 0xe50;\n                                                        if (0xe4f < uVar11) {\n                                                            if (uVar11 < 0xe5a) goto code_r0x000140019b62;\n                                                            iVar5 = 0xed0;\n                                                            if (0xecf < uVar11) {\n                                                                if (uVar11 < 0xeda) goto code_r0x000140019b62;\n                                                                iVar5 = 0xf20;\n                                                                if (0xf1f < uVar11) {\n                                                                    if (uVar11 < 0xf2a) goto code_r0x000140019b62;\n                                                                    iVar5 = 0x1040;\n                                                                    if (0x103f < uVar11) {\n                                                                        if (uVar11 < 0x104a) goto code_r0x000140019b62;\n                                                                        iVar5 = 0x17e0;\n                                                                        if (0x17df < uVar11) {\n                                                                            if (uVar11 < 0x17ea)\n                                                                            goto code_r0x000140019b62;\n                                                                            if (uVar11 + 0xe7f0 < 10) {\n                                                                                uVar10 = uVar11 - 0x1810;\n                                                                                goto code_r0x000140019cae;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else if (uVar11 < 0xff1a) {\n                uVar10 = uVar11 - 0xff10;\n                goto code_r0x000140019cae;\n            }\ncode_r0x000140019cb3:\n            uVar10 = uVar11;\n            if (((uVar11 < 0x41) || (0x5a < uVar11)) && ((uVar11 < 0x61 || (0x7a < uVar11)))) {\n                uVar10 = 0xffffffff;\n            }\n            else {\n                if (uVar11 - 0x61 < 0x1a) {\n                    uVar10 = uVar11 - 0x20;\n                }\n                uVar10 = uVar10 - 0x37;\n            }\n        }\n        puVar3 = *arg2;\n        if (uVar8 <= uVar10) break;\n        uVar11 = *puVar3;\n        uVar6 = uVar9 * uVar8;\n        uVar10 = uVar6 + uVar10;\n        *arg2 = puVar3 + 1;\n        uVar12 = uVar12 | (uVar10 < uVar6 || 0xffffffff / uVar8 < uVar9) << 2 | 8;\n        uVar9 = uVar10;\n    } while( true );\n    *arg2 = puVar3 + -1;\n    if ((uVar11 != 0) && (puVar3[-1] != uVar11)) {\n        puVar7 = fcn.1400138d8();\n        *puVar7 = 0x16;\n        fcn.1400104f4();\n    }\n    if ((uVar12 & 8) == 0) {\n        *arg2 = puVar2;\n        if (arg2[1] == NULL) {\n            return 0;\n        }\n        *arg2[1] = puVar2;\n        return 0;\n    }\n    if ((uVar12 & 4) == 0) {\n        if ((uVar12 & 1) == 0) {\n            if ((uVar12 & 2) == 0) goto code_r0x000140019df9;\ncode_r0x000140019df6:\n            uVar9 = -uVar9;\n            goto code_r0x000140019df9;\n        }\n        if ((uVar12 & 2) == 0) {\n            if (uVar9 < 0x80000000) goto code_r0x000140019df9;\n        }\n        else if (uVar9 < 0x80000001) goto code_r0x000140019df6;\n        uVar10 = 1;\n        uVar9 = uVar12;\n    }\n    else {\n        uVar9 = 1;\n        uVar10 = uVar12;\n    }\n    *(arg1 + 0x30) = 1;\n    *(arg1 + 0x2c) = 0x22;\n    if ((uVar9 & uVar10) != 0) {\n        ppuVar4 = arg2[1];\n        if ((uVar12 & 2) == 0) {\n            if (ppuVar4 != NULL) {\n                *ppuVar4 = *arg2;\n            }\n            return 0x7fffffff;\n        }\n        if (ppuVar4 != NULL) {\n            *ppuVar4 = *arg2;\n        }\n        return 0x80000000;\n    }\n    uVar9 = 0xffffffff;\ncode_r0x000140019df9:\n    if (arg2[1] != NULL) {\n        *arg2[1] = *arg2;\n        return uVar9;\n    }\n    return uVar9;\n}\n",
        "token_count": 3525
    },
    "14001a3e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14001a3e8(ulong noname_0, ulong lpFlsData)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*0x14003e130 == -1) || (iVar3 = sub.KERNEL32.dll_FlsGetValue(),  iVar3 == 0)) {\n        iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.14001c86c(1, 0x3c8);\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0);\n                iVar3 = 0;\n            }\n            else {\n                iVar2 = sub.KERNEL32.dll_FlsSetValue(*0x14003e130, iVar3);\n                if (iVar2 != 0) {\n                    fcn.14001a0c4(iVar3);\n                    fcn.14001a674(0);\n                    return iVar3;\n                }\n                sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0);\n            }\n            fcn.14001a674(iVar3);\n        }\n    }\n    else if (iVar3 != -1) {\n        return iVar3;\n    }\n    fcn.140016438();\n    pcVar1 = swi(3);\n    iVar3 = (*pcVar1)();\n    return iVar3;\n}\n",
        "token_count": 337
    },
    "14001a55": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.14001a554(ulong noname_0, int64_t lpFlsData)\n\n{\n    int32_t iVar1;\n    int64_t arg1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if ((*0x14003e130 == -1) || (arg1 = sub.KERNEL32.dll_FlsGetValue(),  arg1 == 0)) {\n        iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0xffffffffffffffff);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        arg1 = fcn.14001c86c(1, 0x3c8);\n        if (arg1 == 0) {\n            sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0);\n            arg1 = 0;\n        }\n        else {\n            iVar1 = sub.KERNEL32.dll_FlsSetValue(*0x14003e130, arg1);\n            if (iVar1 != 0) {\n                fcn.14001a0c4(arg1);\n                fcn.14001a674(0);\n                goto code_r0x00014001a5f5;\n            }\n            sub.KERNEL32.dll_FlsSetValue(*0x14003e130, 0);\n        }\n        fcn.14001a674(arg1);\n    }\n    else {\n        if (arg1 == -1) {\n            return 0;\n        }\ncode_r0x00014001a5f5:\n        iVar2 = lpFlsData * 0x3c8 + arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 364
    },
    "14000320": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nint64_t ** fcn.140003200(int64_t **arg1, ulong arg2, int64_t *arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    \n    piVar1 = arg1[3];\n    if (arg3 <= piVar1) {\n        ppiVar4 = arg1;\n        if (0xf < piVar1) {\n            ppiVar4 = *arg1;\n        }\n        arg1[2] = arg3;\n        fcn.14000bbe0(ppiVar4, arg2, arg3);\n        *(ppiVar4 + arg3) = 0;\n        return arg1;\n    }\n    piVar7 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff < arg3) {\n        fcn.140001210();\n        pcVar2 = swi(3);\n        ppiVar4 = (*pcVar2)();\n        return ppiVar4;\n    }\n    piVar5 = arg3 | 0xf;\n    if ((piVar5 < 0x8000000000000000) && (piVar1 <= 0x7fffffffffffffff - (piVar1 >> 1))) {\n        piVar6 = (piVar1 >> 1) + piVar1;\n        piVar7 = piVar5;\n        if (piVar5 < piVar6) {\n            piVar7 = piVar6;\n        }\n        piVar6 = piVar7 + 1;\n        if (0xfff < piVar6) {\n            piVar5 = piVar7 + 5;\n            if (piVar5 <= piVar6) {\n                fcn.140001170();\n                pcVar2 = swi(3);\n                ppiVar4 = (*pcVar2)();\n                return ppiVar4;\n            }\n            goto code_r0x0001400032b1;\n        }\n        if (piVar6 == NULL) {\n            piVar5 = NULL;\n        }\n        else {\n            piVar5 = fcn.140009d74(piVar6);\n        }\n    }\n    else {\n        piVar5 = 0x8000000000000027;\ncode_r0x0001400032b1:\n        iVar3 = fcn.140009d74(piVar5);\n        if (iVar3 == 0) goto code_r0x00014000335a;\n        piVar5 = iVar3 + 0x27U & 0xffffffffffffffe0;\n        piVar5[-1] = iVar3;\n    }\n    arg1[2] = arg3;\n    arg1[3] = piVar7;\n    fcn.14000bbe0(piVar5, arg2, arg3);\n    *(piVar5 + arg3) = 0;\n    if (0xf < piVar1) {\n        piVar7 = *arg1;\n        piVar6 = piVar7;\n        if ((0xfff < piVar1 + 1U) && (piVar6 = piVar7[-1],  0x1f < piVar7 + (-8 - piVar6))) {\ncode_r0x00014000335a:\n            fcn.140010514();\n            pcVar2 = swi(3);\n            ppiVar4 = (*pcVar2)();\n            return ppiVar4;\n        }\n        fcn.140009d40(piVar6);\n    }\n    *arg1 = piVar5;\n    return arg1;\n}\n",
        "token_count": 798
    },
    "1400073a": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.1400073a0(uint64_t *arg1, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t in_stack_00000028;\n    \n    uVar8 = arg1[2];\n    uVar7 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.140001210();\n        pcVar3 = swi(3);\n        puVar5 = (*pcVar3)();\n        return puVar5;\n    }\n    uVar6 = uVar8 + arg2 | 0xf;\n    uVar2 = arg1[3];\n    if ((uVar6 < 0x8000000000000000) && (uVar2 <= 0x7fffffffffffffff - (uVar2 >> 1))) {\n        uVar1 = (uVar2 >> 1) + uVar2;\n        uVar7 = uVar6;\n        if (uVar6 < uVar1) {\n            uVar7 = uVar1;\n        }\n        uVar1 = uVar7 + 1;\n        if (0xfff < uVar1) {\n            uVar6 = uVar7 + 0x28;\n            if (uVar6 <= uVar1) {\n                fcn.140001170();\n                pcVar3 = swi(3);\n                puVar5 = (*pcVar3)();\n                return puVar5;\n            }\n            goto code_r0x00014000743e;\n        }\n        if (uVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = fcn.140009d74(uVar1);\n        }\n    }\n    else {\n        uVar6 = 0x8000000000000027;\ncode_r0x00014000743e:\n        iVar4 = fcn.140009d74(uVar6);\n        if (iVar4 == 0) goto code_r0x000140007518;\n        uVar6 = iVar4 + 0x27U & 0xffffffffffffffe0;\n        *(uVar6 - 8) = iVar4;\n    }\n    arg1[2] = uVar8 + arg2;\n    iVar4 = uVar6 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar2 < 0x10) {\n        fcn.14000bbe0(uVar6, arg1, uVar8);\n        fcn.14000bbe0(iVar4, arg4, in_stack_00000028);\n        *(iVar4 + in_stack_00000028) = 0;\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.14000bbe0(uVar6, uVar7, uVar8);\n        fcn.14000bbe0(iVar4, arg4, in_stack_00000028);\n        *(iVar4 + in_stack_00000028) = 0;\n        uVar8 = uVar7;\n        if ((0xfff < uVar2 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x000140007518:\n            fcn.140010514();\n            pcVar3 = swi(3);\n            puVar5 = (*pcVar3)();\n            return puVar5;\n        }\n        fcn.140009d40(uVar8);\n    }\n    *arg1 = uVar6;\n    return arg1;\n}\n",
        "token_count": 853
    },
    "14000753": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.140007530(uint64_t *arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    int64_t arg1_00;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t in_stack_00000028;\n    char in_stack_00000030;\n    \n    uVar2 = arg1[2];\n    uVar8 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff - uVar2 < arg2) {\n        fcn.140001210();\n        pcVar4 = swi(3);\n        puVar6 = (*pcVar4)();\n        return puVar6;\n    }\n    uVar3 = arg1[3];\n    uVar7 = uVar2 + arg2 | 0xf;\n    if ((uVar7 < 0x8000000000000000) && (uVar3 <= 0x7fffffffffffffff - (uVar3 >> 1))) {\n        uVar1 = (uVar3 >> 1) + uVar3;\n        uVar8 = uVar7;\n        if (uVar7 < uVar1) {\n            uVar8 = uVar1;\n        }\n        uVar1 = uVar8 + 1;\n        if (0xfff < uVar1) {\n            uVar7 = uVar8 + 0x28;\n            if (uVar7 <= uVar1) {\n                fcn.140001170();\n                pcVar4 = swi(3);\n                puVar6 = (*pcVar4)();\n                return puVar6;\n            }\n            goto code_r0x0001400075cf;\n        }\n        if (uVar1 == 0) {\n            uVar7 = 0;\n        }\n        else {\n            uVar7 = fcn.140009d74(uVar1);\n        }\n    }\n    else {\n        uVar7 = 0x8000000000000027;\ncode_r0x0001400075cf:\n        iVar5 = fcn.140009d74(uVar7);\n        if (iVar5 == 0) goto code_r0x0001400076d3;\n        uVar7 = iVar5 + 0x27U & 0xffffffffffffffe0;\n        *(uVar7 - 8) = iVar5;\n    }\n    arg1[3] = uVar8;\n    arg1[2] = uVar2 + arg2;\n    arg1_00 = uVar7 + arg4;\n    iVar5 = (uVar2 - arg4) + 1;\n    if (uVar3 < 0x10) {\n        fcn.14000bbe0(uVar7, arg1, arg4);\n        fcn.14000c2b0(arg1_00, in_stack_00000030, in_stack_00000028);\n        fcn.14000bbe0(arg1_00 + in_stack_00000028, arg4 + arg1, iVar5);\n    }\n    else {\n        uVar2 = *arg1;\n        fcn.14000bbe0(uVar7, uVar2, arg4);\n        fcn.14000c2b0(arg1_00, in_stack_00000030, in_stack_00000028);\n        fcn.14000bbe0(arg1_00 + in_stack_00000028, uVar2 + arg4, iVar5);\n        uVar8 = uVar2;\n        if ((0xfff < uVar3 + 1) && (uVar8 = *(uVar2 - 8),  0x1f < (uVar2 - uVar8) - 8)) {\ncode_r0x0001400076d3:\n            fcn.140010514();\n            pcVar4 = swi(3);\n            puVar6 = (*pcVar4)();\n            return puVar6;\n        }\n        fcn.140009d40(uVar8);\n    }\n    *arg1 = uVar7;\n    return arg1;\n}\n",
        "token_count": 931
    },
    "1400076f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint64_t * fcn.1400076f0(uint64_t *arg1, uint64_t arg2, ulong noname_2, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    char in_stack_00000028;\n    \n    uVar8 = arg1[2];\n    uVar7 = 0x7fffffffffffffff;\n    if (0x7fffffffffffffff - uVar8 < arg2) {\n        fcn.140001210();\n        pcVar3 = swi(3);\n        puVar5 = (*pcVar3)();\n        return puVar5;\n    }\n    uVar2 = arg1[3];\n    uVar6 = uVar8 + arg2 | 0xf;\n    if ((uVar6 < 0x8000000000000000) && (uVar2 <= 0x7fffffffffffffff - (uVar2 >> 1))) {\n        uVar1 = (uVar2 >> 1) + uVar2;\n        uVar7 = uVar6;\n        if (uVar6 < uVar1) {\n            uVar7 = uVar1;\n        }\n        uVar1 = uVar7 + 1;\n        if (0xfff < uVar1) {\n            uVar6 = uVar7 + 0x28;\n            if (uVar6 <= uVar1) {\n                fcn.140001170();\n                pcVar3 = swi(3);\n                puVar5 = (*pcVar3)();\n                return puVar5;\n            }\n            goto code_r0x00014000778e;\n        }\n        if (uVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            uVar6 = fcn.140009d74(uVar1);\n        }\n    }\n    else {\n        uVar6 = 0x8000000000000027;\ncode_r0x00014000778e:\n        iVar4 = fcn.140009d74(uVar6);\n        if (iVar4 == 0) goto code_r0x000140007869;\n        uVar6 = iVar4 + 0x27U & 0xffffffffffffffe0;\n        *(uVar6 - 8) = iVar4;\n    }\n    arg1[2] = uVar8 + arg2;\n    iVar4 = uVar6 + uVar8;\n    arg1[3] = uVar7;\n    if (uVar2 < 0x10) {\n        fcn.14000bbe0(uVar6, arg1, uVar8);\n        fcn.14000c2b0(iVar4, in_stack_00000028, arg4);\n        *(iVar4 + arg4) = 0;\n    }\n    else {\n        uVar7 = *arg1;\n        fcn.14000bbe0(uVar6, uVar7, uVar8);\n        fcn.14000c2b0(iVar4, in_stack_00000028, arg4);\n        *(iVar4 + arg4) = 0;\n        uVar8 = uVar7;\n        if ((0xfff < uVar2 + 1) && (uVar8 = *(uVar7 - 8),  0x1f < (uVar7 - uVar8) - 8)) {\ncode_r0x000140007869:\n            fcn.140010514();\n            pcVar3 = swi(3);\n            puVar5 = (*pcVar3)();\n            return puVar5;\n        }\n        fcn.140009d40(uVar8);\n    }\n    *arg1 = uVar6;\n    return arg1;\n}\n",
        "token_count": 849
    },
    "1400110a": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.1400110a4(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    char *pcVar5;\n    \n    iVar4 = *(arg1 + 0x458);\n    if (iVar4 == 0) {\n        uVar2 = 0x200;\n        iVar4 = arg1 + 0x50;\n    }\n    else {\n        uVar2 = *(arg1 + 0x450) >> 1;\n    }\n    pcVar3 = iVar4 + -1 + uVar2;\n    *(arg1 + 0x40) = pcVar3;\n    pcVar5 = pcVar3;\n    while( true ) {\n        if ((*(arg1 + 0x30) < 1) && (arg2 == 0)) break;\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        uVar1 = arg2;\n        arg2._0_4_ = arg2 >> 3;\n        *pcVar5 = (uVar1 & 7) + 0x30;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        pcVar5 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x48) = pcVar3 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = pcVar5 + 1;\n    return;\n}\n",
        "token_count": 353
    },
    "14001111": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.140011114(int64_t arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint8_t in_R8B;\n    char *pcVar3;\n    char *pcVar4;\n    char cVar5;\n    \n    iVar2 = *(arg1 + 0x458);\n    if (iVar2 == 0) {\n        uVar1 = 0x200;\n        iVar2 = arg1 + 0x50;\n    }\n    else {\n        uVar1 = *(arg1 + 0x450) >> 1;\n    }\n    pcVar3 = iVar2 + -1 + uVar1;\n    *(arg1 + 0x40) = pcVar3;\n    pcVar4 = pcVar3;\n    uVar1 = arg2;\n    while ((0 < *(arg1 + 0x30) || (uVar1 != 0))) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        cVar5 = uVar1 + (uVar1 / 10) * -10 + '0';\n        if ('9' < cVar5) {\n            cVar5 = (in_R8B ^ 1) * ' ' + '\\a' + cVar5;\n        }\n        *pcVar4 = cVar5;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        pcVar4 = *(arg1 + 0x40);\n        uVar1 = uVar1 / 10;\n    }\n    *(arg1 + 0x48) = pcVar3 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = pcVar4 + 1;\n    return;\n}\n",
        "token_count": 400
    },
    "1400111c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.1400111c0(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    uint8_t in_R8B;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    \n    iVar5 = *(arg1 + 0x458);\n    if (iVar5 == 0) {\n        uVar2 = 0x200;\n        iVar5 = arg1 + 0x50;\n    }\n    else {\n        uVar2 = *(arg1 + 0x450) >> 1;\n    }\n    puVar3 = iVar5 + -1 + uVar2;\n    *(arg1 + 0x40) = puVar3;\n    puVar4 = puVar3;\n    while( true ) {\n        if ((*(arg1 + 0x30) < 1) && (arg2 == 0)) break;\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        uVar1 = arg2;\n        arg2._0_4_ = arg2 >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (in_R8B ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar4 = uVar1;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        puVar4 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x48) = puVar3 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 416
    },
    "14001124": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.140011244(int64_t arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    \n    iVar3 = *(arg1 + 0x458);\n    if (iVar3 == 0) {\n        uVar1 = 0x200;\n        iVar3 = arg1 + 0x50;\n    }\n    else {\n        uVar1 = *(arg1 + 0x450) >> 1;\n    }\n    pcVar2 = iVar3 + -1 + uVar1;\n    *(arg1 + 0x40) = pcVar2;\n    pcVar4 = pcVar2;\n    for (; (0 < *(arg1 + 0x30) || (arg2 != 0)); arg2 = arg2 >> 3) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        *pcVar4 = (arg2 & 7) + 0x30;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        pcVar4 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x48) = pcVar2 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = pcVar4 + 1;\n    return;\n}\n",
        "token_count": 322
    },
    "1400112b": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.1400112b4(int64_t arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint8_t in_R8B;\n    char *pcVar3;\n    char *pcVar4;\n    char cVar5;\n    \n    iVar2 = *(arg1 + 0x458);\n    if (iVar2 == 0) {\n        uVar1 = 0x200;\n        iVar2 = arg1 + 0x50;\n    }\n    else {\n        uVar1 = *(arg1 + 0x450) >> 1;\n    }\n    pcVar3 = iVar2 + -1 + uVar1;\n    *(arg1 + 0x40) = pcVar3;\n    pcVar4 = pcVar3;\n    while ((0 < *(arg1 + 0x30) || (arg2 != 0))) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        cVar5 = arg2 + (arg2 / 10) * -10 + '0';\n        if ('9' < cVar5) {\n            cVar5 = (in_R8B ^ 1) * ' ' + '\\a' + cVar5;\n        }\n        *pcVar4 = cVar5;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        pcVar4 = *(arg1 + 0x40);\n        arg2 = arg2 / 10;\n    }\n    *(arg1 + 0x48) = pcVar3 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = pcVar4 + 1;\n    return;\n}\n",
        "token_count": 391
    },
    "14001136": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.140011364(int64_t arg1, uint64_t arg2)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint8_t *puVar3;\n    uint8_t in_R8B;\n    uint8_t *puVar4;\n    int64_t iVar5;\n    \n    iVar5 = *(arg1 + 0x458);\n    if (iVar5 == 0) {\n        uVar2 = 0x200;\n        iVar5 = arg1 + 0x50;\n    }\n    else {\n        uVar2 = *(arg1 + 0x450) >> 1;\n    }\n    puVar3 = iVar5 + -1 + uVar2;\n    *(arg1 + 0x40) = puVar3;\n    puVar4 = puVar3;\n    while ((0 < *(arg1 + 0x30) || (arg2 != 0))) {\n        *(arg1 + 0x30) = *(arg1 + 0x30) + -1;\n        uVar1 = arg2;\n        arg2 = arg2 >> 4;\n        uVar1 = (uVar1 & 0xf) + 0x30;\n        if (0x39 < uVar1) {\n            uVar1 = (in_R8B ^ 1) * ' ' + '\\a' + uVar1;\n        }\n        *puVar4 = uVar1;\n        *(arg1 + 0x40) = *(arg1 + 0x40) + -1;\n        puVar4 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x48) = puVar3 - *(arg1 + 0x40);\n    *(arg1 + 0x40) = puVar4 + 1;\n    return;\n}\n",
        "token_count": 402
    },
    "140011df": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong fcn.140011df4(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t **ppuVar3;\n    uint16_t *puVar4;\n    uint64_t uVar5;\n    bool bVar6;\n    \n    ppuVar3 = *(arg1 + 0x18);\n    *(arg1 + 0x18) = ppuVar3 + 1;\n    puVar4 = *ppuVar3;\n    if ((puVar4 == NULL) || (*(puVar4 + 4) == 0)) {\n        uVar5 = 6;\n        *(arg1 + 0x40) = \"(null)\";\n    }\n    else {\n        iVar2 = *(arg1 + 0x34);\n        if (iVar2 == 2) {\ncode_r0x000140011e3e:\n            bVar6 = false;\n        }\n        else if ((iVar2 == 3) || (iVar2 == 0xc)) {\n            bVar6 = true;\n        }\n        else {\n            if (*(arg1 + 0x34) == 0xd) goto code_r0x000140011e3e;\n            bVar6 = (*(arg1 + 0x39) + 0x9dU & 0xef) != 0;\n        }\n        *(arg1 + 0x40) = *(puVar4 + 4);\n        uVar1 = *puVar4;\n        uVar5 = uVar1;\n        if (bVar6) {\n            *(arg1 + 0x4c) = 1;\n            uVar5 = uVar1 >> 1;\n            goto code_r0x000140011e6a;\n        }\n    }\n    *(arg1 + 0x4c) = 0;\ncode_r0x000140011e6a:\n    *(arg1 + 0x48) = uVar5;\n    return CONCAT71(uVar5 >> 8, 1);\n}\n",
        "token_count": 441
    },
    "140016d0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.140016d08(char *arg1, char **arg2, char *arg3, int64_t *arg4)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    char *pcVar6;\n    int64_t *in_stack_00000028;\n    \n    *in_stack_00000028 = 0;\n    *arg4 = 1;\n    if (arg2 != NULL) {\n        *arg2 = arg3;\n        arg2 = arg2 + 1;\n    }\n    bVar2 = false;\n    do {\n        if (*arg1 == '\\\"') {\n            bVar2 = !bVar2;\n            cVar5 = '\\\"';\n            pcVar6 = arg1 + 1;\n        }\n        else {\n            *in_stack_00000028 = *in_stack_00000028 + 1;\n            if (arg3 != NULL) {\n                *arg3 = *arg1;\n                arg3 = arg3 + 1;\n            }\n            cVar5 = *arg1;\n            pcVar6 = arg1 + 1;\n            iVar4 = fcn.1400206d0(cVar5);\n            if (iVar4 != 0) {\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n                if (arg3 != NULL) {\n                    *arg3 = *pcVar6;\n                    arg3 = arg3 + 1;\n                }\n                pcVar6 = arg1 + 2;\n            }\n            if (cVar5 == '\\0') {\n                pcVar6 = pcVar6 + -1;\n                goto code_r0x000140016dc0;\n            }\n        }\n        arg1 = pcVar6;\n    } while ((bVar2) || ((cVar5 != ' ' && (cVar5 != '\\t'))));\n    if (arg3 != NULL) {\n        arg3[-1] = '\\0';\n    }\ncode_r0x000140016dc0:\n    bVar2 = false;\n    while (cVar5 = *pcVar6,  cVar5 != '\\0') {\n        while ((cVar5 == ' ' || (cVar5 == '\\t'))) {\n            pcVar6 = pcVar6 + 1;\n            cVar5 = *pcVar6;\n        }\n        if (cVar5 == '\\0') break;\n        if (arg2 != NULL) {\n            *arg2 = arg3;\n            arg2 = arg2 + 1;\n        }\n        *arg4 = *arg4 + 1;\n        while( true ) {\n            bVar1 = true;\n            uVar3 = 0;\n            while( true ) {\n                if (*pcVar6 != '\\\\') break;\n                pcVar6 = pcVar6 + 1;\n                uVar3 = uVar3 + 1;\n            }\n            if (*pcVar6 == '\\\"') {\n                if ((uVar3 & 1) == 0) {\n                    if ((bVar2) && (pcVar6[1] == '\\\"')) {\n                        pcVar6 = pcVar6 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                        bVar2 = !bVar2;\n                    }\n                }\n                uVar3 = uVar3 >> 1;\n            }\n            while (uVar3 != 0) {\n                uVar3 = uVar3 - 1;\n                if (arg3 != NULL) {\n                    *arg3 = '\\\\';\n                    arg3 = arg3 + 1;\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n            }\n            cVar5 = *pcVar6;\n            if ((cVar5 == '\\0') || ((!bVar2 && ((cVar5 == ' ' || (cVar5 == '\\t')))))) break;\n            if (bVar1) {\n                if (arg3 != NULL) {\n                    *arg3 = cVar5;\n                    arg3 = arg3 + 1;\n                }\n                iVar4 = fcn.1400206d0(*pcVar6);\n                if (iVar4 != 0) {\n                    *in_stack_00000028 = *in_stack_00000028 + 1;\n                    pcVar6 = pcVar6 + 1;\n                    if (arg3 != NULL) {\n                        *arg3 = *pcVar6;\n                        arg3 = arg3 + 1;\n                    }\n                }\n                *in_stack_00000028 = *in_stack_00000028 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        if (arg3 != NULL) {\n            *arg3 = '\\0';\n            arg3 = arg3 + 1;\n        }\n        *in_stack_00000028 = *in_stack_00000028 + 1;\n    }\n    if (arg2 != NULL) {\n        *arg2 = NULL;\n    }\n    *arg4 = *arg4 + 1;\n    return;\n}\n",
        "token_count": 1103
    },
    "14001bea": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.14001bea4(ulong arg1, double *arg2, uint64_t arg3)\n\n{\n    double dVar1;\n    bool bVar2;\n    bool bVar3;\n    bool bVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    double dVar10;\n    double dVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint uVar14;\n    uint uVar15;\n    char cStackX8;\n    int32_t aiStack104 [2];\n    double dStack96;\n    \n    uVar7 = arg1 & 0x1f;\n    if (((arg1 & 8) != 0) && (arg3 < '\\0')) {\n        fcn.14001c838(1);\n        uVar7 = arg1 & 0x17;\n        goto code_r0x00014001c155;\n    }\n    if (((arg1 & 4) != 0) && ((arg3 >> 9 & 1) != 0)) {\n        fcn.14001c838(4);\n        uVar7 = arg1 & 0x1b;\n        goto code_r0x00014001c155;\n    }\n    if (((arg1 & 1) == 0) || ((arg3 >> 10 & 1) == 0)) {\n        if (((arg1 & 2) == 0) || ((arg3 >> 0xb & 1) == 0)) goto code_r0x00014001c155;\n        uVar14 = 0;\n        uVar15 = 0;\n        uVar7 = arg1 >> 4 & 1;\n        if (*arg2 == 0.0) {\ncode_r0x00014001c14a:\n            fcn.14001c838(0x10);\n        }\n        else {\n            dVar10 = fcn.14001c5f4(4, aiStack104);\n            aiStack104[0] = aiStack104[0] + -0x600;\n            if (aiStack104[0] < -0x432) {\n                dVar11 = dVar10 * CONCAT44(uVar15, uVar14);\n                uVar12 = SUB84(dVar11, 0);\n                uVar13 = dVar11 >> 0x20;\n                uVar7 = 1;\n                dStack96 = dVar10;\n            }\n            else {\n                bVar4 = false;\n                cStackX8 = '\\0';\n                dStack96 = dVar10 & 0xfffffffffffff | 0x10000000000000;\n                if (aiStack104[0] < -0x3fd) {\n                    dStack96._0_4_ = dVar10 & 0xfffffffffffff;\n                    uVar8 = -aiStack104[0] - 0x3fd;\n                    uVar6 = dStack96 >> 0x20;\n                    cStackX8 = '\\0';\n                    bVar4 = false;\n                    do {\n                        if (((dStack96._0_4_ & 1) != 0) && (uVar7 == 0)) {\n                            uVar7 = 1;\n                        }\n                        bVar9 = cStackX8 != '\\0';\n                        cStackX8 = dStack96._0_4_ & 1;\n                        if (bVar9) {\n                            bVar4 = true;\n                        }\n                        dStack96._0_4_ = dStack96._0_4_ >> 1;\n                        if ((uVar6 & 1) != 0) {\n                            dStack96._0_4_ = dStack96._0_4_ | 0x80000000;\n                        }\n                        uVar6 = uVar6 >> 1;\n                        uVar8 = uVar8 - 1;\n                    } while (uVar8 != 0);\n                    dStack96 = CONCAT44(uVar6, dStack96._0_4_);\n                }\n                uVar12 = SUB84(dStack96, 0);\n                uVar13 = dStack96 >> 0x20;\n                if (dVar10 <= CONCAT44(uVar15, uVar14) && CONCAT44(uVar15, uVar14) != dVar10) {\n                    uVar12 = uVar12 ^ *0x14002b6c0;\n                    uVar13 = uVar13 ^ *0x14002b6c4;\n                    dStack96 = CONCAT44(uVar13, uVar12);\n                }\n                bVar2 = CONCAT44(uVar15, uVar14) != dVar10;\n                bVar3 = dVar10 <= CONCAT44(uVar15, uVar14);\n                bVar9 = bVar3 && bVar2;\n                if ((cStackX8 != '\\0') || (bVar4)) {\n                    iVar5 = fcn.14001e60c();\n                    if (iVar5 == 0) {\n                        if (cStackX8 != '\\0') {\n                            if (!bVar4) {\n                                bVar9 = dStack96._0_1_ & 1;\n                                goto code_r0x00014001c12d;\n                            }\n                            goto code_r0x00014001c12f;\n                        }\n                    }\n                    else {\n                        if (iVar5 != 0x100) {\n                            if (iVar5 != 0x200) goto code_r0x00014001c140;\n                            bVar9 = !bVar3 || !bVar2;\n                        }\ncode_r0x00014001c12d:\n                        if (bVar9 != false) {\ncode_r0x00014001c12f:\n                            dStack96 = dStack96 + 1;\n                            uVar12 = SUB84(dStack96, 0);\n                            uVar13 = dStack96 >> 0x20;\n                        }\n                    }\n                }\n            }\ncode_r0x00014001c140:\n            *arg2 = CONCAT44(uVar13, uVar12);\n            if (uVar7 != 0) goto code_r0x00014001c14a;\n        }\n        uVar7 = arg1 & 0x1d;\n        goto code_r0x00014001c155;\n    }\n    fcn.14001c838(8);\n    uVar6 = arg3 & 0x6000;\n    dVar10 = *0x1400307e0;\n    dVar11 = *0x1400307e0;\n    if (uVar6 == 0) {\n        dVar1 = *arg2;\njoined_r0x00014001bf77:\n        if (dVar1 <= *0x14002c958) {\n            dVar10 = CONCAT44(dVar11 >> 0x20 ^ *0x14002b6c4, SUB84(dVar11, 0) ^ *0x14002b6c0);\n        }\n        *arg2 = dVar10;\n    }\n    else {\n        if (uVar6 == 0x2000) {\n            dVar1 = *arg2;\n            dVar10 = *0x1400307e8;\n            goto joined_r0x00014001bf77;\n        }\n        dVar11 = *0x1400307e8;\n        if (uVar6 == 0x4000) {\n            dVar1 = *arg2;\n            goto joined_r0x00014001bf77;\n        }\n        if (uVar6 == 0x6000) {\n            dVar1 = *arg2;\n            dVar10 = *0x1400307e8;\n            goto joined_r0x00014001bf77;\n        }\n    }\n    uVar7 = arg1 & 0x1e;\ncode_r0x00014001c155:\n    if (((arg1 & 0x10) != 0) && ((arg3 >> 0xc & 1) != 0)) {\n        fcn.14001c838(0x20);\n        uVar7 = uVar7 & 0xffffffef;\n    }\n    return uVar7 == 0;\n}\n",
        "token_count": 1808
    },
    "14002569": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t fcn.140025698(void)\n\n{\n    uint32_t uVar1;\n    uint32_t in_MXCSR;\n    \n    uVar1 = (((in_MXCSR & 0x3f) >> 2 & 8 | in_MXCSR & 0x10) >> 2 | in_MXCSR & 8) >> 1 |\n            ((in_MXCSR & 2) << 3 | in_MXCSR & 4) * 2 | (in_MXCSR & 1) << 4;\n    return uVar1 << 0x18 | uVar1;\n}\n",
        "token_count": 136
    },
    "14000467": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * fcn.140004670(code **arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong *puVar5;\n    uint *puVar6;\n    int64_t arg1_00;\n    int64_t iVar7;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    *arg1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    if ((*(arg1 + 0xe) & 1) != 0) {\n        if (*arg1[8] == 0) {\n            iVar7 = *arg1[10] + *arg1[7];\n        }\n        else {\n            iVar7 = *arg1[0xb] + *arg1[8];\n        }\n        iVar1 = *arg1[3];\n        arg1_00 = iVar1;\n        if (0xfff < iVar7 - iVar1) {\n            arg1_00 = *(iVar1 + -8);\n            if (0x1f < (iVar1 - arg1_00) - 8U) {\n                fcn.140010514(iVar1 - arg1_00, (iVar7 - iVar1) + 0x27);\n                pcVar2 = swi(3);\n                puVar6 = (*pcVar2)();\n                return puVar6;\n            }\n        }\n        fcn.140009d40(arg1_00);\n    }\n    *arg1[3] = 0;\n    *arg1[7] = 0;\n    *arg1[10] = 0;\n    *arg1[4] = 0;\n    *arg1[8] = 0;\n    *arg1[0xb] = 0;\n    *(arg1 + 0xe) = *(arg1 + 0xe) & 0xfffffffe;\n    *arg1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    arg1[0xd] = NULL;\n    pcVar2 = arg1[0xc];\n    if (pcVar2 == NULL) {\n        return vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    }\n    if ((*(pcVar2 + 8) != NULL) && (puVar5 = (**(**(pcVar2 + 8) + 0x10))(),  puVar5 != NULL)) {\n        (***puVar5)(puVar5, 1);\n    }\n    puVar6 = NULL;\n    if ((pcVar2 != NULL) &&\n       (puVar6 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x140040838, 0, pcVar2, in_R9, unaff_RBX),  puVar6 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.140013804(uVar3);\n        puVar6 = fcn.1400138d8();\n        *puVar6 = uVar4;\n    }\n    return puVar6;\n}\n",
        "token_count": 691
    },
    "14000f10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.14000f104(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    uint8_t *puVar10;\n    \n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x1c) = 0;\n    *(arg1 + 0x24) = 0;\n    *(arg1 + 0x30) = ZEXT816(0);\n    uVar2 = **(arg1 + 8);\n    puVar8 = *(arg1 + 8) + 1;\n    *(arg1 + 0x18) = uVar2;\n    *(arg1 + 8) = puVar8;\n    if ((uVar2 & 1) != 0) {\n        uVar3 = *puVar8;\n        puVar8 = puVar8 - *((uVar3 & 0xf) + 0x14002b7a0);\n        *(arg1 + 0x1c) = puVar8[-1] >> (*((uVar3 & 0xf) + 0x14002b7b0) & 0x1f);\n        *(arg1 + 8) = puVar8;\n    }\n    if ((uVar2 & 2) != 0) {\n        uVar4 = *puVar8;\n        puVar8 = puVar8 + 1;\n        *(arg1 + 8) = puVar8;\n        *(arg1 + 0x20) = uVar4;\n    }\n    if ((uVar2 & 4) != 0) {\n        uVar3 = *puVar8;\n        puVar8 = puVar8 - *((uVar3 & 0xf) + 0x14002b7a0);\n        *(arg1 + 0x24) = puVar8[-1] >> (*((uVar3 & 0xf) + 0x14002b7b0) & 0x1f);\n        *(arg1 + 8) = puVar8;\n    }\n    piVar1 = puVar8 + 1;\n    *(arg1 + 0x28) = *puVar8;\n    *(arg1 + 8) = piVar1;\n    if ((uVar2 & 8) == 0) {\n        if ((uVar2 & 0x30) == 0x10) {\n            uVar2 = *((*piVar1 & 0xf) + 0x14002b7b0);\n            iVar9 = piVar1 - *((*piVar1 & 0xf) + 0x14002b7a0);\n            uVar6 = *(iVar9 + -4);\n            *(arg1 + 8) = iVar9;\n            *(arg1 + 0x30) = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n            return;\n        }\n        if ((uVar2 & 0x30) != 0x20) {\n            return;\n        }\n        uVar2 = *((*piVar1 & 0xf) + 0x14002b7b0);\n        puVar10 = piVar1 - *((*piVar1 & 0xf) + 0x14002b7a0);\n        uVar6 = *(puVar10 + -4);\n        *(arg1 + 8) = puVar10;\n        *(arg1 + 0x30) = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n        uVar2 = *((*puVar10 & 0xf) + 0x14002b7b0);\n        iVar9 = puVar10 - *((*puVar10 & 0xf) + 0x14002b7a0);\n        uVar6 = *(iVar9 + -4);\n        *(arg1 + 8) = iVar9;\n        uVar7 = *(arg1 + 0x48) + (uVar6 >> (uVar2 & 0x1f));\n    }\n    else {\n        if ((uVar2 & 0x30) == 0x10) {\n            iVar5 = *piVar1;\n            *(arg1 + 8) = puVar8 + 2;\n            *(arg1 + 0x30) = iVar5;\n            return;\n        }\n        if ((uVar2 & 0x30) != 0x20) {\n            return;\n        }\n        iVar5 = *piVar1;\n        *(arg1 + 8) = puVar8 + 2;\n        *(arg1 + 0x30) = iVar5;\n        uVar7 = puVar8[2];\n        *(arg1 + 8) = puVar8 + 3;\n    }\n    *(arg1 + 0x38) = uVar7;\n    return;\n}\n",
        "token_count": 1135
    },
    "14001058": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14001058c(uint64_t arg1, uchar *arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t iVar1;\n    int64_t in_stack_00000028;\n    ulong var_3a0h;\n    ulong var_3a8h;\n    ulong var_3b0h;\n    ulong var_3b8h;\n    ulong var_3c0h;\n    uchar auStack1288 [32];\n    ulong uStack1256;\n    uchar *puStack1240;\n    int64_t iStack1232;\n    int64_t iStack1224;\n    uchar uStack1216;\n    uint uStack1215;\n    ushort uStack1211;\n    uchar uStack1209;\n    uint64_t auStack1208 [2];\n    int64_t iStack1192;\n    uint uStack1176;\n    uchar uStack1172;\n    ulong uStack1168;\n    uint uStack1160;\n    ushort uStack1152;\n    uint uStack1136;\n    uchar uStack1132;\n    ulong var_80h;\n    ulong var_bp_78h;\n    ulong var_bp_68h;\n    uchar auStack104 [16];\n    uchar **ppuStack88;\n    uint uStack80;\n    uint64_t uStack72;\n    \n    uStack72 = *0x14003e020 ^ auStack1288;\n    if ((arg4 == 0) || ((arg3 != 0 && (arg2 == NULL)))) {\n        *(in_stack_00000028 + 0x30) = 1;\n        *(in_stack_00000028 + 0x2c) = 0x16;\n        uStack1256 = 0;\n        fcn.140010428(0, 0, 0, 0);\n        goto code_r0x0001400106ff;\n    }\n    uStack1215 = 0;\n    uStack1211 = 0;\n    uStack1209 = 0;\n    iStack1224 = 0;\n    if (((arg1 & 2) != 0) || (uStack1216 = 0,  arg2 == NULL)) {\n        uStack1216 = 1;\n    }\n    ppuStack88 = &puStack1240;\n    uStack1176 = 0;\n    uStack1172 = 0;\n    uStack1168 = 0;\n    uStack1160 = 0;\n    uStack1152 = 0;\n    uStack1136 = 0;\n    uStack1132 = 0;\n    auStack104 = ZEXT816(0);\n    uStack80 = 0;\n    puStack1240 = arg2;\n    iStack1232 = arg3;\n    auStack1208[0] = arg1;\n    iStack1192 = arg4;\n    iVar1 = fcn.1400114e4(auStack1208, arg2);\n    if (arg2 != NULL) {\n        if ((arg1 & 1) == 0) {\n            if ((arg1 & 2) == 0) {\n                if (arg3 != 0) {\n                    if (iStack1224 != arg3) goto code_r0x0001400106ed;\ncode_r0x000140010734:\n                    arg2[arg3 + -1] = 0;\n                }\n            }\n            else if (arg3 != 0) {\n                if (-1 < iVar1) {\n                    if (iStack1224 == arg3) goto code_r0x000140010734;\n                    goto code_r0x0001400106ed;\n                }\n                *arg2 = 0;\n            }\n        }\n        else if (((arg3 != 0) || (iVar1 == 0)) && (iStack1224 != arg3)) {\ncode_r0x0001400106ed:\n            arg2[iStack1224] = 0;\n        }\n    }\n    fcn.14001a674(auStack104._8_8_);\ncode_r0x0001400106ff:\n    fcn.140009d20(uStack72 ^ auStack1288);\n    return;\n}\n",
        "token_count": 918
    },
    "14002081": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.14002081c(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(*(*(in_GS_OFFSET + 0x30) + 0x60) + 0xbc) >> 8 & 0xffffff01;\n}\n",
        "token_count": 59
    },
    "14002582": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.140025828(ulong arg1)\n\n{\n    return;\n}\n",
        "token_count": 18
    },
    "1400284f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.1400284fc(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar1 = fcn.140025180();\n    fcn.14002519a();\n    uVar4 = 0;\n    if ((uVar1 & 0x3f) != 0) {\n        uVar2 = (uVar1 & 1) << 4;\n        uVar4 = uVar2 | 8;\n        if ((uVar1 & 4) == 0) {\n            uVar4 = uVar2;\n        }\n        uVar2 = uVar4 | 4;\n        if ((uVar1 & 8) == 0) {\n            uVar2 = uVar4;\n        }\n        uVar3 = uVar2 | 2;\n        if ((uVar1 & 0x10) == 0) {\n            uVar3 = uVar2;\n        }\n        uVar4 = uVar3 | 1;\n        if ((uVar1 & 0x20) == 0) {\n            uVar4 = uVar3;\n        }\n        if ((uVar1 & 2) != 0) {\n            uVar4 = uVar4 | 0x80000;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 308
    },
    "14000b13": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar (*) [16] fcn.14000b13c(uchar (*arg1) [16], int32_t *arg2, ulong arg3)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t *piVar8;\n    int32_t *piVar9;\n    int32_t iVar10;\n    uint uVar11;\n    uint uStack72;\n    uint uStack68;\n    uint uStack60;\n    uint uStack44;\n    uchar auStack40 [16];\n    \n    iVar5 = 0;\n    uStack72 = SUB84(arg2, 0);\n    uStack68 = arg2 >> 0x20;\n    iVar10 = 0;\n    auStack40 = CONCAT412(uStack60, ZEXT812(arg2));\n    iVar6 = 0;\n    uVar11 = uStack60;\n    piVar9 = arg2;\n    fcn.14000b4cc(arg2, auStack40);\n    iVar4 = 0;\n    if (*arg2 != 0) {\n        piVar8 = *(arg2 + 2);\n        iVar6 = 0;\n        do {\n            iVar3 = iVar5;\n            if (((*(arg2 + 6) <= arg3) && (arg3 <= *(arg2 + 6) >> 0x20)) &&\n               (iVar10 = iVar4,  uVar11 = uStack60,  iVar3 = iVar4,  iVar6 = iVar4,  piVar9 = arg2,  iVar5 == 0)) {\n                iVar10 = iVar5;\n                iVar3 = iVar5;\n            }\n            iVar5 = iVar3;\n            iVar4 = iVar4 + 1;\n            uVar1 = *((*piVar8 & 0xf) + 0x14002b7b0);\n            puVar7 = piVar8 - *((*piVar8 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar7 + -4);\n            *(arg2 + 2) = puVar7;\n            arg2[6] = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar7 & 0xf) + 0x14002b7b0);\n            puVar7 = puVar7 + -*((*puVar7 & 0xf) + 0x14002b7a0);\n            uVar2 = *(puVar7 + -4);\n            *(arg2 + 2) = puVar7;\n            arg2[7] = uVar2 >> (uVar1 & 0x1f);\n            uVar1 = *((*puVar7 & 0xf) + 0x14002b7b0);\n            piVar8 = puVar7 + -*((*puVar7 & 0xf) + 0x14002b7a0);\n            uVar2 = piVar8[-1];\n            *(arg2 + 2) = piVar8;\n            arg2[8] = uVar2 >> (uVar1 & 0x1f);\n            iVar3 = *piVar8;\n            piVar8 = piVar8 + 1;\n            *(arg2 + 2) = piVar8;\n            arg2[9] = iVar3;\n        } while (iVar4 != *arg2);\n    }\n    auStack40 = CONCAT412(uVar11, CONCAT48(iVar10, piVar9));\n    fcn.14000b4cc(arg2, auStack40);\n    *arg1 = CONCAT412(uVar11, CONCAT48(iVar10, piVar9));\n    *arg1[1] = uStack72;\n    *(arg1[1] + 4) = uStack68;\n    *(arg1[1] + 8) = iVar6 + 1;\n    *(arg1[1] + 0xc) = uStack44;\n    return arg1;\n}\n",
        "token_count": 912
    },
    "14000cbd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.14000cbdc(ulong arg1, ulong arg2, int64_t arg3)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.14000af0c(arg1, arg2, arg3, auStackX24);\n    return *(*(arg3 + 0x1c) + 4 + *piVar1);\n}\n",
        "token_count": 94
    },
    "14000cc1": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14000cc14(ulong arg1, ulong arg2, int64_t arg3, ulong arg4)\n\n{\n    int64_t *piVar1;\n    uchar auStackX24 [16];\n    \n    piVar1 = fcn.14000af0c(arg1, arg2, arg3, auStackX24);\n    if (*(*(arg3 + 0x1c) + 4 + *piVar1) < arg4) {\n        *(*(arg3 + 0x1c) + 4 + *piVar1) = arg4;\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "14001ab8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.14001ab80(ulong *arg1, uchar *arg2, int64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    uint32_t in_stack_00000030;\n    int32_t aiStack24 [4];\n    \n    fcn.140023af8(*arg1, in_stack_00000030 + 1, 1, aiStack24);\n    arg2_00 = (arg3 - (0 < in_stack_00000030)) - (aiStack24[0] == 0x2d);\n    if (arg3 == -1) {\n        arg2_00 = arg3;\n    }\n    iVar1 = fcn.1400239e8(arg2 + (0 < in_stack_00000030) + (aiStack24[0] == 0x2d), arg2_00, in_stack_00000030 + 1, \n                          aiStack24);\n    if (iVar1 == 0) {\n        fcn.14001ac7c(arg2, arg3, in_stack_00000030);\n    }\n    else {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "14001ae6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14001ae60(ulong *arg1, uchar *arg2, int64_t arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg2_00;\n    uint32_t in_stack_00000030;\n    uchar auStack24 [16];\n    \n    auStack24 = ZEXT816(0);\n    fcn.140023af8(*arg1, in_stack_00000030, 0, auStack24);\n    arg2_00 = arg3 - (auStack24._0_4_ == 0x2d);\n    if (arg3 == -1) {\n        arg2_00 = arg3;\n    }\n    iVar1 = fcn.1400239e8(arg2 + (auStack24._0_4_ == 0x2d), arg2_00, auStack24._4_4_ + in_stack_00000030, auStack24);\n    if (iVar1 == 0) {\n        fcn.14001af38(arg2, arg3, in_stack_00000030, auStack24);\n    }\n    else {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "14001b09": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.14001b090(ulong *arg1, uchar *arg2, int64_t arg3, ulong arg4)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int64_t arg2_00;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t in_stack_00000030;\n    uchar auStack24 [16];\n    \n    auStack24 = ZEXT816(0);\n    fcn.140023af8(*arg1, in_stack_00000030, 0, auStack24);\n    iVar4 = auStack24._4_4_ + -1;\n    arg2_00 = arg3 - (auStack24._0_4_ == 0x2d);\n    if (arg3 == -1) {\n        arg2_00 = arg3;\n    }\n    iVar2 = fcn.1400239e8(arg2 + (auStack24._0_4_ == 0x2d), arg2_00, in_stack_00000030, auStack24);\n    if (iVar2 == 0) {\n        auStack24._4_4_ = auStack24._4_4_ + -1;\n        if ((auStack24._4_4_ < -4) || (in_stack_00000030 <= auStack24._4_4_)) {\n            fcn.14001ac7c(arg2, arg3, in_stack_00000030);\n        }\n        else {\n            pcVar1 = arg2 + (auStack24._0_4_ == 0x2d);\n            if (iVar4 < auStack24._4_4_) {\n                do {\n                    pcVar3 = pcVar1;\n                    pcVar1 = pcVar3 + 1;\n                } while (*pcVar3 != '\\0');\n                pcVar3[-1] = '\\0';\n            }\n            fcn.14001af38(arg2, arg3, in_stack_00000030, auStack24);\n        }\n    }\n    else {\n        *arg2 = 0;\n    }\n    return;\n}\n",
        "token_count": 470
    },
    "14001fff": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t fcn.14001fff8(ulong arg1, ulong noname_1, int64_t arg3, ulong *arg4)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint *arg2;\n    uint *puVar15;\n    uint *puVar16;\n    uint *puVar17;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t iStackX24;\n    ulong *puStackX32;\n    uchar auStack616 [4];\n    uint uStack612;\n    uint auStack608 [2];\n    int64_t *piStack600;\n    ulong **ppuStack592;\n    uint auStack584 [140];\n    \n    iStackX24 = arg3;\n    puStackX32 = arg4;\n    fcn.140020268(arg3, arg4);\n    uVar13 = fcn.14001fcf8(arg1);\n    if (uVar13 == *(*(iStackX24 + 0x88) + 4)) {\n        iVar14 = 0;\n    }\n    else {\n        arg2 = fcn.14001a6b0(0x228);\n        if (arg2 == NULL) {\n            fcn.14001a674(0);\n            iVar14 = -1;\n        }\n        else {\n            iVar18 = 4;\n            iVar19 = 4;\n            puVar16 = *(iStackX24 + 0x88);\n            puVar12 = auStack584;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar19 = iVar19 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar19 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            puVar16 = auStack584;\n            puVar12 = arg2;\n            do {\n                puVar17 = puVar12;\n                puVar15 = puVar16;\n                uVar4 = puVar15[1];\n                uVar5 = puVar15[2];\n                uVar6 = puVar15[3];\n                uVar7 = puVar15[4];\n                uVar8 = puVar15[5];\n                uVar9 = puVar15[6];\n                uVar10 = puVar15[7];\n                *puVar17 = *puVar15;\n                puVar17[1] = uVar4;\n                puVar17[2] = uVar5;\n                puVar17[3] = uVar6;\n                uVar4 = puVar15[8];\n                uVar5 = puVar15[9];\n                uVar6 = puVar15[10];\n                uVar11 = puVar15[0xb];\n                puVar17[4] = uVar7;\n                puVar17[5] = uVar8;\n                puVar17[6] = uVar9;\n                puVar17[7] = uVar10;\n                uVar7 = puVar15[0xc];\n                uVar8 = puVar15[0xd];\n                uVar9 = puVar15[0xe];\n                uVar10 = puVar15[0xf];\n                puVar17[8] = uVar4;\n                puVar17[9] = uVar5;\n                puVar17[10] = uVar6;\n                puVar17[0xb] = uVar11;\n                uVar4 = puVar15[0x10];\n                uVar5 = puVar15[0x11];\n                uVar6 = puVar15[0x12];\n                uVar11 = puVar15[0x13];\n                puVar17[0xc] = uVar7;\n                puVar17[0xd] = uVar8;\n                puVar17[0xe] = uVar9;\n                puVar17[0xf] = uVar10;\n                uVar7 = puVar15[0x14];\n                uVar8 = puVar15[0x15];\n                uVar9 = puVar15[0x16];\n                uVar10 = puVar15[0x17];\n                puVar17[0x10] = uVar4;\n                puVar17[0x11] = uVar5;\n                puVar17[0x12] = uVar6;\n                puVar17[0x13] = uVar11;\n                uVar4 = puVar15[0x18];\n                uVar5 = puVar15[0x19];\n                uVar6 = puVar15[0x1a];\n                uVar11 = puVar15[0x1b];\n                puVar17[0x14] = uVar7;\n                puVar17[0x15] = uVar8;\n                puVar17[0x16] = uVar9;\n                puVar17[0x17] = uVar10;\n                uVar7 = puVar15[0x1c];\n                uVar8 = puVar15[0x1d];\n                uVar9 = puVar15[0x1e];\n                uVar10 = puVar15[0x1f];\n                puVar17[0x18] = uVar4;\n                puVar17[0x19] = uVar5;\n                puVar17[0x1a] = uVar6;\n                puVar17[0x1b] = uVar11;\n                puVar17[0x1c] = uVar7;\n                puVar17[0x1d] = uVar8;\n                puVar17[0x1e] = uVar9;\n                puVar17[0x1f] = uVar10;\n                iVar18 = iVar18 + -1;\n                puVar16 = puVar15 + 0x20;\n                puVar12 = puVar17 + 0x20;\n            } while (iVar18 != 0);\n            uVar4 = puVar15[0x21];\n            uVar5 = puVar15[0x22];\n            uVar6 = puVar15[0x23];\n            uVar7 = puVar15[0x24];\n            uVar8 = puVar15[0x25];\n            uVar9 = puVar15[0x26];\n            uVar10 = puVar15[0x27];\n            uVar2 = *(puVar15 + 0x28);\n            puVar17[0x20] = puVar15[0x20];\n            puVar17[0x21] = uVar4;\n            puVar17[0x22] = uVar5;\n            puVar17[0x23] = uVar6;\n            puVar17[0x24] = uVar7;\n            puVar17[0x25] = uVar8;\n            puVar17[0x26] = uVar9;\n            puVar17[0x27] = uVar10;\n            *(puVar17 + 0x28) = uVar2;\n            *arg2 = 0;\n            iVar14 = fcn.14002039c(uVar13, arg2);\n            if (iVar14 == -1) {\n                puVar16 = fcn.1400138d8();\n                *puVar16 = 0x16;\n                fcn.14001a674(arg2);\n                iVar14 = -1;\n            }\n            else {\n                if (noname_1 == '\\0') {\n                    fcn.140017ab8();\n                }\n                piVar3 = *(iStackX24 + 0x88);\n                LOCK();\n                iVar1 = *piVar3;\n                *piVar3 = *piVar3 + -1;\n                if ((iVar1 == 1) && (*(iStackX24 + 0x88) != 0x14003e560)) {\n                    fcn.14001a674(*(iStackX24 + 0x88));\n                }\n                *arg2 = 1;\n                *(iStackX24 + 0x88) = arg2;\n                if ((*0x14003e3bc & *(iStackX24 + 0x3a8)) == 0) {\n                    piStack600 = &iStackX24;\n                    ppuStack592 = &puStackX32;\n                    uStack612 = 5;\n                    auStack608[0] = 5;\n                    fcn.14001fb28(auStack616, auStack608, &piStack600, &uStack612);\n                    if (noname_1 != '\\0') {\n                        *0x14003e2a0 = *puStackX32;\n                    }\n                }\n                fcn.14001a674(0);\n            }\n        }\n    }\n    return iVar14;\n}\n",
        "token_count": 3034
    },
    "140022f8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.140022f80(uint16_t *arg1)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = *arg1;\n    arg1 = arg1 + 1;\n    iVar4 = 0;\n    do {\n        if (uVar3 == 0) {\n            return iVar4;\n        }\n        if (uVar3 - 0x61 < 6) {\n            iVar1 = -0x27;\ncode_r0x000140022fad:\n            uVar2 = uVar3 + iVar1;\n        }\n        else {\n            uVar2 = uVar3;\n            if (uVar3 - 0x41 < 6) {\n                iVar1 = -7;\n                goto code_r0x000140022fad;\n            }\n        }\n        uVar3 = *arg1;\n        iVar4 = iVar4 * 0x10 + -0x30 + uVar2;\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 242
    },
    "14000a3d": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00014000a49a)\n// WARNING: Removing unreachable block (ram,0x00014000a40a)\n// WARNING: Removing unreachable block (ram,0x00014000a3e3)\n\nulong fcn.14000a3d0(ulong noname_0, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint8_t in_XCR0;\n    \n    piVar1 = cpuid_basic_info(0);\n    uVar6 = 0;\n    puVar2 = cpuid_Version_info(1);\n    uVar4 = puVar2[3];\n    if ((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) {\n        *0x14003e040 = 0xffffffffffffffff;\n        uVar5 = *puVar2 & 0xfff3ff0;\n        *0x14003e038 = 0x8000;\n        if ((((uVar5 == 0x106c0) || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n           ((uVar5 - 0x30650 < 0x21 && ((0x100010001U >> (uVar5 - 0x30650 & 0x3f) & 1) != 0)))) {\n            *0x14003f5f8 = *0x14003f5f8 | 1;\n        }\n    }\n    if (6 < *piVar1) {\n        iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n        uVar6 = *(iVar3 + 4);\n        if ((uVar6 >> 9 & 1) != 0) {\n            *0x14003f5f8 = *0x14003f5f8 | 2;\n        }\n    }\n    *0x14003e030 = 1;\n    *0x14003e034 = 2;\n    if ((uVar4 >> 0x14 & 1) != 0) {\n        *0x14003e030 = 2;\n        *0x14003e034 = 6;\n        if ((((uVar4 >> 0x1b & 1) != 0) && ((uVar4 >> 0x1c & 1) != 0)) && ((in_XCR0 & 6) == 6)) {\n            *0x14003e034 = 0xe;\n            *0x14003e030 = 3;\n            if ((uVar6 & 0x20) != 0) {\n                *0x14003e030 = 5;\n                *0x14003e034 = 0x2e;\n                if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                    *0x14003e034 = 0x6e;\n                    *0x14003e030 = 6;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 759
    },
    "1400255b": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t fcn.1400255b4(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t in_MXCSR;\n    \n    uVar1 = in_MXCSR & 0x8040;\n    if (uVar1 == 0x8000) {\n        uVar4 = 0xc00;\n    }\n    else if (uVar1 == 0x40) {\n        uVar4 = 0x800;\n    }\n    else {\n        uVar4 = 0;\n        if (uVar1 == 0x8040) {\n            uVar4 = 0x400;\n        }\n    }\n    uVar2 = in_MXCSR & 0x6000;\n    if (uVar2 == 0) {\n        uVar3 = 0;\n    }\n    else if (uVar2 == 0x2000) {\n        uVar3 = 0x100;\n    }\n    else if (uVar2 == 0x4000) {\n        uVar3 = 0x200;\n    }\n    else {\n        uVar3 = 0x300;\n        if (uVar2 != 0x6000) {\n            uVar3 = 0;\n        }\n    }\n    uVar4 = ((((in_MXCSR >> 2 & 0x400 | in_MXCSR & 0x800) >> 2 | in_MXCSR & 0x400) >> 2 | in_MXCSR & 0x200) >> 3 |\n            in_MXCSR & 0x180) >> 3 | uVar4 | uVar3;\n    return (uVar3 | uVar4 * 4) << 0x16 | uVar4;\n}\n",
        "token_count": 403
    },
    "140016ab": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.140016ab0(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.140012b28(0);\n    uVar1 = *0x14003e020 & 0x3f;\n    uVar2 = *0x14003ff48 ^ *0x14003e020;\n    fcn.140012b7c(0);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 118
    },
    "140016c7": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.140016c7c(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *0x14003e020 & 0x3f;\n    return *0x14003e020 & 0xffffffffffffff00 |\n           ((*0x14003ff58 ^ *0x14003e020) >> uVar1 | (*0x14003ff58 ^ *0x14003e020) << 0x40 - uVar1) != 0;\n}\n",
        "token_count": 112
    },
    "140016ca": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.140016ca4(ulong arg1)\n\n{\n    ulong uVar1;\n    uint8_t uVar2;\n    \n    uVar2 = *0x14003e020 & 0x3f;\n    if (((*0x14003ff58 ^ *0x14003e020) >> uVar2 | (*0x14003ff58 ^ *0x14003e020) << 0x40 - uVar2) == 0) {\n        return 0;\n    }\n    // WARNING: Could not recover jumptable at 0x000140016cd8. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar1 = (**0x14002a3f0)(arg1);\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "1400176c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.1400176c8(uint64_t arg1)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    \n    if (*0x140040090 == *0x14003e020) {\n        uVar2 = 0x40 - (*0x14003e020 & 0x3f) & 0x3f;\n        *0x140040090 = (arg1 >> uVar2 | arg1 << 0x40 - uVar2) ^ *0x14003e020;\n        return;\n    }\n    fcn.140019600(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 154
    },
    "1400190f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n\nulong fcn.1400190f4(int64_t **arg1)\n\n{\n    ulong uVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t arg2;\n    uint64_t *puVar6;\n    uint64_t *puVar7;\n    ulong var_bp_8h;\n    ulong var_20h;\n    \n    puVar3 = **arg1;\n    if (puVar3 == NULL) {\ncode_r0x000140019288:\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar2 = *0x14003e020 & 0x3f;\n        arg1_00 = (*0x14003e020 ^ *puVar3) >> uVar2 | (*0x14003e020 ^ *puVar3) << 0x40 - uVar2;\n        puVar7 = (*0x14003e020 ^ puVar3[1]) >> uVar2 | (*0x14003e020 ^ puVar3[1]) << 0x40 - uVar2;\n        puVar3 = (*0x14003e020 ^ puVar3[2]) >> uVar2 | (*0x14003e020 ^ puVar3[2]) << 0x40 - uVar2;\n        if (puVar7 == puVar3) {\n            uVar4 = puVar3 - arg1_00 >> 3;\n            uVar5 = uVar4;\n            if (0x200 < uVar4) {\n                uVar5 = 0x200;\n            }\n            arg2 = uVar5 + uVar4;\n            if (uVar5 + uVar4 == 0) {\n                arg2 = 0x20;\n            }\n            if (arg2 < uVar4) {\ncode_r0x000140019196:\n                arg2 = uVar4 + 4;\n                uVar5 = fcn.140023434(arg1_00, arg2, 8);\n                fcn.14001a674(0);\n                if (uVar5 == 0) goto code_r0x000140019288;\n            }\n            else {\n                uVar5 = fcn.140023434(arg1_00, arg2, 8);\n                fcn.14001a674(0);\n                if (uVar5 == 0) goto code_r0x000140019196;\n            }\n            arg1_00 = uVar5;\n            uVar5 = *0x14003e020;\n            puVar7 = arg1_00 + uVar4 * 8;\n            puVar3 = arg1_00 + arg2 * 8;\n            uVar4 = puVar3 + (7 - puVar7) >> 3;\n            if (puVar3 < puVar7) {\n                uVar4 = 0;\n            }\n            puVar6 = puVar7;\n            if (uVar4 != 0) {\n                for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n                    *puVar6 = uVar5;\n                    puVar6 = puVar6 + 1;\n                }\n            }\n        }\n        uVar2 = -(*0x14003e020 & 0x3f) & 0x3f;\n        *puVar7 = (*arg1[1] >> uVar2 | *arg1[1] << 0x40 - uVar2) ^ *0x14003e020;\n        uVar2 = -(*0x14003e020 & 0x3f) & 0x3f;\n        ***arg1 = (arg1_00 >> uVar2 | arg1_00 << 0x40 - uVar2) ^ *0x14003e020;\n        uVar2 = -(*0x14003e020 & 0x3f) & 0x3f;\n        *(**arg1 + 8) = (puVar7 + 1 >> uVar2 | puVar7 + 1 << 0x40 - uVar2) ^ *0x14003e020;\n        uVar2 = 0x40 - (*0x14003e020 & 0x3f) & 0x3f;\n        uVar1 = 0;\n        *(**arg1 + 0x10) = (puVar3 >> uVar2 | puVar3 << 0x40 - uVar2) ^ *0x14003e020;\n    }\n    return uVar1;\n}\n",
        "token_count": 1038
    },
    "1400192a": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong fcn.1400192a4(int64_t **arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uint8_t uVar5;\n    uint64_t *puVar6;\n    uint64_t *puVar7;\n    uint64_t *lpMem;\n    uint64_t uVar8;\n    uint64_t *puVar9;\n    uint64_t *puVar10;\n    \n    uVar1 = *0x14003e020;\n    puVar6 = **arg1;\n    if (puVar6 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar5 = *0x14003e020 & 0x3f;\n        lpMem = (*0x14003e020 ^ *puVar6) >> uVar5 | (*0x14003e020 ^ *puVar6) << 0x40 - uVar5;\n        puVar6 = (*0x14003e020 ^ puVar6[1]) >> uVar5 | (*0x14003e020 ^ puVar6[1]) << 0x40 - uVar5;\n        puVar7 = puVar6;\n        uVar3 = *0x14003e020;\n        puVar10 = lpMem;\n        if (lpMem - 1U < 0xfffffffffffffffe) {\n            while (puVar6 = puVar6 + -1,  lpMem <= puVar6) {\n                if (*puVar6 != uVar1) {\n                    *puVar6 = uVar1;\n                    (**0x14002a3f0)();\n                    uVar5 = *0x14003e020 & 0x3f;\n                    uVar8 = *0x14003e020 ^ ***arg1;\n                    uVar3 = *0x14003e020 ^ (**arg1)[1];\n                    puVar9 = uVar8 >> uVar5 | uVar8 << 0x40 - uVar5;\n                    puVar4 = uVar3 >> uVar5 | uVar3 << 0x40 - uVar5;\n                    uVar3 = *0x14003e020;\n                    if ((puVar9 != puVar10) || (puVar4 != puVar7)) {\n                        puVar6 = puVar4;\n                        puVar7 = puVar4;\n                        lpMem = puVar9;\n                        puVar10 = puVar9;\n                    }\n                }\n            }\n            if (lpMem != 0xffffffffffffffff) {\n                fcn.14001a674(lpMem);\n                uVar3 = *0x14003e020;\n            }\n            ***arg1 = uVar3;\n            *(**arg1 + 8) = uVar3;\n            *(**arg1 + 0x10) = uVar3;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 650
    },
    "14001c99": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.14001c998(ulong arg1, ulong arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    int64_t *piVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar7 = arg1;\n    uVar6 = *(uVar7 * 8 + 0x1400405d0) ^ *0x14003e020;\n    uVar5 = *0x14003e020 & 0x3f;\n    uVar6 = uVar6 >> uVar5 | uVar6 << 0x40 - uVar5;\n    if (uVar6 != 0xffffffffffffffff) {\n        if (uVar6 != 0) {\n            return uVar6;\n        }\n        if (arg3 != arg4) {\n            do {\n                uVar6 = *arg3;\n                iVar4 = *(uVar6 * 8 + 0x140040520);\n                if (iVar4 == 0) {\n                    arg1_00 = *(uVar6 * 8 + 0x1400307f0);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0);\n                    if ((iVar4 != 0) ||\n                       ((((iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar3 == 0x57 &&\n                          (iVar3 = fcn.140019f70(arg1_00, L\"api-ms-\", 7),  iVar3 != 0)) &&\n                         (iVar3 = fcn.140019f70(arg1_00, L\"ext-ms-\", 7),  iVar3 != 0)) &&\n                        (iVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(arg1_00, 0, 0),  iVar4 != 0)))) {\n                        piVar1 = uVar6 * 8 + 0x140040520;\n                        iVar2 = *piVar1;\n                        *piVar1 = iVar4;\n                        if (iVar2 != 0) {\n                            (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar4);\n                        }\n                        goto code_r0x00014001cb1a;\n                    }\n                    *(uVar6 * 8 + 0x140040520) = 0xffffffffffffffff;\n                }\n                else if (iVar4 != -1) {\ncode_r0x00014001cb1a:\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, arg2);\n                    if (uVar6 != 0) {\n                        uVar5 = 0x40 - (*0x14003e020 & 0x3f) & 0x3f;\n                        *(uVar7 * 8 + 0x1400405d0) = (uVar6 >> uVar5 | uVar6 << 0x40 - uVar5) ^ *0x14003e020;\n                        return uVar6;\n                    }\n                    break;\n                }\n                arg3 = arg3 + 1;\n            } while (arg3 != arg4);\n        }\n        uVar5 = 0x40 - (*0x14003e020 & 0x3f) & 0x3f;\n        *(uVar7 * 8 + 0x1400405d0) = (0xffffffffffffffffU >> uVar5 | -1 << 0x40 - uVar5) ^ *0x14003e020;\n    }\n    return 0;\n}\n",
        "token_count": 814
    },
    "14001e94": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t fcn.14001e940(ulong noname_0, uint32_t *arg2, ulong noname_2, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    \n    fcn.140012b28(*arg2);\n    uVar1 = *0x14003e020 & 0x3f;\n    uVar2 = *0x1400406e8 ^ *0x14003e020;\n    fcn.140012b7c(*arg4);\n    return uVar2 >> uVar1 | uVar2 << 0x40 - uVar1;\n}\n",
        "token_count": 146
    },
    "140020a2": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.140020a20(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000140020a40. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((arg1 >> 6) * 8 + 0x140040110) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 101
    },
    "140020a4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.140020a48(ulong arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x000140020a68. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((arg1 >> 6) * 8 + 0x140040110) + (arg1 & 0x3f) * 0x48);\n    return;\n}\n",
        "token_count": 102
    },
    "140024d8": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint64_t fcn.140024d88(uint8_t *arg1, ulong arg2, ulong *arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (arg1 != NULL) {\n        if (arg2 != 0) {\n            if ((arg2 & 0xffffff80) == 0) {\n                *arg1 = arg2;\n                return 1;\n            }\n            if ((arg2 & 0xfffff800) == 0) {\n                iVar1 = 1;\n                uVar4 = 0xc0;\n                iVar2 = iVar1;\n            }\n            else if ((arg2 & 0xffff0000) == 0) {\n                if (arg2 - 0xd800 < 0x800) {\ncode_r0x000140027f34:\n                    *arg3 = 0;\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 0x2a;\n                    return -1;\n                }\n                iVar1 = 2;\n                uVar4 = 0xe0;\n                iVar2 = iVar1;\n            }\n            else {\n                if (((arg2 & 0xffe00000) != 0) || (0x10ffff < arg2)) goto code_r0x000140027f34;\n                iVar1 = 3;\n                uVar4 = 0xf0;\n                iVar2 = iVar1;\n            }\n            do {\n                uVar3 = arg2;\n                arg2._0_4_ = arg2 >> 6;\n                arg1[iVar1] = uVar3 & 0x3f | 0x80;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n            *arg1 = arg2 | uVar4;\n            *arg3 = 0;\n            return iVar2 + 1;\n        }\n        *arg1 = 0;\n    }\n    *arg3 = 0;\n    return 1;\n}\n",
        "token_count": 465
    },
    "1400256f": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.1400256f0(ulong arg1)\n\n{\n    return;\n}\n",
        "token_count": 20
    },
    "14001bab": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001bab0(int64_t arg1)\n\n{\n    // WARNING: Could not recover jumptable at 0x00014001bab4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 0x30);\n    return;\n}\n",
        "token_count": 75
    },
    "14001a7e": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.14001a7e8(uint64_t *arg1, uchar *arg2, uint64_t arg3, ulong arg4)\n\n{\n    uint8_t *puVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uint16_t uVar5;\n    ulong uVar6;\n    char *pcVar7;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    int16_t iVar12;\n    uint8_t *arg1_00;\n    uint32_t uVar13;\n    uint8_t *puVar14;\n    uchar *puVar15;\n    uint64_t uVar16;\n    uint32_t in_stack_00000030;\n    uint8_t in_stack_00000038;\n    uint32_t in_stack_00000048;\n    int64_t in_stack_00000050;\n    \n    *arg2 = 0;\n    uVar13 = 0;\n    if (-1 < in_stack_00000030) {\n        uVar13 = in_stack_00000030;\n    }\n    if (arg3 <= uVar13 + 0xb) {\n        *(in_stack_00000050 + 0x30) = 1;\n        *(in_stack_00000050 + 0x2c) = 0x22;\n        fcn.140010428(0, 0, 0, 0);\n        return 0x22;\n    }\n    if ((*arg1 >> 0x34 & 0x7ff) == 0x7ff) {\n        uVar6 = fcn.14001ab80(arg1, arg2, arg3, arg4);\n        if (uVar6 != 0) {\n            *arg2 = 0;\n            return uVar6;\n        }\n        pcVar7 = fcn.140028e40(arg2, 0x65);\n        if (pcVar7 == NULL) {\n            return 0;\n        }\n        *pcVar7 = (in_stack_00000038 ^ 1) * ' ' + 'P';\n        pcVar7[3] = '\\0';\n        return 0;\n    }\n    puVar11 = arg2;\n    if (*arg1 < 0) {\n        *arg2 = 0x2d;\n        puVar11 = arg2 + 1;\n    }\n    puVar1 = puVar11 + 1;\n    uVar16 = 0x3ff;\n    iVar12 = (in_stack_00000038 ^ 1) * 0x20 + 7;\n    if ((*arg1 & 0x7ff0000000000000) == 0) {\n        *puVar11 = 0x30;\n        uVar16 = -((*arg1 & 0xfffffffffffff) != 0) & 0x3fe;\n    }\n    else {\n        *puVar11 = 0x31;\n    }\n    arg1_00 = puVar11 + 2;\n    if (uVar13 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        if (*(in_stack_00000050 + 0x28) == '\\0') {\n            fcn.1400122f0(in_stack_00000050);\n        }\n        uVar3 = ***(*(in_stack_00000050 + 0x18) + 0xf8);\n    }\n    *puVar1 = uVar3;\n    if ((*arg1 & 0xfffffffffffff) != 0) {\n        puVar11 = 0x30;\n        puVar15 = 0xf000000000000;\n        while (arg2 = puVar15,  0 < uVar13) {\n            uVar5 = ((*arg1 & arg2) >> (puVar11 & 0x3f)) + 0x30;\n            if (0x39 < uVar5) {\n                uVar5 = uVar5 + iVar12;\n            }\n            *arg1_00 = uVar5;\n            uVar13 = uVar13 - 1;\n            arg1_00 = arg1_00 + 1;\n            puVar15 = arg2 >> 4;\n            uVar5 = puVar11 - 4;\n            arg2 = uVar5;\n            puVar11 = arg2;\n            if (uVar5 < 0) goto code_r0x00014001aa3e;\n        }\n        cVar4 = fcn.14001b1e4(arg1, arg2, puVar11, in_stack_00000048);\n        puVar14 = arg1_00;\n        if (cVar4 == '\\0') goto code_r0x00014001aa64;\n        while( true ) {\n            puVar8 = puVar14 + -1;\n            uVar2 = arg2 & 0xffffffffffffff00;\n            arg2 = uVar2 | *puVar8;\n            if ((arg2 - 0x46U & 0xdf) != 0) break;\n            *puVar8 = 0x30;\n            puVar14 = puVar8;\n        }\n        if (puVar8 == puVar1) {\n            puVar14[-2] = puVar14[-2] + 1;\n        }\n        else {\n            if (*puVar8 == 0x39) {\n                arg2 = uVar2 | iVar12 + 0x39;\n            }\n            cVar4 = arg2;\n            arg2 = arg2 & 0xffffffffffffff00;\n            *puVar8 = cVar4 + 1;\n        }\n    }\ncode_r0x00014001aa3e:\n    if (0 < uVar13) {\n        fcn.14000c2b0(arg1_00, arg2 & 0xffffffffffffff00 | 0x30, uVar13);\n        arg1_00 = arg1_00 + uVar13;\n    }\ncode_r0x00014001aa64:\n    if (*puVar1 == 0) {\n        arg1_00 = puVar1;\n    }\n    *arg1_00 = (in_stack_00000038 ^ 1) * ' ' + 0x50;\n    puVar1 = arg1_00 + 2;\n    uVar13 = *arg1 >> 0x34 & 0x7ff;\n    iVar9 = uVar13 - uVar16;\n    iVar10 = iVar9;\n    if (iVar9 < 0) {\n        iVar10 = uVar16 - uVar13;\n    }\n    uVar3 = 0x2b;\n    if (iVar9 < 0) {\n        uVar3 = 0x2d;\n    }\n    arg1_00[1] = uVar3;\n    *puVar1 = 0x30;\n    puVar14 = puVar1;\n    if (iVar10 < 1000) {\ncode_r0x00014001aaeb:\n        if (99 < iVar10) goto code_r0x00014001aaf1;\ncode_r0x00014001ab24:\n        if (iVar10 < 10) goto code_r0x00014001ab55;\n    }\n    else {\n        puVar14 = arg1_00 + 3;\n        *puVar1 = iVar10 / 1000 + 0x30;\n        iVar10 = iVar10 % 1000;\n        if (puVar14 == puVar1) goto code_r0x00014001aaeb;\ncode_r0x00014001aaf1:\n        iVar9 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar10) >> 0x40, 0) + iVar10;\n        iVar9 = (iVar9 >> 6) - (iVar9 >> 0x3f);\n        *puVar14 = iVar9 + 0x30;\n        puVar14 = puVar14 + 1;\n        iVar10 = iVar10 + iVar9 * -100;\n        if (puVar14 == puVar1) goto code_r0x00014001ab24;\n    }\n    *puVar14 = iVar10 / 10 + 0x30;\n    puVar14 = puVar14 + 1;\n    iVar10 = iVar10 % 10;\ncode_r0x00014001ab55:\n    *puVar14 = iVar10 + 0x30;\n    puVar14[1] = 0;\n    return 0;\n}\n",
        "token_count": 1876
    },
    "14000a25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.14000a254(ulong param_1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.14000a218(param_1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 55
    },
    "14000123": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.140001230(uchar *arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    \n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 8) = iVar3;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x18) = iVar3;\n    *(arg1 + 0x28) = 0;\n    *(arg1 + 0x30) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x28) = iVar3;\n    *(arg1 + 0x38) = 0;\n    *(arg1 + 0x40) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x38) = iVar3;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x50) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x48) = iVar3;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x58) = iVar3;\n    *(arg1 + 0x68) = 0;\n    *(arg1 + 0x70) = 0;\n    iVar3 = fcn.140009d74(0x18);\n    *iVar3 = iVar3;\n    *(iVar3 + 8) = iVar3;\n    *(arg1 + 0x68) = iVar3;\n    *(arg1 + 0x88) = 0;\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x98) = 0;\n    *(arg1 + 0x90) = 0;\n    *(arg1 + 0xa8) = 0;\n    *(arg1 + 0xa0) = 0;\n    *(arg1 + 0xe0) = 0;\n    *(arg1 + 0xb0) = 0;\n    *arg1 = 0;\n    puVar1 = *(arg1 + 8);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 8) = *(arg1 + 8);\n    *(*(arg1 + 8) + 8) = *(arg1 + 8);\n    *(arg1 + 0x10) = 0;\n    puVar1 = *(arg1 + 0x18);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x18) = *(arg1 + 0x18);\n    *(*(arg1 + 0x18) + 8) = *(arg1 + 0x18);\n    *(arg1 + 0x20) = 0;\n    puVar1 = *(arg1 + 0x28);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x28) = *(arg1 + 0x28);\n    *(*(arg1 + 0x28) + 8) = *(arg1 + 0x28);\n    *(arg1 + 0x30) = 0;\n    puVar1 = *(arg1 + 0x48);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x48) = *(arg1 + 0x48);\n    *(*(arg1 + 0x48) + 8) = *(arg1 + 0x48);\n    *(arg1 + 0x50) = 0;\n    puVar1 = *(arg1 + 0x58);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x58) = *(arg1 + 0x58);\n    *(*(arg1 + 0x58) + 8) = *(arg1 + 0x58);\n    *(arg1 + 0x60) = 0;\n    puVar1 = *(arg1 + 0x68);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x68) = *(arg1 + 0x68);\n    *(*(arg1 + 0x68) + 8) = *(arg1 + 0x68);\n    *(arg1 + 0x70) = 0;\n    arg1[0x79] = 0;\n    return arg1;\n}\n",
        "token_count": 1548
    },
    "14001a67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a674(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x140040838, 0, lpMem),  iVar2 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.140013804(uVar3);\n        puVar1 = fcn.1400138d8();\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "14000294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.140002940(ulong noname_0, int64_t *arg2, ulong arg3)\n\n{\n    uint uVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    int32_t iVar4;\n    \n    puVar2 = *arg2;\n    iVar4 = 0;\n    puVar3 = *puVar2;\n    while( true ) {\n        if (puVar3 == puVar2) {\n            *puVar2[1] = 0;\n            puVar2 = *puVar2;\n            while (puVar2 != NULL) {\n                puVar3 = *puVar2;\n                fcn.140009d40(puVar2);\n                puVar2 = puVar3;\n            }\n            fcn.140009d40(*arg2);\n            return 0xffffffff;\n        }\n        if (iVar4 == arg3) break;\n        puVar3 = *puVar3;\n        iVar4 = iVar4 + 1;\n    }\n    uVar1 = *(puVar3 + 2);\n    *puVar2[1] = 0;\n    puVar2 = *puVar2;\n    while (puVar2 != NULL) {\n        puVar3 = *puVar2;\n        fcn.140009d40(puVar2);\n        puVar2 = puVar3;\n    }\n    fcn.140009d40(*arg2);\n    return uVar1;\n}\n",
        "token_count": 316
    },
    "140002a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.140002a10(int64_t arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *puVar5;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    puVar1 = *(arg1 + 8);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 8) = *(arg1 + 8);\n    *(*(arg1 + 8) + 8) = *(arg1 + 8);\n    *(arg1 + 0x10) = 0;\n    puVar1 = *(arg1 + 0x18);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x18) = *(arg1 + 0x18);\n    *(*(arg1 + 0x18) + 8) = *(arg1 + 0x18);\n    *(arg1 + 0x20) = 0;\n    puVar1 = *(arg1 + 0x28);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x28) = *(arg1 + 0x28);\n    *(*(arg1 + 0x28) + 8) = *(arg1 + 0x28);\n    *(arg1 + 0x30) = 0;\n    puVar1 = *(arg1 + 0x48);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x48) = *(arg1 + 0x48);\n    *(*(arg1 + 0x48) + 8) = *(arg1 + 0x48);\n    *(arg1 + 0x50) = 0;\n    puVar1 = *(arg1 + 0x58);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x58) = *(arg1 + 0x58);\n    *(*(arg1 + 0x58) + 8) = *(arg1 + 0x58);\n    *(arg1 + 0x60) = 0;\n    puVar1 = *(arg1 + 0x68);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    **(arg1 + 0x68) = *(arg1 + 0x68);\n    *(*(arg1 + 0x68) + 8) = *(arg1 + 0x68);\n    *(arg1 + 0x70) = 0;\n    puVar1 = *(arg1 + 0x68);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x68));\n    puVar1 = *(arg1 + 0x58);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x58));\n    puVar1 = *(arg1 + 0x48);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x48));\n    puVar1 = *(arg1 + 0x38);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x38));\n    puVar1 = *(arg1 + 0x28);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x28));\n    puVar1 = *(arg1 + 0x18);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    fcn.140009d40(*(arg1 + 0x18));\n    puVar1 = *(arg1 + 8);\n    *puVar1[1] = 0;\n    puVar1 = *puVar1;\n    while (puVar1 != NULL) {\n        puVar2 = *puVar1;\n        fcn.140009d40(puVar1);\n        puVar1 = puVar2;\n    }\n    puVar5 = NULL;\n    if ((*(arg1 + 8) != 0) &&\n       (puVar5 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x140040838, 0, *(arg1 + 8), in_R9, unaff_RBX),  puVar5 == 0)) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.140013804(uVar3);\n        puVar5 = fcn.1400138d8();\n        *puVar5 = uVar4;\n    }\n    return puVar5;\n}\n",
        "token_count": 1694
    },
    "140002f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.140002f00(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t arg1_00;\n    \n    uVar1 = arg1[3];\n    if (0xf < uVar1) {\n        iVar2 = *arg1;\n        arg1_00 = iVar2;\n        if (0xfff < uVar1 + 1) {\n            arg1_00 = *(iVar2 + -8);\n            if (0x1f < (iVar2 - arg1_00) - 8U) {\n                fcn.140010514(iVar2 - arg1_00, uVar1 + 0x28);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        fcn.140009d40(arg1_00);\n    }\n    arg1[2] = 0;\n    arg1[3] = 0xf;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 233
    },
    "140002f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.140002f60(uint64_t *arg1, ulong *arg2)\n\n{\n    uint64_t arg1_00;\n    uint64_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    ulong *arg2_00;\n    \n    uVar3 = 0;\n    *arg1 = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg2_00 = arg2;\n    if (0xf < arg2[3]) {\n        arg2_00 = *arg2;\n    }\n    uVar1 = arg2[2];\n    if (0x7fffffffffffffff < uVar1) {\n        fcn.140001210();\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    arg1[3] = 0xf;\n    if (uVar1 < 0x10) {\n        arg1[2] = uVar1;\n        fcn.14000bbe0(arg1, arg2_00, 0x10);\n        return arg1;\n    }\n    uVar6 = uVar1 | 0xf;\n    if (uVar6 < 0x8000000000000000) {\n        if (uVar6 < 0x16) {\n            uVar6 = 0x16;\n        }\n        arg1_00 = uVar6 + 1;\n        if (arg1_00 < 0x1000) {\n            if (arg1_00 != 0) {\n                uVar3 = fcn.140009d74(arg1_00);\n            }\n            goto code_r0x000140003036;\n        }\n        uVar3 = uVar6 + 0x28;\n        if (uVar3 <= arg1_00) {\n            fcn.140001170();\n            pcVar2 = swi(3);\n            puVar5 = (*pcVar2)();\n            return puVar5;\n        }\n    }\n    else {\n        uVar3 = 0x8000000000000027;\n        uVar6 = 0x7fffffffffffffff;\n    }\n    iVar4 = fcn.140009d74(uVar3);\n    if (iVar4 == 0) {\n        fcn.140010514();\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    uVar3 = iVar4 + 0x27U & 0xffffffffffffffe0;\n    *(uVar3 - 8) = iVar4;\ncode_r0x000140003036:\n    *arg1 = uVar3;\n    arg1[2] = uVar1;\n    arg1[3] = uVar6;\n    fcn.14000bbe0(uVar3, arg2_00, uVar1 + 1);\n    return arg1;\n}\n",
        "token_count": 672
    },
    "14000308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140003080(uint64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    if (0x7fffffffffffffff < arg3) {\n        fcn.140001210();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    arg1[3] = 0xf;\n    if (arg3 < 0x10) {\n        arg1[2] = arg3;\n        fcn.14000bbe0(arg1, arg2, arg3);\n        *(arg3 + arg1) = 0;\n        return;\n    }\n    uVar2 = arg3 | 0xf;\n    if (uVar2 < 0x8000000000000000) {\n        if (uVar2 < 0x16) {\n            uVar2 = 0x16;\n        }\n        uVar4 = uVar2 + 1;\n        if (uVar4 < 0x1000) {\n            if (uVar4 == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = fcn.140009d74(uVar4);\n            }\n            goto code_r0x000140003144;\n        }\n        arg1_00 = uVar2 + 0x28;\n        if (arg1_00 <= uVar4) {\n            fcn.140001170();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else {\n        arg1_00 = 0x8000000000000027;\n        uVar2 = 0x7fffffffffffffff;\n    }\n    iVar3 = fcn.140009d74(arg1_00);\n    if (iVar3 == 0) {\n        fcn.140010514();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = iVar3 + 0x27U & 0xffffffffffffffe0;\n    *(uVar4 - 8) = iVar3;\ncode_r0x000140003144:\n    *arg1 = uVar4;\n    arg1[2] = arg3;\n    arg1[3] = uVar2;\n    fcn.14000bbe0(uVar4, arg2, arg3);\n    *(uVar4 + arg3) = 0;\n    return;\n}\n",
        "token_count": 566
    },
    "1400038c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400038c0(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    fcn.1400093e8(arg1);\n    if (*(arg1 + 0x16) != 0) {\n        fcn.140012618(*(arg1 + 0x16));\n    }\n    *(arg1 + 0x16) = 0;\n    if (*(arg1 + 0x12) != 0) {\n        fcn.140012618(*(arg1 + 0x12));\n    }\n    *(arg1 + 0x12) = 0;\n    if (*(arg1 + 0xe) != 0) {\n        fcn.140012618(*(arg1 + 0xe));\n    }\n    *(arg1 + 0xe) = 0;\n    if (*(arg1 + 10) != 0) {\n        fcn.140012618(*(arg1 + 10));\n    }\n    *(arg1 + 10) = 0;\n    if (*(arg1 + 6) != 0) {\n        fcn.140012618(*(arg1 + 6));\n    }\n    *(arg1 + 6) = 0;\n    if (*(arg1 + 2) != 0) {\n        fcn.140012618(*(arg1 + 2));\n    }\n    *(arg1 + 2) = 0;\n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x000140012bbb. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14003fdb0);\n        return;\n    }\n    if (iVar1 < 8) {\n        sub.KERNEL32.dll_LeaveCriticalSection(iVar1 * 0x28 + 0x14003f1f0);\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "14000901": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140009010(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *arg1;\n    if (iVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x000140012bbb. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x14003fdb0);\n        return;\n    }\n    if (iVar1 < 8) {\n        sub.KERNEL32.dll_LeaveCriticalSection(iVar1 * 0x28 + 0x14003f1f0);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "140004d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.140004d00(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t arg1_00;\n    code *pcVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *puVar5;\n    char in_R8B;\n    \n    uVar3 = 0;\n    *arg1 = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    if (0x7fffffffffffffff < arg2) {\n        fcn.140001210();\n        pcVar1 = swi(3);\n        puVar5 = (*pcVar1)();\n        return puVar5;\n    }\n    arg1[3] = 0xf;\n    if (arg2 < 0x10) {\n        arg1[2] = arg2;\n        fcn.14000c2b0(arg1, in_R8B, arg2);\n        *(arg2 + arg1) = 0;\n        return arg1;\n    }\n    uVar2 = arg2 | 0xf;\n    if (uVar2 < 0x8000000000000000) {\n        if (uVar2 < 0x16) {\n            uVar2 = 0x16;\n        }\n        arg1_00 = uVar2 + 1;\n        if (arg1_00 < 0x1000) {\n            if (arg1_00 != 0) {\n                uVar3 = fcn.140009d74(arg1_00);\n            }\n            goto code_r0x000140004dd3;\n        }\n        uVar3 = uVar2 + 0x28;\n        if (uVar3 <= arg1_00) {\n            fcn.140001170();\n            pcVar1 = swi(3);\n            puVar5 = (*pcVar1)();\n            return puVar5;\n        }\n    }\n    else {\n        uVar3 = 0x8000000000000027;\n        uVar2 = 0x7fffffffffffffff;\n    }\n    iVar4 = fcn.140009d74(uVar3);\n    if (iVar4 == 0) {\n        fcn.140010514();\n        pcVar1 = swi(3);\n        puVar5 = (*pcVar1)();\n        return puVar5;\n    }\n    uVar3 = iVar4 + 0x27U & 0xffffffffffffffe0;\n    *(uVar3 - 8) = iVar4;\ncode_r0x000140004dd3:\n    *arg1 = uVar3;\n    arg1[2] = arg2;\n    arg1[3] = uVar2;\n    fcn.14000c2b0(uVar3, in_R8B, arg2);\n    *(uVar3 + arg2) = 0;\n    return arg1;\n}\n",
        "token_count": 641
    },
    "1400078a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nulong fcn.1400078a0(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    uint *puVar4;\n    ulong uVar5;\n    int64_t arg2_00;\n    ulong var_67h;\n    ulong var_77h;\n    ulong var_7fh;\n    uchar auStack248 [8];\n    int64_t iStack240;\n    uchar uStack232;\n    int64_t iStack224;\n    uchar uStack216;\n    int64_t iStack208;\n    ushort uStack200;\n    int64_t iStack192;\n    ushort uStack184;\n    int64_t iStack176;\n    uchar uStack168;\n    int64_t iStack160;\n    uchar uStack152;\n    uchar auStack144 [15];\n    ulong var_79h;\n    ulong var_71h;\n    ulong var_69h;\n    ulong var_61h;\n    ulong var_59h;\n    ulong var_51h;\n    ulong var_49h;\n    ulong var_41h;\n    ulong var_39h;\n    ulong var_31h;\n    ulong var_1h;\n    \n    if ((arg1 == NULL) || (*arg1 != 0)) {\n        return 4;\n    }\n    ppcVar2 = fcn.140009d74(0x30);\n    iVar1 = *(arg2 + 8);\n    if (iVar1 == 0) {\n        arg2_00 = 0x140038394;\n    }\n    else {\n        arg2_00 = *(iVar1 + 0x28);\n        if (arg2_00 == 0) {\n            arg2_00 = iVar1 + 0x30;\n        }\n    }\n    fcn.140008f98(auStack248, 0);\n    iStack240 = 0;\n    uStack232 = 0;\n    iStack224 = 0;\n    uStack216 = 0;\n    iStack208 = 0;\n    uStack200 = 0;\n    iStack192 = 0;\n    uStack184 = 0;\n    iStack176 = 0;\n    uStack168 = 0;\n    iStack160 = 0;\n    uStack152 = 0;\n    if (arg2_00 != 0) {\n        fcn.14000937c(auStack248, arg2_00);\n        *(ppcVar2 + 1) = 0;\n        *ppcVar2 = vtable.std::numpunct_char_.0;\n        fcn.14001262c();\n        fcn.1400096cc(auStack144);\n        ppcVar2[2] = NULL;\n        ppcVar2[4] = NULL;\n        ppcVar2[5] = NULL;\n        fcn.1400096cc(&var_59h + 1);\n        pcVar3 = fcn.140012660(1, 1);\n        if (pcVar3 == NULL) goto code_r0x000140007ac5;\n        *pcVar3 = 0x0;\n        ppcVar2[2] = pcVar3;\n        puVar4 = fcn.140012660(6, 1);\n        if (puVar4 == NULL) {\n            fcn.140008ec8();\n            pcVar3 = swi(3);\n            uVar5 = (*pcVar3)();\n            return uVar5;\n        }\n        *puVar4 = str.false._0_4_;\n        *(puVar4 + 1) = str.false._4_2_;\n        ppcVar2[4] = puVar4;\n        puVar4 = fcn.140012660(5, 1);\n        if (puVar4 != NULL) {\n            *puVar4 = str.true._0_4_;\n            *(puVar4 + 1) = str.true[4];\n            ppcVar2[5] = puVar4;\n            *(ppcVar2 + 3) = 0x2c2e;\n            *arg1 = ppcVar2;\n            fcn.1400093e8(auStack248);\n            if (iStack160 != 0) {\n                fcn.140012618(iStack160);\n            }\n            iStack160 = 0;\n            if (iStack176 != 0) {\n                fcn.140012618(iStack176);\n            }\n            iStack176 = 0;\n            if (iStack192 != 0) {\n                fcn.140012618(iStack192);\n            }\n            iStack192 = 0;\n            if (iStack208 != 0) {\n                fcn.140012618(iStack208);\n            }\n            iStack208 = 0;\n            if (iStack224 != 0) {\n                fcn.140012618(iStack224);\n            }\n            iStack224 = 0;\n            if (iStack240 != 0) {\n                fcn.140012618(iStack240);\n            }\n            iStack240 = 0;\n            fcn.140009010(auStack248);\n            return 4;\n        }\n        fcn.140008ec8();\n    }\n    fcn.140008f30(\"bad locale name\");\ncode_r0x000140007ac5:\n    fcn.140008ec8();\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 1215
    },
    "140007dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.140007dc0(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    \n    iVar8 = *0x14003ebd0 * *0x14003ebcc;\n    uVar6 = 0;\n    iVar3 = *(*(((((*0x14003ebcc - *0x14003ebc8 * *0x14003ebc8) - iVar8) - *0x14003ebcc * *0x14003ebd8) + *0x14003ebdc +\n                 *0x14003ebd0 * *0x14003ebd0 + *0x14003ebdc * *0x14003ebcc) * 0x140 + 0x3c + arg1) + arg1 +\n             (((*0x14003ebd4 * *0x14003ebd0 * *0x14003ebcc * *0x14003ebcc +\n                (((*0x14003ebdc + *0x14003ebc8 * -2) - *0x14003ebd8) + 0x11) * 2 +\n                *0x14003ebdc * *0x14003ebc8 * *0x14003ebc8 * *0x14003ebd0 * *0x14003ebd8 + iVar8 * *0x14003ebd8) -\n              *0x14003ebdc * *0x14003ebc8) + *0x14003ebcc * *0x14003ebd8) * 4) + arg1;\n    puVar7 = *(iVar3 + 0x20) + arg1;\n    if (*(iVar3 + 0x18) != 0) {\n        do {\n            pcVar4 = *puVar7 + arg1;\n            iVar5 = arg2 - pcVar4;\n            do {\n                cVar1 = *pcVar4;\n                cVar2 = pcVar4[iVar5];\n                if (cVar1 != cVar2) break;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                return *(*(iVar3 + 0x1c) + arg1 +\n                        *(*(iVar3 + 0x24) + arg1 +\n                         (((*0x14003ebd4 * *0x14003ebd4 * *0x14003ebcc * *0x14003ebd8 + *0x14003ebdc) * 4 -\n                          ((*0x14003ebcc + 1) * *0x14003ebd0 * 4 + 4) * *0x14003ebc8) + iVar8 * -4 + uVar6) * 2) * 4) +\n                       arg1;\n            }\n            uVar6 = uVar6 + 1;\n            puVar7 = puVar7 + 1;\n        } while (uVar6 < *(iVar3 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 735
    },
    "14000821": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_27h\n// WARNING: Variable defined which should be unmapped: lpMsg\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.140008210(ulong hInstance)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    code *pcVar4;\n    ulong uVar5;\n    int64_t in_GS_OFFSET;\n    ulong var_fh;\n    ulong lpMsg;\n    ulong var_27h;\n    ulong lpTableName;\n    ulong in_stack_ffffffffffffff18;\n    uint uVar6;\n    code *apcStack168 [2];\n    uint uStack152;\n    uint uStack148;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    uchar auStack88 [7];\n    ulong var_49h;\n    uchar auStack72 [7];\n    ulong ARG_0;\n    ulong var_31h;\n    ulong var_29h;\n    ulong var_21h;\n    ulong var_19h;\n    ulong var_11h;\n    ulong var_9h;\n    \n    uVar6 = in_stack_ffffffffffffff18 >> 0x20;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    (*_sym.imp.USER32.dll_LoadStringA)(hInstance, 0x67, 0x140040920);\n    (*_sym.imp.USER32.dll_LoadStringA)(hInstance, 0x6d, 0x1400408b0);\n    uStack152 = 0x50;\n    uVar3 = 0;\n    uStack144 = 0x1400084c0;\n    uStack148 = 3;\n    uStack136 = 0;\n    uStack128 = hInstance;\n    uStack120 = (*_sym.imp.USER32.dll_LoadIconA)(hInstance, 0x88);\n    uStack112 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    uStack104 = *0x1400386c0;\n    uStack96 = *0x1400386c8;\n    _auStack88 = 0x1400408b0;\n    *NULL = (*_sym.imp.USER32.dll_LoadIconA)(*0x1400386c0, uStack128, 0x8f);\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack152);\n    *0x1400408a8 = hInstance;\n    uVar2 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x1400408b0, 0x140040920, 0xcf0000, CONCAT44(uVar6, 0x80000000), 0, 0x80000000, 0, 0, 0, \n                       hInstance, 0);\n    if (uVar2 != 0) {\n        stack0x00000008 = 0;\n        pcVar4 = 0x1400081f0;\n        apcStack168[0] = NULL;\n        *0x140040870 = 0x1400081d0;\n        if (*(*(*(in_GS_OFFSET + 0x60) + 0x20) + 0x70) < 0x13) {\n            (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x1400408a8, 0x90, uVar2, 0x140008510, 0);\n            uVar5 = uVar3;\n        }\n        else {\n            *0x14003ebdc = 0;\n            *0x14003ebd8 = 0;\n            *0x14003ebd4 = 0;\n            pcVar4 = 0x140007f90;\n            *0x14003ebcc = 0;\n            uVar3 = 0x242;\n            *0x14003ebd0 = 0;\n            *0x14003ebc8 = 0;\n            *0x140040870 = 0x140007cb0;\n            uVar5 = 0x241;\n        }\n        (*pcVar4)(uVar5, apcStack168);\n        (*pcVar4)(uVar3, &var_fh + 1);\n        *0x140040888 = stack0x00000008;\n        *0x140040880 = 1;\n        *0x140040890 = 0;\n        *0x140040878 = 0;\n        (*apcStack168[0])(0x140040878);\n        uVar3 = (*_sym.imp.USER32.dll_LoadAcceleratorsA)(hInstance, 0x6d);\n        iVar1 = (*_sym.imp.USER32.dll_GetMessageA)(auStack72, 0, 0, 0);\n        while (iVar1 != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_TranslateAcceleratorA)(_auStack72, uVar3, auStack72);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(auStack72);\n                (*_sym.imp.USER32.dll_DispatchMessageA)(auStack72);\n            }\n            iVar1 = (*_sym.imp.USER32.dll_GetMessageA)(auStack72, 0, 0, 0);\n        }\n        uVar2 = var_31h._1_4_;\n    }\n    return uVar2;\n}\n",
        "token_count": 1252
    },
    "1400099a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.1400099a0(void)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.14000caf8();\n    bVar1 = false;\n    if (iVar2 != 0) {\n        bVar1 = 0 < *(iVar2 + 0x30);\n    }\n    return bVar1;\n}\n",
        "token_count": 82
    },
    "140009a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.140009a0c(ulong arg1, ulong arg2, ulong arg3, ulong arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n                  ulong noname_7, ulong arg_50h, ulong arg_58h, ulong CodePage, ulong arg_68h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint *puVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_30h;\n    ulong var_38h;\n    ulong var_40h;\n    ulong var_48h;\n    uchar auStack120 [32];\n    ulong uStack88;\n    uint uStack80;\n    uint auStack40 [2];\n    uint64_t uStack32;\n    \n    puVar8 = &stack0xffffffffffffff88;\n    puVar9 = &stack0xffffffffffffff88;\n    uStack32 = *0x14003e020 ^ &stack0xffffffffffffffd8;\n    iVar2 = arg4;\n    if (0 < arg4) {\n        iVar1 = fcn.140016490(arg3, arg4);\n        iVar2 = iVar1 + 1;\n        if (arg4 <= iVar1) {\n            iVar2 = iVar1;\n        }\n    }\n    uStack80 = 0;\n    uStack88 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(noname_6, (-(var_48h != 0) & 8U) + 1, arg3, iVar2);\n    puVar10 = &stack0xffffffffffffff88;\n    if (iVar1 == 0) goto code_r0x000140009cdc;\n    uVar3 = iVar1 * 2 + 0x10;\n    uVar3 = -(iVar1 * 2 < uVar3) & uVar3;\n    if (uVar3 == 0) {\n        puVar4 = NULL;\ncode_r0x000140009cc4:\n        puVar10 = puVar9;\n        if (puVar4 == NULL) goto code_r0x000140009cdc;\n    }\n    else {\n        if (uVar3 < 0x401) {\n            uVar7 = uVar3 + 0xf;\n            if (uVar7 <= uVar3) {\n                uVar7 = 0xffffffffffffff0;\n            }\n            uVar7 = uVar7 & 0xfffffffffffffff0;\n            fcn.14000a380();\n            iVar5 = -uVar7;\n            puVar9 = &stack0xffffffffffffff88 + iVar5;\n            puVar8 = &stack0xffffffffffffff88 + iVar5;\n            puVar4 = &stack0xffffffffffffffd8 + iVar5;\n            if (puVar4 == NULL) goto code_r0x000140009cc4;\n            *puVar4 = 0xcccc;\ncode_r0x000140009b01:\n            puVar4 = puVar4 + 4;\n            puVar9 = puVar8;\n        }\n        else {\n            puVar4 = fcn.140012bc4(uVar3);\n            puVar9 = &stack0xffffffffffffff88;\n            if (puVar4 != NULL) {\n                *puVar4 = 0xdddd;\n                goto code_r0x000140009b01;\n            }\n        }\n        if (puVar4 == NULL) goto code_r0x000140009cc4;\n        *(puVar9 + 0x28) = iVar1;\n        *(puVar9 + 0x20) = puVar4;\n        *(puVar9 + -8) = 0x140009b2c;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(noname_6, 1, arg3, iVar2);\n        if (iVar2 == 0) goto code_r0x000140009cc4;\n        *(puVar9 + 0x40) = 0;\n        *(puVar9 + 0x38) = 0;\n        *(puVar9 + 0x30) = 0;\n        *(puVar9 + 0x28) = 0;\n        *(puVar9 + 0x20) = 0;\n        *(puVar9 + -8) = 0x140009b63;\n        iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)(arg1, arg2, puVar4, iVar1);\n        if (iVar2 == 0) goto code_r0x000140009cc4;\n        puVar10 = puVar9;\n        if ((arg2 & 0x400) == 0) {\n            uVar3 = iVar2 * 2 + 0x10;\n            uVar3 = -(iVar2 * 2 < uVar3) & uVar3;\n            if (uVar3 != 0) {\n                if (uVar3 < 0x401) {\n                    *(puVar9 + -8) = 0x140009c03;\n                    iVar5 = fcn.14000a380();\n                    iVar5 = -iVar5;\n                    puVar10 = puVar9 + iVar5;\n                    puVar6 = puVar9 + iVar5 + 0x50;\n                    if (puVar6 == NULL) goto code_r0x000140009cc9;\n                    *puVar6 = 0xcccc;\n                    puVar9 = puVar9 + iVar5;\ncode_r0x000140009c2f:\n                    puVar6 = puVar6 + 4;\n                    puVar10 = puVar9;\n                }\n                else {\n                    *(puVar9 + -8) = 0x140009c21;\n                    puVar6 = fcn.140012bc4(uVar3);\n                    if (puVar6 != NULL) {\n                        *puVar6 = 0xdddd;\n                        goto code_r0x000140009c2f;\n                    }\n                }\n                if (puVar6 != NULL) {\n                    *(puVar10 + 0x40) = 0;\n                    *(puVar10 + 0x38) = 0;\n                    *(puVar10 + 0x30) = 0;\n                    *(puVar10 + 0x28) = iVar2;\n                    *(puVar10 + 0x20) = puVar6;\n                    *(puVar10 + -8) = 0x140009c69;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)(arg1, arg2, puVar4, iVar1);\n                    if (iVar1 != 0) {\n                        *(puVar10 + 0x38) = 0;\n                        *(puVar10 + 0x30) = 0;\n                        if (noname_5 == 0) {\n                            *(puVar10 + 0x28) = 0;\n                            *(puVar10 + 0x20) = 0;\n                        }\n                        else {\n                            *(puVar10 + 0x28) = noname_5;\n                            *(puVar10 + 0x20) = var_30h;\n                        }\n                        *(puVar10 + -8) = 0x140009cab;\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(noname_6, 0, puVar6, iVar2);\n                    }\n                    if (puVar6[-4] == 0xdddd) {\n                        *(puVar10 + -8) = 0x140009cbe;\n                        fcn.140012618(puVar6 + -4);\n                    }\n                }\n            }\n        }\n        else if (noname_5 != 0) {\n            if (iVar2 <= noname_5) {\n                *(puVar9 + 0x40) = 0;\n                *(puVar9 + 0x38) = 0;\n                *(puVar9 + 0x30) = 0;\n                *(puVar9 + 0x28) = noname_5;\n                *(puVar9 + 0x20) = var_30h;\n                *(puVar9 + -8) = 0x140009bbc;\n                iVar2 = (*_sym.imp.KERNEL32.dll_LCMapStringEx)(arg1, arg2, puVar4, iVar1);\n                if (iVar2 != 0) goto code_r0x000140009cc9;\n            }\n            goto code_r0x000140009cc4;\n        }\n    }\ncode_r0x000140009cc9:\n    if (puVar4[-4] == 0xdddd) {\n        *(puVar10 + -8) = 0x140009cda;\n        fcn.140012618(puVar4 + -4);\n    }\ncode_r0x000140009cdc:\n    uVar3 = uStack32 ^ &stack0xffffffffffffffd8;\n    *(puVar10 + -8) = 0x140009ce8;\n    fcn.140009d20(uVar3);\n    return;\n}\n",
        "token_count": 2055
    },
    "14000ab8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000ab88(void)\n\n{\n    int64_t *piVar1;\n    \n    for (piVar1 = 0x140039f68; piVar1 < 0x140039f68; piVar1 = piVar1 + 1) {\n        if (*piVar1 != 0) {\n            (**0x14002a3e8)();\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "14000acb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14000acb8(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = *(arg1 + 0xc);\n    do {\n        if (uVar2 == 0) {\n            return 0;\n        }\n        uVar2 = uVar2 - 1;\n        iVar1 = fcn.14000ca1c();\n        iVar1 = *(arg1 + 0x10) + *(iVar1 + 0x60) + uVar2 * 0x14;\n    } while ((arg2 <= *(iVar1 + 4)) || (*(iVar1 + 8) < arg2));\n    return iVar1;\n}\n",
        "token_count": 162
    },
    "14000af0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.14000af0c(int64_t *arg1, ulong *arg2, int64_t arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    int64_t iStackX8;\n    \n    uVar8 = *(arg3 + 0xc);\n    iVar2 = fcn.14000cc50(arg3, arg2);\n    *arg4 = *arg1;\n    do {\n        do {\n            if (uVar8 == 0) {\n                return arg4;\n            }\n            uVar8 = uVar8 - 1;\n            iVar7 = *(arg3 + 0x10) + uVar8 * 0x14 + arg2[1];\n        } while ((iVar2 <= *(iVar7 + 4)) || (*(iVar7 + 8) < iVar2));\n        puVar3 = (*_sym.imp.KERNEL32.dll_RtlLookupFunctionEntry)(*arg2, &iStackX8, 0);\n        uVar5 = 0;\n        iVar9 = *(iVar7 + 0x10) + iStackX8;\n        uVar1 = *(iVar7 + 0xc);\n        if (uVar1 != 0) {\n            piVar6 = iVar9 + 0xc;\n            do {\n                if (*piVar6 == *puVar3) break;\n                uVar4 = uVar5 + 1;\n                uVar5 = uVar4;\n                piVar6 = piVar6 + 5;\n            } while (uVar4 < uVar1);\n        }\n        if (uVar5 < uVar1) {\n            *arg4 = *(*(iVar9 + 0x10 + uVar5 * 0x14) + *arg1);\n            return arg4;\n        }\n    } while( true );\n}\n",
        "token_count": 462
    },
    "14000cbb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14000cbb4(int64_t *arg1, ulong *arg2, int64_t arg3)\n\n{\n    if (*(*(arg3 + 0x1c) + *arg1) == -2) {\n        fcn.14000cc60(arg3, arg2, *arg2);\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "14000cc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14000cc60(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x18);\n        iVar1 = *(arg2 + 8);\n        if (iVar1 + iVar5 != 0) {\n            uVar3 = 0;\n            if (*(arg1 + 0x14) != 0) {\n                do {\n                    if (arg3 < *(iVar5 + uVar3 * 8 + iVar1) + iVar1) break;\n                    uVar4 = uVar3 + 1;\n                    uVar3 = uVar4;\n                } while (uVar4 < *(arg1 + 0x14));\n                if (uVar3 != 0) {\n                    return *(iVar1 + (uVar3 - 1) * 8 + 4 + iVar5);\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    fcn.140016438();\n    pcVar2 = swi(3);\n    uVar3 = (*pcVar2)();\n    return uVar3;\n}\n",
        "token_count": 290
    },
    "14000fce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14000fce4(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = *0x14003fc50;\n    while (uVar1 != 0) {\n        uVar1 = uVar1 - 1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(uVar1 * 0x28 + 0x14003fc28);\n        *0x14003fc50 = *0x14003fc50 - 1;\n    }\n    return 1;\n}\n",
        "token_count": 114
    },
    "14001009": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140010090(ulong arg1, ulong *arg2)\n\n{\n    fcn.14000fc30(arg1, *arg2, 2);\n    return;\n}\n",
        "token_count": 41
    },
    "1400100c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400100c0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong arg1_00;\n    \n    pcVar1 = fcn.14000fc30(arg1, arg2, arg4);\n    (*pcVar1)(arg3);\n    arg1_00 = fcn.14000fc60();\n    fcn.14000fc30(arg1_00, arg2, 2);\n    return;\n}\n",
        "token_count": 110
    },
    "14001017": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.140010170(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t lpFlsData;\n    uint auStackX8 [2];\n    \n    iVar1 = *arg1;\n    lpFlsData = 0;\n    if (iVar1 == 0) {\n        auStackX8[0] = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*(arg1 + 2) == '\\0') {\n            arg1[1] = 0;\n            *(arg1 + 2) = 1;\n        }\n        else {\n            lpFlsData = arg1[1];\n        }\n        iVar1 = fcn.14001a554(auStackX8, lpFlsData);\n        *arg1 = iVar1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(auStackX8[0]);\n    }\n    return iVar1;\n}\n",
        "token_count": 202
    },
    "1400101d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.1400101dc(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg2 + 0x10) == '\\0') {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg2 + 8) = 0;\n        *(arg2 + 0x10) = 1;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n    }\n    else {\n        iVar2 = *(arg2 + 8);\n    }\n    return arg1 + iVar2 * 8;\n}\n",
        "token_count": 149
    },
    "14001073": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14001073c(int64_t arg1, uint64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    \n    if (arg2 < 0x8000000000000000) {\n        arg2 = arg2 * 2;\n        if (((*(arg1 + 0x408) == 0) && (arg2 < 0x401)) || (arg2 < *(arg1 + 0x400) || arg2 == *(arg1 + 0x400))) {\n            uVar2 = 0x7fffffffffffff01;\n        }\n        else {\n            iVar1 = fcn.14001a6b0(arg2);\n            if (iVar1 != 0) {\n                fcn.14001a674(*(arg1 + 0x408));\n                *(arg1 + 0x408) = iVar1;\n                *(arg1 + 0x400) = arg2;\n            }\n            uVar2 = fcn.14001a674(0);\n            uVar2 = uVar2 & 0xffffffffffffff00 | iVar1 != 0;\n        }\n    }\n    else {\n        *(arg3 + 0x30) = 1;\n        uVar2 = 0x7fffffffffffff00;\n        *(arg3 + 0x2c) = 0xc;\n    }\n    return uVar2;\n}\n",
        "token_count": 315
    },
    "1400122f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400122f0(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    \n    arg1_00 = fcn.140010108(arg1);\n    *(arg1 + 0x18) = *(arg1_00 + 0x90);\n    *(arg1 + 0x20) = *(arg1_00 + 0x88);\n    fcn.14001a744(arg1_00, arg1 + 0x18);\n    fcn.14001a7b0(arg1_00, arg1 + 0x20);\n    if ((*(arg1_00 + 0x3a8) & 2) == 0) {\n        *(arg1_00 + 0x3a8) = *(arg1_00 + 0x3a8) | 2;\n        *(arg1 + 0x28) = 2;\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "14001a6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14001a6b0(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x140040838, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.140019040();\n        } while ((iVar1 != 0) && (iVar1 = fcn.140016a70(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.1400138d8();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 198
    },
    "14001384": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001384c(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint64_t arg1_00;\n    ulong in_RDX;\n    \n    arg1_00 = arg1 & 0xffffffff;\n    iVar2 = fcn.14001a48c(arg1, in_RDX);\n    if (iVar2 == 0) {\n        puVar3 = 0x14003e11c;\n    }\n    else {\n        puVar3 = iVar2 + 0x24;\n    }\n    *puVar3 = arg1_00;\n    uVar1 = fcn.140013804(arg1_00);\n    iVar2 = fcn.14001a48c(arg1_00, in_RDX);\n    puVar3 = 0x14003e118;\n    if (iVar2 != 0) {\n        puVar3 = iVar2 + 0x20;\n    }\n    *puVar3 = uVar1;\n    return;\n}\n",
        "token_count": 228
    },
    "14001389": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140013894(ulong arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    \n    *(arg2 + 0x38) = 1;\n    *(arg2 + 0x34) = arg1;\n    uVar1 = fcn.140013804(arg1);\n    *(arg2 + 0x2c) = uVar1;\n    *(arg2 + 0x30) = 1;\n    return;\n}\n",
        "token_count": 103
    },
    "140016a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.140016a70(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    \n    uVar2 = fcn.140016ab0();\n    if (uVar2 != 0) {\n        iVar1 = (**0x14002a3f0)(arg1);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "1400172f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400172fc(void)\n\n{\n    int64_t iVar1;\n    int64_t arg1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*0x140040068 == 0) {\n        fcn.140020320();\n        arg1 = fcn.14002070c();\n        if (arg1 == 0) {\n            fcn.14001a674(0);\n            uVar2 = 0xffffffff;\n        }\n        else {\n            iVar3 = fcn.14001712c(arg1);\n            iVar1 = iVar3;\n            if (iVar3 == 0) {\n                uVar2 = 0xffffffff;\n                iVar3 = *0x140040068;\n                iVar1 = *0x140040080;\n            }\n            *0x140040080 = iVar1;\n            *0x140040068 = iVar3;\n            fcn.14001a674(0);\n            fcn.14001a674(arg1);\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 248
    },
    "14001737": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140017374(int64_t *arg1, int64_t *arg2)\n\n{\n    if (arg1 != arg2) {\n        do {\n            if (*arg1 != 0) {\n                (**0x14002a3f0)();\n            }\n            arg1 = arg1 + 1;\n        } while (arg1 != arg2);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "1400173b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.1400173b8(int64_t *arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    bool bVar2;\n    \n    bVar2 = arg1 == arg2;\n    while( true ) {\n        if (bVar2) {\n            return 0;\n        }\n        if ((*arg1 != 0) && (uVar1 = (**0x14002a3f0)(),  uVar1 != 0)) break;\n        arg1 = arg1 + 1;\n        bVar2 = arg1 == arg2;\n    }\n    return uVar1;\n}\n",
        "token_count": 136
    },
    "14001740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140017400(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    fcn.140012b28(*arg2);\n    fcn.140017438(arg3);\n    fcn.140012b7c(*arg4);\n    return;\n}\n",
        "token_count": 73
    },
    "140018fd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.140018fd4(uint64_t arg1, uint64_t arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    \n    uVar3 = 0;\n    arg1_00 = arg1;\n    if (arg2 != 0) {\n        do {\n            uVar1 = *(arg1 + uVar3 * 2);\n            iVar2 = fcn.140012ef4(arg1_00);\n            if ((0xff < uVar1) || (uVar1 = *(iVar2 + uVar1 * 2),  arg1_00 = uVar1,  (uVar1 & 0x103) == 0)) {\n                return 0;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg2);\n    }\n    return 1;\n}\n",
        "token_count": 208
    },
    "14001907": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.14001907c(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint uVar1;\n    \n    fcn.140012b28(*arg2);\n    uVar1 = fcn.1400190f4(arg3);\n    fcn.140012b7c(*arg4);\n    return uVar1;\n}\n",
        "token_count": 90
    },
    "1400190b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1400190b8(ulong noname_0, uint32_t *arg2, ulong arg3, uint32_t *arg4)\n\n{\n    uint uVar1;\n    \n    fcn.140012b28(*arg2);\n    uVar1 = fcn.1400192a4(arg3);\n    fcn.140012b7c(*arg4);\n    return uVar1;\n}\n",
        "token_count": 91
    },
    "14001944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.140019440(ulong arg1, ulong arg2)\n\n{\n    ulong uStackX8;\n    ulong uStackX16;\n    ulong var_20h_2;\n    ulong var_28h;\n    ulong var_20h;\n    ulong *var_18h;\n    ulong *var_bp_10h;\n    \n    var_18h = &uStackX8;\n    var_bp_10h = &uStackX16;\n    var_28h._0_4_ = 2;\n    var_20h._0_4_ = 2;\n    uStackX8 = arg1;\n    uStackX16 = arg2;\n    fcn.14001907c(&var_20h_2, &var_20h, &var_18h, &var_28h);\n    return;\n}\n",
        "token_count": 192
    },
    "1400193d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400193d4(ulong arg1)\n\n{\n    ulong uStackX8;\n    uchar auStackX16 [8];\n    uint auStackX24 [2];\n    uint auStackX32 [2];\n    ulong *puStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    puStack24 = &uStackX8;\n    auStackX24[0] = 2;\n    auStackX32[0] = 2;\n    uStackX8 = arg1;\n    fcn.1400190b8(auStackX16, auStackX32, &puStack24, auStackX24);\n    return;\n}\n",
        "token_count": 153
    },
    "14001a71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a710(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x1400400d8) && ((*0x14003e3bc & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.140021ef4(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "14001a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a744(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x1400400d8)) && ((*0x14003e3bc & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.140021ef4(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "14001a77": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a77c(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*arg2 != *0x1400407f0) && ((*0x14003e3bc & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.140020380(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "14001a7b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001a7b0(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_R8;\n    \n    if ((*arg2 != *(in_R8 * 8 + 0x1400407f0)) && ((*0x14003e3bc & *(arg1 + 0x3a8)) == 0)) {\n        iVar1 = fcn.140020380(arg1);\n        *arg2 = iVar1;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "14001b5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.14001b5e4(int32_t *arg1, uchar *arg2, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t in_R9W;\n    uint64_t uStackX16;\n    uint16_t auStackX32 [4];\n    int64_t in_stack_00000028;\n    \n    if ((arg2 == NULL) && (arg3 != 0)) {\n        if (arg1 == NULL) {\n            return 0;\n        }\n        *arg1 = 0;\n        return 0;\n    }\n    if (arg1 != NULL) {\n        *arg1 = -1;\n    }\n    if (arg3 < 0x80000000) {\n        auStackX32[0] = in_R9W;\n        if (*(in_stack_00000028 + 0x28) == '\\0') {\n            fcn.1400122f0(in_stack_00000028);\n        }\n        uVar1 = *(*(in_stack_00000028 + 0x18) + 0xc);\n        if (uVar1 == 0xfde9) {\n            uStackX16 = 0;\n            iVar2 = fcn.140024d88(arg2, auStackX32[0], &uStackX16, in_stack_00000028);\n            if (arg1 != NULL) {\n                *arg1 = iVar2;\n            }\n            if (iVar2 < 5) {\n                return 0;\n            }\n            if (*(in_stack_00000028 + 0x30) != '\\0') {\n                return *(in_stack_00000028 + 0x2c);\n            }\n            return 0;\n        }\n        if (*(*(in_stack_00000028 + 0x18) + 0x138) == 0) {\n            if (0xff < auStackX32[0]) {\n                if ((arg2 != NULL) && (arg3 != 0)) {\n                    fcn.14000c2b0(arg2, 0, arg3);\n                }\n                goto code_r0x00014001b6c6;\n            }\n            if (arg2 == NULL) {\ncode_r0x00014001b6f2:\n                if (arg1 != NULL) {\n                    *arg1 = 1;\n                }\n                return 0;\n            }\n            if (arg3 != 0) {\n                *arg2 = auStackX32[0];\n                goto code_r0x00014001b6f2;\n            }\n        }\n        else {\n            uStackX16 = uStackX16 & 0xffffffff00000000;\n            iVar2 = fcn.14001ece4(uVar1, 0, auStackX32, 1);\n            if (iVar2 != 0) {\n                if (uStackX16 == 0) {\n                    if (arg1 == NULL) {\n                        return 0;\n                    }\n                    *arg1 = iVar2;\n                    return 0;\n                }\ncode_r0x00014001b6c6:\n                *(in_stack_00000028 + 0x2c) = 0x2a;\n                *(in_stack_00000028 + 0x30) = 1;\n                return 0x2a;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 != 0x7a) goto code_r0x00014001b6c6;\n            if ((arg2 != NULL) && (arg3 != 0)) {\n                fcn.14000c2b0(arg2, 0, arg3);\n            }\n        }\n        uVar3 = 0x22;\n    }\n    else {\n        uVar3 = 0x16;\n    }\n    *(in_stack_00000028 + 0x2c) = uVar3;\n    *(in_stack_00000028 + 0x30) = 1;\n    fcn.140010428(0, 0, 0, 0);\n    return uVar3;\n}\n",
        "token_count": 912
    },
    "14001b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.14001b90c(int64_t arg1)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    \n    if (arg1 == 0) {\n        puVar2 = fcn.1400138d8();\n        *puVar2 = 0x16;\n        fcn.1400104f4();\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = *(arg1 + 0x18);\n    }\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "14001c52": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.14001c524(ulong arg1, ulong arg2, ulong noname_2, ulong noname_3, ulong arg_30h, ulong arg_38h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_XMM2_Qa;\n    ulong in_XMM3_Qa;\n    uint uStackX24;\n    ulong var_24h;\n    uint var_2ch;\n    ulong var_30h;\n    int64_t var_28h;\n    ulong var_bp_20h;\n    uint var_bp_18h;\n    uint var_14h;\n    ulong var_10h;\n    \n    iVar2 = 0;\n    piVar1 = 0x140030540;\n    do {\n        if (*piVar1 == arg2) {\n            var_28h = *(iVar2 * 0x10 + 0x140030548);\n            if (var_28h != 0) {\n                uStackX24 = in_XMM2_Qa;\n                var_bp_20h._0_4_ = uStackX24;\n                var_24h._0_4_ = in_XMM2_Qa >> 0x20;\n                var_bp_20h._4_4_ = var_24h;\n                var_24h._4_4_ = in_XMM3_Qa;\n                var_bp_18h = var_24h._4_4_;\n                var_2ch = in_XMM3_Qa >> 0x20;\n                var_14h = var_2ch;\n                var_30h._0_4_ = arg1;\n                var_10h = arg_30h;\n                fcn.14001c7bc(arg_38h, 0xffc0);\n                iVar2 = fcn.140016ca4(&var_30h);\n                if (iVar2 != 0) {\n                    return var_10h;\n                }\n                fcn.14001c4f4(arg1);\n                return var_10h;\n            }\n            goto code_r0x00014001c568;\n        }\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 4;\n    } while (piVar1 < 0x140030710);\n    var_28h = 0;\ncode_r0x00014001c568:\n    fcn.14001c7bc(arg_38h, 0xffc0);\n    fcn.14001c4f4(arg1);\n    return arg_30h;\n}\n",
        "token_count": 569
    },
    "14001cb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001cb54(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.14001c998(0x19, \"AppPolicyGetProcessTerminationMethod\", 0x140030e84, \n                          \"AppPolicyGetProcessTerminationMethod\");\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001cb9a. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x14002a3f0)(0xfffffffffffffffa, arg1);\n        return uVar2;\n    }\n    return 0xc0000225;\n}\n",
        "token_count": 160
    },
    "14001cba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.14001cbac(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.14001c998(0, \"AreFileApisANSI\", 0x140030d48, 0x140030d4c);\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001cbdf. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar2 = (**0x14002a3f0)();\n        return uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "14001cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001cd40(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.14001c998(0xc, \"GetUserDefaultLocaleName\", 0x140030de0, \"GetUserDefaultLocaleName\");\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetUserDefaultLCID)();\n        fcn.14001ce80(uVar2, arg1, arg2, 0);\n    }\n    else {\n        (**0x14002a3f0)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "14001ce1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001ce1c(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.14001c998(0x10, \"IsValidLocaleName\", 0x140030e10, \"IsValidLocaleName\");\n    if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00014001ce5b. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x14002a3f0)(arg1);\n        return;\n    }\n    uVar2 = fcn.14001cff0(arg1, 0);\n    // WARNING: Could not recover jumptable at 0x00014001ce78. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_IsValidLocale)(uVar2, 1);\n    return;\n}\n",
        "token_count": 206
    },
    "14001cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001cf04(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    ulong in_stack_00000048;\n    \n    iVar2 = fcn.14001c998(0x11, 0x140030e38, 0x140030e30, 0x140030e38);\n    if (iVar2 == 0) {\n        uVar1 = fcn.14001cff0(arg1, 0);\n        (*_sym.imp.KERNEL32.dll_LCMapStringW)(uVar1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n    }\n    else {\n        (**0x14002a3f0)(arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                        in_stack_00000040, in_stack_00000048);\n    }\n    return;\n}\n",
        "token_count": 267
    },
    "14001cff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14001cff0(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    char *arg2_00;\n    \n    arg2_00 = \"LocaleNameToLCID\";\n    iVar1 = fcn.14001c998(0x13, \"LocaleNameToLCID\", 0x140030e68, \"LocaleNameToLCID\");\n    if (iVar1 == 0) {\n        fcn.1400252b8(arg1, arg2_00);\n    }\n    else {\n        (**0x14002a3f0)(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "14001d36": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.14001d364(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    ulong uStackX8;\n    uint8_t *puStackX16;\n    \n    uVar3 = 0;\n    if (arg1 != NULL) {\n        if (arg3 == 0) {\n            return 0;\n        }\n        *arg1 = 0;\n    }\n    puStackX16 = arg2;\n    if (arg2 == NULL) {\n        *(arg4 + 0x30) = 1;\n        *(arg4 + 0x2c) = 0x16;\n        fcn.140010428(0, 0, 0, 0);\n        uVar3 = 0xffffffffffffffff;\n    }\n    else {\n        if (*(arg4 + 0x28) == '\\0') {\n            fcn.1400122f0(arg4);\n        }\n        uVar1 = *(*(arg4 + 0x18) + 0xc);\n        if (uVar1 == 0xfde9) {\n            uStackX8 = 0;\n            uVar3 = fcn.140024e70(arg1, &puStackX16, arg3, &uStackX8);\n        }\n        else {\n            iVar4 = *(*(arg4 + 0x18) + 0x138);\n            if (arg1 == NULL) {\n                uVar3 = 0xffffffffffffffff;\n                if (iVar4 == 0) {\n                    do {\n                        uVar3 = uVar3 + 1;\n                    } while (puStackX16[uVar3] != 0);\n                    return uVar3;\n                }\n                iVar2 = fcn.14001ec54(uVar1, 9);\n                iVar4 = iVar2;\n                if (iVar4 == 0) {\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 0x2a;\n                    return 0xffffffffffffffff;\n                }\n            }\n            else {\n                if (iVar4 == 0) {\n                    if (arg3 == 0) {\n                        return 0;\n                    }\n                    do {\n                        *arg1 = puStackX16[uVar3];\n                        if (puStackX16[uVar3] == 0) {\n                            return uVar3;\n                        }\n                        uVar3 = uVar3 + 1;\n                        arg1 = arg1 + 1;\n                    } while (uVar3 < arg3);\n                    return uVar3;\n                }\n                uVar6 = arg3;\n                iVar2 = fcn.14001ec54(uVar1, 9);\n                iVar4 = iVar2;\n                if (iVar4 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar2 == 0x7a) {\n                        arg3 = arg3 & 0xffffffff;\n                        puVar5 = puStackX16;\n                        while (uVar6 != 0) {\n                            uVar6 = arg3 - 1;\n                            arg3 = uVar6;\n                            if (*puVar5 == 0) break;\n                            if ((*(**(arg4 + 0x18) + *puVar5 * 2) < 0) && (puVar5 = puVar5 + 1,  *puVar5 == 0))\n                            goto code_r0x00014001d48b;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = fcn.14001ec54(*(*(arg4 + 0x18) + 0xc), 1);\n                        if (iVar2 != 0) {\n                            return iVar2;\n                        }\n                    }\ncode_r0x00014001d48b:\n                    *(arg4 + 0x30) = 1;\n                    *(arg4 + 0x2c) = 0x2a;\n                    *arg1 = 0;\n                    return 0xffffffffffffffff;\n                }\n            }\n            uVar3 = iVar4 - 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 956
    },
    "14001e0f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.14001e0f0(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4, ulong noname_4, ulong noname_5, ulong noname_6, \n                  ulong noname_7, ulong noname_8, ulong noname_9, ulong arg_60h, ulong arg_68h, ulong arg_70h, \n                  ulong arg_78h, ulong arg_80h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint *arg3_00;\n    int64_t iVar5;\n    uint *arg3_01;\n    uint64_t uVar6;\n    uint *puVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *puVar10;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_40h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    uchar auStack136 [32];\n    ulong uStack104;\n    uint uStack96;\n    uint auStack56 [2];\n    uint64_t uStack48;\n    \n    puVar8 = &stack0xffffffffffffff78;\n    puVar9 = &stack0xffffffffffffff78;\n    puVar10 = &stack0xffffffffffffff78;\n    uStack48 = *0x14003e020 ^ &stack0xffffffffffffffc8;\n    if (0 < noname_4) {\n        fcn.140016490(arg4, noname_4);\n    }\n    if (noname_7 == 0) {\n        noname_7._0_4_ = *(*arg1 + 0xc);\n    }\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.14001ec54(noname_7, (-(noname_8 != 0) & 8) + 1);\n    arg3_00 = NULL;\n    if (uVar1 == 0) goto code_r0x00014001e3fb;\n    uVar4 = uVar1 * 2 + 0x10;\n    uVar4 = -(uVar1 * 2 < uVar4) & uVar4;\n    puVar10 = &stack0xffffffffffffff78;\n    if (uVar4 == 0) {\ncode_r0x00014001e3e1:\n        if (arg3_00 == NULL) goto code_r0x00014001e3fb;\n    }\n    else {\n        if (uVar4 < 0x401) {\n            uVar6 = uVar4 + 0xf;\n            if (uVar6 <= uVar4) {\n                uVar6 = 0xffffffffffffff0;\n            }\n            uVar6 = uVar6 & 0xfffffffffffffff0;\n            fcn.14000a380();\n            iVar5 = -uVar6;\n            puVar8 = &stack0xffffffffffffff78 + iVar5;\n            arg3_00 = &stack0xffffffffffffffc8 + iVar5;\n            puVar10 = &stack0xffffffffffffff78 + iVar5;\n            if (arg3_00 == NULL) goto code_r0x00014001e3e1;\n            *arg3_00 = 0xcccc;\ncode_r0x00014001e1fc:\n            arg3_00 = arg3_00 + 4;\n            puVar9 = puVar8;\n        }\n        else {\n            arg3_00 = fcn.14001a6b0(uVar4);\n            if (arg3_00 != NULL) {\n                *arg3_00 = 0xdddd;\n                goto code_r0x00014001e1fc;\n            }\n        }\n        puVar10 = puVar9;\n        if (arg3_00 == NULL) goto code_r0x00014001e3e1;\n        *(puVar9 + 0x28) = uVar1;\n        *(puVar9 + 0x20) = arg3_00;\n        *(puVar9 + -8) = 0x14001e226;\n        iVar2 = fcn.14001ec54(noname_7, 1);\n        if (iVar2 == 0) goto code_r0x00014001e3e1;\n        *(puVar9 + 0x40) = 0;\n        *(puVar9 + 0x38) = 0;\n        *(puVar9 + 0x30) = 0;\n        *(puVar9 + 0x28) = 0;\n        *(puVar9 + 0x20) = 0;\n        *(puVar9 + -8) = 0x14001e259;\n        uVar3 = fcn.14001cf04(arg2, arg3, arg3_00, uVar1);\n        puVar7 = NULL;\n        if (uVar3 == 0) goto code_r0x00014001e3e1;\n        if ((arg3 & 0x400) == 0) {\n            uVar4 = uVar3 * 2 + 0x10;\n            uVar4 = -(uVar3 * 2 < uVar4) & uVar4;\n            arg3_01 = puVar7;\n            if (uVar4 == 0) {\ncode_r0x00014001e3c4:\n                if (arg3_01 != NULL) {\ncode_r0x00014001e3c9:\n                    if (arg3_01[-4] == 0xdddd) {\n                        *(puVar10 + -8) = 0x14001e3da;\n                        fcn.14001a674(arg3_01 + -4);\n                    }\n                }\n            }\n            else {\n                if (uVar4 < 0x401) {\n                    *(puVar9 + -8) = 0x14001e2fc;\n                    iVar5 = fcn.14000a380();\n                    iVar5 = -iVar5;\n                    puVar10 = puVar9 + iVar5;\n                    arg3_01 = puVar9 + iVar5 + 0x50;\n                    if (arg3_01 == NULL) goto code_r0x00014001e3e8;\n                    *arg3_01 = 0xcccc;\n                    puVar9 = puVar9 + iVar5;\ncode_r0x00014001e32a:\n                    arg3_01 = arg3_01 + 4;\n                    puVar10 = puVar9;\n                }\n                else {\n                    *(puVar9 + -8) = 0x14001e31a;\n                    arg3_01 = fcn.14001a6b0(uVar4);\n                    puVar7 = NULL;\n                    if (arg3_01 != NULL) {\n                        *arg3_01 = 0xdddd;\n                        goto code_r0x00014001e32a;\n                    }\n                }\n                if (arg3_01 != NULL) {\n                    *(puVar10 + 0x40) = puVar7;\n                    *(puVar10 + 0x38) = puVar7;\n                    *(puVar10 + 0x30) = puVar7;\n                    *(puVar10 + 0x28) = uVar3;\n                    *(puVar10 + 0x20) = arg3_01;\n                    *(puVar10 + -8) = 0x14001e360;\n                    iVar2 = fcn.14001cf04(arg2, arg3, arg3_00, uVar1);\n                    if (iVar2 == 0) goto code_r0x00014001e3c4;\n                    *(puVar10 + 0x38) = 0;\n                    *(puVar10 + 0x30) = 0;\n                    if (noname_6 == 0) {\n                        *(puVar10 + 0x28) = 0;\n                        *(puVar10 + 0x20) = 0;\n                        *(puVar10 + -8) = 0x14001e38e;\n                        iVar2 = fcn.14001ece4(noname_7, 0, arg3_01, uVar3);\n                        if (iVar2 == 0) goto code_r0x00014001e3c4;\n                    }\n                    else {\n                        *(puVar10 + 0x28) = noname_6;\n                        *(puVar10 + 0x20) = noname_5;\n                        *(puVar10 + -8) = 0x14001e3a8;\n                        iVar2 = fcn.14001ece4(noname_7, 0, arg3_01, uVar3);\n                        if (iVar2 == 0) goto code_r0x00014001e3c9;\n                    }\n                    if (arg3_01[-4] == 0xdddd) {\n                        *(puVar10 + -8) = 0x14001e3bf;\n                        fcn.14001a674(arg3_01 + -4);\n                    }\n                }\n            }\n        }\n        else if (noname_6 != 0) {\n            if (uVar3 <= noname_6) {\n                *(puVar9 + 0x40) = 0;\n                *(puVar9 + 0x38) = 0;\n                *(puVar9 + 0x30) = 0;\n                *(puVar9 + 0x28) = noname_6;\n                *(puVar9 + 0x20) = noname_5;\n                *(puVar9 + -8) = 0x14001e2b1;\n                iVar2 = fcn.14001cf04(arg2, arg3, arg3_00, uVar1);\n                if (iVar2 != 0) goto code_r0x00014001e3e8;\n            }\n            goto code_r0x00014001e3e1;\n        }\n    }\ncode_r0x00014001e3e8:\n    if (arg3_00[-4] == 0xdddd) {\n        *(puVar10 + -8) = 0x14001e3f9;\n        fcn.14001a674(arg3_00 + -4);\n    }\ncode_r0x00014001e3fb:\n    uVar4 = uStack48 ^ &stack0xffffffffffffffc8;\n    *(puVar10 + -8) = 0x14001e407;\n    fcn.140009d20(uVar4);\n    return;\n}\n",
        "token_count": 2335
    },
    "14001e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.14001e60c(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.1400255b4();\n    return uVar1 & 0x300;\n}\n",
        "token_count": 50
    },
    "14001f04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.14001f048(int16_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if (arg4 == 0) {\n        if (arg1 == NULL) {\n            if (arg2 == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x00014001f09b:\n            if (arg2 != 0) {\n                if (arg4 == 0) {\n                    *arg1 = 0;\n                    return 0;\n                }\n                if (arg3 != 0) {\n                    piVar4 = arg1;\n                    iVar3 = arg4;\n                    iVar7 = arg2;\n                    if (arg4 == -1) {\n                        do {\n                            iVar1 = *((arg3 - arg1) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while (iVar7 != 0);\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar3;\n                            iVar1 = *((arg3 - arg1) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while ((iVar7 != 0) && (iVar3 = iVar6 + -1,  iVar6 + -1 != 0));\n                        iVar3 = iVar6 + -1;\n                        if (iVar7 == 0) {\n                            iVar3 = iVar6;\n                        }\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar7 != 0) {\n                        return 0;\n                    }\n                    if (arg4 == -1) {\n                        arg1[arg2 + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg1 = 0;\n                    puVar2 = fcn.1400138d8();\n                    uVar5 = 0x22;\n                    goto code_r0x00014001f079;\n                }\n                *arg1 = 0;\n            }\n        }\n    }\n    else if (arg1 != NULL) goto code_r0x00014001f09b;\n    puVar2 = fcn.1400138d8();\n    uVar5 = 0x16;\ncode_r0x00014001f079:\n    *puVar2 = uVar5;\n    fcn.1400104f4();\n    return uVar5;\n}\n",
        "token_count": 645
    },
    "14001f15": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.14001f158(int16_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t arg1_00;\n    \n    if (arg1 == NULL) {\n        if (*(arg2 + 0x28) != '\\0') {\n            fcn.14001a674(*(arg2 + 0x10));\n            *(arg2 + 0x28) = 0;\n        }\n        *(arg2 + 0x10) = 0;\n        *(arg2 + 0x18) = 0;\n    }\n    else {\n        if (*arg1 != 0) {\n            iVar2 = fcn.14001ece4(arg4, 0, arg1, 0xffffffff);\n            arg1_00 = iVar2;\n            if (iVar2 != 0) {\n                if (*(arg2 + 0x18) < arg1_00) {\n                    if (*(arg2 + 0x28) != '\\0') {\n                        fcn.14001a674(*(arg2 + 0x10));\n                        *(arg2 + 0x28) = 0;\n                    }\n                    iVar3 = fcn.14001a6b0(arg1_00);\n                    *(arg2 + 0x10) = iVar3;\n                    uVar1 = ~-(iVar3 != 0) & 0xc;\n                    uVar5 = 0;\n                    if (uVar1 == 0) {\n                        uVar5 = arg1_00;\n                    }\n                    *(arg2 + 0x28) = uVar1 == 0;\n                    *(arg2 + 0x18) = uVar5;\n                    if (uVar1 != 0) {\n                        return uVar1;\n                    }\n                }\n                iVar2 = fcn.14001ece4(arg4, 0, arg1, 0xffffffff);\n                if (iVar2 != 0) {\n                    *(arg2 + 0x20) = iVar2 + -1;\n                    return 0;\n                }\n            }\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.14001384c(uVar1);\n            puVar4 = fcn.1400138d8();\n            return *puVar4;\n        }\n        if (*(arg2 + 0x18) == 0) {\n            if (*(arg2 + 0x28) != '\\0') {\n                fcn.14001a674(*(arg2 + 0x10));\n                *(arg2 + 0x28) = 0;\n            }\n            iVar3 = fcn.14001a6b0(1);\n            *(arg2 + 0x10) = iVar3;\n            uVar1 = ~-(iVar3 != 0) & 0xc;\n            *(arg2 + 0x28) = uVar1 == 0;\n            *(arg2 + 0x18) = uVar1 == 0;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        **(arg2 + 0x10) = 0;\n    }\n    *(arg2 + 0x20) = 0;\n    return 0;\n}\n",
        "token_count": 748
    },
    "14001fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.14001fd78(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    int64_t iVar4;\n    \n    fcn.14000c2b0(arg1 + 0x18, 0, 0x101);\n    iVar2 = 0;\n    *(arg1 + 4) = 0;\n    *(arg1 + 0x220) = 0;\n    puVar3 = arg1 + 0xc;\n    for (iVar1 = 6; iVar4 = iVar2,  iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    do {\n        iVar1 = iVar4 + 1;\n        *(arg1 + iVar4 + 0x18) = *(iVar4 + 0x14003e578);\n        iVar4 = iVar1;\n    } while (iVar1 < 0x101);\n    do {\n        iVar1 = iVar2 + 1;\n        *(arg1 + iVar2 + 0x119) = *(iVar2 + 0x14003e679);\n        iVar2 = iVar1;\n    } while (iVar1 < 0x100);\n    return;\n}\n",
        "token_count": 291
    },
    "14002038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.140020380(ulong arg1)\n\n{\n    int32_t iVar1;\n    ulong arg3;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong lpFlsData;\n    int32_t *lpMem;\n    \n    iVar2 = fcn.14001a314(arg1, in_RDX);\n    lpFlsData = 0x1400407f0;\n    if (((*(iVar2 + 0x3a8) & *0x14003e3bc) == 0) || (*(iVar2 + 0x90) == 0)) {\n        fcn.140012b28(5);\n        lpMem = *(iVar2 + 0x88);\n        if (lpMem != *0x1400407f0) {\n            if (lpMem != NULL) {\n                LOCK();\n                iVar1 = *lpMem;\n                *lpMem = *lpMem + -1;\n                if ((iVar1 == 1) && (lpMem != 0x14003e560)) {\n                    fcn.14001a674(lpMem);\n                }\n            }\n            lpMem = *0x1400407f0;\n            *(iVar2 + 0x88) = *0x1400407f0;\n            LOCK();\n            *lpMem = *lpMem + 1;\n        }\n        fcn.140012b7c(5);\n    }\n    else {\n        lpMem = *(iVar2 + 0x88);\n    }\n    if (lpMem != NULL) {\n        return lpMem;\n    }\n    fcn.140016438();\n    if (*0x1400407fc == '\\0') {\n        *0x1400407e8 = 0x14003e8a0;\n        *0x1400407f0 = 0x14003e560;\n        *0x1400407e0 = 0x14003e790;\n        arg3 = fcn.14001a3e8(0x14003e790, lpFlsData);\n        fcn.14001fff8(0xfffffffd, CONCAT71(lpFlsData >> 8, 1), arg3, 0x1400407f0);\n        *0x1400407fc = '\\x01';\n    }\n    return 0x1;\n}\n",
        "token_count": 507
    },
    "14002070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.14002070c(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int16_t *arg3;\n    int64_t iVar3;\n    int16_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar4;\n    \n    arg3 = (*_sym.imp.KERNEL32.dll_GetEnvironmentStringsW)();\n    if (arg3 != NULL) {\n        iVar1 = *arg3;\n        piVar5 = arg3;\n        while (iVar1 != 0) {\n            iVar3 = -1;\n            do {\n                iVar4 = iVar3;\n                iVar3 = iVar4 + 1;\n            } while (piVar5[iVar3] != 0);\n            piVar5 = piVar5 + iVar4 + 2;\n            iVar1 = *piVar5;\n        }\n        uVar6 = piVar5 + (2 - arg3) >> 1;\n        iVar2 = fcn.14001ece4(0, 0, arg3, uVar6 & 0xffffffff);\n        if (iVar2 != 0) {\n            iVar3 = fcn.14001a6b0(iVar2);\n            if (iVar3 != 0) {\n                iVar2 = fcn.14001ece4(0, 0, arg3, uVar6 & 0xffffffff);\n                if (iVar2 == 0) {\n                    fcn.14001a674(iVar3);\n                    iVar3 = 0;\n                }\n                else {\n                    fcn.14001a674(0);\n                }\n                (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n                return iVar3;\n            }\n            fcn.14001a674(0);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(arg3);\n    }\n    return 0;\n}\n",
        "token_count": 408
    },
    "140020bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140020bc0(int64_t arg1)\n\n{\n    if (arg1 != 0) {\n        if (*(arg1 + 0x18) != *0x14003e078) {\n            fcn.14001a674(*(arg1 + 0x18));\n        }\n        if (*(arg1 + 0x20) != *0x14003e080) {\n            fcn.14001a674(*(arg1 + 0x20));\n        }\n        if (*(arg1 + 0x28) != *0x14003e088) {\n            fcn.14001a674(*(arg1 + 0x28));\n        }\n        if (*(arg1 + 0x30) != *0x14003e090) {\n            fcn.14001a674(*(arg1 + 0x30));\n        }\n        if (*(arg1 + 0x38) != *0x14003e098) {\n            fcn.14001a674(*(arg1 + 0x38));\n        }\n        if (*(arg1 + 0x40) != *0x14003e0a0) {\n            fcn.14001a674(*(arg1 + 0x40));\n        }\n        if (*(arg1 + 0x48) != *0x14003e0a8) {\n            fcn.14001a674(*(arg1 + 0x48));\n        }\n        if (*(arg1 + 0x68) != *0x14003e0c8) {\n            fcn.14001a674(*(arg1 + 0x68));\n        }\n        if (*(arg1 + 0x70) != *0x14003e0d0) {\n            fcn.14001a674(*(arg1 + 0x70));\n        }\n        if (*(arg1 + 0x78) != *0x14003e0d8) {\n            fcn.14001a674(*(arg1 + 0x78));\n        }\n        if (*(arg1 + 0x80) != *0x14003e0e0) {\n            fcn.14001a674(*(arg1 + 0x80));\n        }\n        if (*(arg1 + 0x88) != *0x14003e0e8) {\n            fcn.14001a674(*(arg1 + 0x88));\n        }\n        if (*(arg1 + 0x90) != *0x14003e0f0) {\n            fcn.14001a674(*(arg1 + 0x90));\n        }\n    }\n    return;\n}\n",
        "token_count": 568
    },
    "1400211e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1400211e8(int64_t *arg1)\n\n{\n    if (arg1 != NULL) {\n        if (*arg1 != *0x14003e060) {\n            fcn.14001a674(*arg1);\n        }\n        if (arg1[1] != *0x14003e068) {\n            fcn.14001a674(arg1[1]);\n        }\n        if (arg1[2] != *0x14003e070) {\n            fcn.14001a674(arg1[2]);\n        }\n        if (arg1[0xb] != *0x14003e0b8) {\n            fcn.14001a674(arg1[0xb]);\n        }\n        if (arg1[0xc] != *0x14003e0c0) {\n            fcn.14001a674(arg1[0xc]);\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "14002153": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.14002153c(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t in_RDX;\n    \n    puVar1 = arg1 + in_RDX;\n    if (arg1 != puVar1) {\n        do {\n            fcn.14001a674(*arg1);\n            arg1 = arg1 + 1;\n        } while (arg1 != puVar1);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "140021de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140021dec(int64_t arg1)\n\n{\n    if (((arg1 != 0) && (arg1 != 0x14002fde0)) && (*(arg1 + 0x15c) == 0)) {\n        fcn.1400218b0(arg1);\n        fcn.14001a674(arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "14002266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140022664(ulong arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack72 [32];\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x14003e020 ^ auStack72;\n    iVar1 = fcn.14001ccb0(arg1, 0x59, auStack40, 9);\n    if (iVar1 != 0) {\n        fcn.140019f70(auStack40, arg1, 9);\n    }\n    fcn.140009d20(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 140
    },
    "14002308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.140023080(ulong arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    bool bVar7;\n    uint32_t auStackX8 [2];\n    \n    iVar4 = fcn.14001a314(arg1, arg2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(arg1 & 0x3ff | 0x400, 0x20000001, auStackX8, 2);\n    iVar6 = 0;\n    if (iVar3 == 0) {\n        bVar7 = false;\n    }\n    else if ((arg1 == auStackX8[0]) || (arg2 == 0)) {\n        bVar7 = true;\n    }\n    else {\n        piVar2 = *(iVar4 + 0x98);\n        iVar1 = *piVar2;\n        piVar5 = piVar2;\n        while ((piVar5 = piVar5 + 1,  iVar1 - 0x41U < 0x1a || (iVar1 - 0x61U < 0x1a))) {\n            iVar6 = iVar6 + 1;\n            iVar1 = *piVar5;\n        }\n        iVar4 = -1;\n        do {\n            iVar4 = iVar4 + 1;\n        } while (piVar2[iVar4] != 0);\n        bVar7 = iVar6 != iVar4;\n    }\n    return bVar7;\n}\n",
        "token_count": 360
    },
    "140024e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140024e2c(ushort *arg1)\n\n{\n    uint64_t uVar1;\n    ulong in_RDX;\n    ulong in_R8;\n    ulong in_R9;\n    uint32_t auStack24 [4];\n    \n    uVar1 = fcn.140027f48(auStack24, in_RDX, in_R8, in_R9);\n    if (uVar1 < 5) {\n        if (0xffff < auStack24[0]) {\n            auStack24[0] = 0xfffd;\n        }\n        if (arg1 != NULL) {\n            *arg1 = auStack24[0];\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "1400252b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1400252b8(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (arg1 != 0) {\n        iVar3 = 0;\n        iVar4 = 0xe3;\n        do {\n            iVar1 = (iVar4 + iVar3) / 2;\n            iVar2 = fcn.1400267dc(arg1, *(iVar1 * 0x10 + 0x1400357f0), 0x55);\n            if (iVar2 == 0) {\n                iVar3 = *(iVar1 * 0x10 + 0x1400357f8);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (0xe3 < iVar3) {\n                    return 0;\n                }\n                return *(iVar3 * 0x10 + 0x140033da0);\n            }\n            if (iVar2 < 0) {\n                iVar4 = iVar1 + -1;\n            }\n            else {\n                iVar3 = iVar1 + 1;\n            }\n        } while (iVar3 <= iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "1400254b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.1400254b0(char *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    if (arg4 == 0) {\n        if (arg1 == NULL) {\n            if (arg2 == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x000140025503:\n            if (arg2 != 0) {\n                if (arg4 == 0) {\n                    *arg1 = '\\0';\n                    return 0;\n                }\n                if (arg3 != 0) {\n                    pcVar4 = arg1;\n                    iVar3 = arg4;\n                    iVar7 = arg2;\n                    if (arg4 == -1) {\n                        do {\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while (iVar7 != 0);\n                    }\n                    else {\n                        do {\n                            iVar6 = iVar3;\n                            cVar1 = pcVar4[arg3 - arg1];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') {\n                                return 0;\n                            }\n                            iVar7 = iVar7 + -1;\n                        } while ((iVar7 != 0) && (iVar3 = iVar6 + -1,  iVar6 + -1 != 0));\n                        iVar3 = iVar6 + -1;\n                        if (iVar7 == 0) {\n                            iVar3 = iVar6;\n                        }\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar7 != 0) {\n                        return 0;\n                    }\n                    if (arg4 == -1) {\n                        arg1[arg2 + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg1 = '\\0';\n                    puVar2 = fcn.1400138d8();\n                    uVar5 = 0x22;\n                    goto code_r0x0001400254e1;\n                }\n                *arg1 = '\\0';\n            }\n        }\n    }\n    else if (arg1 != NULL) goto code_r0x000140025503;\n    puVar2 = fcn.1400138d8();\n    uVar5 = 0x16;\ncode_r0x0001400254e1:\n    *puVar2 = uVar5;\n    fcn.1400104f4();\n    return uVar5;\n}\n",
        "token_count": 639
    },
    "14002780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.14002780c(uint32_t *arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    ulong uStackX8;\n    \n    fcn.1400256f0(*arg1);\n    fcn.140025828(arg1[1]);\n    uStackX8 = 0;\n    iVar1 = fcn.1400277ec(&uStackX8);\n    if ((iVar1 == 0) && (*arg1 == uStackX8)) {\n        bVar2 = arg1[1] != uStackX8._4_4_;\n    }\n    else {\n        bVar2 = true;\n    }\n    return bVar2;\n}\n",
        "token_count": 160
    },
    "14002881": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.140028810(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    fcn.140028830(param_1, param_2, param_3, 0x1b);\n    return;\n}\n",
        "token_count": 54
    },
    "140002dd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.140002dd0(ulong *arg1, int64_t **arg2)\n\n{\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t *piStack40;\n    int64_t *piStack32;\n    \n    iVar3 = 0;\n    *arg1 = 0;\n    arg1[1] = 0;\n    arg2 = *arg2;\n    ppiVar2 = *arg2;\n    if (ppiVar2 != arg2) {\n        piStack32 = fcn.140009d74(0x18);\n        *(piStack32 + 2) = *(ppiVar2 + 2);\n        iVar3 = 1;\n        piStack40 = piStack32;\n        for (ppiVar2 = *ppiVar2; ppiVar2 != arg2; ppiVar2 = *ppiVar2) {\n            piVar1 = fcn.140009d74(0x18);\n            *(piVar1 + 2) = *(ppiVar2 + 2);\n            *piStack40 = piVar1;\n            piVar1[1] = piStack40;\n            iVar3 = iVar3 + 1;\n            piStack40 = piVar1;\n        }\n    }\n    ppiVar2 = fcn.140009d74(0x18);\n    if (iVar3 == 0) {\n        *ppiVar2 = ppiVar2;\n        ppiVar2[1] = ppiVar2;\n    }\n    else {\n        *ppiVar2 = piStack32;\n        ppiVar2[1] = piStack40;\n        piStack32[1] = ppiVar2;\n        *piStack40 = ppiVar2;\n    }\n    arg1[1] = iVar3;\n    *arg1 = ppiVar2;\n    return arg1;\n}\n",
        "token_count": 417
    },
    "1400113e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.1400113e8(char *arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    int64_t iVar4;\n    \n    cVar1 = *arg1;\n    while ((cVar1 != '\\0' && (cVar1 != ***(*arg2 + 0xf8)))) {\n        arg1 = arg1 + 1;\n        cVar1 = *arg1;\n    }\n    if (cVar1 != '\\0') {\n        do {\n            arg1 = arg1 + 1;\n            pcVar2 = arg1;\n            if (*arg1 == '\\0') break;\n        } while ((*arg1 + 0xbbU & 0xdf) != 0);\n        do {\n            pcVar3 = pcVar2;\n            pcVar2 = pcVar3 + -1;\n        } while (*pcVar2 == '0');\n        pcVar3 = pcVar3 + -2;\n        if (*pcVar2 != ***(*arg2 + 0xf8)) {\n            pcVar3 = pcVar2;\n        }\n        iVar4 = arg1 - pcVar3;\n        do {\n            cVar1 = pcVar3[iVar4];\n            pcVar3 = pcVar3 + 1;\n            *pcVar3 = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 311
    },
    "14001edc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.14001edc4(uint16_t *arg1, uint16_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    do {\n        uVar1 = *arg1;\n        arg1 = arg1 + 1;\n        uVar2 = *arg2;\n        arg2 = arg2 + 1;\n        uVar4 = uVar1 + 0x20;\n        if (0x19 < uVar1 - 0x41) {\n            uVar4 = uVar1;\n        }\n        uVar3 = uVar2 + 0x20;\n        if (0x19 < uVar2 - 0x41) {\n            uVar3 = uVar2;\n        }\n    } while ((uVar4 == uVar3) && (uVar4 != 0));\n    return;\n}\n",
        "token_count": 208
    },
    "14002083": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint32_t fcn.140020838(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(*(*(*(in_GS_OFFSET + 0x30) + 0x60) + 0x20) + 8) >> 0x1f;\n}\n",
        "token_count": 62
    },
    "14000cc5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.14000cc50(int64_t arg1, uint64_t *arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg1 != 0) {\n        iVar5 = *(arg1 + 0x18);\n        uVar2 = arg2[1];\n        if (uVar2 + iVar5 != 0) {\n            uVar4 = 0;\n            if (*(arg1 + 0x14) != 0) {\n                do {\n                    if (*arg2 < *(iVar5 + uVar4 * 8 + uVar2) + uVar2) break;\n                    uVar3 = uVar4 + 1;\n                    uVar4 = uVar3;\n                } while (uVar3 < *(arg1 + 0x14));\n                if (uVar4 != 0) {\n                    return *(uVar2 + (uVar4 - 1) * 8 + 4 + iVar5);\n                }\n            }\n            return 0xffffffff;\n        }\n    }\n    fcn.140016438();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 289
    },
    "140012bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.140012bc4(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    \n    if (arg1 < 0xffffffffffffffe1) {\n        if (arg1 == 0) {\n            arg1 = 1;\n        }\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x140040838, 0, arg1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            iVar1 = fcn.140019040();\n        } while ((iVar1 != 0) && (iVar1 = fcn.140016a70(arg1),  iVar1 != 0));\n    }\n    puVar3 = fcn.1400138d8();\n    *puVar3 = 0xc;\n    return 0;\n}\n",
        "token_count": 196
    },
    "1400176b": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.1400176bc(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    ulong uStack40;\n    uint *puStack32;\n    int32_t *piStack24;\n    uchar *puStack16;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 2;\n    uStack40 = 0xfffffffffffffffe;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.140017624(arg1);\n    }\n    auStackX32[0] = 0;\n    puStack32 = auStackX16;\n    piStack24 = aiStackX24;\n    puStack16 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.140017400(auStack56, auStack48, &puStack32, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.1400175cc(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 429
    },
    "14001770": {
        "rules": [
            "parse PE header"
        ],
        "decompiled_code": "\nvoid fcn.140017708(ulong arg1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t *piVar3;\n    uint auStackX16 [2];\n    int32_t aiStackX24 [2];\n    uchar auStackX32 [8];\n    uchar auStack56 [4];\n    uint uStack52;\n    uint auStack48 [2];\n    ulong uStack40;\n    uint *puStack32;\n    int32_t *piStack24;\n    uchar *puStack16;\n    \n    aiStackX24[0] = 0;\n    auStackX16[0] = 0;\n    uStack40 = 0xfffffffffffffffe;\n    piVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    if ((((piVar2 != NULL) && (*piVar2 == 0x5a4d)) && (piVar3 = *(piVar2 + 0x1e) + piVar2,  *piVar3 == 0x4550)) &&\n       (((*(piVar3 + 6) == 0x20b && (0xe < piVar3[0x21])) && (piVar3[0x3e] != 0)))) {\n        fcn.140017624(arg1);\n    }\n    auStackX32[0] = 0;\n    puStack32 = auStackX16;\n    piStack24 = aiStackX24;\n    puStack16 = auStackX32;\n    uStack52 = 2;\n    auStack48[0] = 2;\n    fcn.140017400(auStack56, auStack48, &puStack32, &uStack52);\n    if (aiStackX24[0] == 0) {\n        fcn.1400175cc(arg1);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "1400175c": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.1400175cc(uint64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    char cVar3;\n    \n    arg1 = arg1 & 0xffffffff;\n    cVar3 = fcn.140017600();\n    if (cVar3 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2, arg1);\n    }\n    fcn.140017624(arg1);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 156
    }
}