{
    "00401100": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00401100(void)\n\n{\n    ulong uVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    ulong *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong *arg2;\n    ulong *unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    ulong *puVar10;\n    ulong *puVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            puVar5 = unaff_RBX;\ncode_r0x00401136:\n            do {\n                unaff_RBX = puVar5;\n                puVar4 = in_RAX;\n                if (unaff_RBX == NULL) {\n                    *(*0x20 + -0x38) = *0x4f1c18;\n                    puVar5 = *0x4f1c10;\n                    puVar4 = *0x4f1c18;\n                    for (iVar6 = 0; iVar6 < puVar4; iVar6 = iVar6 + 1) {\n                        uVar1 = puVar5[1];\n                        if (*(puVar5 + 3) != '\\0') {\n                            if ((*(puVar5 + 0x19) == '\\0') || (*puVar5[2] != '\\0')) {\n                                *puVar5[2] = *(puVar5 + 0x19);\n                            }\n                            else {\n                                *(*0x20 + -0x10) = *puVar5;\n                                *(*0x20 + -0x40) = uVar1;\n                                *(*0x20 + -0x48) = iVar6;\n                                *(*0x20 + -0x18) = puVar5;\n                                *(*0x20 + -0x90) = 0x4013cc;\n                                fcn.00431980();\n                                *(*0x20 + -0x90) = 0x4013dd;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x4013ec;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x4013fd;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x401405;\n                                fcn.00431a00();\n                                puVar5 = *(*0x20 + -0x18);\n                                puVar4 = *(*0x20 + -0x38);\n                                iVar6 = *(*0x20 + -0x48);\n                            }\n                        }\n                        puVar5 = puVar5 + 4;\n                    }\n                    return;\n                }\n                for (puVar7 = NULL; puVar7 < unaff_RBX; puVar7 = puVar7 + 1) {\n                    if (*(puVar4 + puVar7) == ',') goto code_r0x0040114d;\n                }\n                puVar7 = 0xffffffffffffffff;\ncode_r0x0040114d:\n                if (puVar7 < 0) {\n                    puVar5 = NULL;\n                    in_RAX = NULL;\n                    puVar7 = unaff_RBX;\n                }\n                else {\n                    if (unaff_RBX < puVar7) goto code_r0x00401630;\n                    if (unaff_RBX < puVar7 + 1U) goto code_r0x00401625;\n                    unaff_RBX = unaff_RBX - puVar7;\n                    puVar5 = unaff_RBX + -1;\n                    in_RAX = (puVar7 + 1U & -puVar5 >> 0x3f) + puVar4;\n                }\n            } while ((puVar7 < 4) || (*puVar4 != 0x2e757063));\n            for (arg2 = NULL; arg2 < puVar7; arg2 = arg2 + 1) {\n                if (*(puVar4 + arg2) == '=') goto code_r0x004011ac;\n            }\n            arg2 = 0xffffffffffffffff;\ncode_r0x004011ac:\n            *(*0x20 + -0x38) = puVar5;\n            *(*0x20 + -0x10) = in_RAX;\n            if (arg2 < 0) {\n                *(*0x20 + -0x60) = puVar7;\n                *(*0x20 + -0x20) = puVar4;\n                *(*0x20 + -0x90) = 0x401328;\n                fcn.00431980();\n                *(*0x20 + -0x90) = 0x401339;\n                fcn.00432280();\n                *(*0x20 + -0x90) = 0x401348;\n                fcn.00432280();\n                *(*0x20 + -0x90) = 0x401359;\n                fcn.00432280();\n                *(*0x20 + -0x90) = 0x40135e;\n                fcn.00431a00();\n                in_RAX = *(*0x20 + -0x10);\n                puVar5 = *(*0x20 + -0x38);\n                goto code_r0x00401136;\n            }\n            if (arg2 <= puVar7) {\n                if (0x3 < arg2) {\n                    puVar11 = arg2 + -4;\n                    uVar9 = -puVar11 >> 0x3f & 4;\n                    unaff_RBX = puVar4 + uVar9;\n                    if (arg2 + 1U <= puVar7) {\n                        *(*0x20 + -0x40) = puVar11;\n                        *(*0x20 + -0x28) = unaff_RBX;\n                        iVar6 = puVar7 - arg2;\n                        *(*0x20 + -0x68) = iVar6 + -1;\n                        uVar12 = arg2 + 1U & -(iVar6 + -1) >> 0x3f;\n                        puVar3 = puVar4 + uVar12;\n                        *(*0x20 + -0x30) = puVar3;\n                        if (iVar6 == 3) {\n                            if (*(puVar4 + uVar12) != 0x6e6f) {\ncode_r0x004012ac:\n                                *(*0x20 + -0x90) = 0x4012b1;\n                                fcn.00431980();\n                                *(*0x20 + -0x90) = 0x4012c5;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x4012d4;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x4012e5;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x4012f4;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x401305;\n                                fcn.00432280();\n                                *(*0x20 + -0x90) = 0x40130a;\n                                fcn.00431a00();\n                                in_RAX = *(*0x20 + -0x10);\n                                puVar5 = *(*0x20 + -0x38);\n                                goto code_r0x00401136;\n                            }\n                        }\n                        else if (((iVar6 != 4) || (*(puVar4 + uVar12) != 0x666f)) || (*(puVar4 + uVar12 + 2) != 'f'))\n                        goto code_r0x004012ac;\n                        uVar12 = iVar6 == 3;\n                        if (((arg2 == 0x7) && (puVar3 = *(puVar4 + uVar9),  *(puVar4 + uVar9) == 0x6c61)) &&\n                           (*(puVar4 + uVar9 + 2) == 'l')) {\n                            puVar10 = *0x4f1c18;\n                            for (puVar3 = NULL; puVar3 < puVar10; puVar3 = puVar3 + 1) {\n                                puVar7 = *0x4f1c18;\n                                if (*0x4f1c18 <= puVar3) {\ncode_r0x004015f7:\n                                    *(*0x20 + -0x90) = 0x4015fc;\n                                    fcn.00458f20(puVar7);\n                                    goto code_r0x004015fc;\n                                }\n                                iVar6 = puVar3 * 0x20;\n                                *(*0x4f1c10 + puVar3 * 4 + 3) = 1;\n                                puVar11 = *0x4f1c10;\n                                if (*0x4f1c18 <= puVar3) {\n                                    *(*0x20 + -0x90) = 0x4015f7;\n                                    puVar7 = *0x4f1c18;\n                                    fcn.00458f20(*0x4f1c18);\n                                    goto code_r0x004015f7;\n                                }\ncode_r0x004015aa:\n                                *(puVar11 + iVar6 + 0x19) = uVar12;\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x69) = iVar6 == 3;\n                            *(*0x20 + -0x48) = *0x4f1c18;\n                            puVar4 = NULL;\n                            arg2 = *0x4f1c18;\n                            while (puVar4 < arg2) {\n                                puVar7 = *0x4f1c18;\n                                puVar10 = *0x4f1c10;\n                                if (*0x4f1c18 <= puVar4) {\ncode_r0x004015a5:\n                                    *(*0x20 + -0x90) = 0x4015aa;\n                                    iVar6 = fcn.00458f20(puVar7);\n                                    goto code_r0x004015aa;\n                                }\n                                puVar7 = (*0x4f1c10)[puVar4 * 4 + 1];\n                                puVar10 = (*0x4f1c10)[puVar4 * 4];\n                                puVar3 = puVar4;\n                                if (puVar7 == puVar11) {\n                                    *(*0x20 + -0x50) = puVar4 * 0x20;\n                                    *(*0x20 + -0x58) = puVar4;\n                                    *(*0x20 + -0x90) = 0x4014d0;\n                                    cVar2 = fcn.004023a0(puVar7, arg2);\n                                    if (cVar2 != '\\0') {\n                                        puVar3 = *(*0x20 + -0x58);\n                                        puVar7 = *0x4f1c18;\n                                        in_RAX = *0x4f1c10;\n                                        if (puVar3 < *0x4f1c18) {\n                                            puVar10 = *(*0x20 + -0x50);\n                                            *(*0x4f1c10 + 3 + puVar10) = 1;\n                                            in_RAX = *0x4f1c10;\n                                            if (puVar3 < *0x4f1c18) {\n                                                *(*0x4f1c10 + 0x19 + puVar10) = *(*0x20 + -0x69);\n                                                in_RAX = *(*0x20 + -0x10);\n                                                puVar5 = *(*0x20 + -0x38);\n                                                goto code_r0x00401136;\n                                            }\n                                            *(*0x20 + -0x90) = 0x40159f;\n                                            puVar7 = *0x4f1c18;\n                                            fcn.00458f20(*0x4f1c18);\n                                        }\n                                        *(*0x20 + -0x90) = 0x4015a5;\n                                        fcn.00458f20(puVar7);\n                                        puVar3 = puVar4;\n                                        goto code_r0x004015a5;\n                                    }\n                                    arg2 = *(*0x20 + -0x48);\n                                    unaff_RBX = *(*0x20 + -0x28);\n                                    in_RAX = *(*0x20 + -0x10);\n                                    puVar5 = *(*0x20 + -0x38);\n                                    puVar11 = *(*0x20 + -0x40);\n                                    uVar12 = *(*0x20 + -0x69);\n                                    puVar3 = *(*0x20 + -0x58);\n                                }\n                                puVar4 = puVar3 + 1;\n                            }\n                            *(*0x20 + -0x90) = 0x401555;\n                            fcn.00431980();\n                            *(*0x20 + -0x90) = 0x401566;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x401575;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x401586;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x40158b;\n                            fcn.00431a00();\n                            in_RAX = *(*0x20 + -0x10);\n                            puVar5 = *(*0x20 + -0x38);\n                        }\n                        goto code_r0x00401136;\n                    }\ncode_r0x004015fc:\n                    *(*0x20 + -0x90) = 0x401605;\n                    fcn.00458fe0(puVar7);\n                }\n                puVar7 = arg2;\n                *(*0x20 + -0x90) = 0x401612;\n                arg2 = puVar7;\n                fcn.00458fe0(puVar7);\n            }\n            *(*0x20 + -0x90) = 0x401625;\n            fcn.00458f60(arg2, puVar7);\ncode_r0x00401625:\n            *(*0x20 + -0x90) = 0x401630;\n            puVar7 = unaff_RBX;\n            fcn.00458fe0(unaff_RBX);\ncode_r0x00401630:\n            *(*0x20 + -0x90) = 0x401638;\n            in_RAX = fcn.00458f60(puVar7, unaff_RBX);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x401648;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3424
    },
    "00401660": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401db7)\n\nvoid fcn.00401660(ulong param_1, ulong *param_2, int64_t param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    uint32_t uVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    ulong *arg3;\n    ulong uVar6;\n    ulong *arg4;\n    int64_t unaff_R14;\n    int32_t iStack96;\n    uint32_t uStack88;\n    uint32_t uStack84;\n    uint32_t uStack80;\n    uint32_t uStack76;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    puVar1 = fcn.0040ba20();\n    puVar1[1] = 3;\n    *puVar1 = 0x47594a;\n    puVar1[2] = 0x5450e1;\n    puVar1[5] = 3;\n    puVar1[4] = 0x47594d;\n    puVar1[6] = 0x5450e0;\n    puVar1[9] = 4;\n    puVar1[8] = 0x475a06;\n    puVar1[10] = 0x5450e6;\n    puVar1[0xd] = 9;\n    puVar1[0xc] = 0x476019;\n    puVar1[0xe] = 0x5450e9;\n    puVar1[0x11] = 6;\n    puVar1[0x10] = 0x475b8e;\n    puVar1[0x12] = 0x5450eb;\n    puVar1[0x15] = 3;\n    puVar1[0x14] = 0x475977;\n    puVar3 = 0x5450ec;\n    puVar1[0x16] = 0x5450ec;\n    *0x4f1c18 = 6;\n    *0x4f1c20 = 6;\n    if (*0x544c10 != 0) {\n        fcn.00458a80(0x5450ec, param_2, param_3, param_4);\n        puVar1 = *0x4f1c10;\n    }\n    *0x4f1c10 = puVar1;\n    fcn.00401f40();\n    uVar4 = *0x4f1c18;\n    if (iStack96 < 2) {\n        uVar5 = *0x4f1c18 + 5;\n        param_2 = *0x4f1c10;\n        puVar1 = *0x4f1c10;\n        if ((*0x4f1c20 < uVar5) &&\n           (puVar3 = *0x4f1c10,  param_2 = fcn.00441fe0(*0x4f1c20),  puVar1 = param_2,  *0x544c10 != 0)) {\n            param_2 = fcn.00458a80(*0x4f1c20, puVar3, param_3, param_4);\n            puVar1 = *0x4f1c10;\n        }\n        *0x4f1c10 = puVar1;\n        param_3 = uVar4 * 0x20;\n        *0x4f1c18 = uVar5;\n        param_2[uVar4 * 4 + 1] = 6;\n        *(param_2 + uVar4 * 4 + 3) = 0;\n        puVar1 = param_2 + uVar4 * 4 + 2;\n        puVar3 = param_2 + uVar4 * 4 + 0x12;\n        if (*0x544c10 == 0) {\n            param_2[uVar4 * 4] = 0x475b88;\n            param_2[uVar4 * 4 + 2] = 0x5450ea;\n        }\n        else {\n            fcn.00458ba0(puVar3, 0x475b88, param_3, puVar1);\n            iStack96 = fcn.00458ba0(puVar3, 0x5450ea, param_3, puVar1);\n        }\n        *(param_2 + param_3 + 0x28) = 4;\n        *(param_2 + param_3 + 0x38) = 0;\n        if (*0x544c10 == 0) {\n            *(param_2 + param_3 + 0x20) = 0x475a22;\n            *(param_2 + param_3 + 0x30) = 0x5450ed;\n        }\n        else {\n            fcn.00458c20(puVar3, param_2, param_3);\n            iStack96 = fcn.00458c20(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x48) = 5;\n        *(param_2 + param_3 + 0x58) = 0;\n        if (*0x544c10 == 0) {\n            *(param_2 + param_3 + 0x40) = 0x475ac4;\n            *(param_2 + param_3 + 0x50) = 0x5450ef;\n        }\n        else {\n            fcn.00458c20(puVar3, param_2, param_3);\n            iStack96 = fcn.00458c20(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x68) = 5;\n        *(param_2 + param_3 + 0x78) = 0;\n        if (*0x544c10 == 0) {\n            *(param_2 + param_3 + 0x60) = 0x475ac9;\n            param_4 = 0x5450f0;\n            *(param_2 + param_3 + 0x70) = 0x5450f0;\n        }\n        else {\n            fcn.00458c20(puVar3, param_2, param_3);\n            param_4 = 0x5450f0;\n            iStack96 = fcn.00458c20(puVar3, param_2, param_3);\n        }\n        *(param_2 + param_3 + 0x88) = 5;\n        *(param_2 + param_3 + 0x98) = 0;\n        if (*0x544c10 == 0) {\n            *(param_2 + param_3 + 0x80) = 0x475ace;\n            param_4 = 0x5450ee;\n            *(param_2 + param_3 + 0x90) = 0x5450ee;\n        }\n        else {\n            fcn.00458ba0(puVar3, 0x475ace, param_3, param_4);\n            param_2 = 0x5450ee;\n            iStack96 = fcn.00458ba0(puVar3, 0x5450ee, param_3, param_4);\n        }\n    }\n    uVar4 = *0x4f1c18;\n    if (iStack96 < 3) {\n        uVar5 = *0x4f1c18 + 5;\n        puVar1 = *0x4f1c10;\n        puVar3 = *0x4f1c10;\n        if ((*0x4f1c20 < uVar5) && (puVar1 = fcn.00441fe0(*0x4f1c20),  puVar3 = puVar1,  *0x544c10 != 0)) {\n            puVar1 = fcn.00458a80(*0x4f1c20, param_2, param_3, param_4);\n            puVar3 = *0x4f1c10;\n        }\n        *0x4f1c10 = puVar3;\n        puVar3 = uVar4 * 0x20;\n        *0x4f1c18 = uVar5;\n        puVar1[uVar4 * 4 + 1] = 3;\n        *(puVar1 + uVar4 * 4 + 3) = 0;\n        arg3 = puVar1 + uVar4 * 4 + 0xe;\n        arg4 = puVar1 + uVar4 * 4 + 0x12;\n        if (*0x544c10 == 0) {\n            puVar1[uVar4 * 4] = 0x475950;\n            puVar1[uVar4 * 4 + 2] = 0x5450e2;\n        }\n        else {\n            uVar6 = 0x475950;\n            fcn.00458c20(puVar3, puVar1 + uVar4 * 4 + 2, arg3);\n            puVar1 = fcn.00458ba0(puVar3, 0x5450e2, arg3, uVar6);\n        }\n        *(puVar1 + puVar3 + 5) = 4;\n        *(puVar1 + puVar3 + 7) = 0;\n        if (*0x544c10 == 0) {\n            *(puVar1 + puVar3 + 4) = 0x4759ce;\n            *(puVar1 + puVar3 + 6) = 0x5450e3;\n        }\n        else {\n            fcn.00458ba0(puVar3, 0x4759ce, arg3, arg4);\n            puVar1 = fcn.00458ba0(puVar3, 0x5450e3, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 9) = 4;\n        *(puVar1 + puVar3 + 0xb) = 0;\n        if (*0x544c10 == 0) {\n            *(puVar1 + puVar3 + 8) = 0x4759da;\n            *(puVar1 + puVar3 + 10) = 0x5450e4;\n        }\n        else {\n            fcn.00458ba0(puVar3, 0x4759da, arg3, arg4);\n            puVar1 = fcn.00458ba0(puVar3, 0x5450e4, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 0xd) = 4;\n        *(puVar1 + puVar3 + 0xf) = 0;\n        if (*0x544c10 == 0) {\n            *(puVar1 + puVar3 + 0xc) = 0x4759de;\n            param_2 = 0x5450e5;\n            *(puVar1 + puVar3 + 0xe) = 0x5450e5;\n        }\n        else {\n            fcn.00458ba0(puVar3, 0x4759de, arg3, arg4);\n            param_2 = 0x5450e5;\n            puVar1 = fcn.00458ba0(puVar3, 0x5450e5, arg3, arg4);\n        }\n        *(puVar1 + puVar3 + 0x11) = 3;\n        *(puVar1 + puVar3 + 0x13) = 0;\n        if (*0x544c10 == 0) {\n            *(puVar1 + puVar3 + 0x10) = 0x475959;\n            param_2 = 0x5450e7;\n            *(puVar1 + puVar3 + 0x12) = 0x5450e7;\n        }\n        else {\n            fcn.00458a80(puVar3, param_2, arg3, arg4);\n            fcn.00458a80(puVar3, param_2, arg3, arg4);\n        }\n    }\n    fcn.00401f00(puVar3, param_2);\n    if (uStack88 != 0) {\n        fcn.00401f00(puVar3, param_2);\n        *0x5449f8 = uStack88;\n        fcn.00401f00(puVar3, param_2);\n        *0x5450ed = (uStack80 & 1) != 0;\n        *0x5450e9 = (uStack80 >> 1 & 1) != 0;\n        *0x5450ee = (uStack80 >> 9 & 1) != 0;\n        *0x5450ef = (uStack80 >> 0x13 & 1) != 0;\n        *0x5450f0 = (uStack80 >> 0x14 & 1) != 0;\n        *0x5450ea = (uStack80 >> 0x17 & 1) != 0;\n        *0x5450e0 = (uStack80 >> 0x19 & 1) != 0;\n        *0x5450e8 = (uStack80 >> 0x1b & 1) != 0;\n        uVar4 = param_2 & 0xffffffffffffff00 | *0x5450e8;\n        uVar2 = (puVar3 & 0xffffff00 | (uStack80 >> 0xc & 1) != 0) & uVar4;\n        *0x5450e7 = uVar2;\n        if ((uStack80 >> 0x1b & 1) != 0) {\n            fcn.00401f20(uVar2, uVar4);\n        }\n        uVar5 = 0;\n        *0x5450e2 = 0;\n        if (6 < uStack88) {\n            fcn.00401f00(0, uVar4);\n            uVar4 = uVar5 & 0xffffffffffffff00 | (uStack84 >> 5 & 1) != 0;\n            *0x5450e4 = (uStack84 >> 3 & 1) != 0;\n            uVar6 = 0;\n            *0x5450e3 = 0;\n            *0x5450e5 = (uStack84 >> 8 & 1) != 0;\n            *0x5450e6 = (uStack84 >> 9 & 1) != 0;\n            *0x5450e1 = (uStack84 >> 0x13 & 1) != 0;\n            *0x5450ec = (uStack84 >> 0x1d & 1) != 0;\n            fcn.00401f00(uVar4, 0);\n            if (uStack88 < 0x80000001) {\n                return;\n            }\n            fcn.00401f00(uVar4, uVar6);\n            *0x5450eb = (uStack76 >> 0x1b & 1) != 0;\n            return;\n        }\n        *0x5450e2 = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 3484
    },
    "0040a200": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a200(void)\n\n{\n    uint64_t **ppuVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4d96c4 == 0x10) {\n                if (*0x544b48 != 0) {\n                    if (*0x544b48 < 0x80001) {\n                        if (0xfff < *0x544b48) {\n                            if ((*0x544b48 & *0x544b48 - 1) == 0) {\n                                if ((*0x544b40 & *0x544b40 - 1) == 0) {\n                                    if (0x400000 < *0x544b40) {\n                                        *0x544b40 = 0;\n                                    }\n                                    if (*0x544b40 != 0) {\n                                        while (*0x544b40 != (1 << (*0x544b38 & 0x3f) & -(*0x544b38 < 0x40))) {\n                                            *0x544b38 = *0x544b38 + 1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x30) = 0x40a2b2;\n                                    fcn.00420d00();\n                                    *(*0x20 + -0x30) = 0x40a2b7;\n                                    *0x544b00 = fcn.00411560();\n                                    for (iVar2 = 0; iVar2 < 3; iVar2 = iVar2 + 1) {\n                                    }\n                                    for (iVar2 = 0x7f; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                        *(*0x20 + -0x18) = iVar2;\n                                        if (iVar2 < 0x40) {\n                                            uVar4 = 0x517050;\n                                        }\n                                        else {\n                                            uVar4 = 0x51d888;\n                                        }\n                                        *(*0x20 + -0x10) = uVar4;\n                                        *(*0x20 + -0x30) = 0x40a2e5;\n                                        puVar3 = fcn.00413460();\n                                        iVar2 = *(*0x20 + -0x18);\n                                        *puVar3 = iVar2 << 0x28 | 0xc000000000;\n                                        ppuVar1 = *(*0x20 + -0x10);\n                                        puVar3[2] = *ppuVar1;\n                                        *ppuVar1 = puVar3;\n                                    }\n                                    return;\n                                }\n                                *(*0x20 + -0x30) = 0x40a379;\n                                fcn.00431980();\n                                *(*0x20 + -0x30) = 0x40a38a;\n                                fcn.00432280();\n                                *(*0x20 + -0x30) = 0x40a396;\n                                fcn.00431f80();\n                                *(*0x20 + -0x30) = 0x40a3a7;\n                                fcn.00432280();\n                                *(*0x20 + -0x30) = 0x40a3ac;\n                                fcn.00431a00();\n                                *(*0x20 + -0x30) = 0x40a3bd;\n                                fcn.00430040();\n                            }\n                            *(*0x20 + -0x30) = 0x40a3c5;\n                            fcn.00431980();\n                            *(*0x20 + -0x30) = 0x40a3d6;\n                            fcn.00432280();\n                            *(*0x20 + -0x30) = 0x40a3e5;\n                            fcn.00431f80();\n                            *(*0x20 + -0x30) = 0x40a3f6;\n                            fcn.00432280();\n                            *(*0x20 + -0x30) = 0x40a3fb;\n                            fcn.00431a00();\n                            *(*0x20 + -0x30) = 0x40a40c;\n                            fcn.00430040();\n                        }\n                        *(*0x20 + -0x30) = 0x40a411;\n                        fcn.00431980();\n                        *(*0x20 + -0x30) = 0x40a425;\n                        fcn.00432280();\n                        *(*0x20 + -0x30) = 0x40a431;\n                        fcn.00431f80();\n                        *(*0x20 + -0x30) = 0x40a445;\n                        fcn.00432280();\n                        *(*0x20 + -0x30) = 0x40a44f;\n                        fcn.00432080();\n                        *(*0x20 + -0x30) = 0x40a465;\n                        fcn.00432280();\n                        *(*0x20 + -0x30) = 0x40a46a;\n                        fcn.00431a00();\n                        *(*0x20 + -0x30) = 0x40a47b;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x30) = 0x40a485;\n                    fcn.00431980();\n                    *(*0x20 + -0x30) = 0x40a496;\n                    fcn.00432280();\n                    *(*0x20 + -0x30) = 0x40a4a5;\n                    fcn.00431f80();\n                    *(*0x20 + -0x30) = 0x40a4b6;\n                    fcn.00432280();\n                    *(*0x20 + -0x30) = 0x40a4c5;\n                    fcn.00432080();\n                    *(*0x20 + -0x30) = 0x40a4d6;\n                    fcn.00432280();\n                    *(*0x20 + -0x30) = 0x40a4db;\n                    fcn.00431a00();\n                    *(*0x20 + -0x30) = 0x40a4ec;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x30) = 0x40a4fd;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x40a50e;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x40a514;\n        fcn.004568e0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1587
    },
    "0040ca00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.0040ca00(ulong arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong *puVar6;\n    int64_t *unaff_RBX;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00430140();\n        }\n        uVar3 = (***(in_RAX + 0x48))(arg1);\n        uVar7 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar7 & uVar3) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar7 = uVar7 >> 1;\n            }\n            iVar8 = *(in_RAX + 0x52) * (uVar7 & uVar3);\n            if (2 < *(iVar1 + iVar8) - 2U) {\n                iVar5 = iVar1 + iVar8;\n            }\n        }\n        uVar4 = uVar3 >> 0x38;\n        uVar7 = uVar4;\n        if (uVar3 >> 0x38 < 5) {\n            uVar4 = (uVar3 >> 0x38) + 5;\n            uVar7 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x545ae0;\n            }\n            for (uVar3 = 0; uVar3 < 8; uVar3 = uVar3 + 1) {\n                if (uVar4 == *(uVar3 + iVar5)) {\n                    puVar6 = iVar5 + *(in_RAX + 0x50) * uVar3 + 8;\n                    if ((*(in_RAX + 0x54) & 1) != 0) {\n                        puVar6 = *puVar6;\n                    }\n                    cVar2 = (***(*(in_RAX + 0x30) + 0x18))(puVar6);\n                    if (cVar2 != '\\0') {\n                        puVar6 = *(in_RAX + 0x51) * uVar3 + *(in_RAX + 0x50) * 8 + 8 + iVar5;\n                        if ((*(in_RAX + 0x54) >> 1 & 1) != 0) {\n                            puVar6 = *puVar6;\n                        }\n                        return puVar6;\n                    }\n                    uVar4 = uVar7 & 0xff;\n                }\n                else if (*(uVar3 + iVar5) == '\\0') {\n                    return 0x545ae0;\n                }\n            }\n            iVar5 = *(*(in_RAX + 0x52) + iVar5 + -8);\n        } while( true );\n    }\n    if ((*(in_RAX + 0x54) >> 4 & 1) != 0) {\n        (***(in_RAX + 0x48))();\n    }\n    return 0x545ae0;\n}\n",
        "token_count": 837
    },
    "0040d460": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d460(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t **arg3;\n    ulong *arg3_00;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char *pcVar6;\n    int64_t iVar7;\n    ulong *arg4;\n    int64_t iVar8;\n    int64_t **arg1_01;\n    int64_t **ppiVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    uchar in_XMM15 [16];\n    \n    while (puVar5 = *0x20,  *0x20 + -0x30 < *(unaff_R14 + 0x10) || *0x20 + -0x30 == *(unaff_R14 + 0x10)) {\ncode_r0x0040d9ca:\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40d9de;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    }\n    puVar5 = *0x20 + -0xb0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar6 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar4 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar4 = *(unaff_RBX + 9) - 1;\n    }\n    iVar8 = 1 << (uVar4 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar6 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar7;\n        *(*0x20 + -0x38) = iVar7 + 8;\n        *(*0x20 + -0x30) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar7 = *(in_RAX + 0x52) * (iVar8 + arg1) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x18) = iVar7 + 8;\n            *(*0x20 + -0x10) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x91) = uVar4;\n        *(*0x20 + -0x90) = iVar8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar4;\n        for (; pcVar6 != NULL; pcVar6 = *(pcVar6 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar6;\n            arg1_01 = pcVar6 + 8;\n            arg4 = pcVar6 + *(in_RAX + 0x50) * 8 + 8;\n            for (iVar7 = 0; iVar7 < 8; iVar7 = iVar7 + 1) {\n                uVar3 = pcVar6[iVar7];\n                if (1 < uVar3) {\n                    if (4 < uVar3) {\n                        ppiVar9 = arg1_01;\n                        if ((*(in_RAX + 0x54) & 1) != 0) {\n                            ppiVar9 = *arg1_01;\n                        }\n                        *(*0x20 + -0x88) = iVar7;\n                        *(*0x20 + -0x58) = arg4;\n                        *(*0x20 + -0x68) = ppiVar9;\n                        *(*0x20 + -0x60) = arg1_01;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            *(*0x20 + -0x93) = uVar3;\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xb8) = 0x40d6bd;\n                            uVar4 = (*pcVar2)();\n                            if ((*(*(*0x20 + 0x10) + 8) & 1) == 0) {\n                                uVar3 = 0;\n                            }\n                            else if ((*(*(*0x20 + 8) + 0x54) >> 2 & 1) == 0) {\n                                *(*0x20 + -0x80) = uVar4;\n                                pcVar2 = **(*(*(*0x20 + 8) + 0x30) + 0x18);\n                                *(*0x20 + -0xb8) = 0x40d702;\n                                uVar3 = (*pcVar2)();\n                                uVar3 = uVar3 ^ 1;\n                                uVar4 = *(*0x20 + -0x80);\n                            }\n                            else {\n                                uVar3 = 0;\n                            }\n                            if (uVar3 == 0) {\n                                bVar10 = (uVar4 >> (*(*0x20 + -0x91) & 0x3f) & 1) != 0;\n                                uVar3 = *(*0x20 + -0x93);\n                            }\n                            else {\n                                uVar3 = uVar4 >> 0x38;\n                                if (uVar3 < 5) {\n                                    uVar3 = uVar3 + 5;\n                                }\n                                bVar10 = *(*0x20 + -0x93) & 1;\n                            }\n                            arg1 = *(*0x20 + -0x91);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            iVar7 = *(*0x20 + -0x88);\n                            arg4 = *(*0x20 + -0x58);\n                            arg1_01 = *(*0x20 + -0x60);\n                            ppiVar9 = *(*0x20 + -0x68);\n                            in_RAX = *(*0x20 + 8);\n                            pcVar6 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar10 = false;\n                        }\n                        pcVar6[iVar7] = bVar10 + 2;\n                        if (bVar10 < 2) {\n                            iVar8 = bVar10 * 0x20;\n                            *(*0x20 + -0x78) = iVar8;\n                            if (*(*0x20 + iVar8 + -0x40) == 8) {\n                                *(*0x20 + -0x92) = uVar3;\n                                arg1_00 = *(*0x20 + iVar8 + -0x48);\n                                *(*0x20 + -0xb8) = 0x40d7e5;\n                                iVar7 = fcn.0040c260(arg1_00);\n                                iVar8 = *(*0x20 + -0x78);\n                                *(*0x20 + iVar8 + -0x48) = iVar7;\n                                *(*0x20 + iVar8 + -0x40) = 0;\n                                *(*0x20 + iVar8 + -0x38) = iVar7 + 8;\n                                in_RAX = *(*0x20 + 8);\n                                *(*0x20 + iVar8 + -0x30) = iVar7 + *(in_RAX + 0x50) * 8 + 8;\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                                uVar3 = *(*0x20 + -0x92);\n                                ppiVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar8 + -0x48) + (*(*0x20 + iVar8 + -0x40) & 7)) = uVar3;\n                            if ((*(in_RAX + 0x54) & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40d8c5;\n                                fcn.0040f2c0(arg1_01);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3 = *(*0x20 + iVar8 + -0x38);\n                                if (*0x544c10 == 0) {\n                                    *arg3 = ppiVar9;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40d8a5;\n                                    in_RAX = fcn.00458be0(arg1, arg2, arg3, arg4);\n                                }\n                            }\n                            if ((*(in_RAX + 0x54) >> 1 & 1) == 0) {\n                                *(*0x20 + -0xb8) = 0x40d94f;\n                                fcn.0040f2c0(arg4);\n                                in_RAX = *(*0x20 + 8);\n                                arg1 = *(*0x20 + -0x91);\n                                arg2 = *(*0x20 + -0x70);\n                                unaff_RBX = *(*0x20 + 0x10);\n                                pcVar6 = *(*0x20 + -0x50);\n                                iVar7 = *(*0x20 + -0x88);\n                                arg4 = *(*0x20 + -0x58);\n                                iVar8 = *(*0x20 + -0x78);\n                                arg1_01 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                arg3_00 = *(*0x20 + iVar8 + -0x30);\n                                if (*0x544c10 == 0) {\n                                    *arg3_00 = *arg4;\n                                }\n                                else {\n                                    *(*0x20 + -0xb8) = 0x40d930;\n                                    in_RAX = fcn.00458be0(arg1, arg2, arg3_00, arg4);\n                                }\n                            }\n                            *(*0x20 + iVar8 + -0x40) = *(*0x20 + iVar8 + -0x40) + 1;\n                            *(*0x20 + iVar8 + -0x38) = *(*0x20 + iVar8 + -0x38) + *(in_RAX + 0x50);\n                            *(*0x20 + iVar8 + -0x30) = *(*0x20 + iVar8 + -0x30) + *(in_RAX + 0x51);\n                            uVar4 = arg1 & 0xffffffff;\n                            iVar8 = *(*0x20 + -0x90);\n                            goto code_r0x0040d633;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xb8) = 0x40d9b8;\n                        fcn.00458f20(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xb8) = 0x40d9c9;\n                    in_RAX = fcn.00430040();\n                    goto code_r0x0040d9ca;\n                }\n                pcVar6[iVar7] = '\\x04';\ncode_r0x0040d633:\n                arg1_01 = arg1_01 + *(in_RAX + 0x50);\n                arg4 = arg4 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar8 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xb8) = 0x40d614;\n            fcn.0040f5c0(uVar1 * arg2 + iVar8 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar8 = *(*0x20 + -0x90);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xb8) = 0x40d599;\n        fcn.0040da00(iVar8, in_RAX, uVar4);\n    }\n    return;\n}\n",
        "token_count": 3285
    },
    "0040da00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040da00(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *(in_RAX + 0x20) + 0x401;\n    if (arg1 < uVar1) {\n        uVar1 = arg1;\n    }\n    *(in_RAX + 0x20) = *(in_RAX + 0x20) + 1;\n    while ((arg2 = *(in_RAX + 0x20),  arg2 != uVar1 &&\n           (uVar2 = *(*(unaff_RBX + 0x52) * arg2 + *(in_RAX + 0x18)) - 2,  arg3 = uVar2,  uVar2 < 3))) {\n        *(in_RAX + 0x20) = arg2 + 1;\n    }\n    if (arg1 == arg2) {\n        if (*0x544c10 == 0) {\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            in_RAX = fcn.00458b80(0, arg2, arg3, in_R9);\n        }\n        if (*(in_RAX + 0x28) != 0) {\n            if (*0x544c10 == 0) {\n                *(*(in_RAX + 0x28) + 8) = 0;\n            }\n            else {\n                in_RAX = fcn.00458b80(0, arg2, arg3, in_R9);\n            }\n        }\n        *(in_RAX + 8) = *(in_RAX + 8) & 0xf7;\n    }\n    return;\n}\n",
        "token_count": 480
    },
    "0040db00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040db00(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00430140();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x545ae0;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + 0x28 + iVar3;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(*(in_RAX + 0x52) + iVar3 + -8);\n        } while( true );\n    }\n    return 0x545ae0;\n}\n",
        "token_count": 582
    },
    "0040dca0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040dca0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int32_t *piVar4;\n    int64_t *unaff_RBX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_RBX != NULL) && (*unaff_RBX != 0)) {\n        if ((*(unaff_RBX + 1) & 4) != 0) {\n            fcn.00430140();\n        }\n        if (*(unaff_RBX + 9) == '\\0') {\n            iVar3 = unaff_RBX[2];\n        }\n        else {\n            uVar2 = (***(in_RAX + 0x48))();\n            uVar5 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n            iVar1 = unaff_RBX[3];\n            iVar3 = (uVar5 & uVar2) * *(in_RAX + 0x52) + unaff_RBX[2];\n            if (iVar1 != 0) {\n                if ((*(unaff_RBX + 1) & 8) == 0) {\n                    uVar5 = uVar5 >> 1;\n                }\n                iVar6 = *(in_RAX + 0x52) * (uVar5 & uVar2);\n                if (2 < *(iVar1 + iVar6) - 2U) {\n                    iVar3 = iVar1 + iVar6;\n                }\n            }\n        }\n        do {\n            if (iVar3 == 0) {\n                return 0x545ae0;\n            }\n            piVar4 = iVar3 + 8;\n            for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                if ((arg1 == *piVar4) && (1 < *(uVar5 + iVar3))) {\n                    return *(in_RAX + 0x51) * uVar5 + 0x28 + iVar3;\n                }\n                piVar4 = piVar4 + 1;\n            }\n            iVar3 = *(*(in_RAX + 0x52) + iVar3 + -8);\n        } while( true );\n    }\n    return 0x545ae0;\n}\n",
        "token_count": 583
    },
    "0040e220": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e220(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong arg1_00;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint8_t **arg3;\n    uint *puVar8;\n    int64_t iVar9;\n    uint8_t *arg1_01;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar4 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040e5ab:\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40e5bf;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    }\n    puVar4 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    puVar5 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar6 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar6 = *(unaff_RBX + 9) - 1;\n    }\n    arg3 = *puVar5 - 2;\n    iVar9 = 1 << (uVar6 & 0x3f);\n    uVar3 = arg1;\n    if (2 < *puVar5 - 2) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar7;\n        *(*0x20 + -0x38) = iVar7 + 8;\n        *(*0x20 + -0x30) = iVar7 + 0x28;\n        arg3 = *(unaff_RBX + 8);\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar7 = *(in_RAX + 0x52) * (iVar9 + arg1) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar7;\n            *(*0x20 + -0x18) = iVar7 + 8;\n            arg3 = iVar7 + 0x28;\n            *(*0x20 + -0x10) = arg3;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar6;\n        *(*0x20 + -0x80) = iVar9;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 8) = in_RAX;\n        arg1 = uVar6;\n        while (puVar5 != NULL) {\n            *(*0x20 + -0x50) = puVar5;\n            puVar8 = puVar5 + 8;\n            arg1_01 = puVar5 + 0x28;\n            for (iVar7 = 0; iVar7 < 8; iVar7 = iVar7 + 1) {\n                uVar10 = puVar5[iVar7];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar7;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_01;\n                        *(*0x20 + -0x60) = puVar8;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40e442;\n                            uVar3 = (*pcVar2)();\n                            bVar11 = (uVar3 >> (*(*0x20 + -0x81) & 0x3f) & 1) != 0;\n                            puVar8 = *(*0x20 + -0x60);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar7 = *(*0x20 + -0x78);\n                            uVar10 = *(*0x20 + -0x82);\n                            puVar5 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        puVar5[iVar7] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar9 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar9;\n                            if (*(*0x20 + iVar9 + -0x40) == 8) {\n                                arg1_00 = *(*0x20 + iVar9 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40e4c5;\n                                iVar7 = fcn.0040c260(arg1_00);\n                                iVar9 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar9 + -0x48) = iVar7;\n                                *(*0x20 + iVar9 + -0x40) = 0;\n                                *(*0x20 + iVar9 + -0x38) = iVar7 + 8;\n                                *(*0x20 + iVar9 + -0x30) = iVar7 + 0x28;\n                                puVar8 = *(*0x20 + -0x60);\n                                arg1_01 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                            }\n                            *(*(*0x20 + iVar9 + -0x48) + (*(*0x20 + iVar9 + -0x40) & 7)) = uVar10;\n                            **(*0x20 + iVar9 + -0x38) = *puVar8;\n                            *(*0x20 + -0xa8) = 0x40e536;\n                            fcn.0040f2c0(arg1_01);\n                            iVar9 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar9 + -0x40) = *(*0x20 + iVar9 + -0x40) + 1;\n                            *(*0x20 + iVar9 + -0x38) = *(*0x20 + iVar9 + -0x38) + 4;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar9 + -0x30) = *(*0x20 + iVar9 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            uVar3 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            puVar5 = *(*0x20 + -0x50);\n                            puVar8 = *(*0x20 + -0x60);\n                            iVar9 = *(*0x20 + -0x80);\n                            arg1_01 = *(*0x20 + -0x58);\n                            iVar7 = *(*0x20 + -0x78);\n                            goto code_r0x0040e3c8;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40e599;\n                        fcn.00458f20(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40e5aa;\n                    in_RAX = fcn.00430040();\n                    goto code_r0x0040e5ab;\n                }\n                puVar5[iVar7] = 4;\ncode_r0x0040e3c8:\n                puVar8 = puVar8 + 1;\n                arg1_01 = arg1_01 + *(in_RAX + 0x51);\n            }\n            arg3 = puVar5 + (*(in_RAX + 0x52) - 8);\n            puVar5 = *arg3;\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar9 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40e3a9;\n            fcn.0040f5c0(uVar1 * uVar3 + iVar9 + 8);\n            in_RAX = *(*0x20 + 8);\n            uVar3 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar9 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == uVar3) {\n        *(*0x20 + -0xa8) = 0x40e339;\n        fcn.0040da00(iVar9, in_RAX, arg3);\n    }\n    return;\n}\n",
        "token_count": 2329
    },
    "0040e5e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.0040e5e0(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int32_t **ppiVar7;\n    uint64_t uVar8;\n    int64_t *unaff_RBX;\n    int32_t *unaff_RDI;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_RBX == NULL) || (*unaff_RBX == 0)) {\n        return 0x545ae0;\n    }\n    if ((*(unaff_RBX + 1) & 4) != 0) {\n        fcn.00430140();\n    }\n    if (*(unaff_RBX + 9) != '\\0') {\ncode_r0x0040e68d:\n        uVar8 = (***(in_RAX + 0x48))();\n        uVar6 = (1 << (*(unaff_RBX + 9) & 0x3f)) - 1;\n        iVar1 = unaff_RBX[3];\n        iVar5 = (uVar6 & uVar8) * *(in_RAX + 0x52) + unaff_RBX[2];\n        if (iVar1 != 0) {\n            if ((*(unaff_RBX + 1) & 8) == 0) {\n                uVar6 = uVar6 >> 1;\n            }\n            iVar9 = *(in_RAX + 0x52) * (uVar6 & uVar8);\n            if (2 < *(iVar1 + iVar9) - 2U) {\n                iVar5 = iVar1 + iVar9;\n            }\n        }\n        uVar4 = uVar8 >> 0x38;\n        uVar6 = uVar4;\n        if (uVar8 >> 0x38 < 5) {\n            uVar4 = (uVar8 >> 0x38) + 5;\n            uVar6 = uVar4;\n        }\n        do {\n            if (iVar5 == 0) {\n                return 0x545ae0;\n            }\n            ppiVar7 = iVar5 + 8;\n            for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n                if ((ppiVar7[1] == unaff_RDI) && (*(uVar8 + iVar5) == uVar4)) {\n                    if ((arg1 == *ppiVar7) || (cVar3 = fcn.004023a0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                        return uVar8 * *(in_RAX + 0x51) + iVar5 + 0x88;\n                    }\n                    uVar4 = uVar6 & 0xff;\n                }\n                ppiVar7 = ppiVar7 + 2;\n            }\n            iVar5 = *(*(in_RAX + 0x52) + iVar5 + -8);\n        } while( true );\n    }\n    iVar1 = unaff_RBX[2];\n    if (unaff_RDI < 0x20) {\n        ppiVar7 = iVar1 + 8;\n        uVar6 = 0;\n        do {\n            if (7 < uVar6) {\n                return 0x545ae0;\n            }\n            if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar6 + iVar1))) {\n                if ((arg1 == *ppiVar7) || (cVar3 = fcn.004023a0(unaff_RDI, ppiVar7),  cVar3 != '\\0')) {\n                    return iVar1 + 0x88 + uVar6 * *(in_RAX + 0x51);\n                }\n            }\n            else if (*(uVar6 + iVar1) == '\\0') {\n                return 0x545ae0;\n            }\n            uVar6 = uVar6 + 1;\n            ppiVar7 = ppiVar7 + 2;\n        } while( true );\n    }\n    ppiVar7 = iVar1 + 8;\n    uVar6 = 8;\n    for (uVar8 = 0; uVar8 < 8; uVar8 = uVar8 + 1) {\n        if ((ppiVar7[1] == unaff_RDI) && (1 < *(uVar8 + iVar1))) {\n            piVar2 = *ppiVar7;\n            if (arg1 == piVar2) {\n                return uVar8 * *(in_RAX + 0x51) + 0x88 + iVar1;\n            }\n            if (((*piVar2 == *arg1) && (*(piVar2 + -1 + unaff_RDI) == *(arg1 + -1 + unaff_RDI))) &&\n               (bVar10 = uVar6 != 8,  uVar6 = uVar8,  bVar10)) goto code_r0x0040e68d;\n        }\n        else if (*(uVar8 + iVar1) == '\\0') break;\n        ppiVar7 = ppiVar7 + 2;\n    }\n    if ((uVar6 != 8) && (cVar3 = fcn.004023a0(unaff_RDI, uVar8),  cVar3 != '\\0')) {\n        return iVar1 + 0x88 + uVar6 * *(in_RAX + 0x51);\n    }\n    return 0x545ae0;\n}\n",
        "token_count": 1298
    },
    "0040eea0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040eea0(uint64_t arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    char *pcVar7;\n    int64_t iVar8;\n    ulong *arg4;\n    int64_t iVar9;\n    char *arg1_00;\n    uint8_t uVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    while (puVar6 = *0x20,  *0x20 + -0x20 < *(unaff_R14 + 0x10) || *0x20 + -0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x0040f27b:\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40f28f;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    }\n    puVar6 = *0x20 + -0xa0;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    pcVar7 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x18);\n    uVar5 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar5 = *(unaff_RBX + 9) - 1;\n    }\n    iVar9 = 1 << (uVar5 & 0x3f);\n    arg2 = arg1;\n    if (2 < *pcVar7 - 2U) {\n        *(*0x20 + -0x48) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        iVar8 = *(in_RAX + 0x52) * arg1 + *(unaff_RBX + 0x10);\n        *(*0x20 + -0x48) = iVar8;\n        *(*0x20 + -0x38) = iVar8 + 8;\n        *(*0x20 + -0x30) = iVar8 + 0x88;\n        if ((*(unaff_RBX + 8) & 8) == 0) {\n            iVar8 = (iVar9 + arg1) * *(in_RAX + 0x52) + *(unaff_RBX + 0x10);\n            *(*0x20 + -0x28) = iVar8;\n            *(*0x20 + -0x18) = iVar8 + 8;\n            *(*0x20 + -0x10) = iVar8 + 0x88;\n        }\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0x81) = uVar5;\n        *(*0x20 + -0x80) = iVar9;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        arg1 = uVar5;\n        for (; pcVar7 != NULL; pcVar7 = *(pcVar7 + (*(in_RAX + 0x52) - 8))) {\n            *(*0x20 + -0x50) = pcVar7;\n            arg4 = pcVar7 + 8;\n            arg1_00 = pcVar7 + 0x88;\n            for (iVar8 = 0; iVar8 < 8; iVar8 = iVar8 + 1) {\n                uVar10 = pcVar7[iVar8];\n                if (1 < uVar10) {\n                    if (4 < uVar10) {\n                        *(*0x20 + -0x78) = iVar8;\n                        *(*0x20 + -0x82) = uVar10;\n                        *(*0x20 + -0x58) = arg1_00;\n                        *(*0x20 + -0x60) = arg4;\n                        if ((*(unaff_RBX + 8) & 8) == 0) {\n                            pcVar2 = **(in_RAX + 0x48);\n                            *(*0x20 + -0xa8) = 0x40f0c2;\n                            uVar5 = (*pcVar2)();\n                            arg1 = *(*0x20 + -0x81);\n                            bVar11 = (uVar5 >> (arg1 & 0x3f) & 1) != 0;\n                            arg2 = *(*0x20 + -0x70);\n                            iVar8 = *(*0x20 + -0x78);\n                            arg4 = *(*0x20 + -0x60);\n                            arg1_00 = *(*0x20 + -0x58);\n                            uVar10 = *(*0x20 + -0x82);\n                            pcVar7 = *(*0x20 + -0x50);\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        pcVar7[iVar8] = bVar11 + 2;\n                        if (bVar11 < 2) {\n                            iVar9 = bVar11 * 0x20;\n                            *(*0x20 + -0x68) = iVar9;\n                            if (*(*0x20 + iVar9 + -0x40) == 8) {\n                                uVar3 = *(*0x20 + iVar9 + -0x48);\n                                *(*0x20 + -0xa8) = 0x40f146;\n                                iVar8 = fcn.0040c260(uVar3);\n                                iVar9 = *(*0x20 + -0x68);\n                                *(*0x20 + iVar9 + -0x48) = iVar8;\n                                *(*0x20 + iVar9 + -0x40) = 0;\n                                *(*0x20 + iVar9 + -0x38) = iVar8 + 8;\n                                *(*0x20 + iVar9 + -0x30) = iVar8 + 0x88;\n                                arg1 = *(*0x20 + -0x81);\n                                arg2 = *(*0x20 + -0x70);\n                                arg4 = *(*0x20 + -0x60);\n                                arg1_00 = *(*0x20 + -0x58);\n                                uVar10 = *(*0x20 + -0x82);\n                                iVar9 = *(*0x20 + -0x68);\n                            }\n                            *(*(*0x20 + iVar9 + -0x48) + (*(*0x20 + iVar9 + -0x40) & 7)) = uVar10;\n                            puVar4 = *(*0x20 + iVar9 + -0x38);\n                            uVar3 = *arg4;\n                            puVar4[1] = arg4[1];\n                            if (*0x544c10 == 0) {\n                                *puVar4 = uVar3;\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = 0x40f1ed;\n                                fcn.00458c00(arg1, arg2, uVar3, arg4);\n                            }\n                            *(*0x20 + -0xa8) = 0x40f205;\n                            fcn.0040f2c0(arg1_00);\n                            iVar9 = *(*0x20 + -0x68);\n                            *(*0x20 + iVar9 + -0x40) = *(*0x20 + iVar9 + -0x40) + 1;\n                            *(*0x20 + iVar9 + -0x38) = *(*0x20 + iVar9 + -0x38) + 0x10;\n                            in_RAX = *(*0x20 + 8);\n                            *(*0x20 + iVar9 + -0x30) = *(*0x20 + iVar9 + -0x30) + *(in_RAX + 0x51);\n                            arg1 = *(*0x20 + -0x81);\n                            arg2 = *(*0x20 + -0x70);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            pcVar7 = *(*0x20 + -0x50);\n                            iVar8 = *(*0x20 + -0x78);\n                            uVar5 = *(*0x20 + -0x81);\n                            arg4 = *(*0x20 + -0x60);\n                            iVar9 = *(*0x20 + -0x80);\n                            arg1_00 = *(*0x20 + -0x58);\n                            goto code_r0x0040f053;\n                        }\n                        arg1 = 2;\n                        *(*0x20 + -0xa8) = 0x40f269;\n                        fcn.00458f20(2);\n                    }\n                    unaff_RBX = 0xd;\n                    *(*0x20 + -0xa8) = 0x40f27a;\n                    in_RAX = fcn.00430040();\n                    goto code_r0x0040f27b;\n                }\n                pcVar7[iVar8] = '\\x04';\ncode_r0x0040f053:\n                arg4 = arg4 + 2;\n                arg1_00 = arg1_00 + *(in_RAX + 0x51);\n            }\n        }\n        if (((*(unaff_RBX + 8) & 2) == 0) && (*(*(in_RAX + 0x40) + 8) != 0)) {\n            uVar1 = *(in_RAX + 0x52);\n            iVar9 = *(unaff_RBX + 0x18);\n            *(*0x20 + -0xa8) = 0x40f034;\n            fcn.0040f5c0(uVar1 * arg2 + iVar9 + 8);\n            in_RAX = *(*0x20 + 8);\n            arg2 = *(*0x20 + -0x70);\n            unaff_RBX = *(*0x20 + 0x10);\n            iVar9 = *(*0x20 + -0x80);\n        }\n    }\n    if (*(unaff_RBX + 0x20) == arg2) {\n        *(*0x20 + -0xa8) = 0x40efbf;\n        fcn.0040da00(iVar9, in_RAX, uVar5);\n    }\n    return;\n}\n",
        "token_count": 2433
    },
    "00414400": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00414959)\n// WARNING: Removing unreachable block (ram,0x00414445)\n// WARNING: Removing unreachable block (ram,0x00414463)\n// WARNING: Removing unreachable block (ram,0x00414985)\n\nvoid fcn.00414400(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x148 && *0x20 + -0x148 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x1c8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x544a24 = 2;\n            *0x544c14 = 1;\n            *0x544c10 = *0x544c10 & 0xffffff00 | 1;\n            *0x4f2258 = *0x545350;\n            *(*0x20 + -0x1d0) = 0x414485;\n            fcn.0045a8a0();\n            uVar14 = 0;\n            uVar15 = 0;\n            uVar16 = 0;\n            uVar17 = 0;\n            iVar6 = **(in_GS_OFFSET + *0x544bc0);\n            iVar9 = *(iVar6 + 0x30);\n            uVar7 = *(*0x20 + -0x1c8);\n            *(*0x20 + -0x180) = uVar7;\n            piVar1 = iVar9 + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar6 = *(iVar6 + 0x30);\n            *(iVar6 + 0xd0) = 5;\n            *(*0x20 + -0x10) = iVar6 + 200;\n            if (*0x544c10 == 0) {\n                *(iVar6 + 200) = 0x475a7e;\n            }\n            else {\n                *(*0x20 + -0x1d0) = 0x4144f9;\n                fcn.00458be0(uVar7, iVar6, param_3, param_4);\n            }\n            *(*0x20 + -0x38) = iVar6;\n            *(iVar6 + 0xf9) = 2;\n            iVar6 = *(iVar6 + 0x90);\n            *(*0x20 + -0x28) = iVar6;\n            *(iVar6 + 0xb0) = 6;\n            *(*0x20 + -0x1d0) = 0x414531;\n            fcn.00434500(4);\n            *(*0x20 + -0x100) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n            *(*0x20 + -0x100) = 0x4151a0;\n            *(*0x20 + -0xf8) = *(*0x20 + -0x180);\n            *(*0x20 + -0x1c8) = *0x20 + -0x100;\n            *(*0x20 + -0x1d0) = 0x414567;\n            fcn.004567a0();\n            *(*0x20 + -0x1c8) = 0x47caf0;\n            *(*0x20 + -0x1d0) = 0x414589;\n            fcn.004567a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            iVar6 = *(*0x20 + -0x38);\n            *(iVar6 + 0xf9) = 0;\n            *(*0x20 + -0x1d0) = 0x4145c5;\n            fcn.00434500(2);\n            if (*0x4f6bd0 != '\\0') {\n                *(*0x20 + -0x1d0) = 0x4145e7;\n                fcn.0044b220(0);\n            }\n            iVar9 = *(*0x20 + -0x38);\n            *(iVar9 + 0xd0) = 0;\n            if (*0x544c10 == 0) {\n                *(iVar9 + 200) = 0;\n            }\n            else {\n                iVar6 = 0;\n                *(*0x20 + -0x1d0) = 0x41461f;\n                fcn.00458ba0(iVar9, 0, param_3, param_4);\n            }\n            if (*0x544a24 == 0) {\n                *0x5484f0 = *0x5453f8;\n                *(*0x20 + -0x1c8) = 0x47cad0;\n                *(*0x20 + -0x1d0) = 0x41464a;\n                fcn.004567a0();\n                *(*0x20 + -0x1d0) = 0x414665;\n                fcn.0045a8a0();\n                *(*0x20 + -0x188) = *(*0x20 + -0x1c8);\n                *(*0x20 + -0x1d0) = 0x414685;\n                fcn.0045a940(iVar9, iVar6);\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                *(*0x20 + -0x170) = *(*0x20 + -0x1c8);\n                *(*0x20 + -0x108) = *(*0x20 + -0x1c0);\n                *0x4f2238 = *(*0x20 + -0x188);\n                *0x4f2240 = *0x4f2240 + (*0x4f2238 - *0x4f2248);\n                *(*0x20 + -0x1d0) = 0x4146e6;\n                fcn.004086a0(*(*0x20 + -0x1c0), *0x4f2248);\n                iVar6 = *(*0x20 + -0x170);\n                iVar9 = *(*0x20 + -0x108);\n                iVar4 = *(*0x20 + -0x188);\n                *0x5474c8 = iVar6 * 1000000000 + iVar9;\n                *0x5484e8 = iVar4;\n                *((*0x5484d8 & 0xff) * 8 + 0x5474d8) = *0x4f2240;\n                *((*0x5484d8 & 0xff) * 8 + 0x547cd8) = iVar6 * 1000000000 + iVar9;\n                *0x5474d0 = *0x5474d0 + *0x4f2240;\n                *0x4f2268 = *0x4f2268 + *0x5453a8;\n                *0x4f2270 = *0x4f2270 + *0x5453b8 + *0x5453b0;\n                *0x4f2278 = *0x4f2278 + *0x5453c0;\n                iVar6 = *0x4f2214 * (*0x4f2228 - *0x4f2220);\n                *(*0x20 + -0x178) = iVar6;\n                param_4 = *0x4f2214 * (*0x4f2238 - *0x4f2230);\n                *(*0x20 + -0x158) = param_4;\n                *0x4f2280 = *0x4f2280 + iVar6 + param_4;\n                *0x4f2288 = *0x4f2288 + iVar6 + *0x5453a8 + *0x5453b0 + *0x5453b8 + *0x5453c0 + param_4;\n                *0x4f2290 = *0x4f2290 + *0x544cb0;\n                *0x4f2298 = *0x4f2298 + *0x544cb8;\n                *0x4f22a0 = *0x4f22a0 + *0x544cb8 + *0x544cb0;\n                *0x4f22b8 = *0x544a28 * (iVar4 - *0x4f27c8) + *0x4f27d0;\n                *0x4f22a8 = *0x4f2cf0 + *0x4f22a8;\n                *0x4f22b0 = *0x4f22b8 - (*0x4f22a8 + *0x4f2288 + *0x4f22a0);\n                *0x5484e0 = (*0x4f2288 - *0x4f2278) / *0x4f22b8;\n                *0x544cb0 = 0;\n                *0x544cb8 = 0;\n                *0x4f2cf0 = 0;\n                *0x4f1e14 = 0;\n                if (*0x4f21d8 != '\\0') {\n                    *0x5484dc = *0x5484dc + 1;\n                }\n                *(*0x20 + -0x1d0) = 0x4148f2;\n                param_3 = *0x5453c0;\n                fcn.00409860();\n                *0x5484d8 = *0x5484d8 + 1;\n                *(*0x20 + -0x1d0) = 0x414905;\n                fcn.00438800();\n                *(*0x20 + -0x1d0) = 0x414913;\n                fcn.00409a80();\n                *(*0x20 + -0x1d0) = 0x414925;\n                fcn.00416500();\n                *0x544a2c = ((*0x544a2c >> 1) + (((*0x544a2c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                uVar5 = *0x4f1e1c & 0x80000000;\n                if (uVar5 == 0) {\n                    *0x4f1e1c = *0x4f1e1c + 1;\n                    LOCK();\n                }\n                if (uVar5 == 0) {\n                    *(*0x20 + -0x19c) = *0x516dd8;\n                    *(*0x20 + -0x19d) = uVar5 == 0;\n                    *(*0x20 + -0x1c8) = 0x47caf8;\n                    *(*0x20 + -0x1d0) = 0x4149c5;\n                    fcn.004567a0();\n                    *(*0x20 + -0x1d0) = 0x4149dc;\n                    fcn.00427980();\n                    *(*0x20 + -0x1d0) = 0x4149e5;\n                    fcn.00420760();\n                    *(*0x20 + -0x1c8) = 0x47cab8;\n                    *(*0x20 + -0x1d0) = 0x4149f5;\n                    fcn.004567a0();\n                    *(*0x20 + -0x1c8) = 0x47cb08;\n                    *(*0x20 + -0x1d0) = 0x414a17;\n                    fcn.004567a0();\n                    uVar14 = 0;\n                    uVar15 = 0;\n                    uVar16 = 0;\n                    uVar17 = 0;\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    *(*0x20 + -0x1d0) = 0x414a3e;\n                    fcn.0041e000(*(*0x20 + -0x19d));\n                    if (*0x544e7c < 1) {\ncode_r0x00415039:\n                        *(*0x20 + -0x1d0) = 0x415045;\n                        fcn.00409860();\n                        *(*0x20 + -0x30) = *0x4f1e60;\n                        uVar7 = CONCAT44(*0x4f1e6c, *0x4f1e68);\n                        *(*0x20 + -0x140) = uVar7;\n                        *0x4f1e68 = uVar14;\n                        *0x4f1e6c = uVar15;\n                        *0x4f1e70 = uVar16;\n                        *0x4f1e74 = uVar17;\n                        if (*0x544c10 == 0) {\n                            *0x4f1e60 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x1d0) = 0x415090;\n                            fcn.00458bc0(*0x4f1e60, uVar7, param_3, param_4);\n                        }\n                        *(*0x20 + -0x1d0) = 0x41509e;\n                        fcn.00409a80();\n                        iVar6 = *(*0x20 + -0x30);\n                        iVar9 = 0;\n                        while (iVar9 < *(*0x20 + -0x140)) {\n                            *(*0x20 + -0x120) = iVar9;\n                            *(*0x20 + -0x20) = iVar6;\n                            *(*0x20 + -0x1d0) = 0x4150c5;\n                            fcn.00402b60();\n                            iVar6 = *(*0x20 + -0x20) + 0x10;\n                            iVar9 = *(*0x20 + -0x120) + 1;\n                        }\n                        *(*0x20 + -0x1d0) = 0x4150fa;\n                        fcn.004406c0(0);\n                        *(*0x20 + -0x1d0) = 0x41510b;\n                        fcn.004406c0(0);\n                        iVar3 = *(*(*0x20 + -0x38) + 0xd8);\n                        *(*(*0x20 + -0x38) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    *(*0x20 + -0x110) = *0x48f620 * *0x5484e0;\n                    *(*0x20 + -0xf0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0xe8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                    *(*0x20 + -0x1d0) = 0x414a7b;\n                    fcn.00431980();\n                    uVar10 = (*0x4f2220 - *0x544b88) / 1000000;\n                    uVar12 = 0x17;\n                    while ((cVar2 = uVar10,  9 < uVar10 || (0x13 < uVar12))) {\n                        uVar10 = uVar10 / 10;\n                        if (0x17 < uVar12) goto code_r0x00415154;\n                        *(*0x20 + (uVar12 - 0xf0)) = cVar2 + uVar10 * -10 + '0';\n                        bVar13 = uVar12 == 0x15;\n                        uVar12 = uVar12 - 1;\n                        if (bVar13) {\n                            *(*0x20 + -0xdc) = 0x2e;\n                            uVar12 = 0x13;\n                        }\n                    }\n                    if (uVar12 < 0x18) {\n                        *(*0x20 + (uVar12 - 0xf0)) = cVar2 + '0';\n                        *(*0x20 + -0x118) = *0x5484d8;\n                        *(*0x20 + -0x1d0) = 0x414b4f;\n                        uVar7 = fcn.00445fe0(-(uVar12 - 0x18));\n                        *(*0x20 + -0x18) = uVar7;\n                        *(*0x20 + -0x120) = *0x20 + ((uVar12 & uVar12 - 0x18 >> 0x3f) - 0xf0);\n                        *(*0x20 + -0x1d0) = 0x414b65;\n                        fcn.00431980();\n                        *(*0x20 + -0x1d0) = 0x414b76;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414b85;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414b96;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414bab;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414bbc;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414bcf;\n                        fcn.00432080(*(*0x20 + -0x110));\n                        *(*0x20 + -0x1d0) = 0x414be5;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414bea;\n                        fcn.00431a00();\n                        *(*0x20 + -0xd8) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd0) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0xd8) = *0x4f2228;\n                        *(*0x20 + -0xd0) = *0x4f2230;\n                        *(*0x20 + -200) = *0x4f2238;\n                        iVar9 = 0;\n                        iVar6 = *0x4f2220;\n                        while (iVar9 < 3) {\n                            *(*0x20 + -0x148) = iVar9;\n                            *(*0x20 + -0x168) = *(*0x20 + iVar9 * 8 + -0xd8);\n                            if (iVar9 != 0) {\n                                *(*0x20 + -0x108) = iVar6;\n                                *(*0x20 + -0x1d0) = 0x414cd6;\n                                fcn.00431980();\n                                *(*0x20 + -0x1d0) = 0x414ce7;\n                                fcn.00432280();\n                                *(*0x20 + -0x1d0) = 0x414cec;\n                                fcn.00431a00();\n                            }\n                            *(*0x20 + -0x1d0) = 0x414c4c;\n                            uVar7 = fcn.00416220(0x18);\n                            *(*0x20 + -0x1d0) = 0x414c5f;\n                            uVar8 = fcn.00445fe0(0x18);\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x120) = uVar7;\n                            *(*0x20 + -0x1d0) = 0x414c74;\n                            fcn.00431980();\n                            *(*0x20 + -0x1d0) = 0x414c89;\n                            fcn.00432280();\n                            *(*0x20 + -0x1d0) = 0x414c8e;\n                            fcn.00431a00();\n                            iVar6 = *(*0x20 + -0x168);\n                            iVar9 = *(*0x20 + -0x148) + 1;\n                        }\n                        *(*0x20 + -0x1d0) = 0x414d05;\n                        fcn.00431980();\n                        *(*0x20 + -0x1d0) = 0x414d16;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414d1b;\n                        fcn.00431a00();\n                        *(*0x20 + -0x60) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x58) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x48) = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                        *(*0x20 + -0x60) = *(*0x20 + -0x178);\n                        *(*0x20 + -0x58) = *0x5453a8;\n                        *(*0x20 + -0x50) = *0x5453b8 + *0x5453b0;\n                        *(*0x20 + -0x48) = *0x5453c0;\n                        *(*0x20 + -0x40) = *(*0x20 + -0x158);\n                        iVar6 = 0;\n                        while (iVar6 < 5) {\n                            *(*0x20 + -0x150) = iVar6;\n                            *(*0x20 + -0x160) = *(*0x20 + iVar6 * 8 + -0x60);\n                            if ((iVar6 == 2) || (iVar6 == 3)) {\n                                *(*0x20 + -0x1d0) = 0x414e1b;\n                                fcn.00431980();\n                                *(*0x20 + -0x1d0) = 0x414e2c;\n                                fcn.00432280();\n                                *(*0x20 + -0x1d0) = 0x414e31;\n                                fcn.00431a00();\n                            }\n                            else if (iVar6 != 0) {\n                                *(*0x20 + -0x1d0) = 0x414e4e;\n                                fcn.00431980();\n                                *(*0x20 + -0x1d0) = 0x414e5f;\n                                fcn.00432280();\n                                *(*0x20 + -0x1d0) = 0x414e65;\n                                fcn.00431a00();\n                            }\n                            *(*0x20 + -0x1d0) = 0x414da5;\n                            uVar7 = fcn.00416220(0x18);\n                            *(*0x20 + -0x1d0) = 0x414db8;\n                            uVar8 = fcn.00445fe0(0x18);\n                            *(*0x20 + -0x18) = uVar8;\n                            *(*0x20 + -0x120) = uVar7;\n                            *(*0x20 + -0x1d0) = 0x414dcd;\n                            fcn.00431980();\n                            *(*0x20 + -0x1d0) = 0x414de5;\n                            fcn.00432280();\n                            *(*0x20 + -0x1d0) = 0x414dea;\n                            fcn.00431a00();\n                            iVar6 = *(*0x20 + -0x150) + 1;\n                        }\n                        *(*0x20 + -400) = *0x545368;\n                        *(*0x20 + -0x198) = *0x545378;\n                        *(*0x20 + -0x118) = *0x4f2250;\n                        *(*0x20 + -0x128) = *0x4f2258;\n                        *(*0x20 + -0x130) = *0x4f2260;\n                        *(*0x20 + -0x138) = *0x545348;\n                        param_3 = *0x4f2218;\n                        *(*0x20 + -0x108) = param_3;\n                        *(*0x20 + -0x1d0) = 0x414edc;\n                        fcn.00431980();\n                        *(*0x20 + -0x1d0) = 0x414eed;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414efe;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414f0f;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414f25;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414f36;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414f47;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414f58;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414f69;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414f7a;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414f88;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414f99;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414fa7;\n                        fcn.00431f80();\n                        *(*0x20 + -0x1d0) = 0x414fb8;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414fc5;\n                        fcn.00432080();\n                        *(*0x20 + -0x1d0) = 0x414fd6;\n                        fcn.00432280();\n                        *(*0x20 + -0x1d0) = 0x414fdb;\n                        fcn.00431a00();\n                        if (*0x4f21d8 != '\\0') {\n                            *(*0x20 + -0x1d0) = 0x414fe9;\n                            fcn.00431980();\n                            *(*0x20 + -0x1d0) = 0x414ffa;\n                            fcn.00432280();\n                            *(*0x20 + -0x1d0) = 0x414fff;\n                            fcn.00431a00();\n                        }\n                        *(*0x20 + -0x1d0) = 0x415005;\n                        fcn.00431980();\n                        *(*0x20 + -0x1d0) = 0x41500a;\n                        fcn.00431be0();\n                        *(*0x20 + -0x1d0) = 0x41500f;\n                        fcn.00431a00();\n                        cVar2 = *(*(unaff_R14 + 0x30) + 0xe7);\n                        *(*(unaff_R14 + 0x30) + 0xe7) = cVar2 + -1;\n                        if (cVar2 == '\\x01') {\n                            *(*0x20 + -0x1d0) = 0x415037;\n                            fcn.00409a80();\n                        }\n                        goto code_r0x00415039;\n                    }\n                    *(*0x20 + -0x1d0) = 0x415154;\n                    fcn.00458f20(0x18);\ncode_r0x00415154:\n                    *(*0x20 + -0x1d0) = 0x415165;\n                    fcn.00458f20(0x18);\n                }\n                *(*0x20 + -0x1d0) = 0x415176;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x1d0) = 0x415187;\n            fcn.00430040();\n        }\n        *(puVar11 + -8) = 0x41518d;\n        fcn.004568e0();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 6695
    },
    "00416640": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00416640(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x00416640:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar5 = *(in_RAX + 0x40);\n        if (unaff_RBX < iVar5) {\n            return;\n        }\n        *(in_RAX + 0x40) = unaff_RBX;\n        arg1 = *(in_RAX + 0x28);\n        iVar5 = (unaff_RBX - iVar5) * *(in_RAX + 0x4c);\n        if (arg1 != 0) {\n            LOCK();\n            *(in_RAX + 0x28) = *(in_RAX + 0x28) - arg1;\n        }\n        iVar7 = *(in_RAX + 0x38);\n        if (iVar7 != 0) {\n            LOCK();\n            *(in_RAX + 0x38) = *(in_RAX + 0x38) - iVar7;\n        }\n        if (*(in_RAX + 0x50) != '\\0') {\ncode_r0x00416706:\n            if (*(in_RAX + 0x20) != '\\0') {\n                arg1 = arg1 + iVar5 * *0x48f5c0;\n            }\n            *(*0x20 + -0x68) = 0x416736;\n            fcn.00416840(arg1);\n            return;\n        }\n        *(*0x20 + -0x48) = iVar5;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x20) = unaff_RBX;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x10) = *0x4f1c70;\n        *(*0x20 + -0x28) = *0x4f1c78;\n        iVar9 = *(unaff_R14 + 0x30);\n        *(*0x20 + -0x18) = iVar9;\n        iVar4 = 0;\n        iVar8 = *0x4f1c78;\n        do {\n            if (iVar8 <= iVar4) {\n                iVar2 = *(iVar9 + 0xd8);\n                *(iVar9 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                goto code_r0x00416706;\n            }\n            *(*0x20 + -0x30) = iVar4;\n            *(*0x20 + -0x40) = iVar7;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x68) = 0x41678f;\n            uVar3 = fcn.00416a20();\n            if (uVar3 < 2) {\n                if (uVar3 != 0) goto code_r0x004167bf;\n                arg1 = *(*0x20 + -0x38);\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else if ((uVar3 == 2) || (uVar3 == 3)) {\n                arg1 = *(*0x20 + -0x38) + unaff_RBX;\n                iVar7 = *(*0x20 + -0x40);\n            }\n            else {\n                if (uVar3 != 4) goto code_r0x00416808;\ncode_r0x004167bf:\n                iVar7 = *(*0x20 + -0x40) + unaff_RBX;\n                arg1 = *(*0x20 + -0x38);\n            }\n            iVar4 = *(*0x20 + -0x30) + 1;\n            in_RAX = *(*0x20 + 8);\n            iVar5 = *(*0x20 + -0x48);\n            unaff_RBX = *(*0x20 + -0x20);\n            iVar8 = *(*0x20 + -0x28);\n            iVar9 = *(*0x20 + -0x18);\n        } while( true );\n    }\n    goto code_r0x0041681a;\ncode_r0x00416808:\n    unaff_RBX = 0x20;\n    *(*0x20 + -0x68) = 0x416819;\n    in_RAX = fcn.00430040();\ncode_r0x0041681a:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + -8) = 0x416829;\n    fcn.004568e0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    *0x20 = puVar6;\n    goto code_r0x00416640;\n}\n",
        "token_count": 1304
    },
    "00416ac0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00416ac0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    bool bVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar6;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                uVar3 = uVar1 >> 0x3d;\n                if (unaff_BL != uVar1 >> 0x3d) goto code_r0x00416bbc;\n                LOCK();\n                bVar6 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar6 * *in_RAX;\n            } while (!bVar6);\n            uVar4 = arg1 & 0xe000000000000000 | uVar1 & 0x1fffffffffffffff;\n            uVar3 = 0;\n            bVar2 = arg1 < uVar4;\n            arg1 = arg1 - uVar4;\n            if (bVar2) {\n                arg1 = 0;\n            }\n            if (arg1 == 0) {\n                return uVar1 ^ !bVar6 * (uVar1 ^ *in_RAX);\n            }\n            if (unaff_BL < 3) {\n                if (unaff_BL == 1) {\n                    LOCK();\n                    *0x544ef8 = *0x544ef8 + arg1;\n                    return 0x544ef8;\n                }\n                if (unaff_BL == 2) {\ncode_r0x00416b66:\n                    LOCK();\n                    *0x544ee8 = *0x544ee8 + arg1;\n                    return 0x544ee8;\n                }\n            }\n            else {\n                if (unaff_BL == 3) goto code_r0x00416b66;\n                if (unaff_BL == 4) {\n                    LOCK();\n                    LOCK();\n                    *0x4f2cf0 = *0x4f2cf0 + arg1;\n                    *0x544ef8 = *0x544ef8 + arg1;\n                    return 0x4f2cf0;\n                }\n            }\n            unaff_BL = 0x33;\n            *(*0x20 + -0x28) = 0x416bbc;\n            fcn.00430040();\ncode_r0x00416bbc:\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + -0x10) = uVar3;\n            *(*0x20 + -0x28) = 0x416bca;\n            fcn.00431980();\n            *(*0x20 + -0x28) = 0x416bdb;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x416be8;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x416bf9;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x416c05;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x416c0a;\n            fcn.00431be0();\n            *(*0x20 + -0x28) = 0x416c0f;\n            fcn.00431a00();\n            unaff_BL = 0x3e;\n            *(*0x20 + -0x28) = 0x416c25;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x416c39;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1040
    },
    "00417060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00417060(char param_1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    ulong *puStack88;\n    int64_t iStack80;\n    uint64_t uStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar auStack40 [16];\n    uchar auStack24 [16];\n    \n    while (auStack24 < *(unaff_R14 + 0x10) || auStack24 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iStack96 = 0;\n    if ((unaff_EBX < *0x4f2188) || (*0x4f218c <= unaff_EBX)) {\n        if ((unaff_EBX < *0x4f218c) || (*0x4f2190 <= unaff_EBX)) {\n            puVar4 = *0x544a70;\n            if (unaff_EBX == 0) {\n                while (puVar4 != NULL) {\ncode_r0x0041733b:\n                    puStack88 = puVar4;\n                    fcn.00419540(0x544dc0);\n                    puVar4 = *puStack88;\n                }\n                piVar2 = NULL;\n            }\n            else if (unaff_EBX == 1) {\n                fcn.004567a0();\n                piVar2 = NULL;\n            }\n            else {\n                if ((unaff_EBX < *0x4f2190) || (*0x4f2194 <= unaff_EBX)) {\n                    puVar4 = *0x4f2194;\n                    if ((*0x4f2194 <= unaff_EBX) && (unaff_EBX < *0x4f2198)) {\n                        if (unaff_EBX - *0x4f2194 < *0x4f21a8) {\n                            iVar3 = *(*0x4f21a0 + (unaff_EBX - *0x4f2194) * 8);\n                            if (((*(iVar3 + 0x90) == 4) || (*(iVar3 + 0x90) == 3)) && (*(iVar3 + 0xa8) == 0)) {\n                                *(iVar3 + 0xa8) = *0x4f2158;\n                            }\n                            auStack40 = CONCAT88(iVar3, 0x4174c0);\n                            auStack24 = CONCAT88(in_RAX, &iStack96);\n                            fcn.004567a0();\n                            piVar2 = 0x545390;\n                            goto code_r0x00417246;\n                        }\n                        fcn.00458f20(*0x4f21a8);\n                    }\n                    fcn.00431980();\n                    uStack64 = *0x4f2194;\n                    uStack72 = *0x4f2198;\n                    fcn.00431980();\n                    fcn.00432280();\n                    fcn.00431f80();\n                    fcn.00432280();\n                    fcn.00431f80();\n                    fcn.00432280();\n                    fcn.00431f80();\n                    fcn.00432280();\n                    fcn.00431a00();\n                    fcn.00430040();\n                    goto code_r0x0041733b;\n                }\n                fcn.004177e0();\n                piVar2 = NULL;\n            }\n        }\n        else {\n            if (*0x4f1618 == NULL) {\n                iVar3 = 0;\n                iStack56 = 0;\n            }\n            else {\n                iStack56 = **0x4f1618;\n                iVar3 = (*0x4f1618)[1];\n            }\n            iVar1 = 0;\n            while (iVar1 < iVar3) {\n                iStack80 = iVar1;\n                iVar1 = fcn.00417600(*(*(iStack56 + iVar1 * 8) + 0x218));\n                iStack96 = iStack96 + iVar1;\n                iVar1 = iStack80 + 1;\n            }\n            piVar2 = 0x545398;\n        }\n    }\n    else {\n        if (*0x4f1618 == NULL) {\n            iVar3 = 0;\n            iStack48 = 0;\n        }\n        else {\n            iStack48 = **0x4f1618;\n            iVar3 = (*0x4f1618)[1];\n        }\n        iVar1 = 0;\n        while (iVar1 < iVar3) {\n            iStack80 = iVar1;\n            iVar1 = fcn.00417600(*(*(iStack48 + iVar1 * 8) + 0x208));\n            iStack96 = iStack96 + iVar1;\n            iVar1 = iStack80 + 1;\n        }\n        piVar2 = 0x545398;\n    }\ncode_r0x00417246:\n    if ((piVar2 != NULL) && (iStack96 != 0)) {\n        LOCK();\n        *piVar2 = *piVar2 + iStack96;\n        if (param_1 != '\\0') {\n            fcn.00418340();\n        }\n    }\n    return iStack96;\n}\n",
        "token_count": 1203
    },
    "00418c80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418c80(ulong arg1)\n\n{\n    int64_t arg1_00;\n    int32_t iVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    char cVar6;\n    uint64_t in_R8;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar5 = *in_RAX;\n    if (uVar5 == 0) {\n        uVar7 = 0;\n        uVar5 = 0;\n    }\n    else {\n        uVar7 = in_R8 & 0xffffffffffffff00 | *(uVar5 + 0x28) == '\\x03';\n        uVar5 = uVar5 & 0xffffffffffffff00 | *(uVar5 + 0x28) == '\\x05';\n    }\n    cVar6 = uVar7;\n    cVar4 = uVar5;\n    if (((*(unaff_RBX + 0x110) == '\\0') && (cVar6 == '\\0')) && (cVar4 == '\\0')) {\n        iVar3 = 0;\n        iVar1 = fcn.00445360();\n        if (0 < iVar1) {\n            fcn.00419540(unaff_RBX);\n        }\n        if (0 < iVar3) {\n            fcn.00419540(unaff_RDI);\n        }\n        if (in_RAX[7] != 0) {\n            iVar8 = unaff_RSI;\n            for (iVar2 = 0; iVar2 < uVar7; iVar2 = iVar2 + 1) {\n                arg1_00 = unaff_RSI + iVar2 * 0x10;\n                iVar1 = *(unaff_RSI + iVar2 * 0x10);\n                uVar5 = in_RAX[7];\n                if (-1 < iVar1) {\n                    uVar5 = in_RAX[8];\n                }\n                uVar5 = uVar5 + iVar1;\n                if (in_RAX[5] < uVar5 || in_RAX[5] == uVar5) {\n                    unaff_RSI = iVar8;\n                    fcn.0041db80(arg1_00);\n                    iVar8 = unaff_RSI;\n                }\n            }\n        }\n        return;\n    }\n    if ((in_RAX[7] != 0) && (in_RAX[7] != in_RAX[5])) {\n        fcn.004199c0(0);\n        uVar5 = uVar5 & 0xff;\n        uVar7 = uVar7 & 0xff;\n    }\n    iVar2 = fcn.00445020(arg1, uVar5, uVar7);\n    if (iVar2 != 0) {\n        fcn.004199c0(0);\n    }\n    if ((cVar6 == '\\0') && (cVar4 == '\\0')) {\n        *(unaff_RBX + 0x110) = 0;\n    }\n    else {\n        *(unaff_RBX + 0x110) = 1;\n    }\n    return;\n}\n",
        "token_count": 776
    },
    "0041b9c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041b9eb)\n// WARNING: Removing unreachable block (ram,0x0041b9f2)\n// WARNING: Removing unreachable block (ram,0x0041b9f8)\n\nint64_t fcn.0041b9c0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00406640();\n    iVar1 = fcn.004463c0();\n    if (iVar1 != iVar1) {\n        return 100;\n    }\n    return iVar1;\n}\n",
        "token_count": 176
    },
    "0041ba40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ba74)\n// WARNING: Removing unreachable block (ram,0x0041ba7b)\n// WARNING: Removing unreachable block (ram,0x0041ba82)\n// WARNING: Removing unreachable block (ram,0x0041bab3)\n\nulong fcn.0041ba40(void)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00406640();\n    uVar1 = fcn.004464a0();\n    return uVar1;\n}\n",
        "token_count": 168
    },
    "0041e8e0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041e8e0(void)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint64_t *in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    char unaff_BL;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    ulong *puVar13;\n    uint64_t uVar14;\n    uint8_t *puVar15;\n    int64_t iVar16;\n    uint16_t uVar17;\n    int64_t iVar18;\n    uchar *puVar19;\n    int64_t unaff_R14;\n    uint32_t uVar20;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \ncode_r0x0041e8e0:\n    puVar19 = *0x20 + -0x68;\n    puVar12 = *0x20;\n    if (*(unaff_R14 + 0x10) <= puVar19 && puVar19 != *(unaff_R14 + 0x10)) {\n        puVar12 = *0x20 + -0xe8;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar3 = *(unaff_R14 + 0x30);\n        if (((*(piVar3 + 0x1b) != 0) || (*(piVar3 + 0x18) != 0)) || (*piVar3 == unaff_R14)) {\n            uVar11 = *in_RAX;\n            if (unaff_BL == '\\0') {\n                *in_RAX = 0;\n            }\n            *(*0x20 + -0xc0) = *0x516dd8;\n            cVar4 = *(uVar11 + 99);\n            *(*0x20 + -200) = cVar4;\n            if ((cVar4 == '\\x01') && (*(uVar11 + 0x58) == *0x516dd8 - 1)) {\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0xa8) = uVar11;\n                *(*0x20 + -0xbc) = *0x516dd8 - 1;\n                uVar20 = *0x516dd8;\n                if (*0x4f6bd0 != '\\0') {\n                    *(*0x20 + -0xf0) = 0x41e991;\n                    fcn.0044c480();\n                    uVar11 = *(*0x20 + -0xa8);\n                    uVar20 = *(*0x20 + -0xc0);\n                }\n                LOCK();\n                *0x516e00 = *0x516e00 + *(uVar11 + 0x20);\n                uVar5 = *(uVar11 + 0x62);\n                *(*0x20 + -199) = uVar5;\n                uVar10 = *(uVar11 + 0x68);\n                *(*0x20 + -0xb0) = uVar10;\n                uVar14 = *(uVar11 + 0x80);\n                *(*0x20 + -0x60) = uVar14;\n                *(*0x20 + -0x48) = uVar11 + 0x80;\n                *(*0x20 + -0x40) = uVar14;\n                do {\n                    uVar6 = uVar20;\n                    puVar13 = *(*0x20 + -0x40);\n                    if (puVar13 == NULL) {\n                        if ((uVar14 != 0) && (*(uVar11 + 0x80) == 0)) {\n                            puVar13 = *(uVar11 + 0x18) + 0x800000000000;\n                            uVar14 = puVar13 >> 0x2a;\n                            if (0x3f < uVar14) {\ncode_r0x0041f485:\n                                uVar7 = 0;\n                                *(*0x20 + -0xf0) = 0x41f492;\n                                fcn.00458f40(0x40);\n                                goto code_r0x0041f492;\n                            }\n                            puVar19 = 0x516e30;\n                            puVar13 = puVar13 >> 0x16 & 0xfffff;\n                            uVar14 = *(*(uVar14 * 8 + 0x516e30) + puVar13 * 8);\n                            uVar7 = *(uVar11 + 0x18) >> 0xd;\n                            uVar8 = (uVar7 & 0x1ff) >> 3;\n                            if (0x3f < uVar8) {\n                                *(*0x20 + -0xf0) = 0x41f485;\n                                fcn.00458f40(0x40);\n                                goto code_r0x0041f485;\n                            }\n                            puVar15 = uVar14 + uVar8 + 0x11480;\n                            LOCK();\n                            *puVar15 = *puVar15 & ~(1 << (uVar7 & 7));\n                        }\n                        if ((*0x544ea8 != 0) || (*0x544e64 != 0)) {\n                            *(*0x20 + -0x38) = *(uVar11 + 0x50);\n                            *(*0x20 + -0x30) = 1;\n                            *(*0x20 + -0x28) = 0;\n                            *(*0x20 + -0x20) = *(uVar11 + 0x48);\n                            *(*0x20 + -0x18) = 1;\n                            *(*0x20 + -0x10) = 0;\n                            for (uVar14 = 0; uVar14 <= *(uVar11 + 0x38) && *(uVar11 + 0x38) != uVar14;\n                                uVar14 = uVar14 + 1) {\n                                if (((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) &&\n                                   ((*(*0x20 + -0x10) <= *(uVar11 + 0x30) && *(uVar11 + 0x30) != *(*0x20 + -0x10) ||\n                                    ((**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0)))) {\n                                    iVar16 = *(uVar11 + 0x68) * uVar14 + *(uVar11 + 0x18);\n                                    if (*0x544ea8 != 0) {\n                                        *(*0x20 + -0x90) = uVar14;\n                                        *(*0x20 + -0xb8) = iVar16;\n                                        *(*0x20 + -0xf0) = 0x41f3bb;\n                                        fcn.00428840();\n                                        uVar14 = *(*0x20 + -0x90);\n                                        uVar11 = *(*0x20 + -0xa8);\n                                        uVar10 = *(*0x20 + -0xb0);\n                                        iVar16 = *(*0x20 + -0xb8);\n                                    }\n                                    if (*0x544e64 != 0) {\n                                        for (uVar6 = 0; uVar6 < uVar10; uVar6 = uVar6 + 4) {\n                                            *(iVar16 + uVar6) = 0xdeadbeef;\n                                        }\n                                    }\n                                }\n                                if (*(*0x20 + -0x30) == -0x80) {\n                                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                                    *(*0x20 + -0x30) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                                }\n                                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                                if (*(*0x20 + -0x18) == -0x80) {\n                                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                                    *(*0x20 + -0x18) = 1;\n                                }\n                                else {\n                                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                                }\n                                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                            }\n                        }\n                        uVar14 = *(uVar11 + 0x30);\n                        if (*(uVar11 + 0x38) < uVar14 || *(uVar11 + 0x38) == uVar14) goto code_r0x0041ec77;\n                        uVar10 = uVar14 >> 3;\n                        if ((~*(uVar10 + *(uVar11 + 0x48)) & *(uVar10 + *(uVar11 + 0x50))) >> (uVar14 & 7) != 0) {\n                            *(*0x20 + -0x68) = uVar10;\n                            *(*0x20 + -0xf0) = 0x41ec45;\n                            fcn.0041f6c0();\n                            uVar10 = *(*0x20 + -0x68);\n                            uVar11 = *(*0x20 + -0xa8);\n                        }\n                        do {\n                            while (uVar10 = uVar10 + 1,  uVar10 < *(uVar11 + 0x38) + 7U >> 3) {\n                                if ((*(uVar10 + *(uVar11 + 0x50)) & ~*(uVar10 + *(uVar11 + 0x48))) != 0) {\n                                    *(*0x20 + -0x98) = uVar10;\n                                    *(*0x20 + -0xf0) = 0x41f30a;\n                                    fcn.0041f6c0();\n                                    uVar10 = *(*0x20 + -0x98);\n                                    uVar11 = *(*0x20 + -0xa8);\n                                }\n                            }\ncode_r0x0041ec77:\n                            uVar14 = *(uVar11 + 0x38) + 7U >> 3;\n                            *(*0x20 + -0x68) = uVar14;\n                            iVar16 = 0;\n                            for (uVar10 = 0; *(*0x20 + -0x80) = iVar16,  uVar10 < uVar14; uVar10 = uVar10 + 8) {\n                                if (*0x5449f2 == '\\0') {\n                                    *(*0x20 + -0xa0) = uVar10;\n                                    *(*0x20 + -0xf0) = 0x41ecd1;\n                                    iVar18 = fcn.00402120();\n                                    uVar14 = *(*0x20 + -0x68);\n                                    uVar11 = *(*0x20 + -0xa8);\n                                    iVar16 = *(*0x20 + -0x80);\n                                    uVar10 = *(*0x20 + -0xa0);\n                                }\n                                else {\n                                    iVar18 = popcnt(*(*(uVar11 + 0x50) + uVar10));\n                                }\n                                iVar16 = iVar16 + iVar18;\n                            }\n                            uVar17 = *(uVar11 + 0x60);\n                            uVar14 = uVar17;\n                            uVar20 = uVar17 - iVar16;\n                            uVar10 = uVar20;\n                            *(*0x20 + -0xc4) = uVar20;\n                            if (iVar16 <= uVar17) {\n                                *(uVar11 + 0x60) = iVar16;\n                                *(uVar11 + 0x30) = 0;\n                                *(uVar11 + 0x98) = 0;\n                                if (*0x4f6bd0 != '\\0') {\n                                    uVar14 = *(*(unaff_R14 + 0x30) + 0xa0);\n                                    *(uVar14 + 0x11e8) = *(uVar14 + 0x11e8) + *(uVar11 + 0x68) * (uVar20 & 0xffff);\n                                }\n                                uVar17 = uVar14;\n                                *(uVar11 + 0x48) = *(uVar11 + 0x50);\n                                *(*0x20 + -0xf0) = 0x41ed7d;\n                                uVar9 = fcn.00423180();\n                                uVar14 = *(*0x20 + -0xa8);\n                                *(uVar14 + 0x50) = uVar9;\n                                *(*0x20 + -0xf0) = 0x41ed90;\n                                fcn.0040f600();\n                                iVar16 = *(*0x20 + -0xa8);\n                                uVar5 = *(iVar16 + 99);\n                                uVar10 = uVar14 & 0xffffffffffffff00 | uVar5;\n                                *(*0x20 + -0xc9) = uVar5;\n                                if (uVar5 == 1) {\n                                    uVar20 = *(iVar16 + 0x58);\n                                    uVar11 = uVar20;\n                                    if (uVar20 == *(*0x20 + -0xbc)) {\n                                        uVar2 = *(*0x20 + -0xc0);\n                                        if ((uVar20 != uVar2 + 1) && (uVar20 != uVar2 + 3)) {\n                                            uVar11 = uVar2;\n                                            *(iVar16 + 0x58) = uVar2;\n                                            if (*(iVar16 + 0x65) == '\\0') {\n                                                uVar14 = *(*0x20 + -199);\n                                                uVar5 = *(*0x20 + -199) >> 1;\n                                                if (uVar5 == 0) {\n                                                    if (*(*0x20 + 0x10) != '\\0') {\n                                                        return 0;\n                                                    }\n                                                    if (*(*0x20 + -0xc4) != 0) {\n                                                        if (*0x544e68 < 1) {\n                                                            *(*0x20 + -0xf0) = 0x41f087;\n                                                            fcn.004224e0();\n                                                        }\n                                                        else {\n                                                            *(iVar16 + 0x70) = 0;\n                                                            *(*0x20 + -0xf0) = 0x41f079;\n                                                            fcn.00412980();\n                                                        }\n                                                        *(*0x20 + -0xf0) = 0x41f093;\n                                                        iVar16 = fcn.00429b00();\n                                                        LOCK();\n                                                        *(iVar16 + 0x270) = *(iVar16 + 0x270) + 1;\n                                                        LOCK();\n                                                        piVar3 = iVar16 + 0x268;\n                                                        iVar16 = *piVar3;\n                                                        *piVar3 = *piVar3 + *(*0x20 + -0xb0);\n                                                        *(*0x20 + -0xf0) = 0x41f0bb;\n                                                        fcn.00429be0(iVar16);\n                                                        LOCK();\n                                                        *0x545418 = *0x545418 + *(*0x20 + -0xb0);\n                                                        return 1;\n                                                    }\n                                                    if (uVar14 < 0x88) {\n                                                        *(*0x20 + -0xf0) = 0x41f113;\n                                                        fcn.00429460(uVar14 * 0xc0 + 0x517128, (uVar2 >> 1 & 1) * 5);\n                                                        return 0;\n                                                    }\n                                                    *(*0x20 + -0xf0) = 0x41f131;\n                                                    fcn.00458f20(0x88);\ncode_r0x0041f131:\n                                                    *(*0x20 + -0xf0) = 0x41f13d;\n                                                    fcn.00458f20(0x88);\ncode_r0x0041f13d:\n                                                    *(*0x20 + -0xf0) = 0x41f149;\n                                                    fcn.00458f20(0x88);\n                                                }\n                                                else {\n                                                    if (*(*0x20 + -0xc4) == 0) {\n                                                        cVar4 = *(*0x20 + 0x10);\ncode_r0x0041ef76:\n                                                        if (cVar4 != '\\0') {\n                                                            return 0;\n                                                        }\n                                                        if (*(*0x20 + -0x80) == 0) {\n                                                            *(*0x20 + -0xf0) = 0x41f026;\n                                                            fcn.004224e0();\n                                                            return 1;\n                                                        }\n                                                        if (*(iVar16 + 0x38) != (*(*0x20 + -0x80) & 0xffff)) {\n                                                            if (uVar14 < 0x88) {\n                                                                *(*0x20 + -0xf0) = 0x41f015;\n                                                                fcn.00429460(uVar14 * 0xc0 + 0x5170d8, \n                                                                             (uVar11 >> 1 & 1) * 5);\n                                                                return 0;\n                                                            }\n                                                            goto code_r0x0041f131;\n                                                        }\n                                                        if (uVar14 < 0x88) {\n                                                            *(*0x20 + -0xf0) = 0x41efd5;\n                                                            fcn.00429460(uVar14 * 0xc0 + 0x517128, (uVar11 >> 1 & 1) * 5\n                                                                        );\n                                                            return 0;\n                                                        }\n                                                        goto code_r0x0041f13d;\n                                                    }\n                                                    *(*0x20 + -0xc5) = uVar5;\n                                                    *(iVar16 + 100) = 1;\n                                                    *(*0x20 + -0xf0) = 0x41ef05;\n                                                    iVar16 = fcn.00429b00();\n                                                    if (*(*0x20 + -0xc5) < 0x44) {\n                                                        piVar3 = iVar16 + *(*0x20 + -0xc5) * 8 + 0x278;\n                                                        *(*0x20 + -0x70) = *(*0x20 + -0xc4);\n                                                        LOCK();\n                                                        iVar16 = *piVar3;\n                                                        *piVar3 = *piVar3 + *(*0x20 + -0xc4);\n                                                        *(*0x20 + -0xf0) = 0x41ef45;\n                                                        fcn.00429be0(piVar3, iVar16);\n                                                        iVar16 = *(*0x20 + -0xa8);\n                                                        LOCK();\n                                                        *0x545418 = *0x545418 + *(*0x20 + -0x70) * *(iVar16 + 0x68);\n                                                        cVar4 = *(*0x20 + 0x10);\n                                                        uVar11 = *(*0x20 + -0xc0);\n                                                        uVar14 = *(*0x20 + -199);\n                                                        goto code_r0x0041ef76;\n                                                    }\n                                                }\n                                                *(*0x20 + -0xf0) = 0x41f156;\n                                                fcn.00458f20(0x44);\ncode_r0x0041f156:\n                                                uVar10 = 0x88;\n                                                *(*0x20 + -0xf0) = 0x41f165;\n                                                fcn.00458f20(0x88);\n                                            }\n                                            else if (*(*0x20 + 0x10) == '\\0') {\n                                                if (*(*0x20 + -0x80) == 0) {\n                                                    LOCK();\n                                                    *0x516df8 = *0x516df8 - *(iVar16 + 0x20);\n                                                    uVar1 = *(iVar16 + 99);\n                                                    *(iVar16 + 99) = 0;\n                                                    *(*0x20 + -0x58) =\n                                                         CONCAT412(in_XMM15_Dd, \n                                                                   CONCAT48(in_XMM15_Dc, \n                                                                            CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                                    *(*0x20 + -0x58) = 0x41f620;\n                                                    *(*0x20 + -0x50) = iVar16;\n                                                    *(*0x20 + -0xe8) = *0x20 + -0x58;\n                                                    *(*0x20 + -0xf0) = 0x41ee9e;\n                                                    fcn.004567a0(uVar1);\n                                                    return 0;\n                                                }\n                                                if (*(*0x20 + -199) < 0x88) {\n                                                    *(*0x20 + -0xf0) = 0x41ee3e;\n                                                    fcn.00429460(*(*0x20 + -199) * 0xc0 + 0x517128, (uVar2 >> 1 & 1) * 5\n                                                                );\n                                                    return 0;\n                                                }\n                                                goto code_r0x0041f156;\n                                            }\n                                            *(*0x20 + -0xf0) = 0x41f176;\n                                            fcn.00430040();\n                                        }\n                                        iVar16 = 0x11;\n                                        *(*0x20 + -0xf0) = 0x41f187;\n                                        fcn.00430040();\n                                    }\n                                }\n                                *(*0x20 + -0x78) = *(iVar16 + 0x58);\n                                *(*0x20 + -0xf0) = 0x41f194;\n                                fcn.00431980();\n                                *(*0x20 + -0xf0) = 0x41f1a5;\n                                fcn.00432280();\n                                *(*0x20 + -0xf0) = 0x41f1b2;\n                                fcn.00431f80();\n                                *(*0x20 + -0xf0) = 0x41f1c5;\n                                fcn.00432280();\n                                *(*0x20 + -0xf0) = 0x41f1cf;\n                                fcn.00431f80();\n                                *(*0x20 + -0xf0) = 0x41f1e5;\n                                fcn.00432280();\n                                *(*0x20 + -0xf0) = 0x41f1ee;\n                                fcn.00431f80();\n                                *(*0x20 + -0xf0) = 0x41f1f3;\n                                fcn.00431be0();\n                                *(*0x20 + -0xf0) = 0x41f1f8;\n                                fcn.00431a00();\n                                *(*0x20 + -0xf0) = 0x41f209;\n                                fcn.00430040();\n                            }\n                            *(*0x20 + -0xc2) = uVar17;\n                            *(*0x20 + -0x68) = *(uVar11 + 0x38);\n                            *(*0x20 + -0xf0) = 0x41f225;\n                            fcn.00431980();\n                            *(*0x20 + -0xf0) = 0x41f236;\n                            fcn.00432280();\n                            *(*0x20 + -0xf0) = 0x41f245;\n                            fcn.00431f80();\n                            *(*0x20 + -0xf0) = 0x41f256;\n                            fcn.00432280();\n                            *(*0x20 + -0xf0) = 0x41f265;\n                            fcn.00431f80();\n                            *(*0x20 + -0xf0) = 0x41f276;\n                            fcn.00432280();\n                            *(*0x20 + -0xf0) = 0x41f285;\n                            fcn.00431f80();\n                            *(*0x20 + -0xf0) = 0x41f296;\n                            fcn.00432280();\n                            *(*0x20 + -0xf0) = 0x41f2a5;\n                            fcn.00431f80();\n                            *(*0x20 + -0xf0) = 0x41f2aa;\n                            fcn.00431be0();\n                            *(*0x20 + -0xf0) = 0x41f2af;\n                            fcn.00431a00();\n                            *(*0x20 + -0xf0) = 0x41f2c5;\n                            fcn.00430040();\n                        } while( true );\n                    }\n                    if (uVar10 == 0) goto code_r0x0041f553;\n                    puVar19 = *(uVar11 + 0x50);\n                    uVar6 = SUB168(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar10), 0);\n                    uVar11 = uVar6 >> 3;\n                    uVar5 = puVar19[uVar11];\n                    uVar20 = SUB164(ZEXT216(*(puVar13 + 1)) / ZEXT816(uVar10), 0) & 7;\n                    uVar7 = uVar20;\n                    if ((1 << uVar20 & uVar5) == 0) {\n                        uVar6 = uVar6 * uVar10 + uVar10;\n                        for (; puVar13 != NULL; puVar13 = *puVar13) {\n                            if (uVar6 <= *(puVar13 + 1)) {\n                                cVar4 = '\\0';\n                                goto code_r0x0041eae4;\n                            }\n                            if (*(puVar13 + 10) == '\\x01') {\n                                puVar19[uVar11] = uVar5 | 1 << (uVar7 & 0x1f);\n                                cVar4 = '\\x01';\n                                goto code_r0x0041eae4;\n                            }\ncode_r0x0041f492:\n                        }\n                        cVar4 = '\\0';\ncode_r0x0041eae4:\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0xc6) = cVar4;\n                        uVar11 = *(*0x20 + -0xa8);\n                        while ((puVar13 = *(*0x20 + -0x40),  puVar13 != NULL && (*(puVar13 + 1) < uVar6))) {\n                            puVar19 = *(uVar11 + 0x18);\n                            if ((*(puVar13 + 10) == '\\x01') || (cVar4 == '\\0')) {\n                                uVar9 = *puVar13;\n                                *(*0x20 + -0x40) = uVar9;\n                                **(*0x20 + -0x48) = uVar9;\n                                *(*0x20 + -0xf0) = 0x41f525;\n                                fcn.00423040(uVar10);\n                                cVar4 = *(*0x20 + -0xc6);\n                                uVar11 = *(*0x20 + -0xa8);\n                                uVar6 = *(*0x20 + -0x88);\n                                uVar10 = *(*0x20 + -0xb0);\n                                uVar14 = *(*0x20 + -0x60);\n                            }\n                            else {\n                                *(*0x20 + -0x48) = puVar13;\n                                *(*0x20 + -0x40) = *puVar13;\n                            }\n                        }\n                    }\n                    else {\n                        if (*(puVar13 + 10) == '\\x03') {\n                            uVar9 = *puVar13;\n                            *(*0x20 + -0x40) = uVar9;\n                            **(*0x20 + -0x48) = uVar9;\n                            *(puVar13 + 0x11) = 1;\n                            *(*0x20 + -0xf0) = 0x41ea9e;\n                            fcn.00423040(uVar10);\n                            uVar10 = *(*0x20 + -0xb0);\n                            uVar14 = *(*0x20 + -0x60);\n                        }\n                        else {\n                            *(*0x20 + -0x48) = puVar13;\n                            *(*0x20 + -0x40) = *puVar13;\n                        }\n                        uVar11 = *(*0x20 + -0xa8);\n                    }\n                    uVar20 = *(*0x20 + -0xc0);\n                    uVar5 = *(*0x20 + -199);\n                } while( true );\n            }\n            goto code_r0x0041f558;\n        }\n        goto code_r0x0041f5db;\n    }\n    goto code_r0x0041f5ed;\ncode_r0x0041f553:\n    *(*0x20 + -0xf0) = 0x41f558;\n    fcn.0042e760();\ncode_r0x0041f558:\n    *(*0x20 + -0x78) = *(uVar11 + 0x58);\n    *(*0x20 + -0xf0) = 0x41f565;\n    fcn.00431980();\n    *(*0x20 + -0xf0) = 0x41f576;\n    fcn.00432280();\n    *(*0x20 + -0xf0) = 0x41f585;\n    fcn.00431f80();\n    *(*0x20 + -0xf0) = 0x41f596;\n    fcn.00432280();\n    *(*0x20 + -0xf0) = 0x41f5a5;\n    fcn.00431f80();\n    *(*0x20 + -0xf0) = 0x41f5b6;\n    fcn.00432280();\n    *(*0x20 + -0xf0) = 0x41f5bf;\n    fcn.00431f80();\n    *(*0x20 + -0xf0) = 0x41f5c5;\n    fcn.00431be0();\n    *(*0x20 + -0xf0) = 0x41f5ca;\n    fcn.00431a00();\n    *(*0x20 + -0xf0) = 0x41f5db;\n    fcn.00430040();\ncode_r0x0041f5db:\n    unaff_BL = '\\x1c';\n    *(*0x20 + -0xf0) = 0x41f5ec;\n    in_RAX = fcn.00430040();\ncode_r0x0041f5ed:\n    *(puVar12 + 8) = in_RAX;\n    puVar12[0x10] = unaff_BL;\n    *(puVar12 + -8) = 0x41f5fb;\n    fcn.004568e0();\n    in_RAX = *(puVar12 + 8);\n    unaff_BL = puVar12[0x10];\n    *0x20 = puVar12;\n    goto code_r0x0041e8e0;\n}\n",
        "token_count": 6871
    },
    "004219c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004219c0(uint64_t param_1)\n\n{\n    int64_t *piVar1;\n    uint64_t *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    uint64_t uVar11;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uchar unaff_DIL;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    bool bVar14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x18)) {\n            puVar12 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x61) = unaff_DIL;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar9 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = iVar9;\n            if (iVar9 == 0) {\n                iVar7 = 0;\n                iVar9 = 0;\n                unaff_RBX = 0;\ncode_r0x00421b00:\n                *(*0x20 + -0x58) = unaff_RBX;\n                *(*0x20 + -0x20) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x98) = 0x421b17;\n                fcn.00409860();\n                if (*(*0x20 + -0x38) != 0) {\n                    uVar8 = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    uVar6 = *(*0x20 + -0x58);\n                    goto code_r0x00421bc1;\n                }\n                *(*0x20 + -0x18) = *(*0x20 + 8) + 8;\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x421b57;\n                iVar9 = fcn.00425220();\n                if (iVar9 != 0) {\n                    uVar8 = 0;\n                    goto code_r0x00421bc1;\n                }\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x421b77;\n                uVar8 = fcn.00422200();\n                if (uVar6 == '\\0') {\n                    *(*0x20 + -0x98) = 0x421b8a;\n                    fcn.00409a80();\n                    return 0;\n                }\n                *(*0x20 + -0x48) = uVar8;\n                uVar6 = *(*0x20 + 0x10);\n                *(*0x20 + -0x98) = 0x421bb3;\n                iVar9 = fcn.00425220();\n                if (iVar9 != 0) {\n                    uVar8 = *(*0x20 + -0x48);\ncode_r0x00421bc1:\n                    *(*0x20 + -0x58) = uVar6;\n                    *(*0x20 + -0x38) = iVar9;\n                    *(*0x20 + -0x48) = uVar8;\n                    iVar9 = *(*0x20 + -0x20);\n                    if (iVar9 == 0) {\n                        *(*0x20 + -0x98) = 0x421be7;\n                        iVar9 = fcn.004218c0();\n                    }\n                    *(*0x20 + -0x20) = iVar9;\n                    *(*0x20 + -0x98) = 0x421bfe;\n                    fcn.00409a80();\n                    uVar11 = *(*0x20 + -0x48);\n                    iVar7 = *(*0x20 + -0x38);\n                    iVar9 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x58);\ncode_r0x00421c12:\n                    if (*0x544ec4 == '\\0') {\n                        noname_1 = 0;\n                        if (*0x545308 < *0x545420 + unaff_RBX) {\n                            noname_1 = (*0x545420 + unaff_RBX) - *0x545308;\n                        }\n                    }\n                    else {\n                        noname_1 = 0;\n                    }\n                    if (*0x544ca0 == 0xffffffffffffffff) {\n                        bVar14 = *(*0x20 + -0x10) == 0;\n                    }\n                    else if (uVar11 == 0) {\n                        bVar14 = *(*0x20 + -0x10) == 0;\n                    }\n                    else {\n                        uVar13 = *0x5453f8 + *0x545408 + uVar11;\n                        if (*0x544ca0 < uVar13) {\n                            uVar13 = uVar13 - *0x544ca0;\n                            if (uVar13 < uVar11) {\n                                uVar11 = uVar13;\n                            }\n                            if (noname_1 < uVar11) {\n                                noname_1 = uVar11;\n                            }\n                            bVar14 = *(*0x20 + -0x10) == 0;\n                        }\n                        else {\n                            bVar14 = *(*0x20 + -0x10) == 0;\n                        }\n                    }\n                    *(*0x20 + -0x58) = unaff_RBX;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x20) = iVar9;\n                    if ((!bVar14) && (noname_1 != 0)) {\n                        *(*0x20 + -0x40) = noname_1;\n                        *(*0x20 + -0x98) = 0x421cde;\n                        fcn.0045a8a0();\n                        *(*0x20 + -0x60) = *(*0x20 + -0x90);\n                        uVar11 = *(*(*0x20 + -0x10) + 0x1220);\n                        *(*0x20 + -0x28) = uVar11 >> 0x3d;\n                        if (uVar11 >> 0x3d == 0) {\n                            *(*(*0x20 + -0x10) + 0x1220) = *(*0x20 + -0x90) & 0x1fffffffffffffff | 0x6000000000000000;\n                        }\n                        *(*0x20 + -0x98) = 0x421d5a;\n                        fcn.0041c8e0(0x47c9e0);\n                        *(*0x20 + -0x98) = 0x421d65;\n                        fcn.0045a8a0();\n                        iVar9 = *(*0x20 + -0x90);\n                        if (*(*0x20 + -0x28) == '\\0') {\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x98) = 0x421da5;\n                            fcn.00416ac0(iVar9);\n                            iVar9 = *(*0x20 + -0x50);\n                        }\n                        noname_1 = 0x544cb0;\n                        LOCK();\n                        *0x544cb0 = *0x544cb0 + (iVar9 - *(*0x20 + -0x60));\n                    }\n                    *(*0x20 + -0x98) = 0x421df0;\n                    fcn.00421f60(*(*0x20 + 0x18), noname_1, *(*0x20 + 0x10));\n                    *(*0x20 + -0x30) = *(*0x20 + 0x10) << 0xd;\n                    if (*(*0x20 + -0x58) != 0) {\n                        *(*0x20 + -0x98) = 0x421e15;\n                        fcn.004128c0(*(*0x20 + -0x58));\n                        *(*0x20 + -0x98) = 0x421e29;\n                        fcn.00429a40();\n                    }\n                    *(*0x20 + -0x98) = 0x421e45;\n                    fcn.00429a40();\n                    if (*(*0x20 + 0x18) == '\\0') {\n                        *(*0x20 + -0x98) = 0x421e65;\n                        fcn.00429a40();\n                    }\n                    *(*0x20 + -0x98) = 0x421e71;\n                    piVar10 = fcn.00429b00();\n                    iVar9 = *(*0x20 + -0x58);\n                    LOCK();\n                    *piVar10 = *piVar10 + iVar9;\n                    LOCK();\n                    piVar1 = piVar10 + 1;\n                    iVar7 = *piVar1;\n                    *piVar1 = *piVar1 - iVar9;\n                    uVar3 = *(*0x20 + 0x18);\n                    uVar11 = uVar3;\n                    if (uVar3 < 2) {\n                        if (uVar3 == 0) {\n                            LOCK();\n                            puVar2 = piVar10 + 2;\n                            uVar11 = *puVar2;\n                            *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                        }\n                        else {\n                            LOCK();\n                            puVar2 = piVar10 + 3;\n                            uVar11 = *puVar2;\n                            *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                        }\n                    }\n                    else if (uVar3 == 2) {\n                        LOCK();\n                        puVar2 = piVar10 + 5;\n                        uVar11 = *puVar2;\n                        *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                    }\n                    else if (uVar3 == 3) {\n                        LOCK();\n                        puVar2 = piVar10 + 4;\n                        uVar11 = *puVar2;\n                        *puVar2 = *puVar2 + *(*0x20 + -0x30);\n                    }\n                    *(*0x20 + -0x98) = 0x421ee5;\n                    fcn.00429be0(uVar11, iVar7);\n                    return *(*0x20 + -0x20);\n                }\n                unaff_RBX = 0x2b;\n                *(*0x20 + -0x98) = 0x421f0b;\n                fcn.00430040();\n            }\n            else {\n                if (0xf < unaff_RBX) {\n                    iVar7 = 0;\n                    iVar9 = 0;\n                    unaff_RBX = 0;\n                    goto code_r0x00421b00;\n                }\n                if (*(iVar9 + 0x50) == 0) {\n                    *(*0x20 + -0x98) = 0x421a39;\n                    fcn.00409860();\n                    param_1 = *(*0x20 + 8) + 8;\n                    *(*0x20 + -0x98) = 0x421a4d;\n                    uVar6 = fcn.004267e0();\n                    iVar9 = *(*0x20 + -0x10);\n                    *(iVar9 + 0x48) = uVar6;\n                    *(iVar9 + 0x50) = unaff_RBX;\n                    *(iVar9 + 0x58) = param_1;\n                    *(*0x20 + -0x98) = 0x421a70;\n                    fcn.00409a80();\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(*0x20 + -0x98) = 0x421a89;\n                iVar7 = fcn.004263e0(param_1);\n                if (iVar7 == 0) {\n                    iVar9 = 0;\n                    goto code_r0x00421b00;\n                }\n                iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n                if ((iVar4 == 0) || (iVar5 = *(iVar4 + 0xdc8),  iVar5 == 0)) {\n                    iVar9 = 0;\ncode_r0x00421acf:\n                    if (iVar9 == 0) goto code_r0x00421b00;\n                    uVar11 = 0;\n                    goto code_r0x00421c12;\n                }\n                if (iVar5 - 1U < 0x80) {\n                    iVar9 = *(iVar4 + 0xdc8 + iVar5 * 8);\n                    *(iVar4 + 0xdc8) = iVar5 - 1U;\n                    goto code_r0x00421acf;\n                }\n            }\n            param_1 = 0x80;\n            *(*0x20 + -0x98) = 0x421f18;\n            in_RAX = fcn.00458f20(0x80);\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        puVar12[0x18] = param_1;\n        puVar12[0x19] = unaff_DIL;\n        *(puVar12 + -8) = 0x421f31;\n        fcn.0045b2e0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        param_1 = puVar12[0x18];\n        unaff_DIL = puVar12[0x19];\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 3219
    },
    "00422680": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00422680(uchar param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    int16_t iVar3;\n    ulong arg1;\n    ulong *puVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = param_1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*(unaff_RBX + 99) == '\\x01') {\n                if (*(unaff_RBX + 0x65) == '\\0') {\n                    iVar3 = *(unaff_RBX + 0x60);\n                    *(*0x20 + -0x2a) = iVar3;\n                    if ((iVar3 == 0) && (*(in_RAX + 0x10118) == *(unaff_RBX + 0x58))) {\n                        LOCK();\n                        *(in_RAX + 0x10138) = *(in_RAX + 0x10138) - *(unaff_RBX + 0x20);\n                        uVar6 = *(unaff_RBX + 0x18);\n                        uVar9 = uVar6 + 0x800000000000 >> 0x2a;\n                        if (uVar9 < 0x40) {\n                            puVar7 = (uVar6 >> 0x10 & 0x3f) + 0x11400 +\n                                     *(*(uVar9 * 8 + 0x516e30) + (uVar6 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                            LOCK();\n                            *puVar7 = *puVar7 & ~(1 << (uVar6 >> 0xd & 7));\n                            goto code_r0x00422794;\n                        }\n                        goto code_r0x0042290b;\n                    }\n                    goto code_r0x00422918;\n                }\n            }\n            else {\n                if (*(unaff_RBX + 99) == '\\x02') {\n                    if (*(unaff_RBX + 0x60) == 0) {\ncode_r0x00422794:\n                        *(*0x20 + -0x10) = *(unaff_RBX + 0x20) << 0xd;\n                        *(*0x20 + -0x58) = 0x4227b0;\n                        fcn.00429a40();\n                        if (*(*0x20 + 0x18) == '\\0') {\n                            *(*0x20 + -0x58) = 0x4227cd;\n                            fcn.00429a40();\n                        }\n                        *(*0x20 + -0x58) = 0x4227d9;\n                        iVar5 = fcn.00429b00();\n                        uVar2 = *(*0x20 + 0x18);\n                        uVar6 = uVar2;\n                        if (uVar2 < 2) {\n                            if (uVar2 == 0) {\n                                LOCK();\n                                puVar1 = iVar5 + 0x10;\n                                uVar6 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                            else {\n                                LOCK();\n                                puVar1 = iVar5 + 0x18;\n                                uVar6 = *puVar1;\n                                *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                            }\n                        }\n                        else if (uVar2 == 2) {\n                            LOCK();\n                            puVar1 = iVar5 + 0x28;\n                            uVar6 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        else if (uVar2 == 3) {\n                            LOCK();\n                            puVar1 = iVar5 + 0x20;\n                            uVar6 = *puVar1;\n                            *puVar1 = *puVar1 - *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x58) = 0x42283f;\n                        fcn.00429be0(uVar6);\n                        arg1 = *(*(*0x20 + 0x10) + 0x20);\n                        *(*0x20 + -0x58) = 0x422868;\n                        fcn.004254e0(arg1);\n                        puVar4 = *(*0x20 + 0x10);\n                        *(puVar4 + 99) = 0;\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        if (iVar5 == 0) {\ncode_r0x004228aa:\n                            iVar5 = *(*0x20 + 8);\n                            *(iVar5 + 0x16a40) = *(iVar5 + 0x16a40) - *(iVar5 + 0x16a10);\n                            *puVar4 = *(iVar5 + 0x16a28);\n                            *(iVar5 + 0x16a28) = puVar4;\n                            return;\n                        }\n                        uVar6 = *(iVar5 + 0xdc8);\n                        if (0x7f < uVar6) goto code_r0x004228aa;\n                        if (uVar6 < 0x80) {\n                            *(iVar5 + 0xdd0 + uVar6 * 8) = puVar4;\n                            *(iVar5 + 0xdc8) = *(iVar5 + 0xdc8) + 1;\n                            return;\n                        }\n                        *(*0x20 + -0x58) = 0x4228e9;\n                        fcn.00458f20(0x80);\n                    }\n                    *(*0x20 + -0x58) = 0x4228fa;\n                    fcn.00430040();\n                }\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x58) = 0x42290b;\n                fcn.00430040();\ncode_r0x0042290b:\n                *(*0x20 + -0x58) = 0x422918;\n                in_RAX = fcn.00458f40(0x40);\ncode_r0x00422918:\n                uVar6 = *(unaff_RBX + 0x58);\n                *(*0x20 + -0x18) = uVar6;\n                *(*0x20 + -0x20) = *(in_RAX + 0x10118);\n                *(*0x20 + -0x28) = *(unaff_RBX + 0x18);\n                *(*0x20 + -0x58) = 0x422939;\n                fcn.00431980();\n                param_1 = uVar6;\n                *(*0x20 + -0x58) = 0x42294a;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x422954;\n                fcn.00432240();\n                *(*0x20 + -0x58) = 0x422965;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x42296f;\n                fcn.004320e0();\n                *(*0x20 + -0x58) = 0x422985;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x42298f;\n                fcn.00431f80();\n                *(*0x20 + -0x58) = 0x4229a5;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x4229af;\n                fcn.00431f80();\n                *(*0x20 + -0x58) = 0x4229c5;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x4229cf;\n                fcn.00431f80();\n                *(*0x20 + -0x58) = 0x4229d4;\n                fcn.00431be0();\n                *(*0x20 + -0x58) = 0x4229d9;\n                fcn.00431a00();\n                *(*0x20 + -0x58) = 0x4229ea;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x37;\n            *(*0x20 + -0x58) = 0x4229fb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x422a0f;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2188
    },
    "00423040": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423040(ulong arg1)\n\n{\n    char cVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            cVar1 = *(in_RAX + 10);\n            if (cVar1 == '\\x01') {\n                uVar2 = *(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4230f0;\n                fcn.004130c0(uVar2);\n                *(*0x20 + -0x38) = 0x4230fe;\n                fcn.00409860();\n                *0x51d790 = *0x51d790 - *0x51d760;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x51d778;\n                *(*0x20 + -0x38) = 0x423138;\n                *0x51d778 = puVar3;\n                fcn.00409a80();\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                uVar2 = *(in_RAX + 0x10);\n                *(*0x20 + -0x38) = 0x42308c;\n                fcn.00427d80(arg1, uVar2);\n                *(*0x20 + -0x38) = 0x42309a;\n                fcn.00409860();\n                *0x51d7d8 = *0x51d7d8 - *0x51d7a8;\n                puVar3 = *(*0x20 + 8);\n                *puVar3 = *0x51d7c0;\n                *(*0x20 + -0x38) = 0x4230d3;\n                *0x51d7c0 = puVar3;\n                fcn.00409a80();\n                return;\n            }\n            if (cVar1 == '\\x03') {\n                *(in_RAX + 0x10) = 1;\n                return;\n            }\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x423153;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x423168;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 769
    },
    "00427560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00427560(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x10) == 2) || (*(in_RAX + 0x10) == 3)) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x4275ad;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4275b8;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 303
    },
    "004275c0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong * fcn.004275c0(ulong *arg1)\n\n{\n    ulong *in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *arg2;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong *unaff_RSI;\n    ulong *unaff_RDI;\n    char cVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \ncode_r0x004275c0:\n    puVar4 = *0x4f15e0;\n    cVar7 = in_R8;\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (*0x4f15e0 != NULL) {\ncode_r0x00427672:\n            cVar7 = in_R8;\n            uVar8 = 0;\n            for (iVar3 = 0; iVar3 < unaff_RDI; iVar3 = iVar3 + 1) {\n                uVar8 = (arg1[iVar3] + uVar8) * 0x401;\n                uVar8 = uVar8 >> 6 ^ uVar8;\n            }\n            uVar8 = (uVar8 + unaff_RBX) * 0x401;\n            uVar8 = (uVar8 >> 6 ^ uVar8) * 9;\n            uVar8 = uVar8 >> 0xb ^ uVar8;\n            if (uVar8 % 179999 < 179999) {\n                puVar4 = puVar4 + uVar8 % 179999;\n                puVar1 = *puVar4;\n                do {\n                    cVar7 = in_R8;\n                    if (puVar1 == NULL) {\n                        if (cVar7 == '\\0') {\n                            return NULL;\n                        }\n                        *(*0x20 + -0x30) = uVar8;\n                        *(*0x20 + -0x10) = puVar4;\n                        *(*0x20 + -0x50) = 0x427753;\n                        fcn.00409860();\n                        arg1 = *(*0x20 + -0x10);\n                        arg2 = *arg1;\n                        iVar3 = *(*0x20 + 0x18);\n                        puVar4 = *(*0x20 + 0x20);\n                        unaff_RDI = *(*0x20 + 0x10);\n                        in_R8 = *(*0x20 + -0x30);\n                        uVar8 = *(*0x20 + 8);\n                        puVar5 = in_RAX;\n                        do {\n                            if (arg2 == NULL) {\n                                *(*0x20 + -0x50) = 0x4277c5;\n                                puVar1 = fcn.00427460();\n                                arg2 = puVar1[5];\n                                if (0x20 < arg2) {\n                                    iVar3 = 0x20;\n                                    *(*0x20 + -0x50) = 0x42788b;\n                                    iVar2 = fcn.00459040(arg1, arg2);\n                                    goto code_r0x0042788b;\n                                }\n                                *(*0x20 + -0x20) = puVar1;\n                                if (*(*0x20 + 0x20) < arg2) {\n                                    arg2 = *(*0x20 + 0x20);\n                                }\n                                if (*(*0x20 + 0x18) != puVar1 + 6) {\n                                    *(*0x20 + -0x50) = 0x427805;\n                                    fcn.00459880(arg2 << 3);\n                                    puVar1 = *(*0x20 + -0x20);\n                                }\n                                puVar1[3] = *(*0x20 + -0x30);\n                                puVar1[4] = *(*0x20 + 0x10);\n                                if (*(*0x20 + 8) == 1) {\n                                    puVar4 = 0x4f1610;\n                                }\n                                else if (*(*0x20 + 8) == 3) {\n                                    puVar4 = 0x4f1660;\n                                }\n                                else {\n                                    puVar4 = 0x4f15d8;\n                                }\n                                puVar5 = *(*0x20 + -0x10);\n                                *puVar1 = *puVar5;\n                                puVar1[1] = *puVar4;\n                                *puVar5 = puVar1;\n                                *puVar4 = puVar1;\n                                *(*0x20 + -0x50) = 0x427871;\n                                fcn.00409a80();\n                                return *(*0x20 + -0x20);\n                            }\n                            if (((arg2[2] == uVar8) && (arg2[3] == in_R8)) && (arg2[4] == unaff_RDI)) {\n                                puVar5 = arg2[5];\n                                if (0x20 < puVar5) {\n                                    unaff_RBX = 0x20;\n                                    *(*0x20 + -0x50) = 0x4278d9;\n                                    in_RAX = puVar5;\n                                    iVar3 = fcn.00459040(arg1, puVar5);\n                                    goto code_r0x004278d9;\n                                }\n                                if (puVar4 == puVar5) {\n                                    iVar2 = 0;\n                                    while( true ) {\n                                        if (puVar5 <= iVar2) {\n                                            *(*0x20 + -0x28) = arg2;\n                                            *(*0x20 + -0x50) = 0x4278bd;\n                                            fcn.00409a80();\n                                            return *(*0x20 + -0x28);\n                                        }\n                                        puVar1 = arg2[iVar2 + 6];\n                                        if (*(iVar3 + iVar2 * 8) != puVar1) break;\ncode_r0x0042788b:\n                                        iVar2 = iVar2 + 1;\n                                    }\n                                }\n                            }\n                            arg2 = *arg2;\n                        } while( true );\n                    }\n                    if (((puVar1[2] == in_RAX) && (puVar1[3] == uVar8)) && (puVar1[4] == unaff_RBX)) {\n                        puVar5 = puVar1[5];\n                        if (0x20 < puVar5) goto code_r0x00427905;\n                        if (unaff_RDI == puVar5) {\n                            iVar3 = 0;\n                            while( true ) {\n                                if (puVar5 <= iVar3) {\n                                    return puVar1;\n                                }\n                                if (arg1[iVar3] != puVar1[iVar3 + 6]) break;\ncode_r0x004278d9:\n                                iVar3 = iVar3 + 1;\n                            }\n                        }\n                    }\n                    puVar1 = *puVar1;\n                } while( true );\n            }\n            goto code_r0x0042790f;\n        }\n        *(*0x20 + 0x30) = cVar7;\n        *(*0x20 + -0x50) = 0x42760b;\n        fcn.00409860();\n        puVar1 = *0x4f15e0;\n        if (*0x4f15e0 != NULL) {\ncode_r0x00427640:\n            *0x4f15e0 = puVar1;\n            *(*0x20 + -0x18) = *0x4f15e0;\n            *(*0x20 + -0x50) = 0x427653;\n            fcn.00409a80();\n            in_RAX = *(*0x20 + 8);\n            arg1 = *(*0x20 + 0x18);\n            unaff_RBX = *(*0x20 + 0x10);\n            unaff_RDI = *(*0x20 + 0x20);\n            in_R8 = *(*0x20 + 0x30);\n            puVar4 = *(*0x20 + -0x18);\n            goto code_r0x00427672;\n        }\n        *(*0x20 + -0x50) = 0x427629;\n        arg1 = *0x4f15e0;\n        puVar1 = fcn.004127c0();\n        if (puVar1 != NULL) goto code_r0x00427640;\n        goto code_r0x00427919;\n    }\n    goto code_r0x0042792b;\ncode_r0x00427905:\n    *(*0x20 + -0x50) = 0x42790f;\n    fcn.00459040(arg1, puVar5);\ncode_r0x0042790f:\n    arg1 = 0x2bf1f;\n    *(*0x20 + -0x50) = 0x427919;\n    fcn.00458f20(179999);\ncode_r0x00427919:\n    unaff_RBX = 0x1f;\n    *(*0x20 + -0x50) = 0x42792a;\n    in_RAX = fcn.00430040();\n    unaff_RSI = puVar4;\ncode_r0x0042792b:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + 0x10) = unaff_RBX;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    puVar6[0x30] = cVar7;\n    *(puVar6 + -8) = 0x42794e;\n    fcn.004568e0();\n    in_RAX = *(puVar6 + 8);\n    unaff_RBX = *(puVar6 + 0x10);\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    in_R8 = puVar6[0x30];\n    *0x20 = puVar6;\n    goto code_r0x004275c0;\n}\n",
        "token_count": 2401
    },
    "00427980": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004279b0)\n\nvoid fcn.00427980(void)\n\n{\n    uint32_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if ((*0x544a2c & 1) != 0) {\n                *0x544a2c = *0x544a2c | 1;\n                return;\n            }\n            *(*0x20 + -0x14) = *0x544a2c;\n            *(*0x20 + -0x30) = 0x4279d4;\n            *0x544a2c = *0x544a2c | 1;\n            fcn.00409860();\n            uVar1 = (*(*0x20 + -0x14) >> 1) % 3;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x18) = uVar1;\n                *(*0x20 + -0x10) = uVar1 * 8 + 0x544c40;\n                *(*0x20 + -0x30) = 0x427a0f;\n                fcn.00409860();\n                *(*0x20 + -0x30) = 0x427a18;\n                fcn.00427a60();\n                *(*0x20 + -0x30) = 0x427a25;\n                fcn.00409a80();\n                *(*0x20 + -0x30) = 0x427a33;\n                fcn.00409a80();\n                return;\n            }\n            *(*0x20 + -0x30) = 0x427a51;\n            fcn.00458f20(3);\n        }\n        *(puVar2 + -8) = 0x427a57;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 536
    },
    "00427a60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00427a60(void)\n\n{\n    uint32_t in_EAX;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_EAX;\n            if (uVar1 < 3) {\n                *(*0x20 + -0x10) = uVar1;\n                iVar3 = *0x4f1610;\n                while (iVar3 != 0) {\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x427aa6;\n                    piVar2 = fcn.00427500();\n                    uVar1 = *(*0x20 + -0x10);\n                    *piVar2 = *piVar2 + piVar2[uVar1 * 4 + 4];\n                    piVar2[1] = piVar2[1] + piVar2[uVar1 * 4 + 5];\n                    piVar2[2] = piVar2[2] + piVar2[uVar1 * 4 + 6];\n                    piVar2[3] = piVar2[3] + piVar2[uVar1 * 4 + 7];\n                    *(piVar2 + uVar1 * 4 + 4) = in_XMM15;\n                    *(piVar2 + uVar1 * 4 + 6) = in_XMM15;\n                    iVar3 = *(*(*0x20 + -0x18) + 8);\n                }\n                return uVar1;\n            }\n            *(*0x20 + -0x30) = 0x427b11;\n            in_EAX = fcn.00458f20(3);\n        }\n        *(puVar4 + 8) = in_EAX;\n        *(puVar4 + -8) = 0x427b1b;\n        fcn.004568e0();\n        in_EAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 580
    },
    "00427b40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427b40(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t arg1;\n    ulong uVar3;\n    uint32_t uVar4;\n    uchar *unaff_RBX;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xf0 && *0x20 + -0xf0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x170;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x180) = *0x20 + -8;\n            *(*0x20 + -0x178) = 0x427b8f;\n            fcn.00459174();\n            unaff_RBP = *(*0x20 + -0x180);\n            unaff_RBX = *0x20 + -0x130;\n            *(*0x20 + -0x178) = 0x427baa;\n            arg1 = fcn.0044fd20(0x20);\n            if (arg1 < 0x21) {\n                *(*0x20 + -0x13c) = (*0x544a2c >> 1) + (((*0x544a2c >> 1) + 2) / 3) * -3;\n                unaff_RBX = *(*0x20 + 0x10);\n                *(*0x20 + -0x178) = 0x427bfd;\n                uVar3 = fcn.004275c0(*0x20 + -0x130);\n                *(*0x20 + -0x138) = uVar3;\n                *(*0x20 + -0x178) = 0x427c07;\n                uVar3 = fcn.00427500();\n                uVar4 = *(*0x20 + -0x13c) + 2;\n                if (uVar4 < 3) {\n                    *(*0x20 + -0x140) = uVar4;\n                    *(*0x20 + -0x30) = uVar3;\n                    *(*0x20 + -0x28) = uVar4 * 8 + 0x544c40;\n                    *(*0x20 + -0x178) = 0x427c3f;\n                    fcn.00409860();\n                    uVar4 = *(*0x20 + -0x140);\n                    iVar2 = *(*0x20 + -0x30);\n                    piVar1 = iVar2 + 0x20 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + 1;\n                    piVar1 = iVar2 + 0x30 + uVar4 * 0x20;\n                    *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                    *(*0x20 + -0x178) = 0x427c70;\n                    fcn.00409a80();\n                    *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x10) = 0;\n                    *(*0x20 + -0x20) = 0x427d40;\n                    *(*0x20 + -0x18) = *(*0x20 + 8);\n                    *(*0x20 + -0x10) = *(*0x20 + -0x138);\n                    *(*0x20 + -0x170) = *0x20 + -0x20;\n                    *(*0x20 + -0x178) = 0x427cc5;\n                    fcn.004567a0();\n                    return;\n                }\n                *(*0x20 + -0x178) = 0x427cf3;\n                arg1 = fcn.00458f20(3);\n            }\n            *(*0x20 + -0x178) = 0x427d05;\n            in_RAX = fcn.00458f60(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x427d15;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1131
    },
    "00427d80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427d80(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = *0x544a2c;\n            *(*0x20 + -0x38) = 0x427dad;\n            uVar3 = fcn.00427500();\n            uVar4 = (*(*0x20 + -0x20) >> 1) + 1;\n            unaff_RBX = uVar4 / 3;\n            uVar4 = (*(*0x20 + -0x20) >> 1) + (uVar4 / 3) * -3 + 1;\n            if (uVar4 < 3) {\n                *(*0x20 + -0x1c) = uVar4;\n                *(*0x20 + -0x18) = uVar3;\n                *(*0x20 + -0x10) = uVar4 * 8 + 0x544c40;\n                *(*0x20 + -0x38) = 0x427df1;\n                fcn.00409860();\n                uVar4 = *(*0x20 + -0x1c);\n                iVar2 = *(*0x20 + -0x18);\n                piVar1 = iVar2 + 0x28 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + 1;\n                piVar1 = iVar2 + 0x38 + uVar4 * 0x20;\n                *piVar1 = *piVar1 + *(*0x20 + 0x10);\n                *(*0x20 + -0x38) = 0x427e19;\n                fcn.00409a80();\n                return;\n            }\n            *(*0x20 + -0x38) = 0x427e2f;\n            in_RAX = fcn.00458f20(3);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x427e3f;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 695
    },
    "00427f40": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00427f40(uint64_t arg1)\n\n{\n    double *pdVar1;\n    ulong in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RDX;\n    uchar *unaff_RBX;\n    int64_t iVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xe0 && *0x20 + -0xe0 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x160;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x170) = *0x20 + -8;\n            *(*0x20 + -0x168) = 0x427f95;\n            fcn.00459174();\n            unaff_RBP = *(*0x20 + -0x170);\n            unaff_RDI = *(*(unaff_R14 + 0x30) + 0x90);\n            if ((unaff_RDI == 0) || (unaff_R14 == unaff_RDI)) {\n                unaff_RBX = *0x20 + -0x110;\n                unaff_RDI = 0x20;\n                *(*0x20 + -0x168) = 0x427ff7;\n                arg1 = fcn.0044fd20(0x20);\n            }\n            else {\n                *(*0x20 + -0x160) = 0;\n                unaff_RBX = 0xffffffffffffffff;\n                *(*0x20 + -0x168) = 0x427fdf;\n                arg1 = fcn.0044cd80(0, in_RDX, *0x20 + -0x110, 0x20);\n            }\n            if (arg1 < 0x21) break;\n            in_RDX = 0x20;\n            *(*0x20 + -0x168) = 0x428113;\n            in_RAX = fcn.00458f60(arg1, 0x20);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x42812d;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n    *(*0x20 + -0x168) = 0x42802c;\n    fcn.004275c0(*0x20 + -0x110);\n    *(*0x20 + -0x168) = 0x428031;\n    uVar2 = fcn.00427560();\n    *(*0x20 + -0x10) = uVar2;\n    *(*0x20 + -0x168) = 0x428047;\n    fcn.00409860();\n    if (*(*0x20 + 0x20) == 2) {\n        iVar3 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n        if (iVar4 < iVar3) {\n            pdVar1 = *(*0x20 + -0x10);\n            *pdVar1 = iVar3 / iVar4 + *pdVar1;\n            pdVar1[1] = pdVar1[1] + iVar3;\n            goto code_r0x004280ea;\n        }\n    }\n    else {\n        iVar3 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + 8);\n    }\n    if (*(*0x20 + 0x20) == 3) {\n        pdVar1 = *(*0x20 + -0x10);\n        *pdVar1 = iVar3 + *pdVar1;\n        pdVar1[1] = pdVar1[1] + iVar3 * iVar4;\n    }\n    else {\n        pdVar1 = *(*0x20 + -0x10);\n        *pdVar1 = *0x48f5e0 + *pdVar1;\n        pdVar1[1] = pdVar1[1] + iVar4;\n    }\ncode_r0x004280ea:\n    *(*0x20 + -0x168) = 0x4280f6;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 1144
    },
    "00429b00": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00429b00(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    iVar4 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar4 == 0) {\n        fcn.00409860(in_RAX + 0xdd0);\n    }\n    else {\n        LOCK();\n        piVar1 = iVar4 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) == 0) goto code_r0x00429b93;\n    }\n    uVar5 = *(in_RAX + 0xdc8) % 3;\n    if (uVar5 < 3) {\n        return in_RAX + uVar5 * 0x498;\n    }\n    fcn.00458f20(3);\ncode_r0x00429b93:\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00430040();\n    pcVar3 = swi(3);\n    iVar4 = (*pcVar3)();\n    return iVar4;\n}\n",
        "token_count": 335
    },
    "0042b680": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b680(void)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x24) = 0;\n            *(*0x20 + -0x1c) = 0;\n            *(*0x20 + -0x70) = *0x4f1598;\n            *(*0x20 + -0x68) = *0x20 + -0x20;\n            *(*0x20 + -0x60) = *0x20 + -0x24;\n            *(*0x20 + -0x58) = *0x20 + -0x1c;\n            *(*0x20 + -0x78) = 0x42b6de;\n            fcn.0042d580();\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            uVar10 = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            if ((*(*0x20 + -0x20) < 10) ||\n               (((*(*0x20 + -0x20) == 10 && (*(*0x20 + -0x24) == 0)) && (*(*0x20 + -0x1c) < 0x3ad7)))) {\n                return;\n            }\n            *(*0x20 + -0x78) = 0x42b71f;\n            iVar3 = fcn.0042d420();\n            puVar1 = iVar3 + 3;\n            *(*0x20 + -0x10) = puVar1;\n            uVar2 = *puVar1;\n            *(*0x20 + -0x25) = uVar2;\n            *puVar1 = uVar2 | 0x80;\n            *(*0x20 + -0x78) = 0x42b74a;\n            fcn.0042bee0(0x21);\n            uVar5 = *0x544ba8;\n            if (*0x544ba8 < 0x106) {\n                *(*0x20 + -0x18) = *0x544ba8;\n                *(*0x20 + -0x78) = 0x42b776;\n                fcn.00459880(*0x544ba8);\n                iVar3 = *(*0x20 + -0x18);\n                for (iVar4 = 0; iVar4 < 0x20; iVar4 = iVar4 + 1) {\n                    uVar5 = iVar3 + iVar4 * 2;\n                    if (0x20a < uVar5) goto code_r0x0042b8ea;\n                    *(uVar5 + 0x545680) = *((*(iVar4 + 0x54586a) >> 4) + 0x47708a);\n                    if (0x20a < iVar3 + iVar4 * 2 + 1U) goto code_r0x0042b8dd;\n                    *(uVar5 + 0x545681) = *((*(iVar4 + 0x54586a) & 0xf) + 0x47708a);\n                }\n                uVar5 = iVar3 + 0x40;\n                while( true ) {\n                    if (0x209 < uVar5) {\n                        *(*0x20 + -0x70) = _sym.imp.kernel32.dll_CreateFileA;\n                        *(*0x20 + -0x68) = 0x545680;\n                        *(*0x20 + -0x60) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x50) = 0;\n                        *(*0x20 + -0x48) = 3;\n                        *(*0x20 + -0x40) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                        *(*0x20 + -0x78) = 0x42b85f;\n                        fcn.0042d780();\n                        *(*0x20 + -0x78) = 0x42b876;\n                        fcn.0045a440();\n                        if (*(*0x20 + -0x70) != 3) {\n                            *0x5449e0 = 1;\n                            return;\n                        }\n                        **(*0x20 + -0x10) = *(*0x20 + -0x25);\n                        *(*0x20 + -0x78) = 0x42b89f;\n                        fcn.00431980();\n                        *(*0x20 + -0x78) = 0x42b8b0;\n                        fcn.00432280();\n                        *(*0x20 + -0x78) = 0x42b8b5;\n                        fcn.00431a00();\n                        return;\n                    }\n                    if (0x20a < uVar5) break;\n                    *(uVar5 + 0x545680) = 0x41;\n                    uVar5 = uVar5 + 1;\n                }\n                *(*0x20 + -0x78) = 0x42b8dd;\n                fcn.00458f20(0x20b);\ncode_r0x0042b8dd:\n                *(*0x20 + -0x78) = 0x42b8ea;\n                fcn.00458f20(0x20b);\ncode_r0x0042b8ea:\n                uVar5 = 0x20b;\n                *(*0x20 + -0x78) = 0x42b8f7;\n                fcn.00458f20(0x20b);\n            }\n            *(*0x20 + -0x78) = 0x42b905;\n            fcn.00458f80(uVar5, 0x105);\n        }\n        *(puVar6 + -8) = 0x42b90b;\n        fcn.004568e0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1532
    },
    "00430be0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * fcn.00430be0(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uchar uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar11;\n    \ncode_r0x00430be0:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar6 = *0x20 + -0x70;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        iVar7 = *(*(unaff_R14 + 0x30) + 0x90);\n        if ((iVar7 == 0) || (*(iVar7 + 0x90) != 2)) {\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = 0;\n            iVar4 = 0;\n            iVar5 = 0;\n            iVar7 = 0;\n            iVar8 = 0;\n            iVar9 = 0;\n            do {\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                *(*0x20 + -0x30) = iVar8;\n                uVar10 = *(in_RAX + 0x90);\n                if (uVar10 < 5) {\n                    if (uVar10 != 1) {\n                        if (uVar10 == 2) {\n                            if (*(in_RAX + 0xb2) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0xb1) == '\\0') {\n                                bVar11 = false;\n                            }\n                            else if (*(in_RAX + 0x10) == -0x522) {\n                                if (*(in_RAX + 0x30) == iVar4) {\n                                    bVar11 = *(iVar4 + 0x300) == iVar5;\n                                }\n                                else {\n                                    bVar11 = false;\n                                }\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                            if (!bVar11) {\n                                *(*0x20 + -0x78) = 0x430cf8;\n                                cVar2 = fcn.00434420(0x1002);\n                                if (cVar2 == '\\0') {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                    iVar4 = *(*0x20 + -0x18);\n                                    iVar5 = *(*0x20 + -0x50);\n                                    iVar7 = *(*0x20 + -0x38);\n                                }\n                                else {\n                                    iVar7 = *(*0x20 + 8);\n                                    *(iVar7 + 0xb1) = 0x101;\n                                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                                    iVar7 = *(iVar7 + 0x30);\n                                    *(*0x20 + -0x10) = iVar7;\n                                    iVar5 = *(iVar7 + 0x300);\n                                    *(*0x20 + -0x4c) = iVar5;\n                                    if (*(*0x20 + -0x18) == iVar7) {\n                                        bVar11 = iVar5 != *(*0x20 + -0x50);\n                                    }\n                                    else {\n                                        bVar11 = true;\n                                    }\n                                    *(*0x20 + -0x59) = bVar11;\n                                    *(*0x20 + -0x78) = 0x430d65;\n                                    fcn.00434060(2);\n                                    if (*0x544e98 == 0) {\n                                        if (*(*0x20 + -0x59) == '\\0') {\n                                            iVar7 = *(*0x20 + -0x38);\n                                        }\n                                        else {\n                                            *(*0x20 + -0x78) = 0x430d85;\n                                            fcn.0045a8a0();\n                                            iVar7 = *(*0x20 + -0x38);\n                                            if (iVar7 <= *(*0x20 + -0x70)) {\n                                                *(*0x20 + -0x48) = *(*0x20 + -0x70);\n                                                *(*0x20 + -0x78) = 0x430db4;\n                                                fcn.0042daa0();\n                                                iVar7 = *(*0x20 + -0x48) + 5000;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        iVar7 = *(*0x20 + -0x38);\n                                    }\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    iVar4 = *(*0x20 + -0x10);\n                                    iVar5 = *(*0x20 + -0x4c);\n                                    uVar3 = *(*0x20 + -0x5a);\n                                }\n                            }\n                            goto code_r0x00430ed0;\n                        }\n                        if (uVar10 < 3) goto code_r0x00430e3a;\n                    }\ncode_r0x00430e92:\n                    *(*0x20 + -0x5a) = uVar3;\n                    *(*0x20 + -0x78) = 0x430ea6;\n                    cVar2 = fcn.00434420(uVar10 | 0x1000);\n                    if (cVar2 != '\\0') {\n                        piVar1 = *(*0x20 + 8);\n                        *(piVar1 + 0xb1) = 0;\n                        piVar1[2] = *piVar1 + 0x13a0;\n                        return piVar1;\n                    }\n                    iVar8 = *(*0x20 + -0x30);\n                    iVar9 = *(*0x20 + -0x40);\n                    uVar3 = *(*0x20 + -0x5a);\n                    iVar4 = *(*0x20 + -0x18);\n                    iVar5 = *(*0x20 + -0x50);\n                    iVar7 = *(*0x20 + -0x38);\n                }\n                else {\n                    if (uVar10 == 6) {\n                        return NULL;\n                    }\n                    if (uVar10 != 8) {\n                        if (uVar10 == 9) {\n                            *(*0x20 + -0x78) = 0x430e5a;\n                            cVar2 = fcn.004349e0(4);\n                            if (cVar2 != '\\0') {\n                                uVar10 = 4;\n                                uVar3 = 1;\n                                goto code_r0x00430e92;\n                            }\n                            iVar8 = *(*0x20 + -0x30);\n                            iVar9 = *(*0x20 + -0x40);\n                            uVar3 = *(*0x20 + -0x5a);\n                            iVar4 = *(*0x20 + -0x18);\n                            iVar5 = *(*0x20 + -0x50);\n                            iVar7 = *(*0x20 + -0x38);\n                        }\n                        else {\ncode_r0x00430e3a:\n                            if ((uVar10 >> 0xc & 1) == 0) goto code_r0x00430fe6;\n                        }\n                    }\n                }\ncode_r0x00430ed0:\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x50) = iVar5;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x5a) = uVar3;\n                if (iVar8 == 0) {\n                    *(*0x20 + -0x78) = 0x430eec;\n                    fcn.0045a8a0();\n                    iVar9 = *(*0x20 + -0x70) + 10000;\n                }\n                *(*0x20 + -0x40) = iVar9;\n                *(*0x20 + -0x78) = 0x430f13;\n                fcn.0045a8a0();\n                if (*(*0x20 + -0x70) < *(*0x20 + -0x40)) {\n                    *(*0x20 + -0x70) = 10;\n                    *(*0x20 + -0x78) = 0x430f3c;\n                    fcn.00458660();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    iVar9 = *(*0x20 + -0x40);\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x47cc98;\n                    *(*0x20 + -0x78) = 0x430f68;\n                    fcn.004567a0();\n                    *(*0x20 + -0x78) = 0x430f7f;\n                    fcn.0045a8a0();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    iVar9 = *(*0x20 + -0x70) + 5000;\n                }\n                iVar8 = *(*0x20 + -0x30) + 1;\n                in_RAX = *(*0x20 + 8);\n                iVar7 = *(*0x20 + -0x38);\n                iVar5 = *(*0x20 + -0x50);\n                iVar4 = *(*0x20 + -0x18);\n                uVar3 = *(*0x20 + -0x5a);\n            } while( true );\n        }\n        goto code_r0x0043110b;\n    }\n    goto code_r0x0043111d;\ncode_r0x00430fe6:\n    *(*0x20 + -0x20) = unaff_R14;\n    *(*0x20 + -0x54) = *(in_RAX + 0x90);\n    *(*0x20 + -0x28) = *(in_RAX + 0x98);\n    *(*0x20 + -0x78) = 0x431007;\n    fcn.00431980();\n    *(*0x20 + -0x78) = 0x431018;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x431025;\n    fcn.00432200();\n    *(*0x20 + -0x78) = 0x431036;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x431045;\n    fcn.00431f80();\n    *(*0x20 + -0x78) = 0x431056;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x431065;\n    fcn.00431f80();\n    *(*0x20 + -0x78) = 0x43106a;\n    fcn.00431be0();\n    *(*0x20 + -0x78) = 0x43106f;\n    fcn.00431a00();\n    *(*0x20 + -0x58) = *(*(*0x20 + -0x20) + 0x90);\n    *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n    *(*0x20 + -0x78) = 0x43108f;\n    fcn.00431980();\n    *(*0x20 + -0x78) = 0x4310a5;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x4310af;\n    fcn.00432200();\n    *(*0x20 + -0x78) = 0x4310c5;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x4310cf;\n    fcn.00431f80();\n    *(*0x20 + -0x78) = 0x4310e5;\n    fcn.00432280();\n    *(*0x20 + -0x78) = 0x4310f0;\n    fcn.00431f80();\n    *(*0x20 + -0x78) = 0x4310f5;\n    fcn.00431be0();\n    *(*0x20 + -0x78) = 0x4310fa;\n    fcn.00431a00();\n    *(*0x20 + -0x78) = 0x43110b;\n    fcn.00430040();\ncode_r0x0043110b:\n    *(*0x20 + -0x78) = 0x43111c;\n    in_RAX = fcn.00430040();\ncode_r0x0043111d:\n    *(puVar6 + 8) = in_RAX;\n    *(puVar6 + -8) = 0x431127;\n    fcn.0045b2e0();\n    in_RAX = *(puVar6 + 8);\n    *0x20 = puVar6;\n    goto code_r0x00430be0;\n}\n",
        "token_count": 3038
    },
    "00431440": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00431440(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint64_t *in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    ulong arg2;\n    int64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = in_RAX[6];\n            if (*(uVar6 + 0x90) != in_RAX) {\n                return 0;\n            }\n            if ((((*(uVar6 + 0xa0) == 0) || (*(uVar6 + 0xd8) != 0)) || (*(uVar6 + 0xc0) != 0)) ||\n               ((*(uVar6 + 0xd0) != 0 || (*(*(uVar6 + 0xa0) + 4) != 1)))) {\n                return 0;\n            }\n            if ((arg1 < *in_RAX) || (arg1 - *in_RAX < *0x4d9290)) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x78) = 0x4314e7;\n            iVar4 = fcn.00447600();\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x18) = unaff_RBX;\n            unaff_RDI = *(*0x20 + 0x10);\n            *(*0x20 + -0x78) = 0x431509;\n            iVar3 = fcn.00448480(0);\n            if (iVar3 == -2) {\n                return 0;\n            }\n            iVar4 = *(*0x20 + -0x10);\n            if (*(iVar4 + 0x2b) < 2) {\n                iVar7 = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(iVar4 + 0x2b + *(iVar4 + 0x1c) * 4 + 5);\n                iVar7 = *(*0x20 + -0x18);\n                unaff_RDI = (uVar1 == 0xffffffff) - 1;\n                uVar6 = uVar1 + *(iVar7 + 0x140) & unaff_RDI;\n            }\n            if ((uVar6 == 0) || ((*(iVar4 + 0x29) & 4) != 0)) {\n                return 0;\n            }\n            *(*0x20 + -0x44) = iVar3;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x20) = iVar4 + 0x2b;\n            *(*0x20 + -0x78) = 0x43158f;\n            piVar5 = fcn.00447da0();\n            if (*(*(*0x20 + -0x10) + 0x2b) < 4) {\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = 0;\n            }\n            else {\n                uVar1 = *(*(*0x20 + -0x20) + *(*(*0x20 + -0x10) + 0x1c) * 4 + 0xd);\n                unaff_RBX = *(*0x20 + -0x18);\n                uVar6 = uVar1 + *(unaff_RBX + 0x140) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar6 == 0) {\ncode_r0x0043164a:\n                if (iVar7 < 8) {\n                    arg2 = 0;\n                }\n                else {\n                    arg2 = CONCAT71(0x2e656d69746e75, *piVar5 == 0x2e656d69746e7572);\n                }\n                if (arg2 == '\\0') {\n                    if (iVar7 < 0x11) {\n                        cVar2 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x38) = iVar7;\n                        *(*0x20 + -0x28) = piVar5;\n                        *(*0x20 + -0x78) = 0x431694;\n                        cVar2 = fcn.004023a0(0x11, arg2);\n                        iVar7 = *(*0x20 + -0x38);\n                        piVar5 = *(*0x20 + -0x28);\n                    }\n                }\n                else {\n                    cVar2 = '\\x01';\n                }\n                if (cVar2 != '\\0') {\n                    return 0;\n                }\n                if (iVar7 < 8) {\n                    bVar9 = false;\n                }\n                else {\n                    bVar9 = *piVar5 == 0x2e7463656c666572;\n                }\n                if (bVar9) {\n                    return 0;\n                }\n                if (*(*0x20 + -0x44) == -5) {\n                    *(*0x20 + -0x78) = 0x43174a;\n                    fcn.004475a0();\n                    return 1;\n                }\n                if (1 < *(*0x20 + -0x44) + 4U) {\n                    return 1;\n                }\n                uVar6 = *(*0x20 + -0x40);\n                if (((uVar6 != 0) && (uVar6 <= *(*0x20 + 0x10))) && (*(*0x20 + 0x10) - uVar6 < 0x15)) {\n                    return 1;\n                }\n                unaff_RBX = 0xe;\n                *(*0x20 + -0x78) = 0x4317b3;\n                fcn.00430040();\n            }\n            else {\n                *(*0x20 + -0x38) = iVar7;\n                *(*0x20 + -0x28) = piVar5;\n                *(*0x20 + -0x30) = uVar6;\n                unaff_RDI = *(*0x20 + 0x10);\n                *(*0x20 + -0x78) = 0x431605;\n                iVar3 = fcn.004483e0(2);\n                if (iVar3 < 0) {\n                    iVar7 = *(*0x20 + -0x38);\n                    piVar5 = *(*0x20 + -0x28);\n                    goto code_r0x0043164a;\n                }\n                if (iVar3 < 0x100000) {\n                    uVar1 = *(*(*0x20 + -0x30) + 4 + iVar3 * 0x10);\n                    iVar7 = *(*0x20 + -0x18);\n                    *(*0x20 + -0x78) = 0x431634;\n                    piVar5 = fcn.00447ee0(uVar1);\n                    goto code_r0x0043164a;\n                }\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x78) = 0x4317bd;\n            in_RAX = fcn.00458f20(0x100000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4317d7;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1940
    },
    "00434060": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00434060(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            if ((unaff_EBX - 0x1001 < 4) || (unaff_EBX == 0x1009)) {\n                if (arg1 == (unaff_EBX & 0xffffefff)) {\n                    LOCK();\n                    if (unaff_EBX == *(in_RAX + 0x90)) {\n                        *(in_RAX + 0x90) = arg1;\n                        return unaff_EBX;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x4340cb;\n                fcn.00431980();\n                *(*0x20 + -0x48) = 0x4340dc;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x4340e6;\n                fcn.00432200();\n                *(*0x20 + -0x48) = 0x4340f7;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x434105;\n                fcn.004320e0();\n                *(*0x20 + -0x48) = 0x434116;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x434125;\n                fcn.004320e0();\n                *(*0x20 + -0x48) = 0x43412a;\n                fcn.00431be0();\n                *(*0x20 + -0x48) = 0x43412f;\n                fcn.00431a00();\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x2c) = *(*(*0x20 + 8) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n                *(*0x20 + -0x48) = 0x434155;\n                fcn.00431980();\n                *(*0x20 + -0x48) = 0x434166;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x434170;\n                fcn.00432200();\n                *(*0x20 + -0x48) = 0x434185;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x43418f;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x4341a5;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x4341b0;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x4341b5;\n                fcn.00431be0();\n                *(*0x20 + -0x48) = 0x4341ba;\n                fcn.00431a00();\n                *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n                *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n                *(*0x20 + -0x48) = 0x4341da;\n                fcn.00431980();\n                *(*0x20 + -0x48) = 0x4341eb;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x4341f5;\n                fcn.00432200();\n                *(*0x20 + -0x48) = 0x434206;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x434210;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x434225;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x434230;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x434235;\n                fcn.00431be0();\n                *(*0x20 + -0x48) = 0x43423a;\n                fcn.00431a00();\n                *(*0x20 + -0x48) = 0x43424b;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x48) = 0x434250;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x434265;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x43426f;\n            fcn.00432200();\n            *(*0x20 + -0x48) = 0x434285;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x434290;\n            fcn.004320e0();\n            *(*0x20 + -0x48) = 0x4342a5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x4342b0;\n            fcn.004320e0();\n            *(*0x20 + -0x48) = 0x4342b5;\n            fcn.00431be0();\n            *(*0x20 + -0x48) = 0x4342ba;\n            fcn.00431a00();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(*(*0x20 + 8) + 0x90);\n            *(*0x20 + -0x20) = *(*(*0x20 + 8) + 0x98);\n            *(*0x20 + -0x48) = 0x4342e5;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x4342f6;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x434305;\n            fcn.00432200();\n            *(*0x20 + -0x48) = 0x434316;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x434325;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x434336;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x434345;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x43434a;\n            fcn.00431be0();\n            *(*0x20 + -0x48) = 0x43434f;\n            fcn.00431a00();\n            arg1._0_4_ = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x28) = arg1;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x48) = 0x43436f;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x434385;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x43438f;\n            fcn.00432200();\n            *(*0x20 + -0x48) = 0x4343a5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x4343af;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x4343c5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x4343d0;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x4343d5;\n            fcn.00431be0();\n            *(*0x20 + -0x48) = 0x4343da;\n            fcn.00431a00();\n            unaff_EBX = 0x37;\n            *(*0x20 + -0x48) = 0x4343eb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4343fe;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 2251
    },
    "00434420": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00434420(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    int64_t in_RAX;\n    uint32_t unaff_EBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + 0x14) = arg1;\n            if ((unaff_EBX - 1 < 4) && (arg1 == (unaff_EBX | 0x1000))) {\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                bVar3 = unaff_EBX == *puVar1;\n                if (bVar3) {\n                    *puVar1 = arg1;\n                }\n                else {\n                    unaff_EBX = *puVar1;\n                }\n                return unaff_EBX & 0xffffff00 | bVar3;\n            }\n            *(*0x20 + -0x20) = 0x434471;\n            fcn.00431980();\n            *(*0x20 + -0x20) = 0x434485;\n            fcn.00432280();\n            *(*0x20 + -0x20) = 0x434490;\n            fcn.004320e0();\n            *(*0x20 + -0x20) = 0x4344a5;\n            fcn.00432280();\n            *(*0x20 + -0x20) = 0x4344b0;\n            fcn.004320e0();\n            *(*0x20 + -0x20) = 0x4344b5;\n            fcn.00431be0();\n            *(*0x20 + -0x20) = 0x4344ba;\n            fcn.00431a00();\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4344cb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_EBX;\n        *(puVar2 + 0x14) = arg1;\n        *(puVar2 + -8) = 0x4344de;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_EBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x14);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 689
    },
    "null": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00437fc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00437fc0(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t arg1;\n    int64_t iVar8;\n    int64_t iVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar uVar11;\n    uint64_t arg1_00;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(*0x20 + -0x10) = uVar7;\n            iVar6 = 0;\n            iVar9 = 0;\n            uVar11 = 0;\n            while( true ) {\n                if (3 < iVar6) {\n                    return 0;\n                }\n                uVar12 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(uVar12) * ZEXT816(uVar12 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar12;\n                if (*0x4f1de0 == 0) goto code_r0x00438312;\n                uVar12 = (SUB168(auVar3, 0) ^ SUB168(auVar3 >> 0x40, 0)) & 0xffffffff;\n                if (*0x4f1df0 == 0) goto code_r0x0043830d;\n                uVar5 = (uVar12 / *0x4f1de0) % (*0x4f1df0 & 0xffffffff);\n                arg1_00 = *0x4f1df0;\n                if (*0x4f1df0 <= uVar5) break;\n                *(*0x20 + -0x50) = iVar6;\n                arg1 = uVar5 & 0xffffffffffffff00 | iVar6 == 3;\n                *(*0x20 + -0x5b) = iVar6 == 3;\n                uVar1 = *(*0x4f1de8 + uVar5 * 4);\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x24) = *0x4f1de0;\n                *(*0x20 + -0x20) = uVar12 % *0x4f1de0;\n                *(*0x20 + -0x1c) = uVar1;\n                while (*(*0x20 + -0x24) != *(*0x20 + -0x28)) {\n                    if (*0x4f2788 != '\\0') {\n                        return 0;\n                    }\n                    uVar2 = *(*0x20 + -0x20);\n                    arg1_00 = *0x4f1c78;\n                    if (*0x4f1c78 <= uVar2) {\ncode_r0x004382fd:\n                        *(*0x20 + -0x80) = 0x438305;\n                        fcn.00458f20(arg1_00);\n                        goto code_r0x00438305;\n                    }\n                    arg1_00 = *(*0x4f1c70 + uVar2 * 8);\n                    uVar12 = *0x4f1c70;\n                    if (uVar7 != arg1_00) {\n                        if (iVar6 != 3) {\n                            bVar13 = false;\ncode_r0x00438160:\n                            if (bVar13) {\n                                *(*0x20 + -0x18) = arg1_00;\n                                *(*0x20 + -0x30) = iVar9;\n                                *(*0x20 + -0x5a) = uVar11;\n                                *(*0x20 + -0x80) = 0x438185;\n                                iVar4 = fcn.00438d40();\n                                if (in_RAX == 0) {\n                                    iVar8 = *(*0x20 + -0x30);\ncode_r0x004381a0:\n                                    iVar9 = iVar8;\n                                }\n                                else {\n                                    iVar8 = *(*0x20 + -0x30);\n                                    iVar9 = in_RAX;\n                                    if ((iVar8 != 0) && (iVar8 <= in_RAX)) goto code_r0x004381a0;\n                                }\n                                if (iVar6 == '\\0') {\n                                    uVar11 = *(*0x20 + -0x5a);\n                                }\n                                else {\n                                    *(*0x20 + -0x58) = iVar4;\n                                    *(*0x20 + -0x38) = iVar9;\n                                    *(*0x20 + -0x80) = 0x4381c5;\n                                    iVar6 = fcn.0043ec00();\n                                    if (iVar6 != 0) {\n                                        return iVar6;\n                                    }\n                                    iVar4 = *(*0x20 + -0x58);\n                                    iVar9 = *(*0x20 + -0x38);\n                                    uVar11 = 1;\n                                }\n                                arg1 = *(*0x20 + -0x5b);\n                                arg1_00 = *(*0x20 + -0x18);\n                                uVar7 = *(*0x20 + -0x10);\n                                iVar6 = *(*0x20 + -0x50);\n                                in_RAX = iVar4;\n                            }\n                            uVar5 = *(*0x20 + -0x20) >> 5;\n                            uVar12 = *0x4f1cf8;\n                            if (uVar5 < *0x4f1cf8) {\n                                uVar2 = *(*0x4f1cf0 + uVar5 * 4);\n                                uVar12 = uVar2;\n                                if ((uVar2 >> (*(*0x20 + -0x20) & 0x1f) & 1) == 0) {\n                                    *(*0x20 + -0x40) = iVar9;\n                                    *(*0x20 + -0x59) = uVar11;\n                                    *(*0x20 + -0x48) = in_RAX;\n                                    *(*0x20 + -0x80) = 0x438252;\n                                    iVar6 = fcn.0043ef60(arg1);\n                                    if (iVar6 != 0) {\n                                        return iVar6;\n                                    }\n                                    iVar6 = *(*0x20 + -0x50);\n                                    arg1 = *(*0x20 + -0x5b);\n                                    iVar9 = *(*0x20 + -0x40);\n                                    uVar11 = *(*0x20 + -0x59);\n                                    in_RAX = *(*0x20 + -0x48);\n                                    uVar7 = *(*0x20 + -0x10);\n                                }\n                                goto code_r0x0043827f;\n                            }\n                            goto code_r0x004382ed;\n                        }\n                        uVar12 = *0x4f1d38;\n                        if (uVar2 >> 5 < *0x4f1d38) {\n                            bVar13 = (*(*0x4f1d30 + (uVar2 >> 5) * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                            goto code_r0x00438160;\n                        }\ncode_r0x004382f5:\n                        *(*0x20 + -0x80) = 0x4382fd;\n                        fcn.00458f20(uVar12);\n                        goto code_r0x004382fd;\n                    }\ncode_r0x0043827f:\n                    *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                    uVar2 = *(*0x20 + -0x24);\n                    arg1_00 = uVar2;\n                    if (uVar2 == 0) {\n                        *(*0x20 + -0x80) = 0x4382ed;\n                        fcn.0042e760();\ncode_r0x004382ed:\n                        *(*0x20 + -0x80) = 0x4382f5;\n                        fcn.00458f20(uVar12);\n                        goto code_r0x004382f5;\n                    }\n                    *(*0x20 + -0x20) = (*(*0x20 + -0x20) + *(*0x20 + -0x1c)) % uVar2;\n                }\n                iVar6 = iVar6 + 1;\n            }\ncode_r0x00438305:\n            *(*0x20 + -0x80) = 0x43830d;\n            fcn.00458f20(arg1_00);\ncode_r0x0043830d:\n            *(*0x20 + -0x80) = 0x438312;\n            fcn.0042e760();\ncode_r0x00438312:\n            *(*0x20 + -0x80) = 0x438317;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + -8) = 0x438325;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2202
    },
    "00441c20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441cf3)\n// WARNING: Removing unreachable block (ram,0x00441d14)\n\nulong fcn.00441c20(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t in_EAX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0x5f < in_EAX) {\n                return 0;\n            }\n            LOCK();\n            uVar4 = in_EAX >> 5;\n            iVar3 = *0x544e3c + 1;\n            if (uVar4 < 3) {\n                if ((*(uVar4 * 4 + 0x544e14) >> (in_EAX & 0x1f) & 1) == 0) {\n                    LOCK();\n                    return 0;\n                }\n                do {\n                    uVar2 = *(uVar4 * 4 + 0x544e08);\n                    if ((uVar2 >> (in_EAX & 0x1f) & 1) != 0) {\n                        LOCK();\n                        return 1;\n                    }\n                    puVar1 = uVar4 * 4 + 0x544e08;\n                    LOCK();\n                } while (uVar2 != *puVar1);\n                *0x544e3c = *0x544e3c + 1;\n                *puVar1 = uVar2 | 1 << (in_EAX & 0x1f);\n                if (*0x544e38 == 0) {\n                    LOCK();\n                    *0x544e38 = 2;\ncode_r0x00441d39:\n                    LOCK();\n                    *0x544e3c = *0x544e3c + -1;\n                    return 1;\n                }\n                if (*0x544e38 == 1) {\n                    LOCK();\n                    *0x544e38 = 0;\n                    *(*0x20 + -0x20) = 0x441d31;\n                    fcn.00409b60();\n                    goto code_r0x00441d39;\n                }\n                if (*0x544e38 == 2) goto code_r0x00441d39;\n                *(*0x20 + -0x20) = 0x441d69;\n                fcn.00430040();\n                iVar3 = *0x544e3c;\n            }\n            *0x544e3c = iVar3;\n            *(*0x20 + -0x20) = 0x441d73;\n            in_EAX = fcn.00458f20(3);\n        }\n        *(puVar5 + 8) = in_EAX;\n        *(puVar5 + -8) = 0x441d7d;\n        fcn.004568e0();\n        in_EAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 767
    },
    "0044b340": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044b340(ulong *arg1, ulong noname_1, ulong arg3, uint64_t arg4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    code *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    int64_t *unaff_RDI;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x38) = unaff_RDI;\n            *(*0x20 + 0x40) = unaff_SIL;\n            *(*0x20 + 0x44) = arg3;\n            *(*0x20 + 0x48) = arg4;\n            *(*0x20 + -0x28) = unaff_RBX;\n            iVar4 = *unaff_RDI;\n            *(*0x20 + -0x38) = iVar4;\n            *(*0x20 + -0x40) = in_RAX + 0x34;\n            if ((iVar4 == 0) || (iVar4 = -(*(iVar4 + 0x10) + -0xfbe8),  iVar4 < in_RAX + 0x34)) {\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x44b8e0;\n                *(*0x20 + -0x18) = *0x20 + -0x38;\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x70) = *0x20 + -0x20;\n                *(*0x20 + -0x78) = 0x44b3dc;\n                fcn.004567a0();\n                arg1 = *(*0x20 + 0x38);\n                *arg1 = *(*0x20 + -0x38);\n            }\n            *(*0x20 + -0x78) = 0x44b405;\n            fcn.00458920(arg1, iVar4);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            iVar4 = *(*(*0x20 + -0x38) + 8);\n            uVar3 = (*(*0x20 + -0x70) >> 6) - iVar4;\n            unaff_RBX = *(*0x20 + -0x70) >> 6;\n            if (uVar3 == 0) {\n                uVar3 = 1;\n                unaff_RBX = iVar4 + 1;\n            }\n            *(*(*0x20 + -0x38) + 8) = unaff_RBX;\n            uVar1 = *(*0x20 + 0x44);\n            if (uVar1 == 0) {\n                uVar9 = *(*0x20 + 0x48);\n                if (-1 < uVar9) goto code_r0x0044b467;\n                uVar5 = *(*0x20 + 0x10);\n                uVar12 = uVar5;\n            }\n            else {\n                uVar9 = *(*0x20 + 0x48);\ncode_r0x0044b467:\n                uVar5 = *(*0x20 + 0x10);\n                uVar12 = uVar5 + 1;\n            }\n            uVar7 = uVar12;\n            if (3 < uVar12) {\n                uVar7 = 3;\n            }\n            arg4 = *(*0x20 + -0x38);\n            uVar10 = *(arg4 + 0x10);\n            uVar12 = uVar7;\n            uVar11 = *(*0x20 + 0x40);\n            arg3._0_4_ = uVar7 << 6 | *(*0x20 + 0x40);\n            if (uVar10 < 0xfbe8) {\n                *(arg4 + 0x418 + uVar10) = arg3;\n                *(arg4 + 0x10) = *(arg4 + 0x10) + 1;\n                if (uVar7 != '\\x03') {\n                    unaff_RBX = NULL;\n                    goto code_r0x0044b4d9;\n                }\n                uVar8 = *(*0x20 + -0x38);\n                arg4 = *(uVar8 + 0x10);\n                unaff_RBX = NULL;\ncode_r0x0044b7e4:\n                if (unaff_RBX < pe_nt_image_headers64) {\n                    if (arg4 < 0xfbe8) {\n                        *(uVar8 + 0x418 + arg4) = unaff_RBX;\n                        *(uVar8 + 0x10) = arg4 + 1;\n                        uVar8 = *(*0x20 + -0x38);\n                        arg4 = *(uVar8 + 0x10);\n                        uVar12 = arg4 - 1;\n                        if (0xfbe7 < uVar12) {\n                            *(*0x20 + -0x78) = 0x44b84b;\n                            fcn.00458f20(0xfbe8);\n                            goto code_r0x0044b84b;\n                        }\n                        unaff_RBX = uVar8 + arg4 + 0x417;\ncode_r0x0044b4d9:\n                        uVar8 = *(*0x20 + -0x38);\n                        arg4 = *(uVar8 + 0x10);\n                        while (0x7f < uVar3) {\n                            if (0xfbe7 < arg4) goto code_r0x0044b7bf;\n                            *(uVar8 + 0x418 + arg4) = uVar3 | 0x80;\n                            arg4 = arg4 + 1;\n                            uVar3 = uVar3 >> 7;\n                            uVar12 = uVar3;\n                        }\n                        if (arg4 < 0xfbe8) {\n                            *(uVar8 + 0x418 + arg4) = uVar3;\n                            arg4 = arg4 + 1;\n                            *(uVar8 + 0x10) = arg4;\n                            uVar8 = *(*0x20 + 8);\n                            iVar4 = 0;\n                            do {\n                                if (iVar4 < uVar5) {\n                                    arg4 = *(*0x20 + -0x38);\n                                    uVar12 = *(uVar8 + iVar4 * 8);\n                                    uVar11 = *(arg4 + 0x10);\n                                    goto code_r0x0044b780;\n                                }\n                                if (uVar1 == 0) {\n                                    if (uVar9 == 0) {\n                                        uVar5 = *(*0x20 + -0x38);\n                                        uVar9 = *(uVar5 + 0x10);\n                                        piVar2 = NULL;\n                                        goto code_r0x0044b6a9;\n                                    }\n                                    if (uVar9 < 1) goto code_r0x0044b5dd;\n                                    *(*0x20 + -0x48) = uVar10;\n                                    *(*0x20 + -0x30) = unaff_RBX;\n                                    unaff_RBX = *(*0x20 + -0x38) + 0x18;\n                                    *(*0x20 + -0x78) = 0x44b5d2;\n                                    uVar3 = fcn.0044b940(0x80);\n                                    uVar5 = *(*0x20 + -0x38);\n                                    uVar8 = *(uVar5 + 0x10);\n                                    goto code_r0x0044b631;\n                                }\n                                uVar5 = *(*0x20 + -0x38);\n                                uVar9 = uVar1;\n                                unaff_RDI = *(uVar5 + 0x10);\ncode_r0x0044b70f:\n                                if (uVar9 < 0x80) {\n                                    if (unaff_RDI < 0xfbe8) {\n                                        *(uVar5 + 0x418 + unaff_RDI) = uVar9;\n                                        *(uVar5 + 0x10) = unaff_RDI + 1;\ncode_r0x0044b5dd:\n                                        do {\n                                            uVar5 = *(*0x20 + -0x40);\n                                            if (*(*(*0x20 + -0x38) + 0x10) - uVar10 <= uVar5) {\n                                                if (unaff_RBX != NULL) {\n                                                    *unaff_RBX = (*(*(*0x20 + -0x38) + 0x10) - uVar10) + -2;\n                                                }\n                                                return;\n                                            }\n                                            unaff_RBX = 0x1d;\n                                            *(*0x20 + -0x78) = 0x44b619;\n                                            uVar3 = fcn.00430040();\n                                            do {\n                                                *(uVar5 + 0x418 + uVar8) = uVar3 | 0x80;\n                                                uVar3 = uVar3 >> 7;\n                                                uVar8 = uVar8 + 1;\n                                                uVar9 = uVar3;\ncode_r0x0044b631:\n                                                if (uVar3 < 0x80) {\n                                                    if (uVar8 < 0xfbe8) {\n                                                        *(uVar5 + 0x418 + uVar8) = uVar3;\n                                                        *(uVar5 + 0x10) = uVar8 + 1;\n                                                        unaff_RBX = *(*0x20 + -0x30);\n                                                        uVar10 = *(*0x20 + -0x48);\n                                                        goto code_r0x0044b5dd;\n                                                    }\n                                                    *(*0x20 + -0x78) = 0x44b685;\n                                                    fcn.00458f20(0xfbe8);\n                                                    break;\n                                                }\n                                            } while (uVar8 < 0xfbe8);\n                                            *(*0x20 + -0x78) = 0x44b692;\n                                            piVar2 = fcn.00458f20(0xfbe8);\n                                            while( true ) {\n                                                *(uVar5 + 0x418 + uVar9) = piVar2 | 0x80;\n                                                piVar2 = piVar2 >> 7;\n                                                uVar9 = uVar9 + 1;\n                                                unaff_RDI = piVar2;\ncode_r0x0044b6a9:\n                                                if (piVar2 < pe_nt_image_headers64) break;\n                                                if (0xfbe7 < uVar9) goto code_r0x0044b6ea;\n                                            }\n                                            if (0xfbe7 < uVar9) goto code_r0x0044b6dd;\n                                            *(uVar5 + 0x418 + uVar9) = piVar2;\n                                            *(uVar5 + 0x10) = uVar9 + 1;\n                                        } while( true );\n                                    }\n                                    *(*0x20 + -0x78) = 0x44b756;\n                                    fcn.00458f20(0xfbe8);\n                                }\n                                else if (unaff_RDI < 0xfbe8) goto code_r0x0044b6f7;\n                                iVar4 = 0xfbe8;\n                                *(*0x20 + -0x78) = 0x44b765;\n                                uVar1 = fcn.00458f20(0xfbe8);\n                                while( true ) {\n                                    *(arg4 + 0x418 + uVar11) = uVar12 | 0x80;\n                                    uVar12 = uVar12 >> 7;\n                                    uVar11 = uVar11 + 1;\ncode_r0x0044b780:\n                                    if (uVar12 < 0x80) break;\n                                    if (0xfbe7 < uVar11) goto code_r0x0044b7a5;\n                                }\n                                if (0xfbe7 < uVar11) goto code_r0x0044b798;\n                                *(arg4 + 0x418 + uVar11) = uVar12;\n                                uVar12 = uVar11 + 1;\n                                *(arg4 + 0x10) = uVar12;\n                                iVar4 = iVar4 + 1;\n                            } while( true );\n                        }\n                        goto code_r0x0044b7b2;\n                    }\ncode_r0x0044b84b:\n                    *(*0x20 + -0x78) = 0x44b858;\n                    fcn.00458f20(0xfbe8);\n                }\n                else if (arg4 < 0xfbe8) goto code_r0x0044b7cc;\n                arg3._0_4_ = uVar8;\n                *(*0x20 + -0x78) = 0x44b865;\n                fcn.00458f20(0xfbe8);\n            }\n            unaff_SIL = uVar9;\n            arg1 = 0xfbe8;\n            *(*0x20 + -0x78) = 0x44b872;\n            in_RAX = fcn.00458f20(0xfbe8);\n        }\n        *(puVar6 + 0x20) = in_RAX;\n        *(puVar6 + 0x28) = unaff_RBX;\n        *(puVar6 + 0x30) = arg1;\n        *(puVar6 + 0x38) = unaff_RDI;\n        puVar6[0x40] = unaff_SIL;\n        *(puVar6 + 0x44) = arg3;\n        *(puVar6 + 0x48) = arg4;\n        *(puVar6 + -8) = 0x44b89a;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 0x20);\n        unaff_RBX = *(puVar6 + 0x28);\n        arg1 = *(puVar6 + 0x30);\n        unaff_RDI = *(puVar6 + 0x38);\n        unaff_SIL = puVar6[0x40];\n        arg3._0_4_ = *(puVar6 + 0x44);\n        arg4 = *(puVar6 + 0x48);\n        *0x20 = puVar6;\n    } while( true );\ncode_r0x0044b6dd:\n    *(*0x20 + -0x78) = 0x44b6ea;\n    fcn.00458f20(0xfbe8);\ncode_r0x0044b6ea:\n    *(*0x20 + -0x78) = 0x44b6f7;\n    fcn.00458f20(0xfbe8);\ncode_r0x0044b6f7:\n    *(uVar5 + 0x418 + unaff_RDI) = uVar9 | 0x80;\n    uVar9 = uVar9 >> 7;\n    unaff_RDI = unaff_RDI + 1;\n    uVar8 = uVar9;\n    goto code_r0x0044b70f;\ncode_r0x0044b798:\n    *(*0x20 + -0x78) = 0x44b7a5;\n    fcn.00458f20(0xfbe8);\ncode_r0x0044b7a5:\n    *(*0x20 + -0x78) = 0x44b7b2;\n    fcn.00458f20(0xfbe8);\ncode_r0x0044b7b2:\n    *(*0x20 + -0x78) = 0x44b7bf;\n    fcn.00458f20(0xfbe8);\ncode_r0x0044b7bf:\n    uVar3 = 0xfbe8;\n    *(*0x20 + -0x78) = 0x44b7cc;\n    uVar1 = fcn.00458f20(0xfbe8);\ncode_r0x0044b7cc:\n    *(uVar8 + 0x418 + arg4) = unaff_RBX | 0x80;\n    unaff_RBX = unaff_RBX >> 7;\n    arg4 = arg4 + 1;\n    goto code_r0x0044b7e4;\n}\n",
        "token_count": 3902
    },
    "0044cd80": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t ** fcn.0044cd80(int64_t **arg1, ulong noname_1, int64_t **arg3, int64_t *arg4)\n\n{\n    uint32_t uVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    ulong uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    int64_t **ppiVar15;\n    int64_t *unaff_RBX;\n    uchar *puVar16;\n    uchar *unaff_RBP;\n    uchar *unaff_RSI;\n    char cVar17;\n    uint32_t uVar18;\n    int64_t **unaff_RDI;\n    int64_t *piVar19;\n    int64_t *piVar20;\n    code **ppcVar21;\n    int64_t **in_R10;\n    int64_t **in_R11;\n    int64_t **ppiVar22;\n    int64_t *piVar23;\n    int64_t **unaff_R14;\n    int64_t *piVar24;\n    uint8_t uVar25;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044cd80:\n    puVar16 = *0x20;\n    if (unaff_R14[2] <= *0x20 + -0x2d8 && *0x20 + -0x2d8 != unaff_R14[2]) {\n        puVar16 = *0x20 + -0x358;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if ((unaff_RSI < 1) || (in_R10 == NULL)) {\n            if ((unaff_R14 != unaff_RDI) || (arg1 = unaff_R14,  unaff_R14[6][0x12] != unaff_R14)) {\n                uVar25 = *(unaff_R14[6] + 0xf9);\n                uVar14 = uVar25;\n                if ((uVar25 == 0) && (uVar14 = *0x4d926c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n                    uVar14 = 2;\n                }\n                if ((in_RAX == 0xffffffffffffffff) && (unaff_RBX == 0xffffffffffffffff)) {\n                    unaff_RBX = unaff_RDI[0xe];\n                    if (unaff_RBX == NULL) {\n                        in_RAX = unaff_RDI[8];\n                        unaff_RBX = unaff_RDI[7];\n                    }\n                    else {\n                        in_RAX = unaff_RDI[0xf];\n                    }\n                }\n                *(*0x20 + -0x58) = in_R11;\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x48) = in_XMM15;\n                *(*0x20 + -0x38) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x28) = unaff_RBX;\n                piVar19 = unaff_RDI[0x2a];\n                piVar23 = unaff_RDI[0x2b];\n                piVar24 = unaff_RDI[1];\n                piVar20 = *unaff_RDI;\n                if (arg3 == NULL) {\n                    *(*0x20 + -0x32a) = in_R10 == NULL;\n                    ppiVar22 = *(*0x20 + -0x58);\n                }\n                else {\n                    *(*0x20 + -0x280) = uVar14;\n                    *(*0x20 + -0x32a) = 0;\n                    uVar14 = *(*0x20 + -0x280);\n                    ppiVar22 = in_R11;\n                }\n                *(*0x20 + 0x28) = unaff_RDI;\n                *(*0x20 + 0x30) = unaff_RSI;\n                *(*0x20 + 0x48) = in_R10;\n                *(*0x20 + -0x228) = in_RAX;\n                *(*0x20 + -0x230) = unaff_RBX;\n                *(*0x20 + 0x38) = arg3;\n                *(*0x20 + 0x40) = arg4;\n                *(*0x20 + -0x2b0) = piVar23;\n                *(*0x20 + -0x98) = piVar19;\n                *(*0x20 + -0x238) = piVar24;\n                *(*0x20 + -0x240) = piVar20;\n                *(*0x20 + -0x31c) = uVar14;\n                if (in_RAX == NULL) {\n                    *(*0x20 + -0x40) = *unaff_RBX;\n                    ppiVar22 = *(*0x20 + -0x230) + 8;\n                    *(*0x20 + -0x28) = ppiVar22;\n                }\n                *(*0x20 + -0x360) = 0x44cf4b;\n                iVar7 = fcn.00447600();\n                if (iVar7 == 0) {\n                    arg1 = *(*0x20 + 0x48);\n                    if ((arg1 != NULL) || (ppiVar15 = in_R10,  ppiVar2 = arg1,  *(*0x20 + -0x32a) != '\\0')) {\n                        *(*0x20 + -0x248) = *(*(*0x20 + 0x28) + 0x98);\n                        *(*0x20 + -0x228) = *(*0x20 + -0x40);\n                        *(*0x20 + -0x360) = 0x44d01e;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44d02f;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44d03c;\n                        fcn.00431f80();\n                        *(*0x20 + -0x360) = 0x44d04d;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44d05a;\n                        fcn.004320e0();\n                        *(*0x20 + -0x360) = 0x44d05f;\n                        fcn.00431be0();\n                        *(*0x20 + -0x360) = 0x44d065;\n                        fcn.00431a00();\n                        arg1 = *0x20 + -0x50;\n                        unaff_RDI = NULL;\n                        *(*0x20 + -0x360) = 0x44d085;\n                        fcn.00450680(arg1);\n                        ppiVar15 = in_R10;\n                        ppiVar2 = *(*0x20 + 0x48);\n                    }\n                    uVar25 = ppiVar2 == NULL;\n                    if (uVar25) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0x360) = 0x44d0ba;\n                    iVar7 = fcn.00430040();\n                    goto code_r0x0044d0ba;\n                }\n                *(*0x20 + -0x50) = iVar7;\n                *(*0x20 + -0x48) = in_RAX;\n                *(*0x20 + -0x368) = unaff_RBP;\n                *(*0x20 + -0x360) = 0x44cf7b;\n                fcn.00459174();\n                unaff_RBP = *(*0x20 + -0x368);\n                unaff_RSI = *(*0x20 + 0x40);\n                arg4 = *(*0x20 + -0x228);\n                in_R10 = *(*0x20 + -0x230);\n                in_R11 = *(*0x20 + 0x28);\n                arg1 = *(*0x20 + -0x240);\n                piVar24 = *(*0x20 + -0x238);\n                iVar7 = *(*0x20 + 0x30);\n                uVar9 = *(*0x20 + -0x98);\n                ppiVar22 = *(*0x20 + -0x2b0);\n                ppiVar15 = NULL;\n                uVar11 = 0;\n                unaff_RDI = NULL;\n                arg3 = NULL;\n                while (ppiVar15 < unaff_RSI) {\n                    *(*0x20 + -0x2b0) = ppiVar22;\n                    *(*0x20 + -0x98) = uVar9;\n                    iVar10 = *(*0x20 + -0x50);\n                    if (*(iVar10 + 0x10) == 0) break;\n                    *(*0x20 + -0x60) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x68) = iVar10;\n                    uVar25 = *(iVar10 + 0x29);\n                    cVar5 = *(iVar10 + 0x28);\n                    if (cVar5 == '\\x04') {\n                        uVar25 = uVar25 & 0xfd;\n                    }\n                    if ((((*(*0x20 + -0x40) == arg4) && (*(*0x20 + -0x28) == in_R10)) && (in_R11[0xf] == arg4)) &&\n                       (in_R11[0xe] == in_R10)) {\n                        uVar25 = uVar25 & 0xfd;\n                    }\n                    *(*0x20 + -0x2d0) = ppiVar15;\n                    *(*0x20 + -0x2e8) = arg3;\n                    *(*0x20 + -0x250) = iVar7;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    *(*0x20 + -0x32b) = uVar11;\n                    if (*(*0x20 + -0x20) == 0) {\n                        if ((*(*0x20 + 8) >> 2 & 1) == 0) {\n                            *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                            piVar20 = *(*0x20 + -0x2b0);\n                            piVar19 = *(*0x20 + -0x98);\n                            iVar7 = *(*0x20 + -0x68);\n                        }\n                        else {\n                            ppiVar22 = in_R11[6];\n                            if (*ppiVar22 == in_R11) {\n                                ppiVar15 = ppiVar22[0x12];\n                                if (ppiVar15 == NULL) {\n                                    *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                    piVar20 = *(*0x20 + -0x2b0);\n                                    piVar19 = *(*0x20 + -0x98);\n                                    iVar7 = *(*0x20 + -0x68);\n                                }\n                                else if (ppiVar15[6] == ppiVar22) {\n                                    if (cVar5 == '\\f') {\n                                        *(*0x20 + -0x70) = ppiVar15;\n                                        *(*0x20 + -0x40) = ppiVar15[8];\n                                        *(*0x20 + -0x360) = 0x44d2fe;\n                                        iVar7 = fcn.00447600();\n                                        *(*0x20 + -0x50) = iVar7;\n                                        *(*0x20 + -0x48) = uVar11;\n                                        uVar25 = *(iVar7 + 0x29);\n                                        ppiVar22 = *(*0x20 + -0x70);\n                                        *(*0x20 + -0x30) = ppiVar22[0xc];\n                                        *(*0x20 + -0x28) = ppiVar22[7];\n                                        piVar24 = ppiVar22[1];\n                                        arg1 = *ppiVar22;\n                                        piVar19 = ppiVar22[0x2a];\n                                        piVar20 = ppiVar22[0x2b];\n                                        *(*0x20 + -0xa8) = uVar11;\n                                        in_R11 = *(*0x20 + -0x70);\n                                    }\n                                    else if (cVar5 == '\\x13') {\n                                        *(*0x20 + -0x28) = ppiVar15[7];\n                                        piVar24 = ppiVar15[1];\n                                        arg1 = *ppiVar15;\n                                        piVar19 = ppiVar15[0x2a];\n                                        piVar20 = ppiVar15[0x2b];\n                                        uVar25 = uVar25 & 0xfd;\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                        iVar7 = *(*0x20 + -0x68);\n                                        in_R11 = ppiVar15;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                        piVar20 = *(*0x20 + -0x2b0);\n                                        piVar19 = *(*0x20 + -0x98);\n                                        iVar7 = *(*0x20 + -0x68);\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                    piVar20 = *(*0x20 + -0x2b0);\n                                    piVar19 = *(*0x20 + -0x98);\n                                    iVar7 = *(*0x20 + -0x68);\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                                piVar20 = *(*0x20 + -0x2b0);\n                                piVar19 = *(*0x20 + -0x98);\n                                iVar7 = *(*0x20 + -0x68);\n                            }\n                        }\n                        *(*0x20 + -0x98) = piVar19;\n                        *(*0x20 + -0x2b0) = piVar20;\n                        *(*0x20 + -0x2f8) = piVar24;\n                        *(*0x20 + -0x300) = arg1;\n                        *(*0x20 + -0xa0) = iVar7;\n                        *(*0x20 + -0x78) = in_R11;\n                        *(*0x20 + -0x328) = uVar25;\n                        *(*0x20 + -0x360) = 0x44d491;\n                        iVar6 = fcn.004481e0(*(*0x20 + -0x40));\n                        *(*0x20 + -0x20) = iVar6 + *(*0x20 + -0x28);\n                        *(*0x20 + -0x20) = iVar6 + *(*0x20 + -0x28) + 8;\n                        iVar7 = *(*0x20 + -0x250);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        uVar11 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        arg4 = *(*0x20 + -0x228);\n                        in_R10 = *(*0x20 + -0x230);\n                        uVar25 = *(*0x20 + -0x328);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar24 = *(*0x20 + -0x2f8);\n                        arg1 = *(*0x20 + -0x300);\n                        in_R11 = *(*0x20 + -0x78);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = *(*0x20 + -0x60);\n                        iVar10 = *(*0x20 + -0x68);\n                    }\n                    *(*0x20 + -0x2f8) = piVar24;\n                    *(*0x20 + -0x300) = arg1;\n                    *(*0x20 + -0xa0) = iVar10;\n                    *(*0x20 + -0x78) = in_R11;\n                    if ((uVar25 & 1) == 0) {\n                        if ((uVar25 & 2) == 0) {\ncode_r0x0044d5ad:\n                            if (*(*0x20 + -0x30) == 0) {\n                                *(*0x20 + -0x2c8) = *(*0x20 + -0x20) + -8;\n                                *(*0x20 + -0x30) = *(*(*0x20 + -0x20) + -8);\n                            }\n                            else {\n                                *(*0x20 + -0x288) = iVar7;\n                                *(*0x20 + -0x2c8) = 0;\n                            }\n                            *(*0x20 + -0x360) = 0x44d5f8;\n                            iVar7 = fcn.00447600();\n                            if (iVar7 == 0) {\n                                uVar25 = *(*0x20 + -0x32a);\n                                uVar13 = uVar25;\n                                if (uVar25 == 0) {\n                                    arg1 = *(*0x20 + -0x78);\n                                    in_R10 = *(*0x20 + -0xa0);\n                                }\n                                else {\n                                    arg1 = *(*0x20 + -0x78);\n                                    if (*(arg1[6] + 0x1d) == '\\0') {\n                                        in_R10 = *(*0x20 + -0xa0);\n                                    }\n                                    else {\n                                        in_R10 = *(*0x20 + -0xa0);\n                                        if (*(in_R10 + 5) == '\\x12') {\n                                            uVar13 = 0;\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x80) = 0;\n                                *(*0x20 + -0x88) = uVar11;\n                                in_R11 = *(*0x20 + 0x48);\n                                if ((in_R11 != NULL) || (uVar13 != 0)) {\n                                    uVar9 = *(*0x20 + -0xa8);\n                                    *(*0x20 + -0x360) = 0x44d6af;\n                                    uVar12 = fcn.00447da0();\n                                    *(*0x20 + -0x90) = uVar12;\n                                    *(*0x20 + -600) = uVar9;\n                                    *(*0x20 + -0x248) = *(*(*0x20 + -0x78) + 0x98);\n                                    unaff_RSI = *(*0x20 + -0x30);\n                                    *(*0x20 + -0x238) = unaff_RSI;\n                                    *(*0x20 + -0x360) = 0x44d6eb;\n                                    fcn.00431980();\n                                    *(*0x20 + -0x360) = 0x44d6fc;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x360) = 0x44d709;\n                                    fcn.00431f80();\n                                    *(*0x20 + -0x360) = 0x44d71a;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x360) = 0x44d72f;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x360) = 0x44d745;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x360) = 0x44d752;\n                                    fcn.004320e0();\n                                    *(*0x20 + -0x360) = 0x44d757;\n                                    fcn.00431be0();\n                                    *(*0x20 + -0x360) = 0x44d75c;\n                                    fcn.00431a00();\n                                    unaff_RDI = *(*0x20 + -0x2c8);\n                                    *(*0x20 + -0x360) = 0x44d77b;\n                                    fcn.00450680(*0x20 + -0x50);\n                                    in_R11 = *(*0x20 + 0x48);\n                                    iVar7 = *(*0x20 + -0x80);\n                                    arg1 = *(*0x20 + -0x78);\n                                    uVar11 = *(*0x20 + -0x88);\n                                    uVar25 = *(*0x20 + -0x32a);\n                                    in_R10 = *(*0x20 + -0xa0);\n                                }\n                                arg4 = uVar25;\n                                if (in_R11 != NULL) goto code_r0x0044e914;\n                            }\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R11 = *(*0x20 + -0x78);\n                            iVar10 = *(*0x20 + -0xa0);\n                            piVar24 = *(*0x20 + -0x2f8);\n                            *(*0x20 + -200) = iVar7;\n                            *(*0x20 + -0xd0) = uVar11;\n                            uVar9 = *(*0x20 + -0x250);\n                            uVar11 = *(*0x20 + -0x32b);\n                        }\n                        else {\n                            if (*(*0x20 + 0x48) != 0) {\n                                if (ppiVar15 < 1) goto code_r0x0044d5ad;\n                                if (*(*0x20 + 0x48) != 0) goto code_r0x0044e925;\n                            }\n                            *(*0x20 + -0x30) = 0;\n                            *(*0x20 + -0x290) = iVar7;\n                            *(*0x20 + -200) = 0;\n                            *(*0x20 + -0xd0) = 0;\n                            uVar9 = *(*0x20 + -0x290);\n                        }\n                        piVar23 = *(*0x20 + -200);\n                        *(*0x20 + -0x298) = uVar9;\n                        *(*0x20 + -0xb0) = *(*0x20 + -0xd0);\n                        iVar7 = *(*0x20 + -0x298);\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0;\n                        *(*0x20 + -0xb0) = 0;\n                        piVar23 = NULL;\n                    }\n                    cVar5 = uVar11;\n                    iVar3 = *(*0x20 + -0x20);\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x18) = iVar3 - 8U;\n                    if (*(*0x20 + -0x28) < iVar3 - 8U) {\n                        *(*0x20 + -0x18) = iVar3 + -0x10;\n                    }\n                    *(*0x20 + -200) = piVar23;\n                    *(*0x20 + -0x10) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x38) = *(*0x20 + -0x40);\n                    if (cVar5 != '\\0') {\n                        if (*(*(*0x20 + -0x50) + 0xc) == 0) {\n                            *(*0x20 + -0x38) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x360) = 0x44d8d5;\n                            iVar7 = fcn.00447480();\n                            *(*0x20 + -0x38) = *(*(*0x20 + -0x50) + 0xc) + 1 + iVar7;\n                            iVar7 = *(*0x20 + -0x250);\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            cVar5 = *(*0x20 + -0x32b);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R11 = *(*0x20 + -0x78);\n                            iVar10 = *(*0x20 + -0xa0);\n                            piVar23 = *(*0x20 + -200);\n                            piVar24 = *(*0x20 + -0x2f8);\n                        }\n                    }\n                    ppcVar21 = *(*0x20 + 0x48);\n                    if (ppcVar21 == NULL) {\n                        in_R10 = *(*0x20 + 0x38);\n                        ppiVar22 = in_R10;\n                    }\n                    else {\n                        pcVar4 = *ppcVar21;\n                        *(*0x20 + -0x360) = 0x44d96d;\n                        cVar5 = (*pcVar4)(pcVar4, ppcVar21);\n                        if (cVar5 == '\\0') {\n                            return *(*0x20 + -0x2d0);\n                        }\n                        ppiVar22 = *(*0x20 + 0x38);\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + 0x38);\n                        in_R11 = *(*0x20 + -0x78);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        piVar24 = *(*0x20 + -0x2f8);\n                    }\n                    if (ppiVar22 == NULL) goto code_r0x0044db79;\n                    in_R11 = *(*0x20 + -0x40);\n                    if (((ppiVar15 == NULL) && ((*(*0x20 + 8) >> 1 & 1) != 0)) || (cVar5 != '\\0')) {\ncode_r0x0044da88:\n                        arg4 = in_R11 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x2f0) = in_R11;\n                        *(*0x20 + -0x360) = 0x44da25;\n                        iVar7 = fcn.00447480();\n                        if (iVar7 == *(*0x20 + -0x2f0)) {\n                            iVar7 = *(*0x20 + -0x250);\n                            arg1 = *(*0x20 + -0x300);\n                            ppiVar15 = *(*0x20 + -0x2d0);\n                            cVar5 = *(*0x20 + -0x32b);\n                            unaff_RSI = *(*0x20 + 0x40);\n                            unaff_RDI = *(*0x20 + -0x329);\n                            arg3 = *(*0x20 + -0x2e8);\n                            in_R10 = *(*0x20 + 0x38);\n                            in_R11 = *(*0x20 + -0x2f0);\n                            iVar10 = *(*0x20 + -0xa0);\n                            goto code_r0x0044da88;\n                        }\n                        in_R11 = *(*0x20 + -0x2f0) + -1;\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -0x2d0);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x2e8);\n                        in_R10 = *(*0x20 + 0x38);\n                        iVar10 = *(*0x20 + -0xa0);\n                        arg4 = *(*0x20 + -0x2f0);\n                    }\n                    if (*(iVar10 + 0x2b) < 4) {\n                        *(*0x20 + -0x2a0) = iVar7;\n                        *(*0x20 + -0xe8) = 0;\n                        iVar7 = *(*0x20 + -0x2a0);\n                    }\n                    else {\n                        *(*0x20 + -0x308) = in_R11;\n                        uVar14 = *(iVar10 + *(iVar10 + 0x1c) * 4 + 0x38);\n                        *(*0x20 + -0xe8) = uVar14 + *(*(*0x20 + -0xa8) + 0x140) & (uVar14 == 0xffffffff) - 1;\n                        in_R11 = *(*0x20 + -0x308);\n                    }\n                    ppiVar22 = in_R11;\n                    if (*(*0x20 + -0xe8) == 0) goto code_r0x0044e88b;\ncode_r0x0044e71e:\n                    *(*0x20 + -0x250) = iVar7;\n                    *(*0x20 + -0x238) = arg4;\n                    *(*0x20 + -600) = ppiVar15;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    unaff_RSI = *0x20 + -0x1f0;\n                    *(*0x20 + -0x360) = 0x44e75b;\n                    in_R11 = ppiVar22;\n                    iVar6 = fcn.004483e0(2);\n                    if (-1 < iVar6) {\n                        uVar11 = iVar6;\n                        unaff_RDI = ppiVar22;\n                        if (uVar11 < 0x100000) {\n                            iVar7 = uVar11 * 0x10;\n                            ppiVar15 = *(*0x20 + -0xe8);\n                            if ((((*(ppiVar15 + uVar11 * 2) == '\\x15') && (cVar5 = *(*0x20 + -0x329),  cVar5 != '\\t'))\n                                && (cVar5 != '\\x12')) && (cVar5 != '\\x0e')) {\n                                arg3 = *(*0x20 + -600);\n                                unaff_RSI = *(*0x20 + -0x250);\n                            }\n                            else {\n                                unaff_RSI = *(*0x20 + -0x250);\n                                if (unaff_RSI < 1) {\n                                    unaff_RDI = *(*0x20 + 0x40);\n                                    arg3 = *(*0x20 + -600);\n                                    if (arg3 < unaff_RDI) {\n                                        if (0xfffff < arg3) goto code_r0x0044e8fd;\n                                        *(*(*0x20 + 0x38) + arg3 * 8) = *(*0x20 + -0x238);\n                                        arg3 = arg3 + 1;\n                                    }\n                                }\n                                else {\n                                    unaff_RSI = unaff_RSI + -1;\n                                    arg3 = *(*0x20 + -600);\n                                }\n                            }\n                            goto code_r0x0044e69f;\n                        }\ncode_r0x0044e90a:\n                        arg1 = 0x100000;\n                        *(*0x20 + -0x360) = 0x44e914;\n                        fcn.00458f20(0x100000);\n                        goto code_r0x0044e914;\n                    }\n                    arg1 = *(*0x20 + -0x300);\n                    cVar5 = *(*0x20 + -0x32b);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    arg3 = *(*0x20 + -0x2e8);\n                    in_R10 = *(*0x20 + 0x38);\n                    iVar10 = *(*0x20 + -0xa0);\n                    unaff_RDI = *(*0x20 + -0x329);\n                    ppiVar15 = *(*0x20 + -600);\n                    arg4 = *(*0x20 + -0x238);\n                    iVar7 = *(*0x20 + -0x250);\ncode_r0x0044e88b:\n                    if (((*(iVar10 + 0x28) != '\\x15') || (cVar17 = unaff_RDI,  cVar17 == '\\t')) ||\n                       ((cVar17 == '\\x12' || (cVar17 == '\\x0e')))) {\n                        if (iVar7 < 1) {\n                            if (ppiVar15 < unaff_RSI) {\n                                if (0xfffff < ppiVar15) {\n                                    *(*0x20 + -0x360) = 0x44e8fd;\n                                    fcn.00458f20(0x100000);\ncode_r0x0044e8fd:\n                                    *(*0x20 + -0x360) = 0x44e90a;\n                                    fcn.00458f20(0x100000);\n                                    goto code_r0x0044e90a;\n                                }\n                                in_R10[ppiVar15] = arg4;\n                                ppiVar15 = ppiVar15 + 1;\n                            }\n                        }\n                        else {\n                            iVar7 = iVar7 + -1;\n                        }\n                    }\n                    unaff_RDI = *(iVar10 + 0x28);\n                    ppiVar15 = ppiVar15 + -1;\n                    ppcVar21 = *(*0x20 + 0x48);\n                    in_R11 = *(*0x20 + -0x78);\n                    piVar23 = *(*0x20 + -200);\n                    piVar24 = *(*0x20 + -0x2f8);\ncode_r0x0044db79:\n                    *(*0x20 + -0x250) = iVar7;\n                    if (*(*0x20 + -0x32a) == '\\0') goto code_r0x0044dcf1;\n                    *(*0x20 + -0x325) = unaff_RDI;\n                    *(*0x20 + -600) = ppiVar15;\n                    in_R10 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x310) = in_R10;\n                    if ((ppiVar15 < 1) && (uVar14 = *(*0x20 + 8),  (uVar14 >> 1 & 1) != 0)) {\n                        *(*0x20 + -0x2a8) = iVar7;\n                        *(*0x20 + -0x326) = 0;\n                        iVar7 = *(*0x20 + -0x2a8);\n                    }\n                    else {\n                        *(*0x20 + -0x360) = 0x44dbe7;\n                        uVar11 = fcn.00447480();\n                        iVar7 = *(*0x20 + -0x250);\n                        ppiVar15 = *(*0x20 + -600);\n                        cVar5 = *(*0x20 + -0x32b);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        unaff_RDI = *(*0x20 + -0x325);\n                        arg3 = *(*0x20 + -0x2e8);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        in_R10 = *(*0x20 + -0x310);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        uVar14 = *(*0x20 + 8);\n                        *(*0x20 + -0x326) = uVar11 <= *(*0x20 + -0x40) && *(*0x20 + -0x40) != uVar11;\n                        arg1 = *(*0x20 + -0x300);\n                    }\n                    uVar18 = unaff_RDI;\n                    if ((*(*0x20 + -0x326) != '\\0') && (cVar5 == '\\0')) {\n                        in_R10 = in_R10 + -1;\n                    }\n                    if (*(iVar10 + 0x2b) < 4) {\n                        uVar11 = 0;\n                    }\n                    else {\n                        uVar1 = *(iVar10 + *(iVar10 + 0x1c) * 4 + 0x38);\n                        uVar11 = uVar1 + *(*(*0x20 + -0xa8) + 0x140) & (uVar1 == 0xffffffff) - 1;\n                        piVar23 = *(*0x20 + -200);\n                        ppcVar21 = *(*0x20 + 0x48);\n                    }\n                    if (uVar11 == 0) goto code_r0x0044e2e1;\n                    *(*0x20 + -0xf0) = uVar11;\n                    *(*0x20 + -0x21c) = in_XMM15;\n                    *(*0x20 + -0x210) = in_XMM15;\n                    *(*0x20 + -0x200) = in_XMM15;\ncode_r0x0044e0ca:\n                    *(*0x20 + -0x268) = arg3;\n                    *(*0x20 + -0x329) = unaff_RDI;\n                    *(*0x20 + -0x310) = in_R10;\n                    unaff_RSI = NULL;\n                    *(*0x20 + -0x360) = 0x44e0f6;\n                    iVar6 = fcn.004483e0(2);\n                    if (-1 < iVar6) {\n                        if (0xfffff < iVar6) goto code_r0x0044e695;\n                        iVar10 = iVar6 * 0x10;\n                        *(*0x20 + -0x270) = iVar10;\n                        iVar7 = *(*0x20 + -0xf0);\n                        *(*0x20 + -0x218) = *(iVar7 + 4 + iVar10);\n                        *(*0x20 + -500) = *(iVar7 + iVar10);\n                        *(*0x20 + -0x1f8) = *(iVar7 + 0xc + iVar10);\n                        if ((*(*0x20 + 8) & 1) == 0) {\n                            *(*0x20 + -0x360) = 0x44e191;\n                            cVar5 = fcn.0044ff40(*(*0x20 + -0x78), *(*0x20 + -0x268), *(*0x20 + -0x329));\n                            if (cVar5 == '\\0') {\n                                arg3 = *(*0x20 + -0x268);\n                                goto code_r0x0044e05f;\n                            }\n                        }\n                        uVar9 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x44e1ae;\n                        uVar12 = fcn.00447da0();\n                        *(*0x20 + -0xd8) = uVar12;\n                        *(*0x20 + -0x2d8) = uVar9;\n                        uVar9 = *(*0x20 + -0x310);\n                        uVar12 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x44e1d8;\n                        uVar8 = fcn.00448180(uVar9);\n                        *(*0x20 + -0xb8) = uVar8;\n                        *(*0x20 + -0x2b8) = uVar12;\n                        *(*0x20 + -800) = uVar9;\n                        *(*0x20 + -0x360) = 0x44e1f1;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e206;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e217;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e21c;\n                        fcn.00431a00();\n                        *(*0x20 + -0x360) = 0x44e225;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e236;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e24b;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e25c;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e268;\n                        fcn.00432080(*(*0x20 + -800));\n                        *(*0x20 + -0x360) = 0x44e26d;\n                        fcn.00431be0();\n                        *(*0x20 + -0x360) = 0x44e272;\n                        fcn.00431a00();\n                        arg3 = *(*0x20 + -0x268) + 1;\ncode_r0x0044e05f:\n                        *(*0x20 + -0x268) = arg3;\n                        *(*0x20 + -0x329) = *(*(*0x20 + -0xf0) + *(*0x20 + -0x270));\n                        *(*0x20 + -0x360) = 0x44e097;\n                        iVar7 = fcn.00447480();\n                        ppiVar15 = *(*0x20 + -0xf0);\n                        in_R10 = *(*(*0x20 + -0x270) + 8 + ppiVar15) + iVar7;\n                        unaff_RDI = *(*0x20 + -0x329);\n                        arg3 = *(*0x20 + -0x268);\n                        goto code_r0x0044e0ca;\n                    }\n                    iVar7 = *(*0x20 + -0x250);\n                    arg1 = *(*0x20 + -0x300);\n                    ppiVar15 = *(*0x20 + -600);\n                    unaff_RSI = *(*0x20 + 0x40);\n                    ppcVar21 = *(*0x20 + 0x48);\n                    iVar10 = *(*0x20 + -0xa0);\n                    piVar23 = *(*0x20 + -200);\n                    uVar14 = *(*0x20 + 8);\n                    uVar18 = *(*0x20 + -0x329);\n                    in_R10 = *(*0x20 + -0x310);\n                    arg3 = *(*0x20 + -0x268);\ncode_r0x0044e2e1:\n                    *(*0x20 + -0x268) = arg3;\n                    *(*0x20 + -0x310) = in_R10;\n                    if ((uVar14 & 1) == 0) {\n                        *(*0x20 + -0x360) = 0x44e328;\n                        cVar5 = fcn.0044ff40(*(*0x20 + -0x78), ppiVar15 & 0xffffffffffffff00 | arg3 == NULL, uVar18);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -600);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        arg3 = *(*0x20 + -0x268);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0x250);\n                    }\n                    else {\n                        cVar5 = '\\x01';\n                    }\n                    if (cVar5 != '\\0') {\n                        uVar9 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x44e38c;\n                        uVar12 = fcn.00447da0();\n                        *(*0x20 + -0xe0) = uVar12;\n                        *(*0x20 + -0x2e0) = uVar9;\n                        uVar9 = *(*0x20 + -0x310);\n                        uVar12 = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x360) = 0x44e3b3;\n                        uVar8 = fcn.00448180(uVar9);\n                        *(*0x20 + -0xc0) = uVar8;\n                        *(*0x20 + -0x2c0) = uVar12;\n                        *(*0x20 + -0x324) = uVar9;\n                        iVar7 = *(*0x20 + -0x2e0);\n                        if (iVar7 == 0xf) {\n                            piVar19 = *(*0x20 + -0xe0);\n                            if ((((*piVar19 == 0x2e656d69746e7572) && (*(piVar19 + 1) == 0x61706f67)) &&\n                                (*(piVar19 + 0xc) == 0x696e)) && (*(piVar19 + 0xe) == 'c')) {\n                                iVar7 = 5;\n                                piVar19 = 0x475aab;\n                            }\n                        }\n                        else {\n                            piVar19 = *(*0x20 + -0xe0);\n                        }\n                        *(*0x20 + -0x2e0) = iVar7;\n                        *(*0x20 + -0xe0) = piVar19;\n                        *(*0x20 + -0x360) = 0x44e42a;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e43c;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e44d;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e452;\n                        fcn.00431a00();\n                        *(*0x20 + -0x360) = 0x44e474;\n                        fcn.0044ea20(*(*0x20 + -0x10));\n                        *(*0x20 + -0x360) = 0x44e479;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e48a;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e48f;\n                        fcn.00431a00();\n                        *(*0x20 + -0x360) = 0x44e494;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e4a5;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e4ba;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e4cb;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e4d7;\n                        fcn.00432080();\n                        *(*0x20 + -0x360) = 0x44e4dc;\n                        fcn.00431a00();\n                        *(*0x20 + -0x360) = 0x44e4f3;\n                        uVar11 = fcn.00447480();\n                        if (uVar11 <= *(*0x20 + -0x40) && *(*0x20 + -0x40) != uVar11) {\n                            *(*0x20 + -0x360) = 0x44e514;\n                            uVar9 = fcn.00447480();\n                            *(*0x20 + -0x318) = uVar9;\n                            *(*0x20 + -0x238) = *(*0x20 + -0x40);\n                            *(*0x20 + -0x360) = 0x44e52e;\n                            fcn.00431980();\n                            *(*0x20 + -0x360) = 0x44e53f;\n                            fcn.00432280();\n                            *(*0x20 + -0x360) = 0x44e554;\n                            fcn.004320e0(*(*0x20 + -0x318));\n                            *(*0x20 + -0x360) = 0x44e559;\n                            fcn.00431a00();\n                        }\n                        iVar7 = *(*(*0x20 + -0x78) + 0x30);\n                        if ((((iVar7 != 0) && (1 < *(iVar7 + 0xc4))) && (*(iVar7 + 0x90) == *(*0x20 + -0x78))) ||\n                           (1 < *(*0x20 + -0x31c))) {\n                            *(*0x20 + -0x238) = *(*0x20 + -0x20);\n                            *(*0x20 + -0x240) = *(*0x20 + -0x28);\n                            *(*0x20 + -0x278) = *(*0x20 + -0x40);\n                            *(*0x20 + -0x360) = 0x44e5be;\n                            fcn.00431980();\n                            *(*0x20 + -0x360) = 0x44e5cf;\n                            fcn.00432280();\n                            *(*0x20 + -0x360) = 0x44e5dc;\n                            fcn.004320e0();\n                            *(*0x20 + -0x360) = 0x44e5ed;\n                            fcn.00432280();\n                            *(*0x20 + -0x360) = 0x44e5fa;\n                            fcn.004320e0();\n                            *(*0x20 + -0x360) = 0x44e60b;\n                            fcn.00432280();\n                            *(*0x20 + -0x360) = 0x44e618;\n                            fcn.004320e0();\n                            *(*0x20 + -0x360) = 0x44e61d;\n                            fcn.00431a00();\n                        }\n                        *(*0x20 + -0x360) = 0x44e625;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44e62a;\n                        fcn.00431be0();\n                        *(*0x20 + -0x360) = 0x44e62f;\n                        fcn.00431a00();\n                        arg3 = *(*0x20 + -0x268) + 1;\n                        iVar7 = *(*0x20 + -0x250);\n                        arg1 = *(*0x20 + -0x300);\n                        ppiVar15 = *(*0x20 + -600);\n                        unaff_RSI = *(*0x20 + 0x40);\n                        ppcVar21 = *(*0x20 + 0x48);\n                        iVar10 = *(*0x20 + -0xa0);\n                        piVar23 = *(*0x20 + -200);\n                    }\n                    unaff_RDI = *(iVar10 + 0x28);\n                    in_R11 = *(*0x20 + -0x78);\n                    piVar24 = *(*0x20 + -0x2f8);\ncode_r0x0044dcf1:\n                    ppiVar15 = ppiVar15 + 1;\n                    if (*(iVar10 + 0x28) == '\\x04') {\n                        ppiVar22 = *(*0x20 + -0x2b0);\n                        if (ppiVar22 != NULL) {\n                            uVar9 = *(*(*0x20 + -0x98) + -8 + ppiVar22 * 8);\n                            if ((iVar7 == 0) && (ppcVar21 == NULL)) {\n                                *(*0x20 + -0x260) = arg3;\n                                *(*0x20 + -0x327) = unaff_RDI;\n                                *(*0x20 + -0x360) = 0x44dd51;\n                                ppiVar15 = fcn.0044ef80(uVar9);\n                                arg1 = *(*0x20 + -0x300);\n                                in_R11 = *(*0x20 + -0x78);\n                                unaff_RSI = *(*0x20 + 0x40);\n                                unaff_RDI = *(*0x20 + -0x327);\n                                arg3 = *(*0x20 + -0x260);\n                                ppiVar22 = *(*0x20 + -0x2b0);\n                                iVar10 = *(*0x20 + -0xa0);\n                                piVar23 = *(*0x20 + -200);\n                                iVar7 = *(*0x20 + -0x250);\n                            }\n                            ppiVar22 = ppiVar22 + -1;\n                            piVar24 = *(*0x20 + -0x2f8);\n                        }\n                    }\n                    else {\n                        ppiVar22 = *(*0x20 + -0x2b0);\n                    }\n                    cVar5 = *(iVar10 + 0x28);\n                    in_R10 = ppiVar15;\n                    if (piVar23 == NULL) break;\n                    arg4 = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x30) == arg4) {\n                        *(*0x20 + -0x238) = arg4;\n                        arg4 = *(*0x20 + -0x28);\n                        if (*(*0x20 + -0x20) != arg4) {\n                            uVar25 = cVar5 == '\\x12';\n                            goto code_r0x0044d0ba;\n                        }\n                        *(*0x20 + -0x228) = arg4;\n                        *(*0x20 + -0x360) = 0x44dfe5;\n                        fcn.00431980();\n                        *(*0x20 + -0x360) = 0x44dff6;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e005;\n                        fcn.004320e0();\n                        *(*0x20 + -0x360) = 0x44e016;\n                        fcn.00432280();\n                        *(*0x20 + -0x360) = 0x44e025;\n                        fcn.004320e0();\n                        *(*0x20 + -0x360) = 0x44e02a;\n                        fcn.00431be0();\n                        *(*0x20 + -0x360) = 0x44e02f;\n                        fcn.00431a00();\n                        *(*0x20 + -0x360) = 0x44e04e;\n                        fcn.00450680(*0x20 + -0x50);\n                        *(*0x20 + -0x360) = 0x44e05f;\n                        fcn.00430040();\n                        goto code_r0x0044e05f;\n                    }\n                    uVar25 = cVar5 == '\\x12';\ncode_r0x0044d0ba:\n                    *(*0x20 + -0x50) = piVar23;\n                    *(*0x20 + -0x48) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0x40) = *(*0x20 + -0x30);\n                    *(*0x20 + -0x30) = 0;\n                    *(*0x20 + -0x28) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x20) = 0;\n                    uVar11 = arg4 & 0xffffff00 | uVar25;\n                    uVar9 = *(*0x20 + -0x98);\n                    in_R11 = *(*0x20 + -0x78);\n                    arg4 = *(*0x20 + -0x228);\n                    in_R10 = *(*0x20 + -0x230);\n                }\n                while( true ) {\n                    ppiVar22 = ppiVar15;\n                    if (*(*0x20 + -0x32a) != '\\0') {\n                        ppiVar22 = arg3;\n                    }\n                    if ((*(*0x20 + 0x48) == 0) || (unaff_RSI <= ppiVar22)) break;\n                    piVar19 = in_R11[0x10];\n                    if (piVar19 == *(*0x20 + -0x28)) {\n                        return ppiVar22;\n                    }\n                    *(*0x20 + -0x228) = *(*0x20 + -0x28);\n                    *(*0x20 + -0x230) = piVar19;\n                    *(*0x20 + -0x2d0) = ppiVar22;\n                    *(*0x20 + -0x70) = in_R11;\n                    *(*0x20 + -0x248) = in_R11[0x13];\n                    *(*0x20 + -0x360) = 0x44dea5;\n                    fcn.00431980();\n                    *(*0x20 + -0x360) = 0x44deb6;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44dec5;\n                    fcn.00431f80();\n                    *(*0x20 + -0x360) = 0x44ded6;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44dee5;\n                    fcn.004320e0();\n                    *(*0x20 + -0x360) = 0x44def6;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44df05;\n                    fcn.004320e0();\n                    *(*0x20 + -0x360) = 0x44df0a;\n                    fcn.00431be0();\n                    *(*0x20 + -0x360) = 0x44df0f;\n                    fcn.00431a00();\n                    *(*0x20 + -0x228) = **(*0x20 + -0x70);\n                    *(*0x20 + -0x230) = (*(*0x20 + -0x70))[1];\n                    *(*0x20 + -0x360) = 0x44df33;\n                    fcn.00431980();\n                    *(*0x20 + -0x360) = 0x44df45;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44df52;\n                    fcn.004320e0();\n                    *(*0x20 + -0x360) = 0x44df65;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44df72;\n                    fcn.004320e0();\n                    *(*0x20 + -0x360) = 0x44df85;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44df92;\n                    fcn.00432080();\n                    *(*0x20 + -0x360) = 0x44dfa5;\n                    fcn.00432280();\n                    *(*0x20 + -0x360) = 0x44dfb2;\n                    fcn.00432080();\n                    *(*0x20 + -0x360) = 0x44dfb7;\n                    fcn.00431be0();\n                    *(*0x20 + -0x360) = 0x44dfbc;\n                    fcn.00431a00();\n                    *(*0x20 + -0x360) = 0x44dfcd;\n                    ppiVar15 = in_R10;\n                    fcn.00430040();\n                    in_R10 = ppiVar15;\n                    in_R11 = ppiVar22;\n                }\n                return ppiVar22;\n            }\n            goto code_r0x0044e98b;\n        }\n        goto code_r0x0044e99c;\n    }\n    goto code_r0x0044e9ae;\ncode_r0x0044e914:\n    *(*0x20 + -0x360) = 0x44e925;\n    fcn.00430040();\ncode_r0x0044e925:\n    uVar9 = *(*0x20 + -0xa8);\n    *(*0x20 + -0x360) = 0x44e935;\n    uVar12 = fcn.00447da0();\n    *(*0x20 + -0x90) = uVar12;\n    *(*0x20 + -0x250) = uVar9;\n    *(*0x20 + -0x360) = 0x44e94a;\n    fcn.00431980();\n    *(*0x20 + -0x360) = 0x44e95b;\n    fcn.00432280();\n    *(*0x20 + -0x360) = 0x44e970;\n    fcn.00432280();\n    *(*0x20 + -0x360) = 0x44e975;\n    fcn.00431be0();\n    *(*0x20 + -0x360) = 0x44e97a;\n    fcn.00431a00();\n    *(*0x20 + -0x360) = 0x44e98b;\n    fcn.00430040();\ncode_r0x0044e98b:\n    *(*0x20 + -0x360) = 0x44e99c;\n    fcn.00430040();\ncode_r0x0044e99c:\n    unaff_RBX = 0x37;\n    *(*0x20 + -0x360) = 0x44e9ad;\n    in_RAX = fcn.00430040();\ncode_r0x0044e9ae:\n    *(puVar16 + 0x10) = in_RAX;\n    *(puVar16 + 0x18) = unaff_RBX;\n    *(puVar16 + 0x20) = arg1;\n    *(puVar16 + 0x28) = unaff_RDI;\n    *(puVar16 + 0x30) = unaff_RSI;\n    *(puVar16 + 0x38) = arg3;\n    *(puVar16 + 0x40) = arg4;\n    *(puVar16 + 0x48) = in_R10;\n    *(puVar16 + 0x50) = in_R11;\n    *(puVar16 + -8) = 0x44e9e5;\n    fcn.004568e0();\n    in_RAX = *(puVar16 + 0x10);\n    unaff_RBX = *(puVar16 + 0x18);\n    arg1 = *(puVar16 + 0x20);\n    unaff_RDI = *(puVar16 + 0x28);\n    unaff_RSI = *(puVar16 + 0x30);\n    arg3 = *(puVar16 + 0x38);\n    arg4 = *(puVar16 + 0x40);\n    in_R10 = *(puVar16 + 0x48);\n    in_R11 = *(puVar16 + 0x50);\n    *0x20 = puVar16;\n    goto code_r0x0044cd80;\ncode_r0x0044e695:\n    arg3 = 0x100000;\n    *(*0x20 + -0x360) = 0x44e69f;\n    iVar7 = fcn.00458f20(0x100000);\ncode_r0x0044e69f:\n    *(*0x20 + -0x250) = iVar7;\n    *(*0x20 + -600) = unaff_RSI;\n    *(*0x20 + -0x268) = arg3;\n    arg3 = *(ppiVar15 + iVar7);\n    *(*0x20 + -0x329) = *(ppiVar15 + iVar7);\n    *(*0x20 + -0x360) = 0x44e6db;\n    iVar10 = fcn.00447480();\n    arg4 = iVar10 + 1 + *(*(*0x20 + -0x250) + 8 + *(*0x20 + -0xe8));\n    unaff_RDI = *(*0x20 + -0x329);\n    ppiVar15 = *(*0x20 + -0x268);\n    iVar7 = *(*0x20 + -600);\n    ppiVar22 = *(*(*0x20 + -0x250) + 8 + *(*0x20 + -0xe8)) + iVar10;\n    goto code_r0x0044e71e;\n}\n",
        "token_count": 14578
    },
    "0044f560": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f560(ulong arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    uchar auStack312 [256];\n    ulong *puStack56;\n    ulong uStack48;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    while (auStack312 < *(unaff_R14 + 0x10) || auStack312 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (((((*0x5449e8 != '\\0') && (iVar2 = *(unaff_RDI + 0x30),  iVar2 != 0)) && (0 < *(iVar2 + 0x108))) &&\n        ((*(unaff_RDI + 0x70) != 0 && (*(iVar2 + 0x110) != NULL)))) && (**(iVar2 + 0x110) != 0)) {\n        *(iVar2 + 0x10c) = 1;\n        iVar2 = fcn.00459480();\n        **(*(iVar2 + 0x30) + 0x110) = 0;\n        *(*(iVar2 + 0x30) + 0x10c) = 0;\n        fcn.00450980();\n    }\n    if ((*(unaff_RDI + 0x90) & 0xffffefff) == 3) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar2 = *(unaff_RDI + 0x30);\n    if ((iVar2 != 0) && (*(iVar2 + 0x2f0) != 0)) {\n        unaff_RSI = unaff_RSI & 0xfffffffffffffffd;\n    }\n    iVar2 = fcn.0044cd80(arg1, iVar2, 0, 100);\n    if ((iVar2 == 0) && ((unaff_RSI & 1) == 0)) {\n        iVar2 = fcn.0044cd80(arg1, unaff_RSI | 1, 0, 100);\n    }\n    if (iVar2 == 100) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    fcn.0044f200();\n    puVar1 = *(unaff_RDI + 0x130);\n    if (puVar1 == NULL) {\n        return;\n    }\n    puStack56 = *puVar1;\n    iVar2 = puVar1[1];\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        uStack48 = *puStack56;\n        uStack40 = *(puStack56 + 1);\n        uStack36 = *(puStack56 + 0xc);\n        uStack32 = *(puStack56 + 2);\n        uStack28 = *(puStack56 + 0x14);\n        uStack24 = *(puStack56 + 3);\n        uStack20 = *(puStack56 + 0x1c);\n        uStack16 = *(puStack56 + 4);\n        uStack12 = *(puStack56 + 0x24);\n        fcn.0044f8a0(puStack56[2]);\n        puStack56 = puStack56 + 5;\n    }\n    return;\n}\n",
        "token_count": 815
    },
    "0044fa60": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fa60(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t *piVar8;\n    int64_t unaff_R14;\n    \n    do {\n        iVar6 = unaff_RBX;\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x80) = 0x44fa9f;\n            uVar3 = fcn.00447da0();\n            iVar6 = *(*0x20 + -0x10);\n            if (*(iVar6 + 0x2b) < 4) {\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = 0;\n            }\n            else {\n                uVar1 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x38);\n                iVar6 = *(*0x20 + -0x18);\n                uVar5 = uVar1 + *(iVar6 + 0x140) & (uVar1 == 0xffffffff) - 1;\n            }\n            if (uVar5 == 0) goto code_r0x0044fb5e;\n            *(*0x20 + -0x30) = uVar5;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar3;\n            *(*0x20 + -0x80) = 0x44fb13;\n            iVar2 = fcn.004483e0(2);\n            if (iVar2 < 0) {\n                unaff_RBX = *(*0x20 + -0x40);\n                uVar3 = *(*0x20 + -0x28);\n                goto code_r0x0044fb54;\n            }\n            if (iVar2 < 0x100000) {\n                uVar1 = *(*(*0x20 + -0x30) + 4 + iVar2 * 0x10);\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x80) = 0x44fb48;\n                uVar3 = fcn.00447ee0(uVar1);\ncode_r0x0044fb54:\n                iVar6 = *(*0x20 + -0x18);\ncode_r0x0044fb5e:\n                *(*0x20 + -0x40) = unaff_RBX;\n                *(*0x20 + -0x28) = uVar3;\n                uVar3 = *(*0x20 + 0x18);\n                *(*0x20 + -0x80) = 0x44fb85;\n                uVar4 = fcn.00448060(uVar3);\n                *(*0x20 + -0x20) = uVar4;\n                *(*0x20 + -0x38) = iVar6;\n                *(*0x20 + -0x4c) = uVar3;\n                iVar6 = *(*0x20 + -0x40);\n                if (iVar6 == 0xf) {\n                    piVar8 = *(*0x20 + -0x28);\n                    if ((((*piVar8 == 0x2e656d69746e7572) && (*(piVar8 + 1) == 0x61706f67)) &&\n                        (*(piVar8 + 0xc) == 0x696e)) && (*(piVar8 + 0xe) == 'c')) {\n                        iVar6 = 5;\n                        piVar8 = 0x475aab;\n                    }\n                }\n                else {\n                    piVar8 = *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                *(*0x20 + -0x28) = piVar8;\n                *(*0x20 + -0x80) = 0x44fbeb;\n                fcn.00431980();\n                *(*0x20 + -0x80) = 0x44fbfa;\n                fcn.00432280();\n                *(*0x20 + -0x80) = 0x44fc0b;\n                fcn.00432280();\n                *(*0x20 + -0x80) = 0x44fc10;\n                fcn.00431a00();\n                *(*0x20 + -0x80) = 0x44fc15;\n                fcn.00431980();\n                *(*0x20 + -0x80) = 0x44fc26;\n                fcn.00432280();\n                *(*0x20 + -0x80) = 0x44fc35;\n                fcn.00432280();\n                *(*0x20 + -0x80) = 0x44fc46;\n                fcn.00432280();\n                *(*0x20 + -0x80) = 0x44fc52;\n                fcn.00432080();\n                *(*0x20 + -0x80) = 0x44fc57;\n                fcn.00431a00();\n                *(*0x20 + -0x80) = 0x44fc68;\n                uVar5 = fcn.00447480();\n                if (uVar5 < *(*0x20 + 0x18)) {\n                    *(*0x20 + -0x80) = 0x44fc86;\n                    uVar3 = fcn.00447480();\n                    *(*0x20 + -0x48) = uVar3;\n                    *(*0x20 + -0x80) = 0x44fc90;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x44fca5;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x44fcba;\n                    fcn.004320e0(*(*0x20 + -0x48));\n                    *(*0x20 + -0x80) = 0x44fcbf;\n                    fcn.00431a00();\n                }\n                *(*0x20 + -0x80) = 0x44fcc5;\n                fcn.00431980();\n                *(*0x20 + -0x80) = 0x44fcca;\n                fcn.00431be0();\n                *(*0x20 + -0x80) = 0x44fccf;\n                fcn.00431a00();\n                return;\n            }\n            arg1 = 0x100000;\n            *(*0x20 + -0x80) = 0x44fce5;\n            in_RAX = fcn.00458f20(0x100000);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = iVar6;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x44fcfa;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1811
    },
    "00450200": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450200(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *(in_RAX + 0x90);\n    uVar2 = uVar1 & 0xffffefff;\n    if ((uVar2 == 4) || (uVar2 == 3)) {\n        if (*(in_RAX + 0xa8) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            fcn.0045a8a0();\n            iVar3 = (iStack64 - *(in_RAX + 0xa8)) / 60000000000;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00432280();\n    fcn.00431a00();\n    if ((uVar1 >> 0xc & 1) != 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    if (0 < iVar3) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    if (*(in_RAX + 0xe8) != 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 460
    },
    "00452dc0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00452dc0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    \n    if (unaff_RBX <= arg1) {\n        return 0xfffd;\n    }\n    if (arg1 <= unaff_RBX) {\n        iVar7 = unaff_RBX - arg1;\n        unaff_RBX = -iVar7 >> 0x3f & arg1;\n        if (iVar7 != 0) {\n            uVar1 = *(in_RAX + unaff_RBX);\n            if (0xbf < uVar1) {\n                uVar5 = uVar1;\n                if (uVar1 < 0xe0) {\n                    if (((1 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                       ((uVar1 < 0xc0 && (uVar5 = uVar1 & 0x3f | (uVar5 & 0x1f) << 6,  0x7f < uVar5)))) {\n                        return uVar5;\n                    }\n                }\n                else if (uVar1 < 0xf0) {\n                    if ((((2 < iVar7) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) && (uVar1 < 0xc0)) &&\n                       ((uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2 && (uVar2 < 0xc0)))) {\n                        uVar5 = uVar2 & 0x3f | (uVar1 & 0x3f) << 6 | (uVar5 & 0xf) << 0xc;\n                        if ((0x7ff < uVar5) && (0x7ff < uVar5 - 0xd800)) {\n                            return uVar5;\n                        }\n                    }\n                }\n                else if ((((((uVar1 < 0xf8) && (3 < iVar7)) && (uVar1 = *(in_RAX + 1 + unaff_RBX),  0x7f < uVar1)) &&\n                          ((uVar1 < 0xc0 && (uVar2 = *(in_RAX + 2 + unaff_RBX),  0x7f < uVar2)))) &&\n                         ((uVar2 < 0xc0 && ((uVar3 = *(in_RAX + 3 + unaff_RBX),  0x7f < uVar3 && (uVar3 < 0xc0)))))) &&\n                        (uVar5 = uVar3 & 0x3f | (uVar5 & 7) << 0x12 | (uVar1 & 0x3f) << 0xc | (uVar2 & 0x3f) << 6, \n                        uVar5 - 0x10000 < 0x100000)) {\n                    return uVar5;\n                }\n            }\n            return 0xfffd;\n        }\n        fcn.00458f20(0);\n    }\n    fcn.00458fe0(unaff_RBX);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 801
    },
    "00452fa0": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00452fa0(void)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint8_t *in_RAX;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    uint8_t uVar4;\n    uint32_t unaff_EDI;\n    \n    uVar4 = unaff_EDI;\n    if (unaff_EDI < 0x80) {\n        if (unaff_RBX != 0) {\n            *in_RAX = uVar4;\n            return 1;\n        }\n        goto code_r0x004530ec;\n    }\n    uVar2 = unaff_EDI >> 6;\n    if (unaff_EDI < 0x800) {\n        if (1 < unaff_RBX) {\n            *in_RAX = uVar2 | 0xc0;\n            in_RAX[1] = uVar4 & 0x3f | 0x80;\n            return 2;\n        }\n    }\n    else {\n        if ((unaff_EDI < 0x110000) && (0x7ff < unaff_EDI - 0xd800)) {\n            if (unaff_EDI < 0x10000) goto code_r0x00453040;\n            if (3 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0x12 | 0xf0;\n                in_RAX[1] = unaff_EDI >> 0xc & 0x3f | 0x80;\n                in_RAX[2] = uVar2 & 0x3f | 0x80;\n                in_RAX[3] = uVar4 & 0x3f | 0x80;\n                return 4;\n            }\n            fcn.00458f20(unaff_RBX);\n        }\n        else {\n            unaff_EDI = 0xfffd;\ncode_r0x00453040:\n            if (2 < unaff_RBX) {\n                *in_RAX = unaff_EDI >> 0xc | 0xe0;\n                in_RAX[1] = unaff_EDI >> 6 & 0x3f | 0x80;\n                in_RAX[2] = unaff_EDI & 0x3f | 0x80;\n                return 3;\n            }\n        }\n        fcn.00458f20(unaff_RBX);\n    }\n    fcn.00458f20(unaff_RBX);\ncode_r0x004530ec:\n    fcn.00458f20(0);\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 592
    },
    "00454a20": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00454a20(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_RAX;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX < 4) {\n        if (unaff_RBX == 0) {\ncode_r0x00454ab6:\n            uVar1 = 4;\n            goto code_r0x00454af2;\n        }\n        if (((unaff_RBX == 3) && (*in_RAX == 0x6c61)) && (*(in_RAX + 2) == 'l')) {\n            uVar1 = 6;\n            goto code_r0x00454af2;\n        }\n    }\n    else if (unaff_RBX == 4) {\n        if (*in_RAX == 0x656e6f6e) {\n            uVar1 = 0;\n            goto code_r0x00454af2;\n        }\n    }\n    else if (unaff_RBX == 5) {\n        if ((*in_RAX == 0x73617263) && (*(in_RAX + 1) == 'h')) {\n            uVar1 = 0xb;\n            goto code_r0x00454af2;\n        }\n    }\n    else if (unaff_RBX == 6) {\n        if ((*in_RAX == 0x676e6973) && (*(in_RAX + 1) == 0x656c)) goto code_r0x00454ab6;\n        if ((*in_RAX == 0x74737973) && (*(in_RAX + 1) == 0x6d65)) {\n            uVar1 = 10;\n            goto code_r0x00454af2;\n        }\n    }\n    uVar3 = fcn.004463c0();\n    if ((unaff_RBX == '\\0') || (uVar3 != (uVar3 & 0xffffffff))) {\n        uVar1 = 2;\n    }\n    else {\n        uVar1 = uVar3 << 2 | 2;\n    }\ncode_r0x00454af2:\n    if ((*0x5449e9 != '\\0') || (*0x5449e7 != '\\0')) {\n        uVar1 = uVar1 | 1;\n    }\n    uVar2 = *0x4d926c;\n    *0x4d926c = uVar1 | *0x544a54;\n    return uVar2;\n}\n",
        "token_count": 611
    },
    "004023a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004023a0(uint64_t arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar *puVar3;\n    uchar *puVar4;\n    uchar (*in_RAX) [32];\n    uint8_t uVar5;\n    uchar (*unaff_RBX) [32];\n    uchar (*pauVar6) [32];\n    uint64_t uVar7;\n    uint64_t uVar8;\n    bool bVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [32];\n    uchar auVar12 [32];\n    uchar auVar13 [32];\n    uchar auVar14 [32];\n    \n    if (in_RAX == unaff_RBX) {\n        return 1;\n    }\n    if (7 < arg1) {\n        pauVar6 = in_RAX;\n        if (0x3f < arg1) {\n            if (*0x5450e3 == '\\x01') {\n                while (0x3f < arg1) {\n                    auVar11 = vmovdqu_avx(*pauVar6);\n                    auVar12 = vmovdqu_avx(*unaff_RBX);\n                    auVar13 = vmovdqu_avx(pauVar6[1]);\n                    auVar14 = vmovdqu_avx(unaff_RBX[1]);\n                    auVar11 = vpcmpeqb_avx2(auVar11, auVar12);\n                    auVar12 = vpcmpeqb_avx2(auVar14, auVar13);\n                    auVar11 = vpand_avx2(auVar12, auVar11);\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB321(auVar11 >> 7, 0) & 1 | (SUB321(auVar11 >> 0xf, 0) & 1) << 1 |\n                         (SUB321(auVar11 >> 0x17, 0) & 1) << 2 | (SUB321(auVar11 >> 0x1f, 0) & 1) << 3 |\n                         (SUB321(auVar11 >> 0x27, 0) & 1) << 4 | (SUB321(auVar11 >> 0x2f, 0) & 1) << 5 |\n                         (SUB321(auVar11 >> 0x37, 0) & 1) << 6 | (SUB321(auVar11 >> 0x3f, 0) & 1) << 7 |\n                         (SUB321(auVar11 >> 0x47, 0) & 1) << 8 | (SUB321(auVar11 >> 0x4f, 0) & 1) << 9 |\n                         (SUB321(auVar11 >> 0x57, 0) & 1) << 10 | (SUB321(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB321(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB321(auVar11 >> 0x77, 0) & 1) << 0xe | SUB321(auVar11 >> 0x7f, 0) << 0xf |\n                         (SUB321(auVar11 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar11 >> 0x8f, 0) & 1) << 0x11 |\n                         (SUB321(auVar11 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar11 >> 0x9f, 0) & 1) << 0x13 |\n                         (SUB321(auVar11 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar11 >> 0xaf, 0) & 1) << 0x15 |\n                         (SUB321(auVar11 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar11 >> 0xbf, 0) << 0x17 |\n                         (SUB321(auVar11 >> 199, 0) & 1) << 0x18 | (SUB321(auVar11 >> 0xcf, 0) & 1) << 0x19 |\n                         (SUB321(auVar11 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar11 >> 0xdf, 0) & 1) << 0x1b |\n                         (SUB321(auVar11 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar11 >> 0xef, 0) & 1) << 0x1d |\n                         (SUB321(auVar11 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar11 >> 0xff, 0) << 0x1f) != 0xffffffff) {\n                        vzeroupper_avx();\n                        return 0;\n                    }\n                }\n                vzeroupper_avx();\n            }\n            else {\n                while (0x3f < arg1) {\n                    auVar10 = **unaff_RBX;\n                    auVar1 = *(*unaff_RBX + 0x10);\n                    auVar2 = *unaff_RBX[1];\n                    auVar10 = CONCAT115(-((*pauVar6)[0xf] == SUB161(auVar10 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0xe] == SUB161(auVar10 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0xd] == SUB161(auVar10 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0xc] == SUB161(auVar10 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0xb] ==\n                                                                                 SUB161(auVar10 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[10] ==\n                                                                                           SUB161(auVar10 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[9] ==\n                                                                                                    SUB161(auVar10 >>\n                                                                                                           0x48, 0)), \n                                                                                                   CONCAT18(-((*pauVar6)\n                                                                                                              [8] == \n                                                            SUB161(auVar10 >> 0x40, 0)), \n                                                            CONCAT17(-((*pauVar6)[7] == SUB161(auVar10 >> 0x38, 0)), \n                                                                     CONCAT16(-((*pauVar6)[6] ==\n                                                                               SUB161(auVar10 >> 0x30, 0)), \n                                                                              CONCAT15(-((*pauVar6)[5] ==\n                                                                                        SUB161(auVar10 >> 0x28, 0)), \n                                                                                       CONCAT14(-((*pauVar6)[4] ==\n                                                                                                 SUB161(auVar10 >> 0x20\n                                                                                                        , 0)), \n                                                                                                CONCAT13(-((*pauVar6)[3]\n                                                                                                          == SUB161(\n                                                            auVar10 >> 0x18, 0)), \n                                                            CONCAT12(-((*pauVar6)[2] == SUB161(auVar10 >> 0x10, 0)), \n                                                                     CONCAT11(-((*pauVar6)[1] == SUB161(auVar10 >> 8, 0)\n                                                                               ), -((*pauVar6)[0] == SUB161(auVar10, 0))\n                                                                             ))))))))))))))) &\n                              CONCAT115(-((*pauVar6)[0x1f] == SUB161(auVar1 >> 0x78, 0)), \n                                        CONCAT114(-((*pauVar6)[0x1e] == SUB161(auVar1 >> 0x70, 0)), \n                                                  CONCAT113(-((*pauVar6)[0x1d] == SUB161(auVar1 >> 0x68, 0)), \n                                                            CONCAT112(-((*pauVar6)[0x1c] == SUB161(auVar1 >> 0x60, 0)), \n                                                                      CONCAT111(-((*pauVar6)[0x1b] ==\n                                                                                 SUB161(auVar1 >> 0x58, 0)), \n                                                                                CONCAT110(-((*pauVar6)[0x1a] ==\n                                                                                           SUB161(auVar1 >> 0x50, 0)), \n                                                                                          CONCAT19(-((*pauVar6)[0x19] ==\n                                                                                                    SUB161(auVar1 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-((*pauVar6)[0x18] == SUB161(auVar1 >> 0x40, 0)), \n                                                                     CONCAT17(-((*pauVar6)[0x17] ==\n                                                                               SUB161(auVar1 >> 0x38, 0)), \n                                                                              CONCAT16(-((*pauVar6)[0x16] ==\n                                                                                        SUB161(auVar1 >> 0x30, 0)), \n                                                                                       CONCAT15(-((*pauVar6)[0x15] ==\n                                                                                                 SUB161(auVar1 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-((*pauVar6)\n                                                                                                           [0x14] ==\n                                                                                                          SUB161(auVar1 \n                                                            >> 0x20, 0)), \n                                                            CONCAT13(-((*pauVar6)[0x13] == SUB161(auVar1 >> 0x18, 0)), \n                                                                     CONCAT12(-((*pauVar6)[0x12] ==\n                                                                               SUB161(auVar1 >> 0x10, 0)), \n                                                                              CONCAT11(-((*pauVar6)[0x11] ==\n                                                                                        SUB161(auVar1 >> 8, 0)), \n                                                                                       -((*pauVar6)[0x10] ==\n                                                                                        SUB161(auVar1, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0xf] == SUB161(auVar2 >> 0x78, 0)), \n                                        CONCAT114(-(pauVar6[1][0xe] == SUB161(auVar2 >> 0x70, 0)), \n                                                  CONCAT113(-(pauVar6[1][0xd] == SUB161(auVar2 >> 0x68, 0)), \n                                                            CONCAT112(-(pauVar6[1][0xc] == SUB161(auVar2 >> 0x60, 0)), \n                                                                      CONCAT111(-(pauVar6[1][0xb] ==\n                                                                                 SUB161(auVar2 >> 0x58, 0)), \n                                                                                CONCAT110(-(pauVar6[1][10] ==\n                                                                                           SUB161(auVar2 >> 0x50, 0)), \n                                                                                          CONCAT19(-(pauVar6[1][9] ==\n                                                                                                    SUB161(auVar2 >> \n                                                            0x48, 0)), \n                                                            CONCAT18(-(pauVar6[1][8] == SUB161(auVar2 >> 0x40, 0)), \n                                                                     CONCAT17(-(pauVar6[1][7] ==\n                                                                               SUB161(auVar2 >> 0x38, 0)), \n                                                                              CONCAT16(-(pauVar6[1][6] ==\n                                                                                        SUB161(auVar2 >> 0x30, 0)), \n                                                                                       CONCAT15(-(pauVar6[1][5] ==\n                                                                                                 SUB161(auVar2 >> 0x28, \n                                                                                                        0)), \n                                                                                                CONCAT14(-(pauVar6[1][4]\n                                                                                                          == SUB161(\n                                                            auVar2 >> 0x20, 0)), \n                                                            CONCAT13(-(pauVar6[1][3] == SUB161(auVar2 >> 0x18, 0)), \n                                                                     CONCAT12(-(pauVar6[1][2] ==\n                                                                               SUB161(auVar2 >> 0x10, 0)), \n                                                                              CONCAT11(-(pauVar6[1][1] ==\n                                                                                        SUB161(auVar2 >> 8, 0)), \n                                                                                       -(pauVar6[1][0] ==\n                                                                                        SUB161(auVar2, 0))))))))))))))))\n                                       ) &\n                              CONCAT115(-(pauVar6[1][0x1f] == unaff_RBX[1][0x1f]), \n                                        CONCAT114(-(pauVar6[1][0x1e] == unaff_RBX[1][0x1e]), \n                                                  CONCAT113(-(pauVar6[1][0x1d] == unaff_RBX[1][0x1d]), \n                                                            CONCAT112(-(pauVar6[1][0x1c] == unaff_RBX[1][0x1c]), \n                                                                      CONCAT111(-(pauVar6[1][0x1b] == unaff_RBX[1][0x1b]\n                                                                                 ), CONCAT110(-(pauVar6[1][0x1a] ==\n                                                                                               unaff_RBX[1][0x1a]), \n                                                                                              CONCAT19(-(pauVar6[1]\n                                                                                                         [0x19] ==\n                                                                                                        unaff_RBX[1]\n                                                                                                        [0x19]), \n                                                                                                       CONCAT18(-(\n                                                            pauVar6[1][0x18] == unaff_RBX[1][0x18]), \n                                                            CONCAT17(-(pauVar6[1][0x17] == unaff_RBX[1][0x17]), \n                                                                     CONCAT16(-(pauVar6[1][0x16] == unaff_RBX[1][0x16])\n                                                                              , CONCAT15(-(pauVar6[1][0x15] ==\n                                                                                          unaff_RBX[1][0x15]), \n                                                                                         CONCAT14(-(pauVar6[1][0x14] ==\n                                                                                                   unaff_RBX[1][0x14]), \n                                                                                                  CONCAT13(-(pauVar6[1]\n                                                                                                             [0x13] ==\n                                                                                                            unaff_RBX[1]\n                                                                                                            [0x13]), \n                                                                                                           CONCAT12(-(\n                                                            pauVar6[1][0x12] == unaff_RBX[1][0x12]), \n                                                            CONCAT11(-(pauVar6[1][0x11] == unaff_RBX[1][0x11]), \n                                                                     -(pauVar6[1][0x10] == unaff_RBX[1][0x10])))))))))))\n                                                            )))));\n                    pauVar6 = pauVar6[2];\n                    unaff_RBX = unaff_RBX[2];\n                    arg1 = arg1 - 0x40;\n                    if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar10 >> 0x17, 0) & 1) << 2 | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar10 >> 0x27, 0) & 1) << 4 | (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar10 >> 0x37, 0) & 1) << 6 | (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar10 >> 0x47, 0) & 1) << 8 | (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar10 >> 0x57, 0) & 1) << 10 | (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | SUB161(auVar10 >> 0x7f, 0) << 0xf) != 0xffff) {\n                        return 0;\n                    }\n                }\n            }\n        }\n        do {\n            if (arg1 < 9) {\n                return in_RAX & 0xffffffffffffff00 | *(pauVar6[-1] + arg1 + 0x18) == *(unaff_RBX[-1] + arg1 + 0x18);\n            }\n            puVar3 = *pauVar6;\n            puVar4 = *unaff_RBX;\n            pauVar6 = *pauVar6 + 8;\n            unaff_RBX = *unaff_RBX + 8;\n            arg1 = arg1 - 8;\n        } while (*puVar3 == *puVar4);\n        return 0;\n    }\n    bVar9 = arg1 == 0;\n    if (!bVar9) {\n        uVar5 = arg1 * -8;\n        if (in_RAX < 0xf9) {\n            uVar7 = **in_RAX;\n        }\n        else {\n            uVar7 = *(in_RAX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        if (unaff_RBX < 0xf9) {\n            uVar8 = **unaff_RBX;\n        }\n        else {\n            uVar8 = *(unaff_RBX[-1] + arg1 + 0x18) >> (uVar5 & 0x3f);\n        }\n        bVar9 = (arg1 * -8 & 0x3f) != 0;\n        bVar9 = !bVar9 && uVar8 - uVar7 == 0 || bVar9 && uVar8 - uVar7 << (uVar5 & 0x3f) == 0;\n    }\n    return in_RAX & 0xffffffffffffff00 | bVar9;\n}\n",
        "token_count": 4147
    },
    "00402500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402500(ulong noname_0, ulong arg2)\n\n{\n    uchar (*pauVar1) [32];\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint64_t in_RAX;\n    uint32_t uVar5;\n    bool bVar6;\n    uchar auVar7 [16];\n    uint8_t uVar9;\n    uchar auVar8 [32];\n    uchar auVar10 [32];\n    uchar (*pauStackX8) [32];\n    uint64_t uStackX16;\n    uint8_t uStackX24;\n    \n    if (uStackX16 < 0x10) {\n        if (uStackX16 != 0) {\n            if ((*pauStackX8 + 0x10 & 0xff0) == 0) {\n                puVar2 = pauStackX8[-1] + uStackX16 + 0x10;\n                auVar7 = CONCAT115(-(puVar2[0xf] == uStackX24), \n                                   CONCAT114(-(puVar2[0xe] == uStackX24), \n                                             CONCAT113(-(puVar2[0xd] == uStackX24), \n                                                       CONCAT112(-(puVar2[0xc] == uStackX24), \n                                                                 CONCAT111(-(puVar2[0xb] == uStackX24), \n                                                                           CONCAT110(-(puVar2[10] == uStackX24), \n                                                                                     CONCAT19(-(puVar2[9] == uStackX24)\n                                                                                              , CONCAT18(-(puVar2[8] ==\n                                                                                                          uStackX24), \n                                                                                                         CONCAT17(-(\n                                                            puVar2[7] == uStackX24), \n                                                            CONCAT16(-(puVar2[6] == uStackX24), \n                                                                     CONCAT15(-(puVar2[5] == uStackX24), \n                                                                              CONCAT14(-(puVar2[4] == uStackX24), \n                                                                                       CONCAT13(-(puVar2[3] == uStackX24\n                                                                                                 ), CONCAT12(-(puVar2[2]\n                                                                                                              == \n                                                            uStackX24), \n                                                            CONCAT11(-(puVar2[1] == uStackX24), -(*puVar2 == uStackX24))\n                                                            ))))))))))))));\n                uVar5 = ((SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                          (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                          (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                          (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                          (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                          (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                          (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                          (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (-(puVar2[0xf] == uStackX24) >> 7) << 0xf) <<\n                        (uStackX16 & 0x1f)) >> 0x10;\n                iVar3 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                if (uVar5 != 0) {\n                    return;\n                }\n            }\n            else {\n                uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n                auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                    CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                              CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                        CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                                  CONCAT110(-((*pauStackX8)[10] ==\n                                                                                             uStackX24), \n                                                                                            CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n                uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n                uVar5 = 0;\n                if (uVar4 != 0) {\n                    for (; (uVar4 >> uVar5 & 1) == 0; uVar5 = uVar5 + 1) {\n                    }\n                }\n                if ((uVar4 != 0) && (uVar5 < uStackX16)) {\n                    return;\n                }\n            }\n        }\n    }\n    else {\n        if ((0x20 < uStackX16) && (bVar6 = *0x5450e3 == '\\x01',  bVar6)) {\n            pauVar1 = pauStackX8[-1] + uStackX16;\n            auVar8 = vpbroadcastb_avx2(ZEXT816(in_RAX & 0xffffffffffffff00 | uStackX24));\n            do {\n                auVar10 = vmovdqu_avx(*pauStackX8);\n                auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n                vptest_avx(auVar10, auVar10);\n                if (!bVar6) goto code_r0x004024e3;\n                pauStackX8 = pauStackX8[1];\n                bVar6 = pauStackX8 == pauVar1;\n            } while (pauStackX8 < pauVar1);\n            auVar10 = vmovdqu_avx(*pauVar1);\n            auVar10 = vpcmpeqb_avx2(auVar10, auVar8);\n            vptest_avx(auVar10, auVar10);\n            if (bVar6) {\n                vzeroupper_avx();\n                return;\n            }\ncode_r0x004024e3:\n            uVar5 = SUB321(auVar10 >> 7, 0) & 1 | (SUB321(auVar10 >> 0xf, 0) & 1) << 1 |\n                    (SUB321(auVar10 >> 0x17, 0) & 1) << 2 | (SUB321(auVar10 >> 0x1f, 0) & 1) << 3 |\n                    (SUB321(auVar10 >> 0x27, 0) & 1) << 4 | (SUB321(auVar10 >> 0x2f, 0) & 1) << 5 |\n                    (SUB321(auVar10 >> 0x37, 0) & 1) << 6 | (SUB321(auVar10 >> 0x3f, 0) & 1) << 7 |\n                    (SUB321(auVar10 >> 0x47, 0) & 1) << 8 | (SUB321(auVar10 >> 0x4f, 0) & 1) << 9 |\n                    (SUB321(auVar10 >> 0x57, 0) & 1) << 10 | (SUB321(auVar10 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB321(auVar10 >> 0x67, 0) & 1) << 0xc | (SUB321(auVar10 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB321(auVar10 >> 0x77, 0) & 1) << 0xe | SUB321(auVar10 >> 0x7f, 0) << 0xf |\n                    (SUB321(auVar10 >> 0x87, 0) & 1) << 0x10 | (SUB321(auVar10 >> 0x8f, 0) & 1) << 0x11 |\n                    (SUB321(auVar10 >> 0x97, 0) & 1) << 0x12 | (SUB321(auVar10 >> 0x9f, 0) & 1) << 0x13 |\n                    (SUB321(auVar10 >> 0xa7, 0) & 1) << 0x14 | (SUB321(auVar10 >> 0xaf, 0) & 1) << 0x15 |\n                    (SUB321(auVar10 >> 0xb7, 0) & 1) << 0x16 | SUB321(auVar10 >> 0xbf, 0) << 0x17 |\n                    (SUB321(auVar10 >> 199, 0) & 1) << 0x18 | (SUB321(auVar10 >> 0xcf, 0) & 1) << 0x19 |\n                    (SUB321(auVar10 >> 0xd7, 0) & 1) << 0x1a | (SUB321(auVar10 >> 0xdf, 0) & 1) << 0x1b |\n                    (SUB321(auVar10 >> 0xe7, 0) & 1) << 0x1c | (SUB321(auVar10 >> 0xef, 0) & 1) << 0x1d |\n                    (SUB321(auVar10 >> 0xf7, 0) & 1) << 0x1e | SUB321(auVar10 >> 0xff, 0) << 0x1f;\n            iVar3 = 0;\n            if (uVar5 != 0) {\n                for (; (uVar5 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            vzeroupper_avx();\n            return;\n        }\n        pauVar1 = pauStackX8[-1] + uStackX16 + 0x10;\n        for (; pauStackX8 < pauVar1; pauStackX8 = *pauStackX8 + 0x10) {\n            uVar9 = -((*pauStackX8)[0xf] == uStackX24);\n            auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauStackX8)[0xe] == uStackX24), \n                                                CONCAT113(-((*pauStackX8)[0xd] == uStackX24), \n                                                          CONCAT112(-((*pauStackX8)[0xc] == uStackX24), \n                                                                    CONCAT111(-((*pauStackX8)[0xb] == uStackX24), \n                                                                              CONCAT110(-((*pauStackX8)[10] == uStackX24\n                                                                                         ), CONCAT19(-((*pauStackX8)[9]\n                                                                                                      == uStackX24), \n                                                                                                     CONCAT18(-((*\n                                                            pauStackX8)[8] == uStackX24), \n                                                            CONCAT17(-((*pauStackX8)[7] == uStackX24), \n                                                                     CONCAT16(-((*pauStackX8)[6] == uStackX24), \n                                                                              CONCAT15(-((*pauStackX8)[5] == uStackX24)\n                                                                                       , CONCAT14(-((*pauStackX8)[4] ==\n                                                                                                   uStackX24), \n                                                                                                  CONCAT13(-((*\n                                                            pauStackX8)[3] == uStackX24), \n                                                            CONCAT12(-((*pauStackX8)[2] == uStackX24), \n                                                                     CONCAT11(-((*pauStackX8)[1] == uStackX24), \n                                                                              -((*pauStackX8)[0] == uStackX24)))))))))))\n                                                            )))));\n            uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 |\n                    (SUB161(auVar7 >> 0x17, 0) & 1) << 2 | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 |\n                    (SUB161(auVar7 >> 0x27, 0) & 1) << 4 | (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 |\n                    (SUB161(auVar7 >> 0x37, 0) & 1) << 6 | (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 |\n                    (SUB161(auVar7 >> 0x47, 0) & 1) << 8 | (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 |\n                    (SUB161(auVar7 >> 0x57, 0) & 1) << 10 | (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb |\n                    (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd |\n                    (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n            iVar3 = 0;\n            if (uVar4 != 0) {\n                for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                }\n            }\n            if (uVar4 != 0) {\n                return;\n            }\n        }\n        uVar9 = -((*pauVar1)[0xf] == uStackX24);\n        auVar7 = CONCAT115(uVar9, CONCAT114(-((*pauVar1)[0xe] == uStackX24), \n                                            CONCAT113(-((*pauVar1)[0xd] == uStackX24), \n                                                      CONCAT112(-((*pauVar1)[0xc] == uStackX24), \n                                                                CONCAT111(-((*pauVar1)[0xb] == uStackX24), \n                                                                          CONCAT110(-((*pauVar1)[10] == uStackX24), \n                                                                                    CONCAT19(-((*pauVar1)[9] ==\n                                                                                              uStackX24), \n                                                                                             CONCAT18(-((*pauVar1)[8] ==\n                                                                                                       uStackX24), \n                                                                                                      CONCAT17(-((*\n                                                            pauVar1)[7] == uStackX24), \n                                                            CONCAT16(-((*pauVar1)[6] == uStackX24), \n                                                                     CONCAT15(-((*pauVar1)[5] == uStackX24), \n                                                                              CONCAT14(-((*pauVar1)[4] == uStackX24), \n                                                                                       CONCAT13(-((*pauVar1)[3] ==\n                                                                                                 uStackX24), \n                                                                                                CONCAT12(-((*pauVar1)[2]\n                                                                                                          == uStackX24)\n                                                                                                         , CONCAT11(-((*\n                                                            pauVar1)[1] == uStackX24), -((*pauVar1)[0] == uStackX24)))))\n                                                            )))))))))));\n        uVar4 = SUB161(auVar7 >> 7, 0) & 1 | (SUB161(auVar7 >> 0xf, 0) & 1) << 1 | (SUB161(auVar7 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar7 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar7 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar7 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar7 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar7 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar7 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar7 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar7 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar7 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar7 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar7 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar7 >> 0x77, 0) & 1) << 0xe | (uVar9 >> 7) << 0xf;\n        iVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n            }\n        }\n        if (uVar4 != 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 4619
    },
    "00402a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402a40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (((*0x5450e0 != '\\0') && (*0x5450ee != '\\0')) && (*0x5450ef != '\\0')) {\n        *0x5449ed = 1;\n        fcn.0042bee0(0x80);\n        return;\n    }\n    fcn.0042bee0(0x20);\n    *0x544c60 = *0x544c60 | 1;\n    *0x544c68 = *0x544c68 | 1;\n    *0x544c70 = *0x544c70 | 1;\n    *0x544c78 = *0x544c78 | 1;\n    return;\n}\n",
        "token_count": 224
    },
    "00402b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402b60(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t *piVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x65) != '\\0') {\n                if ((*(in_RAX + 0x20) & 0x7ffffffffffff) == 0x200) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x19) = 1;\n                    *(in_RAX + 0x62) = *(*0x20 + -0x19);\n                    uVar1 = *(in_RAX + 0x18);\n                    iVar2 = *(in_RAX + 0x20);\n                    LOCK();\n                    *0x545420 = *0x545420 + iVar2 * -0x2000;\n                    *(*0x20 + -0x40) = 0x402bd7;\n                    fcn.00412a40(uVar1, iVar2 * 0x2000);\n                    *(*0x20 + -0x40) = 0x402bf3;\n                    fcn.00429a40();\n                    iVar2 = *0x545418;\n                    LOCK();\n                    *0x545418 = *0x545418 + *(*(*0x20 + 8) + 0x20) * 0x2000;\n                    *(*0x20 + -0x40) = 0x402c18;\n                    piVar4 = fcn.00429b00(*(*0x20 + 8), iVar2);\n                    iVar2 = *(*0x20 + 8);\n                    LOCK();\n                    *piVar4 = *piVar4 + *(iVar2 + 0x20) * -0x2000;\n                    LOCK();\n                    piVar4[2] = piVar4[2] + *(iVar2 + 0x20) * -0x2000;\n                    LOCK();\n                    piVar4[0x4e] = piVar4[0x4e] + 1;\n                    LOCK();\n                    piVar4 = piVar4 + 0x4d;\n                    iVar3 = *piVar4;\n                    *piVar4 = *piVar4 + *(iVar2 + 0x20) * 0x2000;\n                    *(*0x20 + -0x40) = 0x402c69;\n                    fcn.00429be0(iVar2, iVar3);\n                    *(*0x20 + -0x40) = 0x402c87;\n                    fcn.0041b520(0);\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x402d20;\n                    *(*0x20 + -0x10) = *(*0x20 + 8);\n                    *(*0x20 + -0x38) = *0x20 + -0x18;\n                    *(*0x20 + -0x40) = 0x402cb1;\n                    fcn.004567a0();\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x402cde;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x40) = 0x402cef;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x402cfa;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1004
    },
    "00402e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402e60(void)\n\n{\n    ulong *in_RAX;\n    ulong unaff_RBX;\n    \n    if (*0x544c10 != '\\0') {\n        fcn.00402e00();\n    }\n    *in_RAX = unaff_RBX;\n    return;\n}\n",
        "token_count": 66
    },
    "00403740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403740(void)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_R14;\n    \n    cVar2 = fcn.00403660();\n    if (cVar2 == '\\0') {\n        return;\n    }\n    cVar2 = fcn.00403660();\n    if (cVar2 != '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30);\n    if ((*piVar1 != unaff_R14) && (piVar1[10] != unaff_R14)) {\n        puVar3 = *0x544b30;\n        if (*(piVar1 + 0x18) != 0) {\n            return;\n        }\n        while( true ) {\n            if (puVar3 == NULL) {\n                fcn.004567a0();\n                return;\n            }\n            if ((puVar3 <= in_RAX) && (in_RAX < puVar3 + 0x8000)) break;\n            puVar3 = *puVar3;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 263
    },
    "00403900": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403900(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    ulong unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403660();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403660();\n        if (cVar1 != '\\0') {\n            return;\n        }\n        fcn.00403a60(unaff_RDI);\n        return;\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "004039a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004039a0(ulong arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RDI;\n    \n    if (*(in_RAX + 8) == 0) {\n        return;\n    }\n    cVar1 = fcn.00403660();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00403660();\n        if (cVar1 == '\\0') {\n            for (iVar2 = 0; iVar2 < unaff_RDI; iVar2 = iVar2 + 1) {\n                fcn.00403a60(0);\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00403a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403a60(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    \n    if (*(in_RAX + 8) <= arg1) {\n        return;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) != 0) {\n        if (*0x4f1618 == NULL) {\n            iVar5 = 0;\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = **0x4f1618;\n            iVar5 = (*0x4f1618)[1];\n        }\n        iVar8 = 0;\n        while( true ) {\n            if (iVar5 <= iVar8) {\n                uVar7 = unaff_RBX + 0x800000000000 >> 0x2a;\n                if (uVar7 < 0x40) {\n                    uVar7 = *(uVar7 * 8 + 0x516e30);\n                    uVar1 = *(*(*(uVar7 + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                               (unaff_RBX >> 0xd & 0x1ff) * 8) + 99);\n                    if (uVar1 == 2) {\n                        fcn.004567a0();\n                        return;\n                    }\n                    fcn.0040fb20();\n                    do {\n                        fcn.0040fc40(arg1, unaff_RBX);\n                        if ((uVar7 & 0xffffffffffffff00 | uVar1) == 0) {\n                            return;\n                        }\n                        cVar4 = fcn.00403660();\n                    } while (cVar4 == '\\0');\n                    fcn.00430040();\n                }\n                fcn.00458f40(0x40);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar2 = *(iVar6 + iVar8 * 8);\n            if ((*(iVar2 + 0xd0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xd8))) break;\n            if ((*(iVar2 + 0xe0) <= unaff_RBX) && (unaff_RBX < *(iVar2 + 0xe8))) {\n                fcn.00403ce0(arg1 + (unaff_RBX - *(iVar2 + 0xe0)));\n                return;\n            }\n            iVar8 = iVar8 + 1;\n        }\n        fcn.00403ce0(arg1 + (unaff_RBX - *(iVar2 + 0xd0)));\n        return;\n    }\n    fcn.00403ce0(arg1);\n    return;\n}\n",
        "token_count": 667
    },
    "00403fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00403fe0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint64_t *puVar1;\n    ulong *noname_0;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t arg2;\n    ulong uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar1 = *(in_RAX + 0x30);\n            uVar3 = *puVar1;\n            if (uVar3 < 0x10000) {\n                if (*(puVar1 + 0x15) < 9) {\n                    *(*0x20 + -0x18) = puVar1;\n                    auVar2 = ZEXT816(unaff_RBX) * ZEXT816(uVar3);\n                    uVar3 = SUB168(auVar2, 0);\n                    if (((SUB168(auVar2 >> 0x40, 0) == 0) && (uVar4 = 0xffffffffffa0,  uVar3 < 0xffffffffffa1)) &&\n                       (-1 < unaff_RBX)) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar3 == 0) {\n                            *(*0x20 + -0x40) = 0x404106;\n                            arg2 = fcn.0040b060(1);\n                            if (*0x544c10 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x10;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404125;\n                                arg2 = fcn.00458b80(arg2 + 0x10, uVar4, param_3, param_4);\n                            }\n                        }\n                        else if (*(*(*0x20 + -0x18) + 8) == 0) {\n                            uVar4 = 1;\n                            *(*0x20 + -0x40) = 0x404073;\n                            arg2 = fcn.0040b060();\n                            if (*0x544c10 == 0) {\n                                *(arg2 + 0x10) = arg2 + 0x60;\n                            }\n                            else {\n                                *(*0x20 + -0x40) = 0x404094;\n                                arg2 = fcn.00458ba0(uVar4, arg2 + 0x60, param_3, param_4);\n                            }\n                        }\n                        else {\n                            *(*0x20 + -0x20) = uVar3;\n                            *(*0x20 + -0x40) = 0x4040aa;\n                            uVar4 = fcn.0040ba20();\n                            *(*0x20 + -0x10) = uVar4;\n                            *(*0x20 + -0x40) = 0x4040c5;\n                            uVar4 = fcn.0040b060(1);\n                            if (*0x544c10 == 0) {\n                                arg2 = *(*0x20 + -0x10);\n                                *(arg2 + 0x10) = uVar4;\n                            }\n                            else {\n                                arg2 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x4040ed;\n                                fcn.00458a80(arg2 + 0x10, arg2, param_3, param_4);\n                            }\n                        }\n                        noname_0 = *(*0x20 + -0x18);\n                        uVar4 = *noname_0;\n                        *(arg2 + 0x18) = uVar4;\n                        if (*0x544c10 == 0) {\n                            *(arg2 + 0x20) = noname_0;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40414b;\n                            arg2 = fcn.00458b80(noname_0, uVar4, param_3, param_4);\n                        }\n                        *(arg2 + 8) = *(*0x20 + 0x10);\n                        return;\n                    }\n                    *(*0x20 + -0x40) = 0x404171;\n                    fcn.0042f8a0();\n                }\n                *(*0x20 + -0x40) = 0x404185;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x26;\n            *(*0x20 + -0x40) = 0x404196;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x4041a6;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1248
    },
    "00404200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00404200(uint64_t *param_1, uint64_t param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *noname_0;\n    int64_t *piVar3;\n    int64_t iVar4;\n    char cVar5;\n    uint64_t *arg1;\n    uint64_t uVar6;\n    ulong uVar7;\n    int64_t noname_1;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t iVar9;\n    int64_t *arg3;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            cVar5 = param_1;\n            if (in_RAX == NULL) {\n                if (cVar5 == '\\0') {\n                    return 0;\n                }\n                noname_0 = 0x4;\n                *(*0x20 + -0x88) = 0x4042fb;\n                fcn.00432b60();\n                *(*0x20 + -0x88) = 0x40430c;\n                fcn.00430040();\n                param_1 = noname_0;\ncode_r0x0040430f:\n                do {\n                    piVar3 = noname_0[7];\n                    if (piVar3 == NULL) {\n                        piVar3 = NULL;\n                        break;\n                    }\n                    arg1 = noname_0 + 7;\n                    uVar6 = piVar3[1];\n                    if (uVar6 == 0) {\n                        if (*0x544c10 == 0) {\n                            *(noname_0 + 7) =\n                                 CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                        }\n                        else {\n                            uVar7 = 0;\n                            *(*0x20 + -0x88) = 0x40438b;\n                            fcn.00458c00(param_1, piVar3, 0, param_4);\n                            *(*0x20 + -0x88) = 0x404394;\n                            noname_0 = fcn.00458c00(param_1, piVar3, uVar7, param_4);\n                        }\n                    }\n                    else if (*0x544c10 == 0) {\n                        *(uVar6 + 0x10) = 0;\n                        noname_0[7] = uVar6;\n                        piVar3[1] = 0;\n                    }\n                    else {\n                        iVar4 = uVar6 + 0x10;\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x40435c;\n                        fcn.00458ba0(arg1, 0, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x404365;\n                        fcn.00458c00(arg1, uVar7, uVar6, iVar4);\n                        *(*0x20 + -0x88) = 0x40436e;\n                        noname_0 = fcn.00458ba0(arg1, uVar7, uVar6, iVar4);\n                    }\n                    if (*(piVar3 + 0x34) == '\\0') {\n                        param_3 = 0;\n                    }\n                    else {\n                        iVar4 = *piVar3;\n                        LOCK();\n                        piVar1 = iVar4 + 0x178;\n                        bVar12 = *piVar1 == 0;\n                        if (bVar12) {\n                            *piVar1 = 1;\n                        }\n                        param_3 = (iVar4 & 0xffffff00 | bVar12) ^ 1;\n                    }\n                    param_4 = 1;\n                    param_1 = noname_0;\n                } while (param_3 != '\\0');\n                if (piVar3 != NULL) {\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = 0x404860;\n                    *(*0x20 + -0x10) = noname_0;\n                    *(*0x20 + -0x88) = 0x4047a5;\n                    fcn.004048a0(*(*0x20 + 0x10), piVar3, 0x404860);\n                    return 1;\n                }\n                if (*noname_0 <= noname_0[1] && noname_0[1] != *noname_0) {\n                    *(*0x20 + -0x88) = 0x404729;\n                    fcn.0040f2c0(*(*0x20 + 0x10));\n                    piVar3 = *(*0x20 + 8);\n                    iVar4 = piVar3[5];\n                    piVar3[5] = iVar4 + 1;\n                    if (piVar3[1] == iVar4 + 1) {\n                        piVar3[5] = 0;\n                    }\n                    *piVar3 = *piVar3 + 1;\n                    *(*0x20 + -0x88) = 0x40475d;\n                    fcn.00409a80();\n                    return 1;\n                }\n                if (*(*0x20 + 0x18) == 0) {\n                    *(*0x20 + -0x88) = 0x404410;\n                    fcn.00409a80();\n                    return 0;\n                }\n                *(*0x20 + -0x38) = unaff_R14;\n                *(*0x20 + -0x88) = 0x404426;\n                piVar3 = fcn.00432d60(noname_0, *(*0x20 + 0x18));\n                piVar3[5] = 0;\n                iVar4 = *(*0x20 + -0x50);\n                if (iVar4 != 0) {\n                    piVar3[5] = -1;\n                }\n                if (*0x544c10 == 0) {\n                    noname_1 = *(*0x20 + 0x10);\n                    piVar3[3] = noname_1;\n                    piVar3[8] = 0;\n                    iVar9 = *(*0x20 + -0x38);\n                    *piVar3 = iVar9;\n                }\n                else {\n                    noname_1 = *(*0x20 + 0x10);\n                    *(*0x20 + -0x88) = 0x404478;\n                    fcn.00458ba0(iVar4, noname_1, param_3, param_4);\n                    uVar7 = 0;\n                    *(*0x20 + -0x88) = 0x404485;\n                    fcn.00458c00(iVar4, noname_1, 0, param_4);\n                    iVar9 = *(*0x20 + -0x38);\n                    *(*0x20 + -0x88) = 0x404492;\n                    piVar3 = fcn.00458c20(iVar4, noname_1, uVar7);\n                }\n                *(piVar3 + 0x34) = 0;\n                arg3 = piVar3 + 10;\n                if (*0x544c10 == 0) {\n                    param_4 = *(*0x20 + 8);\n                    piVar3[10] = param_4;\n                }\n                else {\n                    param_4 = *(*0x20 + 8);\n                    *(*0x20 + -0x88) = 0x4044c7;\n                    piVar3 = fcn.00458c20(iVar4, noname_1, arg3);\n                }\n                iVar10 = iVar9 + 0x148;\n                iVar11 = iVar9 + 0x88;\n                if (*0x544c10 == 0) {\n                    *(iVar9 + 0x148) = piVar3;\n                    *(iVar9 + 0x88) = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404505;\n                    fcn.00458a80(iVar4, noname_1, arg3, param_4);\n                    *(*0x20 + -0x88) = 0x404513;\n                    piVar3 = fcn.00458c00(iVar4, noname_1, 0, param_4);\n                }\n                if (*0x544c10 == 0) {\n                    piVar3[1] = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404545;\n                    piVar3 = fcn.00458c00(iVar4, noname_1, 0, param_4);\n                }\n                *(*0x20 + -0x48) = piVar3;\n                *(*0x20 + -0x20) = arg3;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x30) = iVar11;\n                iVar10 = *(param_4 + 0x50);\n                if (iVar10 == 0) {\n                    if (*0x544c10 == 0) {\n                        piVar3[2] = 0;\n                        *(param_4 + 0x48) = piVar3;\n                        *(param_4 + 0x50) = piVar3;\n                    }\n                    else {\n                        uVar7 = 0;\n                        *(*0x20 + -0x88) = 0x4045e5;\n                        fcn.00458c00(iVar4, noname_1, 0, param_4);\n                        *(*0x20 + -0x88) = 0x4045ee;\n                        fcn.00458a80(iVar4, noname_1, uVar7, param_4);\n                        *(*0x20 + -0x88) = 0x4045f6;\n                        fcn.00458a80(iVar4, noname_1, uVar7, param_4);\n                    }\n                }\n                else if (*0x544c10 == 0) {\n                    piVar3[2] = iVar10;\n                    *(iVar10 + 8) = piVar3;\n                    *(param_4 + 0x50) = piVar3;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404598;\n                    fcn.00458c20(iVar4, noname_1, arg3);\n                    *(*0x20 + -0x88) = 0x4045a5;\n                    fcn.00458a80(iVar4, noname_1, arg3, iVar10);\n                    *(*0x20 + -0x88) = 0x4045ad;\n                    fcn.00458a80(iVar4, noname_1, arg3, iVar10);\n                }\n                uVar2 = *(iVar9 + 0xb9);\n                *(iVar9 + 0xb9) = 1;\n                param_3 = uVar2;\n                param_1 = 0xf;\n                unaff_RDI = 0x16;\n                *(*0x20 + -0x88) = 0x40462e;\n                fcn.00432b60();\n                iVar4 = *(*0x20 + -0x48);\n                param_2 = *(*0x20 + -0x38);\n                if (*(param_2 + 0x148) == iVar4) {\n                    if (*0x544c10 == 0) {\n                        *(param_2 + 0x148) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x28);\n                        *(*0x20 + -0x88) = 0x40466f;\n                        iVar4 = fcn.00458b80(0, param_2, param_3, param_4);\n                    }\n                    *(param_2 + 0xb8) = 0;\n                    uVar6 = *(iVar4 + 0x35);\n                    if (*0x544c10 == 0) {\n                        *(param_2 + 0x88) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x30);\n                        *(*0x20 + -0x88) = 0x40469c;\n                        iVar4 = fcn.00458ba0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x51) = uVar6;\n                    param_2 = *(iVar4 + 0x28);\n                    if (0 < param_2) {\n                        param_2 = param_2 - *(*0x20 + -0x50);\n                        *(*0x20 + -0x88) = 0x4046be;\n                        fcn.00427e60();\n                        iVar4 = *(*0x20 + -0x48);\n                        uVar6 = *(*0x20 + -0x51);\n                    }\n                    if (*0x544c10 == 0) {\n                        *(iVar4 + 0x50) = 0;\n                    }\n                    else {\n                        unaff_RDI = *(*0x20 + -0x20);\n                        param_2 = 0;\n                        *(*0x20 + -0x88) = 0x4046e7;\n                        fcn.00458ba0(uVar6, 0, param_3, param_4);\n                    }\n                    *(*0x20 + -0x88) = 0x4046ec;\n                    fcn.00433060();\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return 1;\n                    }\n                    param_1 = *(*0x20 + 8);\n                    if (*(param_1 + 0x1c) == 0) {\n                        *(*0x20 + -0x88) = 0x4047d3;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x88) = 0x4047e6;\n                    fcn.0042f8a0();\n                }\n                *(*0x20 + -0x88) = 0x4047f7;\n                fcn.00430040();\n            }\n            else {\n                if ((cVar5 == '\\0') && (*(in_RAX + 0x1c) == 0)) {\n                    uVar6 = in_RAX[1];\n                    if (uVar6 == 0) {\n                        param_2 = in_RAX[7] == 0;\n                    }\n                    else {\n                        param_2 = uVar6 & 0xffffffffffffff00 | *in_RAX == uVar6;\n                    }\n                    if (param_2 != '\\0') {\n                        return 0;\n                    }\n                }\n                *(*0x20 + 0x18) = cVar5;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if (*0x544a90 == 0) {\n                    param_2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x404287;\n                    fcn.00458920(param_1, param_2);\n                    in_XMM15_Da = 0;\n                    in_XMM15_Db = 0;\n                    in_XMM15_Dc = 0;\n                    in_XMM15_Dd = 0;\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    param_2 = *(*0x20 + -0x80);\n                    in_RAX = *(*0x20 + 8);\n                }\n                *(*0x20 + -0x50) = param_2;\n                param_1 = in_RAX + 0xb;\n                *(*0x20 + -0x40) = param_1;\n                *(*0x20 + -0x88) = 0x4042bf;\n                fcn.00409860();\n                noname_0 = *(*0x20 + 8);\n                if (*(noname_0 + 0x1c) == 0) goto code_r0x0040430f;\n            }\n            *(*0x20 + -0x88) = 0x404805;\n            fcn.00409a80();\n            unaff_RBX = 0x48f7a0;\n            *(*0x20 + -0x88) = 0x404818;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x404831;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 4047
    },
    "004048a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004048a0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *unaff_RBX;\n    code **unaff_RDI;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar2 = unaff_RBX;\n    if (unaff_RBX[3] != 0) {\n        fcn.004049e0(arg1);\n        if (*0x544c10 == 0) {\n            unaff_RBX[3] = 0;\n        }\n        else {\n            fcn.00458bc0(unaff_RBX, noname_1, arg3, in_R9);\n        }\n    }\n    iVar1 = *piVar2;\n    (**unaff_RDI)();\n    piVar2 = unaff_RBX;\n    if (*0x544c10 == 0) {\n        *(iVar1 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00458b80(unaff_RBX, unaff_RDI, arg3, in_R9);\n    }\n    *(piVar2 + 0x35) = 1;\n    if (piVar2[5] != 0) {\n        fcn.00458920(piVar2, unaff_RDI);\n        unaff_RBX[5] = iStack40;\n    }\n    fcn.00432ca0();\n    return;\n}\n",
        "token_count": 385
    },
    "00404ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404ae0(ulong param_1, int64_t *param_2, int64_t *param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t **arg1;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = in_RAX + 0x58;\n                *(*0x20 + -0x40) = 0x404b25;\n                fcn.00409860();\n                iVar4 = *(*0x20 + 8);\n                if (*(iVar4 + 0x1c) == 0) break;\n                *(*0x20 + -0x40) = 0x404ec9;\n                fcn.00409a80();\n                *(*0x20 + -0x40) = 0x404edc;\n                fcn.0042f8a0();\n            }\n            *(*0x20 + -0x40) = 0x404eef;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x404efa;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n    *(iVar4 + 0x1c) = 1;\n    *(*0x20 + -0x28) = 0;\ncode_r0x00404c32:\n    arg1 = *(iVar4 + 0x38);\n    if (arg1 != NULL) goto code_r0x00404c3f;\n    arg1 = NULL;\n    goto code_r0x00404b6c;\ncode_r0x00404c3f:\n    iVar6 = iVar4 + 0x38;\n    piVar5 = arg1[1];\n    if (piVar5 == NULL) {\n        if (*0x544c10 == 0) {\n            *(iVar4 + 0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404cb0;\n            fcn.00458be0(arg1, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x404cb9;\n            iVar4 = fcn.00458be0(arg1, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x544c10 == 0) {\n        piVar5[2] = 0;\n        *(iVar4 + 0x38) = piVar5;\n        arg1[1] = NULL;\n    }\n    else {\n        param_3 = piVar5 + 2;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x404c7d;\n        fcn.00458c20(arg1, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x404c85;\n        fcn.00458be0(arg1, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x404c8e;\n        iVar4 = fcn.00458c20(arg1, iVar6, param_3);\n    }\n    if (*(arg1 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        piVar2 = *arg1;\n        LOCK();\n        piVar5 = piVar2 + 0x2f;\n        bVar8 = *piVar5 == 0;\n        if (bVar8) {\n            *piVar5 = 1;\n        }\n        param_2 = (piVar2 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x00404b6c:\n        if (arg1 != NULL) {\n            *(*0x20 + -0x18) = arg1;\n            if (arg1[3] != NULL) {\n                *(*0x20 + -0x40) = 0x404b8e;\n                fcn.0040f560();\n                if (*0x544c10 == 0) {\n                    arg1 = *(*0x20 + -0x18);\n                    arg1[3] = NULL;\n                }\n                else {\n                    param_2 = NULL;\n                    *(*0x20 + -0x40) = 0x404bbc;\n                    arg1 = fcn.00458ba0(*(*0x20 + -0x18) + 0x18, 0, param_3, param_4);\n                }\n                iVar4 = *(*0x20 + 8);\n            }\n            if (arg1[5] != NULL) {\n                *(*0x20 + -0x40) = 0x404bd5;\n                fcn.00458920(arg1, param_2);\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                arg1 = *(*0x20 + -0x18);\n                arg1[5] = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + 8);\n            }\n            param_2 = *arg1;\n            if (*0x544c10 == 0) {\n                param_2[0x11] = arg1;\n            }\n            else {\n                param_3 = param_2 + 0x11;\n                *(*0x20 + -0x40) = 0x404c2a;\n                iVar4 = fcn.00458b80(arg1, param_2, param_3, param_4);\n            }\n            *(arg1 + 0x35) = 0;\n            param_2[0x14] = *(*0x20 + -0x28);\n            *(*0x20 + -0x28) = param_2;\n            goto code_r0x00404c32;\n        }\n        goto code_r0x00404dae;\n    }\n    goto code_r0x00404c32;\ncode_r0x00404dae:\n    piVar5 = *(iVar4 + 0x48);\n    if (piVar5 != NULL) goto code_r0x00404dbb;\n    piVar5 = NULL;\n    goto code_r0x00404d0e;\ncode_r0x00404dbb:\n    iVar6 = iVar4 + 0x48;\n    iVar3 = piVar5[1];\n    if (iVar3 == 0) {\n        if (*0x544c10 == 0) {\n            *(iVar4 + 0x48) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404e30;\n            fcn.00458bc0(piVar5, iVar6, param_3, param_4);\n            *(*0x20 + -0x40) = 0x404e39;\n            iVar4 = fcn.00458bc0(piVar5, iVar6, param_3, param_4);\n        }\n    }\n    else if (*0x544c10 == 0) {\n        *(iVar3 + 0x10) = 0;\n        *(iVar4 + 0x48) = iVar3;\n        piVar5[1] = 0;\n    }\n    else {\n        param_3 = iVar3 + 0x10;\n        param_4 = 0;\n        *(*0x20 + -0x40) = 0x404df9;\n        fcn.00458c20(piVar5, iVar6, param_3);\n        *(*0x20 + -0x40) = 0x404e05;\n        fcn.00458bc0(piVar5, iVar6, param_3, param_4);\n        *(*0x20 + -0x40) = 0x404e0e;\n        iVar4 = fcn.00458c20(piVar5, iVar6, param_3);\n    }\n    if (*(piVar5 + 0x34) == '\\0') {\n        param_2 = NULL;\n    }\n    else {\n        iVar6 = *piVar5;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar8 = *piVar1 == 0;\n        if (bVar8) {\n            *piVar1 = 1;\n        }\n        param_2 = (iVar6 & 0xffffff00 | bVar8) ^ 1;\n    }\n    if (param_2 == '\\0') {\ncode_r0x00404d0e:\n        if (piVar5 == NULL) {\n            *(*0x20 + -0x40) = 0x404e79;\n            fcn.00409a80();\n            while (iVar4 = *(*0x20 + -0x28),  iVar4 != 0) {\n                if (iVar4 != 0) {\n                    *(*0x20 + -0x28) = *(iVar4 + 0xa0);\n                }\n                *(iVar4 + 0xa0) = 0;\n                *(*0x20 + -0x40) = 0x404e90;\n                fcn.00432ca0();\n            }\n            return;\n        }\n        if (*0x544c10 == 0) {\n            piVar5[3] = 0;\n        }\n        else {\n            param_2 = piVar5 + 3;\n            *(*0x20 + -0x40) = 0x404d3d;\n            iVar4 = fcn.00458bc0(piVar5, param_2, param_3, param_4);\n        }\n        if (piVar5[5] != 0) {\n            *(*0x20 + -0x20) = piVar5;\n            *(*0x20 + -0x40) = 0x404d51;\n            fcn.00458920(piVar5, param_2);\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            piVar5 = *(*0x20 + -0x20);\n            piVar5[5] = *(*0x20 + -0x38);\n            iVar4 = *(*0x20 + 8);\n        }\n        param_2 = *piVar5;\n        if (*0x544c10 == 0) {\n            param_2[0x11] = piVar5;\n        }\n        else {\n            *(*0x20 + -0x40) = 0x404da6;\n            iVar4 = fcn.00458b80(piVar5, param_2, param_3, param_4);\n        }\n        *(piVar5 + 0x35) = 0;\n        param_2[0x14] = *(*0x20 + -0x28);\n        *(*0x20 + -0x28) = param_2;\n    }\n    goto code_r0x00404dae;\n}\n",
        "token_count": 2775
    },
    "00404f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00404f60(uint64_t param_1, int64_t *param_2, uint64_t param_3, int64_t param_4)\n\n{\n    int32_t *piVar1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    ulong uVar8;\n    int64_t unaff_RBX;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    int64_t *piStackX8;\n    int64_t iStackX16;\n    uint8_t uStackX24;\n    int64_t *piStack136;\n    int64_t *piStack88;\n    \n    while (uVar4 = param_1, \n          &stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        param_1 = param_1 & 0xff;\n        piStackX8 = in_RAX;\n        iStackX16 = unaff_RBX;\n        uStackX24 = uVar4;\n    }\n    if (in_RAX == NULL) {\n        if (uVar4 != 0) {\n            fcn.00432b60();\n            in_RAX = fcn.00430040();\n            goto code_r0x00405125;\n        }\n        return 0;\n    }\n    if (uVar4 == 0) {\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = param_2 & 0xffffffffffffff00 | *in_RAX == 0;\n        }\n    }\n    else {\n        uVar5 = 0;\n    }\n    if (uVar5 != '\\0') {\n        if (*(in_RAX + 0x1c) == 0) {\n            return 0;\n        }\n        if (in_RAX[1] == 0) {\n            uVar5 = in_RAX[9] & 0xffffffffffffff00U | in_RAX[9] == 0;\n        }\n        else {\n            uVar5 = *(in_RAX + 0x1c) & 0xffffff00 | *in_RAX == 0;\n        }\n        if (uVar5 != '\\0') {\n            if (unaff_RBX != 0) {\n                fcn.0040f560();\n            }\n            return 1;\n        }\n    }\n    if (*0x544a90 == 0) {\n        piStack136 = NULL;\n    }\n    else {\n        fcn.00458920(param_1, uVar5);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n    }\n    piVar2 = in_RAX + 0xb;\n    param_2 = piStack136;\n    fcn.00409860();\n    piStackX8 = in_RAX;\n    iStackX16 = unaff_RBX;\n    uStackX24 = uVar4;\n    piStack88 = piStack136;\n    if (*(in_RAX + 0x1c) != 0) {\n        if (*in_RAX != 0) goto code_r0x00405125;\n        fcn.00409a80();\n        if (unaff_RBX != 0) {\n            fcn.0040f560();\n        }\n        return 1;\n    }\ncode_r0x004054d8:\n    param_2 = in_RAX[9];\n    if (param_2 != NULL) goto code_r0x004054e9;\n    param_2 = NULL;\n    goto code_r0x004055b0;\ncode_r0x004054e9:\n    piVar3 = in_RAX + 9;\n    iVar6 = param_2[1];\n    if (iVar6 == 0) {\n        if (*0x544c10 == 0) {\n            *(in_RAX + 9) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar8 = 0;\n            fcn.00458c00(piVar2, param_2, 0, param_4);\n            in_RAX = fcn.00458c00(piVar2, param_2, uVar8, param_4);\n        }\n    }\n    else if (*0x544c10 == 0) {\n        *(iVar6 + 0x10) = 0;\n        in_RAX[9] = iVar6;\n        param_2[1] = 0;\n    }\n    else {\n        iVar9 = iVar6 + 0x10;\n        uVar8 = 0;\n        fcn.00458ba0(piVar3, 0, iVar6, iVar9);\n        fcn.00458c00(piVar3, uVar8, iVar6, iVar9);\n        in_RAX = fcn.00458ba0(piVar3, uVar8, iVar6, iVar9);\n    }\n    if (*(param_2 + 0x34) == '\\0') {\n        param_3 = 0;\n    }\n    else {\n        iVar6 = *param_2;\n        LOCK();\n        piVar1 = iVar6 + 0x178;\n        bVar10 = *piVar1 == 0;\n        if (bVar10) {\n            *piVar1 = 1;\n        }\n        param_3 = (iVar6 & 0xffffff00 | bVar10) ^ 1;\n    }\n    param_4 = 1;\n    piVar2 = in_RAX;\n    if (param_3 == '\\0') {\ncode_r0x004055b0:\n        if (param_2 != NULL) {\n            fcn.00405680(iStackX16);\n            return 1;\n        }\ncode_r0x00405125:\n        if (*in_RAX != 0) {\n            if (iStackX16 != 0) {\n                fcn.0040f2c0(in_RAX[6] * *(in_RAX + 3) + in_RAX[2]);\n                in_RAX = piStackX8;\n            }\n            fcn.0040f560(in_RAX[4]);\n            iVar6 = piStackX8[6];\n            piStackX8[6] = iVar6 + 1;\n            if (piStackX8[1] == iVar6 + 1) {\n                piStackX8[6] = 0;\n            }\n            *piStackX8 = *piStackX8 + -1;\n            fcn.00409a80();\n            return 1;\n        }\n        if (uStackX24 == 0) {\n            fcn.00409a80();\n            return 0;\n        }\n        piVar2 = fcn.00432d60(uStackX24, param_2);\n        piVar2[5] = 0;\n        if (piStack88 != NULL) {\n            piVar2[5] = -1;\n        }\n        piVar3 = piStack88;\n        if (*0x544c10 == 0) {\n            piVar2[3] = iStackX16;\n            piVar2[8] = 0;\n        }\n        else {\n            fcn.00458ba0(piStack88, iStackX16, param_3, param_4);\n            piVar2 = fcn.00458ba0(piVar3, 0, param_3, param_4);\n        }\n        iVar6 = unaff_R14 + 0x148;\n        if (*0x544c10 == 0) {\n            *(unaff_R14 + 0x148) = piVar2;\n            *piVar2 = unaff_R14;\n        }\n        else {\n            fcn.00458a80(piVar3, iVar6, param_3, param_4);\n            piVar2 = fcn.00458bc0(piVar3, iVar6, param_3, param_4);\n        }\n        *(piVar2 + 0x34) = 0;\n        param_4 = unaff_R14 + 0x88;\n        piVar7 = piStackX8;\n        if (*0x544c10 == 0) {\n            piVar2[10] = piStackX8;\n            *(unaff_R14 + 0x88) = 0;\n        }\n        else {\n            fcn.00458ba0(piVar3, piStackX8, piVar2 + 10, param_4);\n            piVar2 = fcn.00458c00(piVar3, piVar7, 0, param_4);\n        }\n        if (*0x544c10 == 0) {\n            piVar2[1] = 0;\n        }\n        else {\n            piVar2 = fcn.00458c00(piVar3, iVar6, 0, param_4);\n        }\n        iVar9 = piVar7[8];\n        if (iVar9 == 0) {\n            if (*0x544c10 == 0) {\n                piVar2[2] = 0;\n                piVar7[7] = piVar2;\n                piVar7[8] = piVar2;\n            }\n            else {\n                uVar8 = 0;\n                fcn.00458c00(piVar3, iVar6, 0, param_4);\n                fcn.00458a80(piVar3, iVar6, uVar8, param_4);\n                fcn.00458a80(piVar3, iVar6, uVar8, param_4);\n            }\n        }\n        else if (*0x544c10 == 0) {\n            piVar2[2] = iVar9;\n            *(iVar9 + 8) = piVar2;\n            piVar7[8] = piVar2;\n        }\n        else {\n            fcn.00458c00(piVar3, iVar6, iVar9, param_4);\n            fcn.00458a80(piVar3, iVar6, iVar9, param_4);\n            fcn.00458a80(piVar3, iVar6, iVar9, param_4);\n        }\n        uVar4 = *(unaff_R14 + 0xb9);\n        *(unaff_R14 + 0xb9) = 1;\n        param_3 = uVar4;\n        in_RAX = 0xe;\n        fcn.00432b60();\n        if (*(unaff_R14 + 0x148) == piVar2) {\n            iVar6 = unaff_R14;\n            if (*0x544c10 == 0) {\n                *(unaff_R14 + 0x148) = 0;\n                piVar3 = piVar2;\n            }\n            else {\n                piVar3 = fcn.00458b80(0, unaff_R14, param_3, param_4);\n            }\n            *(iVar6 + 0xb8) = 0;\n            if (0 < piVar3[5]) {\n                fcn.00427e60();\n                piVar3 = piVar2;\n                iVar6 = unaff_R14;\n            }\n            uVar5 = *(piVar3 + 0x35);\n            if (*0x544c10 == 0) {\n                *(iVar6 + 0x88) = 0;\n                piVar3[10] = 0;\n            }\n            else {\n                fcn.00458ba0(uVar5, 0, param_3, param_4);\n                fcn.00458ba0(uVar5, 0, param_3, param_4);\n            }\n            fcn.00433060();\n            return 1;\n        }\n        fcn.00430040();\n        piVar2 = in_RAX;\n    }\n    goto code_r0x004054d8;\n}\n",
        "token_count": 2779
    },
    "00405680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405680(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t *piVar1;\n    int64_t in_RDX;\n    int64_t *unaff_RBX;\n    int64_t iVar2;\n    code **unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t iStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 8) == 0) {\n        in_RAX = in_RDX;\n        if (arg1 != 0) {\n            fcn.00404a60(arg1);\n            in_RAX = in_RDX;\n        }\n    }\n    else {\n        in_R8 = *(in_RAX + 0x18);\n        if (arg1 != 0) {\n            fcn.0040f2c0(*(in_RAX + 0x30) * in_R8 + *(in_RAX + 0x10));\n        }\n        fcn.0040f2c0(unaff_RBX[3]);\n        iVar2 = *(in_RAX + 0x30) + 1;\n        *(in_RAX + 0x30) = iVar2;\n        if (*(in_RAX + 8) == iVar2) {\n            *(in_RAX + 0x30) = 0;\n        }\n        *(in_RAX + 0x28) = *(in_RAX + 0x30);\n    }\n    if (*0x544c10 == 0) {\n        unaff_RBX[3] = 0;\n    }\n    else {\n        in_R8 = 0;\n        fcn.00458c00(unaff_RDI, in_RAX, 0, in_R9);\n    }\n    iVar2 = *unaff_RBX;\n    (**unaff_RDI)();\n    piVar1 = unaff_RBX;\n    if (*0x544c10 == 0) {\n        *(iVar2 + 0x88) = unaff_RBX;\n    }\n    else {\n        fcn.00458b80(unaff_RBX, unaff_RDI, in_R8, in_R9);\n    }\n    *(piVar1 + 0x35) = 1;\n    if (piVar1[5] != 0) {\n        fcn.00458920(piVar1, unaff_RDI);\n        unaff_RBX[5] = iStack48;\n    }\n    fcn.00432ca0();\n    return;\n}\n",
        "token_count": 599
    },
    "004082a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004082a0(ulong noname_0, ulong arg2, int64_t arg3, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004082a0:\n    puVar4 = *0x20;\n    *0x4f1da8 = arg4;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x4f1db8 == '\\0') {\n            *(*0x20 + 8) = in_RAX;\n            *0x4f1db8 = '\\x01';\n            *(*0x20 + -0x10) = *0x4f1da8;\n            arg1 = 0;\n            iVar3 = *0x4f1da8;\n            *0x4f1da8 = arg4;\n            do {\n                if (iVar3 <= arg1) {\n                    *0x4f1da8 = in_XMM15;\n                    if (*0x544c10 == 0) {\n                        *0x4f1da0 = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x408385;\n                        fcn.00458a80(arg1, arg2, arg3, *0x4f1da8);\n                    }\n                    *0x4f1db8 = 0;\n                    return;\n                }\n                uVar5 = (*0x4f1da8 - arg1) - 1;\n                arg3 = *0x4f1da0;\n                if (*0x4f1da8 <= uVar5) goto code_r0x004083a7;\n                *(*0x20 + -0x18) = arg1;\n                uVar1 = *(*0x4f1da0 + 8 + uVar5 * 0x10);\n                *0x4f1da8 = uVar1;\n                if ((in_RAX == 0) || (uVar1 != 0)) {\n                    arg2 = 0x47cc28;\n                    *(*0x20 + -0x30) = 0x40833d;\n                    cVar2 = (**0x47cc28)();\n                    if (cVar2 != '\\0') goto code_r0x00408396;\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + -0x18);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                arg1 = arg1 + 1;\n            } while( true );\n        }\n        goto code_r0x004083b2;\n    }\n    goto code_r0x004083c6;\ncode_r0x00408396:\n    *(*0x20 + -0x30) = 0x4083a7;\n    fcn.00430040();\ncode_r0x004083a7:\n    *(*0x20 + -0x30) = 0x4083b2;\n    fcn.00458f20(*0x4f1da8);\ncode_r0x004083b2:\n    *(*0x20 + -0x30) = 0x4083c5;\n    in_RAX = fcn.00430040();\ncode_r0x004083c6:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x4083d0;\n    fcn.004568e0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    arg4 = *0x4f1da8;\n    goto code_r0x004082a0;\n}\n",
        "token_count": 944
    },
    "00408780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00408780(char param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    ulong noname_0;\n    uint32_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg2 = *(in_RAX + 0x38);\n            if (*(in_RAX + 0x40) != 0) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 8) = in_RAX;\n                if ((*(unaff_RBX + 0x14) & 1) == 0) {\n                    if (param_1 != '\\0') {\n                        return 0;\n                    }\n                    uVar1 = *arg2;\n                    *(*0x20 + -0x48) = 0x40899c;\n                    fcn.00450fa0();\n                    *(*0x20 + -0x48) = 0x4089a5;\n                    uVar4 = fcn.00451700();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = uVar1;\n                    *(*0x20 + -0x48) = 0x4089bb;\n                    iVar5 = fcn.0040ba20();\n                    if (*0x544c10 == 0) {\n                        *(iVar5 + 8) = *(*0x20 + 0x10);\n                        *(iVar5 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408a25;\n                        fcn.00458b80(*(*0x20 + 0x10), arg2, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x408a33;\n                        iVar5 = fcn.00458b80(*(*0x20 + 8), arg2, param_3, param_4);\n                    }\n                    *(iVar5 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x544c10 != 0) goto code_r0x00408a05;\n                    *(iVar5 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408a05;\n                        fcn.0042f8a0();\ncode_r0x00408a05:\n                        *(*0x20 + -0x48) = 0x408a13;\n                        fcn.00458b80(*(*0x20 + -0x18), arg2, param_3, param_4);\n                    } while( true );\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + -0x48) = 0x4087ed;\n                iVar5 = *0x4ef010;\n                iVar2 = fcn.00408a80(unaff_RBX);\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x48) = 0x408805;\n                    fcn.00409860();\n                    in_RAX = *(*0x20 + 8);\n                    *(*0x20 + -0x48) = 0x40881b;\n                    iVar2 = fcn.00408a80(*(*0x20 + 0x10));\n                    if (iVar2 == 0) {\n                        uVar4 = *(*0x20 + 8);\n                        in_RAX = 0;\n                        *(*0x20 + -0x48) = 0x408867;\n                        puVar3 = fcn.0040bd80(0x5474c0);\n                        if (*0x544c10 == 0) {\n                            *puVar3 = *(*0x20 + 8);\n                            iVar5 = *(*0x20 + 0x10);\n                            puVar3[1] = iVar5;\n                        }\n                        else {\n                            noname_0 = *(*0x20 + 8);\n                            *(*0x20 + -0x48) = 0x408892;\n                            iVar5 = fcn.00458b80(noname_0, uVar4, param_3, param_4);\n                            iVar5 = iVar5 + 8;\n                            in_RAX = *(*0x20 + 0x10);\n                            *(*0x20 + -0x48) = 0x4088a5;\n                            puVar3 = fcn.00458bc0(noname_0, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x10) = puVar3;\n                        *(puVar3 + 2) = 0;\n                        *(*0x20 + -0x48) = 0x4088b6;\n                        fcn.00408c80();\n                        *(*0x20 + -0x48) = 0x4088c5;\n                        fcn.00408ae0();\n                        *(*0x20 + -0x48) = 0x4088d3;\n                        fcn.00409a80();\n                        iVar2 = *(*0x20 + -0x10);\n                    }\n                    else {\n                        *(*0x20 + -0x20) = iVar2;\n                        *(*0x20 + -0x48) = 0x408838;\n                        fcn.00409a80();\n                        iVar2 = *(*0x20 + -0x20);\n                    }\n                }\n                if (*(iVar2 + 0x18) == 0) {\n                    if (*(*0x20 + 0x18) != '\\0') {\n                        return 0;\n                    }\n                    *(*0x20 + -0x48) = 0x408905;\n                    uVar4 = fcn.00408c80();\n                    *(*0x20 + -0x18) = uVar4;\n                    *(*0x20 + -0x28) = in_RAX;\n                    *(*0x20 + -0x48) = 0x40891b;\n                    iVar2 = fcn.0040ba20();\n                    if (*0x544c10 == 0) {\n                        *(iVar2 + 8) = *(*0x20 + 0x10);\n                        *(iVar2 + 0x10) = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0x48) = 0x408985;\n                        fcn.00458b80(*(*0x20 + 0x10), iVar5, param_3, param_4);\n                        *(*0x20 + -0x48) = 0x408993;\n                        iVar2 = fcn.00458b80(*(*0x20 + 8), iVar5, param_3, param_4);\n                    }\n                    *(iVar2 + 0x20) = *(*0x20 + -0x28);\n                    if (*0x544c10 != 0) goto code_r0x00408965;\n                    *(iVar2 + 0x18) = *(*0x20 + -0x18);\n                    do {\n                        *(*0x20 + -0x48) = 0x408965;\n                        fcn.0042f8a0();\ncode_r0x00408965:\n                        *(*0x20 + -0x48) = 0x408973;\n                        fcn.00458b80(*(*0x20 + -0x18), iVar5, param_3, param_4);\n                    } while( true );\n                }\n                return iVar2;\n            }\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x48) = 0x408a46;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = param_1;\n        *(puVar6 + -8) = 0x408a5a;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        param_1 = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2011
    },
    "00408ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408ae0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    ulong in_RAX;\n    int64_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xc0) == 0) {\n                uVar1 = **0x4ef010;\n                puVar2 = *0x4ef010;\n                if ((*0x4ef010)[1] < (uVar1 >> 2) * 3) goto code_r0x00408bca;\n                *(*0x20 + -0x30) = *0x4ef010;\n                *(*0x20 + -0x20) = in_RAX;\n                *(*0x20 + -0x50) = 0x408b4d;\n                piVar3 = fcn.0040b060(1, uVar1 + 2);\n                *(*0x20 + -0x28) = piVar3;\n                *piVar3 = **(*0x20 + -0x30) << 1;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x45ace0;\n                *(*0x20 + -0x10) = piVar3;\n                *(*0x20 + -0x50) = 0x408b85;\n                fcn.00409520();\n                if (*(*(*0x20 + -0x30) + 8) == (*(*0x20 + -0x28))[1]) {\n                    puVar2 = *(*0x20 + -0x28);\n                    if (*0x544c10 != '\\0') {\n                        *(*0x20 + -0x50) = 0x408baf;\n                        fcn.00402e00();\n                        puVar2 = *(*0x20 + -0x28);\n                    }\ncode_r0x00408bca:\n                    *0x4ef010 = puVar2;\n                    *(*0x20 + -0x50) = 0x408bd5;\n                    fcn.00408c20();\n                    return;\n                }\n                *(*0x20 + -0x50) = 0x408bf0;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x50) = 0x408c05;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x408c10;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 739
    },
    "00408c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00408c80(uint64_t param_1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint64_t uVar10;\n    uint64_t arg3;\n    uint64_t arg2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x28 && *0x20 + -0x28 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0xa8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar4 = in_RAX[1];\n            iVar7 = *in_RAX;\n            if ((*(iVar4 + 0x14) & 1) == 0) {\n                arg3 = 0;\n            }\n            else {\n                param_1 = 0x48f980;\n                switch(*(iVar4 + 0x17) & 0x1f) {\n                case 0x11:\n                    arg3 = iVar4 + 0x48;\n                    break;\n                case 0x12:\n                    arg3 = iVar4 + 0x40;\n                    break;\n                case 0x13:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                case 0x14:\n                    arg3 = iVar4 + 0x50;\n                    break;\n                case 0x15:\n                    arg3 = iVar4 + 0x58;\n                    break;\n                case 0x16:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                case 0x17:\n                    arg3 = iVar4 + 0x38;\n                    break;\n                default:\n                    param_1 = 0x48f980;\n                    arg3 = iVar4 + 0x30;\n                    break;\n                case 0x19:\n                    arg3 = iVar4 + 0x50;\n                }\n            }\n            uVar8 = *(iVar7 + 0x40);\n            arg2 = *(arg3 + 4);\n            uVar1 = *(arg3 + 8);\n            if (arg2 < 0x10001) {\n                if (uVar8 < 0x10001) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = iVar7;\n                    *(*0x20 + -0x40) = iVar4;\n                    *(*0x20 + -0x48) = arg3;\n                    *(*0x20 + -0x50) = uVar1 + arg3;\n                    *(*0x20 + -0x90) = uVar8;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar6 = 0;\n                    uVar3 = 0;\n                    iVar4 = 0;\ncode_r0x00408da0:\n                    if (uVar8 <= uVar6) {\n                        in_RAX[3] = iVar4;\n                        return 0;\n                    }\n                    param_1 = *(iVar7 + 0x40);\n                    if (uVar6 < param_1) {\n                        *(*0x20 + -0x10) = *(iVar7 + 0x38);\n                        *(*0x20 + -0x88) = uVar6;\n                        *(*0x20 + -0x80) = uVar3;\n                        *(*0x20 + -0x20) = iVar4;\n                        *(*0x20 + -0xb0) = 0x408de5;\n                        uVar3 = fcn.00451240();\n                        *(*0x20 + -0x58) = uVar3;\n                        uVar8 = *(*(*0x20 + -0x10) + *(*0x20 + -0x88) * 8);\n                        *(*0x20 + -0xb0) = 0x408e05;\n                        uVar3 = fcn.00450fa0();\n                        *(*0x20 + -0x18) = uVar3;\n                        *(*0x20 + -0xb0) = 0x408e12;\n                        uVar3 = fcn.00451700();\n                        *(*0x20 + -0x28) = uVar3;\n                        *(*0x20 + -0x70) = uVar8;\n                        *(*0x20 + -0xb0) = 0x408e2c;\n                        uVar3 = fcn.00451920();\n                        if (uVar8 == 0) {\n                            *(*0x20 + -0xb0) = 0x408e3f;\n                            uVar3 = fcn.00451700();\n                        }\n                        *(*0x20 + -0x38) = uVar3;\n                        *(*0x20 + -0x78) = uVar8;\n                        uVar8 = *(*0x20 + -0x40);\n                        uVar6 = *(*0x20 + -0x60);\n                        uVar10 = *(*0x20 + -0x80);\n                        do {\n                            if (uVar6 <= uVar10) {\n                                *(*(*0x20 + 8) + 0x18) = 0;\n                                return *(*0x20 + -0x28);\n                            }\n                            if (uVar6 <= uVar10) {\n                                *(*0x20 + -0xb0) = 0x409049;\n                                fcn.00458f20(uVar6);\n                                break;\n                            }\n                            *(*0x20 + -0x80) = uVar10;\n                            *(*0x20 + -0x68) = uVar10 << 4;\n                            *(*0x20 + -0xb0) = 0x408f2a;\n                            uVar3 = fcn.00450fa0();\n                            *(*0x20 + -0x18) = uVar3;\n                            iVar4 = *(*0x20 + -0x50);\n                            uVar6 = *(iVar4 + 4 + *(*0x20 + -0x68));\n                            *(*0x20 + -0xb0) = 0x408f4a;\n                            iVar5 = fcn.00451240();\n                            iVar7 = *(*0x20 + -0x58);\n                            uVar8 = uVar6;\n                            if (iVar5 == iVar7) {\n                                *(*0x20 + -0xb0) = 0x408f65;\n                                fcn.00451700();\n                                if (*(*0x20 + -0x70) == uVar6) {\n                                    uVar8 = *(*0x20 + -0x28);\n                                    *(*0x20 + -0xb0) = 0x408f85;\n                                    cVar2 = fcn.004023a0(uVar6, iVar4);\n                                }\n                                else {\n                                    cVar2 = '\\0';\n                                }\n                                iVar7 = *(*0x20 + -0x58);\n                            }\n                            else {\n                                cVar2 = '\\0';\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0xb0) = 0x408fa5;\n                                fcn.00451920(iVar7);\n                                if (uVar8 == 0) {\n                                    uVar8 = **(*0x20 + -0x48);\n                                    *(*0x20 + -0xb0) = 0x408fbb;\n                                    fcn.00450fa0();\n                                    *(*0x20 + -0xb0) = 0x408fc5;\n                                    fcn.00451700();\n                                }\n                                if ((**(*0x20 + -0x18) & 1) == 0) {\n                                    if (*(*0x20 + -0x78) == uVar8) {\n                                        *(*0x20 + -0xb0) = 0x408ffd;\n                                        cVar2 = fcn.004023a0(uVar8, *(*0x20 + -0x78));\n                                    }\n                                    else {\n                                        cVar2 = '\\0';\n                                    }\n                                }\n                                else {\n                                    cVar2 = '\\x01';\n                                }\n                                if (cVar2 != '\\0') goto code_r0x00408e65;\n                            }\n                            uVar10 = *(*0x20 + -0x80) + 1;\n                            uVar8 = *(*0x20 + -0x40);\n                            uVar6 = *(*0x20 + -0x60);\n                            arg3 = uVar6;\n                        } while( true );\n                    }\n                    *(*0x20 + -0xb0) = 0x409054;\n                    fcn.00458f20(param_1);\n                }\n                *(*0x20 + -0xb0) = 0x40905e;\n                fcn.00459020(param_1, uVar8);\n            }\n            *(*0x20 + -0xb0) = 0x40906b;\n            in_RAX = fcn.00459020(param_1, arg2);\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + -8) = 0x409076;\n        fcn.004568e0();\n        in_RAX = *(puVar9 + 8);\n        *0x20 = puVar9;\n    } while( true );\ncode_r0x00408e65:\n    *(*0x20 + -0xb0) = 0x408e7d;\n    iVar4 = fcn.00451500();\n    iVar7 = *(*0x20 + -0x88);\n    if (iVar7 != 0) {\n        if (*0x544c10 == 0) {\n            *(*(*0x20 + 8) + 0x18 + iVar7 * 8) = iVar4;\n        }\n        else {\n            *(*0x20 + -0xb0) = 0x408eb9;\n            fcn.00458a80(iVar7, *(*0x20 + 8), arg3, arg2);\n        }\n        iVar4 = *(*0x20 + -0x20);\n    }\n    uVar6 = iVar7 + 1;\n    uVar8 = *(*0x20 + -0x90);\n    iVar7 = *(*0x20 + -0x30);\n    uVar3 = *(*0x20 + -0x80);\n    arg3 = *(*0x20 + -0x48);\n    arg2 = *(*0x20 + -0x60);\n    in_RAX = *(*0x20 + 8);\n    goto code_r0x00408da0;\n}\n",
        "token_count": 2401
    },
    "00409180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00409180(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    puVar1 = fcn.0040ba20();\n    if (*0x544c10 != 0) goto code_r0x004091ea;\n    *puVar1 = arg1;\n    puVar1[1] = in_RAX;\n    puVar1[2] = unaff_RBX;\n    do {\n        *(puVar1 + 3) = in_XMM15;\n        fcn.0042f8a0();\ncode_r0x004091ea:\n        iVar2 = fcn.00458b80(arg1, in_RDX, in_R8, in_R9);\n        in_RDX = in_RAX;\n        fcn.00458ba0(iVar2 + 8, in_RAX, in_R8, in_R9);\n        puVar1 = fcn.00458b80(unaff_RBX, in_RDX, in_R8, in_R9);\n    } while( true );\n}\n",
        "token_count": 328
    },
    "004093e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.004093e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong *puVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX == 0) {\n        puVar1 = 0x545ae0;\n    }\n    else {\n        puVar1 = fcn.0040b060(1);\n        puVar1[1] = unaff_RBX;\n        if (*0x544c10 == 0) {\n            *puVar1 = in_RAX;\n        }\n        else {\n            puVar1 = fcn.00458b80(in_RAX, unaff_RBX, param_3, param_4);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 236
    },
    "00409860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409860(void)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n            if (-1 < iVar1) {\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + 1;\n                LOCK();\n                bVar9 = *in_RAX == 0;\n                *in_RAX = *in_RAX ^ bVar9 * (*in_RAX ^ 1);\n                if (bVar9) {\n                    return !bVar9 * *in_RAX;\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x18) = unaff_R14;\n                *(*0x20 + -0x48) = 0x4098bb;\n                fcn.0042cae0();\n                iVar4 = 0;\n                if (1 < *0x544a30) {\n                    iVar4 = 4;\n                }\n                *(*0x20 + -0x30) = iVar4;\n                iVar5 = *(*0x20 + -0x18);\n                puVar6 = *(*0x20 + -0x10);\n                iVar3 = 0;\n                do {\n                    uVar8 = *puVar6;\n                    if ((uVar8 & 1) == 0) {\n                        *(*0x20 + -0x20) = uVar8;\n                        LOCK();\n                        bVar9 = uVar8 == *puVar6;\n                        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ (uVar8 | 1));\n                        if (bVar9) {\n                            return uVar8 ^ !bVar9 * (uVar8 ^ *puVar6);\n                        }\n                        uVar8 = *(*0x20 + -0x20);\n                        iVar3 = 0;\n                    }\n                    *(*0x20 + -0x28) = iVar3;\n                    if (iVar3 < iVar4) {\n                        *(*0x20 + -0x40) = 0x1e;\n                        *(*0x20 + -0x48) = 0x409974;\n                        fcn.00458660();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else if (iVar3 < iVar4 + 1) {\n                        *(*0x20 + -0x40) = 0x47cc98;\n                        *(*0x20 + -0x48) = 0x40994f;\n                        fcn.004567a0();\n                        iVar3 = *(*0x20 + -0x28);\n                    }\n                    else {\n                        do {\n                            *(*(iVar5 + 0x30) + 0x240) = uVar8 & 0xfffffffffffffffe;\n                            LOCK();\n                            uVar2 = *puVar6;\n                            *puVar6 = *puVar6 ^ (uVar8 == uVar2) * (*puVar6 ^ (*(iVar5 + 0x30) | 1));\n                            if (uVar8 == uVar2) {\n                                if ((uVar8 & 1) != 0) {\n                                    *(*0x20 + -0x48) = 0x4099ef;\n                                    fcn.0042c760();\n                                    iVar3 = 0;\n                                }\n                                break;\n                            }\n                            uVar8 = *puVar6;\n                        } while ((uVar8 & 1) != 0);\n                    }\n                    iVar3 = iVar3 + 1;\n                    iVar4 = *(*0x20 + -0x30);\n                    iVar5 = *(*0x20 + -0x18);\n                    puVar6 = *(*0x20 + -0x10);\n                } while( true );\n            }\n            *(*0x20 + -0x48) = 0x409a19;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x409a25;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1110
    },
    "00409a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409a80(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            do {\n                while (uVar5 = *in_RAX,  uVar5 == 1) {\n                    LOCK();\n                    bVar7 = *in_RAX == 1;\n                    *in_RAX = *in_RAX ^ bVar7 * *in_RAX;\n                    uVar5 = !bVar7 * (*in_RAX ^ 1) ^ 1;\n                    if (bVar7) goto code_r0x00409af6;\n                }\n                LOCK();\n                uVar3 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar3) * (*in_RAX ^ *((uVar5 & 0xfffffffffffffffe) + 0x240));\n            } while (uVar5 != uVar3);\n            *(*0x20 + -0x28) = 0x409af6;\n            uVar5 = fcn.0042ca60();\ncode_r0x00409af6:\n            iVar4 = *(*0x20 + -0x10);\n            piVar1 = *(iVar4 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n            if (-1 < iVar2) {\n                if ((iVar2 == 0) && (*(iVar4 + 0xb1) != '\\0')) {\n                    *(iVar4 + 0x10) = 0xfffffffffffffade;\n                }\n                return uVar5;\n            }\n            *(*0x20 + -0x28) = 0x409b45;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x409b50;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 644
    },
    "00409b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00409b60(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar3;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n                uVar1 = *in_RAX;\n                LOCK();\n                bVar3 = uVar1 == *in_RAX;\n                *in_RAX = *in_RAX ^ bVar3 * (*in_RAX ^ 1);\n            } while (!bVar3);\n            if (uVar1 == 0) {\n                return uVar1 ^ !bVar3 * (uVar1 ^ *in_RAX);\n            }\n            if (uVar1 != 1) {\n                *(*0x20 + -0x20) = 0x409bae;\n                uVar1 = fcn.0042ca60();\n                return uVar1;\n            }\n            *(*0x20 + -0x20) = 0x409bc9;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x409bd4;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 404
    },
    "00409be0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00409be0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x30) = 0x409c1b;\n                fcn.0042cae0();\n                iVar1 = *(*0x20 + -0x10);\n                puVar2 = *(*0x20 + 8);\n                LOCK();\n                bVar4 = *puVar2 == 0;\n                *puVar2 = *puVar2 ^ bVar4 * (*puVar2 ^ *(iVar1 + 0x30));\n                if (bVar4) {\n                    *(*(iVar1 + 0x30) + 0xe5) = 1;\n                    if (**0x4ef008 == 0) {\n                        *(*0x20 + -0x30) = 0x409c65;\n                        fcn.0042c760();\n                    }\n                    else {\n                        while (*puVar2 == 0) {\n                            *(*0x20 + -0x30) = 0x409cac;\n                            fcn.0042c760(iVar1);\n                            *(*0x20 + -0x28) = **0x4ef008;\n                            *(*0x20 + -0x20) = 0;\n                            *(*0x20 + -0x30) = 0x409cc8;\n                            fcn.004586a0();\n                            iVar1 = *(*0x20 + -0x10);\n                            puVar2 = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    if (*puVar2 == 1) {\n                        return !bVar4 * *puVar2;\n                    }\n                    *(*0x20 + -0x30) = 0x409c88;\n                    fcn.00430040();\n                }\n                iVar1 = *(*(*0x20 + -0x10) + 0x30);\n                *(iVar1 + 0xe5) = 0;\n                return iVar1;\n            }\n            *(*0x20 + -0x30) = 0x409cff;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x409d0a;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 726
    },
    "00409d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00409d20(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int32_t iVar4;\n    uint64_t *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t *puStack24;\n    int64_t in_stack_fffffffffffffff0;\n    \n    LOCK();\n    uVar1 = *in_RAX;\n    *in_RAX = *in_RAX ^ (uVar1 == 0) * (*in_RAX ^ *(unaff_R14 + 0x30));\n    if (uVar1 == 0) {\n        if (unaff_RBX < 0) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n            if (**0x4ef008 == 0) {\n                fcn.0042c760();\n            }\n            else {\n                while (iVar4 = fcn.0042c760(),  iVar4 < 0) {\n                    fcn.004586a0();\n                }\n            }\n            goto code_r0x00409f45;\n        }\n        fcn.0045a8a0();\n        iStack32 = iStack56 + unaff_RBX;\n        puStack24 = in_RAX;\n    }\n    else {\n        if (*in_RAX == 1) {\n            return 1;\n        }\n        fcn.00430040();\n        unaff_R14 = in_stack_fffffffffffffff0;\n    }\n    do {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042c760();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        iVar2 = **0x4ef008;\n        if (iVar2 != 0) {\n            fcn.004586a0();\n            iStack56 = iVar2;\n        }\n        *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n        fcn.0045a8a0();\n    } while (0 < iStack32 - iStack56);\n    while( true ) {\n        uVar1 = *puStack24;\n        if (uVar1 != *(unaff_R14 + 0x30)) break;\n        LOCK();\n        uVar3 = *puStack24;\n        *puStack24 = *puStack24 ^ (uVar1 == uVar3) * *puStack24;\n        if (uVar1 == uVar3) {\n            return 0;\n        }\n    }\n    if (uVar1 == 1) {\n        *(*(unaff_R14 + 0x30) + 0xe5) = 1;\n        iVar4 = fcn.0042c760();\n        if (-1 < iVar4) {\n            *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n            return 1;\n        }\n        fcn.00430040();\n    }\n    fcn.00430040();\ncode_r0x00409f45:\n    *(*(unaff_R14 + 0x30) + 0xe5) = 0;\n    return 1;\n}\n",
        "token_count": 758
    },
    "0040b060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040b060(uchar param_1)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint64_t *puVar6;\n    char cVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uchar (*pauVar10) [16];\n    uchar uVar11;\n    uint64_t uVar12;\n    ulong unaff_RBX;\n    uint64_t uVar13;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    char cVar15;\n    uint32_t unaff_ESI;\n    uint32_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    int64_t iVar19;\n    uint64_t uVar20;\n    uint64_t uVar21;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544a24 != 2) {\n                if (in_RAX == 0) {\n                    return 0x544bd8;\n                }\n                *(*0x20 + 0x18) = param_1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x544ea4 != '\\0') {\n                    if (*0x544eb0 != 0) {\n                        *(*0x20 + -0x68) = 0x40b0fc;\n                        iVar8 = fcn.0040bd80(0x5474c0);\n                        return iVar8;\n                    }\n                    if ((*0x544c80 != '\\0') && (*(unaff_R14 + 0x98) == *0x544c88)) {\n                        *0x544c90 = *0x544c90 + 1;\n                    }\n                }\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x40b130;\n                uVar9 = fcn.0040b8c0();\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                uVar12 = *(unaff_R14 + 0x30);\n                if (*(uVar12 + 0xc0) == 0) {\n                    if (*(uVar12 + 0x50) != unaff_R14) {\n                        *(uVar12 + 0xc0) = 1;\n                        iVar8 = *0x544b00;\n                        if (*(uVar12 + 0xa0) != 0) {\n                            iVar8 = *(*(uVar12 + 0xa0) + 0x40);\n                        }\n                        if (iVar8 != 0) {\n                            if (*(*0x20 + 0x10) == 0) {\n                                unaff_ESI = 1;\n                            }\n                            else {\n                                unaff_ESI = unaff_ESI & 0xffffff00 | *(*(*0x20 + 0x10) + 8) == 0;\n                            }\n                            *(*0x20 + -0x10) = uVar9;\n                            *(*0x20 + -0x20) = uVar12;\n                            *(*0x20 + -0x30) = iVar8;\n                            *(*0x20 + -0x3a) = unaff_ESI;\n                            uVar13 = *(*0x20 + 8);\n                            if (uVar13 < 0x8001) {\n                                if ((unaff_ESI != '\\0') && (uVar13 < 0x10)) {\n                                    uVar17 = *(iVar8 + 0x18);\n                                    if ((uVar13 & 7) == 0) {\n                                        uVar17 = uVar17 + 7 & 0xfffffffffffffff8;\n                                    }\n                                    else if ((uVar13 & 3) == 0) {\n                                        uVar17 = uVar17 + 3 & 0xfffffffffffffffc;\n                                    }\n                                    else if ((uVar13 & 1) == 0) {\n                                        uVar17 = uVar17 + 1 & 0xfffffffffffffffe;\n                                    }\n                                    if ((uVar13 + uVar17 < 0x11) && (iVar19 = *(iVar8 + 0x10),  iVar19 != 0)) {\n                                        *(iVar8 + 0x18) = uVar13 + uVar17;\n                                        *(iVar8 + 0x20) = *(iVar8 + 0x20) + 1;\n                                        *(uVar12 + 0xc0) = 0;\n                                        iVar5 = *(uVar12 + 0xd8);\n                                        *(uVar12 + 0xd8) = iVar5 + -1;\n                                        if ((iVar5 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                        }\n                                        return iVar19 + uVar17;\n                                    }\n                                    uVar18 = *(iVar8 + 0x50);\n                                    uVar17 = *(uVar18 + 0x40);\n                                    iVar19 = 0;\n                                    if (uVar17 != 0) {\n                                        for (; (uVar17 >> iVar19 & 1) == 0; iVar19 = iVar19 + 1) {\n                                        }\n                                    }\n                                    if (uVar17 == 0) {\n                                        iVar19 = 0x40;\n                                    }\n                                    if (iVar19 < 0x40) {\n                                        uVar3 = *(uVar18 + 0x30) + iVar19;\n                                        if (*(uVar18 + 0x38) <= uVar3) goto code_r0x0040b306;\n                                        uVar20 = *(uVar18 + 0x30) + 1 + iVar19;\n                                        if (((uVar20 & 0x3f) == 0) && (*(uVar18 + 0x38) != uVar20)) {\n                                            pauVar10 = NULL;\n                                        }\n                                        else {\n                                            uVar12 = iVar19 + 1;\n                                            *(uVar18 + 0x40) = uVar17 >> (uVar12 & 0x3f) & -(uVar12 < 0x40);\n                                            *(uVar18 + 0x30) = uVar20;\n                                            *(uVar18 + 0x60) = *(uVar18 + 0x60) + 1;\n                                            pauVar10 = *(uVar18 + 0x68) * uVar3 + *(uVar18 + 0x18);\n                                        }\n                                    }\n                                    else {\ncode_r0x0040b306:\n                                        pauVar10 = NULL;\n                                    }\n                                    uVar11 = uVar12;\n                                    if (pauVar10 == NULL) {\n                                        *(*0x20 + -0x68) = 0x40b325;\n                                        pauVar10 = fcn.0040ae40();\n                                        iVar8 = *(*0x20 + -0x30);\n                                        unaff_ESI = *(*0x20 + -0x3a);\n                                        uVar18 = 5;\n                                        uVar13 = *(*0x20 + 8);\n                                    }\n                                    else {\n                                        uVar11 = 0;\n                                    }\n                                    cVar15 = unaff_ESI;\n                                    *pauVar10 = CONCAT412(in_XMM15_Dd, \n                                                          CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                                    if ((uVar13 <= *(iVar8 + 0x18) && *(iVar8 + 0x18) != uVar13) ||\n                                       (*(iVar8 + 0x10) == 0)) {\n                                        *(iVar8 + 0x10) = pauVar10;\n                                        *(iVar8 + 0x18) = uVar13;\n                                    }\n                                    uVar17 = 0x10;\ncode_r0x0040b545:\n                                    cVar7 = '\\0';\n                                    goto code_r0x0040b5f5;\n                                }\n                                if (0x3f8 < uVar13) {\n                                    uVar17 = uVar13 - 0x381 >> 7;\n                                    if (uVar17 < 0xf9) {\n                                        uVar4 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                                [uVar17];\n                                        goto code_r0x0040b3c6;\n                                    }\n                                    goto code_r0x0040b825;\n                                }\n                                uVar17 = uVar13 + 7 >> 3;\n                                if (uVar17 < 0x81) {\n                                    uVar4 = *(uVar17 + 0x4d9620);\ncode_r0x0040b3c6:\n                                    if (uVar4 < 0x44) {\n                                        uVar17 = *(uVar4 * 2 + 0x4d96c0);\n                                        uVar16 = uVar4 << 1 | unaff_ESI & 0xff;\n                                        uVar18 = uVar16;\n                                        if (uVar18 < 0x88) {\n                                            uVar18 = *(iVar8 + 0x28 + uVar18 * 8);\n                                            uVar3 = *(uVar18 + 0x40);\n                                            iVar19 = 0;\n                                            if (uVar3 != 0) {\n                                                for (; (uVar3 >> iVar19 & 1) == 0; iVar19 = iVar19 + 1) {\n                                                }\n                                            }\n                                            if (uVar3 == 0) {\n                                                iVar19 = 0x40;\n                                            }\n                                            if (iVar19 < 0x40) {\n                                                uVar20 = *(uVar18 + 0x30) + iVar19;\n                                                if (*(uVar18 + 0x38) <= uVar20) {\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                    goto code_r0x0040b48e;\n                                                }\n                                                uVar21 = *(uVar18 + 0x30) + 1 + iVar19;\n                                                if (((uVar21 & 0x3f) == 0) && (*(uVar18 + 0x38) != uVar21)) {\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                    pauVar10 = NULL;\n                                                }\n                                                else {\n                                                    *(uVar18 + 0x40) =\n                                                         uVar3 >> (iVar19 + 1U & 0x3f) & -(iVar19 + 1U < 0x40);\n                                                    *(uVar18 + 0x30) = uVar21;\n                                                    *(uVar18 + 0x60) = *(uVar18 + 0x60) + 1;\n                                                    pauVar10 = *(uVar18 + 0x68) * uVar20 + *(uVar18 + 0x18);\n                                                    uVar12 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x30);\n                                                }\n                                            }\n                                            else {\ncode_r0x0040b48e:\n                                                pauVar10 = NULL;\n                                            }\n                                            *(*0x20 + -0x28) = uVar17;\n                                            if (pauVar10 == NULL) {\n                                                uVar18 = uVar16;\n                                                *(*0x20 + -0x68) = 0x40b4ad;\n                                                pauVar10 = fcn.0040ae40(uVar12, iVar8);\n                                                iVar8 = *(*0x20 + -0x30);\n                                                unaff_ESI = *(*0x20 + -0x3a);\n                                                uVar17 = *(*0x20 + -0x28);\n                                                uVar11 = uVar12;\n                                                uVar12 = *(*0x20 + -0x20);\n                                                uVar13 = *(*0x20 + 8);\n                                            }\n                                            else {\n                                                uVar11 = 0;\n                                            }\n                                            cVar15 = unaff_ESI;\n                                            if ((*(*0x20 + 0x18) != '\\0') && (*(uVar18 + 100) != '\\0')) {\n                                                *(*0x20 + -0x18) = pauVar10;\n                                                *(*0x20 + -0x3b) = uVar11;\n                                                *(*0x20 + -0x38) = uVar18;\n                                                *(*0x20 + -0x68) = 0x40b506;\n                                                fcn.00459580(uVar12, iVar8);\n                                                uVar13 = *(*0x20 + 8);\n                                                cVar15 = *(*0x20 + -0x3a);\n                                                uVar11 = *(*0x20 + -0x3b);\n                                                uVar17 = *(*0x20 + -0x28);\n                                                uVar18 = *(*0x20 + -0x38);\n                                                pauVar10 = *(*0x20 + -0x18);\n                                            }\n                                            goto code_r0x0040b545;\n                                        }\n                                        goto code_r0x0040b808;\n                                    }\n                                    goto code_r0x0040b815;\n                                }\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x40b557;\n                                uVar18 = fcn.00411a40(unaff_ESI);\n                                *(uVar18 + 0x30) = 1;\n                                *(uVar18 + 0x60) = 1;\n                                uVar17 = *(uVar18 + 0x68);\n                                pauVar10 = *(uVar18 + 0x18);\n                                if (*(*0x20 + 0x18) == '\\0') {\n                                    cVar7 = '\\0';\n                                }\n                                else if (*(uVar18 + 100) == '\\0') {\n                                    cVar7 = '\\0';\n                                }\n                                else {\n                                    cVar7 = *(*0x20 + -0x3a);\n                                    if (cVar7 == '\\0') {\n                                        *(*0x20 + -0x38) = uVar18;\n                                        *(*0x20 + -0x28) = uVar17;\n                                        *(*0x20 + -0x18) = pauVar10;\n                                        *(*0x20 + -0x68) = 0x40b59e;\n                                        fcn.00459580();\n                                        uVar18 = *(*0x20 + -0x38);\n                                        pauVar10 = *(*0x20 + -0x18);\n                                        uVar17 = *(*0x20 + -0x28);\n                                        cVar7 = *(*0x20 + -0x3a);\n                                    }\n                                }\n                                uVar11 = 1;\n                                uVar13 = *(*0x20 + 8);\n                                cVar15 = *(*0x20 + -0x3a);\ncode_r0x0040b5f5:\n                                *(*0x20 + -0x18) = pauVar10;\n                                *(*0x20 + -0x28) = uVar17;\n                                *(*0x20 + -0x3b) = uVar11;\n                                *(*0x20 + -0x39) = cVar7;\n                                *(*0x20 + -0x38) = uVar18;\n                                if (cVar15 == '\\0') {\n                                    *(*0x20 + -0x68) = 0x40b625;\n                                    fcn.00410a40(uVar13);\n                                    puVar6 = *(*0x20 + 0x10);\n                                    if (*puVar6 < *(*0x20 + 8)) {\n                                        uVar12 = 0;\n                                        if (puVar6[1] != 0) {\n                                            uVar12 = (*(*0x20 + 8) - *puVar6) + puVar6[1];\n                                        }\n                                    }\n                                    else {\n                                        uVar12 = puVar6[1];\n                                    }\n                                    *(*(*0x20 + -0x30) + 8) = *(*(*0x20 + -0x30) + 8) + uVar12;\n                                }\n                                *(*0x20 + -0x68) = 0x40b668;\n                                fcn.00458680();\n                                in_XMM15_Da = 0;\n                                in_XMM15_Db = 0;\n                                in_XMM15_Dc = 0;\n                                in_XMM15_Dd = 0;\n                                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                                *(*(*0x20 + -0x38) + 0x98) = *(*(*0x20 + -0x38) + 0x30);\n                                if (*0x544a24 != 0) {\n                                    *(*0x20 + -0x68) = 0x40b6a5;\n                                    fcn.0041a400(*(*0x20 + -0x28));\n                                }\n                                if (*0x4d9288 < 1) {\n                                    uVar12 = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    if (*0x4d9288 == 1) {\n                                        uVar12 = *(*0x20 + -0x28);\n                                    }\n                                    else {\n                                        uVar13 = **(*0x20 + -0x30);\n                                        uVar12 = *(*0x20 + -0x28);\n                                        if (uVar12 < uVar13) {\n                                            **(*0x20 + -0x30) = uVar13 - uVar12;\n                                            goto code_r0x0040b6f1;\n                                        }\n                                    }\n                                    *(*0x20 + -0x68) = 0x40b6e5;\n                                    fcn.0040bb40(uVar12);\n                                    uVar12 = *(*0x20 + -0x28);\n                                }\ncode_r0x0040b6f1:\n                                iVar8 = *(*0x20 + -0x20);\n                                *(iVar8 + 0xc0) = 0;\n                                unaff_ESI = *(iVar8 + 0xd8);\n                                *(iVar8 + 0xd8) = unaff_ESI - 1;\n                                if ((unaff_ESI == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                if (*(*0x20 + -0x39) == '\\0') {\ncode_r0x0040b74f:\n                                    if (*0x544ea4 != '\\0') {\n                                        if (*0x544ea8 != 0) {\n                                            *(*0x20 + -0x68) = 0x40b774;\n                                            fcn.004285a0(*(*0x20 + 0x10));\n                                            uVar12 = *(*0x20 + -0x28);\n                                        }\n                                        if ((*0x544c80 != '\\0') && (*(unaff_R14 + 0x98) == *0x544c88)) {\n                                            *0x544c98 = *0x544c98 + uVar12;\n                                        }\n                                    }\n                                    if (*(*0x20 + -0x10) != 0) {\n                                        piVar2 = *(*0x20 + -0x10) + 0x180;\n                                        *piVar2 = *piVar2 - (uVar12 - *(*0x20 + 8));\n                                    }\n                                    if (*(*0x20 + -0x3b) != '\\0') {\n                                        *(*0x20 + -0x68) = 0x40b7c8;\n                                        cVar7 = fcn.004138a0(0);\n                                        if (cVar7 != '\\0') {\n                                            *(*0x20 + -0x68) = 0x40b7d7;\n                                            fcn.004139c0(0);\n                                        }\n                                    }\n                                    return *(*0x20 + -0x18);\n                                }\n                                if (*(*0x20 + -0x3a) != '\\0') {\n                                    *(*0x20 + -0x68) = 0x40b74a;\n                                    fcn.0040b960();\n                                    uVar12 = *(*0x20 + -0x28);\n                                    goto code_r0x0040b74f;\n                                }\n                                *(*0x20 + -0x68) = 0x40b808;\n                                fcn.00430040();\ncode_r0x0040b808:\n                                *(*0x20 + -0x68) = 0x40b815;\n                                fcn.00458f20(0x88);\ncode_r0x0040b815:\n                                *(*0x20 + -0x68) = 0x40b825;\n                                fcn.00458f20(0x44);\ncode_r0x0040b825:\n                                *(*0x20 + -0x68) = 0x40b832;\n                                fcn.00458f40(0xf9);\n                            }\n                            uVar12 = 0x81;\n                            *(*0x20 + -0x68) = 0x40b83f;\n                            fcn.00458f40(0x81);\n                        }\n                        *(*0x20 + -0x68) = 0x40b850;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x68) = 0x40b865;\n                    fcn.00430040();\n                }\n                param_1 = uVar12;\n                *(*0x20 + -0x68) = 0x40b876;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x32;\n            *(*0x20 + -0x68) = 0x40b887;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        puVar14[0x18] = param_1;\n        *(puVar14 + -8) = 0x40b89b;\n        fcn.004568e0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 5106
    },
    "0040b8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040b8c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x544a1c == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n        if (iVar1 == 0) {\n            iVar1 = unaff_R14;\n        }\n        iVar2 = *(iVar1 + 0x180) - in_RAX;\n        *(iVar1 + 0x180) = iVar2;\n        if (iVar2 < 0) {\n            fcn.00417ac0();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 225
    },
    "0040b960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040b960(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = unaff_RBX + in_RAX;\n    for (; unaff_RBX < uVar1; unaff_RBX = unaff_RBX + 0x40000) {\n        if (*(unaff_R14 + 0xb1) != '\\0') {\n            fcn.00456720();\n        }\n        uVar2 = uVar1 - unaff_RBX;\n        if (0x40000 < uVar2) {\n            uVar2 = 0x40000;\n        }\n        fcn.00459580(uVar2);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "0040ba80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ba80(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 1) {\n                uVar1 = *in_RAX;\n                *(*0x20 + -0x28) = 0x40baef;\n                fcn.0040b060(1, uVar1);\n                return;\n            }\n            if (((SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX) >> 0x40, 0) == 0) &&\n                (SUB168(ZEXT816(unaff_RBX) * ZEXT816(*in_RAX), 0) < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                *(*0x20 + -0x28) = 0x40bad2;\n                fcn.0040b060(1);\n                return;\n            }\n            unaff_RBX = 0x48f780;\n            *(*0x20 + -0x28) = 0x40bb0c;\n            in_RAX = fcn.0042f8a0(in_RAX);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40bb1c;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "0040bb40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bb40(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar3 = *0x544b00;\n            if (*(in_RAX + 0xa0) != 0) {\n                piVar3 = *(*(in_RAX + 0xa0) + 0x40);\n            }\n            if (piVar3 != NULL) {\n                if (*0x4d9288 == 1) {\n                    iVar2 = 0;\n                }\n                else {\n                    *(*0x20 + -0x20) = piVar3;\n                    *(*0x20 + -0x18) = arg1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x38) = 0x40bb9e;\n                    iVar1 = fcn.0040bc20();\n                    iVar2 = iVar1;\n                    piVar3 = *(*0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x18);\n                }\n                *piVar3 = iVar2;\n                *(*0x20 + -0x38) = 0x40bbc5;\n                fcn.00427b40(arg1);\n                return;\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x38) = 0x40bbe5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x40bbfa;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 598
    },
    "0040bea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040bea0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uint64_t in_RAX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t **ppuVar7;\n    uint64_t *puVar8;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX != 0) {\n                if (unaff_RBX == 0) {\n                    unaff_RBX = 8;\ncode_r0x0040bef3:\n                    if (0xffff < in_RAX) {\n                        *(*0x20 + -0x48) = 0x40bfcd;\n                        iVar5 = fcn.004127c0();\n                        return iVar5;\n                    }\n                    *(*0x20 + 0x18) = arg1;\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x30) = unaff_RBX;\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar5 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x20) = iVar5;\n                    if ((iVar5 == 0) || (*(iVar5 + 0xa0) == 0)) {\n                        *(*0x20 + -0x48) = 0x40bf4c;\n                        fcn.00409860();\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x20);\n                        unaff_RBX = *(*0x20 + -0x30);\n                        ppuVar7 = 0x544c28;\n                    }\n                    else {\n                        ppuVar7 = *(iVar5 + 0xa0) + 0x11f0;\n                    }\n                    *(*0x20 + -0x18) = ppuVar7;\n                    puVar8 = ppuVar7[1];\n                    *(*0x20 + -0x28) = -unaff_RBX;\n                    puVar8 = puVar8 + (unaff_RBX - 1) & -unaff_RBX;\n                    ppuVar7[1] = puVar8;\n                    if ((0x40000 < puVar8 + in_RAX) || (*ppuVar7 == NULL)) {\n                        *(*0x20 + -0x48) = 0x40bfa9;\n                        puVar8 = fcn.004127c0();\n                        ppuVar7 = *(*0x20 + -0x18);\n                        *ppuVar7 = puVar8;\n                        if (*ppuVar7 == NULL) {\n                            if (ppuVar7 == 0x544c28) goto code_r0x0040c0f1;\n                            do {\n                                *(*0x20 + -0x48) = 0x40c0ef;\n                                fcn.00430040();\ncode_r0x0040c0f1:\n                                *(*0x20 + -0x48) = 0x40c0fd;\n                                fcn.00409a80();\n                            } while( true );\n                        }\n                        do {\n                            uVar4 = *0x544b30;\n                            **ppuVar7 = *0x544b30;\n                            LOCK();\n                            bVar9 = uVar4 == *0x544b30;\n                            *0x544b30 = *0x544b30 ^ bVar9 * (*0x544b30 ^ *ppuVar7);\n                        } while (!bVar9);\n                        ppuVar7[1] = *(*0x20 + -0x30) + 7U & *(*0x20 + -0x28);\n                        in_RAX = *(*0x20 + 8);\n                        iVar5 = *(*0x20 + -0x20);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    puVar8 = *ppuVar7;\n                    puVar3 = ppuVar7[1];\n                    ppuVar7[1] = in_RAX + puVar3;\n                    iVar2 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar2 + -1;\n                    iVar5 = puVar8 + puVar3;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    *(*0x20 + -0x10) = iVar5;\n                    if (ppuVar7 == 0x544c28) {\n                        *(*0x20 + -0x48) = 0x40c037;\n                        fcn.00409a80();\n                        arg1 = *(*0x20 + 0x18);\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    if (arg1 != 0x5474c0) {\n                        *(*0x20 + -0x48) = 0x40c05d;\n                        fcn.00429a40();\n                        *(*0x20 + -0x48) = 0x40c071;\n                        fcn.00429a40();\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    return iVar5;\n                }\n                if ((unaff_RBX & unaff_RBX - 1) == 0) {\n                    if (unaff_RBX < 0x2001) goto code_r0x0040bef3;\n                    *(*0x20 + -0x48) = 0x40c110;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x48) = 0x40c125;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x48) = 0x40c136;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x40c14b;\n        fcn.0045b2e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1622
    },
    "0040c160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c160(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar2 = -arg1 & *in_RAX + arg1 + -1;\n    uVar3 = unaff_RBX + uVar2;\n    if (uVar3 <= in_RAX[2]) {\n        *in_RAX = uVar3;\n        uVar1 = in_RAX[1];\n        uVar3 = -*0x544b48 & (uVar3 - 2) + *0x544b48;\n        if (uVar1 < uVar3) {\n            if (*(in_RAX + 3) != '\\0') {\n                fcn.004129e0(unaff_RDI);\n                fcn.004128c0(uVar3 - uVar1);\n            }\n            in_RAX[1] = uVar3;\n        }\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 307
    },
    "0040c260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040c260(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t arg4;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    uint64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    uint32_t uVar8;\n    int64_t *in_R8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar5 = *(in_RAX + 0x28);\n    iVar3 = in_RAX;\n    iVar6 = arg1;\n    if ((iVar5 == 0) || (arg4 = *(iVar5 + 0x10),  arg4 == 0)) {\n        arg4 = fcn.0040b060(1);\n    }\n    else {\n        in_R8 = *(unaff_RBX + 0x52);\n        piVar7 = arg4 + -8 + in_R8;\n        if (*piVar7 == 0) {\n            if (*0x544c10 == 0) {\n                *(iVar5 + 0x10) = arg4 + in_R8;\n            }\n            else {\n                iVar3 = fcn.00458ba0(arg1, arg4 + in_R8, in_R8, arg4);\n            }\n        }\n        else {\n            if (*0x544c10 == 0) {\n                *piVar7 = 0;\n            }\n            else {\n                iVar3 = fcn.00458ba0(arg1, 0, in_R8, arg4);\n            }\n            if (*0x544c10 == 0) {\n                *(*(iVar3 + 0x28) + 0x10) = 0;\n            }\n            else {\n                iVar3 = fcn.00458ba0(iVar6, 0, in_R8, arg4);\n            }\n        }\n    }\n    if (*(iVar3 + 9) < 0x10) {\n        *(iVar3 + 10) = *(iVar3 + 10) + 1;\n    }\n    else {\n        uVar9 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar9) * ZEXT816(uVar9 ^ 0xe7037ed1a0b428db);\n        uVar1 = *(iVar3 + 9) - 0xf;\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar9;\n        uVar8 = (1 << (uVar1 & 0x1f) & -(uVar1 < 0x20)) - 1;\n        in_R8 = uVar8;\n        if ((uVar8 & (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0))) == 0) {\n            *(iVar3 + 10) = *(iVar3 + 10) + 1;\n        }\n    }\n    if (*(*(unaff_RBX + 0x40) + 8) == 0) {\n        if (*(iVar3 + 0x28) == 0) {\n            iVar5 = arg4;\n            uVar4 = fcn.0040ba20();\n            if (*0x544c10 == 0) {\n                *(in_RAX + 0x28) = uVar4;\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n            else {\n                iVar3 = in_RAX;\n                fcn.00458a80(in_RAX, in_RAX + 0x28, in_R8, iVar5);\n                iVar6 = arg1;\n            }\n        }\n        piVar7 = *(iVar3 + 0x28);\n        if (*piVar7 == 0) {\n            iVar5 = arg4;\n            uVar4 = fcn.0040ba20();\n            if (*0x544c10 == 0) {\n                **(in_RAX + 0x28) = uVar4;\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.00458a80(in_RAX, piVar7, in_R8, iVar5);\n                iVar3 = in_RAX;\n                iVar6 = arg1;\n            }\n        }\n        in_R8 = **(iVar3 + 0x28);\n        iVar5 = *in_R8;\n        uVar9 = in_R8[2];\n        arg2 = in_R8[1] + 1;\n        if (uVar9 < arg2) {\n            arg2_00 = arg2;\n            piVar7 = in_R8;\n            iVar3 = arg4;\n            iVar5 = fcn.00441fe0(uVar9);\n            in_R8[2] = uVar9;\n            if (*0x544c10 == 0) {\n                *in_R8 = iVar5;\n                iVar6 = arg1;\n            }\n            else {\n                iVar5 = fcn.00458a80(uVar9, arg2_00, piVar7, iVar3);\n                iVar6 = arg1;\n            }\n        }\n        in_R8[1] = arg2;\n        if (*0x544c10 == 0) {\n            *(iVar5 + -8 + arg2 * 8) = arg4;\n        }\n        else {\n            iVar6 = fcn.00458c20(iVar5 + arg2 * 8 + -8, arg2, in_R8);\n        }\n    }\n    if (*0x544c10 == 0) {\n        *(*(unaff_RBX + 0x52) + iVar6 + -8) = arg4;\n    }\n    else {\n        fcn.00458c20(*(unaff_RBX + 0x52), iVar6 + -8, in_R8);\n    }\n    return arg4;\n}\n",
        "token_count": 1401
    },
    "0040c5e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040c5e0(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    auVar1 = ZEXT816(**(in_RAX + 0x40)) * ZEXT816(unaff_RBX);\n    if ((SUB168(auVar1 >> 0x40, 0) != 0) || (0x1000000000000 < SUB168(auVar1, 0))) {\n        unaff_RBX = 0;\n    }\n    if (arg1 == 0) {\n        arg1 = fcn.0040ba20();\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    auVar1 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(arg1 + 0xc) = SUB164(auVar1 >> 0x40, 0) ^ SUB164(auVar1, 0);\n    uVar3 = 0;\n    while ((uVar2 = uVar3,  8 < unaff_RBX &&\n           (uVar4 = 1 << (uVar2 & 0x3f),  uVar7 = uVar4 >> 1,  in_R8 = uVar7 + (uVar4 & 0xfffffffffffffffe), \n           uVar7 + in_R8 * 4 < unaff_RBX))) {\n        uVar3 = uVar3 + 1;\n    }\n    *(arg1 + 9) = uVar2;\n    iVar6 = arg1;\n    if (uVar2 != 0) {\n        uVar4 = uVar3;\n        uVar5 = fcn.0040c7a0(0);\n        if (*0x544c10 == 0) {\n            *(arg1 + 0x10) = uVar5;\n        }\n        else {\n            fcn.00458a80(arg1 + 0x10, arg1, in_R8, in_R9);\n        }\n        if (uVar4 != 0) {\n            iVar6 = fcn.0040ba20();\n            if (*0x544c10 == 0) {\n                *(arg1 + 0x28) = iVar6;\n                *(iVar6 + 0x10) = uVar4;\n                iVar6 = arg1;\n            }\n            else {\n                fcn.00458a80(arg1 + 0x28, arg1, in_R8, in_R9);\n                fcn.00458b80(uVar4, arg1, in_R8, in_R9);\n                iVar6 = arg1;\n            }\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 774
    },
    "0040c7a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040c7a0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t arg2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t in_R8;\n    uint64_t in_R9;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = 1 << (unaff_BL & 0x3f);\n            uVar7 = uVar6;\n            if (unaff_BL < 4) goto code_r0x0040c8d2;\n            in_R9 = (1 << (unaff_BL - 4 & 0x3f)) + uVar6;\n            uVar1 = **(in_RAX + 0x40);\n            in_R8 = in_R9 * uVar1;\n            if (in_R8 < 0x8000) {\n                if (0x3f8 < in_R8) {\n                    uVar7 = in_R8 - 0x381 >> 7;\n                    if (uVar7 < 0xf9) {\n                        if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                            [uVar7] < 0x44) {\n                            uVar4 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                      [uVar7] * 2 + 0x4d96c0);\n                            goto code_r0x0040c8a0;\n                        }\n                        goto code_r0x0040c98c;\n                    }\n                    goto code_r0x0040c999;\n                }\n                uVar7 = in_R8 + 7 >> 3;\n                if (uVar7 < 0x81) {\n                    uVar7 = *(uVar7 + 0x4d9620);\n                    if (uVar7 < 0x44) {\n                        uVar4 = *(uVar7 * 2 + 0x4d96c0);\n                        goto code_r0x0040c8a0;\n                    }\n                    goto code_r0x0040c9a6;\n                }\n            }\n            else {\n                uVar4 = in_R8;\n                if (in_R8 < in_R8 + 0x2000 || in_R8 - (in_R8 + 0x2000) == 0) {\n                    uVar4 = in_R8 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x0040c8a0:\n                uVar7 = in_R9;\n                if (uVar4 == in_R8) goto code_r0x0040c8d2;\n                if (uVar1 != 0) {\n                    uVar7 = uVar4 / uVar1;\ncode_r0x0040c8d2:\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + -0x28) = uVar6;\n                    *(*0x20 + -0x20) = uVar7;\n                    if (arg1 == 0) {\n                        uVar2 = *(in_RAX + 0x40);\n                        *(*0x20 + -0x40) = 0x40c92e;\n                        iVar3 = fcn.0040ba80(uVar2, uVar7);\n                    }\n                    else {\n                        *(*0x20 + -0x18) = arg1;\n                        if (*(*(in_RAX + 0x40) + 8) == 0) {\n                            *(*0x20 + -0x40) = 0x40c915;\n                            fcn.00459580();\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40c908;\n                            fcn.0040f5c0();\n                        }\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    arg2 = *(*0x20 + -0x28);\n                    if (*(*0x20 + -0x20) != arg2) {\n                        uVar7 = *(*(*0x20 + -0x10) + 0x52);\n                        if (*0x544c10 == 0) {\n                            *((*(*0x20 + -0x20) + -1) * uVar7 + iVar3 + -8 + uVar7) = iVar3;\n                        }\n                        else {\n                            *(*0x20 + -0x40) = 0x40c976;\n                            fcn.00458a80(iVar3 + uVar7 * arg2, arg2, in_R8, in_R9);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x40c98c;\n                fcn.0042e760();\ncode_r0x0040c98c:\n                *(*0x20 + -0x40) = 0x40c999;\n                fcn.00458f20(0x44);\ncode_r0x0040c999:\n                *(*0x20 + -0x40) = 0x40c9a6;\n                fcn.00458f40(0xf9);\ncode_r0x0040c9a6:\n                *(*0x20 + -0x40) = 0x40c9b3;\n                fcn.00458f20(0x44);\n            }\n            arg1 = 0x81;\n            *(*0x20 + -0x40) = 0x40c9c5;\n            in_RAX = fcn.00458f40(0x81);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x40c9d9;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1610
    },
    "0040cc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.0040cc40(ulong arg1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t arg2;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *arg1_00;\n    uint64_t arg1_01;\n    int64_t arg1_02;\n    ulong *puVar9;\n    ulong uVar10;\n    ulong arg1_03;\n    int64_t unaff_RBX;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x48f7d0;\n            *(*0x20 + -0x88) = 0x40d174;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + 0x18) = arg1;\n        *(puVar11 + -8) = 0x40d189;\n        fcn.004568e0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        arg1 = *(puVar11 + 0x18);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = arg1;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x88) = 0x40cc99;\n        fcn.00430140();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar2 = **(in_RAX + 0x48);\n    *(*0x20 + -0x88) = 0x40ccc2;\n    uVar4 = (*pcVar2)();\n    *(*0x20 + -0x58) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        uVar10 = *(*0x20 + 8);\n        *(*0x20 + -0x88) = 0x40ccfb;\n        iVar5 = fcn.0040b060();\n        if (*0x544c10 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x88) = 0x40cd29;\n            fcn.00458a80(arg1_00, uVar10, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x58);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        arg1_01 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x50) = arg1_01;\n            *(*0x20 + -0x88) = 0x40cd8c;\n            fcn.0040d3c0(arg1_01);\n            uVar4 = *(*0x20 + -0x58);\n            arg1_01 = *(*0x20 + -0x50);\n            arg1_00 = *(*0x20 + 0x10);\n            iVar5 = *(*0x20 + 8);\n        }\n        uVar1 = *(iVar5 + 0x52);\n        iVar7 = arg1_00[2];\n        uVar6 = uVar4 >> 0x38;\n        if (uVar4 >> 0x38 < 5) {\n            uVar6 = (uVar4 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x61) = uVar6;\n        arg2 = 0;\n        arg3 = 0;\n        arg4 = 0;\n        iVar7 = arg1_01 * uVar1 + iVar7;\n        do {\n            arg1_02 = iVar7;\n            *(*0x20 + -0x28) = arg1_02;\n            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                uVar8 = *(arg1_02 + uVar4);\n                if (uVar6 == uVar8) {\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x30) = arg4;\n                    *(*0x20 + -0x40) = arg3;\n                    *(*0x20 + -0x38) = arg2;\n                    puVar9 = arg1_02 + 8 + *(iVar5 + 0x50) * uVar4;\n                    if ((*(iVar5 + 0x54) & 1) != 0) {\n                        puVar9 = *puVar9;\n                    }\n                    *(*0x20 + -0x48) = puVar9;\n                    pcVar2 = **(*(iVar5 + 0x30) + 0x18);\n                    *(*0x20 + -0x88) = 0x40cf3f;\n                    cVar3 = (*pcVar2)();\n                    if (cVar3 != '\\0') {\n                        iVar5 = *(*0x20 + 8);\n                        if ((*(iVar5 + 0x54) >> 3 & 1) != 0) {\n                            *(*0x20 + -0x88) = 0x40cfa5;\n                            fcn.0040f2c0(*(*0x20 + -0x10));\n                            iVar5 = *(*0x20 + 8);\n                        }\n                        puVar9 = *(iVar5 + 0x51) * *(*0x20 + -0x60) + *(iVar5 + 0x50) * 8 + *(*0x20 + -0x28) + 8;\n                        goto code_r0x0040d101;\n                    }\n                    uVar6 = *(*0x20 + -0x61);\n                    arg1_02 = *(*0x20 + -0x28);\n                    arg1_00 = *(*0x20 + 0x10);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    arg2 = *(*0x20 + -0x38);\n                    arg3 = *(*0x20 + -0x40);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                else {\n                    if ((uVar8 < 2) && (arg2 == 0)) {\n                        arg3 = arg1_02 + 8 + uVar4 * *(iVar5 + 0x50);\n                        arg4 = *(iVar5 + 0x51) * uVar4 + *(iVar5 + 0x50) * 8 + 8 + arg1_02;\n                        iVar5 = *(*0x20 + 8);\n                        arg2 = arg1_02 + uVar4;\n                    }\n                    if (uVar8 == 0) goto code_r0x0040cdd4;\n                }\n            }\n            iVar7 = *(*(iVar5 + 0x52) + arg1_02 + -8);\n        } while (iVar7 != 0);\ncode_r0x0040cdd4:\n        if (arg1_00[3] != 0) goto code_r0x0040cfd6;\n        uVar8 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar4 = 1 << (uVar8 & 0x3f),  *arg1_00 + 1U <= (uVar4 >> 1) * 5 + (uVar4 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040cfd6:\n                if (arg2 == 0) {\n                    *(*0x20 + -0x88) = 0x40cfe9;\n                    arg2 = fcn.0040c260(arg1_02);\n                    iVar5 = *(*0x20 + 8);\n                    arg3 = arg2 + 8;\n                    arg4 = arg2 + *(iVar5 + 0x50) * 8 + 8;\n                }\n                *(*0x20 + -0x30) = arg4;\n                *(*0x20 + -0x38) = arg2;\n                iVar7 = arg3;\n                if ((*(iVar5 + 0x54) & 1) != 0) {\n                    *(*0x20 + -0x18) = arg3;\n                    uVar10 = 1;\n                    *(*0x20 + -0x88) = 0x40d045;\n                    iVar7 = fcn.0040b060();\n                    if (*0x544c10 == 0) {\n                        **(*0x20 + -0x18) = iVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40d05f;\n                        iVar7 = fcn.00458a80(uVar10, arg2, arg3, arg4);\n                    }\n                    arg2 = *(*0x20 + -0x38);\n                    iVar5 = *(*0x20 + 8);\n                    arg4 = *(*0x20 + -0x30);\n                }\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    *(*0x20 + -0x40) = iVar7;\n                    arg1_03 = 1;\n                    *(*0x20 + -0x88) = 0x40d0a5;\n                    uVar10 = fcn.0040b060();\n                    if (*0x544c10 == 0) {\n                        **(*0x20 + -0x30) = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x40d0bf;\n                        fcn.00458a80(arg1_03, arg2, iVar7, arg4);\n                    }\n                }\n                *(*0x20 + -0x88) = 0x40d0dd;\n                fcn.0040f2c0(*(*0x20 + -0x10));\n                **(*0x20 + -0x38) = *(*0x20 + -0x61);\n                **(*0x20 + 0x10) = **(*0x20 + 0x10) + 1;\n                iVar5 = *(*0x20 + 8);\n                puVar9 = *(*0x20 + -0x30);\ncode_r0x0040d101:\n                iVar7 = *(*0x20 + 0x10);\n                if ((*(iVar7 + 8) & 4) == 0) {\n                    *(*0x20 + -0x20) = puVar9;\n                    *(*0x20 + -0x88) = 0x40d129;\n                    fcn.00430140();\n                    puVar9 = *(*0x20 + -0x20);\n                    iVar5 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + 0x10);\n                }\n                *(iVar7 + 8) = *(iVar7 + 8) & 0xfb;\n                if ((*(iVar5 + 0x54) >> 1 & 1) != 0) {\n                    puVar9 = *puVar9;\n                }\n                return puVar9;\n            }\n        }\n        *(*0x20 + -0x88) = 0x40cd45;\n        fcn.0040d1a0();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x58);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2981
    },
    "0040d1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d1a0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    ulong *arg2;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong *arg1;\n    uint32_t uVar4;\n    int64_t *unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*unaff_RBX + 1U < 9) ||\n               (uVar6 = 1 << (*(unaff_RBX + 9) & 0x3f), \n               *unaff_RBX + 1U <= (uVar6 >> 1) * 5 + (uVar6 & 0xfffffffffffffffe) * 4)) {\n                *(unaff_RBX + 1) = *(unaff_RBX + 1) | 8;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = 1;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x19) = iVar2;\n            *(*0x20 + -0x18) = unaff_RBX[2];\n            uVar6 = *(unaff_RBX + 9) + iVar2;\n            *(*0x20 + -0x40) = 0x40d219;\n            uVar1 = fcn.0040c7a0(0);\n            arg2 = *(*0x20 + 0x10);\n            uVar4 = *(arg2 + 1) & 0xfffffffc;\n            if ((*(arg2 + 1) & 1) != 0) {\n                uVar4 = uVar4 | 2;\n            }\n            *(arg2 + 9) = *(arg2 + 9) + *(*0x20 + -0x19);\n            *(arg2 + 1) = uVar4;\n            if (*0x544c10 == 0) {\n                arg2[3] = *(*0x20 + -0x18);\n                arg2[2] = uVar1;\n                puVar3 = uVar4;\n            }\n            else {\n                puVar3 = arg2 + 3;\n                *(*0x20 + -0x40) = 0x40d26d;\n                fcn.00458be0(puVar3, arg2, param_3, param_4);\n                *(*0x20 + -0x40) = 0x40d276;\n                fcn.00458a80(puVar3, arg2, param_3, param_4);\n                puVar3 = arg2;\n            }\n            arg2[4] = 0;\n            *(arg2 + 10) = 0;\n            arg1 = arg2[5];\n            if ((arg1 == NULL) || (puVar3 = *arg1,  puVar3 == NULL)) goto code_r0x0040d2f2;\n            if (arg1[1] == 0) {\n                if (*0x544c10 == 0) {\n                    arg1[1] = puVar3;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x40d2c5;\n                    arg2 = fcn.00458ba0(arg1 + 1, puVar3, param_3, param_4);\n                }\n                arg1 = arg2[5];\n                if (*0x544c10 == 0) {\n                    *arg1 = 0;\n                }\n                else {\n                    puVar3 = NULL;\n                    *(*0x20 + -0x40) = 0x40d2ef;\n                    arg2 = fcn.00458ba0(arg1, 0, param_3, param_4);\n                }\ncode_r0x0040d2f2:\n                if (uVar6 != 0) {\n                    if (arg2[5] == 0) {\n                        *(*0x20 + -0x10) = uVar6;\n                        *(*0x20 + -0x40) = 0x40d30f;\n                        uVar1 = fcn.0040ba20();\n                        if (*0x544c10 == 0) {\n                            arg1 = *(*0x20 + 0x10);\n                            arg1[5] = uVar1;\n                        }\n                        else {\n                            arg1 = *(*0x20 + 0x10);\n                            *(*0x20 + -0x40) = 0x40d337;\n                            fcn.00458a80(arg1 + 5, arg1, param_3, param_4);\n                            puVar3 = arg1;\n                        }\n                        uVar6 = *(*0x20 + -0x10);\n                        arg2 = arg1;\n                    }\n                    if (*0x544c10 == 0) {\n                        *(arg2[5] + 0x10) = uVar6;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x40d365;\n                        fcn.00458bc0(arg1, puVar3, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x40) = 0x40d385;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + -8) = 0x40d395;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1418
    },
    "0040d3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d3c0(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040d460((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040d460(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040de40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040de40(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint8_t uVar8;\n    int64_t *arg1_00;\n    uint64_t uVar9;\n    int64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x48f7d0;\n            *(*0x20 + -0x40) = 0x40e139;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x40e14d;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1._0_4_ = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x40) = 0x40de8d;\n        fcn.00430140();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar1 = **(in_RAX + 0x48);\n    *(*0x20 + -0x40) = 0x40deab;\n    uVar4 = (*pcVar1)();\n    *(*0x20 + -0x20) = uVar4;\n    arg1_00 = *(*0x20 + 0x10);\n    *(arg1_00 + 1) = *(arg1_00 + 1) ^ 4;\n    if (arg1_00[2] == 0) {\n        *(*0x20 + -0x40) = 0x40dedc;\n        iVar5 = fcn.0040b060();\n        if (*0x544c10 == 0) {\n            arg1_00 = *(*0x20 + 0x10);\n            arg1_00[2] = iVar5;\n        }\n        else {\n            arg1_00 = *(*0x20 + 0x10);\n            *(*0x20 + -0x40) = 0x40df05;\n            fcn.00458a80(arg1_00, arg1_00 + 2, in_R8, in_R9);\n        }\n        uVar4 = *(*0x20 + -0x20);\n    }\n    iVar5 = *(*0x20 + 8);\n    do {\n        uVar9 = (1 << (*(arg1_00 + 9) & 0x3f)) - 1U & uVar4;\n        if (arg1_00[3] != 0) {\n            *(*0x20 + -0x18) = uVar9;\n            *(*0x20 + -0x40) = 0x40df5a;\n            fcn.0040e180(uVar9);\n            uVar4 = *(*0x20 + -0x20);\n            uVar9 = *(*0x20 + -0x18);\n            iVar5 = *(*0x20 + 8);\n            arg1_00 = *(*0x20 + 0x10);\n        }\n        uVar3 = uVar4 >> 0x38;\n        iVar6 = 0;\n        uVar4 = 0;\n        iVar2 = uVar9 * *(iVar5 + 0x52) + arg1_00[2];\n        do {\n            iVar7 = iVar2;\n            for (uVar9 = 0; uVar9 < 8; uVar9 = uVar9 + 1) {\n                if (*(iVar7 + uVar9) < 2) {\n                    uVar11 = uVar9;\n                    iVar2 = iVar7;\n                    if (iVar6 != 0) {\n                        uVar11 = uVar4;\n                        iVar2 = iVar6;\n                    }\n                    iVar6 = iVar2;\n                    uVar4 = uVar11;\n                    if (*(iVar7 + uVar9) == 0) goto code_r0x0040df8b;\n                }\n                else if (*(*0x20 + 0x18) == *(iVar7 + uVar9 * 4 + 8)) goto code_r0x0040e0d9;\n            }\n            iVar2 = *(iVar7 + -8 + *(iVar5 + 0x52));\n        } while (iVar2 != 0);\ncode_r0x0040df8b:\n        if (arg1_00[3] != 0) goto code_r0x0040e081;\n        uVar8 = *(arg1_00 + 9);\n        if ((*arg1_00 + 1U < 9) ||\n           (uVar9 = 1 << (uVar8 & 0x3f),  *arg1_00 + 1U <= (uVar9 >> 1) * 5 + (uVar9 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar8) {\n                uVar8 = 0xf;\n            }\n            if (*(arg1_00 + 10) < 1 << (uVar8 & 0xf)) {\ncode_r0x0040e081:\n                uVar9 = uVar4;\n                if (iVar6 == 0) {\n                    *(*0x20 + -0x40) = 0x40e094;\n                    iVar6 = fcn.0040c260(iVar7);\n                    iVar5 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    uVar9 = 0;\n                    uVar3 = *(*0x20 + -0x20) >> 0x38;\n                }\n                iVar7 = iVar6;\n                if (uVar3 < 5) {\n                    uVar3 = uVar3 + 5;\n                }\n                *(iVar7 + (uVar9 & 7)) = uVar3;\n                *(iVar7 + uVar9 * 4 + 8) = *(*0x20 + 0x18);\n                *arg1_00 = *arg1_00 + 1;\ncode_r0x0040e0d9:\n                iVar7 = uVar9 * *(iVar5 + 0x51) + 0x28 + iVar7;\n                if ((*(arg1_00 + 1) & 4) == 0) {\n                    *(*0x20 + -0x10) = iVar7;\n                    *(*0x20 + -0x40) = 0x40e108;\n                    fcn.00430140();\n                    iVar7 = *(*0x20 + -0x10);\n                    arg1_00 = *(*0x20 + 0x10);\n                }\n                *(arg1_00 + 1) = *(arg1_00 + 1) & 0xfb;\n                return iVar7;\n            }\n        }\n        *(*0x20 + -0x40) = 0x40df1c;\n        fcn.0040d1a0();\n        arg1_00 = *(*0x20 + 0x10);\n        uVar4 = *(*0x20 + -0x20);\n        iVar5 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 1905
    },
    "0040e180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040e180(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040e220((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040e220(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040e9e0(ulong arg1)\n\n{\n    ulong *puVar1;\n    uint16_t uVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    ulong arg1_00;\n    ulong uVar5;\n    uint8_t uVar6;\n    uint32_t uVar7;\n    int64_t in_RAX;\n    uint64_t uVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint8_t uVar13;\n    int64_t *arg1_01;\n    uint64_t uVar14;\n    int64_t unaff_RBX;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *piVar16;\n    ulong unaff_RDI;\n    uint64_t uVar17;\n    ulong in_R8;\n    ulong in_R9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if (unaff_RBX != 0) break;\n            unaff_RBX = 0x48f7d0;\n            *(*0x20 + -0x70) = 0x40edb6;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar15 + 8) = in_RAX;\n        *(puVar15 + 0x10) = unaff_RBX;\n        *(puVar15 + 0x18) = arg1;\n        *(puVar15 + 0x20) = unaff_RDI;\n        *(puVar15 + -8) = 0x40edd0;\n        fcn.004568e0();\n        in_RAX = *(puVar15 + 8);\n        unaff_RBX = *(puVar15 + 0x10);\n        arg1 = *(puVar15 + 0x18);\n        unaff_RDI = *(puVar15 + 0x20);\n        *0x20 = puVar15;\n    } while( true );\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    if ((*(unaff_RBX + 8) & 4) != 0) {\n        *(*0x20 + -0x70) = 0x40ea36;\n        fcn.00430140();\n        in_RAX = *(*0x20 + 8);\n    }\n    pcVar3 = **(in_RAX + 0x48);\n    *(*0x20 + -0x70) = 0x40ea57;\n    uVar8 = (*pcVar3)();\n    *(*0x20 + -0x40) = uVar8;\n    arg1_01 = *(*0x20 + 0x10);\n    *(arg1_01 + 1) = *(arg1_01 + 1) ^ 4;\n    if (arg1_01[2] == 0) {\n        *(*0x20 + -0x70) = 0x40ea88;\n        iVar9 = fcn.0040b060();\n        if (*0x544c10 == 0) {\n            arg1_01 = *(*0x20 + 0x10);\n            arg1_01[2] = iVar9;\n        }\n        else {\n            arg1_01 = *(*0x20 + 0x10);\n            *(*0x20 + -0x70) = 0x40eab0;\n            fcn.00458a80(arg1_01, arg1_01 + 2, in_R8, in_R9);\n        }\n        uVar8 = *(*0x20 + -0x40);\n    }\n    iVar9 = *(*0x20 + 8);\n    do {\n        uVar14 = (1 << (*(arg1_01 + 9) & 0x3f)) - 1U & uVar8;\n        if (arg1_01[3] != 0) {\n            *(*0x20 + -0x38) = uVar14;\n            *(*0x20 + -0x70) = 0x40eb05;\n            fcn.0040ee00(uVar14);\n            uVar8 = *(*0x20 + -0x40);\n            uVar14 = *(*0x20 + -0x38);\n            iVar9 = *(*0x20 + 8);\n            arg1_01 = *(*0x20 + 0x10);\n        }\n        uVar2 = *(iVar9 + 0x52);\n        iVar4 = arg1_01[2];\n        uVar10 = uVar8 >> 0x38;\n        if (uVar8 >> 0x38 < 5) {\n            uVar10 = (uVar8 >> 0x38) + 5;\n        }\n        *(*0x20 + -0x49) = uVar10;\n        iVar11 = 0;\n        uVar17 = 0;\n        iVar4 = uVar2 * uVar14 + iVar4;\n        do {\n            iVar12 = iVar4;\n            *(*0x20 + -0x10) = iVar12;\n            for (uVar14 = 0; uVar6 = uVar10,  uVar14 < 8; uVar14 = uVar14 + 1) {\n                uVar13 = *(iVar12 + uVar14);\n                if (uVar6 == uVar13) {\n                    piVar16 = iVar12 + uVar14 * 0x10 + 8;\n                    if (piVar16[1] == *(*0x20 + 0x20)) {\n                        if (*(*0x20 + 0x18) == *piVar16) {\n                            arg4 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = uVar14;\n                            *(*0x20 + -0x20) = piVar16;\n                            *(*0x20 + -0x48) = uVar17;\n                            *(*0x20 + -0x18) = iVar11;\n                            *(*0x20 + -0x70) = 0x40ec6c;\n                            uVar7 = fcn.004023a0(*(*0x20 + 0x20), iVar9);\n                            iVar11 = *(*0x20 + -0x18);\n                            iVar9 = *(*0x20 + 8);\n                            arg1_01 = *(*0x20 + 0x10);\n                            piVar16 = *(*0x20 + -0x20);\n                            uVar17 = *(*0x20 + -0x48);\n                            uVar8 = *(*0x20 + -0x40);\n                            uVar14 = *(*0x20 + -0x30);\n                            iVar12 = *(*0x20 + -0x10);\n                            arg4 = uVar7 ^ 1;\n                            uVar10 = *(*0x20 + -0x49);\n                        }\n                        if (arg4 == '\\0') {\n                            if (*0x544c10 == 0) {\n                                *piVar16 = *(*0x20 + 0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x70) = 0x40ecd2;\n                                fcn.00458b80(*(*0x20 + 0x18), iVar9, uVar8, arg4);\n                            }\n                            goto code_r0x0040ed4e;\n                        }\n                    }\n                }\n                else {\n                    if ((uVar13 < 2) && (iVar11 == 0)) {\n                        iVar11 = iVar12;\n                        uVar17 = uVar14;\n                    }\n                    if (uVar13 == 0) goto code_r0x0040eb40;\n                }\n            }\n            iVar4 = *(iVar12 + -8 + *(iVar9 + 0x52));\n        } while (iVar4 != 0);\ncode_r0x0040eb40:\n        if (arg1_01[3] != 0) goto code_r0x0040ecd7;\n        uVar13 = *(arg1_01 + 9);\n        if ((*arg1_01 + 1U < 9) ||\n           (uVar8 = 1 << (uVar13 & 0x3f),  *arg1_01 + 1U <= (uVar8 >> 1) * 5 + (uVar8 & 0xfffffffffffffffe) * 4)) {\n            if (0xf < uVar13) {\n                uVar13 = 0xf;\n            }\n            if (*(arg1_01 + 10) < 1 << (uVar13 & 0xf)) {\ncode_r0x0040ecd7:\n                if (iVar11 == 0) {\n                    *(*0x20 + -0x70) = 0x40ecea;\n                    iVar11 = fcn.0040c260(iVar12);\n                    iVar9 = *(*0x20 + 8);\n                    arg1_01 = *(*0x20 + 0x10);\n                    uVar17 = 0;\n                    uVar6 = *(*0x20 + -0x49);\n                }\n                iVar12 = iVar11;\n                *(iVar12 + (uVar17 & 7)) = uVar6;\n                puVar1 = iVar12 + 8 + uVar17 * 0x10;\n                arg1_00 = *(*0x20 + 0x20);\n                uVar5 = *(*0x20 + 0x18);\n                puVar1[1] = arg1_00;\n                if (*0x544c10 == 0) {\n                    *puVar1 = uVar5;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x40ed45;\n                    fcn.00458c20(arg1_00, iVar9, iVar12);\n                }\n                *arg1_01 = *arg1_01 + 1;\n                uVar14 = uVar17;\ncode_r0x0040ed4e:\n                iVar12 = uVar14 * *(iVar9 + 0x51) + 0x88 + iVar12;\n                if ((*(arg1_01 + 1) & 4) == 0) {\n                    *(*0x20 + -0x28) = iVar12;\n                    *(*0x20 + -0x70) = 0x40ed85;\n                    fcn.00430140();\n                    iVar12 = *(*0x20 + -0x28);\n                    arg1_01 = *(*0x20 + 0x10);\n                }\n                *(arg1_01 + 1) = *(arg1_01 + 1) & 0xfb;\n                return iVar12;\n            }\n        }\n        *(*0x20 + -0x70) = 0x40eac7;\n        fcn.0040d1a0();\n        arg1_01 = *(*0x20 + 0x10);\n        uVar8 = *(*0x20 + -0x40);\n        iVar9 = *(*0x20 + 8);\n    } while( true );\n}\n",
        "token_count": 2564
    },
    "0040ee00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ee00(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *(unaff_RBX + 9);\n    if ((*(unaff_RBX + 8) & 8) == 0) {\n        uVar1 = uVar1 - 1;\n    }\n    fcn.0040eea0((1 << (uVar1 & 0x3f)) - 1U & arg1);\n    if (*(unaff_RBX + 0x18) != 0) {\n        fcn.0040eea0(*(unaff_RBX + 0x20));\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0040f2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f2c0(int64_t arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != arg1) {\n        if ((*0x544c14 != '\\0') && (in_RAX[1] != 0)) {\n            fcn.0040fca0(in_RAX[1]);\n        }\n        fcn.00459880(*in_RAX);\n        if (*0x544c15 != '\\0') {\n            fcn.00403900(arg1);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "0040f480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040f480(int64_t arg1)\n\n{\n    int64_t *in_RAX;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    if (unaff_RSI < arg1) {\n        arg1 = unaff_RSI;\n    }\n    if (arg1 == 0) {\n        return 0;\n    }\n    if (*0x544c15 != '\\0') {\n        fcn.004039a0(unaff_RDI);\n    }\n    if (unaff_RDI != unaff_RBX) {\n        arg1_00 = arg1 * *in_RAX;\n        if (*0x544c14 != '\\0') {\n            fcn.0040fca0((arg1_00 - *in_RAX) + in_RAX[1]);\n        }\n        fcn.00459880(arg1_00);\n        return arg1;\n    }\n    return arg1;\n}\n",
        "token_count": 227
    },
    "0040f560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f560(void)\n\n{\n    ulong *in_RAX;\n    \n    if ((*0x544c14 != '\\0') && (in_RAX[1] != 0)) {\n        fcn.0040fca0(in_RAX[1]);\n    }\n    fcn.00459580(*in_RAX);\n    return;\n}\n",
        "token_count": 78
    },
    "0040f780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f780(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431a00();\n    if (in_RAX != 0) {\n        if (*(in_RAX + 99) == '\\x01') {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        else {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00431a00();\n    }\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    if (arg1 != 0) goto code_r0x0040f8d0;\n    do {\n        *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n        fcn.00430040();\ncode_r0x0040f8d0:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.00431a00();\n        fcn.00419fc0(arg1);\n    } while( true );\n}\n",
        "token_count": 446
    },
    "0040f9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0040f9c0(ulong arg1)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x516e30);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        if (((*(iVar2 + 99) == '\\x01') && (uVar1 = *(iVar2 + 0x18),  uVar1 <= in_RAX)) &&\n           (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n            return *(iVar2 + 0x68) * (*(iVar2 + 0x5c) * (in_RAX - uVar1) >> 0x20) + uVar1;\n        }\n        if (*(iVar2 + 99) != '\\x02') {\n            if (*0x544e80 != 0) {\n                fcn.0040f780(unaff_RBX);\n            }\n            return 0;\n        }\n        return 0;\n    }\n    if ((in_RAX == 0xdeaddeaddeaddead) && (*0x544e80 != 0)) {\n        fcn.0040f780(unaff_RBX);\n    }\n    return 0;\n}\n",
        "token_count": 466
    },
    "0040fca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040fca0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    uint64_t in_RAX;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    ulong *puVar11;\n    int64_t unaff_R14;\n    uint64_t uVar12;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) != 0) {\n        fcn.00430040();\n        pcVar5 = swi(3);\n        (*pcVar5)();\n        return;\n    }\n    if (*0x544c14 == '\\0') {\n        return;\n    }\n    uVar7 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar7 < 0x40) {\n        iVar8 = *(uVar7 * 8 + 0x516e30);\n        if (iVar8 == 0) {\n            iVar8 = 0;\n        }\n        else {\n            iVar8 = *(iVar8 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar8 == 0) {\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = *(iVar8 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar8 = 0;\n    }\n    if (iVar8 != 0) {\n        puVar11 = unaff_RSI & 0xffffffffffffff00 | *(iVar8 + 99);\n        if (((*(iVar8 + 99) == 1) && (*(iVar8 + 0x18) < in_RAX || *(iVar8 + 0x18) == in_RAX)) &&\n           (in_RAX <= *(iVar8 + 0x70) && *(iVar8 + 0x70) != in_RAX)) {\n            uVar7 = *(*(unaff_R14 + 0x30) + 0xa0);\n            fcn.0040fb20();\n            uVar12 = unaff_RBX;\n            if (unaff_RBX == 0) {\n                while (fcn.0040fc40(arg1, unaff_RBX),  puVar11 != NULL) {\n                    puVar2 = *(uVar7 + 0x1260);\n                    *puVar2 = *puVar11;\n                    puVar2[1] = 0;\n                    puVar11 = *(uVar7 + 0x1260) + 0x10;\n                    *(uVar7 + 0x1260) = puVar11;\n                    unaff_RBX = uVar7;\n                    if (*(uVar7 + 0x1268) == puVar11) {\n                        fcn.00429d00();\n                    }\n                }\n            }\n            else {\n                while (fcn.0040fc40(arg1, unaff_RBX),  puVar11 != NULL) {\n                    puVar10 = puVar11 + (uVar12 - in_RAX);\n                    puVar2 = *(uVar7 + 0x1260);\n                    puVar11 = *puVar11;\n                    uVar3 = *puVar10;\n                    *puVar2 = puVar11;\n                    puVar2[1] = uVar3;\n                    unaff_RBX = *(uVar7 + 0x1260) + 0x10;\n                    *(uVar7 + 0x1260) = unaff_RBX;\n                    if (*(uVar7 + 0x1268) == unaff_RBX) {\n                        fcn.00429d00();\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    if (*0x4f1618 == NULL) {\n        iVar9 = 0;\n        iVar8 = 0;\n    }\n    else {\n        iVar8 = **0x4f1618;\n        iVar9 = (*0x4f1618)[1];\n    }\n    iVar6 = 0;\n    while( true ) {\n        if (iVar9 <= iVar6) {\n            if (*0x4f1618 == NULL) {\n                iVar9 = 0;\n                iVar8 = 0;\n            }\n            else {\n                iVar8 = **0x4f1618;\n                iVar9 = (*0x4f1618)[1];\n            }\n            iVar6 = 0;\n            while( true ) {\n                if (iVar9 <= iVar6) {\n                    return;\n                }\n                iVar4 = *(iVar8 + iVar6 * 8);\n                if ((*(iVar4 + 0xe0) <= in_RAX) && (puVar1 = iVar4 + 0xe8,  in_RAX <= *puVar1 && *puVar1 != in_RAX))\n                break;\n                iVar6 = iVar6 + 1;\n            }\n            fcn.00410100(arg1);\n            return;\n        }\n        iVar4 = *(iVar8 + iVar6 * 8);\n        if ((*(iVar4 + 0xd0) <= in_RAX) && (puVar1 = iVar4 + 0xd8,  in_RAX <= *puVar1 && *puVar1 != in_RAX)) break;\n        iVar6 = iVar6 + 1;\n    }\n    fcn.00410100(arg1);\n    return;\n}\n",
        "token_count": 1251
    },
    "0040ffc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040ffc0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t in_RAX;\n    uint64_t arg2;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    if (((in_RAX | unaff_RBX | arg1) & 7) != 0) {\n        fcn.00430040();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    if (*0x544c14 != '\\0') {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        arg2 = in_RAX;\n        fcn.0040fb20();\n        iVar5 = iVar1;\n        while( true ) {\n            fcn.0040fc40(arg1, arg2);\n            if (iVar5 == 0) break;\n            puVar2 = *(iVar1 + 0x1260);\n            uVar3 = *((iVar5 - in_RAX) + unaff_RBX);\n            *puVar2 = 0;\n            puVar2[1] = uVar3;\n            iVar5 = *(iVar1 + 0x1260) + 0x10;\n            *(iVar1 + 0x1260) = iVar5;\n            arg2 = in_RAX;\n            if (*(iVar1 + 0x1268) == iVar5) {\n                fcn.00429d00();\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "00410100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410100(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    uint64_t unaff_RDI;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    uVar7 = 1 << (unaff_RDI >> 3 & 7);\n    puVar5 = unaff_RSI + (unaff_RDI >> 6);\n    uVar4 = 0;\n    iVar8 = unaff_RBX;\n    do {\n        if (arg1 <= uVar4) {\n            return;\n        }\n        if (uVar7 == '\\0') {\n            if (puVar5[1] != 0) {\n                uVar7 = 1;\n                puVar5 = puVar5 + 1;\n                goto code_r0x00410189;\n            }\n            uVar4 = uVar4 + 0x38;\n            puVar5 = puVar5 + 1;\n        }\n        else {\ncode_r0x00410189:\n            if ((*puVar5 & uVar7) != 0) {\n                if (unaff_RBX == 0) {\n                    puVar2 = *(iVar1 + 0x1260);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = 0;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.00429d00();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n                else {\n                    puVar2 = *(iVar1 + 0x1260);\n                    uVar3 = *(uVar4 + unaff_RBX);\n                    *puVar2 = *(uVar4 + in_RAX);\n                    puVar2[1] = uVar3;\n                    iVar6 = *(iVar1 + 0x1260) + 0x10;\n                    *(iVar1 + 0x1260) = iVar6;\n                    if (*(iVar1 + 0x1268) == iVar6) {\n                        unaff_RBX = iVar8;\n                        fcn.00429d00();\n                        uVar7 = uVar7 & 0xff;\n                        iVar8 = unaff_RBX;\n                    }\n                }\n            }\n            uVar7 = uVar7 << 1;\n        }\n        uVar4 = uVar4 + 8;\n    } while( true );\n}\n",
        "token_count": 668
    },
    "004102a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004102a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    int64_t unaff_RDI;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    int64_t iVar9;\n    \n    if (in_RAX != NULL) {\n        if (*in_RAX == unaff_RDI) {\n            if ((*(in_RAX + 0x17) & 0x40) == 0) {\n                if (*0x544c14 != '\\0') {\n                    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    puVar5 = in_RAX[4];\n                    uVar7 = 0;\n                    iVar9 = unaff_RBX;\n                    for (uVar6 = 0; uVar6 <= in_RAX[1] && in_RAX[1] != uVar6; uVar6 = uVar6 + 8) {\n                        if ((uVar6 & 0x3f) == 0) {\n                            uVar7 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        }\n                        else {\n                            uVar7 = uVar7 >> 1;\n                        }\n                        if ((uVar7 & 1) != 0) {\n                            puVar2 = *(iVar1 + 0x1260);\n                            uVar3 = *(uVar6 + arg1);\n                            *puVar2 = *(uVar6 + unaff_RBX);\n                            puVar2[1] = uVar3;\n                            iVar8 = *(iVar1 + 0x1260) + 0x10;\n                            *(iVar1 + 0x1260) = iVar8;\n                            if (*(iVar1 + 0x1268) == iVar8) {\n                                unaff_RBX = iVar9;\n                                fcn.00429d00();\n                                iVar9 = unaff_RBX;\n                            }\n                        }\n                    }\n                    return;\n                }\n                return;\n            }\n            fcn.00450e00();\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00431a00();\n            fcn.00430040();\n        }\n        fcn.00450e00();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00431be0();\n        fcn.00431a00();\n        fcn.00430040();\n    }\n    fcn.00430040();\n    pcVar4 = swi(3);\n    (*pcVar4)();\n    return;\n}\n",
        "token_count": 681
    },
    "00410a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410a40(uint64_t arg1)\n\n{\n    uint64_t in_RAX;\n    int64_t *arg1_00;\n    ulong arg1_01;\n    uint64_t arg3;\n    int64_t *noname_1;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t *unaff_RDI;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX == 8) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1_00 = in_RAX >> 3 & 0x3f;\n            if ((*(unaff_RDI + 0x17) & 0x40) != 0) {\n                *(*0x20 + -0x30) = arg1_00;\n                *(*0x20 + -0x38) = in_RAX + arg1_00 * -8;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0xb8) = 0x410b6a;\n                uVar2 = fcn.004110c0();\n                *(*0x20 + -0x68) = uVar2;\n                arg1_01 = *(*0x20 + -0x30);\n                iVar3 = 0;\n                while( true ) {\n                    *(*0x20 + -0x40) = iVar3;\n                    iVar3 = *(*0x20 + -0x10);\n                    while (8 < uVar2) {\n                        *(*0x20 + -0x50) = uVar2;\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0xb8) = 0x410c46;\n                        fcn.00410640(arg1_01, arg1_01, 8);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                        uVar2 = *(*0x20 + -0x50) - 8;\n                    }\n                    *(*0x20 + -0xb8) = 0x410bf7;\n                    fcn.00410640(arg1_01, arg1_01, uVar2);\n                    if (*(*0x20 + 0x18) == *(*0x20 + -0x40) + **(*0x20 + 0x20)) break;\n                    *(*0x20 + -0xb8) = 0x410ba6;\n                    fcn.00410780(arg1_01, *(*0x20 + -0x68) << 3);\n                    iVar3 = **(*0x20 + 0x20) + *(*0x20 + -0x40);\n                    uVar2 = *(*0x20 + -0x68);\n                }\n                *(*0x20 + -0xb8) = 0x410c91;\n                fcn.00410820(arg1_01, *(*0x20 + 0x20), *(*0x20 + 0x10));\n                *(*0x20 + -0xb8) = 0x410cab;\n                fcn.00459580();\n                return;\n            }\n            uVar2 = unaff_RDI[1] >> 3;\n            uVar4 = *unaff_RDI;\n            if (arg1 == uVar4) {\n                if (uVar2 < 0x41) {\n                    noname_1 = unaff_RDI[4];\n                    *(*0x20 + -0xb8) = 0x410b3c;\n                    fcn.00410640(arg1_00, noname_1, uVar2);\n                }\n                else {\n                    uVar4 = unaff_RDI[4];\n                    while( true ) {\n                        *(*0x20 + -0x78) = uVar2;\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0xb8) = 0x410d25;\n                        fcn.00410640(arg1_00, uVar4, 0x40);\n                        uVar2 = *(*0x20 + -0x78) - 0x40;\n                        if (uVar2 < 0x41) break;\n                        uVar4 = *(*0x20 + -0x20) + 8;\n                    }\n                    noname_1 = *(*0x20 + -0x20);\n                    *(*0x20 + -0xb8) = 0x410d47;\n                    fcn.00410640(arg1_00, noname_1, uVar2);\n                }\n                goto code_r0x00410cbb;\n            }\n            arg3 = uVar4 >> 3;\n            if (0x40 < arg3) {\n                *(*0x20 + -0x30) = uVar2;\n                iVar3 = 0;\n                while( true ) {\n                    *(*0x20 + -0x48) = iVar3;\n                    uVar4 = unaff_RDI[4];\n                    while (0x40 < uVar2) {\n                        *(*0x20 + -0x58) = uVar2;\n                        *(*0x20 + -0x28) = uVar4;\n                        *(*0x20 + -0xb8) = 0x410e18;\n                        fcn.00410640(arg1_00, 0, 0x40);\n                        uVar4 = *(*0x20 + -0x28) + 8;\n                        uVar2 = *(*0x20 + -0x58) - 0x40;\n                    }\n                    *(*0x20 + -0xb8) = 0x410dc6;\n                    fcn.00410640(arg1_00, 0, uVar2);\n                    noname_1 = *(*0x20 + 0x20);\n                    if (*(*0x20 + 0x18) == *(*0x20 + -0x48) + *noname_1) break;\n                    *(*0x20 + -0xb8) = 0x410d58;\n                    fcn.00410780(arg1_00, noname_1);\n                    iVar3 = *(*0x20 + -0x48) + **(*0x20 + 0x20);\n                    uVar2 = *(*0x20 + -0x30);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                goto code_r0x00410cbb;\n            }\n            if (uVar4 != 0) break;\n            *(*0x20 + -0xb8) = 0x410f9c;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x410fb6;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n    arg1 = arg1 / uVar4;\n    uVar4 = *unaff_RDI[4];\n    do {\n        if (0x20 < arg3) break;\n        if ((arg1 & 1) != 0) {\n            *(*0x20 + -0x80) = arg3;\n            *(*0x20 + -0x78) = uVar2;\n            *(*0x20 + -0x60) = uVar4;\n            *(*0x20 + -0x70) = arg1;\n            *(*0x20 + -0xb8) = 0x410ebb;\n            fcn.00410640(arg1_00, arg1_00, arg3);\n            uVar2 = *(*0x20 + -0x78);\n            uVar4 = *(*0x20 + -0x60);\n            arg1 = *(*0x20 + -0x70);\n            arg3 = *(*0x20 + -0x80);\n        }\n        arg1 = arg1 >> 1;\n        uVar4 = uVar4 | uVar4 << (arg3 & 0x3f);\n        uVar2 = uVar2 + arg3;\n        arg3 = arg3 << 1;\n    } while (arg1 != 1);\n    *(*0x20 + -0x78) = uVar2;\n    *(*0x20 + -0x60) = uVar4;\n    *(*0x20 + -0x80) = arg3;\n    while (1 < arg1) {\n        *(*0x20 + -0x70) = arg1;\n        *(*0x20 + -0xb8) = 0x410f3f;\n        fcn.00410640(arg1_00, arg1_00, arg3);\n        uVar2 = *(*0x20 + -0x78);\n        arg3 = *(*0x20 + -0x80);\n        arg1 = *(*0x20 + -0x70) - 1;\n    }\n    *(*0x20 + -0xb8) = 0x410f92;\n    noname_1 = arg1_00;\n    fcn.00410640(arg1_00, arg1_00, uVar2);\ncode_r0x00410cbb:\n    *(*0x20 + -0xb8) = 0x410cd0;\n    fcn.00410820(arg1_00, noname_1, *(*0x20 + 0x10));\n    return;\n}\n",
        "token_count": 2367
    },
    "004110c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * fcn.004110c0(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *unaff_RBX;\n    int64_t iVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    uint8_t *puVar12;\n    uint64_t uVar13;\n    uint8_t *puVar14;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    \n    puVar8 = NULL;\n    puVar10 = unaff_RBX;\n    puVar14 = NULL;\ncode_r0x004111ea:\n    do {\n        while( true ) {\n            for (; 0x7 < puVar8; puVar8 = puVar8 + -8) {\n                *puVar10 = puVar14;\n                puVar10 = puVar10 + 1;\n                puVar14 = puVar14 >> 8;\n            }\n            uVar1 = *in_RAX;\n            puVar5 = uVar1 & 0x7f;\n            in_RAX = in_RAX + 1;\n            if (uVar1 < '\\0') break;\n            if (puVar5 == NULL) {\n                iVar9 = puVar10 - unaff_RBX;\n                for (puVar5 = puVar8 + (-puVar8 & 7); puVar5 != NULL; puVar5 = puVar5 + -8) {\n                    *puVar10 = puVar14;\n                    puVar14 = puVar14 >> 8;\n                    puVar10 = puVar10 + 1;\n                }\n                return puVar8 + iVar9 * 8;\n            }\n            for (uVar3 = 0; uVar3 < (uVar1 & 0x7f) >> 3; uVar3 = uVar3 + 1) {\n                uVar13 = puVar14 | *in_RAX << (puVar8 & 0x3f);\n                *puVar10 = uVar13;\n                puVar14 = uVar13 >> 8;\n                in_RAX = in_RAX + 1;\n                puVar10 = puVar10 + 1;\n            }\n            if ((uVar1 & 7) != 0) {\n                puVar14 = puVar14 | *in_RAX << (puVar8 & 0x3f);\n                puVar8 = puVar8 + (uVar1 & 7);\n                in_RAX = in_RAX + 1;\n            }\n        }\n        puVar7 = puVar8;\n        puVar11 = puVar14;\n        puVar15 = in_RAX;\n        if (puVar5 != NULL) goto code_r0x00411125;\n        puVar5 = NULL;\n        puVar6 = NULL;\ncode_r0x004113fa:\n        uVar1 = *puVar15;\n        puVar5 = puVar5 | -(puVar6 < 0x40) & (uVar1 & 0x7f) << (puVar6 & 0x3f);\n        puVar15 = puVar15 + 1;\n        puVar7 = puVar8;\n        puVar11 = puVar14;\n        if (uVar1 < '\\0') {\ncode_r0x004113f0:\n            puVar6 = puVar6 + 7;\n            goto code_r0x004113fa;\n        }\ncode_r0x00411125:\n        uVar13 = 0;\n        uVar3 = 0;\n        in_RAX = puVar15;\n        while( true ) {\n            uVar1 = *in_RAX;\n            puVar16 = uVar1;\n            uVar13 = uVar13 | (uVar1 & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40);\n            in_RAX = in_RAX + 1;\n            if (-1 < uVar1) break;\n            uVar3 = uVar3 + 7;\n        }\n        puVar2 = uVar13 * puVar5;\n        puVar6 = puVar7;\n        puVar12 = puVar11;\n        puVar15 = puVar10;\n        if (puVar5 < 0x3a) {\n            for (; puVar15 = puVar15 + -1,  puVar6 < puVar5; puVar6 = puVar6 + 8) {\n                puVar12 = puVar12 << 8 | *puVar15;\n            }\n            if (puVar5 < puVar6) {\n                puVar15 = -(puVar6 - puVar5 < 0x40);\n                puVar12 = puVar12 >> (puVar6 - puVar5 & 0x3f) & puVar15;\n                puVar6 = puVar5;\n            }\n            puVar14 = puVar11;\n            if (puVar6 == 0x1) {\n                puVar6 = puVar2;\n                if (puVar12 == 0x1) {\n                    puVar12 = 0x1ffffffffffffff;\n                    puVar6 = 0x39;\n                }\n                goto code_r0x00411305;\n            }\n            puVar8 = puVar6 * 2;\n            puVar5 = puVar6;\n            if (0x39 < puVar8) goto code_r0x00411305;\n            for (; puVar14 = puVar12,  puVar5 < 0x41; puVar5 = puVar5 * 2) {\n                puVar8 = -(puVar5 < 0x40);\n                puVar12 = puVar14 << (puVar5 & 0x3f) & puVar8 | puVar14;\n                puVar15 = puVar6;\n                puVar16 = puVar14;\n            }\n            if (puVar6 != NULL) break;\n            puVar5 = fcn.0042e760();\n            unaff_RBX = puVar16;\n            goto code_r0x004113f0;\n        }\n        uVar3 = puVar5 - puVar7 & 7;\n        puVar5 = puVar10 + -((puVar5 - puVar7) + 7U >> 3);\n        if (uVar3 != 0) {\n            puVar11 = puVar11 | (*puVar5 >> (-(uVar3 - 8) & 0x3f) & -(-(uVar3 - 8) < 0x40)) << (puVar7 & 0x3f);\n            puVar7 = puVar7 + uVar3;\n            puVar2 = puVar2 + -uVar3;\n            puVar5 = puVar5 + 1;\n        }\n        for (uVar3 = puVar2 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            uVar13 = puVar11 | *puVar5 << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n            *puVar10 = uVar13;\n            puVar11 = uVar13 >> 8;\n            puVar5 = puVar5 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        uVar4 = puVar2 & 7;\n        puVar8 = puVar7;\n        puVar14 = puVar11;\n        if (uVar4 != 0) {\n            puVar14 = puVar11 | ((1 << uVar4) - 1U & *puVar5) << (puVar7 & 0x3f) & -(puVar7 < 0x40);\n            puVar8 = puVar7 + uVar4;\n        }\n    } while( true );\n    puVar6 = puVar6 * SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x39)) / ZEXT816(puVar6), 0);\n    puVar12 = puVar14 & (1 << (puVar6 & 0x3f) & -(puVar6 < 0x40)) - 1;\n    puVar14 = puVar11;\ncode_r0x00411305:\n    while (puVar8 = puVar7,  puVar6 <= puVar2) {\n        puVar14 = puVar14 | puVar12 << (puVar8 & 0x3f) & -(puVar8 < 0x40);\n        for (puVar7 = puVar6 + puVar8; 0x7 < puVar7; puVar7 = puVar7 + -8) {\n            *puVar10 = puVar14;\n            puVar14 = puVar14 >> 8;\n            puVar10 = puVar10 + 1;\n        }\n        puVar2 = puVar2 + -puVar6;\n    }\n    if (puVar2 != NULL) {\n        puVar14 = puVar14 | (puVar12 & (1 << (puVar2 & 0x3f) & -(puVar2 < 0x40)) - 1) << (puVar8 & 0x3f) &\n                            -(puVar8 < 0x40);\n        puVar8 = puVar8 + puVar2;\n    }\n    goto code_r0x004111ea;\n}\n",
        "token_count": 2123
    },
    "00411560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00411560(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piStack32 = NULL;\n    auStack24 = CONCAT88(&piStack32, 0x411640);\n    fcn.004567a0();\n    for (iVar2 = 0; iVar2 < 0x88; iVar2 = iVar2 + 1) {\n        piStack32[iVar2 + 5] = 0x545140;\n    }\n    if (*0x4d9288 == 1) {\n        iVar2 = 0;\n    }\n    else {\n        iVar1 = fcn.0040bc20();\n        iVar2 = iVar1;\n    }\n    *piStack32 = iVar2;\n    return piStack32;\n}\n",
        "token_count": 245
    },
    "00411ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00412009)\n\nint64_t fcn.00411ee0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    uint8_t *in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX >> 1 < 0x44) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x411f26;\n                fcn.0041f9c0();\n                if (*0x4f6bd0 != '\\0') {\n                    *(*0x20 + -0x58) = 0x411f34;\n                    fcn.0044c420();\n                }\n                *(*0x20 + -0x30) = 0;\n                *(*0x20 + -0x2c) = 0;\n                uVar7 = *0x516dd8 >> 1 & 1;\n                *(*0x20 + -0x3c) = uVar7;\n                *(*0x20 + -0x10) = uVar7 * 5;\n                *(*0x20 + -0x58) = 0x411f6b;\n                iVar2 = fcn.00429620();\n                if (iVar2 != 0) {\n                    cVar6 = '\\0';\n                    goto code_r0x00411f74;\n                }\ncode_r0x00411fe9:\n                uVar7 = *0x4f1e1c & 0x80000000;\n                if (uVar7 == 0) {\n                    *0x4f1e1c = *0x4f1e1c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x30) = *0x516dd8;\n                *(*0x20 + -0x2c) = uVar7 == 0;\n                if (uVar7 == 0) {\n                    iVar1 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + 8);\n                    iVar2 = 100;\n                    while (-1 < iVar2) {\n                        if (1 < -(iVar1 + -1)) goto code_r0x0041220d;\n                        *(*0x20 + -0x38) = iVar2;\n                        *(*0x20 + -0x58) = 0x412085;\n                        iVar2 = fcn.00429620();\n                        if (iVar2 == 0) {\n                            iVar1 = *(*0x20 + -0x3c);\n                            iVar2 = *(*0x20 + -0x38);\n                            uVar3 = *(*0x20 + 8);\n                            break;\n                        }\n                        *(*0x20 + -0x18) = iVar2;\n                        *(*0x20 + -0x58) = 0x41209c;\n                        uVar3 = fcn.0041e460();\n                        *(*0x20 + -0x20) = uVar3;\n                        if (iVar2 != '\\0') {\n                            *(*0x20 + -0x58) = 0x4120b4;\n                            fcn.0041e8e0();\n                            *(*0x20 + -0x58) = 0x4120c9;\n                            fcn.0041e000();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00411f74;\n                        }\n                        iVar1 = *(*0x20 + -0x3c);\n                        uVar3 = *(*0x20 + 8);\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                    }\n                    do {\n                        if (iVar2 < 0) goto code_r0x004121b3;\n                        if (1 < -(iVar1 + -1)) {\n                            *(*0x20 + -0x58) = 0x41220d;\n                            fcn.00458f20(2);\ncode_r0x0041220d:\n                            *(*0x20 + -0x58) = 0x412219;\n                            fcn.00458f20(2);\n                            goto code_r0x00412219;\n                        }\n                        *(*0x20 + -0x38) = iVar2;\n                        iVar2 = -(iVar1 + -1) * 5;\n                        *(*0x20 + -0x58) = 0x412125;\n                        iVar4 = fcn.00429620();\n                        if (iVar4 == 0) goto code_r0x004121b3;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x58) = 0x412145;\n                        uVar5 = fcn.0041e460();\n                        *(*0x20 + -0x28) = uVar5;\n                        if (iVar4 == '\\0') goto code_r0x004120e5;\n                        *(*0x20 + -0x58) = 0x41215d;\n                        fcn.0041e8e0();\n                        *(*0x20 + -0x58) = 0x412167;\n                        iVar2 = fcn.0040f620(iVar2, uVar3, param_3, param_4);\n                        if (*(*(*0x20 + -0x28) + 0x38) != iVar2) {\n                            *(*(*0x20 + -0x28) + 0x30) = iVar2;\n                            *(*0x20 + -0x58) = 0x4121a7;\n                            fcn.0041e000();\n                            cVar6 = '\\0';\n                            iVar2 = *(*0x20 + -0x18);\n                            goto code_r0x00411f74;\n                        }\n                        *(*0x20 + -0x58) = 0x412189;\n                        fcn.00429460(*(*0x20 + -0x10), *(*0x20 + 8));\ncode_r0x004120e5:\n                        iVar2 = *(*0x20 + -0x38) + -1;\n                        uVar3 = *(*0x20 + 8);\n                        iVar1 = *(*0x20 + -0x3c);\n                    } while( true );\n                }\n                goto code_r0x004121c8;\n            }\ncode_r0x00412219:\n            *(*0x20 + -0x58) = 0x412226;\n            in_RAX = fcn.00458f20(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x412231;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x004121b3:\n    *(*0x20 + -0x58) = 0x4121c8;\n    fcn.0041e000();\ncode_r0x004121c8:\n    *(*0x20 + -0x3d) = *0x4f6bd0;\n    if (*0x4f6bd0 != '\\0') {\n        *(*0x20 + -0x58) = 0x4121dc;\n        fcn.0044c520();\n    }\n    *(*0x20 + -0x58) = 0x4121e6;\n    iVar2 = fcn.00412340();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    cVar6 = *(*0x20 + -0x3d);\ncode_r0x00411f74:\n    *(*0x20 + -0x18) = iVar2;\n    if ((*0x4f6bd0 != '\\0') && (cVar6 == '\\0')) {\n        *(*0x20 + -0x58) = 0x411f8b;\n        fcn.0044c520();\n        iVar2 = *(*0x20 + -0x18);\n    }\n    if ((*(iVar2 + 0x38) != *(iVar2 + 0x60)) && (*(iVar2 + 0x30) != *(iVar2 + 0x38))) {\n        *(*0x20 + -0x58) = 0x411fb3;\n        fcn.0040f600();\n        iVar2 = *(*0x20 + -0x18);\n        *(iVar2 + 0x40) = *(iVar2 + 0x40) >> (*(iVar2 + 0x30) & 0x3f);\n        return iVar2;\n    }\n    *(*0x20 + -0x58) = 0x411fe8;\n    fcn.00430040();\n    goto code_r0x00411fe9;\n}\n",
        "token_count": 2110
    },
    "00412240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412240(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = *0x516dd8;\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_RBX + 0x60) != 0) {\n                if (*(unaff_RBX + 0x58) == *0x516dd8 + 1) {\n                    *(unaff_RBX + 0x58) = *0x516dd8 - 1;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    *(*0x20 + -0x28) = 0x4122e5;\n                    fcn.0041e8e0();\n                }\n                else {\n                    *(unaff_RBX + 0x58) = *0x516dd8;\n                    if (*(unaff_RBX + 0x38) - *(unaff_RBX + 0x60) < 1) {\n                        *(*0x20 + -0x28) = 0x4122cd;\n                        fcn.00429460((uVar1 >> 1 & 1) * 5);\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4122b3;\n                        fcn.00429460((uVar1 >> 1 & 1) * 5);\n                    }\n                }\n                return;\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x28) = 0x412305;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x412315;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 575
    },
    "00412a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412a40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    ulong unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n            *(*0x20 + -0x48) = in_RAX;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x4000;\n            *(*0x20 + -0x58) = 0x412a85;\n            fcn.0042d580();\n            if (*(*0x20 + -0x30) != 0) {\n                return;\n            }\n            iVar1 = *(*0x20 + 8);\n            uVar2 = *(*0x20 + 0x10);\n            while( true ) {\n                if (uVar2 == 0) {\n                    return;\n                }\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x10) = iVar1;\n                uVar3 = uVar2;\n                while( true ) {\n                    *(*0x20 + -0x18) = uVar3;\n                    if (uVar3 < 0x1000) {\n                        bVar5 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x50) = _sym.imp.kernel32.dll_VirtualFree;\n                        *(*0x20 + -0x48) = iVar1;\n                        *(*0x20 + -0x40) = uVar3;\n                        *(*0x20 + -0x38) = 0x4000;\n                        *(*0x20 + -0x58) = 0x412b30;\n                        fcn.0042d580();\n                        bVar5 = *(*0x20 + -0x30) == 0;\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x18);\n                        iVar1 = *(*0x20 + -0x10);\n                    }\n                    if (!bVar5) break;\n                    uVar3 = uVar3 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar3 < 0x1000) break;\n                uVar2 = uVar2 - uVar3;\n                iVar1 = iVar1 + uVar3;\n            }\n            *(*0x20 + -0x58) = 0x412b6e;\n            fcn.0045a440();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            *(*0x20 + -0x20) = *(*0x20 + -0x50);\n            *(*0x20 + -0x58) = 0x412b8d;\n            fcn.00431980();\n            *(*0x20 + -0x58) = 0x412b9e;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x412ba8;\n            fcn.00431f80();\n            *(*0x20 + -0x58) = 0x412bb9;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x412bc5;\n            fcn.00431f80();\n            *(*0x20 + -0x58) = 0x412bca;\n            fcn.00431be0();\n            *(*0x20 + -0x58) = 0x412bcf;\n            fcn.00431a00();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x58) = 0x412be5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x412bf5;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1121
    },
    "00412c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00412c20(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar7;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n            *(*0x20 + -0x50) = in_RAX;\n            *(*0x20 + -0x48) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x1000;\n            *(*0x20 + -0x38) = 4;\n            *(*0x20 + -0x60) = 0x412c6e;\n            fcn.0042d600();\n            uVar3 = *(*0x20 + 8);\n            if (*(*0x20 + -0x30) == uVar3) {\n                return uVar3;\n            }\n            uVar2 = *(*0x20 + 0x10);\n            uVar4 = uVar2;\n            while( true ) {\n                if (uVar4 == 0) {\n                    return uVar2;\n                }\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + -0x10) = uVar3;\n                uVar5 = uVar4;\n                while( true ) {\n                    *(*0x20 + -0x20) = uVar5;\n                    if (uVar5 < 0x1000) {\n                        bVar7 = false;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0x50) = uVar3;\n                        *(*0x20 + -0x48) = uVar5;\n                        *(*0x20 + -0x40) = 0x1000;\n                        *(*0x20 + -0x38) = 4;\n                        *(*0x20 + -0x60) = 0x412d25;\n                        fcn.0042d600();\n                        bVar7 = *(*0x20 + -0x30) == 0;\n                        uVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                        uVar5 = *(*0x20 + -0x20);\n                        uVar2 = *(*0x20 + 0x10);\n                    }\n                    if (!bVar7) break;\n                    uVar5 = uVar5 >> 1 & 0xfffffffffffff000;\n                }\n                if (uVar5 < 0x1000) break;\n                uVar4 = uVar4 - uVar5;\n                uVar3 = uVar3 + uVar5;\n            }\n            *(*0x20 + -0x60) = 0x412d6a;\n            fcn.0045a440();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            iVar1 = *(*0x20 + -0x58);\n            *(*0x20 + -0x24) = iVar1;\n            if (iVar1 != 8) goto code_r0x00412de5;\n            do {\n                *(*0x20 + -0x60) = 0x412d8d;\n                fcn.00431980();\n                *(*0x20 + -0x60) = 0x412d9e;\n                fcn.00432280();\n                *(*0x20 + -0x60) = 0x412da8;\n                fcn.00431f80();\n                *(*0x20 + -0x60) = 0x412db9;\n                fcn.00432280();\n                *(*0x20 + -0x60) = 0x412dc5;\n                fcn.00431f80();\n                *(*0x20 + -0x60) = 0x412dca;\n                fcn.00431be0();\n                *(*0x20 + -0x60) = 0x412dcf;\n                fcn.00431a00();\n                *(*0x20 + -0x60) = 0x412de5;\n                iVar1 = fcn.00430040();\ncode_r0x00412de5:\n            } while (iVar1 == 0x5af);\n            *(*0x20 + -0x60) = 0x412df1;\n            fcn.00431980();\n            *(*0x20 + -0x60) = 0x412e05;\n            fcn.00432280();\n            *(*0x20 + -0x60) = 0x412e0f;\n            fcn.00431f80();\n            *(*0x20 + -0x60) = 0x412e25;\n            fcn.00432280();\n            *(*0x20 + -0x60) = 0x412e2e;\n            fcn.00431f80();\n            *(*0x20 + -0x60) = 0x412e33;\n            fcn.00431be0();\n            *(*0x20 + -0x60) = 0x412e38;\n            fcn.00431a00();\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x60) = 0x412e49;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x412e59;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1484
    },
    "00412e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412e80(void)\n\n{\n    code *pcVar1;\n    int64_t iStack32;\n    \n    fcn.0042d580();\n    if (iStack32 != 0) {\n        return;\n    }\n    fcn.0045a440();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00430040();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 150
    },
    "004130c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004130c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    ulong *puVar5;\n    ulong arg4;\n    int64_t unaff_R14;\n    \ncode_r0x004130c0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x544a24 == 0) {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + -0x28) = 0x41310d;\n            fcn.00409860();\n            if ((*0x544ae0 != NULL) && (*(*0x544ae0 + 2) != 0x65)) goto code_r0x0041318f;\n            if (*0x544ad0 != NULL) goto code_r0x0041316b;\n            *(*0x20 + -0x28) = 0x41313c;\n            *0x544ad0 = fcn.0040bd80(0x5474b8);\n            **0x544ad0 = *0x544a70;\n            *0x544a70 = *0x544ad0;\n            if (*0x544dc0 != '\\0') goto code_r0x0041316b;\n            iVar2 = 0;\n            do {\n                if (iVar2 < 0x40) {\n                    uVar1 = iVar2 + (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 2) * -5\n                    ;\n                    if (4 < uVar1) goto code_r0x004132d3;\n                }\n                else {\ncode_r0x0041316b:\n                    puVar5 = *0x544ad0;\n                    puVar3 = *0x544ad0 + 1;\n                    *0x544ad0 = (*0x544ad0)[1];\n                    *puVar3 = *0x544ae0;\n                    *0x544ae0 = puVar5;\ncode_r0x0041318f:\n                    puVar3 = *0x544ae0;\n                    uVar1 = *(*0x544ae0 + 2);\n                    if (uVar1 < 0x65) {\n                        LOCK();\n                        *(*0x544ae0 + 2) = *(*0x544ae0 + 2) + 1;\n                        iVar2 = uVar1 * 5;\n                        puVar5 = puVar3 + uVar1 * 5 + 4;\n                        if (*0x544c10 == 0) {\n                            puVar3[uVar1 * 5 + 3] = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x4131f8;\n                            fcn.00458c20(iVar2, puVar3, puVar5);\n                        }\n                        arg4 = *(*0x20 + 0x18);\n                        puVar3[iVar2 + 5] = arg4;\n                        if (*0x544c10 == 0) {\n                            puVar3[iVar2 + 6] = *(*0x20 + 0x20);\n                            puVar3[iVar2 + 7] = *(*0x20 + 0x28);\n                            puVar3[iVar2 + 4] = *(*0x20 + 8);\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x413238;\n                            fcn.00458b80(*(*0x20 + 0x20), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x413245;\n                            fcn.00458b80(*(*0x20 + 0x28), puVar3, puVar5, arg4);\n                            *(*0x20 + -0x28) = 0x413252;\n                            fcn.00458b80(*(*0x20 + 8), puVar3, puVar5, arg4);\n                        }\n                        *(*0x20 + -0x28) = 0x413265;\n                        fcn.00409a80();\n                        LOCK();\n                        *0x544a14 = *0x544a14 | 8;\n                        return;\n                    }\n                    iVar2 = 0x65;\n                    *(*0x20 + -0x28) = 0x413289;\n                    uVar1 = fcn.00458f20(0x65);\n                }\n                unaff_RSI = 0x544dc0;\n                *(iVar2 + 0x544dc0) = *(uVar1 + 0x4d9274);\n                iVar2 = iVar2 + 1;\n            } while( true );\n        }\n        goto code_r0x004132dd;\n    }\n    goto code_r0x004132ef;\ncode_r0x004132d3:\n    arg1 = 5;\n    *(*0x20 + -0x28) = 0x4132dd;\n    fcn.00458f20(5);\ncode_r0x004132dd:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x28) = 0x4132ee;\n    in_RAX = fcn.00430040();\ncode_r0x004132ef:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + 0x18) = arg1;\n    *(puVar4 + 0x20) = unaff_RDI;\n    *(puVar4 + 0x28) = unaff_RSI;\n    *(puVar4 + -8) = 0x41330d;\n    fcn.004568e0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    arg1 = *(puVar4 + 0x18);\n    unaff_RDI = *(puVar4 + 0x20);\n    unaff_RSI = *(puVar4 + 0x28);\n    *0x20 = puVar4;\n    goto code_r0x004130c0;\n}\n",
        "token_count": 1581
    },
    "00413340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413340(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t *arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 0x4001) {\n                if (unaff_RBX < 8) {\n                    unaff_RBX = 8;\n                }\n                *in_RAX = unaff_RBX;\n                if (*0x544c10 == 0) {\n                    in_RAX[1] = arg1;\n                    in_RAX[2] = unaff_RDI;\n                }\n                else {\n                    arg2 = in_RAX + 1;\n                    *(*0x20 + -0x20) = 0x41339f;\n                    in_R8 = unaff_RDI;\n                    iVar2 = fcn.00458b80(arg1, arg2, unaff_RDI, in_R9);\n                    unaff_RDI = iVar2 + 0x10;\n                    *(*0x20 + -0x20) = 0x4133a8;\n                    in_RAX = fcn.00458c00(arg1, arg2, in_R8, in_R9);\n                }\n                *(in_RAX + 3) = in_XMM15;\n                *(in_RAX + 5) = 0;\n                if (unaff_RBX != 0) {\n                    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x4000);\n                    *(in_RAX + 0x2c) = SUB164(auVar1 / ZEXT816(unaff_RBX), 0) * unaff_RBX;\n                    in_RAX[6] = 0;\n                    if (*0x544c10 == 0) {\n                        in_RAX[7] = unaff_RSI;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x4133ed;\n                        fcn.00458be0(in_RAX, SUB168(auVar1 % ZEXT816(unaff_RBX), 0), in_R8, in_R9);\n                    }\n                    *(in_RAX + 8) = 1;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x413405;\n                fcn.0042e760();\n            }\n            unaff_RBX = 0x20;\n            *(*0x20 + -0x20) = 0x413416;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x413435;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 925
    },
    "00413460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t * fcn.00413460(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = *in_RAX;\n            if (uVar3 != 0) {\n                puVar4 = in_RAX[3];\n                if (puVar4 != NULL) {\n                    in_RAX[3] = *puVar4;\n                    in_RAX[6] = in_RAX[6] + *in_RAX;\n                    if (*(in_RAX + 8) != '\\0') {\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x38) = 0x4134b6;\n                        fcn.00459580();\n                        puVar4 = *(*0x20 + -0x18);\n                    }\n                    return puVar4;\n                }\n                *(*0x20 + 8) = in_RAX;\n                if (*(in_RAX + 5) < uVar3) {\n                    uVar3 = in_RAX[7];\n                    *(*0x20 + -0x38) = 0x4134e6;\n                    uVar3 = fcn.0040bd80(uVar3);\n                    in_RAX = *(*0x20 + 8);\n                    in_RAX[4] = uVar3;\n                    *(in_RAX + 5) = *(in_RAX + 0x2c);\n                }\n                puVar4 = in_RAX[4];\n                ppcVar1 = in_RAX[1];\n                if (ppcVar1 != NULL) {\n                    *(*0x20 + -0x10) = puVar4;\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x38) = 0x413516;\n                    (*pcVar2)();\n                    in_RAX = *(*0x20 + 8);\n                    puVar4 = *(*0x20 + -0x10);\n                }\n                in_RAX[4] = in_RAX[4] + *in_RAX;\n                *(in_RAX + 5) = *(in_RAX + 5) - *in_RAX;\n                in_RAX[6] = in_RAX[6] + *in_RAX;\n                return puVar4;\n            }\n            *(*0x20 + -0x38) = 0x413546;\n            fcn.00431980();\n            *(*0x20 + -0x38) = 0x413557;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x41355c;\n            fcn.00431a00();\n            *(*0x20 + -0x38) = 0x41356d;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x413578;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 826
    },
    "00413620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00413620(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    ulong *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    noname_0 = fcn.00403fe0();\n    puVar1 = fcn.0040ba20();\n    *puVar1 = 0x413780;\n    if (*0x544c10 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.00458b80(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043ab40();\n    puVar1 = fcn.0040ba20();\n    *puVar1 = 0x413720;\n    if (*0x544c10 == 0) {\n        puVar1[1] = noname_0;\n    }\n    else {\n        fcn.00458b80(noname_0, param_2, param_3, param_4);\n    }\n    fcn.0043ab40();\n    fcn.00404f20();\n    fcn.00404f20();\n    *0x5484f8 = 1;\n    return;\n}\n",
        "token_count": 333
    },
    "004138a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004138a0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((*0x5484f8 == '\\0' || *0x544a44 != 0) || (*0x544a24 != 0)) {\n        return 0;\n    }\n    if (in_RAX == 0) {\n        uVar1 = fcn.0041b720();\n        return uVar1 & 0xffffffffffffff00 | uVar1 <= *0x545350;\n    }\n    if (in_RAX == 1) {\n        if (-1 < *0x545300) {\n            if (*0x5484e8 == 0) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = *0x5484e8 & 0xffffffffffffff00 | *0x4d9298 < unaff_RBX - *0x5484e8;\n            }\n            return uVar1 & 0xffffffff;\n        }\n        return 0;\n    }\n    if (in_RAX == 2) {\n        return 0 < arg1 - *0x4f2210;\n    }\n    return 1;\n}\n",
        "token_count": 336
    },
    "004139c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413d8c)\n// WARNING: Removing unreachable block (ram,0x00413da3)\n\nvoid fcn.004139c0(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    char cVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            piVar3 = *(unaff_R14 + 0x30);\n            if (((*piVar3 == unaff_R14) || (iVar2 = *(piVar3 + 0x1b),  1 < iVar2)) || (piVar3[0x1a] != 0)) {\n                iVar2 = *(piVar3 + 0x1b);\n                *(piVar3 + 0x1b) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(piVar3 + 0x1b) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            *(*0x20 + -0x4c) = arg1;\n            *(*0x20 + -0x30) = unaff_RBX;\n            *(*0x20 + -0x38) = in_RAX;\n            while( true ) {\n                *(*0x20 + -0x88) = 0x413a85;\n                cVar4 = fcn.004138a0(arg1);\n                if (cVar4 == '\\0') {\n                    bVar9 = false;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x413a92;\n                    iVar5 = fcn.0041e500();\n                    bVar9 = iVar5 != -1;\n                }\n                if (!bVar9) break;\n                *0x4f1e14 = *0x4f1e14 + 1;\n                arg1 = *(*0x20 + -0x4c);\n            }\n            *(*0x20 + -0x88) = 0x413ab5;\n            fcn.00440360(0);\n            *(*0x20 + -0x88) = 0x413ac8;\n            cVar4 = fcn.004138a0(*(*0x20 + -0x4c));\n            if (cVar4 == '\\0') {\n                *(*0x20 + -0x88) = 0x413bab;\n                fcn.004406c0(0);\n                return;\n            }\n            if (*0x544e78 == 1) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = 0;\n                if (*0x544e78 == 2) {\n                    uVar6 = 2;\n                }\n            }\n            *(*0x20 + -0x40) = uVar6;\n            *(*0x20 + -0x88) = 0x413b19;\n            fcn.00440360(0);\n            *(*0x20 + -0x88) = 0x413b31;\n            fcn.00440360(0);\n            iVar5 = *(*0x20 + -0x38);\n            *0x4f21d8 = iVar5 == 2;\n            if (*0x4f6bd0 != '\\0') {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x28) = *0x4f6c00;\n                *(*0x20 + -0x88) = 0x413b7c;\n                fcn.0044b220(*0x20 + -0x28);\n                *0x4f6c00 = *0x4f6c00 + 1;\n                iVar5 = *(*0x20 + -0x38);\n            }\n            iVar7 = 0;\n            while( true ) {\n                if (*0x4f1c78 <= iVar7) {\n                    *(*0x20 + -0x88) = 0x413be5;\n                    fcn.004151e0();\n                    *(*0x20 + -0x80) = 0x47cb18;\n                    *(*0x20 + -0x88) = 0x413bf5;\n                    fcn.004567a0();\n                    *0x4f2214 = *0x544a28;\n                    *0x4f2218 = *0x544a28;\n                    if (*0x544a30 < *0x544a28) {\n                        *0x4f2214 = *0x544a30;\n                    }\n                    *0x4f2250 = *0x545350;\n                    *0x4f2240 = 0;\n                    *0x4f21d0 = *(*0x20 + -0x40);\n                    *(*0x20 + -0x88) = 0x413c54;\n                    fcn.0045a8a0();\n                    *0x4f2220 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x48) = *0x4f2220;\n                    *0x4f2248 = *0x4f2220;\n                    if (*0x4f6bd0 != '\\0') {\n                        *(*0x20 + -0x28) = 0;\n                        *(*0x20 + -0x28) = 1;\n                        *(*0x20 + -0x88) = 0x413cb7;\n                        fcn.0044b220(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x80) = 0x47cc78;\n                    *(*0x20 + -0x88) = 0x413cc7;\n                    fcn.004567a0();\n                    *(*0x20 + -0x80) = 0x47cb20;\n                    *(*0x20 + -0x88) = 0x413ce9;\n                    fcn.004567a0();\n                    uVar10 = 0;\n                    uVar11 = 0;\n                    uVar12 = 0;\n                    uVar13 = 0;\n                    iVar7 = **(in_GS_OFFSET + *0x544bc0);\n                    *(*0x20 + -0x88) = 0x413d05;\n                    fcn.00416080();\n                    LOCK();\n                    *0x4f2210 = *0x4f2210 + 1;\n                    arg3 = *(*0x20 + -0x4c);\n                    *(*0x20 + -0x88) = 0x413d3d;\n                    fcn.0041a6a0(*0x544a28, iVar5, arg3);\n                    *(*0x20 + -0x88) = 0x413d53;\n                    fcn.00416440(*(*0x20 + -0x48));\n                    if (*(*0x20 + -0x40) != 0) {\n                        *(*0x20 + -0x88) = 0x413d65;\n                        fcn.0043e040();\n                    }\n                    *0x544a24 = 1;\n                    *0x544c14 = 1;\n                    *0x544c10 = 1;\n                    *0x4f2150 = 0xffffffff;\n                    *0x4f2160 = 0xffffffff;\n                    *(*0x20 + -0x88) = 0x413dca;\n                    fcn.00416c60(1, 0x544a24, arg3);\n                    *(*0x20 + -0x88) = 0x413dcf;\n                    fcn.0041a520();\n                    *0x544a1c = 1;\n                    piVar1 = *(iVar7 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x20) = *(iVar7 + 0x30);\n                    *(*0x20 + -0x18) = CONCAT412(uVar13, CONCAT48(uVar12, CONCAT44(uVar11, uVar10)));\n                    *(*0x20 + -0x18) = 0x413f80;\n                    *(*0x20 + -0x10) = *0x20 + -0x48;\n                    *(*0x20 + -0x80) = *0x20 + -0x18;\n                    *(*0x20 + -0x88) = 0x413e1b;\n                    fcn.004567a0();\n                    iVar5 = **(in_GS_OFFSET + *0x544bc0);\n                    *(*0x20 + -0x88) = 0x413e3e;\n                    fcn.004406c0(0);\n                    iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                    *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                    if (iVar2 == 1) {\n                        if (*(iVar5 + 0xb1) == '\\0') {\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                        else {\n                            *(iVar5 + 0x10) = 0xfffffffffffffade;\n                            bVar9 = *(*0x20 + -0x40) == 0;\n                        }\n                    }\n                    else {\n                        bVar9 = *(*0x20 + -0x40) == 0;\n                    }\n                    if (!bVar9) {\n                        *(*0x20 + -0x88) = 0x413e95;\n                        fcn.00456720();\n                    }\n                    *(*0x20 + -0x88) = 0x413ea6;\n                    fcn.004406c0(0);\n                    return;\n                }\n                piVar1 = *(*0x4f1c70 + iVar7 * 8);\n                iVar2 = *(*(piVar1 + 0x10) + 0x488);\n                if (iVar2 != *0x516dd8) break;\n                iVar7 = iVar7 + 1;\n            }\n            *(*0x20 + -0x50) = iVar2;\n            *(*0x20 + -0x4c) = *0x516dd8;\n            *(*0x20 + -0x30) = *piVar1;\n            *(*0x20 + -0x88) = 0x413ec6;\n            arg1 = *0x4f1c78;\n            fcn.00431980();\n            *(*0x20 + -0x88) = 0x413ed7;\n            fcn.00432280();\n            *(*0x20 + -0x88) = 0x413ee5;\n            fcn.00432080();\n            *(*0x20 + -0x88) = 0x413ef6;\n            fcn.00432280();\n            *(*0x20 + -0x88) = 0x413f05;\n            fcn.00431f80();\n            *(*0x20 + -0x88) = 0x413f16;\n            fcn.00432280();\n            *(*0x20 + -0x88) = 0x413f1f;\n            fcn.00431f80();\n            *(*0x20 + -0x88) = 0x413f25;\n            fcn.00431be0();\n            *(*0x20 + -0x88) = 0x413f2a;\n            fcn.00431a00();\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x88) = 0x413f3b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + -8) = 0x413f4f;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 3029
    },
    "00414020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00414020(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong uVar3;\n    ulong arg1;\n    uchar *arg1_00;\n    ulong arg2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    char cStack41;\n    ulong uStack40;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00440360(0);\n    while ((*0x544a24 == 1 && (*0x4f2150 == *0x4f2160))) {\n        if (*0x4f20c0 == 0) {\n            if (*0x4f2148 < *0x4f214c) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n        }\n        else {\n            bVar2 = true;\n        }\n        if (bVar2) break;\n        arg1 = 0;\n        fcn.00440360(0);\n        *0x544a20 = 0;\n        fcn.004567a0();\n        if (*0x544a20 == 0) {\n            fcn.0045a8a0();\n            uVar3 = 0x47cae0;\n            *0x4f2230 = 0x47cae0;\n            *0x4f2248 = 0x47cae0;\n            iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n            *(iVar1 + 0xd0) = 5;\n            if (*0x544c10 == 0) {\n                arg2 = 0x475a7e;\n                *(iVar1 + 200) = 0x475a7e;\n            }\n            else {\n                arg2 = 0x475a7e;\n                uVar3 = fcn.00458ba0(arg1, 0x475a7e, param_3, param_4);\n            }\n            uStack40 = uVar3;\n            if (*0x4f6bd0 != '\\0') {\n                uStack32 = 0;\n                fcn.0044b220(&uStack32);\n            }\n            fcn.004567a0();\n            cStack41 = '\\0';\n            auStack24 = CONCAT88(&cStack41, 0x414340);\n            arg1_00 = auStack24;\n            fcn.004567a0();\n            if (cStack41 == '\\0') {\n                fcn.00444f60();\n                *0x544a1c = 0;\n                fcn.00416440(uStack40);\n                fcn.00418180();\n                fcn.004406c0(0);\n                fcn.0043e040();\n                fcn.0041aba0(*0x544a28);\n                fcn.00414400();\n                return;\n            }\n            iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n            *(iVar1 + 0xd0) = 0;\n            if (*0x544c10 == 0) {\n                *(iVar1 + 200) = 0;\n            }\n            else {\n                fcn.00458a80(arg1_00, arg2, param_3, param_4);\n            }\n            fcn.004567a0();\n            fcn.004406c0(0);\n        }\n        else {\n            fcn.004406c0(0);\n        }\n    }\n    fcn.004406c0(0);\n    return;\n}\n",
        "token_count": 860
    },
    "004158e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004158e0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg2;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (0 < *0x544ea8) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x78) = 0x41590c;\n                fcn.004289e0();\n                in_RAX = *(*0x20 + 8);\n            }\n            if (*0x544a24 == 2) {\n                *(*0x20 + -0x20) = *0x4f20c0;\n                *0x4f2158 = in_RAX;\n                if ((*0x4f20c0 == 0) && (arg2 = *0x4f2148,  *0x4f214c <= *0x4f2148)) {\n                    if (0 < *0x544e6c) {\n                        *(*0x20 + -0x78) = 0x41595a;\n                        fcn.00416e60();\n                    }\n                    if (*0x4f20c0 == 0) {\n                        *0x4f21a8 = in_XMM15;\n                        if (*0x544c10 == 0) {\n                            *0x4f21a0 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x78) = 0x415994;\n                            fcn.00458b80(0, arg2, arg3, in_R9);\n                        }\n                        *(*0x20 + -0x10) = *0x4f1c70;\n                        *(*0x20 + -0x28) = *0x4f1c78;\n                        iVar3 = 0;\n                        iVar4 = *0x4f1c70;\n                        iVar5 = *0x4f1c78;\n                        while( true ) {\n                            iVar2 = *0x4f1c78;\n                            iVar1 = *0x4f1c70;\n                            if (iVar5 <= iVar3) {\n                                for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n                                    iVar5 = *(*(iVar1 + iVar4 * 8) + 0x40);\n                                    if (iVar5 != 0) {\n                                        *(iVar5 + 8) = 0;\n                                    }\n                                }\n                                *(*0x20 + -0x78) = 0x415a75;\n                                fcn.0041b3c0();\n                                return;\n                            }\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x18) = *(iVar4 + iVar3 * 8);\n                            if (*0x544e6c < 1) {\n                                *(*0x20 + -0x78) = 0x415a05;\n                                fcn.00429c80();\n                            }\n                            else {\n                                *(*0x20 + -0x78) = 0x4159f1;\n                                fcn.00429dc0();\n                            }\n                            iVar4 = *(*(*0x20 + -0x18) + 0x1238);\n                            if ((iVar4 != 0) &&\n                               ((*(iVar4 + 0x10) != 0 || (*(*(*(*0x20 + -0x18) + 0x1240) + 0x10) != 0)))) break;\n                            *(*0x20 + -0x78) = 0x4159bb;\n                            fcn.00420040();\n                            iVar3 = *(*0x20 + -0x30) + 1;\n                            iVar4 = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x28);\n                        }\n                        *(*0x20 + -0x78) = 0x415a85;\n                        fcn.00431980();\n                        *(*0x20 + -0x38) = **(*0x20 + -0x18);\n                        *(*0x20 + -0x59) = *(*(*0x20 + -0x18) + 0x496);\n                        *(*0x20 + -0x78) = 0x415aa5;\n                        fcn.00431980();\n                        *(*0x20 + -0x78) = 0x415ab6;\n                        fcn.00432280();\n                        *(*0x20 + -0x78) = 0x415ac5;\n                        fcn.00432080();\n                        *(*0x20 + -0x78) = 0x415ad6;\n                        fcn.00432280();\n                        *(*0x20 + -0x78) = 0x415ae5;\n                        fcn.00431c20();\n                        *(*0x20 + -0x78) = 0x415aea;\n                        fcn.00431a00();\n                        if (*(*(*0x20 + -0x18) + 0x1238) == 0) {\n                            *(*0x20 + -0x78) = 0x415bb1;\n                            fcn.00431980();\n                            *(*0x20 + -0x78) = 0x415bc5;\n                            fcn.00432280();\n                            *(*0x20 + -0x78) = 0x415bca;\n                            fcn.00431a00();\n                        }\n                        else {\n                            *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1238) + 0x10);\n                            *(*0x20 + -0x78) = 0x415b0d;\n                            fcn.00431980();\n                            *(*0x20 + -0x78) = 0x415b1e;\n                            fcn.00432280();\n                            *(*0x20 + -0x78) = 0x415b28;\n                            fcn.00432080();\n                            *(*0x20 + -0x78) = 0x415b2d;\n                            fcn.00431a00();\n                        }\n                        if (*(*(*0x20 + -0x18) + 0x1240) == 0) goto code_r0x00415b8c;\n                        *(*0x20 + -0x28) = *(*(*(*0x20 + -0x18) + 0x1240) + 0x10);\n                        *(*0x20 + -0x78) = 0x415b4c;\n                        fcn.00431980();\n                        *(*0x20 + -0x78) = 0x415b5d;\n                        fcn.00432280();\n                        *(*0x20 + -0x78) = 0x415b67;\n                        fcn.00432080();\n                        *(*0x20 + -0x78) = 0x415b6c;\n                        fcn.00431a00();\n                        do {\n                            *(*0x20 + -0x78) = 0x415b71;\n                            fcn.00431980();\n                            *(*0x20 + -0x78) = 0x415b76;\n                            fcn.00431be0();\n                            *(*0x20 + -0x78) = 0x415b7b;\n                            fcn.00431a00();\n                            *(*0x20 + -0x78) = 0x415b8c;\n                            fcn.00430040();\ncode_r0x00415b8c:\n                            *(*0x20 + -0x78) = 0x415b91;\n                            fcn.00431980();\n                            *(*0x20 + -0x78) = 0x415ba5;\n                            fcn.00432280();\n                            *(*0x20 + -0x78) = 0x415baa;\n                            fcn.00431a00();\n                        } while( true );\n                    }\n                    *(*0x20 + -0x78) = 0x415be5;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x40) = *0x4f2148;\n                *(*0x20 + -0x48) = *0x4f214c;\n                *(*0x20 + -0x28) = *0x4f2168;\n                *(*0x20 + -0x30) = *0x4f2170;\n                *(*0x20 + -0x50) = *0x4f2178;\n                *(*0x20 + -0x58) = *0x4f2180;\n                *(*0x20 + -0x78) = 0x415c30;\n                fcn.00431980();\n                *(*0x20 + -0x78) = 0x415c45;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415c4f;\n                fcn.004320e0();\n                *(*0x20 + -0x78) = 0x415c65;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415c6f;\n                fcn.00431f80();\n                *(*0x20 + -0x78) = 0x415c85;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415c8f;\n                fcn.00431f80();\n                *(*0x20 + -0x78) = 0x415ca5;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415caf;\n                fcn.00432080();\n                *(*0x20 + -0x78) = 0x415cc5;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415ccf;\n                fcn.00432080();\n                *(*0x20 + -0x78) = 0x415ce5;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415cef;\n                fcn.00432080();\n                *(*0x20 + -0x78) = 0x415d05;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x415d0f;\n                fcn.00432080();\n                *(*0x20 + -0x78) = 0x415d14;\n                fcn.00431be0();\n                *(*0x20 + -0x78) = 0x415d19;\n                fcn.00431a00();\n                *(*0x20 + -0x78) = 0x415d2c;\n                fcn.0042f8a0();\n            }\n            *(*0x20 + -0x78) = 0x415d3d;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x415d48;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2667
    },
    "00415d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00415f0a)\n\nvoid fcn.00415d60(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544a24 == 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x415d99;\n                fcn.00409860();\n                *0x516dd8 = *0x516dd8 + 2;\n                *0x4f1e1c = 0;\n                *0x516e00 = 0;\n                *0x517098 = *0x517080;\n                *0x5170a0 = *0x517088;\n                if (*0x544c10 == 0) {\n                    *0x517090 = *0x517078;\n                }\n                else {\n                    *(*0x20 + -0x28) = 0x415dfb;\n                    fcn.00458b80(*0x517078, *0x517080, param_3, param_4);\n                }\n                *0x516e20 = 0;\n                *0x516e28 = 0;\n                *(*0x20 + -0x28) = 0x415e25;\n                fcn.00409a80();\n                *0x4f1e20 = 0;\n                if (*(*0x20 + 8) != 2) {\n                    *(*0x20 + -0x28) = 0x415e75;\n                    fcn.00409860();\n                    if (*0x4f1e10 != '\\0') {\n                        *0x4f1e10 = '\\0';\n                        *(*0x20 + -0x28) = 0x415e98;\n                        fcn.00433da0(1);\n                    }\n                    *(*0x20 + -0x28) = 0x415ea6;\n                    fcn.00409a80();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x415e4a;\n                fcn.00409860();\n                *0x516e18 = 0;\n                *(*0x20 + -0x28) = 0x415e65;\n                fcn.00409a80();\n                while( true ) {\n                    *(*0x20 + -0x28) = 0x415ebb;\n                    iVar2 = fcn.0041e500();\n                    if (iVar2 == -1) break;\n                    *0x4f1e18 = *0x4f1e18 + 1;\n                }\n                *(*0x20 + -0x28) = 0x415ecb;\n                fcn.00420760();\n                do {\n                    *(*0x20 + -0x28) = 0x415ed2;\n                    cVar1 = fcn.00420860();\n                } while (cVar1 != '\\0');\n                *0x544a2c = ((*0x544a2c >> 1) + (((*0x544a2c >> 1) + 1) / 0x6000000) * -0x6000000 + 1) * 2;\n                LOCK();\n                *(*0x20 + -0x28) = 0x415f19;\n                fcn.00427980();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x415f34;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x415f3f;\n        fcn.0045b2e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1000
    },
    "00416080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416080(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f1630 != NULL) {\n        (***0x4f1630)();\n    }\n    arg2 = *0x4f1c98;\n    iVar3 = *0x4f1c90;\n    for (iVar2 = 0; iVar2 < arg2; iVar2 = iVar2 + 1) {\n        puVar1 = *(iVar3 + iVar2 * 8);\n        if (*0x544c10 != '\\0') {\n            fcn.00402e00();\n        }\n        *puVar1 = 0;\n    }\n    fcn.00409860();\n    iVar3 = *0x4f2768;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 8);\n        if (*0x544c10 == 0) {\n            *(iVar3 + 8) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.00458b80(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x544c10 == 0) {\n        *0x4f2768 = 0;\n    }\n    else {\n        fcn.00458b80(0, arg2, param_3, param_4);\n    }\n    fcn.00409a80();\n    fcn.00409860();\n    iVar3 = *0x4f2778;\n    while (iVar3 != 0) {\n        arg2 = *(iVar3 + 0x28);\n        if (*0x544c10 == 0) {\n            *(iVar3 + 0x28) = 0;\n            iVar3 = arg2;\n        }\n        else {\n            iVar3 = arg2;\n            fcn.00458b80(0, arg2, param_3, param_4);\n            arg2 = iVar3;\n        }\n    }\n    if (*0x544c10 == 0) {\n        *0x4f2778 = 0;\n    }\n    else {\n        fcn.00458b80(0, arg2, param_3, param_4);\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 611
    },
    "00416220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * fcn.00416220(uint64_t arg1)\n\n{\n    uchar *in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    uint64_t unaff_RBX;\n    uint64_t arg1_00;\n    uchar *puVar8;\n    uchar *puVar9;\n    uint64_t unaff_RDI;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    int64_t aiStack96 [3];\n    char acStack72 [8];\n    int32_t *apiStack64 [5];\n    uchar auStack24 [16];\n    \n    puVar4 = &stack0xfffffffffffffff8;\n    if (unaff_RDI < 10000000) {\n        uVar5 = (unaff_RDI >> 1) / 500;\n        if (uVar5 == 0) {\n            if (unaff_RBX != 0) {\n                *in_RAX = 0x30;\n                if (arg1 != 0) {\n                    return in_RAX;\n                }\n                uVar5 = 0;\n                fcn.00458fa0(1, 0);\n            }\n            arg1 = 0;\n            iVar1 = fcn.00458f20(0);\n            goto code_r0x004162bb;\n        }\n        iVar1 = 3;\n        for (; 99 < uVar5; uVar5 = uVar5 / 10) {\ncode_r0x004162bb:\n            iVar1 = iVar1 + -1;\n        }\n        arg1_00 = unaff_RBX - iVar1;\n        uVar2 = arg1_00 - 1;\n        uVar6 = unaff_RBX - 1;\ncode_r0x004162ec:\n        uVar10 = uVar6;\n        if ((uVar5 < 10) && (uVar10 < uVar2)) {\n            if (uVar10 < unaff_RBX) {\n                in_RAX[uVar10] = uVar5 + '0';\n                return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n            }\n            fcn.00458f20(unaff_RBX);\n            goto code_r0x0041637e;\n        }\n        uVar6 = uVar5 / 10;\n        arg1_00 = uVar5 % 10;\n        uVar5 = uVar6;\n        if (uVar10 < unaff_RBX) goto code_r0x0041631a;\n        goto code_r0x00416386;\n    }\n    uVar5 = unaff_RDI / 1000000;\n    uVar2 = unaff_RBX - 1;\n    arg1_00 = unaff_RBX;\n    uVar6 = uVar2;\ncode_r0x00416397:\n    uVar10 = uVar6;\n    cVar7 = uVar5;\n    if ((uVar5 < 10) && (uVar10 < uVar2)) {\n        if (uVar10 < arg1_00) {\n            in_RAX[uVar10] = cVar7 + '0';\n            return in_RAX + (-(arg1 - uVar10) >> 0x3f & uVar10);\n        }\n        fcn.00458f20(arg1_00);\n        goto code_r0x0041642c;\n    }\n    uVar5 = uVar5 / 10;\n    if (uVar10 < arg1_00) goto code_r0x004163cb;\n    goto code_r0x00416434;\ncode_r0x0041631a:\n    in_RAX[uVar10] = arg1_00 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 != uVar2) goto code_r0x004162ec;\n    if (uVar6 < unaff_RBX) {\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n        goto code_r0x004162ec;\n    }\ncode_r0x0041637e:\n    fcn.00458f20(unaff_RBX);\ncode_r0x00416386:\n    arg1 = unaff_RBX;\n    uVar2 = arg1;\n    uVar6 = fcn.00458f20(arg1);\n    goto code_r0x00416397;\ncode_r0x004163cb:\n    in_RAX[uVar10] = cVar7 + uVar5 * -10 + '0';\n    uVar6 = uVar10 - 1;\n    if (uVar6 == uVar2) {\n        if (arg1_00 <= uVar6) {\ncode_r0x0041642c:\n            fcn.00458f20(arg1_00);\ncode_r0x00416434:\n            uVar5 = arg1_00;\n            piVar3 = fcn.00458f20(arg1_00);\n            puVar8 = auStack24;\n            do {\n                cVar7 = arg1_00;\n                puVar9 = puVar8;\n                if (*(unaff_R14 + 0x10) <= puVar8 && puVar8 != *(unaff_R14 + 0x10)) {\n                    puVar9 = puVar8 + -0x20;\n                    *(puVar8 + -8) = puVar4;\n                    puVar4 = puVar8 + -8;\n                    LOCK();\n                    if (*piVar3 == 0) {\n                        *piVar3 = 1;\n                        if (*(piVar3 + 8) != cVar7) {\n                            *(puVar8 + -0x10) = piVar3;\n                            puVar8[0x10] = cVar7;\n                            *(puVar8 + -0x28) = 0x416488;\n                            puVar4 = fcn.00416640();\n                            iVar1 = *(puVar8 + -0x10);\n                            *(iVar1 + 0x20) = puVar8[0x10];\n                            *(iVar1 + 0x21) = 1;\n                            return puVar4;\n                        }\n                        *(puVar8 + -0x28) = 0x4164b4;\n                        fcn.00430040();\n                    }\n                    cVar7 = '/';\n                    *(puVar8 + -0x28) = 0x4164c5;\n                    piVar3 = fcn.00430040();\n                }\n                *(puVar9 + 8) = piVar3;\n                puVar9[0x10] = cVar7;\n                *(puVar9 + 0x18) = uVar5;\n                *(puVar9 + -8) = 0x4164d9;\n                fcn.004568e0();\n                piVar3 = *(puVar9 + 8);\n                arg1_00 = puVar9[0x10];\n                uVar5 = *(puVar9 + 0x18);\n                puVar8 = puVar9;\n            } while( true );\n        }\n        in_RAX[uVar10 - 1] = 0x2e;\n        uVar6 = uVar10 - 2;\n    }\n    goto code_r0x00416397;\n}\n",
        "token_count": 1636
    },
    "00416500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416500(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x21) != '\\0') {\n                iVar2 = *(in_RAX + 0x40);\n                if (iVar2 <= unaff_RBX) {\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + 8) = in_RAX;\n                    iVar1 = *(in_RAX + 0x4c);\n                    *(*0x20 + -0x28) = 0x416545;\n                    fcn.00416840((unaff_RBX - iVar2) * iVar1);\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x40) = unaff_RBX;\n                *(in_RAX + 0x21) = 0;\n                *(*0x20 + -0x28) = 0x41655d;\n                fcn.004168e0();\n                return;\n            }\n            unaff_RBX = 0x2f;\n            *(*0x20 + -0x28) = 0x416578;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x416588;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 529
    },
    "004165a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004165a0(void)\n\n{\n    uint32_t *in_RAX;\n    uint64_t uVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX != 0) {\n                return *in_RAX;\n            }\n            *in_RAX = 1;\n            if (*(in_RAX + 0x21) == '\\0') {\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x4165dc;\n                fcn.00416640();\n                *(*0x20 + -0x28) = 0x4165e6;\n                uVar1 = fcn.004168e0();\n                return uVar1;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x28) = 0x41660b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41661b;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 436
    },
    "004168e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004168e0(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *in_RAX;\n            *in_RAX = 0;\n            if (iVar1 == 1) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x416918;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x416925;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 280
    },
    "00416c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416c60(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f1618 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x4f1618;\n        iVar5 = (*0x4f1618)[1];\n    }\n    *0x4f2168 = in_XMM15;\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xd8) - *(iVar1 + 0xd0)) + 0x3ffffU >> 0x12;\n        if (*0x4f2168 < uVar8) {\n            *0x4f2168 = CONCAT88(*0x4f2170, uVar8);\n        }\n    }\n    if (*0x4f1618 == NULL) {\n        iVar5 = 0;\n        iVar6 = 0;\n    }\n    else {\n        iVar6 = **0x4f1618;\n        iVar5 = (*0x4f1618)[1];\n    }\n    for (iVar7 = 0; iVar7 < iVar5; iVar7 = iVar7 + 1) {\n        iVar1 = *(iVar6 + iVar7 * 8);\n        uVar8 = (*(iVar1 + 0xe8) - *(iVar1 + 0xe0)) + 0x3ffffU >> 0x12;\n        if (*0x4f2170 < uVar8) {\n            *0x4f2168 = CONCAT88(uVar8, *0x4f2168);\n        }\n    }\n    *0x5170b0 = *0x517080;\n    *0x5170b8 = *0x517080;\n    if (*0x544c10 == 0) {\n        *0x5170a8 = *0x517078;\n        *0x4f2178 = *0x517080;\n    }\n    else {\n        *0x4f2178 = fcn.00458b80(*0x517078, iVar7, arg3, in_R9);\n    }\n    *0x4f21a8 = *0x4f1c58;\n    *0x4f21b0 = *0x4f1c58;\n    if (*0x544c10 == 0) {\n        *0x4f21a0 = *0x4f1c50;\n        *0x4f2180 = *0x4f1c58;\n    }\n    else {\n        *0x4f2180 = fcn.00458b80(*0x4f1c50, iVar7, arg3, in_R9);\n    }\n    iVar3 = SUB164(*0x4f2168, 0);\n    iVar4 = SUB164(*0x4f2168 >> 0x40, 0);\n    iVar2 = *0x4f2178;\n    *0x4f2148 = 0;\n    *0x4f214c = iVar3 + iVar4 + iVar2 + *0x4f2180 + 2;\n    *0x4f2188 = 2;\n    *0x4f218c = iVar3 + 2;\n    *0x4f2190 = iVar3 + 2 + iVar4;\n    *0x4f2194 = iVar3 + iVar4 + 2 + iVar2;\n    *0x4f2198 = iVar3 + iVar4 + iVar2 + *0x4f2180 + 2;\n    return;\n}\n",
        "token_count": 959
    },
    "004177e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004177e0(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    ulong *puVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint8_t uVar8;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *0x5170b0;\n            if (unaff_RBX < *0x5170b0) {\n                uVar4 = *(*0x5170a8 + unaff_RBX * 8);\n                unaff_RBX = uVar4 >> 0x14;\n                if (unaff_RBX < 0x40) {\n                    *(*0x20 + -0x48) = *0x516dd8;\n                    *(*0x20 + -0x10) = in_RAX;\n                    unaff_RBX = *(*(unaff_RBX * 8 + 0x516e30) + (uVar4 & 0xfffff) * 8);\n                    *(*0x20 + -0x28) = unaff_RBX;\n                    iVar3 = 0;\n                    uVar5 = *0x516dd8;\n                    do {\n                        if (0x3f < iVar3) {\n                            return;\n                        }\n                        uVar8 = *(iVar3 + 0x11480 + unaff_RBX);\n                        if (uVar8 != 0) {\n                            *(*0x20 + -0x30) = iVar3;\n                            *(*0x20 + -0x49) = uVar8;\n                            for (uVar4 = 0; uVar4 < 8; uVar4 = uVar4 + 1) {\n                                if ((uVar8 & 1 << (uVar4 & 0x1f)) != 0) {\n                                    uVar1 = uVar4 + iVar3 * 8;\n                                    if (uVar1 < 0x200) {\n                                        iVar3 = *(unaff_RBX + 0x10400 + uVar1 * 8);\n                                        in_R10 = in_R10 & 0xffffffffffffff00 | *(iVar3 + 99);\n                                        if (*(iVar3 + 99) == 1) {\n                                            *(*0x20 + -0x20) = uVar4;\n                                            if (*0x5449ee == '\\0') {\n                                                uVar2 = *(iVar3 + 0x58);\n                                                in_R10 = uVar2;\n                                                if ((uVar2 != uVar5) && (uVar2 != uVar5 + 3)) {\ncode_r0x004179c5:\n                                                    *(*0x20 + -0x44) = in_R10;\n                                                    *(*0x20 + -0x80) = 0x4179cf;\n                                                    fcn.00431980();\n                                                    *(*0x20 + -0x80) = 0x4179e5;\n                                                    fcn.00432280();\n                                                    *(*0x20 + -0x80) = 0x4179ee;\n                                                    fcn.00431f80();\n                                                    *(*0x20 + -0x80) = 0x4179f3;\n                                                    fcn.00431ba0();\n                                                    *(*0x20 + -0x80) = 0x4179fc;\n                                                    fcn.00431f80();\n                                                    *(*0x20 + -0x80) = 0x417a05;\n                                                    fcn.00431be0();\n                                                    *(*0x20 + -0x80) = 0x417a0a;\n                                                    fcn.00431a00();\n                                                    *(*0x20 + -0x80) = 0x417a1b;\n                                                    fcn.00430040();\n                                                    goto code_r0x00417a1b;\n                                                }\n                                            }\n                                            *(*0x20 + -0x38) = iVar3;\n                                            *(*0x20 + -0x18) = iVar3 + 0x78;\n                                            *(*0x20 + -0x80) = 0x417909;\n                                            fcn.00409860();\n                                            iVar3 = *(*0x20 + -0x38);\n                                            for (puVar6 = *(iVar3 + 0x80); puVar6 != NULL; puVar6 = *puVar6) {\n                                                if (*(puVar6 + 10) == '\\x01') {\n                                                    if (*(iVar3 + 0x68) == 0) {\n                                                        *(*0x20 + -0x80) = 0x4179c5;\n                                                        fcn.0042e760();\n                                                        goto code_r0x004179c5;\n                                                    }\n                                                    *(*0x20 + -0x40) = puVar6;\n                                                    if ((*(iVar3 + 0x62) & 1) == 0) {\n                                                        *(*0x20 + -0x80) = 0x417990;\n                                                        fcn.004196e0();\n                                                    }\n                                                    *(*0x20 + -0x80) = 0x4179b1;\n                                                    fcn.00419540(0x4d9260);\n                                                    iVar3 = *(*0x20 + -0x38);\n                                                    puVar6 = *(*0x20 + -0x40);\n                                                }\n                                            }\n                                            *(*0x20 + -0x80) = 0x417925;\n                                            fcn.00409a80();\n                                            uVar4 = *(*0x20 + -0x20);\n                                            uVar5 = *(*0x20 + -0x48);\n                                            unaff_RBX = *(*0x20 + -0x28);\n                                            uVar8 = *(*0x20 + -0x49);\n                                            iVar3 = *(*0x20 + -0x30);\n                                            goto code_r0x00417888;\n                                        }\ncode_r0x00417a1b:\n                                        *(*0x20 + -0x4a) = in_R10;\n                                        *(*0x20 + -0x80) = 0x417a25;\n                                        fcn.00431980();\n                                        *(*0x20 + -0x80) = 0x417a36;\n                                        fcn.00432280();\n                                        *(*0x20 + -0x80) = 0x417a45;\n                                        fcn.00431f80();\n                                        *(*0x20 + -0x80) = 0x417a4a;\n                                        fcn.00431be0();\n                                        *(*0x20 + -0x80) = 0x417a4f;\n                                        fcn.00431a00();\n                                        unaff_RBX = 0x2b;\n                                        *(*0x20 + -0x80) = 0x417a65;\n                                        fcn.00430040();\n                                    }\n                                    *(*0x20 + -0x80) = 0x417a72;\n                                    fcn.00458f40(0x200);\n                                    goto code_r0x00417a72;\n                                }\ncode_r0x00417888:\n                            }\n                        }\n                        iVar3 = iVar3 + 1;\n                    } while( true );\n                }\ncode_r0x00417a72:\n                uVar4 = 0x40;\n                *(*0x20 + -0x80) = 0x417a7f;\n                fcn.00458f40(0x40);\n            }\n            *(*0x20 + -0x80) = 0x417a87;\n            in_RAX = fcn.00458f20(uVar4);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x417a97;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1869
    },
    "00417ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417ac0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (**(in_RAX + 0x30) == unaff_R14) {\n        return;\n    }\n    if ((0 < *(*(unaff_R14 + 0x30) + 0xd8)) || (*(*(unaff_R14 + 0x30) + 0xd0) != 0)) {\n        return;\n    }\n    bVar1 = false;\n    do {\n        while( true ) {\n            iVar3 = *0x5453a0;\n            if (*0x544ec4 != '\\0') {\n                if (bVar1) {\n                    fcn.0044b220(0);\n                }\n                return;\n            }\n            iVar4 = -*(in_RAX + 0x180) * *0x5453e0;\n            arg4 = -*(in_RAX + 0x180);\n            if (iVar4 < 0x10000) {\n                iVar4 = 0x10000;\n                arg4 = *0x48f630 * *0x5453e8;\n            }\n            if (0 < *0x5453a0) {\n                if (*0x5453a0 < iVar4) {\n                    *(in_RAX + 0x180) = *0x5453a0 * *0x5453e8 + *(in_RAX + 0x180) + 1;\n                    arg4 = iVar3;\n                }\n                else {\n                    *(in_RAX + 0x180) = *(in_RAX + 0x180) + arg4;\n                    arg4 = iVar4;\n                }\n                LOCK();\n                *0x5453a0 = *0x5453a0 - arg4;\n                if (iVar4 == arg4) {\n                    if (bVar1) {\n                        fcn.0044b220(0);\n                    }\n                    return;\n                }\n            }\n            if ((*0x4f6bd0 != '\\0') && (!bVar1)) {\n                fcn.0044b220(0);\n                bVar1 = true;\n            }\n            fcn.004567a0();\n            iVar3 = *(in_RAX + 0x88);\n            iVar4 = in_RAX;\n            if (*0x544c10 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                iVar3 = fcn.00458c00(in_RAX, in_RAX + 0x88, 0, arg4);\n            }\n            if (iVar3 != 0) {\n                fcn.00414020();\n                iVar4 = in_RAX;\n            }\n            if (-1 < *(iVar4 + 0x180)) goto code_r0x00417d36;\n            if (*(iVar4 + 0xb1) == '\\0') break;\n            fcn.00456720();\n        }\n        cVar2 = fcn.00418200();\n    } while (cVar2 == '\\0');\ncode_r0x00417d36:\n    if (bVar1) {\n        fcn.0044b220(0);\n    }\n    return;\n}\n",
        "token_count": 788
    },
    "00417de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00417de0(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    int64_t iVar4;\n    double dVar5;\n    int64_t in_RAX;\n    ulong uVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong unaff_RBX;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    uint32_t uVar10;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    double dVar12;\n    uint64_t uVar11;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar9 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = in_RAX + 0x88;\n            if (*0x544c10 == 0) {\n                *(in_RAX + 0x88) = 0;\n            }\n            else {\n                *(*0x20 + -0x68) = 0x417e1e;\n                in_RAX = fcn.00458b80(0, arg2, arg3, in_R9);\n            }\n            if (*0x544a1c == 0) {\n                *(in_RAX + 0x180) = 0;\n                return;\n            }\n            *(*0x20 + -0x10) = iVar7;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x68) = 0x417e52;\n            fcn.0045a8a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            iVar7 = *(*0x20 + 8);\n            iVar8 = *(*(iVar7 + 0x30) + 0xa0);\n            arg2 = *(*0x20 + -0x60);\n            uVar1 = *(iVar8 + 0x1220);\n            if (uVar1 >> 0x3d == 0) {\n                *(iVar8 + 0x1220) = arg2 & 0x1fffffffffffffff | 0x4000000000000000;\n            }\n            LOCK();\n            iVar2 = *0x4f2160 + -1;\n            uVar10 = *0x4f2160 - 1;\n            uVar11 = uVar10;\n            arg3 = *0x4f2150;\n            *0x4f2160 = iVar2;\n            if (*0x4f2150 != uVar10) {\n                *(*0x20 + -0x28) = uVar1 >> 0x3d;\n                *(*0x20 + -0x38) = arg2;\n                *(iVar7 + 0xb0) = 1;\n                *(*0x20 + -0x68) = 0x417eea;\n                fcn.00434500(4);\n                *(*0x20 + -0x68) = 0x417f07;\n                uVar6 = fcn.00419300();\n                *(*0x20 + -0x30) = uVar6;\n                uVar6 = 2;\n                *(*0x20 + -0x68) = 0x417f25;\n                fcn.00434500(2);\n                dVar5 = *0x5453e8;\n                dVar12 = *(*0x20 + -0x30) * *0x5453e8;\n                uVar11 = *(*0x20 + 8);\n                *(uVar11 + 0x180) = dVar12 + *(uVar11 + 0x180) + 1;\n                LOCK();\n                iVar2 = *0x4f2160 + 1;\n                uVar10 = *0x4f2160 + 1;\n                arg2 = uVar10;\n                *0x4f2160 = iVar2;\n                if (uVar10 <= *0x4f2150) {\n                    if (*0x4f2150 == uVar10) {\n                        if (*0x4f20c0 == 0) {\n                            if (*0x4f2148 < *0x4f214c) {\n                                bVar3 = true;\n                            }\n                            else {\n                                bVar3 = false;\n                            }\n                        }\n                        else {\n                            bVar3 = true;\n                        }\n                        if (!bVar3) {\n                            if (*0x544c10 == 0) {\n                                *(uVar11 + 0x88) = uVar11;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x417fcc;\n                                fcn.00458be0(uVar6, arg2, arg3, in_R9);\n                            }\n                        }\n                    }\n                    *(*0x20 + -0x68) = 0x417fd2;\n                    fcn.0045a8a0();\n                    iVar7 = *(*(*(*0x20 + 8) + 0x30) + 0xa0);\n                    *(*0x20 + -0x18) = iVar7;\n                    iVar8 = *(*0x20 + -0x60);\n                    *(iVar7 + 0x1210) = *(iVar7 + 0x1210) + (iVar8 - *(*0x20 + -0x38));\n                    if (*(*0x20 + -0x28) == '\\0') {\n                        *(*0x20 + -0x20) = iVar8;\n                        *(*0x20 + -0x68) = 0x418036;\n                        fcn.00416ac0(iVar8);\n                        iVar7 = *(*0x20 + -0x18);\n                        iVar8 = *(*0x20 + -0x20);\n                    }\n                    iVar4 = *0x5453a8;\n                    if (5000 < *(iVar7 + 0x1210)) {\n                        LOCK();\n                        *0x5453a8 = *0x5453a8 + *(iVar7 + 0x1210);\n                        *(*0x20 + -0x68) = 0x41806c;\n                        fcn.004165a0(iVar4, iVar8);\n                        *(*(*0x20 + -0x18) + 0x1210) = 0;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x44) = uVar10;\n                *(*0x20 + -0x3c) = *0x4f2150;\n                *(*0x20 + -0x68) = 0x418093;\n                fcn.00431980(dVar12, dVar5);\n                *(*0x20 + -0x68) = 0x4180a5;\n                fcn.00432280();\n                *(*0x20 + -0x68) = 0x4180ae;\n                fcn.00431f80();\n                *(*0x20 + -0x68) = 0x4180bf;\n                fcn.00432280();\n                *(*0x20 + -0x68) = 0x4180c8;\n                fcn.00431f80();\n                *(*0x20 + -0x68) = 0x4180cd;\n                fcn.00431be0();\n                *(*0x20 + -0x68) = 0x4180d2;\n                fcn.00431a00();\n                *(*0x20 + -0x68) = 0x4180e5;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x40) = uVar11;\n            *(*0x20 + -0x3c) = arg3;\n            *(*0x20 + -0x68) = 0x4180f3;\n            fcn.00431980();\n            *(*0x20 + -0x68) = 0x418105;\n            fcn.00432280();\n            *(*0x20 + -0x68) = 0x41810e;\n            fcn.00431f80();\n            *(*0x20 + -0x68) = 0x41811f;\n            fcn.00432280();\n            *(*0x20 + -0x68) = 0x418128;\n            fcn.00431f80();\n            *(*0x20 + -0x68) = 0x41812d;\n            fcn.00431be0();\n            *(*0x20 + -0x68) = 0x418132;\n            fcn.00431a00();\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x68) = 0x418145;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + -8) = 0x418155;\n        fcn.0045b2e0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        *0x20 = puVar9;\n    } while( true );\n}\n",
        "token_count": 2132
    },
    "00418340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00418340(void)\n\n{\n    double dVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (dVar1 = *0x5453e8,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f21f0 == 0) {\n        LOCK();\n        iVar2 = *0x5453a0;\n        *0x5453a0 = *0x5453a0 + in_RAX;\n        return iVar2;\n    }\n    fcn.00409860();\n    iVar2 = dVar1 * in_RAX;\n    while( true ) {\n        iVar3 = *0x4f21f0;\n        if ((*0x4f21f0 == 0) || (iVar2 < 1)) goto code_r0x00418469;\n        if ((*0x4f21f0 != 0) && (*0x4f21f0 = *(*0x4f21f0 + 0xa0),  *0x4f21f0 == 0)) {\n            *0x4f21f8 = 0;\n        }\n        iVar2 = *(iVar3 + 0x180) + iVar2;\n        if (iVar2 < 0) break;\n        *(iVar3 + 0x180) = 0;\n        fcn.00433da0(0);\n    }\n    *(iVar3 + 0x180) = iVar2;\n    *(iVar3 + 0xa0) = 0;\n    iVar2 = iVar3;\n    if (*0x4f21f8 != 0) {\n        *(*0x4f21f8 + 0xa0) = iVar3;\n        iVar2 = *0x4f21f0;\n    }\n    *0x4f21f0 = iVar2;\n    *0x4f21f8 = iVar3;\n    iVar2 = 0;\ncode_r0x00418469:\n    iVar3 = iVar2;\n    if (0 < iVar2) {\n        LOCK();\n        iVar3 = *0x5453a0;\n        *0x5453a0 = *0x5453a0 + *0x5453e0 * iVar2;\n    }\n    iVar2 = fcn.00409a80(iVar3);\n    return iVar2;\n}\n",
        "token_count": 569
    },
    "004184e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.004184e0(void)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t *puVar8;\n    char cVar9;\n    ulong unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 + -0x180 && *0x20 + -0x180 != *(unaff_R14 + 0x18)) {\n            puVar10 = *0x20 + -0x200;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) >> 0xc & 1) != 0) {\n                uVar7 = *(in_RAX + 0x90) & 0xffffefff;\n                if (uVar7 < 3) {\n                    if (uVar7 == 1) goto code_r0x0041854e;\n                }\n                else {\n                    if (4 < uVar7) {\n                        if (uVar7 == 6) {\n                            return 0;\n                        }\ncode_r0x00418703:\n                        *(*0x20 + -0x1a8) = *(in_RAX + 0x90);\n                        puVar8 = *(in_RAX + 0x98);\n                        *(*0x20 + -0x188) = puVar8;\n                        *(*0x20 + -0x208) = 0x41871e;\n                        fcn.00431980();\n                        *(*0x20 + -0x208) = 0x41872f;\n                        fcn.00432280();\n                        *(*0x20 + -0x208) = 0x41873c;\n                        fcn.00432200();\n                        *(*0x20 + -0x208) = 0x41874d;\n                        fcn.00432280();\n                        *(*0x20 + -0x208) = 0x418757;\n                        fcn.00431f80();\n                        *(*0x20 + -0x208) = 0x418768;\n                        fcn.00432280();\n                        *(*0x20 + -0x208) = 0x418773;\n                        fcn.00431f80();\n                        *(*0x20 + -0x208) = 0x418778;\n                        fcn.00431be0();\n                        *(*0x20 + -0x208) = 0x41877d;\n                        fcn.00431a00();\n                        *(*0x20 + -0x208) = 0x41878e;\n                        fcn.00430040();\n                        while( true ) {\n                            *(*0x20 + -0x30) = *(*(*0x20 + -0x30) + 0x28);\ncode_r0x004187a2:\n                            if (*(*0x20 + -0x30) == 0) break;\n                            if (*(*(*0x20 + -0x30) + 0x18) != 0) {\n                                *(*0x20 + -0x208) = 0x4187df;\n                                fcn.00419540(0x4d9260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 0x28) != 0) {\n                                *(*0x20 + -0x208) = 0x41881b;\n                                fcn.00419540(0x4d9260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                            if (*(*(*0x20 + -0x30) + 1) != '\\0') {\n                                *(*0x20 + -0x208) = 0x41885f;\n                                fcn.00419540(0x4d9260);\n                                puVar8 = *(*0x20 + 8);\n                            }\n                        }\n                        if (*(puVar8 + 8) != 0) {\n                            *(*0x20 + -0x208) = 0x418885;\n                            fcn.0041d900(0);\n                        }\n                        iVar6 = 0;\n                        *(*0x20 + -0x208) = 0x41889d;\n                        uVar4 = fcn.0041dd20(*(*0x20 + -0x40));\n                        *(*0x20 + -0x38) = uVar4;\n                        do {\n                            do {\n                                *(*0x20 + -0x208) = 0x4188b2;\n                                iVar5 = fcn.0041da40();\n                                if (iVar5 == 0) {\n                                    while (iVar6 = *(*0x20 + -0x50),  iVar6 != 0) {\n                                        *(*0x20 + -0x50) = *(iVar6 + 0x18);\n                                        *(iVar6 + 0x10) = 0;\n                                        *(*0x20 + -0x208) = 0x418910;\n                                        fcn.00420540();\n                                    }\n                                    if (((*(*0x20 + -0x68) == 0) && (*(*0x20 + -0x58) == 0)) && (*(*0x20 + -0x60) == 0))\n                                    {\n                                        return *(*0x20 + -0x198);\n                                    }\n                                    iVar6 = 0x19;\n                                    *(*0x20 + -0x208) = 0x418965;\n                                    iVar5 = fcn.00430040();\n                                }\n                                else {\n                                    iVar5 = iVar5 - *(*0x20 + -0x80);\n                                    puVar8 = *(*0x20 + -0x38);\n                                }\n                                while (cVar9 = iVar6,  puVar8 != NULL) {\n                                    if (iVar5 < *puVar8) {\n                                        puVar8 = *(puVar8 + 4);\n                                    }\n                                    else {\n                                        if (iVar5 < *puVar8 + puVar8[1]) goto code_r0x004188d1;\n                                        puVar8 = *(puVar8 + 6);\n                                    }\n                                }\n                                puVar8 = NULL;\ncode_r0x004188d1:\n                            } while ((puVar8 == NULL) || (uVar2 = *(puVar8 + 2),  uVar2 == 0));\n                            *(puVar8 + 2) = 0;\n                            for (iVar6 = 0x4d9aa0; iVar6 != 0; iVar6 = *(iVar6 + 0x230)) {\n                                if ((*(iVar6 + 0x140) < uVar2 || *(iVar6 + 0x140) == uVar2) &&\n                                   (uVar2 <= *(iVar6 + 0x110) && *(iVar6 + 0x110) != uVar2)) goto code_r0x004189b6;\n                            }\n                            iVar6 = 0;\ncode_r0x004189b6:\n                            iVar6 = *(uVar2 + 0xc) + *(iVar6 + 0x138);\n                            if (*(uVar2 + 8) < 0) {\n                                *(*0x20 + -0x1ad) = cVar9;\n                                *(*0x20 + -0x1a0) = puVar8;\n                                *(*0x20 + -0x28) = uVar2;\n                                *(*0x20 + -0x208) = 0x4189ed;\n                                iVar5 = fcn.004114c0();\n                                iVar6 = *(iVar5 + 0x18);\n                                puVar8 = *(*0x20 + -0x1a0);\n                                cVar9 = *(*0x20 + -0x1ad);\n                            }\n                            else {\n                                iVar5 = 0;\n                            }\n                            *(*0x20 + -400) = iVar5;\n                            puVar8 = *puVar8 + *(*0x20 + -0x80);\n                            if (cVar9 == '\\0') {\n                                *(*0x20 + -0x208) = 0x418a7c;\n                                fcn.00419540(iVar6);\n                            }\n                            else {\n                                *(*0x20 + -0x208) = 0x418a48;\n                                fcn.004199c0(iVar6);\n                            }\n                            iVar6 = *(*0x20 + -400);\n                            if (iVar6 != 0) {\n                                *(*0x20 + -0x208) = 0x418a9c;\n                                fcn.004225e0(2);\n                            }\n                        } while( true );\n                    }\ncode_r0x0041854e:\n                    if (unaff_R14 != in_RAX) {\n                        iVar6 = *(in_RAX + 0x70);\n                        if (iVar6 == 0) {\n                            iVar6 = *(in_RAX + 0x38);\n                        }\n                        iVar5 = *(*(unaff_R14 + 0x30) + 0xa0);\n                        iVar6 = *(in_RAX + 8) - iVar6;\n                        piVar1 = iVar5 + 0x22b0;\n                        *piVar1 = *piVar1 + iVar6;\n                        piVar1 = iVar5 + 0x22b8;\n                        *piVar1 = *piVar1 + 1;\n                        if (*(in_RAX + 0x70) == 0) {\n                            if (*(in_RAX + 0xb4) == '\\0') {\n                                bVar11 = *(in_RAX + 0xb9) == '\\0';\n                            }\n                            else {\n                                bVar11 = false;\n                            }\n                        }\n                        else {\n                            bVar11 = false;\n                        }\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + -0x198) = iVar6;\n                        if (bVar11) {\n                            *(*0x20 + -0x208) = 0x4185d2;\n                            fcn.00444c00();\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        else {\n                            *(in_RAX + 0xb3) = 1;\n                        }\n                        *(*0x20 + -0x210) = unaff_RBP;\n                        *(*0x20 + -0x208) = 0x41860f;\n                        puVar3 = fcn.00459154();\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x80) = *puVar3;\n                        *(*0x20 + -0x78) = uVar4;\n                        if (puVar3[10] != 0) {\n                            *(*0x20 + -0x208) = 0x418654;\n                            fcn.00419540(0x4d9260);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = in_XMM15;\n                        *(*0x20 + -0x10) = 0;\n                        *(*0x20 + -0x20) = 0x418c20;\n                        *(*0x20 + -0x18) = *0x20 + -0x180;\n                        *(*0x20 + -0x10) = unaff_RBX;\n                        *(*0x20 + -0x200) = 0;\n                        *(*0x20 + -0x208) = 0x4186d2;\n                        fcn.0044cd80(0, *0x20 + -0x180, 0, 0x7fffffff);\n                        puVar8 = *(*0x20 + 8);\n                        *(*0x20 + -0x30) = *(puVar8 + 10);\n                        goto code_r0x004187a2;\n                    }\n                    *(*0x20 + -0x208) = 0x418ab6;\n                    iVar6 = unaff_R14;\n                    in_RAX = fcn.00430040();\n                    uVar7 = iVar6;\n                }\n                if (uVar7 != 2) goto code_r0x00418703;\n                *(*0x20 + -0x1ac) = *(in_RAX + 0x90);\n                *(*0x20 + -0x188) = *(in_RAX + 0x98);\n                *(*0x20 + -0x208) = 0x418adb;\n                fcn.00431980();\n                *(*0x20 + -0x208) = 0x418aec;\n                fcn.00432280();\n                *(*0x20 + -0x208) = 0x418af9;\n                fcn.00432200();\n                *(*0x20 + -0x208) = 0x418b0a;\n                fcn.00432280();\n                *(*0x20 + -0x208) = 0x418b14;\n                fcn.00431f80();\n                *(*0x20 + -0x208) = 0x418b25;\n                fcn.00432280();\n                *(*0x20 + -0x208) = 0x418b30;\n                fcn.00431f80();\n                *(*0x20 + -0x208) = 0x418b35;\n                fcn.00431be0();\n                *(*0x20 + -0x208) = 0x418b3a;\n                fcn.00431a00();\n                *(*0x20 + -0x208) = 0x418b4b;\n                in_RAX = fcn.00430040();\n            }\n            *(*0x20 + -0x1a4) = *(in_RAX + 0x90);\n            *(*0x20 + -0x188) = *(in_RAX + 0x98);\n            *(*0x20 + -0x208) = 0x418b67;\n            fcn.00431980();\n            *(*0x20 + -0x208) = 0x418b78;\n            fcn.00432280();\n            *(*0x20 + -0x208) = 0x418b85;\n            fcn.00432200();\n            *(*0x20 + -0x208) = 0x418b96;\n            fcn.00432280();\n            *(*0x20 + -0x208) = 0x418ba5;\n            fcn.00431f80();\n            *(*0x20 + -0x208) = 0x418bb6;\n            fcn.00432280();\n            *(*0x20 + -0x208) = 0x418bc5;\n            fcn.004320e0();\n            *(*0x20 + -0x208) = 0x418bca;\n            fcn.00431be0();\n            *(*0x20 + -0x208) = 0x418bcf;\n            fcn.00431a00();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x208) = 0x418be5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x418bf5;\n        fcn.0045b2e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 3544
    },
    "00418ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00418ee0(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint32_t uVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544c14 != '\\0') break;\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x60) = 0x4192c5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x4192d5;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n    iVar5 = *(*(unaff_R14 + 0x30) + 0x90);\n    iVar4 = in_RAX[3];\n    if ((unaff_RBX & 0xc) == 0) {\n        iVar9 = 0x7fffffffffffffff;\n        uVar8 = 0;\n    }\n    else {\n        if ((unaff_RBX >> 2 & 1) == 0) {\n            uVar8 = 0;\n            if ((unaff_RBX & 8) != 0) {\n                uVar8 = 0x47cbf0;\n            }\n        }\n        else {\n            uVar8 = 0x47cbf8;\n        }\n        iVar9 = iVar4 + 100000;\n    }\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x18) = iVar5;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x10) = uVar8;\n    if (*0x4f214c <= *0x4f2148) goto code_r0x00418faf;\n    *(*0x20 + -0x40) = iVar4;\n    *(*0x20 + -0x38) = iVar9;\n    *(*0x20 + -0x41) = (unaff_RBX >> 1 & 1) != 0;\ncode_r0x00419222:\n    if (*(iVar5 + 0xb1) == '\\0') {\n        bVar10 = false;\n    }\n    else if ((unaff_RBX & 1) == 0) {\n        bVar10 = *0x4f2788 != '\\0';\n    }\n    else {\n        bVar10 = true;\n    }\n    if (bVar10) {\ncode_r0x00418faf:\n        do {\n            uVar7 = unaff_RBX;\n            if (*(iVar5 + 0xb1) == '\\0') {\n                bVar10 = false;\n            }\n            else if ((unaff_RBX & 1) == 0) {\n                bVar10 = *0x4f2788 != '\\0';\n            }\n            else {\n                bVar10 = true;\n            }\n            if (bVar10) {\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x004191ad;\n            }\n            *(*0x20 + -0x20) = iVar4;\n            *(*0x20 + -0x38) = iVar9;\n            if (*0x4f20c0 == 0) {\n                *(*0x20 + -0x60) = 0x419005;\n                fcn.00420140();\n                in_RAX = *(*0x20 + 8);\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            iVar4 = *in_RAX;\n            if ((iVar4 == 0) || (iVar1 = *(iVar4 + 0x10),  iVar1 == 0)) {\n                iVar4 = 0;\n            }\n            else {\n                *(iVar4 + 0x10) = iVar1 - 1U;\n                if (0xfc < iVar1 - 1U) goto code_r0x004191ef;\n                iVar4 = *(iVar4 + 0x10 + iVar1 * 8);\n            }\n            if (iVar4 == 0) {\n                *(*0x20 + -0x60) = 0x419065;\n                iVar4 = fcn.0041ff60(0, iVar5, iVar9);\n                if (iVar4 == 0) {\n                    *(*0x20 + -0x60) = 0x419073;\n                    fcn.00429d00();\n                    *(*0x20 + -0x60) = 0x41907d;\n                    iVar4 = fcn.0041ff60();\n                }\n                iVar5 = *(*0x20 + -0x18);\n                uVar7 = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n            }\n            if (iVar4 == 0) {\n                iVar4 = *(*0x20 + -0x20);\n                iVar5 = *(*0x20 + 8);\n                goto code_r0x004191ad;\n            }\n            *(*0x20 + -0x60) = 0x4190b4;\n            fcn.004196e0(iVar4, iVar5, iVar9);\n            iVar5 = *(*0x20 + 8);\n            if (*(iVar5 + 0x18) < 2000) {\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar9 = *(*0x20 + -0x38);\n                iVar4 = *(*0x20 + -0x20);\n            }\n            else {\n                LOCK();\n                *0x545388 = *0x545388 + *(iVar5 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                if ((unaff_RBX >> 1 & 1) == 0) {\n                    iVar4 = *(*0x20 + -0x20);\n                }\n                else {\n                    *(*0x20 + -0x60) = 0x4190fd;\n                    fcn.00418340();\n                    iVar5 = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    iVar4 = 0;\n                }\n                iVar9 = *(iVar5 + 0x18);\n                *(iVar5 + 0x18) = 0;\n                iVar9 = *(*0x20 + -0x38) - iVar9;\n                if (iVar9 < 1) {\n                    if (*(*0x20 + -0x10) == NULL) {\n                        cVar3 = '\\0';\n                    }\n                    else {\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x30) = iVar4;\n                        pcVar2 = **(*0x20 + -0x10);\n                        *(*0x20 + -0x60) = 0x419142;\n                        cVar3 = (*pcVar2)();\n                        iVar5 = *(*0x20 + 8);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        iVar9 = *(*0x20 + -0x28);\n                        iVar4 = *(*0x20 + -0x30);\n                    }\n                    uVar7 = unaff_RBX;\n                    if (cVar3 != '\\0') goto code_r0x004191ad;\n                    iVar9 = iVar9 + 100000;\n                }\n            }\n            iVar5 = *(*0x20 + -0x18);\n            in_RAX = *(*0x20 + 8);\n        } while( true );\n    }\n    LOCK();\n    uVar7 = *0x4f2148 + 1;\n    bVar10 = *0x4f214c <= *0x4f2148;\n    *0x4f2148 = uVar7;\n    if (bVar10) goto code_r0x00418faf;\n    *(*0x20 + -0x60) = 0x41927f;\n    fcn.00417060();\n    if (*(*0x20 + -0x10) == NULL) {\n        cVar3 = '\\0';\n    }\n    else {\n        pcVar2 = **(*0x20 + -0x10);\n        *(*0x20 + -0x60) = 0x419292;\n        cVar3 = (*pcVar2)();\n    }\n    if (cVar3 != '\\0') {\n        iVar5 = *(*0x20 + 8);\n        uVar7 = *(*0x20 + 0x10);\n        iVar4 = *(*0x20 + -0x40);\ncode_r0x004191ad:\n        if (0 < *(iVar5 + 0x18)) {\n            LOCK();\n            *0x545388 = *0x545388 + *(iVar5 + 0x18);\n            if ((uVar7 >> 1 & 1) != 0) {\n                iVar5 = *(iVar5 + 0x18);\n                *(*0x20 + -0x60) = 0x4191d8;\n                fcn.00418340(iVar5 - iVar4);\n                iVar5 = *(*0x20 + 8);\n            }\n            *(iVar5 + 0x18) = 0;\n        }\n        return;\n    }\n    goto code_r0x004191fc;\ncode_r0x004191ef:\n    *(*0x20 + -0x60) = 0x4191fc;\n    fcn.00458f20(0xfd);\ncode_r0x004191fc:\n    in_RAX = *(*0x20 + 8);\n    unaff_RBX = *(*0x20 + 0x10);\n    iVar5 = *(*0x20 + -0x18);\n    iVar4 = *(*0x20 + -0x40);\n    iVar9 = *(*0x20 + -0x38);\n    goto code_r0x00419222;\n}\n",
        "token_count": 2414
    },
    "00419300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00419300(void)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    bool bVar6;\n    \ncode_r0x00419300:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (*0x544c14 != '\\0') {\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar5 = -in_RAX[3];\n            iVar3 = *(*(unaff_R14 + 0x30) + 0x90);\n            *(*0x20 + -0x10) = iVar3;\n            do {\n                if ((*(iVar3 + 0xb1) != '\\0' || *0x544ec4 != '\\0') || (unaff_RBX <= in_RAX[3] + iVar5))\n                goto code_r0x004194da;\n                *(*0x20 + -0x18) = iVar5;\n                if (*0x4f20c0 == 0) {\n                    *(*0x20 + -0x30) = 0x4193a5;\n                    fcn.00420140();\n                    in_RAX = *(*0x20 + 8);\n                    iVar5 = *(*0x20 + -0x18);\n                }\n                iVar3 = *in_RAX;\n                if ((iVar3 == 0) || (iVar1 = *(iVar3 + 0x10),  iVar1 == 0)) {\n                    iVar3 = 0;\n                }\n                else {\n                    *(iVar3 + 0x10) = iVar1 - 1U;\n                    if (0xfc < iVar1 - 1U) goto code_r0x004194ec;\n                    iVar3 = *(iVar3 + 0x10 + iVar1 * 8);\n                }\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x30) = 0x419405;\n                    iVar3 = fcn.0041ff60();\n                    if (iVar3 == 0) {\n                        *(*0x20 + -0x30) = 0x419413;\n                        fcn.00429d00();\n                        *(*0x20 + -0x30) = 0x41941d;\n                        iVar3 = fcn.0041ff60();\n                    }\n                    iVar5 = *(*0x20 + -0x18);\n                    in_RAX = *(*0x20 + 8);\n                }\n                if (iVar3 == 0) {\n                    if (*0x4f214c <= *0x4f2148) {\ncode_r0x004194da:\n                        return iVar5 + in_RAX[3];\n                    }\n                    LOCK();\n                    uVar2 = *0x4f2148 + 1;\n                    bVar6 = *0x4f214c <= *0x4f2148;\n                    *0x4f2148 = uVar2;\n                    if (bVar6) goto code_r0x004194da;\n                    *(*0x20 + -0x30) = 0x419472;\n                    iVar5 = fcn.00417060(0);\n                    iVar5 = *(*0x20 + -0x18) + iVar5;\n                    in_RAX = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x419492;\n                    fcn.004196e0();\n                    in_RAX = *(*0x20 + 8);\n                    if (in_RAX[3] < 2000) {\n                        iVar5 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        LOCK();\n                        *0x545388 = *0x545388 + in_RAX[3];\n                        iVar5 = in_RAX[3];\n                        in_RAX[3] = 0;\n                        iVar5 = *(*0x20 + -0x18) + iVar5;\n                    }\n                }\n                iVar3 = *(*0x20 + -0x10);\n                unaff_RBX = *(*0x20 + 0x10);\n            } while( true );\n        }\n        goto code_r0x004194f9;\n    }\n    goto code_r0x0041950b;\ncode_r0x004194ec:\n    *(*0x20 + -0x30) = 0x4194f9;\n    fcn.00458f20(0xfd);\ncode_r0x004194f9:\n    unaff_RBX = 0x18;\n    *(*0x20 + -0x30) = 0x41950a;\n    in_RAX = fcn.00430040();\ncode_r0x0041950b:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x41951a;\n    fcn.0045b2e0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x00419300;\n}\n",
        "token_count": 1273
    },
    "00419ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00419ca0(ulong arg1, ulong noname_1, uint8_t *arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    char cVar3;\n    uint64_t in_RAX;\n    uint64_t uVar4;\n    uint8_t uVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    int64_t unaff_RDI;\n    uint8_t *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX & 7) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                iVar1 = *(unaff_RDI + 0x50);\n                puVar7 = arg3 >> 3;\n                if (*0x5449ee == '\\0') {\n                    uVar5 = 1 << (arg3 & 7);\n                    if (((*0x544e6c < 1) || (arg3 <= *(unaff_RDI + 0x98) && *(unaff_RDI + 0x98) != arg3)) ||\n                       (arg3 = puVar7,  (uVar5 & puVar7[*(unaff_RDI + 0x48)]) != 0)) {\n                        if ((uVar5 & puVar7[iVar1]) != 0) {\n                            return;\n                        }\n                        LOCK();\n                        puVar7[iVar1] = puVar7[iVar1] | uVar5;\n                        uVar2 = *(unaff_RDI + 0x18);\n                        arg3 = uVar2 + 0x800000000000;\n                        if (arg3 >> 0x2a < 0x40) {\n                            iVar1 = *(*((arg3 >> 0x2a) * 8 + 0x516e30) + (arg3 >> 0x16 & 0xfffff) * 8);\n                            uVar4 = uVar2 >> 0x10 & 0x3f;\n                            arg3 = iVar1 + uVar4 + 0x11440;\n                            uVar5 = 1 << (uVar2 >> 0xd & 7);\n                            if ((uVar5 & *(iVar1 + 0x11440 + uVar4)) == 0) {\n                                LOCK();\n                                *arg3 = *arg3 | uVar5;\n                            }\n                            if ((*(unaff_RDI + 0x62) & 1) != 0) {\n                                unaff_RSI[2] = unaff_RSI[2] + *(unaff_RDI + 0x68);\n                                return;\n                            }\n                            goto code_r0x00419e11;\n                        }\n                        goto code_r0x00419e66;\n                    }\n                }\n                else {\n                    *(*0x20 + 0x28) = unaff_RSI;\n                    *(*0x20 + -0x50) = 0x419dff;\n                    cVar3 = fcn.004125c0(arg1, iVar1, arg3);\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RSI = *(*0x20 + 0x28);\ncode_r0x00419e11:\n                    iVar1 = *unaff_RSI;\n                    if (iVar1 == 0) {\ncode_r0x00419e36:\n                        *(*0x20 + -0x50) = 0x419e45;\n                        fcn.0041fc40();\n                        return;\n                    }\n                    uVar2 = *(iVar1 + 0x10);\n                    if (uVar2 == 0xfd) goto code_r0x00419e36;\n                    if (uVar2 < 0xfd) {\n                        *(iVar1 + 0x18 + uVar2 * 8) = in_RAX;\n                        *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                        return;\n                    }\n                    *(*0x20 + -0x50) = 0x419e66;\n                    fcn.00458f20(0xfd);\ncode_r0x00419e66:\n                    *(*0x20 + -0x50) = 0x419e73;\n                    fcn.00458f40(0x40);\n                }\n                *(*0x20 + -0x10) = arg1;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x50) = 0x419e85;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x419e96;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x419ea5;\n                fcn.004320e0();\n                *(*0x20 + -0x50) = 0x419eb6;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x419ec5;\n                fcn.004320e0();\n                *(*0x20 + -0x50) = 0x419ed6;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x419ee5;\n                fcn.004320e0();\n                *(*0x20 + -0x50) = 0x419ef6;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x419efb;\n                fcn.00431a00();\n                *(*0x20 + -0x50) = 0x419f16;\n                fcn.00419fc0(*(*0x20 + -0x18));\n                arg1 = *(*0x20 + 8);\n                unaff_RDI = -1;\n                *(*0x20 + -0x50) = 0x419f33;\n                fcn.00419fc0(arg1);\n                *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n                *(*0x20 + -0x50) = 0x419f4f;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x50) = 0x419f65;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + 0x28) = unaff_RSI;\n        *(puVar6 + 0x30) = arg3;\n        *(puVar6 + -8) = 0x419f89;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        unaff_RSI = *(puVar6 + 0x28);\n        arg3 = *(puVar6 + 0x30);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1755
    },
    "00419fc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00419fc0(uint64_t arg1)\n\n{\n    bool bVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar2 = arg1 + 0x800000000000 >> 0x2a;\n    if (uVar2 < 0x40) {\n        iVar3 = *(uVar2 * 8 + 0x516e30);\n        if (iVar3 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(iVar3 + (arg1 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar3 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(iVar3 + 0x10400 + (arg1 >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431a00();\n    if (iVar3 == 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n        return;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00431a00();\n    if (*(iVar3 + 99) < *0x4ef1e8) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431be0();\n        fcn.00431a00();\n    }\n    else {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    uVar2 = *(iVar3 + 0x68);\n    if ((*(iVar3 + 99) == '\\x02') && (uVar2 == 0)) {\n        uVar2 = unaff_RDI + 8;\n    }\n    bVar1 = false;\n    for (uVar4 = 0; uVar4 < uVar2; uVar4 = uVar4 + 8) {\n        if ((uVar4 < 0x400) || ((unaff_RDI - 0x80 < uVar4 && (uVar4 < unaff_RDI + 0x80)))) {\n            if (bVar1) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n            }\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00432280();\n            fcn.004320e0();\n            fcn.00431a00();\n            if (unaff_RDI == uVar4) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n            }\n            fcn.00431980();\n            fcn.00431be0();\n            fcn.00431a00();\n            bVar1 = false;\n        }\n        else {\n            bVar1 = true;\n        }\n    }\n    if (bVar1) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    return;\n}\n",
        "token_count": 936
    },
    "0041a400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a400(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint8_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    int64_t unaff_RBX;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    if (*0x5449ee == '\\0') {\n        uVar7 = (unaff_RBX - *(in_RAX + 0x18)) * *(in_RAX + 0x5c);\n        puVar6 = *(in_RAX + 0x50) + (uVar7 >> 0x23);\n        LOCK();\n        *puVar6 = *puVar6 | 1 << (uVar7 >> 0x20 & 7);\n        uVar7 = *(in_RAX + 0x18);\n        uVar5 = uVar7 + 0x800000000000 >> 0x2a;\n        if (uVar5 < 0x40) {\n            iVar2 = *(*(uVar5 * 8 + 0x516e30) + (uVar7 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            uVar5 = uVar7 >> 0x10 & 0x3f;\n            puVar6 = iVar2 + uVar5 + 0x11440;\n            uVar4 = 1 << (uVar7 >> 0xd & 7);\n            if ((uVar4 & *(iVar2 + 0x11440 + uVar5)) == 0) {\n                LOCK();\n                *puVar6 = *puVar6 | uVar4;\n            }\n            piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x1248;\n            *piVar1 = *piVar1 + arg1;\n            return;\n        }\n        fcn.00458f40(0x40);\n    }\n    fcn.00430040();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 496
    },
    "0041a6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041a6a0(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    ulong noname_0;\n    int64_t iVar3;\n    ulong arg2;\n    ulong unaff_RBX;\n    int64_t iVar4;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *(in_RAX + 0x88) = 0;\n    *(in_RAX + 0x90) = 0;\n    *(in_RAX + 0x98) = 0;\n    *(in_RAX + 0xa0) = 0;\n    *(in_RAX + 0xa8) = 0;\n    *(in_RAX + 0xb0) = 0;\n    *(in_RAX + 0xb8) = 0;\n    *(in_RAX + 0xc0) = 0;\n    *(in_RAX + 200) = unaff_RBX;\n    *(in_RAX + 0x40) = *(in_RAX + 0x50);\n    dVar5 = *0x48f5c0 * arg1;\n    iVar3 = *0x48f5d0 + dVar5;\n    dVar6 = iVar3 / dVar5 - *0x48f5e0;\n    if ((dVar6 < str.333333._0_8_) || (*0x48f5c8 < dVar6)) {\n        if (dVar5 < iVar3) {\n            iVar3 = iVar3 + -1;\n        }\n        *(in_RAX + 0xf0) = (dVar5 - iVar3) / arg1;\n    }\n    else {\n        *(in_RAX + 0xf0) = 0;\n    }\n    if (0 < *0x544e78) {\n        *(in_RAX + 0xf0) = 0;\n        iVar3 = arg1;\n    }\n    iVar2 = *0x4f1c78;\n    iVar1 = *0x4f1c70;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        *(*(iVar1 + iVar4 * 8) + 0x1210) = in_XMM15;\n    }\n    if (unaff_RDI == 1) {\n        if (iVar3 < 1) {\n            fcn.0041bce0(iVar3, arg1);\n        }\n        else {\n            fcn.0041bce0(iVar3, arg1);\n        }\n    }\n    else {\n        fcn.0041bce0(iVar3, arg1 - iVar3);\n    }\n    iVar1 = *(in_RAX + 0xd0);\n    *(in_RAX + 0xd0) = iVar3;\n    fcn.0041a9c0(iVar1);\n    if (0 < *0x544e70) {\n        fcn.0041b5e0();\n        noname_0 = *(in_RAX + 0xe0);\n        arg2 = noname_0;\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431c80(noname_0, arg2);\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431c80(noname_0, arg2);\n        fcn.00431be0();\n        fcn.00431a00();\n    }\n    return;\n}\n",
        "token_count": 923
    },
    "0041aba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041aba0(int64_t arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong noname_0;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    double dVar6;\n    double dVar7;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *0x545348 = fcn.0041b5e0();\n    iVar2 = unaff_RBX - *(in_RAX + 200);\n    dVar6 = *0x48f5c0;\n    if (0 < iVar2) {\n        dVar6 = *0x48f5c0 + *(in_RAX + 0xa8) / (iVar2 * arg1);\n    }\n    if (*(in_RAX + 0x50) <= *(in_RAX + 0x40)) {\n        return;\n    }\n    if (iVar2 < 1) {\n        dVar5 = 0.0;\n    }\n    else {\n        dVar5 = *(in_RAX + 0xc0) / (iVar2 * arg1);\n    }\n    uVar4 = *(in_RAX + 0x50) - *(in_RAX + 0x40);\n    if (uVar4 < 0) {\n        dVar7 = uVar4 >> 1 | uVar4 & 1;\n        dVar7 = dVar7 + dVar7;\n    }\n    else {\n        dVar7 = uVar4;\n    }\n    dVar5 = ((dVar5 + dVar6) * dVar7) / ((*0x48f5e0 - dVar6) * (*(in_RAX + 0x88) + *(in_RAX + 0x90) + *(in_RAX + 0x98)))\n    ;\n    *(in_RAX + 0x20) = (*(in_RAX + 0x28) + dVar5) * *0x48f5d0;\n    *(in_RAX + 0x28) = dVar5;\n    if (0 < *0x544e70) {\n        fcn.00431980();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432080(dVar6 * *0x48f620);\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        uVar3 = *(in_RAX + 0x78);\n        fcn.00431980();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431f80(uVar3);\n        fcn.00432280();\n        fcn.00431a00();\n        uVar3 = *(in_RAX + 0x40);\n        noname_0 = *(in_RAX + 0x48);\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431c80(noname_0, uVar3);\n        fcn.00432280();\n        fcn.00431a00();\n        fcn.00431980();\n        fcn.00431be0();\n        fcn.00431a00();\n        cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n        *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n        if (cVar1 == '\\x01') {\n            fcn.00409a80();\n        }\n    }\n    return;\n}\n",
        "token_count": 942
    },
    "0041afa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041afa0(void)\n\n{\n    int32_t *piVar1;\n    uchar auVar2 [16];\n    char cVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0xd0) < 1) {\n                return;\n            }\n            if (*0x544a28 < 2) {\n                return;\n            }\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) ||\n               (piVar1 = *(*(unaff_R14 + 0x30) + 0xa0),  piVar1 == NULL)) {\n                return;\n            }\n            iVar5 = *piVar1;\n            *(*0x20 + -0x14) = iVar5;\n            iVar4 = 0;\n            while( true ) {\n                iVar6 = *0x544a28;\n                if (4 < iVar4) {\n                    return;\n                }\n                uVar8 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar2 = ZEXT816(uVar8) * ZEXT816(uVar8 ^ 0xe7037ed1a0b428db);\n                *(*(unaff_R14 + 0x30) + 0xf0) = uVar8;\n                iVar6 = (SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) * (iVar6 - 1) >> 0x20;\n                if (iVar5 <= iVar6) {\n                    iVar6 = iVar6 + 1;\n                }\n                if (*0x4f1c78 <= iVar6) break;\n                if (*(*(*0x4f1c70 + iVar6 * 8) + 4) == 1) {\n                    *(*0x20 + -0x10) = iVar4;\n                    *(*0x20 + -0x30) = 0x41b0b0;\n                    cVar3 = fcn.0043d6a0();\n                    if (cVar3 != '\\0') {\n                        return;\n                    }\n                    iVar4 = *(*0x20 + -0x10);\n                    iVar5 = *(*0x20 + -0x14);\n                }\n                iVar4 = iVar4 + 1;\n            }\n            *(*0x20 + -0x30) = 0x41b0e9;\n            in_RAX = fcn.00458f20(*0x4f1c78);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x41b0f4;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 786
    },
    "0041b100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041b202)\n\nulong fcn.0041b100(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int64_t in_RAX;\n    int64_t *piVar5;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544a1c != 0) break;\n            unaff_RBX = 0x36;\n            *(*0x20 + -0x38) = 0x41b38a;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x41b39f;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    if (arg1 == 0) {\n        *(*0x20 + -0x38) = 0x41b13b;\n        fcn.0045a8a0();\n        arg1 = *(*0x20 + -0x30);\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    }\n    *(*0x20 + -0x20) = arg1;\n    if (10000000 < arg1 - *0x544f00) {\n        *(*0x20 + -0x38) = 0x41b185;\n        fcn.004165a0();\n        in_RAX = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n        arg1 = *(*0x20 + -0x20);\n    }\n    if (((unaff_RBX == 0) || (*(unaff_RBX + 0x1238) == 0)) ||\n       ((*(*(unaff_RBX + 0x1238) + 0x10) == 0 && (*(*(unaff_RBX + 0x1240) + 0x10) == 0)))) {\n        if (*0x4f20c0 == 0) {\n            if (*0x4f2148 < *0x4f214c) {\n                bVar4 = true;\n            }\n            else {\n                bVar4 = false;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    else {\n        bVar4 = true;\n    }\n    if (!bVar4) {\n        return 0;\n    }\n    if (*0x544ae8 == 0) {\n        piVar5 = NULL;\n    }\n    else {\n        piVar5 = (*0x544ae8 >> 0x13) << 3;\n        *0x544ae8 = *piVar5;\n        LOCK();\n    }\n    if (piVar5 == NULL) {\n        return 0;\n    }\n    do {\n        uVar2 = *(in_RAX + 0xd0);\n        if (uVar2 < 1) goto code_r0x0041b291;\n        *(*0x20 + -0x18) = uVar2;\n        LOCK();\n        puVar1 = in_RAX + 0xd0;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar2 - 1);\n    } while (uVar2 != uVar3);\n    uVar2 = *(*0x20 + -0x18);\ncode_r0x0041b291:\n    if (uVar2 < 1) {\n        if (*(in_RAX + 0xf0) == 0.0) {\n            *(*0x20 + -0x38) = 0x41b315;\n            fcn.004095e0();\n            return 0;\n        }\n        iVar7 = arg1 - *(in_RAX + 200);\n        if ((0 < iVar7) && (*(in_RAX + 0xf0) < *(unaff_RBX + 0x1218) / iVar7)) {\n            *(*0x20 + -0x38) = 0x41b2ea;\n            fcn.004095e0(in_RAX, piVar5, arg1, 0x544ae8);\n            return 0;\n        }\n        *(unaff_RBX + 0x1228) = 2;\n    }\n    else {\n        *(unaff_RBX + 0x1228) = 1;\n    }\n    *(*0x20 + -0x10) = piVar5[2];\n    *(*0x20 + -0x38) = 0x41b34b;\n    fcn.00434500(1);\n    if (*0x4f6bd0 != '\\0') {\n        *(*0x20 + -0x38) = 0x41b365;\n        fcn.0044c900();\n    }\n    return *(*0x20 + -0x10);\n}\n",
        "token_count": 1352
    },
    "0041b3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b3c0(void)\n\n{\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack16 [8];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *(in_RAX + 0x80) = unaff_RBX;\n    *(in_RAX + 0x50) = unaff_RBX;\n    *(in_RAX + 0x58) = *(in_RAX + 0x88);\n    *(in_RAX + 0x60) = *(in_RAX + 0x88);\n    *(in_RAX + 0x68) = *(in_RAX + 0x90);\n    *(in_RAX + 0x40) = 0xffffffffffffffff;\n    if (*0x4f6bd0 != '\\0') {\n        fcn.0044b220(auStack16);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0041b520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041b520(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX != 0) {\n        LOCK();\n        iVar2 = *0x545350 + unaff_RBX;\n        iVar1 = unaff_RBX + *0x545350;\n        *0x545350 = iVar2;\n        if (*0x4f6bd0 != '\\0') {\n            fcn.0044cba0(arg1, iVar1);\n        }\n    }\n    if (*0x544a1c == 0) {\n        if (arg1 != 0) {\n            LOCK();\n            *0x545358 = *0x545358 + arg1;\n        }\n    }\n    else {\n        fcn.0041a9c0();\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0041c020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c020(ulong noname_0, int64_t arg2, ulong arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t noname_0_00;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 8) == 0) {\n                *(*0x20 + 8) = in_RAX;\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 8) = unaff_R14;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41c069;\n                    fcn.00458b80(unaff_R14, arg2, arg3, in_R9);\n                }\n                *(*0x20 + -0x20) = 0x41c075;\n                iVar1 = fcn.0040ba20();\n                if (*0x544c10 == 0) {\n                    noname_0_00 = *(*0x20 + 8);\n                    *(noname_0_00 + 0x18) = iVar1;\n                }\n                else {\n                    arg2 = *(*0x20 + 8);\n                    *(*0x20 + -0x20) = 0x41c09d;\n                    iVar1 = fcn.00458a80(arg2 + 0x18, arg2, arg3, in_R9);\n                    noname_0_00 = arg2;\n                }\n                *(iVar1 + 0x20) = 0x471480;\n                if (*0x544c10 == 0) {\n                    *(iVar1 + 0x28) = noname_0_00;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x41c0c9;\n                    fcn.00458b80(noname_0_00, arg2, arg3, in_R9);\n                }\n                if (*0x544c10 == 0) {\n                    *(*(noname_0_00 + 0x18) + 0x18) = 0x47c9f0;\n                    iVar1 = 0x47c9f0;\n                }\n                else {\n                    arg2 = 0x47c9f0;\n                    *(*0x20 + -0x20) = 0x41c0fe;\n                    fcn.00458ba0(noname_0_00, 0x47c9f0, arg3, in_R9);\n                    iVar1 = noname_0_00;\n                }\n                *(noname_0_00 + 0x38) = 0x3fd599999999999a;\n                *(noname_0_00 + 0x40) = 0x41486a0000000000;\n                *(noname_0_00 + 0x48) = 0x41cdcd6500000000;\n                *(noname_0_00 + 0x50) = 0x3f50624dd2f1a9fc;\n                *(noname_0_00 + 0x58) = 0x408f400000000000;\n                *(noname_0_00 + 0x60) = in_XMM15;\n                *(noname_0_00 + 0x30) = *0x48f5b0;\n                if (*(noname_0_00 + 0x88) == 0) {\n                    if (*0x544c10 == 0) {\n                        *(noname_0_00 + 0x88) = 0x47c9f8;\n                    }\n                    else {\n                        arg2 = 0x47c9f8;\n                        *(*0x20 + -0x20) = 0x41c195;\n                        fcn.00458ba0(noname_0_00, 0x47c9f8, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x90) == 0) {\n                    if (*0x544c10 == 0) {\n                        *(noname_0_00 + 0x90) = 0x47ca00;\n                    }\n                    else {\n                        arg2 = 0x47ca00;\n                        *(*0x20 + -0x20) = 0x41c1d4;\n                        fcn.00458ba0(noname_0_00, 0x47ca00, arg3, in_R9);\n                        iVar1 = noname_0_00;\n                    }\n                }\n                if (*(noname_0_00 + 0x98) == 0) {\n                    if (*0x544c10 == 0) {\n                        *(noname_0_00 + 0x98) = 0x47ca08;\n                    }\n                    else {\n                        *(*0x20 + -0x20) = 0x41c20e;\n                        fcn.00458a80(iVar1, arg2, arg3, in_R9);\n                    }\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x41c229;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x41c234;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1356
    },
    "0041c2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041c2e0(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    if (*(in_RAX + 0x10) != '\\0') {\n        *(in_RAX + 0x20) = 0;\n        *(in_RAX + 0x10) = 0;\n        *(*(in_RAX + 8) + 0xa0) = 0;\n        fcn.00438800();\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 177
    },
    "0041ca80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041ca80(void)\n\n{\n    char cVar1;\n    ulong in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x41caa6;\n            fcn.00431980();\n            unaff_RBX = *0x545408;\n            if (*0x5453f8 + *0x545408 != 0) {\n                *(*0x20 + -0x18) = *0x545400;\n                *(*0x20 + -0x10) = (*0x5453f8 * 100) / (*0x5453f8 + *0x545408);\n                *(*0x20 + -0x30) = 0x41cae9;\n                fcn.00431980();\n                *(*0x20 + -0x30) = 0x41cafa;\n                fcn.00432280();\n                *(*0x20 + -0x30) = 0x41cb08;\n                fcn.00431f80();\n                *(*0x20 + -0x30) = 0x41cb19;\n                fcn.00432280();\n                *(*0x20 + -0x30) = 0x41cb27;\n                fcn.00431f80();\n                *(*0x20 + -0x30) = 0x41cb38;\n                fcn.00432280();\n                *(*0x20 + -0x30) = 0x41cb45;\n                fcn.00431f80();\n                *(*0x20 + -0x30) = 0x41cb56;\n                fcn.00432280();\n                *(*0x20 + -0x30) = 0x41cb5b;\n                fcn.00431a00();\n                if (*(*0x20 + 0x10) == '\\0') {\n                    if (*0x4f1ef8 != '\\0') {\n                        *(*0x20 + -0x30) = 0x41cb72;\n                        fcn.00431980();\n                        *(*0x20 + -0x30) = 0x41cb85;\n                        fcn.00432280();\n                        *(*0x20 + -0x30) = 0x41cb8a;\n                        fcn.00431a00();\n                        *0x4f1ef8 = '\\0';\n                    }\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x41cb98;\n                    fcn.00431980();\n                    *(*0x20 + -0x30) = 0x41cba9;\n                    fcn.00432280();\n                    *(*0x20 + -0x30) = 0x41cbae;\n                    fcn.00431a00();\n                }\n                *(*0x20 + -0x30) = 0x41cbb3;\n                fcn.00431980();\n                *(*0x20 + -0x30) = 0x41cbb8;\n                fcn.00431be0();\n                *(*0x20 + -0x30) = 0x41cbbd;\n                fcn.00431a00();\n                cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n                *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n                if (cVar1 == '\\x01') {\n                    *(*0x20 + -0x30) = 0x41cbe5;\n                    fcn.00409a80();\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41cbf4;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_RBX;\n        *(puVar2 + -8) = 0x41cc05;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = puVar2[0x10];\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1083
    },
    "0041cc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0041cc20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    uint8_t *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar6 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = arg1;\n            uVar4 = *0x544b48 >> 0xd;\n            if (uVar4 == 0) {\n                uVar4 = 1;\n            }\n            *(*0x20 + -0x50) = uVar4;\n            uVar7 = unaff_RDI >> 0xd;\n            uVar4 = unaff_RDI & 0x1fff;\n            unaff_RDI = uVar7;\n            if (uVar4 != 0) {\n                unaff_RDI = uVar7 + 1;\n            }\n            *(*0x20 + -0x48) = unaff_RDI;\n            *(*0x20 + -0x80) = 0x41cc97;\n            fcn.00409860();\n            iVar2 = *(*0x20 + 8);\n            arg1 = *(iVar2 + 0x68);\n            unaff_RBX = *(iVar2 + 0x60);\n            uVar4 = *(*0x20 + 0x10);\n            if (uVar4 < arg1) {\n                uVar7 = *(unaff_RBX + uVar4 * 8);\n                if (uVar7 < 0) {\n                    uVar7 = 0x200000;\n                }\n                else {\n                    uVar7 = uVar7 >> 0x15 & 0x1fffff;\n                }\n                if (uVar7 < *(*0x20 + -0x50)) {\ncode_r0x0041cd3b:\n                    arg1 = *(iVar2 + 0x100c8);\n                    unaff_RBX = *(iVar2 + 0x100c0);\n                    if (uVar4 >> 3 < arg1) {\n                        puVar5 = unaff_RBX + (uVar4 >> 3);\n                        LOCK();\n                        *puVar5 = *puVar5 & ~(1 << (uVar4 & 7));\n                        *(*0x20 + -0x80) = 0x41cd7f;\n                        fcn.00409a80();\n                        return 0;\n                    }\ncode_r0x0041cf1e:\n                    *(*0x20 + -0x80) = 0x41cf26;\n                    fcn.00458f40(arg1);\n                }\n                else {\n                    arg1 = uVar4;\n                    if (uVar4 >> 0xd < 0x2000) {\n                        *(*0x20 + -0x18) = uVar4 >> 0xd;\n                        arg1 = (uVar4 & 0x1fff) << 7;\n                        *(*0x20 + -0x20) = arg1;\n                        iVar2 = *(*0x20 + -0x10);\n                        unaff_RDI = *(*0x20 + -0x48);\n                        *(*0x20 + -0x80) = 0x41cd25;\n                        iVar1 = fcn.0041d140(*(*0x20 + -0x50));\n                        if (iVar2 == 0) {\n                            uVar4 = *(*0x20 + 0x10);\n                            iVar2 = *(*0x20 + 8);\n                            goto code_r0x0041cd3b;\n                        }\n                        *(*0x20 + -0x40) = iVar1;\n                        *(*0x20 + -0x58) = iVar2;\n                        unaff_RDI = 0xffff800000000000;\n                        *(*0x20 + -0x38) = *(*0x20 + 0x10) * 0x400000 + iVar1 * 0x2000 + -0x800000000000;\n                        *(*0x20 + -0x80) = 0x41cdcd;\n                        iVar2 = fcn.00424000(iVar2);\n                        if (iVar2 == 0) {\n                            *(*0x20 + -0x80) = 0x41cdeb;\n                            fcn.00409a80();\n                            if (*(*(*0x20 + 8) + 0x10108) == '\\0') {\n                                *(*0x20 + -0x80) = 0x41ce1f;\n                                fcn.00412860();\n                                *(*0x20 + -0x28) = *(*0x20 + -0x58) << 0xd;\n                                *(*0x20 + -0x80) = 0x41ce39;\n                                fcn.00429a40();\n                                *(*0x20 + -0x30) = -*(*0x20 + -0x28);\n                                *(*0x20 + -0x80) = 0x41ce52;\n                                fcn.00429a40();\n                                *(*0x20 + -0x80) = 0x41ce5e;\n                                piVar3 = fcn.00429b00();\n                                LOCK();\n                                *piVar3 = *piVar3 + *(*0x20 + -0x30);\n                                LOCK();\n                                piVar3 = piVar3 + 1;\n                                iVar2 = *piVar3;\n                                *piVar3 = *piVar3 + *(*0x20 + -0x28);\n                                *(*0x20 + -0x80) = 0x41ce7f;\n                                fcn.00429be0(iVar2);\n                            }\n                            *(*0x20 + -0x80) = 0x41ce94;\n                            fcn.00409860();\n                            *(*0x20 + -0x80) = 0x41ceb0;\n                            fcn.004254e0(*(*0x20 + -0x58));\n                            *(*0x20 + -0x80) = 0x41cee5;\n                            fcn.00426ac0(*(*0x20 + -0x58));\n                            *(*0x20 + -0x80) = 0x41cefa;\n                            fcn.00409a80();\n                            return *(*0x20 + -0x58) << 0xd;\n                        }\n                        unaff_RBX = 0xf;\n                        *(*0x20 + -0x80) = 0x41cf1e;\n                        fcn.00430040();\n                        goto code_r0x0041cf1e;\n                    }\n                }\n                *(*0x20 + -0x80) = 0x41cf30;\n                fcn.00458f40(0x2000);\n            }\n            *(*0x20 + -0x80) = 0x41cf38;\n            in_RAX = fcn.00458f40(arg1);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41cf52;\n        fcn.0045b2e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1848
    },
    "0041cf80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041cf80(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX < 5) {\n                if (unaff_RBX == 1) {\n                    return in_RAX;\n                }\n                if (unaff_RBX == 2) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x5555555555555555) + 0x5555555555555555 | 0x5555555555555555);\n                    goto code_r0x0041d0c6;\n                }\n                if (unaff_RBX == 4) {\n                    uVar2 = ~((in_RAX & 0x7777777777777777) + 0x7777777777777777 | in_RAX | 0x7777777777777777);\ncode_r0x0041d0c6:\n                    return ~(uVar2 - (-(unaff_RBX - 1 < 0x40) & uVar2 >> (unaff_RBX - 1 & 0x3f)) | uVar2);\n                }\n            }\n            else if (unaff_RBX < 0x11) {\n                if (unaff_RBX == 8) {\n                    uVar2 = ~((in_RAX & 0x7f7f7f7f7f7f7f7f) + 0x7f7f7f7f7f7f7f7f | in_RAX | 0x7f7f7f7f7f7f7f7f);\n                    goto code_r0x0041d0c6;\n                }\n                if (unaff_RBX == 0x10) {\n                    uVar2 = ~((in_RAX & 0x7fff7fff7fff7fff) + 0x7fff7fff7fff7fff | in_RAX | 0x7fff7fff7fff7fff);\n                    goto code_r0x0041d0c6;\n                }\n            }\n            else {\n                if (unaff_RBX == 0x20) {\n                    uVar2 = ~((in_RAX & 0x7fffffff7fffffff) + 0x7fffffff7fffffff | in_RAX | 0x7fffffff7fffffff);\n                    goto code_r0x0041d0c6;\n                }\n                if (unaff_RBX == 0x40) {\n                    uVar2 = ~(in_RAX | (in_RAX & 0x7fffffffffffffff) + 0x7fffffffffffffff | 0x7fffffffffffffff);\n                    goto code_r0x0041d0c6;\n                }\n            }\n            unaff_RBX = 0xb;\n            *(*0x20 + -0x20) = 0x41d105;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x41d115;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 869
    },
    "0041da40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0041da40(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0041da40:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x18) = in_RAX + 0x118;\n        iVar3 = in_RAX + 0x128;\n        *(*0x20 + -0x20) = iVar3;\n        *(*0x20 + -0x10) = iVar3;\n        iVar2 = 0;\n        do {\n            if (1 < iVar2) {\n                iVar2 = *(in_RAX + 0x120);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x50) = 0x41db39;\n                    fcn.00420540(iVar2, iVar3);\n                    *(*(*0x20 + 8) + 0x120) = 0;\n                }\n                return 0;\n            }\n            piVar5 = *(*0x20 + iVar2 * 8 + -0x18);\n            iVar6 = *piVar5;\n            if (iVar6 != 0) {\n                if (*(iVar6 + 0x10) != 0) goto code_r0x0041dafb;\n                if (*(in_RAX + 0x120) != 0) {\n                    *(*0x20 + -0x30) = iVar2;\n                    *(*0x20 + -0x28) = piVar5;\n                    *(*0x20 + -0x38) = iVar6;\n                    *(*0x20 + -0x50) = 0x41dacf;\n                    fcn.00420540(iVar2, iVar3);\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x30);\n                    iVar3 = *(*0x20 + -0x20);\n                    piVar5 = *(*0x20 + -0x28);\n                    iVar6 = *(*0x20 + -0x38);\n                }\n                *(in_RAX + 0x120) = iVar6;\n                iVar6 = *(iVar6 + 0x18);\n                *piVar5 = iVar6;\n                if (iVar6 != 0) goto code_r0x0041dafb;\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x0041db66;\ncode_r0x0041dafb:\n    iVar3 = *(iVar6 + 0x10);\n    uVar1 = iVar3 - 1;\n    *(iVar6 + 0x10) = uVar1;\n    if (uVar1 < 0xfc) {\n        return *(iVar6 + 0x18 + iVar3 * 8);\n    }\n    *(*0x20 + -0x50) = 0x41db65;\n    in_RAX = fcn.00458f20(0xfc);\ncode_r0x0041db66:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + -8) = 0x41db70;\n    fcn.004568e0();\n    in_RAX = *(puVar4 + 8);\n    *0x20 = puVar4;\n    goto code_r0x0041da40;\n}\n",
        "token_count": 909
    },
    "0041de40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041df76)\n// WARNING: Removing unreachable block (ram,0x0041df43)\n\nint64_t fcn.0041de40(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar2 = *(in_RAX + 0x10118);\n            *(*0x20 + -0x10) = uVar2;\n            uVar3 = *0x4f1e20;\ncode_r0x0041de80:\n            if (0x10f < uVar3) {\n                if (*0x4f1e20 != 0xffffffff) {\n                    LOCK();\n                    *0x4f1e20 = 0xffffffff;\n                }\n                return 0;\n            }\n            if (0x87 < (uVar3 >> 1 & 0xff)) goto code_r0x0041dfc5;\n            *(*0x20 + -0xc) = uVar3;\n            if ((uVar3 & 1) == 0) {\n                if (1 < -((uVar2 >> 1 & 1) - 1)) goto code_r0x0041dfb9;\n                *(*0x20 + -0x28) = 0x41dee9;\n                iVar1 = fcn.00429620();\ncode_r0x0041df20:\n                if (iVar1 != 0) {\n                    if (*0x4f1e20 < *(*0x20 + -0xc)) {\n                        LOCK();\n                        *0x4f1e20 = *(*0x20 + -0xc);\n                    }\n                    return iVar1;\n                }\n                uVar3 = *(*0x20 + -0xc) + 1;\n                uVar2 = *(*0x20 + -0x10);\n                goto code_r0x0041de80;\n            }\n            if (-((uVar2 >> 1 & 1) - 1) < 2) {\n                *(*0x20 + -0x28) = 0x41df17;\n                iVar1 = fcn.00429620();\n                goto code_r0x0041df20;\n            }\n            *(*0x20 + -0x28) = 0x41dfb9;\n            fcn.00458f20(2);\ncode_r0x0041dfb9:\n            *(*0x20 + -0x28) = 0x41dfc5;\n            fcn.00458f20(2);\ncode_r0x0041dfc5:\n            *(*0x20 + -0x28) = 0x41dfd2;\n            in_RAX = fcn.00458f20(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41dfdd;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 814
    },
    "0041e000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0041e000(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    ulong noname_0;\n    ulong arg2;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x516dd8 == unaff_EBX) {\n                while( true ) {\n                    uVar1 = *in_RAX;\n                    uVar2 = uVar1;\n                    uVar3 = (uVar1 & 0x7fffffff) - 1;\n                    param_1 = uVar3;\n                    if (0x7fffffff < uVar3) break;\n                    LOCK();\n                    if (uVar1 == *in_RAX) {\n                        *in_RAX = uVar1 - 1;\n                        if (uVar1 == 0x80000000) {\n                            if (0 < *0x544e70) {\n                                *(*0x20 + -0x20) = *0x545350;\n                                *(*0x20 + -0x28) = *0x516e00;\n                                *(*0x20 + -0x10) = *0x516e10;\n                                *(*0x20 + -0x18) = *0x516e18;\n                                *(*0x20 + -0x40) = 0x41e0b1;\n                                arg2 = *0x516e10;\n                                fcn.00431980();\n                                *(*0x20 + -0x40) = 0x41e0c5;\n                                fcn.00432280();\n                                *(*0x20 + -0x40) = 0x41e0d3;\n                                fcn.00431f80();\n                                *(*0x20 + -0x40) = 0x41e0e5;\n                                fcn.00432280();\n                                noname_0 = *(*0x20 + -0x10);\n                                *(*0x20 + -0x40) = 0x41e0fb;\n                                fcn.00431f80();\n                                *(*0x20 + -0x40) = 0x41e10c;\n                                fcn.00432280();\n                                *(*0x20 + -0x40) = 0x41e116;\n                                fcn.00431f80();\n                                *(*0x20 + -0x40) = 0x41e127;\n                                fcn.00432280();\n                                *(*0x20 + -0x40) = 0x41e132;\n                                fcn.00431c80(noname_0, arg2);\n                                *(*0x20 + -0x40) = 0x41e145;\n                                fcn.00432280();\n                                *(*0x20 + -0x40) = 0x41e14a;\n                                uVar2 = fcn.00431a00();\n                            }\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                }\n                *(*0x20 + -0x40) = 0x41e16f;\n                fcn.00430040();\n            }\n            unaff_EBX = 0x31;\n            *(*0x20 + -0x40) = 0x41e185;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        puVar4[0x14] = param_1;\n        *(puVar4 + -8) = 0x41e198;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x14];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 980
    },
    "0041e1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0041e1c0(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                *(*0x20 + -0x40) = 0x41e1e5;\n                iVar2 = fcn.0041e500();\n                if (iVar2 == -1) break;\n                *0x4f1e18 = *0x4f1e18 + 1;\n            }\n            if ((*0x4f1e1c & 0x7fffffff) == 0) {\n                *(*0x20 + -0x24) = *0x516dd8;\n                iVar2 = 0;\n                uVar1 = *0x516dd8;\n                while( true ) {\n                    if (0x87 < iVar2) {\n                        *(*0x20 + -0x40) = 0x41e294;\n                        fcn.0041c2e0();\n                        *(*0x20 + -0x40) = 0x41e299;\n                        fcn.004234e0();\n                        return;\n                    }\n                    uVar3 = -((uVar1 >> 1 & 1) - 1);\n                    if (1 < uVar3) break;\n                    *(*0x20 + -0x20) = iVar2;\n                    *(*0x20 + -0x10) = iVar2 * 0xc0;\n                    *(*0x20 + -0x18) = uVar3 * 5;\n                    *(*0x20 + -0x40) = 0x41e23a;\n                    fcn.00429760(0x5170d0);\n                    *(*0x20 + -0x40) = 0x41e25b;\n                    fcn.00429760(*(*0x20 + -0x10) + 0x517128);\n                    iVar2 = *(*0x20 + -0x20) + 1;\n                    uVar1 = *(*0x20 + -0x24);\n                }\n                *(*0x20 + -0x40) = 0x41e2ad;\n                fcn.00458f20(2);\n            }\n            *(*0x20 + -0x40) = 0x41e2be;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x41e2c5;\n        fcn.004568e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 679
    },
    "0041e2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041e2e0(ulong noname_0, ulong arg2, ulong arg3)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar3 = unaff_R14;\n    if (*0x544c10 != 0) {\n        fcn.00458b80(unaff_R14, arg2, arg3, in_R9);\n        iVar3 = *0x4f1e08;\n    }\n    *0x4f1e08 = iVar3;\n    fcn.00409860();\n    *0x4f1e10 = 1;\n    fcn.004041c0();\n    fcn.00432b60();\n    do {\n        iVar3 = 0;\n        while (iVar2 = fcn.0041e500(),  iVar2 != -1) {\n            *0x4f1e14 = *0x4f1e14 + 1;\n            iVar3 = iVar3 + 1;\n            if (((SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar3) >> 0x40, 0) + iVar3 >> 3) - (iVar3 >> 0x3f)) * 10\n                - iVar3 == 0) {\n                fcn.00432b00();\n            }\n        }\n        while (cVar1 = fcn.00420860(),  cVar1 != '\\0') {\n            fcn.00432b00();\n        }\n        fcn.00409860();\n        if (*0x4f1e1c == -0x80000000) {\n            *0x4f1e10 = 1;\n            fcn.00432b60();\n        }\n        else {\n            fcn.00409a80();\n        }\n    } while( true );\n}\n",
        "token_count": 472
    },
    "0041e460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0041e460(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 1) != '\\0') {\n                iVar1 = *in_RAX + -2;\n                if (*(unaff_RBX + 0x58) != iVar1) {\n                    return 0;\n                }\n                LOCK();\n                if (iVar1 != *(unaff_RBX + 0x58)) {\n                    return 0;\n                }\n                *(unaff_RBX + 0x58) = *in_RAX + -1;\n                return unaff_RBX;\n            }\n            unaff_RBX = 0x1a;\n            *(*0x20 + -0x20) = 0x41e4d6;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x41e4e6;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 419
    },
    "0041e500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e548)\n// WARNING: Removing unreachable block (ram,0x0041e63e)\n\nulong fcn.0041e500(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar9;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            uVar5 = *0x4f1e1c & 0x80000000;\n            if (uVar5 == 0) {\n                *0x4f1e1c = *0x4f1e1c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x28) = *0x516dd8;\n            *(*0x20 + -0x24) = uVar5 == 0;\n            if (uVar5 != 0) {\n                *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                return 0xffffffffffffffff;\n            }\ncode_r0x0041e594:\n            do {\n                *(*0x20 + -0x50) = 0x41e5a5;\n                iVar6 = fcn.0041de40();\n                if (iVar6 == 0) {\n                    uVar5 = *0x4f1e1c & 0x80000000;\n                    if (uVar5 == 0) {\n                        *0x4f1e1c = *0x4f1e1c | 0x80000000;\n                        LOCK();\n                    }\n                    bVar9 = uVar5 == 0;\n                    iVar6 = -1;\ncode_r0x0041e654:\n                    *(*0x20 + -0x31) = bVar9;\n                    *(*0x20 + -0x18) = iVar6;\n                    *(*0x20 + -0x50) = 0x41e672;\n                    fcn.0041e000(*(*0x20 + -0x24));\n                    if (*(*0x20 + -0x31) != '\\0') {\n                        if (0 < *0x544e88) {\n                            *(*0x20 + -0x48) = 0x47cc90;\n                            *(*0x20 + -0x50) = 0x41e694;\n                            fcn.004567a0();\n                        }\n                        *0x4f1ea0 = 1;\n                    }\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) = *(*(*(*0x20 + -0x10) + 0x30) + 0xd8) + -1;\n                    return *(*0x20 + -0x18);\n                }\n                if (*(iVar6 + 99) == '\\x01') {\n                    *(*0x20 + -0x50) = 0x41e5d7;\n                    iVar7 = fcn.0041e460();\n                    *(*0x20 + -0x20) = iVar7;\n                    if (iVar6 != '\\0') {\n                        *(*0x20 + -0x18) = *(iVar7 + 0x20);\n                        *(*0x20 + -0x50) = 0x41e5f9;\n                        cVar4 = fcn.0041e8e0();\n                        if (cVar4 == '\\0') {\n                            iVar6 = 0;\n                        }\n                        else {\n                            iVar6 = *(*0x20 + -0x18);\n                            LOCK();\n                            *0x516e28 = *0x516e28 + iVar6;\n                        }\n                        bVar9 = false;\n                        goto code_r0x0041e654;\n                    }\n                    goto code_r0x0041e594;\n                }\n                iVar2 = *(iVar6 + 0x58);\n                iVar3 = *(*0x20 + -0x28);\n            } while ((iVar3 == iVar2) || (iVar2 == iVar3 + 3));\n            *(*0x20 + -0x32) = *(iVar6 + 99);\n            *(*0x20 + -0x2c) = iVar2;\n            *(*0x20 + -0x30) = iVar3;\n            *(*0x20 + -0x50) = 0x41e6e5;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x41e6f6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x41e705;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x41e716;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x41e71f;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x41e730;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x41e739;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x41e73e;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x41e745;\n            fcn.00431a00();\n            *(*0x20 + -0x50) = 0x41e756;\n            fcn.00430040();\n        }\n        *(puVar8 + -8) = 0x41e75c;\n        fcn.004568e0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1476
    },
    "0041e780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e7bc)\n\nvoid fcn.0041e780(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30);\n            if (((*(piVar1 + 0x1b) != 0) || (*(piVar1 + 0x18) != 0)) || (*piVar1 == unaff_R14)) {\n                uVar3 = *0x4f1e1c & 0x80000000;\n                if (uVar3 == 0) {\n                    *0x4f1e1c = *0x4f1e1c + 1;\n                    LOCK();\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = *0x516dd8;\n                *(*0x20 + -0x1c) = uVar3 == 0;\n                if (uVar3 == 0) {\n                    *(*0x20 + -0x38) = 0x41e81d;\n                    uVar2 = fcn.0041e460();\n                    *(*0x20 + -0x18) = uVar2;\n                    if (in_RAX != '\\0') {\n                        *(*0x20 + -0x38) = 0x41e84e;\n                        fcn.0041e8e0();\n                        *(*0x20 + -0x38) = 0x41e865;\n                        fcn.0041e000(*(*0x20 + -0x1c));\n                        return;\n                    }\n                    *(*0x20 + -0x38) = 0x41e83b;\n                    fcn.0041e000();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                while( true ) {\n                    if ((*(in_RAX + 0x58) == *(*0x20 + -0x20)) || (*(in_RAX + 0x58) == *(*0x20 + -0x20) + 3)) break;\n                    *(*0x20 + -0x30) = 0x47cc98;\n                    *(*0x20 + -0x38) = 0x41e87f;\n                    fcn.004567a0();\n                    in_RAX = *(*0x20 + -0x10);\n                }\n                return;\n            }\n            *(*0x20 + -0x38) = 0x41e8c6;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41e8d1;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 783
    },
    "0041f9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041f9c0(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    double extraout_XMM0_Qa;\n    double dVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x516e18 == 0.0) {\n        return;\n    }\n    if (*0x4f6bd0 != '\\0') {\n        fcn.0044c420();\n    }\n    do {\n        iVar1 = *0x516e08;\n        uVar2 = in_RAX;\n        if (*0x516e10 < *0x545350) {\n            uVar2 = (*0x545350 - *0x516e10) + in_RAX;\n        }\n        if (uVar2 < 0) {\n            dVar5 = uVar2 >> 1 | uVar2 & 1;\n            dVar5 = dVar5 + dVar5;\n        }\n        else {\n            dVar5 = uVar2;\n        }\n        dVar5 = *0x516e18 * dVar5;\n        iVar3 = dVar5;\n        do {\n            if (iVar3 - unaff_RBX <= *0x516e00 - iVar1) {\ncode_r0x0041faf0:\n                if (*0x4f6bd0 != '\\0') {\n                    fcn.0044c520();\n                }\n                return;\n            }\n            iVar4 = fcn.0041e500(dVar5, 0);\n            if (iVar4 == -1) {\n                *0x516e18 = 0.0;\n                goto code_r0x0041faf0;\n            }\n            dVar5 = extraout_XMM0_Qa;\n        } while (*0x516e08 == iVar1);\n    } while( true );\n}\n",
        "token_count": 478
    },
    "0041fc40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041fc40(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            iVar1 = *in_RAX;\n            if (iVar1 == 0) {\n                *(*0x20 + -0x28) = 0x41fcd5;\n                fcn.0041fbe0();\n                iVar2 = **(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n                bVar4 = false;\n            }\n            else if (*(iVar1 + 0x10) == 0xfd) {\n                iVar2 = in_RAX[1];\n                *in_RAX = iVar2;\n                in_RAX[1] = iVar1;\n                bVar4 = *(iVar2 + 0x10) == 0xfd;\n                if (bVar4) {\n                    *(*0x20 + -0x10) = 0xfd;\n                    *(*0x20 + -0x28) = 0x41fc99;\n                    fcn.004205a0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x28) = 0x41fca7;\n                    iVar2 = fcn.004202c0();\n                    **(*0x20 + 8) = iVar2;\n                    bVar4 = *(*0x20 + -0x10) == 0xfd;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n            }\n            else {\n                bVar4 = false;\n                iVar2 = iVar1;\n            }\n            if (*(iVar2 + 0x10) < 0xfd) {\n                *(iVar2 + 0x18 + *(iVar2 + 0x10) * 8) = unaff_RBX;\n                *(iVar2 + 0x10) = *(iVar2 + 0x10) + 1;\n                if ((bVar4) && (*0x544a24 == 1)) {\n                    *(*0x20 + -0x28) = 0x41fd13;\n                    fcn.0041afa0();\n                }\n                return;\n            }\n            *(*0x20 + -0x28) = 0x41fd27;\n            in_RAX = fcn.00458f20(0xfd);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x41fd37;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 791
    },
    "0041fd60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041fd60(uint64_t arg1)\n\n{\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    char cVar6;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            iVar4 = *in_RAX;\n            if (iVar4 == 0) {\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + -0x58) = 0x41fda6;\n                fcn.0041fbe0();\n                iVar4 = **(*0x20 + 8);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n            }\n            cVar6 = '\\0';\n            while( true ) {\n                if (arg1 == 0) {\n                    if ((cVar6 != '\\0') && (*0x544a24 == 1)) {\n                        *(*0x20 + -0x58) = 0x41fea5;\n                        fcn.0041afa0();\n                    }\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1;\n                while (uVar2 = *(iVar4 + 0x10),  uVar2 == 0xfd) {\n                    *(*0x20 + -0x58) = 0x41feb7;\n                    fcn.004205a0();\n                    *(*(*0x20 + 8) + 0x20) = 1;\n                    *(*0x20 + -0x58) = 0x41fec5;\n                    iVar3 = fcn.004202c0();\n                    piVar1 = *(*0x20 + 8);\n                    iVar4 = piVar1[1];\n                    *piVar1 = iVar4;\n                    piVar1[1] = iVar3;\n                    arg1 = *(*0x20 + -0x20);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    cVar6 = '\\x01';\n                }\n                if (0xfd < uVar2) goto code_r0x0041ff06;\n                iVar3 = uVar2 - 0xfd;\n                uVar7 = -iVar3;\n                if (SBORROW8(arg1, -iVar3) != arg1 + iVar3 < 0) {\n                    uVar7 = arg1;\n                }\n                if (unaff_RBX != (uVar2 << 3 & iVar3 >> 0x3f) + 0x18 + iVar4) {\n                    *(*0x20 + -0x30) = iVar4;\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x31) = cVar6;\n                    *(*0x20 + -0x58) = 0x41fe57;\n                    fcn.00459880(uVar7 << 3);\n                    arg1 = *(*0x20 + -0x20);\n                    iVar4 = *(*0x20 + -0x30);\n                    unaff_RBX = *(*0x20 + -0x10);\n                    cVar6 = *(*0x20 + -0x31);\n                    unaff_RDI = *(*0x20 + -0x18);\n                    uVar7 = *(*0x20 + -0x28);\n                }\n                *(iVar4 + 0x10) = *(iVar4 + 0x10) + uVar7;\n                if (arg1 < uVar7) break;\n                unaff_RDI = unaff_RDI - uVar7;\n                arg1 = arg1 - uVar7;\n                unaff_RBX = unaff_RBX + (-unaff_RDI >> 0x3f & uVar7 << 3);\n            }\n            *(*0x20 + -0x58) = 0x41ff06;\n            fcn.00458fe0(arg1);\ncode_r0x0041ff06:\n            arg1 = 0xfd;\n            *(*0x20 + -0x58) = 0x41ff13;\n            in_RAX = fcn.00458fe0(0xfd);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x41ff2d;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1373
    },
    "0041ff60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041ff60(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            iVar3 = *in_RAX;\n            if (iVar3 == 0) {\n                *(*0x20 + -0x30) = 0x41ff8a;\n                fcn.0041fbe0();\n                in_RAX = *(*0x20 + 8);\n                iVar3 = *in_RAX;\n            }\n            if (*(iVar3 + 0x10) == 0) {\n                iVar3 = in_RAX[1];\n                iVar2 = *in_RAX;\n                *in_RAX = iVar3;\n                in_RAX[1] = iVar2;\n                if (*(iVar3 + 0x10) == 0) {\n                    *(*0x20 + -0x10) = iVar3;\n                    *(*0x20 + -0x30) = 0x41ffbb;\n                    iVar3 = fcn.00420600();\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    *(*0x20 + -0x18) = iVar3;\n                    *(*0x20 + -0x30) = 0x41ffd4;\n                    fcn.00420540();\n                    iVar3 = *(*0x20 + -0x18);\n                    **(*0x20 + 8) = iVar3;\n                }\n            }\n            iVar2 = *(iVar3 + 0x10);\n            uVar1 = iVar2 - 1;\n            *(iVar3 + 0x10) = uVar1;\n            if (uVar1 < 0xfd) {\n                return *(iVar3 + 0x10 + iVar2 * 8);\n            }\n            *(*0x20 + -0x30) = 0x420025;\n            in_RAX = fcn.00458f20(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420030;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 629
    },
    "00420040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00420040(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*in_RAX != 0) {\n        if (*(*in_RAX + 0x10) == 0) {\n            fcn.00420540();\n        }\n        else {\n            fcn.004205a0();\n            *(in_RAX + 4) = 1;\n        }\n        *in_RAX = 0;\n        if (*(in_RAX[1] + 0x10) == 0) {\n            fcn.00420540();\n        }\n        else {\n            fcn.004205a0();\n            *(in_RAX + 4) = 1;\n        }\n        in_RAX[1] = 0;\n    }\n    if (in_RAX[2] != 0) {\n        LOCK();\n        *0x4f2140 = *0x4f2140 + in_RAX[2];\n        in_RAX[2] = 0;\n    }\n    iVar1 = *0x545388;\n    iVar2 = in_RAX[3];\n    if (iVar2 != 0) {\n        LOCK();\n        *0x545388 = *0x545388 + iVar2;\n        in_RAX[3] = 0;\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 366
    },
    "00420140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420140(void)\n\n{\n    int64_t *in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*in_RAX != 0) {\n        if (*(in_RAX[1] + 0x10) == 0) {\n            if (*(*in_RAX + 0x10) < 5) {\n                return;\n            }\n            iVar1 = fcn.004206a0();\n            *in_RAX = iVar1;\n            *(in_RAX + 4) = 1;\n        }\n        else {\n            fcn.004205a0();\n            *(in_RAX + 4) = 1;\n            iVar1 = fcn.004202c0();\n            in_RAX[1] = iVar1;\n        }\n        if (*0x544a24 == 1) {\n            fcn.0041afa0();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00420200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420200(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) != 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x420236;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x420245;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 260
    },
    "00420260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420260(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x420296;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4202a5;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 262
    },
    "004202c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004202c0(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t *piStack56;\n    int64_t *piStack48;\n    uint64_t uStack40;\n    int64_t *piStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f20c8 == 0) {\n        piVar1 = NULL;\n        goto code_r0x004202e9;\n    }\n    while( true ) {\n        if (*0x4f20c8 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = (*0x4f20c8 >> 0x13) << 3;\n            *0x4f20c8 = *piVar1;\n            LOCK();\n        }\n        if (piVar1 != NULL) {\n            piStack32 = piVar1;\n            fcn.00420260();\n            piVar1 = piStack32;\n        }\ncode_r0x004202e9:\n        if (piVar1 != NULL) {\n            return;\n        }\n        iStack72 = 0;\n        piStack56 = piVar1;\n        if (*0x4f2118 != 0) {\n            fcn.00409860();\n            iStack72 = *0x4f2118;\n            if (*0x4f2118 != 0) {\n                fcn.00422aa0();\n                fcn.00422c20();\n            }\n            fcn.00409a80();\n        }\n        if (iStack72 != 0) goto code_r0x004203dc;\n        auStack24 = CONCAT88(&iStack72, 0x4204e0);\n        fcn.004567a0();\n        if (iStack72 != 0) break;\n        fcn.00430040();\n    }\n    fcn.00409860();\n    fcn.00422c20();\n    fcn.00409a80();\ncode_r0x004203dc:\n    uStack40 = 0;\n    piVar1 = piStack56;\n    while (uStack40 + 0x800 < 0x8001) {\n        piStack32 = *(iStack72 + 0x18) + uStack40;\n        piStack32[2] = 0;\n        uStack64 = uStack40;\n        piStack48 = piVar1;\n        uStack40 = uStack40 + 0x800;\n        fcn.00409740();\n        piVar1 = piStack32;\n        if (uStack64 != 0) {\n            fcn.00420540();\n            piVar1 = piStack48;\n        }\n    }\n    return;\n}\n",
        "token_count": 663
    },
    "00420760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420760(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x420785;\n            fcn.00409860();\n            if (*0x4f20c0 == 0) {\n                *0x4f20c8 = 0;\n                if (*0x4f2128 != NULL) {\n                    for (; *0x4f2128 != NULL; *0x4f2128 = **0x4f2128) {\n                        (*0x4f2128)[2] = 0x4f2118;\n                    }\n                    if (*0x4f2118 == 0) {\n                        *0x4f2118 = *0x4f2128;\n                        *0x4f2120 = *0x4f2130;\n                        *0x4f2128 = in_XMM15;\n                    }\n                    else {\n                        **0x4f2130 = *0x4f2118;\n                        *(*0x4f2118 + 8) = *0x4f2130;\n                        *0x4f2118 = *0x4f2128;\n                        *0x4f2128 = in_XMM15;\n                    }\n                }\n                *(*0x20 + -0x20) = 0x4207b8;\n                fcn.00409a80();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42084b;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x420851;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "00420860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00420860(void)\n\n{\n    int64_t unaff_R14;\n    bool bVar1;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    if ((*0x544a24 == 0) && (*0x4f2118 != 0)) {\n        fcn.004567a0();\n        bVar1 = *0x4f2118 != 0;\n        fcn.00409a80();\n        return bVar1;\n    }\n    fcn.00409a80();\n    return false;\n}\n",
        "token_count": 163
    },
    "00420bc1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00420bc1(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x516e30);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if ((iVar2 != 0) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) {\n        if (*(iVar2 + 99) - 1U < 2) {\n            return in_RAX & 0xffffffffffffff00 | (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX);\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "00420c61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00420c61(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x516e30);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "00420e60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00420e60(void)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t arg1;\n    uint64_t uVar5;\n    bool bVar6;\n    int64_t in_RAX;\n    uint64_t uVar7;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (0x7fffffffffffffff < *(in_RAX + 0x10160)) {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar4 = *(unaff_R14 + 0x30);\n    if (*0x4f6bd0 != '\\0') {\n        fcn.0044c420();\n    }\n    arg1 = *(in_RAX + 0x103d8);\n    bVar6 = false;\ncode_r0x00420f0d:\n    do {\n        if (unaff_RBX == 0) {\ncode_r0x00421018:\n            if (bVar6) {\n                fcn.00409a80();\n            }\n            if (*0x4f6bd0 != '\\0') {\n                fcn.0044c520();\n            }\n            iVar3 = *(iVar4 + 0xd8);\n            *(iVar4 + 0xd8) = iVar3 + -1;\n            if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return;\n        }\n        uVar7 = *(in_RAX + 0x10168);\n        if (uVar7 != 0) {\n            uVar8 = uVar7;\n            if (unaff_RBX < uVar7) {\n                uVar8 = unaff_RBX;\n            }\n            LOCK();\n            puVar2 = in_RAX + 0x10168;\n            uVar5 = *puVar2;\n            *puVar2 = *puVar2 ^ (uVar7 == uVar5) * (*puVar2 ^ uVar7 - uVar8);\n            if (uVar7 == uVar5) {\n                unaff_RBX = unaff_RBX - uVar8;\n            }\n            goto code_r0x00420f0d;\n        }\n        LOCK();\n        puVar2 = in_RAX + 0x10160;\n        uVar7 = *puVar2;\n        *puVar2 = *puVar2 + 0x200;\n        if (arg1 <= uVar7 >> 9) {\n            *(in_RAX + 0x10160) = 0x8000000000000000;\n            goto code_r0x00421018;\n        }\n        noname_1 = iVar4;\n        if (!bVar6) {\n            fcn.00409860();\n        }\n        uVar7 = fcn.004210a0(arg1, noname_1, 0x200);\n        if (unaff_RBX < uVar7) {\n            LOCK();\n            *(in_RAX + 0x10168) = *(in_RAX + 0x10168) + (uVar7 - unaff_RBX);\n            unaff_RBX = 0;\n        }\n        else {\n            unaff_RBX = unaff_RBX - uVar7;\n        }\n        bVar6 = true;\n    } while( true );\n}\n",
        "token_count": 857
    },
    "004210a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004210d2)\n\nulong fcn.004210a0(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uchar uVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    int64_t unaff_R14;\n    uint8_t uVar13;\n    \n    do {\n        puVar7 = *0x20;\n        uVar8 = unaff_RSI;\n        uVar10 = arg3;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar6 = *0x4f1e1c & 0x80000000;\n            if (uVar6 == 0) {\n                *0x4f1e1c = *0x4f1e1c + 1;\n                LOCK();\n            }\n            *(*0x20 + -0x88) = *0x516dd8;\n            *(*0x20 + -0x84) = uVar6 == 0;\n            if (uVar6 != 0) {\n                return 0;\n            }\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + 0x30) = arg3;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar4 = 0;\n            while( true ) {\n                if (arg3 == 0) {\n                    *(*0x20 + -0x70) = iVar4;\n                    *(*0x20 + -0xa8) = 0x421250;\n                    fcn.0041e000(*(*0x20 + -0x84));\n                    if (*0x4f6bd0 != '\\0') {\n                        *(*0x20 + -0xa8) = 0x421265;\n                        fcn.00409a80();\n                        *(*0x20 + -0xa8) = 0x42127e;\n                        fcn.0044c480(*(*0x20 + -0x70));\n                        *(*0x20 + -0xa8) = 0x42128a;\n                        fcn.00409860();\n                    }\n                    return *(*0x20 + -0x70);\n                }\n                uVar8 = unaff_RSI >> 9;\n                unaff_RDI = unaff_RSI;\n                uVar10 = arg3;\n                if (arg1 <= uVar8) goto code_r0x00421459;\n                uVar9 = *(unaff_RBX + uVar8 * 8);\n                uVar8 = uVar9 >> 0x14;\n                if (0x3f < uVar8) goto code_r0x0042144c;\n                uVar8 = *(*(in_RAX + 0x10170 + uVar8 * 8) + (uVar9 & 0xfffff) * 8);\n                uVar6 = unaff_RSI & 0x1ff;\n                uVar9 = uVar6;\n                unaff_RDI = uVar6 >> 3;\n                if (0x40 < unaff_RDI) break;\n                iVar1 = unaff_RDI - 0x40;\n                uVar10 = iVar1 >> 0x3f & unaff_RDI;\n                unaff_RDI = uVar10 + 0x11400 + uVar8;\n                iVar11 = uVar10 + 0x11440 + uVar8;\n                uVar10 = arg3 >> 3;\n                if (-iVar1 < uVar10 || -uVar10 == iVar1) {\n                    uVar10 = -iVar1;\n                }\n                *(*0x20 + -0x30) = arg3;\n                *(*0x20 + -0x68) = uVar10;\n                *(*0x20 + -0x58) = uVar8;\n                *(*0x20 + -0x38) = uVar9;\n                *(*0x20 + -0x18) = unaff_RDI;\n                *(*0x20 + -0x20) = iVar11;\n                *(*0x20 + -0x40) = unaff_RSI;\n                for (uVar12 = 0; uVar12 < uVar10; uVar12 = uVar12 + 1) {\n                    *(*0x20 + -0x10) = uVar12 + unaff_RDI;\n                    if (uVar10 <= uVar12) {\ncode_r0x00421434:\n                        *(*0x20 + -0xa8) = 0x42143f;\n                        fcn.00458f20(uVar10);\n                        goto code_r0x0042143f;\n                    }\n                    uVar13 = ~*(uVar12 + iVar11) & *(uVar12 + unaff_RDI);\n                    if (uVar13 != 0) {\n                        *(*0x20 + -0x60) = uVar12;\n                        for (uVar5 = 0; uVar5 < 8; uVar5 = uVar5 + 1) {\n                            if ((1 << (uVar5 & 0x1f) & uVar13) != 0) {\n                                uVar9 = uVar9 + uVar12 * 8 + uVar5;\n                                if (0x1ff < uVar9) {\n                                    *(*0x20 + -0xa8) = 0x421434;\n                                    fcn.00458f40(0x200);\n                                    goto code_r0x00421434;\n                                }\n                                *(*0x20 + -0x48) = uVar5;\n                                *(*0x20 + -0x50) = iVar4;\n                                *(*0x20 + -0x8a) = uVar13;\n                                uVar2 = *(uVar8 + 0x10400 + uVar9 * 8);\n                                *(*0x20 + -0xa8) = 0x42134e;\n                                iVar4 = fcn.0041e460();\n                                *(*0x20 + -0x80) = iVar4;\n                                if (uVar2 == '\\0') {\n                                    iVar11 = *(*0x20 + -0x20);\n                                    uVar13 = *(*0x20 + -0x8a);\n                                    iVar4 = *(*0x20 + -0x50);\n                                }\n                                else {\n                                    *(*0x20 + -0x78) = *(iVar4 + 0x20);\n                                    *(*0x20 + -0xa8) = 0x42138e;\n                                    fcn.00409a80();\n                                    *(*0x20 + -0xa8) = 0x42139a;\n                                    uVar3 = fcn.0041e8e0();\n                                    *(*0x20 + -0x89) = uVar3;\n                                    *(*0x20 + -0xa8) = 0x4213aa;\n                                    fcn.00409860();\n                                    iVar4 = *(*0x20 + -0x50);\n                                    if (*(*0x20 + -0x89) != '\\0') {\n                                        iVar4 = *(*0x20 + -0x78) + *(*0x20 + -0x50);\n                                    }\n                                    iVar11 = *(*0x20 + -0x20);\n                                    uVar13 = **(*0x20 + -0x10) & ~*(*(*0x20 + -0x60) + iVar11);\n                                }\n                                uVar5 = *(*0x20 + -0x48);\n                                uVar8 = *(*0x20 + -0x58);\n                                unaff_RDI = *(*0x20 + -0x18);\n                                uVar10 = *(*0x20 + -0x68);\n                                uVar9 = *(*0x20 + -0x38);\n                                uVar12 = *(*0x20 + -0x60);\n                                unaff_RBX = *(*0x20 + 0x10);\n                            }\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RSI = *(*0x20 + -0x40);\n                        }\n                    }\n                    in_RAX = *(*0x20 + -0x28);\n                    arg3 = *(*0x20 + -0x30);\n                }\n                unaff_RSI = unaff_RSI + uVar10 * 8;\n                arg3 = arg3 + uVar10 * -8;\n            }\ncode_r0x0042143f:\n            *(*0x20 + -0xa8) = 0x42144c;\n            fcn.00459000(0x40);\ncode_r0x0042144c:\n            arg1 = 0x40;\n            *(*0x20 + -0xa8) = 0x421459;\n            fcn.00458f40(0x40);\ncode_r0x00421459:\n            *(*0x20 + -0xa8) = 0x421465;\n            in_RAX = fcn.00458f40(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x20) = unaff_RDI;\n        *(puVar7 + 0x28) = uVar8;\n        *(puVar7 + 0x30) = uVar10;\n        *(puVar7 + -8) = 0x421489;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        unaff_RDI = *(puVar7 + 0x20);\n        unaff_RSI = *(puVar7 + 0x28);\n        arg3 = *(puVar7 + 0x30);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2406
    },
    "004218c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004218c0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n        iStackX8 = in_RAX;\n    }\n    iVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0xdc8) != 0) goto code_r0x00421917;\n        iVar4 = 0;\n        iStackX8 = in_RAX;\n        iStack16 = iVar2;\n        do {\n            iVar2 = iStackX8;\n            if (0x3f < iVar4) {\n                *(iStack16 + 0xdc8) = 0x40;\n                iVar2 = iStack16;\ncode_r0x00421917:\n                uVar1 = *(iVar2 + 0xdc8) - 1;\n                if (uVar1 < 0x80) {\n                    uVar3 = *(iVar2 + 0xdc8 + *(iVar2 + 0xdc8) * 8);\n                    *(iVar2 + 0xdc8) = uVar1;\n                    return uVar3;\n                }\n                iVar4 = 0x80;\n                iVar2 = fcn.00458f20(0x80);\n            }\n            uVar3 = fcn.00413460(iVar2 + 0x16a10);\n            *(iStack16 + 0xdd0 + iVar4 * 8) = uVar3;\n            iVar4 = iVar4 + 1;\n        } while( true );\n    }\n    uVar3 = fcn.00413460();\n    return uVar3;\n}\n",
        "token_count": 461
    },
    "00422c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00422c20(void)\n\n{\n    int64_t *piVar1;\n    int64_t **in_RAX;\n    int64_t **unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *unaff_RBX;\n            *(*0x20 + -0x10) = piVar1;\n            if (((piVar1 == NULL) && (unaff_RBX[1] == NULL)) && (unaff_RBX[2] == NULL)) {\n                *unaff_RBX = *in_RAX;\n                if (*in_RAX == NULL) {\n                    in_RAX[1] = unaff_RBX;\n                }\n                else {\n                    (*in_RAX)[1] = unaff_RBX;\n                }\n                *in_RAX = unaff_RBX;\n                unaff_RBX[2] = in_RAX;\n                return;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = unaff_RBX[1];\n            *(*0x20 + -0x20) = unaff_RBX[2];\n            *(*0x20 + -0x38) = 0x422c9d;\n            fcn.00431980();\n            *(*0x20 + -0x38) = 0x422cae;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422cb8;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422cbd;\n            fcn.00431ba0();\n            *(*0x20 + -0x38) = 0x422cc7;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422ccc;\n            fcn.00431ba0();\n            *(*0x20 + -0x38) = 0x422cd6;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422cdb;\n            fcn.00431ba0();\n            *(*0x20 + -0x38) = 0x422ce5;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422cea;\n            fcn.00431be0();\n            *(*0x20 + -0x38) = 0x422cef;\n            fcn.00431a00();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x422d05;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x422d15;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 803
    },
    "00422d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00422d40(void)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int64_t **ppiVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint8_t *puVar11;\n    ulong unaff_RBX;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x48) = 0x422d67;\n            iVar5 = fcn.00420c60();\n            if (iVar5 != 0) {\n                *(*0x20 + -0x28) = iVar5;\n                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                *piVar1 = *piVar1 + 1;\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x48) = 0x422d8e;\n                fcn.0041e780();\n                *(*0x20 + -0x20) = *(*0x20 + 8) - *(*(*0x20 + -0x28) + 0x18);\n                *(*0x20 + -0x29) = *(*(*0x20 + 0x10) + 10);\n                *(*0x20 + -0x10) = *(*0x20 + -0x28) + 0x78;\n                *(*0x20 + -0x48) = 0x422dc5;\n                fcn.00409860();\n                iVar5 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x29);\n                uVar6 = *(*0x20 + -0x20);\n                ppiVar4 = iVar5 + 0x80;\n                while (ppiVar8 = ppiVar4,  ppiVar4 = *ppiVar8,  ppiVar4 != NULL) {\n                    uVar9 = *(ppiVar4 + 1);\n                    if ((uVar9 == uVar6) && (*(ppiVar4 + 10) == uVar2)) {\n                        *(*0x20 + -0x48) = 0x422e13;\n                        fcn.00409a80();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 0;\n                    }\n                    if ((uVar6 < uVar9) || ((uVar9 == uVar6 && (uVar2 <= *(ppiVar4 + 10) && *(ppiVar4 + 10) != uVar2))))\n                    break;\n                }\n                ppiVar4 = *(*0x20 + 0x10);\n                *(ppiVar4 + 1) = uVar6;\n                *ppiVar4 = *ppiVar8;\n                *ppiVar8 = ppiVar4;\n                uVar6 = *(iVar5 + 0x18);\n                uVar9 = uVar6 + 0x800000000000;\n                uVar10 = uVar9 >> 0x2a;\n                if (uVar10 < 0x40) {\n                    uVar6 = uVar6 >> 0xd;\n                    uVar7 = (uVar6 & 0x1ff) >> 3;\n                    if (uVar7 < 0x40) {\n                        puVar11 = *(*(uVar10 * 8 + 0x516e30) + (uVar9 >> 0x16 & 0xfffff) * 8) + uVar7 + 0x11480;\n                        LOCK();\n                        *puVar11 = *puVar11 | 1 << (uVar6 & 7);\n                        *(*0x20 + -0x48) = 0x422ee5;\n                        fcn.00409a80();\n                        iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                        *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return 1;\n                    }\n                    *(*0x20 + -0x48) = 0x422f2b;\n                    fcn.00458f40(0x40);\n                }\n                *(*0x20 + -0x48) = 0x422f38;\n                fcn.00458f40(0x40);\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x48) = 0x422f49;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x422f59;\n        fcn.004568e0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1417
    },
    "00423660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00423660(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4d9440 < 0x16) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 0x100f8) = arg1;\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x4236af;\n                    in_RAX = fcn.00458b80(arg1, *0x4d9440, arg3, in_R9);\n                }\n                *(*0x20 + 8) = in_RAX;\n                arg2 = in_RAX + 0x10090;\n                *(*0x20 + -0x30) = 0x4236c6;\n                fcn.00428c20();\n                *(*0x20 + -0x30) = 0x4236d0;\n                fcn.00425960();\n                arg1_00 = *0x4d92b8;\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x10078) = *0x4d92b8;\n                if (*0x544c10 == 0) {\n                    *(iVar1 + 0x100f0) = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0x30) = 0x42370b;\n                    fcn.00458a80(arg1_00, arg2, arg3, in_R9);\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = *0x4d9440;\n            *(*0x20 + -0x18) = -(*0x4d9440 < 0x40);\n            *(*0x20 + -0x30) = 0x42372b;\n            fcn.00431980();\n            *(*0x20 + -0x30) = 0x42373c;\n            fcn.00432280();\n            arg1 = *(*0x20 + -0x18);\n            *(*0x20 + -0x30) = 0x423756;\n            fcn.00432080();\n            *(*0x20 + -0x30) = 0x42375b;\n            fcn.00431be0();\n            *(*0x20 + -0x30) = 0x423765;\n            fcn.00431a00();\n            *(*0x20 + -0x30) = 0x42376a;\n            fcn.00431980();\n            *(*0x20 + -0x30) = 0x42377b;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x423785;\n            fcn.00432080();\n            *(*0x20 + -0x30) = 0x42378a;\n            fcn.00431be0();\n            *(*0x20 + -0x30) = 0x42378f;\n            fcn.00431a00();\n            unaff_RBX = 0x2b;\n            *(*0x20 + -0x30) = 0x4237a5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4237ba;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1035
    },
    "004243c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004243c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10108) != '\\0') goto code_r0x00424432;\n            uVar2 = unaff_RBX + 0x800000000000U >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar1 = *(uVar2 * 8 + 0x516e30);\n                if ((iVar1 != 0) && (*(iVar1 + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8) != 0)) {\n                    return unaff_RBX;\n                }\ncode_r0x00424432:\n                *(*0x20 + -0x20) = 0x42443d;\n                iVar1 = fcn.00428de0();\n                if (unaff_RBX != '\\0') {\n                    return iVar1;\n                }\n                return *0x4d92b8;\n            }\n            *(*0x20 + -0x20) = 0x42446c;\n            in_RAX = fcn.00458f40(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x42447c;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 516
    },
    "00425220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00425220(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(in_RAX + 0x10078);\n            uVar1 = iVar2 + 0x800000000000;\n            uVar4 = uVar1 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar4 || *(in_RAX + 0x10088) == uVar4) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            arg1 = (iVar2 & 0x3fffff) >> 0xd;\n            if (-(arg1 - 0x200) < unaff_RBX) goto code_r0x00425339;\n            uVar5 = *(in_RAX + 0x68);\n            if (uVar4 < uVar5) {\n                uVar5 = *(*(in_RAX + 0x60) + uVar4 * 8);\n                if (uVar5 < 0) {\n                    uVar5 = 0x200000;\n                }\n                else {\n                    uVar5 = uVar5 >> 0x15 & 0x1fffff;\n                }\n                if (uVar5 < unaff_RBX) {\ncode_r0x00425339:\n                    *(*0x20 + -0x40) = 0x42533e;\n                    iVar2 = fcn.004244a0();\n                    if (iVar2 == 0) {\n                        if (*(*0x20 + 0x10) == 1) {\n                            *(*(*0x20 + 8) + 0x10078) = *0x4d92b8;\n                        }\n                        return 0;\n                    }\ncode_r0x00425378:\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x40) = 0x425394;\n                    fcn.00424000(*(*0x20 + 0x10));\n                    if (*(*(*0x20 + 8) + 0x10078) + 0x800000000000U < *(*0x20 + -0x18) + 0x800000000000U) {\n                        *(*(*0x20 + 8) + 0x10078) = *(*0x20 + -0x18);\n                    }\n                    return *(*0x20 + -0x10);\n                }\n                if (uVar1 >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0x20) = uVar5;\n                    *(*0x20 + -0x40) = 0x425305;\n                    iVar2 = fcn.004270e0(arg1);\n                    if (iVar2 != -1) {\n                        iVar2 = iVar2 * 0x2000 + *(*0x20 + -0x10) * 0x400000 + -0x800000000000;\n                        unaff_RBX = (*(*0x20 + -0x10) * 0x400000 + unaff_RBX * 0x2000) - 0x800000000000;\n                        goto code_r0x00425378;\n                    }\n                    *(*0x20 + -0x40) = 0x4253e7;\n                    fcn.00431980();\n                    *(*0x20 + -0x40) = 0x4253f8;\n                    fcn.00432280();\n                    *(*0x20 + -0x40) = 0x425405;\n                    fcn.00431f80();\n                    *(*0x20 + -0x40) = 0x425416;\n                    fcn.00432280();\n                    *(*0x20 + -0x40) = 0x425425;\n                    fcn.00431f80();\n                    *(*0x20 + -0x40) = 0x42542a;\n                    fcn.00431be0();\n                    *(*0x20 + -0x40) = 0x42542f;\n                    fcn.00431a00();\n                    *(*0x20 + -0x10) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x40) = 0x425445;\n                    fcn.00431980();\n                    *(*0x20 + -0x40) = 0x425456;\n                    fcn.00432280();\n                    *(*0x20 + -0x40) = 0x425469;\n                    fcn.00431f80();\n                    *(*0x20 + -0x40) = 0x42547a;\n                    fcn.00432280();\n                    *(*0x20 + -0x40) = 0x425485;\n                    fcn.004320e0();\n                    *(*0x20 + -0x40) = 0x42548a;\n                    fcn.00431be0();\n                    *(*0x20 + -0x40) = 0x42548f;\n                    fcn.00431a00();\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x40) = 0x4254a5;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x40) = 0x4254b2;\n                fcn.00458f40(0x2000);\n            }\n            *(*0x20 + -0x40) = 0x4254bd;\n            in_RAX = fcn.00458f40(uVar5);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4254cd;\n        fcn.0045b2e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1551
    },
    "004254e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004254e0(uint64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    char unaff_DIL;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX + 0x800000000000;\n            if (uVar6 < *(in_RAX + 0x10078) + 0x800000000000U) {\n                *(in_RAX + 0x10078) = unaff_RBX;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar8 = arg1 * 0x2000 + unaff_RBX;\n            iVar2 = unaff_RBX + arg1 * 0x2000 + -1;\n            if (unaff_DIL == '\\0') {\n                *(*0x20 + -0x10) = uVar6;\n                *(*0x20 + -0x18) = iVar8;\n                *(*0x20 + -0x38) = iVar2;\n                *(*0x20 + -0x60) = 0x425566;\n                fcn.0041d600(iVar8);\n                in_RAX = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x38);\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar8 = *(*0x20 + -0x18);\n                uVar6 = *(*0x20 + -0x10);\n            }\n            if (arg1 == 1) {\n                if (uVar6 >> 0x23 < 0x2000) {\n                    iVar8 = (uVar6 >> 0x16 & 0x1fff) * 0x80 + *(in_RAX + 0x78 + (uVar6 >> 0x23) * 8);\n                    uVar4 = unaff_RBX & 0x3fffff;\n                    uVar6 = uVar4 >> 0x13;\n                    if (uVar6 < 8) {\n                        *(iVar8 + uVar6 * 8) = *(iVar8 + uVar6 * 8) & ~(1 << (uVar4 >> 0xd & 0x3f));\n                        goto code_r0x004256b7;\n                    }\n                    *(*0x20 + -0x60) = 0x4256e5;\n                    fcn.00458f40(8);\n                }\n                *(*0x20 + -0x60) = 0x4256f2;\n                fcn.00458f40(0x2000);\n                goto code_r0x004256f2;\n            }\n            uVar7 = iVar8 + 0x7fffffffffffU >> 0x16;\n            unaff_RBX = (unaff_RBX & 0x3fffff) >> 0xd;\n            uVar3 = (iVar2 & 0x3fffff) >> 0xd;\n            if (uVar7 == uVar6 >> 0x16) {\n                uVar6 = uVar6 >> 0x23;\n                if (0x1fff < uVar6) {\n                    *(*0x20 + -0x60) = 0x425710;\n                    uVar3 = fcn.00458f40(0x2000);\n                    goto code_r0x00425710;\n                }\n                *(*0x20 + -0x60) = 0x42565d;\n                fcn.00426bc0((uVar3 - unaff_RBX) + 1);\ncode_r0x004256f2:\n                arg1 = *(*0x20 + 0x18);\ncode_r0x004256b7:\n                *(*0x20 + -0x60) = 0x4256c9;\n                fcn.00423a20(arg1);\n                return;\n            }\n            if (uVar6 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x10) = iVar8 + 0x7fffffffffffU;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x20) = uVar6 >> 0x16;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x60) = 0x425612;\n                fcn.00426bc0(-(unaff_RBX - 0x200));\n                uVar6 = *(*0x20 + 8);\n                uVar7 = *(*0x20 + -0x18);\n                iVar8 = *(*0x20 + -0x20);\n                while (arg1 = iVar8 + 1,  arg1 < uVar7) {\n                    uVar3 = arg1 >> 0xd;\n                    if (0x1fff < uVar3) goto code_r0x004257af;\ncode_r0x00425710:\n                    *(*0x20 + -0x30) = arg1;\n                    uVar1 = *(uVar6 + 0x78 + uVar3 * 8);\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x60) = 0x425736;\n                    fcn.00459580(uVar1, (arg1 & 0x1fff) << 7);\n                    uVar6 = *(*0x20 + 8);\n                    uVar7 = *(*0x20 + -0x18);\n                    iVar8 = *(*0x20 + -0x30);\n                }\n                if (*(*0x20 + -0x10) >> 0x23 < 0x2000) {\n                    *(*0x20 + -0x60) = 0x42579f;\n                    fcn.00426bc0(*(*0x20 + -0x28) + 1);\n                    goto code_r0x004256f2;\n                }\n                *(*0x20 + -0x60) = 0x4257af;\n                fcn.00458f40(0x2000);\ncode_r0x004257af:\n                *(*0x20 + -0x60) = 0x4257b9;\n                fcn.00458f40(0x2000);\n            }\n            unaff_DIL = uVar7;\n            arg1 = 0x2000;\n            *(*0x20 + -0x60) = 0x4257c6;\n            in_RAX = fcn.00458f40(0x2000);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        puVar5[0x20] = unaff_DIL;\n        *(puVar5 + -8) = 0x4257e5;\n        fcn.0045b2e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_DIL = puVar5[0x20];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1815
    },
    "00425960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00425960(ulong param_1, ulong param_2, int64_t param_3, int64_t param_4)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = *0x4d9480;\n            *(*0x20 + -0x28) = *0x4d9488;\n            *(*0x20 + -0x24) = *0x4d948c;\n            *(*0x20 + -0x20) = *0x4d9490;\n            *(*0x20 + -0x1c) = *0x4d9494;\n            *(*0x20 + -0x18) = *0x4d9498;\n            *(*0x20 + -0x14) = *0x4d949c;\n            *(*0x20 + -0x10) = *0x4d94a0;\n            *(*0x20 + -0xc) = *0x4d94a4;\n            iVar3 = 0;\n            while( true ) {\n                if (4 < iVar3) {\n                    *(*0x20 + -0x88) = 0x425a7f;\n                    uVar4 = fcn.00412fc0();\n                    *(*0x20 + -0x60) = uVar4;\n                    *(*0x20 + -0x58) = 0x800000;\n                    *(*0x20 + -0x50) = 0x800000;\n                    iVar3 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x60);\n                    uVar1 = *(*0x20 + -0x58);\n                    uVar2 = *(*0x20 + -0x50);\n                    *(iVar3 + 0x100c8) = uVar1;\n                    *(iVar3 + 0x100d0) = uVar2;\n                    if (*0x544c10 == 0) {\n                        *(iVar3 + 0x100c0) = uVar4;\n                    }\n                    else {\n                        *(*0x20 + -0x88) = 0x425adb;\n                        fcn.00458b80(uVar4, uVar1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x70) = iVar3;\n                arg1 = -(*(*0x20 + iVar3 * 8 + -0x30) + -0x30);\n                uVar6 = 1 << (arg1 & 0x3f) & -(arg1 < 0x40);\n                *(*0x20 + -0x68) = uVar6;\n                *(*0x20 + -0x88) = 0x425a05;\n                iVar3 = fcn.00412fc0(arg1, *0x544b48 + uVar6 * 8 + -1);\n                if (iVar3 == 0) break;\n                *(*0x20 + -0x48) = iVar3;\n                *(*0x20 + -0x40) = 0;\n                uVar4 = *(*0x20 + -0x68);\n                *(*0x20 + -0x38) = uVar4;\n                iVar3 = *(*0x20 + 8);\n                param_3 = *(*0x20 + -0x70);\n                param_4 = param_3 * 3;\n                uVar1 = *(*0x20 + -0x48);\n                *(iVar3 + 8 + param_3 * 0x18) = 0;\n                *(iVar3 + 0x10 + param_3 * 0x18) = uVar4;\n                if (*0x544c10 == 0) {\n                    *(iVar3 + param_3 * 0x18) = uVar1;\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x425a6d;\n                    fcn.00458ba0(arg1, uVar1, param_3, param_4);\n                }\n                iVar3 = param_3 + 1;\n            }\n            *(*0x20 + -0x88) = 0x425af6;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x425b05;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1182
    },
    "004260c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004260c0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint64_t unaff_RBX;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    ulong unaff_RDI;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n                uVar1 = *(in_RAX + 0x24);\n                uVar2 = *(in_RAX + 0x28);\n                uVar12 = unaff_RBX + 0x800000000000 >> 0x19;\n                uVar13 = -*0x544b48;\n                uVar11 = uVar12 & uVar13;\n                if (uVar2 < uVar11) {\n                    uVar11 = uVar2;\n                }\n                uVar13 = *0x544b48 + ((arg1 + 0x800000000000 >> 0x16) + 7 >> 3) + -1 & uVar13;\n                if (uVar13 < uVar1) {\n                    uVar13 = uVar1;\n                }\n                iVar4 = *(in_RAX + 8);\n                if (*(in_RAX + 0x10) != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x3c) = uVar1;\n                    *(*0x20 + -0x40) = uVar2;\n                    *(*0x20 + -0x18) = uVar12;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x44) = uVar13;\n                    *(*0x20 + -0x48) = uVar11;\n                    *(*0x20 + -0x70) = 0x42619a;\n                    uVar3 = fcn.00428aa0();\n                    iVar9 = *(*(*0x20 + 8) + 8);\n                    if (*(*(*0x20 + 8) + 0x10) != 0) break;\n                    *(*0x20 + -0x70) = 0x42633d;\n                    fcn.00458f20(0);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x70) = 0x426347;\n                fcn.00458f20(0);\n            }\n            *(*0x20 + -0x70) = 0x42634c;\n            fcn.00431980();\n            *(*0x20 + -0x70) = 0x42635d;\n            fcn.00432280();\n            *(*0x20 + -0x70) = 0x426367;\n            fcn.004320e0();\n            *(*0x20 + -0x70) = 0x426378;\n            fcn.00432280();\n            *(*0x20 + -0x70) = 0x426385;\n            fcn.004320e0();\n            *(*0x20 + -0x70) = 0x42638a;\n            fcn.00431be0();\n            *(*0x20 + -0x70) = 0x42638f;\n            fcn.00431a00();\n            unaff_RBX = 0x2e;\n            *(*0x20 + -0x70) = 0x4263a5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        *(puVar8 + 0x20) = unaff_RDI;\n        *(puVar8 + -8) = 0x4263bf;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = *(puVar8 + 0x20);\n        *0x20 = puVar8;\n    } while( true );\n    *(*0x20 + -0x20) = uVar3;\n    *(*0x20 + -0x28) = uVar2 + iVar4;\n    iVar9 = *(*0x20 + -0x44) + iVar9;\n    *(*0x20 + -0x70) = 0x4261d3;\n    fcn.00428aa0();\n    *(*0x20 + -0x70) = 0x4261e5;\n    iVar4 = fcn.00428b20(*(*0x20 + -0x20));\n    uVar12 = iVar4 + 0x800000000000;\n    uVar5 = iVar9 + 0x800000000000;\n    if (uVar12 < uVar5) {\n        iVar7 = iVar9 - iVar4;\n    }\n    else {\n        iVar7 = 0;\n    }\n    if (iVar7 != 0) {\n        *(*0x20 + -0x20) = iVar4;\n        *(*0x20 + -0x28) = uVar12;\n        *(*0x20 + -0x30) = iVar9;\n        *(*0x20 + -0x38) = uVar5;\n        *(*0x20 + -0x70) = 0x426245;\n        fcn.00429a40();\n        if (*(*0x20 + -0x28) < *(*0x20 + -0x38)) {\n            iVar4 = *(*0x20 + -0x30) - *(*0x20 + -0x20);\n        }\n        else {\n            iVar4 = 0;\n        }\n        LOCK();\n        *0x545420 = *0x545420 + iVar4;\n        *(*0x20 + -0x70) = 0x426299;\n        fcn.00412c20();\n        if (*(*0x20 + -0x3c) == 0) {\n            iVar6 = *(*0x20 + -0x48);\ncode_r0x004262b2:\n            iVar4 = *(*0x20 + 8);\n            *(iVar4 + 0x24) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x48);\n            if (iVar6 < *(*0x20 + -0x3c)) goto code_r0x004262b2;\n            iVar4 = *(*0x20 + 8);\n        }\n        if (*(*0x20 + -0x40) == 0) {\n            iVar6 = *(*0x20 + -0x44);\ncode_r0x004262d8:\n            *(iVar4 + 0x28) = iVar6;\n        }\n        else {\n            iVar6 = *(*0x20 + -0x44);\n            if (*(*0x20 + -0x40) < iVar6) goto code_r0x004262d8;\n        }\n        iVar4 = *(*0x20 + -0x20);\n        uVar5 = *(*0x20 + -0x38);\n        uVar12 = *(*0x20 + -0x28);\n        iVar9 = *(*0x20 + -0x30);\n    }\n    iVar6 = *(*(*0x20 + 8) + 0x20);\n    if (iVar6 == 0) {\n        iVar10 = *(*0x20 + -0x18);\n    }\n    else {\n        iVar10 = *(*0x20 + -0x18);\n        if (iVar6 <= iVar10) goto code_r0x0042631c;\n    }\n    *(*(*0x20 + 8) + 0x20) = iVar10;\ncode_r0x0042631c:\n    if (uVar12 < uVar5) {\n        iVar9 = iVar9 - iVar4;\n    }\n    else {\n        iVar9 = 0;\n    }\n    return iVar9;\n}\n",
        "token_count": 2015
    },
    "004263e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004263e0(ulong arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t *in_RAX;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = in_RAX[1];\n    if (uVar1 != 0) {\n        if (unaff_RBX == 1) {\n            uVar2 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            uVar4 = ~(1 << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n            in_RAX[1] = uVar1 & uVar4;\n            in_RAX[2] = in_RAX[2] & uVar4;\n            return uVar2 * 0x2000 + *in_RAX;\n        }\n        iVar3 = fcn.004264a0();\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "004265e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004265e0(void)\n\n{\n    uchar (*pauVar1) [16];\n    int64_t *in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004265e0:\n    puVar4 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar4 = *0x20 + -0x48;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        if (in_RAX[1] == 0) {\n            return;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        iVar6 = *in_RAX;\n        uVar7 = iVar6 + 0x800000000000;\n        *(*0x20 + -0x10) = uVar7;\n        uVar5 = uVar7 >> 0x16;\n        *(*0x20 + -0x18) = uVar5;\n        uVar3 = (iVar6 & 0x3fffff) >> 0xd;\n        *(*0x20 + -0x20) = uVar3;\n        uVar2 = 0;\n        do {\n            if (0x3f < uVar2) {\n                if (*in_RAX + 0x800000000000U < *(unaff_RBX + 0x10078) + 0x800000000000U) {\n                    *(unaff_RBX + 0x10078) = *in_RAX;\n                }\n                *(*0x20 + -0x50) = 0x42676c;\n                fcn.00423a20(0x40);\n                pauVar1 = *(*0x20 + 8);\n                *pauVar1 = in_XMM15;\n                *pauVar1[1] = 0;\n                return;\n            }\n            if ((in_RAX[1] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x004267a5;\n                iVar6 = (uVar5 & 0x1fff) * 0x80 + *(unaff_RBX + 0x78 + (uVar7 >> 0x23) * 8);\n                uVar8 = uVar3 + uVar2 >> 6;\n                if (7 < uVar8) goto code_r0x00426794;\n                *(iVar6 + uVar8 * 8) = *(iVar6 + uVar8 * 8) & ~(1 << (uVar3 + uVar2 & 0x3f));\n            }\n            if ((in_RAX[2] >> (uVar2 & 0x3f) & 1) != 0) {\n                if (0x1fff < uVar7 >> 0x23) goto code_r0x00426787;\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x50) = 0x42670b;\n                fcn.00426ac0(1);\n                in_RAX = *(*0x20 + 8);\n                uVar2 = *(*0x20 + -0x28);\n                uVar3 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + 0x10);\n                uVar7 = *(*0x20 + -0x10);\n                uVar5 = *(*0x20 + -0x18);\n            }\n            uVar2 = uVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x004267b3;\ncode_r0x00426787:\n    *(*0x20 + -0x50) = 0x426794;\n    fcn.00458f40(0x2000);\ncode_r0x00426794:\n    *(*0x20 + -0x50) = 0x4267a5;\n    fcn.00458f40(8);\ncode_r0x004267a5:\n    *(*0x20 + -0x50) = 0x4267b2;\n    in_RAX = fcn.00458f40(0x2000);\ncode_r0x004267b3:\n    *(puVar4 + 8) = in_RAX;\n    *(puVar4 + 0x10) = unaff_RBX;\n    *(puVar4 + -8) = 0x4267c5;\n    fcn.0045b2e0();\n    in_RAX = *(puVar4 + 8);\n    unaff_RBX = *(puVar4 + 0x10);\n    *0x20 = puVar4;\n    goto code_r0x004265e0;\n}\n",
        "token_count": 1190
    },
    "00426ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426ac0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar4 = unaff_RBX >> 6;\n    if (uVar4 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar4 * 8) = *(in_RAX + uVar4 * 8) | 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        uVar5 = (arg1 - 1) + unaff_RBX;\n        uVar6 = uVar5 >> 6;\n        if (uVar6 == uVar4) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 | (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f);\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 | -1 << (unaff_RBX & 0x3f);\n            while (uVar4 = uVar4 + 1,  uVar4 < uVar6) {\n                *(in_RAX + uVar4 * 8) = 0xffffffffffffffff;\n            }\n            uVar1 = (uVar5 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 | (1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1;\n            return;\n        }\n        fcn.00458f40(8);\n    }\n    fcn.00458f40(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 499
    },
    "00426bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426bc0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar4 = unaff_RBX >> 6;\n    if (uVar4 < 8) {\n        if (arg1 == 1) {\n            *(in_RAX + uVar4 * 8) = *(in_RAX + uVar4 * 8) & ~(1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        uVar5 = (arg1 - 1) + unaff_RBX;\n        uVar6 = uVar5 >> 6;\n        if (uVar6 == uVar4) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 & ~((1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1 << (unaff_RBX & 0x3f));\n            return;\n        }\n        if (uVar6 < 8) {\n            puVar2 = in_RAX + uVar4 * 8;\n            *puVar2 = *puVar2 & ~(-1 << (unaff_RBX & 0x3f));\n            while (uVar4 = uVar4 + 1,  uVar4 < uVar6) {\n                *(in_RAX + uVar4 * 8) = 0;\n            }\n            uVar1 = (uVar5 & 0x3f) + 1;\n            puVar2 = in_RAX + uVar6 * 8;\n            *puVar2 = *puVar2 & -(1 << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n            return;\n        }\n        fcn.00458f40(8);\n    }\n    fcn.00458f40(8);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 495
    },
    "00426ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00426ce0(uint64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    uint8_t uVar2;\n    int64_t iVar3;\n    uint64_t in_RDX;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t in_R8;\n    int64_t in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        uVar4 = unaff_RBX;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX;\n            if (arg1 == 1) {\n                uVar4 = unaff_RBX >> 6;\n                if (uVar4 < 8) {\n                    return *(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) & 1;\n                }\n                *(*0x20 + -0x40) = 0x426e1c;\n                in_RAX = fcn.00458f40(8);\n                goto code_r0x00426e1c;\n            }\n            uVar4 = unaff_RBX >> 6;\n            if (uVar4 < 8) {\n                unaff_RDI = (arg1 - 1) + unaff_RBX;\n                unaff_RSI = unaff_RDI >> 6;\n                if (unaff_RSI == uVar4) {\n                    if (*0x5449f2 == 0) {\n                        *(*0x20 + -0x40) = 0x426ddc;\n                        uVar4 = fcn.00402120();\n                    }\n                    else {\n                        uVar4 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f) &\n                                       (1 << (arg1 & 0x3f) & -(arg1 < 0x40)) - 1);\n                    }\n                    return uVar4;\n                }\n                if (unaff_RSI < 8) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = unaff_RDI;\n                    *(*0x20 + -0x18) = unaff_RSI;\n                    if (*0x5449f2 == 0) {\n                        *(*0x20 + -0x20) = uVar4;\n                        *(*0x20 + -0x40) = 0x426d73;\n                        in_R8 = fcn.00402120();\n                        uVar4 = *(*0x20 + -0x20);\n                        unaff_RSI = *(*0x20 + -0x18);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        in_RAX = *(*0x20 + 8);\n                    }\n                    else {\n                        in_R8 = popcnt(*(in_RAX + uVar4 * 8) >> (uVar2 & 0x3f));\n                    }\n                    in_RDX = *0x5449f2;\n                    while( true ) {\n                        uVar4 = uVar4 + 1;\n                        *(*0x20 + -0x20) = in_R8;\n                        if (unaff_RSI <= uVar4) break;\n                        if (in_RDX == 0) {\n                            *(*0x20 + -0x28) = uVar4;\n                            *(*0x20 + -0x40) = 0x426e48;\n                            in_R9 = fcn.00402120();\n                            in_RDX = *0x5449f2;\n                            uVar4 = *(*0x20 + -0x28);\n                            unaff_RSI = *(*0x20 + -0x18);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            in_R8 = *(*0x20 + -0x20);\n                            in_RAX = *(*0x20 + 8);\n                        }\n                        else {\n                            in_R9 = popcnt(*(in_RAX + uVar4 * 8));\n                        }\ncode_r0x00426e1c:\n                        in_R8 = in_R8 + in_R9;\n                    }\n                    uVar1 = (unaff_RDI & 0x3f) + 1;\n                    if (in_RDX == 0) {\n                        *(*0x20 + -0x40) = 0x426ea5;\n                        iVar3 = fcn.00402120();\n                        in_R8 = *(*0x20 + -0x20);\n                    }\n                    else {\n                        iVar3 = popcnt((1 << (uVar1 & 0x3f) & -(uVar1 < 0x40)) - 1 & *(in_RAX + unaff_RSI * 8));\n                    }\n                    return iVar3 + in_R8;\n                }\n                *(*0x20 + -0x40) = 0x426ec8;\n                fcn.00458f40(8);\n            }\n            arg1 = 8;\n            *(*0x20 + -0x40) = 0x426ed5;\n            in_RAX = fcn.00458f40(8);\n            in_RDX = unaff_RBX;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = uVar4;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x426eea;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1386
    },
    "004270e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.004270e0(uint64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX == 1) {\n        arg1 = arg1 >> 6;\n        while( true ) {\n            if (7 < arg1) {\n                return -1;\n            }\n            uVar2 = ~*(in_RAX + arg1 * 8);\n            if (uVar2 != 0) break;\n            arg1 = arg1 + 1;\n        }\n        iVar1 = 0;\n        if (uVar2 != 0) {\n            for (; (uVar2 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n            }\n        }\n        return arg1 * 0x40 + iVar1;\n    }\n    if (0x40 < unaff_RBX) {\n        iVar1 = fcn.004272a0(arg1);\n        return iVar1;\n    }\n    iVar1 = fcn.004271a0(arg1);\n    return iVar1;\n}\n",
        "token_count": 311
    },
    "00427460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00427460(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if ((in_RAX == 1) || (in_RAX - 2U < 2)) {\n                *(*0x20 + -0x28) = 0x4274b0;\n                iVar1 = fcn.0040bd80(0x5474b0);\n                *(iVar1 + 0x10) = *(*0x20 + 8);\n                *(iVar1 + 0x28) = *(*0x20 + 0x10);\n                return;\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x4274dd;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4274ed;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 438
    },
    "00427500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00427500(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x10) == 1) {\n                return in_RAX + *(in_RAX + 0x28) * 8 + 0x30;\n            }\n            *(*0x20 + -0x20) = 0x427545;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x427550;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 284
    },
    "004281c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004281c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int64_t in_RAX;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 0x90) != 6) {\n        cVar4 = fcn.004508a0();\n        if (cVar4 == '\\0') {\n            while (*(in_RAX + 0x17c) != 2) {\n                if (*(in_RAX + 0x17c) == 1) {\n                    (**unaff_RBX)();\n                }\n                else {\n                    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                    *piVar1 = *piVar1 + 1;\n                    iVar3 = *(unaff_R14 + 0x30);\n                    LOCK();\n                    if (*(in_RAX + 0x17c) == 0) {\n                        *(in_RAX + 0x17c) = 1;\n                        fcn.00428320();\n                        *(in_RAX + 0x17c) = 2;\n                    }\n                    iVar2 = *(iVar3 + 0xd8);\n                    *(iVar3 + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                }\n            }\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "00428320": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00428320(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_1;\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 2) {\n                LOCK();\n                if (*0x4ef258 <= *0x4ef248) {\n                    *0x4ef248 = *0x4ef248 + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = *0x4ef248;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x10) = 0;\n                *(*0x20 + -0x20) = 0x428480;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x10) = *0x4ef248;\n                *(*0x20 + -0x38) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x4283a8;\n                *0x4ef248 = *0x4ef248 + 1;\n                fcn.004567a0();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                if (*0x4ef268 == 0) {\n                    return;\n                }\n                noname_1 = *(*(*0x20 + 8) + 0x168);\n                if (*(*0x20 + -0x28) < *0x4ef270) {\n                    if (*0x544c10 == 0) {\n                        *(*0x4ef268 + *(*0x20 + -0x28) * 8) = noname_1;\n                    }\n                    else {\n                        *(*0x20 + -0x40) = 0x4283fd;\n                        fcn.00458ba0(*0x4ef270, noname_1, param_3, param_4);\n                    }\n                    return;\n                }\n                *(*0x20 + -0x40) = 0x428419;\n                in_RAX = fcn.00458f20(*0x4ef270);\n            }\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x40) = 0x42842a;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x42843b;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x428445;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x42844a;\n            fcn.00431be0();\n            *(*0x20 + -0x40) = 0x42844f;\n            fcn.00431a00();\n            *(*0x20 + -0x40) = 0x428465;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x428470;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1005
    },
    "00428c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00428c20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    in_RAX[1] = 0;\n    in_RAX[2] = 0x10;\n    uVar1 = fcn.0040bd80(unaff_RBX);\n    *in_RAX = uVar1;\n    if (*0x544c10 == 0) {\n        in_RAX[4] = unaff_RBX;\n    }\n    else {\n        fcn.00458ba0(in_RAX, unaff_RBX, param_3, param_4);\n    }\n    in_RAX[3] = 0;\n    return;\n}\n",
        "token_count": 232
    },
    "00428de0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00428de0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    uint64_t uVar3;\n    uint64_t arg1;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x428e07;\n            uVar3 = fcn.00428ce0();\n            if (uVar3 == 0) {\n                if ((*(*0x20 + 8))[1] != NULL) {\n                    return ***(*0x20 + 8);\n                }\n            }\n            else {\n                arg1 = (*(*0x20 + 8))[1];\n                iVar2 = **(*0x20 + 8);\n                if (uVar3 - 1 < arg1) {\n                    iVar5 = (uVar3 - 1) * 0x10;\n                    uVar1 = *(*0x20 + 0x10) + 0x800000000000;\n                    if ((*(iVar5 + iVar2) + 0x800000000000U <= uVar1) &&\n                       (uVar1 < *(iVar2 + 8 + iVar5) + 0x800000000000U)) {\n                        return *(*0x20 + 0x10);\n                    }\n                    if (arg1 <= uVar3) {\n                        return 0;\n                    }\n                    if (uVar3 < arg1) {\n                        return *(uVar3 * 0x10 + iVar2);\n                    }\n                    *(*0x20 + -0x20) = 0x428eb9;\n                    fcn.00458f20(arg1);\n                }\n                *(*0x20 + -0x20) = 0x428ec5;\n                fcn.00458f20(arg1);\n            }\n            *(*0x20 + -0x20) = 0x428ecf;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x428edf;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 690
    },
    "00429c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429c80(void)\n\n{\n    int64_t *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = in_RAX + 2;\n            if (*0x544c15 == '\\0') {\n                in_RAX[1] = in_RAX + 0x202;\n            }\n            else {\n                in_RAX[1] = in_RAX + 4;\n            }\n            if ((in_RAX[1] - *in_RAX & 0xfU) == 0) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x429ce5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x429cf0;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 337
    },
    "00429d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429d00(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (0 < *(*(unaff_R14 + 0x30) + 0xdc)) {\n        iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(iVar1 + 0x1260) = iVar1 + 0x1270;\n        return;\n    }\n    if ((*0x544c15 != '\\0') && (in_RAX != 0)) {\n        fcn.00403740();\n        if (*0x544c14 == '\\0') {\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            *(iVar1 + 0x1260) = iVar1 + 0x1270;\n            return;\n        }\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 214
    },
    "00429dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00429dc0(void)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t arg1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(in_RAX + 0x1260) - (in_RAX + 0x1270) >> 3;\n            if (uVar4 < 0x201) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x10) = uVar4;\n                *(in_RAX + 0x1260) = 0;\n                if (*0x5449ee != '\\0') {\n                    iVar3 = 0;\n                    while (iVar3 < uVar4) {\n                        *(*0x20 + -0x18) = iVar3;\n                        uVar1 = *(in_RAX + 0x1270 + iVar3 * 8);\n                        *(*0x20 + -0x48) = 0x429e3b;\n                        fcn.00419c20(uVar1);\n                        in_RAX = *(*0x20 + 8);\n                        uVar4 = *(*0x20 + -0x10);\n                        iVar3 = *(*0x20 + -0x18) + 1;\n                    }\n                    *(*0x20 + -0x48) = 0x429e5d;\n                    fcn.00429c80();\n                    return;\n                }\n                arg1 = 0;\n                for (iVar3 = 0; iVar3 < uVar4; iVar3 = iVar3 + 1) {\n                    uVar8 = arg1;\n                    if (0xfff < *(in_RAX + 0x1270 + iVar3 * 8)) {\n                        *(*0x20 + -0x18) = iVar3;\n                        *(*0x20 + -0x20) = arg1;\n                        uVar4 = 0;\n                        *(*0x20 + -0x48) = 0x429ea5;\n                        iVar3 = fcn.0040f9c0(0);\n                        if (iVar3 == 0) {\n                            in_RAX = *(*0x20 + 8);\n                            iVar3 = *(*0x20 + -0x18);\n                            uVar8 = *(*0x20 + -0x20);\n                            uVar4 = *(*0x20 + -0x10);\n                        }\n                        else {\n                            puVar6 = *0x50 + (uVar4 >> 3);\n                            uVar7 = 1 << (uVar4 & 7);\n                            if ((uVar7 & *(*0x50 + (uVar4 >> 3))) == 0) {\n                                LOCK();\n                                *puVar6 = *puVar6 | uVar7;\n                                uVar4 = *0x18 + 0x800000000000 >> 0x2a;\n                                if (0x3f < uVar4) goto code_r0x0042a04d;\n                                iVar2 = *(*(uVar4 * 8 + 0x516e30) + (*0x18 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                                uVar4 = *0x18 >> 0x10 & 0x3f;\n                                puVar6 = iVar2 + uVar4 + 0x11440;\n                                uVar7 = 1 << (*0x18 >> 0xd & 7);\n                                if ((uVar7 & *(iVar2 + 0x11440 + uVar4)) == 0) {\n                                    LOCK();\n                                    *puVar6 = *puVar6 | uVar7;\n                                }\n                                if ((*0x62 & 1) == 0) {\n                                    uVar8 = *(*0x20 + -0x20);\n                                    arg1 = *(*0x20 + -0x10);\n                                    if (arg1 <= uVar8) goto code_r0x0042a045;\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1270 + uVar8 * 8) = iVar3;\n                                    uVar8 = uVar8 + 1;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar4 = arg1;\n                                }\n                                else {\n                                    in_RAX = *(*0x20 + 8);\n                                    *(in_RAX + 0x1248) = *(in_RAX + 0x1248) + *0x68;\n                                    iVar3 = *(*0x20 + -0x18);\n                                    uVar8 = *(*0x20 + -0x20);\n                                    uVar4 = *(*0x20 + -0x10);\n                                }\n                            }\n                            else {\n                                in_RAX = *(*0x20 + 8);\n                                iVar3 = *(*0x20 + -0x18);\n                                uVar8 = *(*0x20 + -0x20);\n                                uVar4 = *(*0x20 + -0x10);\n                            }\n                        }\n                    }\n                    arg1 = uVar8;\n                }\n                if (arg1 < 0x201) {\n                    *(*0x20 + -0x48) = 0x42a01e;\n                    fcn.0041fd60(arg1);\n                    *(*0x20 + -0x48) = 0x42a02e;\n                    fcn.00429c80();\n                    return;\n                }\n                *(*0x20 + -0x48) = 0x42a045;\n                fcn.00458fa0(arg1, 0x200);\ncode_r0x0042a045:\n                *(*0x20 + -0x48) = 0x42a04d;\n                fcn.00458f20(arg1);\ncode_r0x0042a04d:\n                uVar4 = 0x40;\n                *(*0x20 + -0x48) = 0x42a05a;\n                fcn.00458f40(0x40);\n            }\n            *(*0x20 + -0x48) = 0x42a065;\n            in_RAX = fcn.00458f80(uVar4, 0x200);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42a070;\n        fcn.0045b2e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1585
    },
    "0042a100": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042a100(ulong arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    \n    if ((arg1 == 0x72) || (arg1 == 0xe9)) {\n        do {\n            uVar4 = *(unaff_RBX + 0x18);\n            if (uVar4 == 1) {\n                uVar4 = 0;\n                goto code_r0x0042a116;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x18;\n            uVar3 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar4 == uVar3) * (*puVar1 ^ 1);\n        } while (uVar4 != uVar3);\n        if (uVar4 == 2) {\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\ncode_r0x0042a116:\n    if ((arg1 == 0x77) || (arg1 == 0xe9)) {\n        do {\n            uVar3 = *(unaff_RBX + 0x20);\n            if (uVar3 == 1) {\n                uVar3 = 0;\n                goto code_r0x0042a12e;\n            }\n            LOCK();\n            puVar1 = unaff_RBX + 0x20;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar3 == uVar2) * (*puVar1 ^ 1);\n        } while (uVar3 != uVar2);\n        if (uVar3 == 2) {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = 0;\n    }\ncode_r0x0042a12e:\n    if (uVar4 != 0) {\n        *(uVar4 + 0xa0) = *in_RAX;\n        *in_RAX = uVar4;\n    }\n    if (uVar3 != 0) {\n        *(uVar3 + 0xa0) = *in_RAX;\n        *in_RAX = uVar3;\n    }\n    return;\n}\n",
        "token_count": 527
    },
    "0042a300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042a300(void)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*0x544a3c != 0) {\n                return *0x544a3c;\n            }\n            *0x544a3c = 1;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_PostQueuedCompletionStatus;\n            *(*0x20 + -0x38) = *0x4d92a8;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x48) = 0x42a366;\n            uVar1 = fcn.0042d600();\n            if (*(*0x20 + -0x18) != 0) {\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x42a391;\n            fcn.0045a440();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42a3b0;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x42a3c5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x42a3cf;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x42a3e5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x42a3ea;\n            fcn.00431a00();\n            *(*0x20 + -0x48) = 0x42a3fb;\n            fcn.00430040();\n        }\n        *(puVar2 + -8) = 0x42a405;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 719
    },
    "0042a420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042a420(void)\n\n{\n    ulong uVar1;\n    uint32_t uVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x800 && *0x20 + -0x800 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x880;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar9 = *0x20 + -0x808;\n            for (iVar4 = 0x100; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar9 = 0;\n                puVar9 = puVar9 + 1;\n            }\n            *(*0x20 + -0x83c) = 0;\n            *(*0x20 + -0x830) = 0;\n            *(*0x20 + -0x838) = 0;\n            *(*0x20 + -0x828) = 0;\n            iVar4 = *(unaff_R14 + 0x30);\n            if (*0x4d92a8 == -1) {\n                return 0;\n            }\n            if (in_RAX < 0) {\n                uVar5 = 0xffffffff;\n            }\n            else if (in_RAX == 0) {\n                uVar5 = 0;\n            }\n            else if (in_RAX < 1000000) {\n                uVar5 = 1;\n            }\n            else if (in_RAX < 1000000000000000) {\n                uVar5 = in_RAX / 1000000 + (in_RAX >> 0x3f);\n            }\n            else {\n                uVar5 = 1000000000;\n            }\n            iVar8 = *0x544a28;\n            if (iVar8 != 0) {\n                if (iVar8 == -1) {\n                    uVar2 = 0xffffffc0;\n                }\n                else {\n                    uVar2 = SUB164((SEXT816(0x40) & 0xffffffffffffffff | ZEXT816(0x40)) / SEXT816(iVar8), 0);\n                }\n                *(*0x20 + -0x838) = uVar2;\n                if (uVar2 < 8) {\n                    *(*0x20 + -0x838) = 8;\n                }\n                *(*0x20 + -0x820) = in_RAX;\n                *(*0x20 + -0x810) = iVar4;\n                if (in_RAX != 0) {\n                    *(iVar4 + 0xe5) = 1;\n                }\n                puVar6 = *0x20 + -0x808;\n                *(*0x20 + -0x880) = _sym.imp.kernel32.dll_GetQueuedCompletionStatusEx;\n                *(*0x20 + -0x878) = *0x4d92a8;\n                *(*0x20 + -0x870) = puVar6;\n                *(*0x20 + -0x868) = *(*0x20 + -0x838);\n                *(*0x20 + -0x860) = *0x20 + -0x838;\n                *(*0x20 + -0x858) = uVar5;\n                *(*0x20 + -0x850) = 0;\n                *(*0x20 + -0x888) = 0x42a587;\n                fcn.0042d700();\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                if (*(*0x20 + -0x848) == 0) {\n                    *(*(*0x20 + -0x810) + 0xe5) = 0;\n                    *(*0x20 + -0x888) = 0x42a5cb;\n                    fcn.0045a440();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    if (*(*0x20 + -0x880) != 0x102) {\n                        *(*0x20 + -0x82c) = *(*0x20 + -0x880);\n                        *(*0x20 + -0x888) = 0x42a614;\n                        fcn.00431980();\n                        *(*0x20 + -0x888) = 0x42a625;\n                        fcn.00432280();\n                        *(*0x20 + -0x888) = 0x42a631;\n                        fcn.00432080();\n                        *(*0x20 + -0x888) = 0x42a645;\n                        fcn.00432280();\n                        *(*0x20 + -0x888) = 0x42a64a;\n                        fcn.00431a00();\n                        uVar5 = 0x17;\n                        *(*0x20 + -0x888) = 0x42a65b;\n                        fcn.00430040();\n                        goto code_r0x0042a65b;\n                    }\n                    return 0;\n                }\n                *(*(*0x20 + -0x810) + 0xe5) = 0;\n                puVar6 = *(*0x20 + -0x820);\n                uVar3 = 0;\n                while( true ) {\n                    uVar5 = uVar3;\n                    if (*(*0x20 + -0x838) < uVar5 || *(*0x20 + -0x838) == uVar5) {\n                        return *(*0x20 + -0x828);\n                    }\n                    if (0x3f < uVar3) break;\n                    *(*0x20 + -0x834) = uVar5;\n                    iVar4 = *(*0x20 + uVar3 * 0x20 + -0x800);\n                    if (iVar4 == 0) {\n                        *0x544a3c = 0;\n                        if (puVar6 == NULL) {\n                            *(*0x20 + -0x888) = 0x42a6a5;\n                            fcn.0042a300();\n                            puVar6 = *(*0x20 + -0x820);\n                            uVar5 = *(*0x20 + -0x834);\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x818) = iVar4;\n                        *(*0x20 + -0x83c) = 0;\n                        uVar1 = *(*(iVar4 + 0x20) + 8);\n                        *(*0x20 + -0x880) = *0x4f15a0;\n                        *(*0x20 + -0x878) = uVar1;\n                        *(*0x20 + -0x870) = iVar4;\n                        *(*0x20 + -0x868) = *0x20 + -0x83c;\n                        *(*0x20 + -0x860) = 0;\n                        *(*0x20 + -0x858) = *0x20 + -0x830;\n                        *(*0x20 + -0x888) = 0x42a6fc;\n                        fcn.0042d680();\n                        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                        if (*(*0x20 + -0x850) == 0) {\n                            *(*0x20 + -0x888) = 0x42a71f;\n                            fcn.0045a440();\n                            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                            uVar5 = *(*0x20 + -0x880);\n                        }\n                        else {\n                            uVar5 = 0;\n                        }\n                        *(*0x20 + -0x888) = 0x42a749;\n                        fcn.0042a7a0(uVar5);\n                        puVar6 = *(*0x20 + -0x820);\n                        uVar5 = *(*0x20 + -0x834);\n                    }\ncode_r0x0042a65b:\n                    uVar3 = uVar5 + 1;\n                }\n                *(*0x20 + -0x888) = 0x42a776;\n                fcn.00458f20(0x40);\n            }\n            *(*0x20 + -0x888) = 0x42a77b;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x42a786;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 2022
    },
    "0042a920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042a920(ulong arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong uVar3;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x544ba8 == 0) {\n                arg1 = 0x5451e0;\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_GetSystemDirectoryA;\n                *(*0x20 + -0x40) = 0x5451e0;\n                *(*0x20 + -0x38) = 0x104;\n                *(*0x20 + -0x50) = 0x42a971;\n                fcn.0042d500();\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                uVar1 = *(*0x20 + -0x30);\n                if ((uVar1 != 0) && (uVar1 < 0x105)) {\n                    *(uVar1 + 0x5451e0) = 0x5c;\n                    *0x544ba8 = uVar1 + 1;\n                    in_RAX = *(*0x20 + 8);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    goto code_r0x0042a9be;\n                }\n            }\n            else {\ncode_r0x0042a9be:\n                if (*0x5449ef == '\\0') {\n                    uVar1 = *0x544ba8;\n                    if (*0x544ba8 < 0x106) {\n                        uVar1 = *0x544ba8 + unaff_RBX;\n                        if (uVar1 < 0x106) {\n                            uVar3 = 0x5451e0;\n                        }\n                        else {\n                            *(*0x20 + -0x18) = *0x544ba8;\n                            *(*0x20 + -0x50) = 0x42aa66;\n                            uVar3 = fcn.00441fe0(0x105);\n                            unaff_RBX = *(*0x20 + 0x10);\n                        }\n                        *(*0x20 + -0x20) = uVar1;\n                        *(*0x20 + -0x10) = uVar3;\n                        *(*0x20 + -0x50) = 0x42aa97;\n                        fcn.00459880(unaff_RBX);\n                        if (*(*0x20 + -0x20) != 0) {\n                            *(*0x20 + -0x48) = _sym.imp.kernel32.dll_LoadLibraryA;\n                            *(*0x20 + -0x40) = *(*0x20 + -0x10);\n                            *(*0x20 + -0x50) = 0x42aabf;\n                            fcn.0042d480();\n                            return *(*0x20 + -0x38);\n                        }\n                        uVar1 = 0;\n                        *(*0x20 + -0x50) = 0x42aaeb;\n                        fcn.00458f20(0);\n                    }\n                    *(*0x20 + -0x50) = 0x42aaf5;\n                    fcn.00458f80(uVar1, 0x105);\n                }\n                else if (unaff_RBX != 0) {\n                    *(*0x20 + -0x48) = *0x4f1560;\n                    *(*0x20 + -0x40) = in_RAX;\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x30) = 0x800;\n                    *(*0x20 + -0x50) = 0x42a9f7;\n                    fcn.0042d580();\n                    return *(*0x20 + -0x28);\n                }\n                arg1 = 0;\n                *(*0x20 + -0x50) = 0x42aaff;\n                fcn.00458f20(0);\n            }\n            unaff_RBX = 0x24;\n            *(*0x20 + -0x50) = 0x42ab10;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42ab25;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1213
    },
    "0042ab40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ab40(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xd8 && *0x20 + -0xd8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x158;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0xf4) = 0x32336c656e72656b;\n            *(*0x20 + -0xef) = 0x6c6c642e32336c;\n            *(*0x20 + -0x158) = _sym.imp.kernel32.dll_LoadLibraryA;\n            *(*0x20 + -0x150) = *0x20 + -0xf4;\n            *(*0x20 + -0x160) = 0x42aba5;\n            fcn.0042d480();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            if (*(*0x20 + -0x148) != 0) {\n                *(*0x20 + -0x128) = *(*0x20 + -0x148);\n                *(*0x20 + -0xab) = 0x69446c6c44646441;\n                uVar4 = 0x79726f74636572;\n                *(*0x20 + -0xa3) = 0x79726f74636572;\n                uVar3 = 0x10;\n                *(*0x20 + -0x160) = 0x42ac07;\n                iVar1 = fcn.0042a860(0x10);\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x160) = 0x42ac25;\n                    fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x4f1548;\n                }\n                *0x4f1548 = iVar1;\n                *(*0x20 + -0x23) = 0x6f74636556646441;\n                *(*0x20 + -0x1b) = 0x69746e6f43646572;\n                *(*0x20 + -0x18) = 0x65756e69746e6f43;\n                uVar5 = 0x72656c646e6148;\n                *(*0x20 + -0x10) = 0x72656c646e6148;\n                uVar4 = 0x1b;\n                *(*0x20 + -0x160) = 0x42ac87;\n                uVar3 = fcn.0042a860(0x1b);\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x160) = 0x42aca5;\n                    fcn.00458a80(uVar4, uVar5, param_3, param_4);\n                    uVar3 = *0x4f1550;\n                }\n                *0x4f1550 = uVar3;\n                uVar4 = 0x7262694c64616f4c;\n                *(*0x20 + -0xca) = 0x7262694c64616f4c;\n                *(*0x20 + -0xc3) = 0x41784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42ace5;\n                iVar1 = fcn.0042a860(0xf);\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x160) = 0x42ad05;\n                    fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x4f1560;\n                }\n                *0x4f1560 = iVar1;\n                *(*0x20 + -0xd9) = 0x7262694c64616f4c;\n                uVar4 = 0x57784579726172;\n                *(*0x20 + -0xd2) = 0x57784579726172;\n                uVar3 = 0xf;\n                *(*0x20 + -0x160) = 0x42ad3d;\n                iVar2 = fcn.0042a860(0xf);\n                iVar1 = iVar2;\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x160) = 0x42ad5b;\n                    iVar2 = fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                    iVar1 = *0x4f1568;\n                }\n                *0x4f1568 = iVar1;\n                if ((iVar2 == 0) || (*0x4f1560 == 0)) {\n                    *0x5449ef = false;\n                }\n                else {\n                    *0x5449ef = *0x4f1548 != 0;\n                }\n                *(*0x20 + -0x101) = 0x3233697061766461;\n                *(*0x20 + -0xfc) = 0x6c6c642e323369;\n                *(*0x20 + -0x160) = 0x42adb4;\n                iVar1 = fcn.0042a920(0xd);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x79) = 0x75466d6574737953;\n                    *(*0x20 + -0x77) = 0x636e75466d657473;\n                    uVar5 = 0x3633306e6f6974;\n                    *(*0x20 + -0x6f) = 0x3633306e6f6974;\n                    uVar4 = 0x12;\n                    *(*0x20 + -0x160) = 0x42ae08;\n                    uVar3 = fcn.0042a860(0x12);\n                    if (*0x544c10 != 0) {\n                        *(*0x20 + -0x160) = 0x42ae26;\n                        fcn.00458a80(uVar4, uVar5, param_3, param_4);\n                        uVar3 = *0x4f1588;\n                    }\n                    *0x4f1588 = uVar3;\n                    *(*0x20 + -0x116) = 0x6c642e6c6c64746e;\n                    *(*0x20 + -0x10e) = 0x6c;\n                    *(*0x20 + -0x160) = 0x42ae4e;\n                    iVar1 = fcn.0042a920(10);\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x138) = iVar1;\n                        *(*0x20 + -0x67) = 0x6f4674696157744e;\n                        *(*0x20 + -0x61) = 0x6c676e6953726f46;\n                        uVar5 = 0x7463656a624f65;\n                        *(*0x20 + -0x59) = 0x7463656a624f65;\n                        uVar4 = 0x16;\n                        *(*0x20 + -0x160) = 0x42aea7;\n                        uVar3 = fcn.0042a860(0x16);\n                        if (*0x544c10 != 0) {\n                            *(*0x20 + -0x160) = 0x42aec5;\n                            fcn.00458a80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x4f1570;\n                        }\n                        *0x4f1570 = uVar3;\n                        *(*0x20 + -0x8a) = 0x75437465476c7452;\n                        *(*0x20 + -0x89) = 0x7275437465476c74;\n                        uVar5 = 0x626550746e6572;\n                        *(*0x20 + -0x81) = 0x626550746e6572;\n                        uVar4 = 0x11;\n                        *(*0x20 + -0x160) = 0x42af15;\n                        uVar3 = fcn.0042a860(0x11);\n                        if (*0x544c10 != 0) {\n                            *(*0x20 + -0x160) = 0x42af33;\n                            fcn.00458a80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x4f1590;\n                        }\n                        *0x4f1590 = uVar3;\n                        *(*0x20 + -0x3a) = 0x744e7465476c7452;\n                        *(*0x20 + -0x33) = 0x6e6f697372655674;\n                        uVar5 = 0x737265626d754e;\n                        *(*0x20 + -0x2b) = 0x737265626d754e;\n                        uVar4 = 0x17;\n                        *(*0x20 + -0x160) = 0x42af85;\n                        uVar3 = fcn.0042a860(0x17);\n                        if (*0x544c10 != 0) {\n                            *(*0x20 + -0x160) = 0x42afa5;\n                            fcn.00458a80(uVar4, uVar5, param_3, param_4);\n                            uVar3 = *0x4f1598;\n                        }\n                        *0x4f1598 = uVar3;\n                        *(*0x20 + -0x120) = 0x6c642e6d6d6e6977;\n                        *(*0x20 + -0x118) = 0x6c;\n                        *(*0x20 + -0x160) = 0x42afcd;\n                        iVar1 = fcn.0042a920(10);\n                        if (iVar1 != 0) {\n                            *(*0x20 + -0x130) = iVar1;\n                            *(*0x20 + -0xbb) = 0x69676542656d6974;\n                            uVar4 = 0x646f697265506e;\n                            *(*0x20 + -0xb3) = 0x646f697265506e;\n                            uVar3 = 0x10;\n                            *(*0x20 + -0x160) = 0x42b014;\n                            iVar1 = fcn.0042a860(0x10);\n                            if (*0x544c10 != 0) {\n                                *(*0x20 + -0x160) = 0x42b032;\n                                fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x4f15a8;\n                            }\n                            *0x4f15a8 = iVar1;\n                            *(*0x20 + -0xe7) = 0x50646e45656d6974;\n                            uVar4 = 0x646f6972655064;\n                            *(*0x20 + -0xe1) = 0x646f6972655064;\n                            uVar3 = 0xe;\n                            *(*0x20 + -0x160) = 0x42b067;\n                            iVar2 = fcn.0042a860(0xe);\n                            iVar1 = iVar2;\n                            if (*0x544c10 != 0) {\n                                *(*0x20 + -0x160) = 0x42b085;\n                                iVar2 = fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                                iVar1 = *0x4f15b0;\n                            }\n                            *0x4f15b0 = iVar1;\n                            if ((*0x4f15a8 != 0) && (iVar2 != 0)) {\n                                *(*0x20 + -0x10c) = 0x642e32335f327377;\n                                *(*0x20 + -0x109) = 0x6c6c642e32335f;\n                                *(*0x20 + -0x160) = 0x42b0cc;\n                                iVar1 = fcn.0042a920(0xb);\n                                if (iVar1 != 0) {\n                                    *(*0x20 + -0x51) = 0x764f746547415357;\n                                    *(*0x20 + -0x4a) = 0x657070616c726576;\n                                    uVar4 = 0x746c7573655264;\n                                    *(*0x20 + -0x42) = 0x746c7573655264;\n                                    uVar3 = 0x17;\n                                    *(*0x20 + -0x160) = 0x42b125;\n                                    iVar2 = fcn.0042a860(0x17);\n                                    iVar1 = iVar2;\n                                    if (*0x544c10 != 0) {\n                                        *(*0x20 + -0x160) = 0x42b145;\n                                        iVar2 = fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                                        iVar1 = *0x4f15a0;\n                                    }\n                                    *0x4f15a0 = iVar1;\n                                    if (iVar2 != 0) {\n                                        *(*0x20 + -0x9b) = 0x7465675f656e6977;\n                                        *(*0x20 + -0x9a) = 0x5f7465675f656e69;\n                                        *(*0x20 + -0x92) = 0x6e6f6973726576;\n                                        *(*0x20 + -0x160) = 0x42b19a;\n                                        iVar1 = fcn.0042a860(0x11);\n                                        if (iVar1 != 0) {\n                                            *(*0x20 + -0x160) = 0x42b1a9;\n                                            fcn.0042bc20();\n                                        }\n                                        return;\n                                    }\n                                    *(*0x20 + -0x160) = 0x42b1ca;\n                                    fcn.00430040();\n                                }\n                                *(*0x20 + -0x160) = 0x42b1db;\n                                fcn.00430040();\n                            }\n                            *(*0x20 + -0x160) = 0x42b1ec;\n                            fcn.00430040();\n                        }\n                        *(*0x20 + -0x160) = 0x42b1fd;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x160) = 0x42b20e;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x160) = 0x42b21f;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x160) = 0x42b230;\n            fcn.00430040();\n        }\n        *(puVar6 + -8) = 0x42b236;\n        fcn.004568e0();\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3563
    },
    "0042b3e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042b4bf)\n// WARNING: Removing unreachable block (ram,0x0042b4d4)\n\nulong fcn.0042b3e0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    int64_t iStack80;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d580();\n    if (iStack80 != 0) {\n        for (iVar1 = 0; iVar1 < 0x40; iVar1 = iVar1 + 1) {\n        }\n    }\n    fcn.0042d480();\n    return 0;\n}\n",
        "token_count": 187
    },
    "0042b500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042b500(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x5449e5 == '\\0') {\n        if (in_AL != '\\0') {\n            fcn.0042d480();\n            return uStack16;\n        }\n        fcn.0042d480();\n        return uStack16;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "0042bc20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042bc20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x60) = in_RAX;\n            *(*0x20 + -0x3a) = 0x6574737953746547;\n            *(*0x20 + -0x32) = 0x467341656d69546d;\n            uVar4 = 0x656d6954656c69;\n            *(*0x20 + -0x2a) = 0x656d6954656c69;\n            uVar3 = 0x18;\n            *(*0x20 + -0x98) = 0x42bc8a;\n            iVar1 = fcn.0042a860(0x18);\n            iVar2 = iVar1;\n            if (*0x544c10 != 0) {\n                *(*0x20 + -0x98) = 0x42bca8;\n                iVar1 = fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                iVar2 = *0x4f1558;\n            }\n            *0x4f1558 = iVar2;\n            if (iVar1 != 0) {\n                uVar4 = 0x7265507972657551;\n                *(*0x20 + -0x52) = 0x7265507972657551;\n                *(*0x20 + -0x4a) = 0x65636e616d726f66;\n                param_3 = 0x7265746e756f43;\n                *(*0x20 + -0x42) = 0x7265746e756f43;\n                uVar3 = 0x18;\n                *(*0x20 + -0x98) = 0x42bcf5;\n                iVar2 = fcn.0042a860(0x18);\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x98) = 0x42bd13;\n                    fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x4f1578;\n                }\n                *0x4f1578 = iVar2;\n                *(*0x20 + -0x22) = 0x7265507972657551;\n                *(*0x20 + -0x1a) = 0x65636e616d726f66;\n                *(*0x20 + -0x18) = 0x724665636e616d72;\n                uVar4 = 0x79636e65757165;\n                *(*0x20 + -0x10) = 0x79636e65757165;\n                uVar3 = 0x1a;\n                *(*0x20 + -0x98) = 0x42bd69;\n                iVar1 = fcn.0042a860(0x1a);\n                iVar2 = iVar1;\n                if (*0x544c10 != 0) {\n                    *(*0x20 + -0x98) = 0x42bd87;\n                    iVar1 = fcn.00458a80(uVar3, uVar4, param_3, param_4);\n                    iVar2 = *0x4f1580;\n                }\n                *0x4f1580 = iVar2;\n                if ((*0x4f1578 != 0) && (iVar1 != 0)) {\n                    *(*0x20 + -0x70) = 0;\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0x88) = *0x20 + -0x70;\n                    *(*0x20 + -0x98) = 0x42bdba;\n                    fcn.0042d480();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    iVar2 = *(*0x20 + -0x70);\n                    if (iVar2 != 0) {\n                        if (iVar2 < 0x80000000) {\n                            *(*0x20 + -0x68) = iVar2;\n                            *(*0x20 + -0x90) = *0x4f1578;\n                            *(*0x20 + -0x88) = 0x544b80;\n                            *(*0x20 + -0x98) = 0x42be0d;\n                            fcn.0042d480();\n                            uVar7 = 0;\n                            iVar1 = 1000000000;\n                            for (iVar2 = 0x1e; -1 < iVar2; iVar2 = iVar2 + -1) {\n                                iVar6 = *(*0x20 + -0x68) << (iVar2 & 0x3f);\n                                if (iVar6 <= iVar1) {\n                                    iVar1 = iVar1 - iVar6;\n                                    uVar7 = uVar7 | 1 << (iVar2 & 0x1f);\n                                }\n                            }\n                            if (*(*0x20 + -0x68) <= iVar1) {\n                                uVar7 = 0x7fffffff;\n                            }\n                            *0x5449f0 = 1;\n                            *0x544b78 = uVar7;\n                            return;\n                        }\n                        *(*0x20 + -0x98) = 0x42be95;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x98) = 0x42bea6;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x98) = 0x42beb7;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x98) = 0x42bec8;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x42bed3;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1552
    },
    "0042bf80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042bf80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int16_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \ncode_r0x0042bf80:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x68) = 0x42bfa5;\n        iVar1 = fcn.0042d420();\n        uVar6 = 0;\n        iVar7 = 0;\n        for (uVar4 = 0; uVar4 < 0x1000000; uVar4 = uVar4 + 1) {\n            if (*(iVar1 + uVar4 * 2) == 0) {\n                if (uVar6 == uVar4) {\n                    *(*0x20 + -0x28) = iVar1;\n                    *(*0x20 + -0x38) = iVar7;\n                    *(*0x20 + -0x68) = 0x42bfef;\n                    iVar1 = fcn.00441f00(iVar7);\n                    uVar6 = *(*0x20 + -0x38);\n                    *0x4f1cb8 = uVar6;\n                    *0x4f1cc0 = uVar6;\n                    if (*0x544c10 != 0) {\n                        *(*0x20 + -0x68) = 0x42c025;\n                        fcn.00458a80(iVar7, uVar6, param_3, param_4);\n                        iVar1 = *0x4f1cb0;\n                    }\n                    *0x4f1cb0 = iVar1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar1 = 0;\n                    iVar9 = 0x1000000;\n                    iVar5 = iVar7;\n                    goto code_r0x0042c05a;\n                }\n                uVar6 = uVar4 + 1;\n                iVar7 = iVar7 + 1;\n            }\n        }\n        goto code_r0x0042c1a5;\n    }\n    goto code_r0x0042c1b3;\ncode_r0x0042c05a:\n    if (uVar6 <= iVar1) {\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_FreeEnvironmentStringsW;\n        *(*0x20 + -0x58) = iVar5;\n        *(*0x20 + -0x68) = 0x42c0e5;\n        fcn.0042d480();\n        *(*0x20 + -0x18) = 0x46be00;\n        *(*0x20 + -0x10) = 0x47ca58;\n        *(*0x20 + -0x68) = 0x42c11e;\n        uVar2 = fcn.00454d60(1);\n        *(*0x20 + -0x60) = _sym.imp.kernel32.dll_SetConsoleCtrlHandler;\n        *(*0x20 + -0x58) = uVar2;\n        *(*0x20 + -0x50) = 1;\n        *(*0x20 + -0x68) = 0x42c13c;\n        fcn.0042d500();\n        *(*0x20 + -0x68) = 0x42c153;\n        fcn.0042b240();\n        return;\n    }\n    if (iVar9 == 0) goto code_r0x0042c19a;\n    *(*0x20 + -0x30) = iVar1;\n    *(*0x20 + -0x40) = iVar9;\n    *(*0x20 + -0x20) = iVar7;\n    *(*0x20 + -0x68) = 0x42c07d;\n    uVar2 = fcn.00446780();\n    iVar7 = *0x4f1cb0;\n    uVar6 = *(*0x20 + -0x30);\n    uVar4 = *0x4f1cb8;\n    if (*0x4f1cb8 <= uVar6) goto code_r0x0042c18f;\n    *(*0x4f1cb0 + 8 + uVar6 * 0x10) = iVar1;\n    if (*0x544c10 == 0) {\n        *(iVar7 + uVar6 * 0x10) = uVar2;\n        uVar4 = uVar6;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x42c0bd;\n        fcn.00458a80(iVar7, uVar6, param_3, param_4);\n        uVar4 = uVar6;\n    }\n    piVar3 = *(*0x20 + -0x20);\n    iVar9 = *(*0x20 + -0x40);\n    while( true ) {\n        if (iVar9 == 0) {\n            *(*0x20 + -0x68) = 0x42c18f;\n            fcn.00458f20(0);\n            goto code_r0x0042c18f;\n        }\n        if (*piVar3 == 0) break;\n        iVar9 = iVar9 + -1;\n        piVar3 = piVar3 + (-iVar9 >> 0x3f & 2);\n    }\n    iVar1 = uVar4 + 1;\n    iVar9 = iVar9 + -1;\n    iVar7 = piVar3 + (-iVar9 >> 0x3f & 2);\n    uVar6 = *(*0x20 + -0x38);\n    iVar5 = *(*0x20 + -0x28);\n    goto code_r0x0042c05a;\ncode_r0x0042c18f:\n    *(*0x20 + -0x68) = 0x42c19a;\n    fcn.00458f20(uVar4);\ncode_r0x0042c19a:\n    *(*0x20 + -0x68) = 0x42c1a5;\n    fcn.00458f20(0);\ncode_r0x0042c1a5:\n    *(*0x20 + -0x68) = 0x42c1b2;\n    fcn.00458f20(0x1000000);\ncode_r0x0042c1b3:\n    *(puVar8 + -8) = 0x42c1b8;\n    fcn.004568e0();\n    *0x20 = puVar8;\n    goto code_r0x0042bf80;\n}\n",
        "token_count": 1603
    },
    "0042c240": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042c240(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uint64_t arg1_00;\n    int64_t iStack56;\n    \n    if (in_RAX == 1) {\n        fcn.0042d480();\n    }\n    else if (in_RAX == 2) {\n        fcn.0042d480();\n    }\n    arg1_00 = arg1;\n    if (0x40000000 < arg1_00) {\n        fcn.00458f60(arg1_00, 0x40000000);\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = 0;\n    do {\n        if (arg1_00 <= iVar3) {\ncode_r0x0042c37a:\n            fcn.0042d680();\n            return 0;\n        }\n        if (0x7f < *(unaff_RBX + iVar3)) {\n            fcn.0042d500();\n            if (iStack56 != 0) {\n                uVar2 = fcn.0042c400(arg1);\n                return uVar2;\n            }\n            goto code_r0x0042c37a;\n        }\n        iVar3 = iVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 327
    },
    "0042c760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042c760(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iStack96;\n    uint64_t uStack72;\n    uint64_t uStack56;\n    \n    if (in_RAX < 0) {\n        fcn.0042d500();\n        uStack56 = uStack72;\n    }\n    else {\n        fcn.0045a8a0();\n        iVar2 = 0;\n        while( true ) {\n            iVar1 = _sym.imp.kernel32.dll_WaitForMultipleObjects;\n            iVar2 = in_RAX - iVar2;\n            for (iVar3 = 0x1e; -1 < iVar3; iVar3 = iVar3 + -1) {\n                iVar4 = 1000000 << (iVar3 & 0x3f);\n                if (iVar4 <= iVar2) {\n                    iVar2 = iVar2 - iVar4;\n                }\n            }\n            fcn.0042d600();\n            if (uStack56 != 1) break;\n            fcn.0045a8a0();\n            iVar2 = iVar1 - iStack96;\n            if (in_RAX <= iVar2) {\n                return 0xffffffff;\n            }\n        }\n    }\n    if (uStack56 < 0x81) {\n        if (uStack56 == 0) {\n            return 0;\n        }\n        if (uStack56 == 0x80) {\n            fcn.004567a0();\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uStack56 == 0x102) {\n            return 0xffffffff;\n        }\n        if (uStack56 == 0xffffffff) {\n            fcn.004567a0();\n            return 0xffffffff;\n        }\n    }\n    fcn.004567a0();\n    return 0xffffffff;\n}\n",
        "token_count": 429
    },
    "0042ca60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ca60(void)\n\n{\n    int64_t iStack16;\n    \n    fcn.0042d480();\n    if (iStack16 == 0) {\n        fcn.004567a0();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "0042cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042cae0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iStack16;\n    \n    if (*(in_RAX + 0x318) == 0) {\n        fcn.0042d600();\n        *(in_RAX + 0x318) = iStack16;\n        if (iStack16 == 0) {\n            fcn.004567a0();\n        }\n        fcn.0042d600();\n        *(in_RAX + 800) = iStack16;\n        if (iStack16 == 0) {\n            fcn.004567a0();\n            fcn.0042d480();\n            *(in_RAX + 0x318) = 0;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "0042cde0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042cde0(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t *puVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint uVar6;\n    uint in_XMM15_Db;\n    uint uVar7;\n    uint in_XMM15_Dc;\n    uint uVar8;\n    uint in_XMM15_Dd;\n    uint uVar9;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x68) = 0;\n            *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_DuplicateHandle;\n            *(*0x20 + -0xa8) = 0xffffffffffffffff;\n            *(*0x20 + -0xa0) = 0xfffffffffffffffe;\n            *(*0x20 + -0x98) = 0xffffffffffffffff;\n            *(*0x20 + -0x90) = *0x20 + -0x68;\n            *(*0x20 + -0x88) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x78) = 2;\n            *(*0x20 + -0xb8) = 0x42ce53;\n            fcn.0042d780();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            if (*(*0x20 + -0x70) != 0) {\n                iVar2 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x10) = iVar2 + 0x308;\n                *(*0x20 + -0xb8) = 0x42ce97;\n                fcn.00409860();\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x310) = *(*0x20 + -0x68);\n                if ((*(iVar2 + 0x328) == 0) && (*0x5449e5 != '\\0')) {\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_CreateWaitableTimerExW;\n                    *(*0x20 + -0xa8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x98) = 2;\n                    *(*0x20 + -0x90) = 0x100003;\n                    *(*0x20 + -0xb8) = 0x42cee6;\n                    fcn.0042d600();\n                    uVar6 = 0;\n                    uVar7 = 0;\n                    uVar8 = 0;\n                    uVar9 = 0;\n                    iVar2 = *(*0x20 + -0x88);\n                    *(*(*0x20 + -0x18) + 0x328) = iVar2;\n                    if (iVar2 != 0) goto code_r0x0042cf17;\n                }\n                else {\ncode_r0x0042cf17:\n                    *(*0x20 + -0xb8) = 0x42cf25;\n                    fcn.00409a80();\n                    *(*0x20 + -0x48) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x38) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0x28) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n                    *(*0x20 + -0xb0) = _sym.imp.kernel32.dll_VirtualQuery;\n                    *(*0x20 + -0xa8) = *0x20 + -0x48;\n                    *(*0x20 + -0xa0) = *0x20 + -0x48;\n                    *(*0x20 + -0x98) = 0x30;\n                    *(*0x20 + -0xb8) = 0x42cf65;\n                    fcn.0042d580();\n                    puVar3 = **(in_GS_OFFSET + *0x544bc0);\n                    if (*(*0x20 + -0x90) != 0) {\n                        iVar2 = *(*0x20 + -0x40);\n                        uVar1 = iVar2 + 0x4000;\n                        *(*0x20 + -0x60) = uVar1;\n                        uVar4 = puVar3[1];\n                        *(*0x20 + -0x50) = uVar4;\n                        if ((uVar1 <= uVar4) && ((uVar4 - iVar2) - 0x4000 < 0x4000001)) {\n                            *puVar3 = uVar1;\n                            puVar3[2] = iVar2 + 0x53a0U;\n                            puVar3[3] = iVar2 + 0x53a0U;\n                            *(*0x20 + -0xb8) = 0x42cfce;\n                            fcn.004588e0();\n                            return;\n                        }\n                        *(*0x20 + -0xb8) = 0x42cff5;\n                        fcn.00431980();\n                        *(*0x20 + -0xb8) = 0x42d006;\n                        fcn.00432280();\n                        *(*0x20 + -0xb8) = 0x42d010;\n                        fcn.004320e0();\n                        *(*0x20 + -0xb8) = 0x42d025;\n                        fcn.00432280();\n                        *(*0x20 + -0xb8) = 0x42d02f;\n                        fcn.004320e0();\n                        *(*0x20 + -0xb8) = 0x42d045;\n                        fcn.00432280();\n                        *(*0x20 + -0xb8) = 0x42d04a;\n                        fcn.00431a00();\n                        *(*0x20 + -0xb8) = 0x42d05b;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0xb8) = 0x42d065;\n                    fcn.0045a440();\n                    *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                    *(*0x20 + -0xb8) = 0x42d085;\n                    fcn.00431980();\n                    *(*0x20 + -0xb8) = 0x42d096;\n                    fcn.00432280();\n                    *(*0x20 + -0xb8) = 0x42d0a5;\n                    fcn.00431f80();\n                    *(*0x20 + -0xb8) = 0x42d0aa;\n                    fcn.00431be0();\n                    *(*0x20 + -0xb8) = 0x42d0af;\n                    fcn.00431a00();\n                    *(*0x20 + -0xb8) = 0x42d0c5;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0xb8) = 0x42d0ca;\n                fcn.0045a440();\n                *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n                *(*0x20 + -0xb8) = 0x42d0e9;\n                fcn.00431980();\n                *(*0x20 + -0xb8) = 0x42d0fa;\n                fcn.00432280();\n                *(*0x20 + -0xb8) = 0x42d105;\n                fcn.00431f80();\n                *(*0x20 + -0xb8) = 0x42d10a;\n                fcn.00431be0();\n                *(*0x20 + -0xb8) = 0x42d10f;\n                fcn.00431a00();\n                *(*0x20 + -0xb8) = 0x42d125;\n                fcn.00430040();\n            }\n            *(*0x20 + -0xb8) = 0x42d12a;\n            fcn.0045a440();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            *(*0x20 + -0x58) = *(*0x20 + -0xb0);\n            *(*0x20 + -0xb8) = 0x42d149;\n            fcn.00431980();\n            *(*0x20 + -0xb8) = 0x42d15a;\n            fcn.00432280();\n            *(*0x20 + -0xb8) = 0x42d165;\n            fcn.00431f80();\n            *(*0x20 + -0xb8) = 0x42d16a;\n            fcn.00431be0();\n            *(*0x20 + -0xb8) = 0x42d16f;\n            fcn.00431a00();\n            *(*0x20 + -0xb8) = 0x42d185;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x42d18b;\n        fcn.004568e0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2324
    },
    "0042d340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0042d340(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x278) = in_RAX;\n    if (*(iVar1 + 0xe0) == 0) {\n        bVar2 = false;\n    }\n    else if (*(iVar1 + 0x2b0) == 0) {\n        *(iVar1 + 0x2b8) = unaff_R14;\n        *(iVar1 + 0x2a8) = in_stack_00000000;\n        *(iVar1 + 0x2b0) = auStackX8;\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    fcn.004586a0();\n    if (bVar2) {\n        *(iVar1 + 0x2b0) = 0;\n    }\n    return *(iVar1 + 0x290);\n}\n",
        "token_count": 257
    },
    "0042daa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042daa0(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    ulong arg1;\n    char cVar5;\n    int64_t in_RAX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    ulong *puVar8;\n    uint64_t **ppuVar9;\n    uint64_t *puVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar12;\n    uint in_XMM15_Da;\n    uint uVar13;\n    uint in_XMM15_Db;\n    uint uVar14;\n    uint in_XMM15_Dc;\n    uint uVar15;\n    uint in_XMM15_Dd;\n    uint uVar16;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x4d8 && *0x20 + -0x4d8 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x558;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(unaff_R14 + 0x30) != in_RAX) {\n                LOCK();\n                if (*(in_RAX + 0x330) != 0) {\n                    LOCK();\n                    puVar2 = in_RAX + 0x300;\n                    uVar3 = *puVar2;\n                    *puVar2 = *puVar2 + 1;\n                    return uVar3;\n                }\n                *(in_RAX + 0x330) = 1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x20) = in_RAX + 0x308;\n                *(*0x20 + -0x560) = 0x42db0d;\n                fcn.00409860();\n                if (*(*(*0x20 + -0x10) + 0x310) == 0) {\n                    *(*0x20 + -0x560) = 0x42db2e;\n                    uVar6 = fcn.00409a80();\n                    iVar7 = *(*0x20 + -0x10);\n                    *(iVar7 + 0x330) = 0;\n                    LOCK();\n                    piVar1 = iVar7 + 0x300;\n                    *piVar1 = *piVar1 + 1;\n                    return uVar6;\n                }\n                *(*0x20 + -0x510) = 0;\n                uVar4 = *(*(*0x20 + -0x10) + 0x310);\n                *(*0x20 + -0x558) = _sym.imp.kernel32.dll_DuplicateHandle;\n                *(*0x20 + -0x550) = 0xffffffffffffffff;\n                *(*0x20 + -0x548) = uVar4;\n                *(*0x20 + -0x540) = 0xffffffffffffffff;\n                *(*0x20 + -0x538) = *0x20 + -0x510;\n                *(*0x20 + -0x530) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n                *(*0x20 + -0x520) = 2;\n                *(*0x20 + -0x560) = 0x42dbac;\n                fcn.0042d780();\n                uVar13 = 0;\n                uVar14 = 0;\n                uVar15 = 0;\n                uVar16 = 0;\n                if (*(*0x20 + -0x518) != 0) break;\n                *(*0x20 + -0x560) = 0x42dee5;\n                fcn.0045a440();\n                in_XMM15_Da = 0;\n                in_XMM15_Db = 0;\n                in_XMM15_Dc = 0;\n                in_XMM15_Dd = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                *(*0x20 + -0x508) = *(*0x20 + -0x558);\n                *(*0x20 + -0x560) = 0x42df05;\n                fcn.00431980();\n                *(*0x20 + -0x560) = 0x42df16;\n                fcn.00432280();\n                *(*0x20 + -0x560) = 0x42df25;\n                fcn.00431f80();\n                *(*0x20 + -0x560) = 0x42df2a;\n                fcn.00431be0();\n                *(*0x20 + -0x560) = 0x42df2f;\n                fcn.00431a00();\n                *(*0x20 + -0x560) = 0x42df45;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x560) = 0x42df56;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x42df65;\n        fcn.004568e0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n    *(*0x20 + -0x560) = 0x42dbd9;\n    fcn.00409a80();\n    *(*0x20 + -0x4ff) = CONCAT412(uVar16, CONCAT48(uVar15, CONCAT44(uVar14, uVar13)));\n    puVar8 = *0x20 + -0x4f0;\n    for (iVar7 = 0x9a; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *(*0x20 + -0x18) = *0x20 + -0x4f0 & 0xfffffffffffffff0;\n    *((*0x20 + -0x4f0 & 0xfffffffffffffff0) + 0x30) = 0x100001;\n    *(*0x20 + -0x560) = 0x42dc14;\n    fcn.00409860();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SuspendThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42dc2e;\n    fcn.0042d480();\n    if (*(*0x20 + -0x548) == -1) {\n        *(*0x20 + -0x560) = 0x42de65;\n        fcn.00409a80();\n        *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n        *(*0x20 + -0x550) = *(*0x20 + -0x510);\n        *(*0x20 + -0x560) = 0x42de7f;\n        uVar6 = fcn.0042d480();\n        iVar7 = *(*0x20 + -0x10);\n        *(iVar7 + 0x330) = 0;\n        LOCK();\n        piVar1 = iVar7 + 0x300;\n        *piVar1 = *piVar1 + 1;\n        return uVar6;\n    }\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_GetThreadContext;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x548) = *(*0x20 + -0x18);\n    *(*0x20 + -0x560) = 0x42dc75;\n    fcn.0042d500();\n    *(*0x20 + -0x560) = 0x42dc95;\n    fcn.00409a80();\n    iVar7 = *(*0x20 + -0x18);\n    uVar6 = *(iVar7 + 0x98);\n    ppuVar9 = *(*0x20 + -0x10);\n    puVar10 = *ppuVar9;\n    if (((((puVar10 == NULL) || (uVar6 <= *puVar10)) || (puVar10[1] < uVar6 || puVar10[1] == uVar6)) &&\n        (((puVar10 = ppuVar9[10],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n         (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) &&\n       (((puVar10 = ppuVar9[0x12],  puVar10 == NULL || (uVar6 <= *puVar10)) ||\n        (puVar10[1] < uVar6 || puVar10[1] == uVar6)))) {\n        puVar10 = NULL;\n    }\n    if (puVar10 == NULL) {\n        bVar12 = false;\n        goto code_r0x0042dd40;\n    }\n    if (*(puVar10 + 0xb1) == '\\0') {\n        if (*(puVar10[6] + 0xa0) == 0) {\n            bVar12 = false;\n            goto code_r0x0042dd40;\n        }\n        if (*(*(puVar10[6] + 0xa0) + 0x22c0) == '\\0') {\n            bVar12 = false;\n            goto code_r0x0042dd40;\n        }\n    }\n    bVar12 = (*(puVar10 + 0x12) & 0xffffefff) == 2;\ncode_r0x0042dd40:\n    if (bVar12) {\n        uVar4 = *(iVar7 + 0xf8);\n        arg1 = *(iVar7 + 0x98);\n        *(*0x20 + -0x560) = 0x42dd65;\n        cVar5 = fcn.00431440(arg1);\n        if (cVar5 != '\\0') {\n            iVar7 = *(*0x20 + -0x18);\n            puVar8 = *(iVar7 + 0x98) + -8;\n            *puVar8 = uVar4;\n            *(iVar7 + 0x98) = puVar8;\n            *(iVar7 + 0xf8) = fcn.00459f40;\n            *(*0x20 + -0x558) = _sym.imp.kernel32.dll_SetThreadContext;\n            *(*0x20 + -0x550) = *(*0x20 + -0x510);\n            *(*0x20 + -0x548) = iVar7;\n            *(*0x20 + -0x560) = 0x42ddb9;\n            fcn.0042d500();\n        }\n        ppuVar9 = *(*0x20 + -0x10);\n    }\n    *(ppuVar9 + 0x66) = 0;\n    LOCK();\n    *(ppuVar9 + 0x60) = *(ppuVar9 + 0x60) + 1;\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_ResumeThread;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42de05;\n    fcn.0042d480();\n    *(*0x20 + -0x558) = _sym.imp.kernel32.dll_CloseHandle;\n    *(*0x20 + -0x550) = *(*0x20 + -0x510);\n    *(*0x20 + -0x560) = 0x42de31;\n    uVar6 = fcn.0042d480();\n    return uVar6;\n}\n",
        "token_count": 2724
    },
    "0042df80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042df80(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t *piVar1;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x20) = 0x42dfa7;\n            fcn.00447600();\n            *(*0x20 + -0x20) = 0x42dfac;\n            piVar1 = fcn.00447da0();\n            if ((unaff_RBX < 8) || (arg1 = 0x2e656d69746e7572,  *piVar1 != 0x2e656d69746e7572)) {\n                if ((unaff_R14 == 0) || ((arg1 = *(unaff_R14 + 0x30),  arg1 == 0 || (*(arg1 + 0xc0) == 0)))) {\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x42dff8;\n                fcn.00430040();\n            }\n            unaff_RBX = *(*0x20 + 0x18);\n            *(*0x20 + -0x20) = 0x42e007;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x42e01c;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 562
    },
    "0042e040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e040(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (((unaff_R14 == 0) || (*(unaff_R14 + 0x30) == 0)) || (*(*(unaff_R14 + 0x30) + 0xc0) == 0)) {\n                return;\n            }\n            *(*0x20 + -0x20) = 0x42e086;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x42e096;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 349
    },
    "0042e7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0042e7c0(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar8 = *(unaff_R14 + 0x30);\n    uVar6 = *(iVar8 + 0xa0);\n    uVar7 = uVar6;\n    if (*(uVar6 + 0x70) != 0) goto code_r0x0042e82f;\n    if (*0x4f2778 == 0) goto code_r0x0042e82f;\n    fcn.00409860();\n    arg2 = uVar6 + 0x68;\n    iStack40 = iVar8;\n    uStack24 = arg2;\n    uStack16 = uVar6;\n    while( true ) {\n        while ((iVar8 = *0x4f2778,  *(uVar6 + 0x70) < *(uVar6 + 0x78) >> 1 && (*0x4f2778 != 0))) {\n            if (*0x544c10 == 0) {\n                puVar1 = *0x4f2778 + 0x28;\n                *0x4f2778 = *(*0x4f2778 + 0x28);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.00458c20(uVar6, arg2, *0x4f2778);\n                arg2 = fcn.00458ba0(uVar6, 0, iVar8, iVar8 + 0x28);\n            }\n            uVar9 = *(uVar6 + 0x70) + 1;\n            iVar5 = *(uVar6 + 0x68);\n            uVar7 = *(uVar6 + 0x78);\n            arg4 = uVar7;\n            if (uVar7 < uVar9) {\n                iVar4 = iVar8;\n                iVar5 = fcn.00441fe0(uVar7);\n                *(uStack16 + 0x78) = uVar7;\n                uVar6 = uStack16;\n                arg2 = uStack24;\n                if (*0x544c10 == 0) {\n                    *(uStack16 + 0x68) = iVar5;\n                }\n                else {\n                    iVar5 = fcn.00458a80(uVar7, uStack16, iVar4, arg4);\n                }\n            }\n            *(uVar6 + 0x70) = uVar9;\n            if (*0x544c10 == 0) {\n                *(iVar5 + -8 + uVar9 * 8) = iVar8;\n            }\n            else {\n                fcn.00458c00(uVar6, arg2, iVar8, arg4);\n            }\n        }\n        fcn.00409a80();\n        iVar8 = iStack40;\n        uVar7 = uStack16;\ncode_r0x0042e82f:\n        iVar5 = *(uVar7 + 0x70);\n        if (iVar5 == 0) {\n            iVar4 = 0;\n            goto code_r0x0042e87b;\n        }\n        iVar4 = *(*(uVar7 + 0x68) + -8 + iVar5 * 8);\n        if (*0x544c10 == 0) {\n            *(*(uVar7 + 0x68) + -8 + iVar5 * 8) = 0;\n        }\n        else {\n            fcn.00458c00(iVar5, arg2, 0, iVar4);\n        }\n        uVar6 = iVar5 - 1;\n        arg2 = *(uVar7 + 0x78);\n        if (uVar6 <= arg2) break;\n        fcn.00458fa0(uVar6, arg2);\n    }\n    *(uVar7 + 0x70) = uVar6;\ncode_r0x0042e87b:\n    iVar3 = *(iVar8 + 0xd8);\n    *(iVar8 + 0xd8) = iVar3 + -1;\n    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    if (iVar4 == 0) {\n        iVar4 = fcn.0040ba20();\n    }\n    *(iVar4 + 1) = 1;\n    return iVar4;\n}\n",
        "token_count": 1168
    },
    "0042e9e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042e9e0(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar (*in_RAX) [16];\n    int64_t iVar4;\n    int64_t arg1_00;\n    uint64_t uVar5;\n    int64_t arg1_01;\n    int64_t arg2_00;\n    int64_t arg2_01;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t arg3;\n    int64_t iVar8;\n    ulong in_R9;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    if (*0x544c10 == 0) {\n        *(in_RAX[2] + 8) = 0;\n    }\n    else {\n        in_RAX = fcn.00458c00(arg1, arg2, 0, in_R9);\n    }\n    if (*in_RAX[2] != 0) {\n        fcn.0042ecc0();\n    }\n    if (*(in_RAX[1] + 8) != 0) {\n        fcn.0042ed00();\n    }\n    if ((*in_RAX)[1] == '\\0') {\n        return;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg3 = *(unaff_R14 + 0x30);\n    arg2_00 = *(arg3 + 0xa0);\n    if (*(arg2_00 + 0x70) == *(arg2_00 + 0x78)) {\n        arg1_00 = 0;\n        iVar4 = 0;\n        iVar8 = arg3;\n        iVar9 = arg2_00;\n        while( true ) {\n            uVar5 = *(iVar9 + 0x70);\n            if (uVar5 <= *(iVar9 + 0x78) >> 1) break;\n            uVar7 = uVar5 - 1;\n            if (uVar5 <= uVar7) {\ncode_r0x0042ec9a:\n                fcn.00458f20(uVar5);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar6 = *(*(iVar9 + 0x68) + -8 + uVar5 * 8);\n            if (*0x544c10 == 0) {\n                *(*(iVar9 + 0x68) + -8 + uVar5 * 8) = 0;\n                arg1_01 = arg1_00;\n                arg2_01 = iVar4;\n                arg1_00 = iVar6;\n            }\n            else {\n                fcn.00458bc0(arg1_00, iVar4, iVar8, iVar9);\n                arg1_01 = arg1_00;\n                arg2_01 = iVar4;\n                arg1_00 = iVar6;\n            }\n            uVar5 = *(iVar9 + 0x78);\n            if (uVar5 < uVar7) {\n                fcn.00458fa0(uVar7, uVar5);\n                goto code_r0x0042ec9a;\n            }\n            *(iVar9 + 0x70) = uVar7;\n            iVar4 = arg1_00;\n            if (arg2_01 != 0) {\n                if (*0x544c10 == 0) {\n                    *(arg1_01 + 0x28) = arg1_00;\n                    iVar4 = arg2_01;\n                }\n                else {\n                    fcn.00458bc0(arg1_01, arg2_01, iVar8, iVar9);\n                    iVar4 = arg2_01;\n                }\n            }\n        }\n        iVar6 = iVar4;\n        fcn.00409860();\n        if (*0x544c10 == 0) {\n            *(arg1_00 + 0x28) = *0x4f2778;\n            *0x4f2778 = iVar4;\n        }\n        else {\n            fcn.00458b80(*0x4f2778, iVar6, iVar8, iVar9);\n            fcn.00458b80(iVar4, iVar6, iVar8, iVar9);\n        }\n        fcn.00409a80();\n    }\n    if (*0x544c10 == 0) {\n        *in_RAX = in_XMM15;\n        *(*in_RAX + 8) = in_XMM15;\n        *(in_RAX[1] + 8) = in_XMM15;\n        *(in_RAX[2] + 8) = in_XMM15;\n        *(in_RAX[3] + 8) = in_XMM15;\n    }\n    else {\n        fcn.0040f560();\n    }\n    uVar7 = *(arg2_00 + 0x70) + 1;\n    iVar4 = *(arg2_00 + 0x68);\n    uVar5 = *(arg2_00 + 0x78);\n    if (uVar5 < uVar7) {\n        iVar8 = arg3;\n        iVar9 = arg2_00;\n        iVar4 = fcn.00441fe0(uVar5);\n        *(arg2_00 + 0x78) = uVar5;\n        if (*0x544c10 == 0) {\n            *(arg2_00 + 0x68) = iVar4;\n        }\n        else {\n            uVar5 = arg2_00 + 0x68;\n            iVar4 = fcn.00458a80(uVar5, arg2_00, iVar8, iVar9);\n        }\n    }\n    *(arg2_00 + 0x70) = uVar7;\n    if (*0x544c10 == 0) {\n        *(iVar4 + -8 + uVar7 * 8) = in_RAX;\n    }\n    else {\n        fcn.00458a80(uVar5, iVar4, arg3, arg2_00);\n    }\n    iVar2 = *(arg3 + 0xd8);\n    *(arg3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 1445
    },
    "0042ed40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ed40(ulong param_1, ulong param_2, int64_t param_3, ulong param_4)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t noname_0;\n    ulong uVar4;\n    uchar *noname_1;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = unaff_R14;\n            noname_0 = *(*0x20 + -0x28);\n            while( true ) {\n                iVar3 = *(noname_0 + 0x28);\n                if (iVar3 == 0) {\n                    return;\n                }\n                noname_1 = *0x20 + 8;\n                if (*(iVar3 + 8) != noname_1) {\n                    return;\n                }\n                arg3 = noname_0 + 0x28;\n                if (*(iVar3 + 2) != '\\0') break;\n                uVar4 = *(iVar3 + 0x18);\n                if (*0x544c10 == 0) {\n                    *(iVar3 + 0x18) = 0;\n                }\n                else {\n                    param_4 = 0;\n                    *(*0x20 + -0x40) = 0x42edcb;\n                    iVar3 = fcn.00458c20(noname_0, noname_1, arg3);\n                    param_3 = arg3;\n                }\n                *(*0x20 + -0x20) = uVar4;\n                if (*0x544c10 == 0) {\n                    *(noname_0 + 0x28) = *(iVar3 + 0x28);\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x42edf0;\n                    fcn.00458be0(noname_0, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x42ed69;\n                fcn.0042e9e0(noname_0, noname_1);\n                pcVar1 = **(*0x20 + -0x20);\n                *(*0x20 + -0x40) = 0x42ed73;\n                (*pcVar1)();\n                noname_0 = *(*0x20 + -0x28);\n            }\n            *(*0x20 + -0x10) = arg3;\n            *(*0x20 + -0x18) = iVar3;\n            *(*0x20 + -0x40) = 0x42ee05;\n            cVar2 = fcn.0042f4c0(noname_0, noname_1, param_3, param_4);\n            if (cVar2 != '\\0') {\n                uVar4 = *(*(*0x20 + -0x18) + 0x28);\n                if (*0x544c10 == 0) {\n                    noname_1 = *(*0x20 + -0x28);\n                    *(noname_1 + 0x28) = uVar4;\n                }\n                else {\n                    *(*0x20 + -0x40) = 0x42ee30;\n                    fcn.00458b80(uVar4, noname_1, param_3, param_4);\n                }\n                *(*0x20 + -0x40) = 0x42ee35;\n                fcn.0042e9e0(uVar4, noname_1);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x42ee65;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x42ee6b;\n        fcn.004568e0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 970
    },
    "0042ee80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042ee80(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (; in_RAX != 0; in_RAX = *(in_RAX + 0x18)) {\n        uVar2 = *(in_RAX + 0x10);\n        if (*(in_RAX + 8) != 0) {\n            iVar1 = fcn.00409480(uVar2);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00409480(uVar2);\n                if (iVar1 != 0) {\n                    (**(iVar1 + 0x18))();\n                    uVar2 = fcn.004093e0();\n                    *(in_RAX + 8) = 0x46b2c0;\n                    if (*0x544c10 == 0) {\n                        *(in_RAX + 0x10) = uVar2;\n                    }\n                    else {\n                        fcn.00458a80(0x46b2c0, in_RAX + 0x10, param_3, param_4);\n                    }\n                }\n            }\n            else {\n                (**(iVar1 + 0x18))();\n                uVar2 = fcn.004093e0();\n                *(in_RAX + 8) = 0x46b2c0;\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 0x10) = uVar2;\n                }\n                else {\n                    fcn.00458a80(0x46b2c0, in_RAX + 0x10, param_3, param_4);\n                }\n            }\n        }\n    }\n    fcn.00453500();\n    return;\n}\n",
        "token_count": 465
    },
    "0042f000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042f000(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((*(in_RAX + 0x18) != 0) && (fcn.0042f000(),  *(*(in_RAX + 0x18) + 0x32) == '\\0')) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    if (*(in_RAX + 0x32) != '\\0') {\n        return;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431a00();\n    fcn.00407260(*(in_RAX + 8));\n    if (*(in_RAX + 0x30) != '\\0') {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 289
    },
    "0042f4c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0042f4c0(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    ulong uVar2;\n    int64_t arg1;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint8_t *arg2;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \ncode_r0x0042f4c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        arg2 = *(in_RAX + 0x30);\n        iVar6 = 0;\n        uVar8 = 0;\n        do {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) {\n                if (uVar8 < 0) goto code_r0x0042f78a;\n                uVar7 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n                uVar3 = uVar7;\n                iVar6 = 0;\n                uVar8 = 0;\n                goto code_r0x0042f54e;\n            }\n            if (uVar8 < 0) goto code_r0x0042f7a5;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            uVar8 = uVar8 + 7;\n        } while (uVar8 < 0x1d);\n        goto code_r0x0042f78f;\n    }\n    goto code_r0x0042f7ab;\n    while( true ) {\n        if (uVar8 < 0) goto code_r0x0042f785;\n        iVar6 = ((uVar1 & 0xffffff7f) << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n        uVar8 = uVar8 + 7;\n        if (0x1c < uVar8) break;\ncode_r0x0042f54e:\n        uVar1 = *arg2;\n        arg2 = arg2 + 1;\n        if (uVar1 < 0x80) {\n            if (uVar8 < 0) goto code_r0x0042f76a;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x2c) = uVar7;\n            uVar7 = *(*(in_RAX + 0x38) - uVar3);\n            uVar8 = (uVar1 << (uVar8 & 0x1f) & -(uVar8 < 0x20)) + iVar6;\n            goto code_r0x0042f5cc;\n        }\n    }\ncode_r0x0042f76f:\n    *(*0x20 + -0x48) = 0x42f785;\n    fcn.0042f8a0();\ncode_r0x0042f785:\n    *(*0x20 + -0x48) = 0x42f78a;\n    fcn.0042e700();\ncode_r0x0042f78a:\n    *(*0x20 + -0x48) = 0x42f78f;\n    fcn.0042e700();\ncode_r0x0042f78f:\n    *(*0x20 + -0x48) = 0x42f7a5;\n    fcn.0042f8a0();\ncode_r0x0042f7a5:\n    *(*0x20 + -0x48) = 0x42f7aa;\n    in_RAX = fcn.0042e700();\ncode_r0x0042f7ab:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x42f7b5;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x0042f4c0;\ncode_r0x0042f748:\n    *(*0x20 + -0x48) = 0x42f74d;\n    fcn.0042e700();\ncode_r0x0042f74d:\n    *(*0x20 + -0x48) = 0x42f765;\n    fcn.0042f8a0();\ncode_r0x0042f765:\n    *(*0x20 + -0x48) = 0x42f76a;\n    fcn.0042e700();\ncode_r0x0042f76a:\n    *(*0x20 + -0x48) = 0x42f76f;\n    fcn.0042e700();\n    goto code_r0x0042f76f;\ncode_r0x0042f5cc:\n    do {\n        uVar8 = uVar8 - 1;\n        if (uVar8 < 0) {\n            return 1;\n        }\n        iVar6 = 0;\n        uVar4 = 0;\n        while( true ) {\n            uVar1 = *arg2;\n            arg2 = arg2 + 1;\n            if (uVar1 < 0x80) break;\n            if (uVar4 < 0) goto code_r0x0042f765;\n            iVar6 = ((uVar1 & 0xffffff7f) << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6;\n            uVar4 = uVar4 + 7;\n            if (0x1c < uVar4) goto code_r0x0042f74d;\n        }\n        if (uVar4 < 0) goto code_r0x0042f748;\n        uVar9 = 1 << (uVar8 & 0x1f) & -(uVar8 < 0x20);\n    } while ((uVar9 & uVar7) == 0);\n    *(*0x20 + -0x28) = uVar8;\n    *(*0x20 + -0x18) = arg2;\n    uVar2 = *(*(in_RAX + 0x38) - ((uVar1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) + iVar6));\n    *(*0x20 + -0x10) = in_RAX + 0x18;\n    uVar4 = uVar7 & ~uVar9;\n    if (*0x544c10 == 0) {\n        *(in_RAX + 0x18) = uVar2;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x42f650;\n        in_RAX = fcn.00458b80(uVar2, arg2, uVar8, uVar4);\n    }\n    *(*0x20 + -0x2d) = uVar4;\n    *(*(in_RAX + 0x38) - uVar3) = uVar4;\n    uVar2 = *(in_RAX + 0x20);\n    *(*0x20 + -0x20) = uVar2;\n    *(*0x20 + -0x48) = 0x42f674;\n    uVar3 = fcn.0042f7c0(uVar2, arg2, uVar8, uVar4);\n    arg1 = *(*0x20 + -0x20);\n    if ((arg1 == 0) || (*(arg1 + 0x31) == '\\0')) {\n        if (*0x544c10 == 0) {\n            in_RAX = *(*0x20 + 8);\n            *(in_RAX + 0x18) = 0;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x42f6ae;\n            uVar3 = fcn.00458ba0(arg1, 0, uVar8, uVar4);\n            in_RAX = *(*0x20 + 8);\n        }\n        if ((*(in_RAX + 0x20) == 0) || (*(*(in_RAX + 0x20) + 0x30) == '\\0')) {\n            arg2 = *(*0x20 + -0x18);\n            uVar3 = *(*0x20 + -0x2c);\n            uVar8 = *(*0x20 + -0x28);\n            uVar7 = *(*0x20 + -0x2d);\n            goto code_r0x0042f5cc;\n        }\n        uVar8 = uVar3 & 0xffffffffffffff00 | *(*0x20 + -0x2d) == '\\0';\n    }\n    else {\n        uVar8 = 1;\n    }\n    return uVar8;\n}\n",
        "token_count": 2127
    },
    "0042f7c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042f7c0(ulong *arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    ulong *arg2;\n    ulong *in_RAX;\n    ulong uVar1;\n    code **unaff_RBX;\n    int64_t unaff_R14;\n    ulong in_stack_00000000;\n    ulong *puStackX8;\n    code **ppcStackX16;\n    \n    puStackX8 = in_RAX;\n    ppcStackX16 = unaff_RBX;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (puStackX8 != NULL) {\n        uVar1 = fcn.0042ffe0();\n        arg2 = puStackX8;\n        if (*0x544c10 == 0) {\n            *puStackX8 = uVar1;\n        }\n        else {\n            fcn.00458a80(arg1, noname_1, arg3, arg4);\n        }\n        arg2[4] = in_stack_00000000;\n        if (*0x544c10 == 0) {\n            arg2[5] = &puStackX8;\n        }\n        else {\n            arg1 = arg2 + 5;\n            fcn.00458a80(arg1, arg2, arg3, arg4);\n        }\n    }\n    (**ppcStackX16)();\n    if (puStackX8 != NULL) {\n        puStackX8[4] = 0;\n        if (*0x544c10 == 0) {\n            puStackX8[5] = 0;\n        }\n        else {\n            fcn.00458a80(arg1, ppcStackX16, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 421
    },
    "0042f8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042f8a0(ulong param_1, ulong param_2, int64_t param_3, char *param_4)\n\n{\n    char **ppcVar1;\n    code *pcVar2;\n    char cVar3;\n    ulong in_RAX;\n    char *pcVar4;\n    ulong uVar5;\n    char *pcVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    int64_t iVar9;\n    ulong unaff_RBX;\n    ulong uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    char *pcVar12;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            iVar9 = *(unaff_R14 + 0x30);\n            if (*(iVar9 + 0x90) == unaff_R14) {\n                if (*(iVar9 + 0xc0) == 0) {\n                    *(*0x20 + -0x48) = unaff_R14;\n                    if (*(iVar9 + 0xd0) == 0) {\n                        if (*(iVar9 + 0xd8) == 0) {\n                            *(*0x20 + -0x40) = in_XMM15;\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x28) = in_XMM15;\n                            *(*0x20 + -0x18) = in_XMM15;\n                            *(*0x20 + -0x38) = in_RAX;\n                            *(*0x20 + -0x30) = unaff_RBX;\n                            *(*0x20 + -0x28) = *(unaff_R14 + 0x20);\n                            *(*0x20 + -0x50) = unaff_R14 + 0x20;\n                            if (*0x544c10 == 0) {\n                                *(unaff_R14 + 0x20) = *0x20 + -0x40;\n                            }\n                            else {\n                                *(*0x20 + -0xc0) = 0x42f985;\n                                fcn.00458be0(param_1, unaff_R14 + 0x20, param_3, param_4);\n                            }\n                            LOCK();\n                            *0x544a4c = *0x544a4c + 1;\n                            *(*0x20 + -0xc0) = 0x42f9b3;\n                            fcn.0042f100(*0x20 + 8);\ncode_r0x0042f9b3:\n                            do {\n                                iVar9 = *(*0x20 + -0x48);\n                                pcVar4 = *(iVar9 + 0x28);\n                                if (pcVar4 == NULL) {\n                                    *(*0x20 + -0xc0) = 0x42fc4d;\n                                    fcn.0042ee80();\n                                    *(*0x20 + -0xc0) = 0x42fc5b;\n                                    fcn.004304a0();\n                                    _pe_dos_header = 0;\n                                    return;\n                                }\n                                iVar7 = iVar9 + 0x28;\n                                if (*pcVar4 != '\\0') {\n                                    if (*(pcVar4 + 0x20) != 0) {\n                                        *(*(pcVar4 + 0x20) + 0x31) = 1;\n                                    }\n                                    if (*0x544c10 == 0) {\n                                        *(pcVar4 + 0x20) = 0;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x42fa07;\n                                        pcVar4 = fcn.00458be0(iVar7, pcVar4 + 0x20, param_3, param_4);\n                                    }\n                                    if (pcVar4[2] == '\\0') {\n                                        if (*0x544c10 == 0) {\n                                            *(pcVar4 + 0x18) = 0;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x42fa34;\n                                            pcVar4 = fcn.00458be0(iVar7, pcVar4 + 0x18, param_3, param_4);\n                                        }\n                                        uVar5 = *(pcVar4 + 0x28);\n                                        if (*0x544c10 == 0) {\n                                            *(iVar9 + 0x28) = uVar5;\n                                        }\n                                        else {\n                                            *(*0x20 + -0xc0) = 0x42fa52;\n                                            fcn.00458ba0(iVar7, uVar5, param_3, param_4);\n                                        }\n                                        *(*0x20 + -0xc0) = 0x42fa57;\n                                        fcn.0042e9e0(iVar7, uVar5);\n                                        goto code_r0x0042f9b3;\n                                    }\n                                }\n                                *pcVar4 = '\\x01';\n                                pcVar8 = pcVar4 + 0x20;\n                                if (*0x544c10 == 0) {\n                                    *(pcVar4 + 0x20) = *0x20 + -0x40;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x42fa8f;\n                                    pcVar4 = fcn.00458be0(iVar7, pcVar8, param_3, param_4);\n                                }\n                                *(*0x20 + -0x58) = iVar7;\n                                *(*0x20 + -0x70) = pcVar4;\n                                *(*0x20 + -0x60) = pcVar8;\n                                if (pcVar4[2] == '\\0') {\n                                    *(*0x20 + -0xc0) = 0x42faf0;\n                                    uVar5 = fcn.0042ffe0();\n                                    *(*0x20 + -0x40) = uVar5;\n                                    pcVar2 = **(*(*0x20 + -0x70) + 0x18);\n                                    *(*0x20 + -0xc0) = 0x42fb03;\n                                    (*pcVar2)();\n                                    iVar9 = *(*0x20 + -0x70);\n                                    cVar3 = '\\x01';\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x42fab3;\n                                    cVar3 = fcn.0042f4c0(iVar7, pcVar8, param_3, param_4);\n                                    if (cVar3 == '\\0') {\n                                        iVar9 = *(*0x20 + -0x70);\n                                    }\n                                    else {\n                                        iVar9 = *(*0x20 + -0x70);\n                                        if (*(*(iVar9 + 0x20) + 0x30) == '\\0') {\n                                            *(*0x20 + -0x9a) = cVar3;\n                                            *(*0x20 + -0xc0) = 0x42fad8;\n                                            fcn.0042f100(0);\n                                            cVar3 = *(*0x20 + -0x9a);\n                                            iVar9 = *(*0x20 + -0x70);\n                                        }\n                                    }\n                                }\n                                *(*0x20 + -0x40) = 0;\n                                iVar7 = *(*0x20 + -0x48);\n                                if (*(iVar7 + 0x28) != iVar9) goto code_r0x0042fde5;\n                                if (*0x544c10 == 0) {\n                                    *(iVar9 + 0x20) = 0;\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x42fb4c;\n                                    cVar3 = fcn.00458bc0(iVar7, iVar9, param_3, param_4);\n                                }\n                                uVar5 = *(iVar9 + 0x10);\n                                *(*0x20 + -0x98) = uVar5;\n                                uVar10 = *(iVar9 + 8);\n                                *(*0x20 + -0x88) = uVar10;\n                                if (cVar3 != '\\0') {\n                                    if (*0x544c10 == 0) {\n                                        *(iVar9 + 0x18) = 0;\n                                    }\n                                    else {\n                                        param_4 = NULL;\n                                        *(*0x20 + -0xc0) = 0x42fb8a;\n                                        cVar3 = fcn.00458c20(iVar7, uVar5, iVar9);\n                                    }\n                                    *(*0x20 + -0x99) = cVar3;\n                                    if (*0x544c10 == 0) {\n                                        *(iVar7 + 0x28) = *(iVar9 + 0x28);\n                                        param_3 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x42fbb4;\n                                        fcn.00458be0(iVar7, uVar5, iVar9, param_4);\n                                        param_3 = iVar9;\n                                    }\n                                    *(*0x20 + -0xc0) = 0x42fbbc;\n                                    fcn.0042e9e0(iVar7, uVar5);\n                                    cVar3 = *(*0x20 + -0x99);\n                                    iVar7 = *(*0x20 + -0x48);\n                                    uVar5 = *(*0x20 + -0x98);\n                                    uVar10 = *(*0x20 + -0x88);\n                                }\n                            } while (*(*0x20 + -0x10) == '\\0');\n                            iVar9 = *(*0x20 + -0x28);\n                            if (*0x544c10 == 0) {\n                                *(iVar7 + 0x20) = iVar9;\n                                pcVar4 = *(*0x20 + -0x50);\n                            }\n                            else {\n                                pcVar4 = *(*0x20 + -0x50);\n                                *(*0x20 + -0xc0) = 0x42fc05;\n                                cVar3 = fcn.00458be0(iVar7, uVar5, param_3, param_4);\n                            }\n                            if (((iVar9 == 0) || (*(iVar9 + 0x32) == '\\0')) || (*(iVar9 + 0x31) == '\\0')) {\n                                LOCK();\n                                *0x544a4c = *0x544a4c + -1;\n                                pcVar8 = *(iVar7 + 0x28);\n                                if (cVar3 == '\\0') {\n                                    pcVar6 = pcVar8;\n                                    pcVar12 = *(pcVar8 + 0x28);\n                                    pcVar8 = *(pcVar8 + 0x28);\n                                }\n                                else {\n                                    pcVar6 = NULL;\n                                    pcVar12 = pcVar8;\n                                    pcVar8 = 0x544a4c;\n                                }\n                                while ((pcVar12 != NULL && (*pcVar12 == '\\0'))) {\n                                    if (pcVar12[2] == '\\0') {\n                                        ppcVar1 = pcVar12 + 0x28;\n                                        pcVar6 = pcVar12;\n                                        pcVar12 = *ppcVar1;\n                                        pcVar8 = *ppcVar1;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x80) = pcVar6;\n                                        if (pcVar6 == NULL) {\n                                            uVar10 = *(pcVar12 + 0x28);\n                                            if (*0x544c10 == 0) {\n                                                *(iVar7 + 0x28) = uVar10;\n                                                param_4 = *(*0x20 + -0x50);\n                                            }\n                                            else {\n                                                *(*0x20 + -0xc0) = 0x42fcf9;\n                                                fcn.00458c00(iVar7, uVar5, uVar10, pcVar4);\n                                                param_4 = pcVar4;\n                                            }\n                                        }\n                                        else {\n                                            uVar10 = *(pcVar12 + 0x28);\n                                            if (*0x544c10 == 0) {\n                                                *(pcVar6 + 0x28) = uVar10;\n                                            }\n                                            else {\n                                                param_4 = pcVar6 + 0x28;\n                                                *(*0x20 + -0xc0) = 0x42fcca;\n                                                fcn.00458c00(iVar7, uVar5, uVar10, param_4);\n                                            }\n                                        }\n                                        uVar10 = *(pcVar12 + 0x28);\n                                        *(*0x20 + -0x78) = uVar10;\n                                        *(*0x20 + -0xc0) = 0x42fd0a;\n                                        fcn.0042e9e0(uVar10, uVar5);\n                                        iVar7 = *(*0x20 + -0x48);\n                                        uVar5 = *(*0x20 + -0x98);\n                                        uVar10 = *(*0x20 + -0x88);\n                                        pcVar4 = *(*0x20 + -0x50);\n                                        pcVar12 = *(*0x20 + -0x78);\n                                        pcVar6 = *(*0x20 + -0x80);\n                                        pcVar8 = pcVar12;\n                                    }\n                                }\n                                if (*0x544c10 == 0) {\n                                    *(iVar7 + 0x20) = *(*0x20 + -0x28);\n                                }\n                                else {\n                                    *(*0x20 + -0xc0) = 0x42fd49;\n                                    fcn.00458be0(iVar7, uVar5, pcVar8, param_4);\n                                }\n                                while( true ) {\n                                    iVar9 = *(iVar7 + 0x20);\n                                    if (iVar9 == 0) goto code_r0x0042fda5;\n                                    if (*(iVar9 + 0x31) == '\\0') break;\n                                    if (*0x544c10 == 0) {\n                                        *(iVar7 + 0x20) = *(iVar9 + 0x18);\n                                    }\n                                    else {\n                                        *(*0x20 + -0xc0) = 0x42fd70;\n                                        fcn.00458be0(iVar7, uVar5, pcVar8, param_4);\n                                    }\n                                }\n                                if (iVar9 == 0) goto code_r0x0042fda5;\n                                do {\n                                    *(iVar7 + 0x110) = uVar10;\n                                    *(iVar7 + 0x118) = uVar5;\n                                    *(*0x20 + -0xc0) = 0x42fd91;\n                                    fcn.00456720();\n                                    uVar10 = 0xf;\n                                    *(*0x20 + -0xc0) = 0x42fda5;\n                                    fcn.00430040();\ncode_r0x0042fda5:\n                                    *(iVar7 + 0xf0) = 0;\n                                } while( true );\n                            }\n                            *(iVar7 + 0x110) = *(iVar9 + 0x28);\n                            *(iVar7 + 0x118) = *(iVar9 + 0x20);\n                            *(*0x20 + -0xc0) = 0x42fdd3;\n                            fcn.00456720();\n                            *(*0x20 + -0xc0) = 0x42fde5;\n                            fcn.00430040();\ncode_r0x0042fde5:\n                            *(*0x20 + -0xc0) = 0x42fdf6;\n                            fcn.00430040();\n                        }\n                        *(*0x20 + -0xc0) = 0x42fdfb;\n                        fcn.00431980();\n                        *(*0x20 + -0xc0) = 0x42fe0c;\n                        fcn.00432280();\n                        *(*0x20 + -0xc0) = 0x42fe11;\n                        fcn.00431a00();\n                        *(*0x20 + -0xc0) = 0x42fe26;\n                        fcn.00407260();\n                        *(*0x20 + -0xc0) = 0x42fe2b;\n                        fcn.00431980();\n                        *(*0x20 + -0xc0) = 0x42fe30;\n                        fcn.00431be0();\n                        *(*0x20 + -0xc0) = 0x42fe35;\n                        fcn.00431a00();\n                        *(*0x20 + -0xc0) = 0x42fe46;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0xc0) = 0x42fe4b;\n                    fcn.00431980();\n                    *(*0x20 + -0xc0) = 0x42fe5c;\n                    fcn.00432280();\n                    *(*0x20 + -0xc0) = 0x42fe65;\n                    fcn.00431a00();\n                    *(*0x20 + -0xc0) = 0x42fe7a;\n                    fcn.00407260();\n                    *(*0x20 + -0xc0) = 0x42fe7f;\n                    fcn.00431980();\n                    *(*0x20 + -0xc0) = 0x42fe85;\n                    fcn.00431be0();\n                    *(*0x20 + -0xc0) = 0x42fe8a;\n                    fcn.00431a00();\n                    *(*0x20 + -0xc0) = 0x42fe8f;\n                    fcn.00431980();\n                    *(*0x20 + -0xc0) = 0x42fea5;\n                    fcn.00432280();\n                    *(*0x20 + -0xc0) = 0x42feaa;\n                    fcn.00431a00();\n                    iVar9 = *(*(*0x20 + -0x48) + 0x30);\n                    param_1 = *(iVar9 + 200);\n                    *(*0x20 + -0x68) = param_1;\n                    *(*0x20 + -0x90) = *(iVar9 + 0xd0);\n                    *(*0x20 + -0xc0) = 0x42fed0;\n                    fcn.00431980();\n                    *(*0x20 + -0xc0) = 0x42fedf;\n                    fcn.00432280();\n                    *(*0x20 + -0xc0) = 0x42fee5;\n                    fcn.00431a00();\n                    *(*0x20 + -0xc0) = 0x42feea;\n                    fcn.00431980();\n                    *(*0x20 + -0xc0) = 0x42feef;\n                    fcn.00431be0();\n                    *(*0x20 + -0xc0) = 0x42fef4;\n                    fcn.00431a00();\n                    *(*0x20 + -0xc0) = 0x42ff05;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0xc0) = 0x42ff0a;\n                fcn.00431980();\n                *(*0x20 + -0xc0) = 0x42ff1b;\n                fcn.00432280();\n                *(*0x20 + -0xc0) = 0x42ff25;\n                fcn.00431a00();\n                *(*0x20 + -0xc0) = 0x42ff3a;\n                fcn.00407260();\n                *(*0x20 + -0xc0) = 0x42ff3f;\n                fcn.00431980();\n                *(*0x20 + -0xc0) = 0x42ff45;\n                fcn.00431be0();\n                *(*0x20 + -0xc0) = 0x42ff4a;\n                fcn.00431a00();\n                *(*0x20 + -0xc0) = 0x42ff5b;\n                fcn.00430040();\n            }\n            *(*0x20 + -0xc0) = 0x42ff65;\n            fcn.00431980();\n            *(*0x20 + -0xc0) = 0x42ff76;\n            fcn.00432280();\n            *(*0x20 + -0xc0) = 0x42ff7b;\n            fcn.00431a00();\n            *(*0x20 + -0xc0) = 0x42ff90;\n            fcn.00407260();\n            *(*0x20 + -0xc0) = 0x42ff95;\n            fcn.00431980();\n            *(*0x20 + -0xc0) = 0x42ff9a;\n            fcn.00431be0();\n            *(*0x20 + -0xc0) = 0x42ff9f;\n            fcn.00431a00();\n            unaff_RBX = 0x15;\n            *(*0x20 + -0xc0) = 0x42ffb0;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + 0x10) = unaff_RBX;\n        *(puVar11 + -8) = 0x42ffc5;\n        fcn.004568e0();\n        in_RAX = *(puVar11 + 8);\n        unaff_RBX = *(puVar11 + 0x10);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 4874
    },
    "00430000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00430000(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x20);\n    if ((((piVar1 != NULL) && (*(piVar1 + 0x32) == '\\0')) && (*(piVar1 + 6) == '\\0')) && (in_RAX == *piVar1)) {\n        *(piVar1 + 6) = 1;\n        return piVar1[1];\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "00430380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00430380(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xc4) == 0) {\n        *(*(unaff_R14 + 0x30) + 0xc4) = in_EAX;\n    }\n    fcn.004567a0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "00430620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00430620(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x51d718 == 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xc0;\n    *piVar1 = *piVar1 + 1;\n    if (*(*(unaff_R14 + 0x30) + 0xd8) < 0) {\n        *(*(unaff_R14 + 0x30) + 0xd8) = 1;\n    }\n    iVar3 = *(unaff_R14 + 0x30);\n    iVar2 = *(iVar3 + 0xdc);\n    if (iVar2 != 0) {\n        if (iVar2 != 1) {\n            if (iVar2 == 2) {\n                *(iVar3 + 0xdc) = 3;\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n                fcn.0042c1c0();\n            }\n            fcn.0042c1c0();\n            return 0;\n        }\n        *(iVar3 + 0xdc) = 2;\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n        return 0;\n    }\n    *(iVar3 + 0xdc) = 1;\n    iVar2 = *0x544a44;\n    LOCK();\n    *0x544a44 = *0x544a44 + 1;\n    fcn.00409820(iVar2);\n    if ((0 < *0x544e90) || (0 < *0x544e8c)) {\n        fcn.0043d740();\n    }\n    fcn.00433fc0();\n    return 1;\n}\n",
        "token_count": 495
    },
    "004307a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004307a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int64_t in_RAX;\n    uint32_t uVar7;\n    int64_t unaff_R14;\n    bool bVar8;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 0xf0) != 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00431a00();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    uVar6 = *0x4d926c;\n    uVar2 = *(*(unaff_R14 + 0x30) + 0xc4);\n    if (uVar2 == 0) {\n        bVar8 = (*0x4d926c >> 1 & 1) != 0;\n    }\n    else {\n        bVar8 = true;\n    }\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar7 = uVar1;\n    if ((uVar1 == 0) && (uVar7 = *0x4d926c >> 2,  1 < uVar2)) {\n        uVar7 = 2;\n    }\n    if (uVar7 != 0) {\n        piVar3 = *(in_RAX + 0x30);\n        iVar4 = piVar3[0x12];\n        if (*piVar3 == in_RAX) {\n            if ((1 < uVar7) || (1 < *(piVar3 + 0xc4))) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n                fcn.0044f460(0);\n            }\n        }\n        else {\n            fcn.00431980();\n            fcn.00431be0();\n            fcn.00431a00();\n            fcn.00450200();\n            fcn.0044f460(0);\n        }\n        if ((*0x5449e3 == '\\0') && (iVar4 != in_RAX | bVar8)) {\n            *0x5449e3 = '\\x01';\n            fcn.00450440();\n        }\n    }\n    fcn.00409a80();\n    LOCK();\n    iVar5 = *0x544a44 + -1;\n    bVar8 = *0x544a44 != 1;\n    *0x544a44 = iVar5;\n    if (bVar8) {\n        fcn.00409860();\n        fcn.00409860();\n    }\n    return uVar6 & 1;\n}\n",
        "token_count": 752
    },
    "00430a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00430a60(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    if (*(iVar3 + 0x90) != unaff_R14) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return 0;\n    }\n    iVar2 = *(iVar3 + 0xd8);\n    if ((((iVar2 == 1) && (*(iVar3 + 0xc0) == 0)) && (*(iVar3 + 0xc4) == 0)) &&\n       ((*(iVar3 + 0xd0) == 0 && (*(iVar3 + 0xdc) == 0)))) {\n        if (((*(unaff_R14 + 0x90) & 0xffffefff) == 2) && (*(unaff_R14 + 0x70) == 0)) {\n            if (*(iVar3 + 0x2b0) != 0) {\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return 0;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            return 1;\n        }\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return 0;\n    }\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return 0;\n}\n",
        "token_count": 659
    },
    "00430ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00430ba0(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = fcn.00447600();\n    if (uVar1 != 0) {\n        return uVar1 & 0xffffffffffffff00 | *(uVar1 + 0x28) == '\\x01';\n    }\n    return 0;\n}\n",
        "token_count": 81
    },
    "00431140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00431140(uchar param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int64_t in_RAX;\n    char unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_BL != '\\0') {\n                return;\n            }\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x29) = param_1;\n            uVar1 = *(in_RAX + 0x90);\n            if ((uVar1 == 0x1001) || (uVar1 - 0x1003 < 2)) {\n                *(*0x20 + -0x50) = 0x431192;\n                fcn.00434060(uVar1 & 0xffffefff);\n                if (*(*0x20 + -0x29) != '\\0') {\n                    *(*0x20 + -0x50) = 0x4311ac;\n                    fcn.00433da0(1);\n                }\n                return;\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x4311e5;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x4311f6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x431205;\n            fcn.00432200();\n            *(*0x20 + -0x50) = 0x431216;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x431225;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x431236;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x431245;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x43124a;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x43124f;\n            fcn.00431a00();\n            uVar2 = *(*(*0x20 + -0x18) + 0x90);\n            param_1 = uVar2;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x50) = 0x43126f;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x431285;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x43128f;\n            fcn.00432200();\n            *(*0x20 + -0x50) = 0x4312a5;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x4312af;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x4312c5;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x4312d0;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x4312d5;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x4312da;\n            fcn.00431a00();\n            unaff_BL = '\\x13';\n            *(*0x20 + -0x50) = 0x4312eb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        puVar3[0x11] = param_1;\n        *(puVar3 + -8) = 0x4312fe;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        param_1 = puVar3[0x11];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1154
    },
    "0045af80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045af80(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    \n    iVar1 = **(in_GS_OFFSET + *0x544bc0);\n    *(iVar1 + 0xb4) = 1;\n    if (*(iVar1 + 0xb2) == '\\0') {\n        fcn.00456720();\n    }\n    else {\n        fcn.00456720();\n    }\n    *(iVar1 + 0xb4) = 0;\n    return;\n}\n",
        "token_count": 118
    },
    "00431a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00431a00(void)\n\n{\n    char cVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    cVar1 = *(*(unaff_R14 + 0x30) + 0xe7);\n    *(*(unaff_R14 + 0x30) + 0xe7) = cVar1 + -1;\n    if (cVar1 == '\\x01') {\n        fcn.00409a80();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00431a60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00431a60(uint64_t arg1)\n\n{\n    uint64_t arg2;\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x38) = 0x431a9d;\n            fcn.00431800(arg1);\n            if (unaff_R14 == 0) {\ncode_r0x00431b3d:\n                *(*0x20 + -0x38) = 0x431b51;\n                fcn.00453100(*(*0x20 + 0x18));\n                return;\n            }\n            if ((*(unaff_R14 + 0xf8) == 0) || (0 < *(*(unaff_R14 + 0x30) + 0xdc))) goto code_r0x00431b3d;\n            iVar1 = *(unaff_R14 + 0x108) - *(unaff_R14 + 0x100);\n            arg1_00 = iVar1;\n            if (*(*0x20 + 0x10) < iVar1) {\n                arg1_00 = *(*0x20 + 0x10);\n            }\n            iVar2 = unaff_R14;\n            if (*(*0x20 + 8) != *(unaff_R14 + 0xf8) + (*(unaff_R14 + 0x100) & -iVar1 >> 0x3f)) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(*0x20 + -0x18) = arg1_00;\n                *(*0x20 + -0x38) = 0x431b0c;\n                fcn.00459880(arg1_00);\n                arg1_00 = *(*0x20 + -0x18);\n                iVar2 = *(*0x20 + -0x10);\n            }\n            arg2 = *(iVar2 + 0x108);\n            unaff_RBX = *(iVar2 + 0x100);\n            arg1 = arg1_00 + unaff_RBX;\n            if (arg1 <= arg2) {\n                *(iVar2 + 0x100) = arg1;\n                return;\n            }\n            *(*0x20 + -0x38) = 0x431b6d;\n            in_RAX = fcn.00458fa0(arg1, arg2);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x431b85;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 869
    },
    "00432b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432b60(uint64_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uchar unaff_DIL;\n    int64_t arg3;\n    int64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg2 = *(unaff_R14 + 0x30);\n            arg3 = *(arg2 + 0x90);\n            if ((*(arg3 + 0x90) == 2) || (*(arg3 + 0x90) == 0x1002)) {\n                if (*0x544c10 == 0) {\n                    *(arg2 + 0x250) = unaff_RBX;\n                    *(arg2 + 0x248) = in_RAX;\n                }\n                else {\n                    arg4 = arg2 + 0x250;\n                    *(*0x20 + -0x20) = 0x432bde;\n                    fcn.00458bc0(param_1, arg2, arg3, arg4);\n                    *(*0x20 + -0x20) = 0x432bea;\n                    fcn.00458a80(param_1, arg2, arg3, arg4);\n                }\n                *(arg3 + 0xb0) = param_1;\n                *(arg2 + 600) = unaff_DIL;\n                *(arg2 + 0x260) = unaff_RSI;\n                iVar2 = *(arg2 + 0xd8);\n                *(arg2 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                *(*0x20 + -0x20) = 0x432c36;\n                fcn.00456720();\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x432c52;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        puVar3[0x19] = unaff_DIL;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + -8) = 0x432c70;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        unaff_DIL = puVar3[0x19];\n        unaff_RSI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 830
    },
    "00432d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00432d60(ulong noname_0, uint64_t arg2)\n\n{\n    ulong *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t iVar10;\n    uint64_t unaff_R14;\n    int64_t iStack40;\n    uint64_t uStack24;\n    uint64_t uStack16;\n    \n    piVar2 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar2 = *piVar2 + 1;\n    iVar5 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar5 + 0xa0);\n    uVar7 = uVar4;\n    if (*(uVar4 + 0x9b8) != 0) goto code_r0x00432dc5;\n    arg4 = unaff_R14;\n    fcn.00409860();\n    arg2 = uVar4 + 0x9b0;\n    iStack40 = iVar5;\n    uStack24 = arg2;\n    uStack16 = uVar4;\n    do {\n        while ((uVar7 = *0x4f2768,  uVar9 = *(uVar4 + 0x9c0) >> 1,  *(uVar4 + 0x9b8) < uVar9 &&\n               (uVar9 = *0x4f2768,  *0x4f2768 != 0))) {\n            if (*0x544c10 == 0) {\n                puVar1 = *0x4f2768 + 8;\n                *0x4f2768 = *(*0x4f2768 + 8);\n                *puVar1 = 0;\n            }\n            else {\n                fcn.00458c20(uVar4, arg2, *0x4f2768);\n                fcn.00458c20(uVar4, arg2, uVar7);\n            }\n            uVar8 = *(uVar4 + 0x9b8) + 1;\n            iVar5 = *(uVar4 + 0x9b0);\n            uVar9 = *(uVar4 + 0x9c0);\n            arg4 = uVar9;\n            if (uVar9 < uVar8) {\n                arg3 = uVar7;\n                iVar5 = fcn.00441fe0(uVar9);\n                *(uStack16 + 0x9c0) = uVar9;\n                uVar4 = uStack16;\n                arg2 = uStack24;\n                if (*0x544c10 == 0) {\n                    *(uStack16 + 0x9b0) = iVar5;\n                }\n                else {\n                    iVar5 = fcn.00458a80(uVar9, uStack16, arg3, arg4);\n                }\n            }\n            *(uVar4 + 0x9b8) = uVar8;\n            if (*0x544c10 == 0) {\n                *(iVar5 + -8 + uVar8 * 8) = uVar7;\n            }\n            else {\n                fcn.00458c00(uVar4, arg2, uVar7, arg4);\n            }\n        }\n        fcn.00409a80();\n        iVar5 = iStack40;\n        uVar7 = uStack16;\n        if (*(uStack16 + 0x9b8) == 0) {\n            uVar6 = fcn.0040ba20();\n            arg2 = *(uStack16 + 0x9b0);\n            uVar4 = *(uStack16 + 0x9c0);\n            uVar8 = *(uStack16 + 0x9b8) + 1;\n            if (uVar4 < uVar8) {\n                arg2 = fcn.00441fe0(uVar4);\n                *(uStack16 + 0x9c0) = uVar4;\n                if (*0x544c10 == 0) {\n                    *(uStack16 + 0x9b0) = arg2;\n                }\n                else {\n                    arg2 = fcn.00458a80(uVar4, uStack16, uVar9, arg4);\n                }\n            }\n            *(uVar7 + 0x9b8) = uVar8;\n            if (*0x544c10 == 0) {\n                *((arg2 - 8) + uVar8 * 8) = uVar6;\n            }\n            else {\n                fcn.00458a80(uVar7, arg2, uVar9, arg4);\n            }\n        }\ncode_r0x00432dc5:\n        uVar4 = *(uVar7 + 0x9b8);\n        arg4 = *(uVar7 + 0x9b0);\n        uVar9 = uVar4 - 1;\n        if (uVar9 < uVar4) {\n            iVar10 = *((arg4 - 8) + uVar4 * 8);\n            if (*0x544c10 == 0) {\n                *((arg4 - 8) + uVar4 * 8) = 0;\n            }\n            else {\n                arg4 = 0;\n                fcn.00458c20(uVar9, arg2, uVar7);\n            }\n            uVar4 = *(uVar7 + 0x9c0);\n            if (uVar9 <= uVar4) {\n                *(uVar7 + 0x9b8) = uVar9;\n                if (*(iVar10 + 0x18) == 0) {\n                    iVar3 = *(iVar5 + 0xd8);\n                    *(iVar5 + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return iVar10;\n                }\n                fcn.00430040();\n            }\n            uVar4 = fcn.00458fa0(uVar9, uVar4);\n        }\n        arg2 = uVar4;\n        fcn.00458f20(uVar4);\n    } while( true );\n}\n",
        "token_count": 1438
    },
    "00433060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433060(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t arg1;\n    uint64_t uVar5;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t arg2_00;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t arg3;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    if (*(in_RAX + 0x18) == 0) {\n        if (*(in_RAX + 0x34) == '\\0') {\n            if (*(in_RAX + 8) == 0) {\n                if (*(in_RAX + 0x10) == 0) {\n                    if (*(in_RAX + 0x40) == 0) {\n                        if (*(in_RAX + 0x50) == 0) {\n                            if (*(unaff_R14 + 0x88) == 0) {\n                                piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n                                *piVar1 = *piVar1 + 1;\n                                arg3 = *(unaff_R14 + 0x30);\n                                arg2 = *(arg3 + 0xa0);\n                                if (*(arg2 + 0x9b8) == *(arg2 + 0x9c0)) {\n                                    arg1 = 0;\n                                    iVar4 = 0;\n                                    iVar8 = arg3;\n                                    iVar9 = arg2;\n                                    while( true ) {\n                                        uVar5 = *(iVar9 + 0x9b8);\n                                        if (uVar5 <= *(iVar9 + 0x9c0) >> 1) break;\n                                        uVar7 = uVar5 - 1;\n                                        if (uVar5 <= uVar7) {\ncode_r0x00433311:\n                                            fcn.00458f20(uVar5);\n                                            goto code_r0x0043331c;\n                                        }\n                                        iVar6 = *(*(iVar9 + 0x9b0) + -8 + uVar5 * 8);\n                                        if (*0x544c10 == 0) {\n                                            *(*(iVar9 + 0x9b0) + -8 + uVar5 * 8) = 0;\n                                            arg1_00 = arg1;\n                                            arg2_00 = iVar4;\n                                            arg1 = iVar6;\n                                        }\n                                        else {\n                                            fcn.00458bc0(arg1, iVar4, iVar8, iVar9);\n                                            arg1_00 = arg1;\n                                            arg2_00 = iVar4;\n                                            arg1 = iVar6;\n                                        }\n                                        uVar5 = *(iVar9 + 0x9c0);\n                                        if (uVar5 < uVar7) {\n                                            fcn.00458fa0(uVar7, uVar5);\n                                            goto code_r0x00433311;\n                                        }\n                                        *(iVar9 + 0x9b8) = uVar7;\n                                        iVar4 = arg1;\n                                        if (arg2_00 != 0) {\n                                            if (*0x544c10 == 0) {\n                                                *(arg1_00 + 8) = arg1;\n                                                iVar4 = arg2_00;\n                                            }\n                                            else {\n                                                fcn.00458bc0(arg1_00, arg2_00, iVar8, iVar9);\n                                                iVar4 = arg2_00;\n                                            }\n                                        }\n                                    }\n                                    iVar6 = iVar4;\n                                    fcn.00409860();\n                                    if (*0x544c10 == 0) {\n                                        *(arg1 + 8) = *0x4f2768;\n                                        *0x4f2768 = iVar4;\n                                    }\n                                    else {\n                                        fcn.00458b80(*0x4f2768, iVar6, iVar8, iVar9);\n                                        fcn.00458b80(iVar4, iVar6, iVar8, iVar9);\n                                    }\n                                    fcn.00409a80();\n                                }\n                                uVar7 = *(arg2 + 0x9b8) + 1;\n                                iVar4 = *(arg2 + 0x9b0);\n                                uVar5 = *(arg2 + 0x9c0);\n                                if (uVar5 < uVar7) {\n                                    iVar8 = arg3;\n                                    iVar9 = arg2;\n                                    iVar4 = fcn.00441fe0(uVar5);\n                                    *(arg2 + 0x9c0) = uVar5;\n                                    if (*0x544c10 == 0) {\n                                        *(arg2 + 0x9b0) = iVar4;\n                                    }\n                                    else {\n                                        uVar5 = arg2 + 0x9b0;\n                                        iVar4 = fcn.00458a80(uVar5, arg2, iVar8, iVar9);\n                                    }\n                                }\n                                *(arg2 + 0x9b8) = uVar7;\n                                if (*0x544c10 == 0) {\n                                    *(iVar4 + -8 + uVar7 * 8) = in_RAX;\n                                }\n                                else {\n                                    fcn.00458a80(uVar5, iVar4, arg3, arg2);\n                                }\n                                iVar2 = *(arg3 + 0xd8);\n                                *(arg3 + 0xd8) = iVar2 + -1;\n                                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                                }\n                                return;\n                            }\ncode_r0x0043331c:\n                            fcn.00430040();\n                        }\n                        fcn.00430040();\n                    }\n                    fcn.00430040();\n                }\n                fcn.00430040();\n            }\n            fcn.00430040();\n        }\n        fcn.00430040();\n    }\n    fcn.00430040();\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 1355
    },
    "00433500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433500(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x90) != 0) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x58) = 0x43353b;\n                fcn.00409860();\n                uVar4 = *0x4f1c58 + 1;\n                iVar3 = *0x4f1c50;\n                arg1 = *0x4f1c60;\n                iVar2 = *0x4f1c50;\n                if (*0x4f1c60 < uVar4) {\n                    *(*0x20 + -0x58) = 0x433569;\n                    iVar3 = fcn.00441fe0(*0x4f1c60);\n                    arg1 = *0x4f1c60;\n                    iVar2 = iVar3;\n                    if (*0x544c10 != 0) {\n                        *(*0x20 + -0x58) = 0x43358e;\n                        iVar3 = fcn.00458a80(*0x4f1c60, param_2, param_3, param_4);\n                        iVar2 = *0x4f1c50;\n                    }\n                }\n                *0x4f1c50 = iVar2;\n                *0x4f1c58 = uVar4;\n                if (*0x544c10 == 0) {\n                    param_2 = *(*0x20 + 8);\n                    *(iVar3 + -8 + uVar4 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(*0x20 + 8);\n                    *(*0x20 + -0x58) = 0x4335bc;\n                    fcn.00458ba0(arg1, param_2, param_3, param_4);\n                }\n                if (*0x4f1c58 != 0) {\n                    iVar3 = *0x4f15b8;\n                    if ((*0x4f15b8 != *0x4f1c50) && (iVar3 = *0x4f1c50,  *0x544c10 != '\\0')) {\n                        *(*0x20 + -0x10) = *0x4f1c50;\n                        *(*0x20 + -0x58) = 0x4335f3;\n                        fcn.00402e00();\n                        iVar3 = *(*0x20 + -0x10);\n                    }\n                    *0x4f15b8 = iVar3;\n                    uVar1 = *0x544a78;\n                    *0x544a78 = *0x4f1c58;\n                    *(*0x20 + -0x58) = 0x433625;\n                    fcn.00409a80(uVar1);\n                    return;\n                }\n                *(*0x20 + -0x58) = 0x433639;\n                fcn.00458f20(0);\n            }\n            *(*0x20 + -0x58) = 0x43364a;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x433655;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 945
    },
    "00433bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433bc0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    ulong arg1;\n    int64_t arg2;\n    uint64_t arg2_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (**(unaff_R14 + 0x30) != unaff_R14) {\n        fcn.0044fd20(0x20);\n    }\n    fcn.00409860();\n    if (unaff_RBX < 0) {\n        uVar4 = fcn.00433b60();\n        *(in_RAX + 0xb8) = uVar4;\n    }\n    else {\n        *(in_RAX + 0xb8) = unaff_RBX;\n    }\n    uVar4 = *(in_RAX + 0xb8);\n    arg2 = in_RAX;\n    uVar2 = fcn.004589e0();\n    fcn.00458920(uVar4, arg2);\n    uVar3 = fcn.004589e0();\n    if ((uVar2 | uVar3) == 0) {\n        uVar3 = 1;\n    }\n    arg2_00 = uVar2;\n    *(in_RAX + 0xf0) = CONCAT44(uVar3, uVar2);\n    piVar1 = *(in_RAX + 0x50);\n    if (piVar1 != NULL) {\n        arg2_00 = *piVar1 + 0x13a0;\n        piVar1[3] = arg2_00;\n    }\n    if (*0x544c10 == 0) {\n        *(in_RAX + 0x120) = *0x4f15c0;\n    }\n    else {\n        fcn.00458b80(*0x4f15c0, arg2_00, param_3, param_4);\n    }\n    if (*0x544c10 != '\\0') {\n        fcn.00402e00();\n    }\n    arg1 = 0x4f15c0;\n    *0x4f15c0 = in_RAX;\n    fcn.00409a80();\n    uVar4 = fcn.0040ba20();\n    if (*0x544c10 == 0) {\n        *(in_RAX + 0x110) = uVar4;\n    }\n    else {\n        fcn.00458a80(arg1, arg2_00, param_3, param_4);\n    }\n    return;\n}\n",
        "token_count": 653
    },
    "00433da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00433da0(uchar param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x29) = param_1;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x4f6bd0 != '\\0') {\n                *(*0x20 + -0x50) = 0x433dcf;\n                fcn.0044c900();\n                in_RAX = *(*0x20 + 8);\n            }\n            uVar2 = *(in_RAX + 0x90);\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            if ((uVar2 & 0xffffefff) == 4) {\n                *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n                *(*0x20 + -0x50) = 0x433e0c;\n                fcn.00434500(1);\n                *(*0x20 + -0x50) = 0x433e27;\n                fcn.0043e7e0(*(*0x20 + -0x29));\n                *(*0x20 + -0x50) = 0x433e2c;\n                fcn.00436ba0();\n                iVar3 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar3 + -1;\n                if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x24) = *(in_RAX + 0x90);\n            *(*0x20 + -0x20) = *(in_RAX + 0x98);\n            *(*0x20 + -0x50) = 0x433e85;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x433e96;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433ea5;\n            fcn.00432200();\n            *(*0x20 + -0x50) = 0x433eb6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433ec5;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x433ed6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433ee5;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x433eea;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x433eef;\n            fcn.00431a00();\n            uVar4 = *(*(*0x20 + -0x10) + 0x90);\n            param_1 = uVar4;\n            *(*0x20 + -0x28) = uVar4;\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x50) = 0x433f0f;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x433f25;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433f2f;\n            fcn.00432200();\n            *(*0x20 + -0x50) = 0x433f45;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433f4f;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x433f65;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x433f70;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x433f75;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x433f7a;\n            fcn.00431a00();\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x50) = 0x433f8b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        puVar5[0x18] = param_1;\n        *(puVar5 + -8) = 0x433f9f;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        param_1 = puVar5[0x18];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1366
    },
    "00434500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00434500(ulong arg1)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint32_t unaff_EBX;\n    int64_t iVar4;\n    uchar *puVar5;\n    bool bVar6;\n    ulong uStack64;\n    uchar auStack24 [16];\n    \n    if ((((unaff_EBX >> 0xc & 1) != 0) || ((arg1 >> 0xc & 1) != 0)) || (unaff_EBX == arg1)) {\n        auStack24 = CONCAT412(arg1, CONCAT48(unaff_EBX, 0x4348a0));\n        uStack64 = auStack24;\n        fcn.004567a0();\n    }\n    iVar3 = 0;\n    puVar5 = NULL;\n    while( true ) {\n        LOCK();\n        if (unaff_EBX == *(in_RAX + 0x90)) break;\n        if ((unaff_EBX == 4) && (*(in_RAX + 0x90) == 1)) {\n            fcn.00430040();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (iVar3 == 0) {\n            fcn.0045a8a0();\n            puVar5 = uStack64 + 5000;\n        }\n        fcn.0045a8a0();\n        if (uStack64 < puVar5) {\n            iVar4 = 0;\n            while( true ) {\n                if (iVar4 < 10) {\n                    bVar6 = *(in_RAX + 0x90) != unaff_EBX;\n                }\n                else {\n                    bVar6 = false;\n                }\n                if (!bVar6) break;\n                uStack64 = CONCAT44(uStack64._4_4_, 1);\n                fcn.00458660();\n                iVar4 = iVar4 + 1;\n            }\n        }\n        else {\n            uStack64 = 0x47cc98;\n            fcn.004567a0();\n            fcn.0045a8a0();\n            puVar5 = 0x47d65c;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    *(in_RAX + 0x90) = arg1;\n    if (unaff_EBX == 2) {\n        if ((*0x5449e1 != '\\0') || ((*(in_RAX + 0xbd) & 7) == 0)) {\n            *(in_RAX + 0xbc) = 1;\n        }\n        *(in_RAX + 0xbd) = *(in_RAX + 0xbd) + '\\x01';\n    }\n    if (*(in_RAX + 0xbc) != '\\0') {\n        if (unaff_EBX == 1) {\n            fcn.0045a8a0();\n            *(in_RAX + 200) = uStack64 + (*(in_RAX + 200) - *(in_RAX + 0xc0));\n            *(in_RAX + 0xc0) = 0;\n        }\n        else if ((unaff_EBX == 4) &&\n                (((cVar1 = *(in_RAX + 0xb0),  cVar1 == '\\x15' || (cVar1 == '\\x16')) || (cVar1 == '\\x17')))) {\n            fcn.0045a8a0();\n            LOCK();\n            *0x4f2cf8 = *0x4f2cf8 + (uStack64 - *(in_RAX + 0xc0)) * 8;\n            *(in_RAX + 0xc0) = 0;\n        }\n        if (arg1 == 1) {\n            fcn.0045a8a0();\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        else if (arg1 == 2) {\n            *(in_RAX + 0xbc) = 0;\n            fcn.004086a0();\n            *(in_RAX + 200) = 0;\n        }\n        else if ((arg1 == 4) &&\n                (((cVar1 = *(in_RAX + 0xb0),  cVar1 == '\\x15' || (cVar1 == '\\x16')) || (cVar1 == '\\x17')))) {\n            fcn.0045a8a0();\n            *(in_RAX + 0xc0) = uStack64;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 1019
    },
    "00434940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00434940(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 2) && (arg1 == 0x1009)) {\n                do {\n                    LOCK();\n                } while (*(in_RAX + 0x90) != 2);\n                *(in_RAX + 0x90) = 0x1009;\n                return 2;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x4349a5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_EBX;\n        *(puVar1 + 0x14) = arg1;\n        *(puVar1 + -8) = 0x4349b8;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_EBX = *(puVar1 + 0x10);\n        arg1._0_4_ = *(puVar1 + 0x14);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 403
    },
    "00434ce0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00434ce0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uchar in_AL;\n    ulong uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x00434ce0:\n    puVar8 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar8 = *0x20 + -0x58;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_AL;\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        *(*0x20 + -0x20) = *(unaff_R14 + 0x30);\n        if (*0x544a34 != 0) {\n            *(*0x20 + -0x60) = 0x434d25;\n            uVar6 = fcn.0042a420();\n            *(*0x20 + -0x28) = uVar6;\n            *(*0x20 + -0x60) = 0x434d34;\n            fcn.00438800();\n        }\n        *(*0x20 + -0x60) = 0x434d45;\n        fcn.00409860();\n        iVar5 = *0x544a40;\n        iVar2 = *0x544a28;\n        if (*0x544a40 != 0) {\n            *0x544a40 = 0;\n            iVar2 = iVar5;\n        }\n        *(*0x20 + -0x60) = 0x434d6b;\n        uVar6 = fcn.0043bf60(*0x544a28, iVar2);\n        cVar4 = *0x4f2798;\n        *(*0x20 + -0x18) = uVar6;\n        *0x4f2788 = 0;\n        if (*0x4f2798 != '\\0') {\n            *0x4f2798 = '\\0';\n            *(*0x20 + -0x60) = 0x434da5;\n            fcn.00409b60(cVar4);\n        }\n        *(*0x20 + -0x60) = 0x434db3;\n        fcn.00409a80();\n        iVar7 = *(*0x20 + -0x18);\n        do {\n            if (iVar7 == 0) {\n                *(*0x20 + -0x60) = 0x434e25;\n                fcn.0045a8a0();\n                iVar7 = **(in_GS_OFFSET + *0x544bc0);\n                *(*0x20 + -0x30) = *(*0x20 + -0x58);\n                if (*(*0x20 + 8) != '\\0') {\n                    *(*0x20 + -0x60) = 0x434e65;\n                    fcn.0044b220(0);\n                }\n                *(*0x20 + -0x60) = 0x434e6a;\n                fcn.00436ba0();\n                iVar2 = *(*(*0x20 + -0x20) + 0xd8);\n                *(*(*0x20 + -0x20) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(iVar7 + 0xb1) != '\\0')) {\n                    *(iVar7 + 0x10) = 0xfffffffffffffade;\n                }\n                return *(*0x20 + -0x30);\n            }\n            iVar3 = *(iVar7 + 0x38);\n            *(*0x20 + -0x10) = *(iVar7 + 8);\n            if (iVar3 == 0) {\n                *(*0x20 + -0x60) = 0x434e18;\n                fcn.00435fe0(0xffffffffffffffff);\n            }\n            else {\n                *(iVar7 + 0x38) = 0;\n                if (*(iVar3 + 0xa8) != 0) goto code_r0x00434ea6;\n                *(iVar3 + 0xa8) = iVar7;\n                *(*0x20 + -0x60) = 0x434e05;\n                fcn.00409b60();\n            }\n            iVar7 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00434eb8;\ncode_r0x00434ea6:\n    *(*0x20 + -0x60) = 0x434eb7;\n    in_AL = fcn.00430040();\ncode_r0x00434eb8:\n    puVar8[8] = in_AL;\n    *(puVar8 + -8) = 0x434ec5;\n    fcn.004568e0();\n    in_AL = puVar8[8];\n    *0x20 = puVar8;\n    goto code_r0x00434ce0;\n}\n",
        "token_count": 1202
    },
    "00435080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x5449e2 == '\\0') {\n        *0x5449e2 = '\\x01';\n        fcn.00435ba0();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00435120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00435120(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    uchar in_AL;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if (iVar2 != 0x4f22c0) {\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar2;\n                *(*0x20 + -0x30) = 0x43515a;\n                fcn.0042d1a0();\n                iVar2 = *(*(*0x20 + -0x18) + 0x50);\n                if (iVar2 != 0) {\n                    *(*0x20 + -0x30) = 0x435174;\n                    fcn.00443040();\n                    if (*0x544c10 == 0) {\n                        iVar2 = *(*0x20 + -0x18);\n                        *(iVar2 + 0x50) = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = 0x4351a5;\n                        iVar2 = fcn.00458ba0(*(*0x20 + -0x18) + 0x50, 0, param_3, param_4);\n                    }\n                }\n                *(*0x20 + -0x30) = 0x4351b5;\n                fcn.00409860(iVar2);\n                iVar2 = *(*0x20 + -0x18);\n                piVar3 = 0x4f15c0;\n                while (iVar5 = *piVar3,  iVar5 != 0) {\n                    if (iVar5 == iVar2) {\n                        iVar5 = *(iVar2 + 0x120);\n                        if (*0x544c10 == 0) {\n                            *piVar3 = iVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x4351f8;\n                            fcn.00458ba0(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(iVar2 + 0xec) = 2;\n                        if (*0x544c10 == 0) {\n                            *(iVar2 + 0x270) = *0x4f2780;\n                            *0x4f2780 = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x43522f;\n                            iVar5 = *0x4f2780;\n                            fcn.00458ba0(iVar2, *0x4f2780, param_3, param_4);\n                            *(*0x20 + -0x30) = 0x43523b;\n                            fcn.00458b80(iVar2, iVar5, param_3, param_4);\n                        }\n                        *(*0x20 + -0x30) = 0x435249;\n                        fcn.00409a80();\n                        iVar2 = *0x544b18;\n                        LOCK();\n                        *0x544b18 = *0x544b18 + *(*(*0x20 + -0x18) + 0x100);\n                        *(*0x20 + -0x30) = 0x435266;\n                        fcn.0043c960(*(*0x20 + -0x18), iVar2);\n                        *(*0x20 + -0x30) = 0x43526b;\n                        fcn.00436860();\n                        *(*0x20 + -0x30) = 0x435279;\n                        fcn.00409860();\n                        *0x4f26e0 = *0x4f26e0 + 1;\n                        *(*0x20 + -0x30) = 0x435285;\n                        fcn.0043cb20();\n                        *(*0x20 + -0x30) = 0x435293;\n                        fcn.00409a80();\n                        *(*0x20 + -0x30) = 0x43529d;\n                        fcn.0042d240();\n                        if (*(*0x20 + 8) != '\\0') {\n                            uVar1 = *(*(*0x20 + -0x18) + 0xec);\n                            *(*(*0x20 + -0x18) + 0xec) = 1;\n                            return uVar1;\n                        }\n                        *(*0x20 + -0x30) = 0x4352d1;\n                        uVar4 = fcn.0042cda0();\n                        return uVar4;\n                    }\n                    piVar3 = iVar5 + 0x120;\n                }\n                *(*0x20 + -0x30) = 0x4352ec;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x4352f1;\n            fcn.0043c960();\n            *(*0x20 + -0x30) = 0x4352f6;\n            fcn.00436860();\n            *(*0x20 + -0x30) = 0x435305;\n            fcn.00409860();\n            *0x4f26e0 = *0x4f26e0 + 1;\n            *(*0x20 + -0x30) = 0x435311;\n            fcn.0043cb20();\n            *(*0x20 + -0x30) = 0x43531f;\n            fcn.00409a80();\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x30) = 0x435336;\n            fcn.00409be0();\n            *(*(*(*0x20 + -0x10) + 0x30) + 0x118) = 0;\n            *(*0x20 + -0x30) = 0x43535b;\n            in_AL = fcn.00430040();\n        }\n        puVar6[8] = in_AL;\n        *(puVar6 + -8) = 0x435365;\n        fcn.004568e0();\n        in_AL = puVar6[8];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "00435380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435380(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    char cVar7;\n    ulong in_RAX;\n    int64_t iVar8;\n    ulong arg1;\n    int64_t iVar9;\n    ulong arg2;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = unaff_R14;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            arg2 = *(*(*0x20 + -0x28) + 0x30);\n            *(*0x20 + -0x38) = arg2;\n            *(*0x20 + -0x10) = arg1;\n            *(*0x20 + -0x68) = 0x4353d9;\n            fcn.00409860();\n            if (*0x4f27b0 == 0) {\n                *0x4f27b0 = *0x544a28 + -1;\n                if (*0x544c10 == 0) {\n                    *0x4f27a8 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x43541c;\n                    fcn.00458a80(arg1, arg2, param_3, param_4);\n                }\n                iVar10 = *0x4f1c78;\n                iVar9 = *0x4f1c70;\n                iVar8 = *(*0x20 + -0x10);\n                for (iVar12 = 0; iVar12 < iVar10; iVar12 = iVar12 + 1) {\n                    iVar5 = *(iVar9 + iVar12 * 8);\n                    if (iVar8 != iVar5) {\n                        puVar2 = iVar5 + 0x2270;\n                        uVar3 = *puVar2;\n                        *puVar2 = 1;\n                        param_3 = uVar3;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x43545b;\n                fcn.0043d600();\n                for (iVar8 = *0x4f26f0; iVar8 != 0; iVar8 = *(iVar8 + 8)) {\n                    LOCK();\n                    if (*(iVar8 + 0x2270) == 1) {\n                        *(iVar8 + 0x2270) = 0;\n                        *(*0x20 + -0x18) = iVar8;\n                        pcVar6 = **(*0x20 + 8);\n                        *(*0x20 + -0x68) = 0x43549a;\n                        (*pcVar6)();\n                        *0x4f27b0 = *0x4f27b0 + -1;\n                        iVar8 = *(*0x20 + -0x18);\n                    }\n                }\n                *(*0x20 + -0x4c) = *0x4f27b0;\n                *(*0x20 + -0x68) = 0x4354c5;\n                fcn.00409a80();\n                pcVar6 = **(*0x20 + 8);\n                *(*0x20 + -0x68) = 0x4354d4;\n                (*pcVar6)();\n                *(*0x20 + -0x20) = *0x4f1c70;\n                *(*0x20 + -0x40) = *0x4f1c78;\n                iVar9 = *0x4f1c70;\n                iVar10 = *0x4f1c78;\n                for (iVar8 = 0; iVar8 < iVar10; iVar8 = iVar8 + 1) {\n                    iVar12 = *(iVar9 + iVar8 * 8);\n                    if (*(iVar12 + 4) == 2) {\n                        if (*(iVar12 + 0x2270) == 1) {\n                            LOCK();\n                            bVar13 = *(iVar12 + 4) == 2;\n                            if (bVar13) {\n                                *(iVar12 + 4) = 0;\n                            }\n                            param_3 = param_3 & 0xffffffffffffff00 | bVar13;\n                        }\n                        else {\n                            param_3 = 0;\n                        }\n                    }\n                    else {\n                        param_3 = 0;\n                    }\n                    if (param_3 != '\\0') {\n                        *(*0x20 + -0x48) = iVar8;\n                        if (*0x4f6bd0 != '\\0') {\n                            *(*0x20 + -0x30) = iVar12;\n                            *(*0x20 + -0x68) = 0x435557;\n                            fcn.0044cae0();\n                            *(*0x20 + -0x68) = 0x435565;\n                            fcn.0044c360();\n                            iVar12 = *(*0x20 + -0x30);\n                        }\n                        *(iVar12 + 0x14) = *(iVar12 + 0x14) + 1;\n                        *(*0x20 + -0x68) = 0x435575;\n                        fcn.00436860();\n                        iVar9 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + -0x40);\n                        iVar8 = *(*0x20 + -0x48);\n                    }\n                }\n                if (0 < *(*0x20 + -0x4c)) {\n                    while( true ) {\n                        *(*0x20 + -0x68) = 0x4355ab;\n                        cVar7 = fcn.00409fc0();\n                        if (cVar7 != '\\0') break;\n                        *(*0x20 + -0x68) = 0x43559a;\n                        fcn.0043d600();\n                    }\n                    *0x4f27b8 = 0;\n                }\n                if (*0x4f27b0 == 0) {\n                    iVar8 = 0;\n                    while( true ) {\n                        if (*0x4f1c78 <= iVar8) {\n                            *(*0x20 + -0x68) = 0x435605;\n                            iVar8 = *0x4f1c78;\n                            fcn.00409860();\n                            if (*0x544c10 == 0) {\n                                *0x4f27a8 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x68) = 0x435629;\n                                fcn.00458b80(0, iVar8, param_3, param_4);\n                            }\n                            *(*0x20 + -0x68) = 0x435637;\n                            fcn.00409a80();\n                            iVar4 = *(*(*0x20 + -0x38) + 0xd8);\n                            *(*(*0x20 + -0x38) + 0xd8) = iVar4 + -1;\n                            if ((iVar4 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        if (*(*(*0x4f1c70 + iVar8 * 8) + 0x2270) != 0) break;\n                        iVar8 = iVar8 + 1;\n                    }\n                    *(*0x20 + -0x68) = 0x43567e;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x68) = 0x43568f;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x68) = 0x4356a5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar11 + 8) = in_RAX;\n        *(puVar11 + -8) = 0x4356b0;\n        fcn.0045b2e0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 2001
    },
    "004356c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.004356c0(void)\n\n{\n    uint32_t *puVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    puVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x2270;\n    if (*puVar1 != 1) {\n        return *puVar1;\n    }\n    *puVar1 = 0;\n    (***0x4f27a8)();\n    fcn.00409860();\n    iVar3 = *0x4f27b0 + -1;\n    bVar4 = *0x4f27b0 == 1;\n    *0x4f27b0 = iVar3;\n    if (bVar4) {\n        fcn.00409b60();\n    }\n    uVar2 = fcn.00409a80();\n    return uVar2;\n}\n",
        "token_count": 267
    },
    "00435780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.00435780(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t *noname_0;\n    int64_t iVar3;\n    int64_t arg1_00;\n    int64_t arg2;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004400a0();\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    arg2 = unaff_R14;\n    iVar4 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0xa0) == 0) {\n        fcn.0043c7e0();\n    }\n    if (*0x4f2780 != 0) {\n        fcn.00409860();\n        iStack32 = *0x4f2780;\n        iVar3 = 0;\n        while (iStack32 != 0) {\n            if (*(iStack32 + 0xec) == 2) {\n                arg1_00 = *(iStack32 + 0x270);\n                if (*0x544c10 == 0) {\n                    *(iStack32 + 0x270) = iVar3;\n                    iVar3 = iStack32;\n                    iStack32 = arg1_00;\n                }\n                else {\n                    fcn.00458a80(arg1_00, arg2, in_R8, in_R9);\n                    iVar3 = iStack32;\n                    iStack32 = arg1_00;\n                }\n            }\n            else {\n                if (*(iStack32 + 0xec) == 0) {\n                    auStack24 = CONCAT88(&iStack32, 0x435a20);\n                    fcn.004567a0();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                }\n                iStack32 = *(iStack32 + 0x270);\n            }\n        }\n        if (*0x544c10 != 0) {\n            fcn.00458a80(0, arg2, in_R8, in_R9);\n            iVar3 = *0x4f2780;\n        }\n        *0x4f2780 = iVar3;\n        fcn.00409a80();\n    }\n    noname_0 = fcn.0040ba20();\n    if (*0x544c10 == 0) {\n        noname_0[0x11] = unaff_RBX;\n    }\n    else {\n        noname_0 = fcn.00458b80(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    fcn.00433bc0();\n    iVar3 = fcn.0043aa00();\n    if (*0x544c10 == 0) {\n        *noname_0 = iVar3;\n    }\n    else {\n        iVar3 = fcn.00458a80(unaff_RBX, arg2, in_R8, in_R9);\n    }\n    if (*0x544c10 == 0) {\n        *(iVar3 + 0x30) = noname_0;\n    }\n    else {\n        fcn.00458b80(noname_0, arg2, in_R8, in_R9);\n    }\n    if (in_RAX == *(*(iVar4 + 0x30) + 0xa0)) {\n        fcn.0043c960();\n    }\n    iVar2 = *(*(iVar4 + 0x30) + 0xd8);\n    *(*(iVar4 + 0x30) + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    fcn.00440200();\n    return noname_0;\n}\n",
        "token_count": 986
    },
    "00435c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435c20(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    ulong uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iStack24 = fcn.00435780(0xffffffffffffffff);\n    iStack16 = fcn.0043aa00();\n    *(iStack16 + 0x40) = 0x458a41;\n    iVar4 = *(iStack16 + 8) + -0x20;\n    *(iStack16 + 0x38) = iVar4;\n    *(iStack16 + 0x60) = 0;\n    *(iStack16 + 0x48) = iStack16;\n    *(iStack16 + 0x78) = *(iStack16 + 0x40);\n    *(iStack16 + 0x70) = iVar4;\n    *(iStack16 + 0x80) = *(iStack16 + 0x38);\n    fcn.00434500(6);\n    iVar4 = iStack24;\n    if (*0x544c10 == 0) {\n        *(iStack16 + 0x30) = iStack24;\n        iVar2 = iStack16;\n    }\n    else {\n        iVar2 = fcn.00458ba0(iStack16 + 0x30, iStack24, param_3, param_4);\n    }\n    if (*0x544c10 == 0) {\n        *(iVar4 + 0x90) = iVar2;\n    }\n    else {\n        iVar2 = fcn.00458a80(iVar4 + 0x90, iVar4, param_3, param_4);\n    }\n    *(iVar4 + 0xe9) = 1;\n    *(iVar4 + 0x23c) = *(iVar4 + 0x23c) + 1;\n    *(iVar4 + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = iVar4;\n    LOCK();\n    iVar4 = *0x4f26a0 + 1;\n    *0x4f26a0 = *0x4f26a0 + 1;\n    *(iVar2 + 0x98) = iVar4;\n    *(iVar2 + 0xbb) = 1;\n    if (*0x4f6bd0 != '\\0') {\n        fcn.0044c5e0();\n        *(iStack16 + 0xd8) = *(iStack16 + 0xd8) + 1;\n        uStack32 = *(iStack16 + 0x98);\n        fcn.0044b220(&uStack32);\n        iVar2 = iStack16;\n    }\n    fcn.00433500(iVar2);\n    iVar1 = *0x4f26e8;\n    LOCK();\n    *0x4f26e8 = *0x4f26e8 + 1;\n    uVar3 = fcn.00435ee0(iVar1);\n    *(iStack24 + 0x128) = uVar3;\n    *0x544a0c = *0x544a0c + 1;\n    *0x544ab8 = iStack24;\n    return;\n}\n",
        "token_count": 810
    },
    "00435ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00435f80)\n\nuint64_t fcn.00435ee0(void)\n\n{\n    bool bVar1;\n    char in_AL;\n    uint64_t uVar2;\n    \n    bVar1 = false;\n    while( true ) {\n        while (*0x544ab8 == 1) {\n            fcn.0045a880();\n        }\n        if ((*0x544ab8 != 0) || (in_AL != '\\0')) break;\n        if (!bVar1) {\n            LOCK();\n            *0x544a10 = *0x544a10 + 1;\n        }\n        fcn.0045a7a0();\n        bVar1 = true;\n    }\n    LOCK();\n    uVar2 = *0x544ab8;\n    *0x544ab8 = *0x544ab8 ^ *0x544ab8 ^ 1;\n    return uVar2;\n}\n",
        "token_count": 207
    },
    "00435fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00435fe0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x30) = 0x43601b;\n            iVar3 = fcn.00435780(arg1);\n            *(iVar3 + 0xa8) = *(*0x20 + 0x10);\n            if (((unaff_R14 == 0) || (arg1 = *(unaff_R14 + 0x30),  arg1 == 0)) ||\n               ((*(*0x20 + -0x10) = iVar3,  *(arg1 + 0x238) == 0 && (*(arg1 + 0xe8) == '\\0')))) {\n                *(*0x20 + -0x30) = 0x436106;\n                fcn.00436180();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x436074;\n            fcn.00409860();\n            if (*0x544d20 != 0) {\n                iVar3 = *(*0x20 + -0x10);\n                *(iVar3 + 0x128) = *0x544d08;\n                *0x544d08 = iVar3;\n                if (*0x544d10 != '\\0') {\n                    *0x544d10 = '\\0';\n                    *(*0x20 + -0x30) = 0x4360bd;\n                    fcn.00409b60();\n                }\n                *(*0x20 + -0x30) = 0x4360cb;\n                fcn.00409a80();\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            unaff_RBX = 0x2a;\n            *(*0x20 + -0x30) = 0x43614b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x436165;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 922
    },
    "00436180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436180(void)\n\n{\n    ulong *in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x5449e8 == '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x40) = 0x436245;\n                fcn.004400a0();\n                *(*0x20 + -0x40) = 0x43624f;\n                fcn.0042cc40();\n                *(*0x20 + -0x40) = 0x43625b;\n                fcn.00440200();\n                return;\n            }\n            *(*0x20 + -0x20) = 0;\n            *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            if (*0x4f1530 != 0) {\n                *(*0x20 + -0x20) = *in_RAX;\n                *(*0x20 + -0x18) = in_RAX + 0xb;\n                *(*0x20 + -0x10) = fcn.004566e0;\n                *(*0x20 + -0x40) = 0x4361ef;\n                fcn.004400a0();\n                *(*0x20 + -0x38) = *0x4f1530;\n                *(*0x20 + -0x30) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x436209;\n                fcn.004586a0();\n                *(*0x20 + -0x40) = 0x436227;\n                fcn.00440200();\n                return;\n            }\n            *(*0x20 + -0x40) = 0x436276;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x436285;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 646
    },
    "004362a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004362a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (*0x544d20 != 0) {\n        iVar2 = *(iVar3 + 0xd8);\n        *(iVar3 + 0xd8) = iVar2 + -1;\n        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        return;\n    }\n    *0x544d20 = 1;\n    fcn.00435fe0(0xffffffffffffffff);\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 346
    },
    "00436480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436480(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            if (*(iVar1 + 0xd8) == 0) {\n                if (*(iVar1 + 0xa0) == 0) {\n                    if (*(iVar1 + 0xe4) == '\\0') {\n                        *(*0x20 + -0x10) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x4364d9;\n                        fcn.00409860();\n                        *(*0x20 + -0x30) = 0x4364e7;\n                        fcn.0043e180();\n                        *(*0x20 + -0x30) = 0x4364f5;\n                        fcn.00409a80();\n                        *(*0x20 + -0x18) = unaff_R14;\n                        *(*0x20 + -0x30) = 0x43650c;\n                        fcn.00409be0();\n                        *(*(*(*0x20 + -0x18) + 0x30) + 0x118) = 0;\n                        *(*0x20 + -0x30) = 0x436535;\n                        fcn.0043c7e0();\n                        *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x436565;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x30) = 0x436576;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x436587;\n            fcn.00430040();\n        }\n        *(puVar2 + -8) = 0x43658d;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 566
    },
    "004365c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004365c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    ulong uVar5;\n    char cVar6;\n    uchar unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_BL;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x28) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x50) = 0x436605;\n            fcn.00409860();\n            iVar4 = *(*0x20 + 8);\n            if (iVar4 == 0) {\n                if (*(*0x20 + 0x10) == '\\0') {\n                    *(*0x20 + -0x50) = 0x43662f;\n                    iVar4 = fcn.0043e5e0();\n                    if (iVar4 == 0) {\n                        *(*0x20 + -0x50) = 0x436745;\n                        fcn.00409a80();\n                        iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                        *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                        if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                        }\n                        return;\n                    }\n                    goto code_r0x00436639;\n                }\n            }\n            else {\ncode_r0x00436639:\n                iVar3 = *0x4f26c0;\n                if (*0x4f26c0 != 0) {\n                    *0x4f26c0 = *(*0x4f26c0 + 0x128);\n                    *0x4f26c8 = *0x4f26c8 + -1;\n                }\n                *(*0x20 + -0x20) = iVar4;\n                if (iVar3 == 0) {\n                    *(*0x20 + -0x50) = 0x43666c;\n                    uVar5 = fcn.00433b60();\n                    *(*0x20 + -0x30) = uVar5;\n                    uVar5 = 0;\n                    if (*(*0x20 + 0x10) != '\\0') {\n                        uVar5 = 0x47cbc0;\n                    }\n                    *(*0x20 + -0x18) = uVar5;\n                    *(*0x20 + -0x50) = 0x43669f;\n                    fcn.00409a80();\n                    *(*0x20 + -0x50) = 0x4366b3;\n                    fcn.00435fe0(*(*0x20 + -0x30));\n                    iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                    *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return;\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x50) = 0x4366fc;\n                fcn.00409a80();\n                iVar4 = *(*0x20 + -0x10);\n                if (*(iVar4 + 0xe4) == '\\0') {\n                    if (*(iVar4 + 0xa8) == 0) {\n                        cVar6 = *(*0x20 + 0x10);\n                        if (cVar6 == '\\0') {\n                            cVar6 = '\\0';\ncode_r0x0043677b:\n                            *(iVar4 + 0xe4) = cVar6;\n                            *(iVar4 + 0xa8) = *(*0x20 + -0x20);\n                            *(*0x20 + -0x50) = 0x436798;\n                            fcn.00409b60();\n                            iVar2 = *(*(*0x20 + -0x28) + 0xd8);\n                            *(*(*0x20 + -0x28) + 0xd8) = iVar2 + -1;\n                            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                            }\n                            return;\n                        }\n                        iVar3 = *(*0x20 + -0x20);\n                        do {\n                        } while (*(iVar3 + 0x194) != *(iVar3 + 0x194));\n                        if ((*(iVar3 + 0x194) == *(iVar3 + 400)) && (*(iVar3 + 0x998) == 0)) goto code_r0x0043677b;\n                        *(*0x20 + -0x50) = 0x436807;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x50) = 0x436818;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x50) = 0x436829;\n                fcn.00430040();\n            }\n            unaff_BL = 0x24;\n            *(*0x20 + -0x50) = 0x43683a;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x436849;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1501
    },
    "00436860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436860(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (uVar1 = *0x4f2700,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    do {\n    } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n    if (((*(in_RAX + 0x194) != *(in_RAX + 400)) || (*(in_RAX + 0x998) != 0)) || (*0x4f2718 != 0)) {\n        fcn.004365c0();\n        return;\n    }\n    if ((*0x4f6bd0 != '\\0') || (*0x4f6bd1 != '\\0')) {\n        iVar2 = *0x506c58;\n        if ((*0x4f6c18 == 0) && (*0x4f6bd1 == '\\0')) {\n            iVar2 = 0;\n        }\n        if (iVar2 != 0) {\n            fcn.004365c0();\n            return;\n        }\n    }\n    if (*0x544a1c != 0) {\n        if ((*(in_RAX + 0x1238) == 0) || ((*(*(in_RAX + 0x1238) + 0x10) == 0 && (*(*(in_RAX + 0x1240) + 0x10) == 0)))) {\n            if (*0x4f20c0 == 0) {\n                if (*0x4f2148 < *0x4f214c) {\n                    bVar5 = true;\n                }\n                else {\n                    bVar5 = false;\n                }\n            }\n            else {\n                bVar5 = true;\n            }\n        }\n        else {\n            bVar5 = true;\n        }\n        if (bVar5) {\n            fcn.004365c0();\n            return;\n        }\n    }\n    if ((*0x4f26fc + *0x4f26f8 == 0) && (LOCK(),  *0x4f26fc == 0)) {\n        *0x4f26fc = 1;\n        *0x4f2700 = 0;\n        fcn.004365c0(in_RAX, uVar1);\n        return;\n    }\n    fcn.00409860();\n    if (*0x4f2788 != '\\0') {\n        *(in_RAX + 4) = 3;\n        iVar3 = *0x4f278c + -1;\n        bVar5 = *0x4f278c == 1;\n        *0x4f278c = iVar3;\n        if (bVar5) {\n            fcn.00409b60();\n        }\n        fcn.00409a80();\n        return;\n    }\n    if (*(in_RAX + 0x2270) == 0) {\n        bVar5 = false;\n    }\n    else {\n        LOCK();\n        bVar5 = *(in_RAX + 0x2270) == 1;\n        if (bVar5) {\n            *(in_RAX + 0x2270) = 0;\n        }\n    }\n    if (bVar5) {\n        (***0x4f27a8)();\n        iVar3 = *0x4f27b0 + -1;\n        bVar5 = *0x4f27b0 == 1;\n        *0x4f27b0 = iVar3;\n        if (bVar5) {\n            fcn.00409b60();\n        }\n    }\n    if (*0x4f2718 == 0) {\n        if ((*0x4f26f8 == *0x544a28 + -1) && (*0x4f26a8 != 0)) {\n            fcn.00409a80();\n            fcn.004365c0();\n            return;\n        }\n        iVar2 = *(in_RAX + 0x1200);\n        iVar4 = *(in_RAX + 0x1208);\n        if ((iVar2 != 0) && ((iVar4 == 0 || (iVar2 <= iVar4)))) {\n            iVar4 = iVar2;\n        }\n        fcn.0043e440();\n        fcn.00409a80();\n        if (iVar4 != 0) {\n            fcn.00438720();\n        }\n        return;\n    }\n    fcn.00409a80();\n    fcn.004365c0();\n    return;\n}\n",
        "token_count": 1064
    },
    "00436ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00436bd3)\n\nvoid fcn.00436ba0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f26fc != 0) {\n                return;\n            }\n            LOCK();\n            *0x4f26fc = 1;\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            *(*0x20 + -0x18) = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x30) = 0x436c09;\n            fcn.00409860();\n            *(*0x20 + -0x30) = 0x436c10;\n            iVar3 = fcn.0043e780();\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x30) = 0x436c87;\n                fcn.00409a80();\n                *(*0x20 + -0x30) = 0x436c96;\n                fcn.004365c0();\n                iVar2 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            LOCK();\n            if (-1 < *0x4f26fc + -1) {\n                *(*0x20 + -0x30) = 0x436c3d;\n                *0x4f26fc = *0x4f26fc + -1;\n                fcn.00409a80();\n                iVar2 = *(*(*0x20 + -0x18) + 0xd8);\n                *(*(*0x20 + -0x18) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x30) = 0x436cdd;\n            *0x4f26fc = *0x4f26fc + -1;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x436ce5;\n        fcn.004568e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 758
    },
    "00436d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436d00(void)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar2 = *(unaff_R14 + 0x30);\n            if ((*(iVar2 + 0x130) != 0) && (*(*(iVar2 + 0x130) + 0xe8) == iVar2)) {\n                *(*0x20 + -0x18) = unaff_R14;\n                if (*(iVar2 + 0xa0) != 0) {\n                    *(*0x20 + -0x50) = 0x436d50;\n                    fcn.0043c960();\n                    *(*0x20 + -0x50) = 0x436d55;\n                    fcn.00436860();\n                }\n                *(*0x20 + -0x50) = 0x436d5f;\n                fcn.0043cac0();\n                *(*0x20 + -0x50) = 0x436d65;\n                fcn.004350c0();\n                uVar1 = *(*(*(*(*0x20 + -0x18) + 0x30) + 0x130) + 0x90);\n                if ((uVar1 & 0xffffefff) == 1) {\n                    *(*0x20 + -0x50) = 0x436d96;\n                    fcn.0043c7e0();\n                    *(*(*(*0x20 + -0x18) + 0x30) + 0xa8) = 0;\n                    return;\n                }\n                *(*0x20 + -0x2c) = uVar1;\n                *(*0x20 + -0x50) = 0x436dbd;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x436dce;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436dd9;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x436dea;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436def;\n                fcn.00431a00();\n                iVar2 = *(*(*(*0x20 + -0x18) + 0x30) + 0x130);\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = unaff_R14;\n                *(*0x20 + -0x30) = *(iVar2 + 0x90);\n                *(*0x20 + -0x28) = *(iVar2 + 0x98);\n                *(*0x20 + -0x50) = 0x436e25;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x436e36;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436e45;\n                fcn.00432200();\n                *(*0x20 + -0x50) = 0x436e56;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436e65;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x436e76;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436e85;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x436e8a;\n                fcn.00431be0();\n                *(*0x20 + -0x50) = 0x436e8f;\n                fcn.00431a00();\n                *(*0x20 + -0x34) = *(*(*0x20 + -0x20) + 0x90);\n                *(*0x20 + -0x28) = *(*(*0x20 + -0x20) + 0x98);\n                *(*0x20 + -0x50) = 0x436eaf;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x436ec5;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436ecf;\n                fcn.00432200();\n                *(*0x20 + -0x50) = 0x436ee5;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436eef;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x436f05;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x436f10;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x436f15;\n                fcn.00431be0();\n                *(*0x20 + -0x50) = 0x436f1a;\n                fcn.00431a00();\n                *(*0x20 + -0x50) = 0x436f2b;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x50) = 0x436f3c;\n            fcn.00430040();\n        }\n        *(puVar3 + -8) = 0x436f45;\n        fcn.004568e0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1375
    },
    "00436f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00436f60(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0xe8);\n            if (*(unaff_R14 + 0x30) != iVar1) {\n                if (*(iVar1 + 0xa8) == 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x28) = 0x436f9f;\n                    fcn.0043cac0();\n                    *(*0x20 + -0x28) = 0x436fa5;\n                    uVar2 = fcn.0043c960();\n                    *(*(*0x20 + -0x10) + 0xa8) = uVar2;\n                    *(*0x20 + -0x28) = 0x436fbe;\n                    fcn.00409b60();\n                    *(*0x20 + -0x28) = 0x436fc5;\n                    fcn.00436480();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x436fe5;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x28) = 0x436ff6;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x437005;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 488
    },
    "00437020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437020(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f2788 != '\\0') {\n                if (*(*(unaff_R14 + 0x30) + 0xe4) == '\\0') {\ncode_r0x00437072:\n                    *(*0x20 + -0x28) = 0x437077;\n                    uVar2 = fcn.0043c960();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x43708a;\n                    fcn.00409860();\n                    *(*(*0x20 + -0x10) + 4) = 3;\n                    iVar1 = *0x4f278c + -1;\n                    bVar5 = *0x4f278c == 1;\n                    *0x4f278c = iVar1;\n                    if (bVar5) {\n                        *(*0x20 + -0x28) = 0x4370b6;\n                        fcn.00409b60();\n                    }\n                    *(*0x20 + -0x28) = 0x4370c5;\n                    fcn.00409a80();\n                    *(*0x20 + -0x28) = 0x4370ca;\n                    fcn.00436480();\n                    return;\n                }\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                iVar1 = *0x4f26fc + -1;\n                iVar3 = *0x4f26fc + -1;\n                *0x4f26fc = iVar1;\n                if (-1 < iVar3) goto code_r0x00437072;\n                *(*0x20 + -0x28) = 0x4370e5;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x28) = 0x4370f6;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x4370fc;\n        fcn.004568e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 627
    },
    "00437120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00437120(ulong noname_0, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int64_t arg1;\n    int64_t *in_RAX;\n    int64_t *piVar2;\n    int64_t iVar3;\n    char unaff_BL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    arg1 = *(unaff_R14 + 0x30);\n    if (*0x4ef244 != '\\0') {\n        fcn.004281c0();\n    }\n    iVar3 = arg1;\n    if (*0x544c10 == 0) {\n        *(arg1 + 0x90) = in_RAX;\n        piVar2 = in_RAX;\n    }\n    else {\n        piVar2 = fcn.00458a80(arg1, arg1 + 0x90, arg3, arg4);\n    }\n    if (*0x544c10 == 0) {\n        piVar2[6] = iVar3;\n    }\n    else {\n        fcn.00458b80(iVar3, piVar2 + 6, arg3, arg4);\n    }\n    fcn.00434500(2);\n    in_RAX[0x15] = 0;\n    *(in_RAX + 0xb1) = 0;\n    in_RAX[2] = *in_RAX + 0x13a0;\n    if (unaff_BL == '\\0') {\n        piVar1 = *(arg1 + 0xa0) + 0x10;\n        *piVar1 = *piVar1 + 1;\n    }\n    if (*(arg1 + 0xe0) != *0x4f27c0) {\n        fcn.0042d9c0();\n    }\n    if (*0x4f6bd0 != '\\0') {\n        if ((in_RAX[0xe] != 0) && (*(in_RAX + 0xbb) != '\\0')) {\n            fcn.0044ca20();\n        }\n        fcn.0044c6c0();\n    }\n    fcn.00456700();\n    return;\n}\n",
        "token_count": 529
    },
    "004372a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043760f)\n// WARNING: Removing unreachable block (ram,0x00437614)\n\nint64_t fcn.004372a0(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    ulong noname_2;\n    char cVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    uint64_t uVar9;\n    uint64_t noname_1;\n    int32_t iVar10;\n    int64_t unaff_R14;\n    bool bVar11;\n    int64_t iStack256;\n    int64_t iStack128;\n    ulong uStack120;\n    uint64_t uStack112;\n    ulong uStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t iStack80;\n    ulong uStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (&iStack128 < *(unaff_R14 + 0x10) || &iStack128 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iStack80 = *(unaff_R14 + 0x30);\ncode_r0x004372d2:\n    while (uVar9 = *(iStack80 + 0xa0),  *0x4f2788 != '\\0') {\n        fcn.00437020();\n    }\n    uStack16 = uVar9;\n    if (*(uVar9 + 0x2270) != 0) {\n        fcn.004356c0();\n    }\n    uVar4 = fcn.00438d40();\n    if (((*0x4f6bd0 != '\\0') || (*0x4f6bd1 != '\\0')) && (iStack32 = fcn.0044b060(),  iStack32 != 0)) {\n        fcn.00434500(1);\n        fcn.0044c900();\n        return iStack32;\n    }\n    if ((*0x544a1c != 0) && (iVar5 = fcn.0041b100(uVar4),  iVar5 != 0)) {\n        return iVar5;\n    }\n    if ((*(uStack16 + 0x10) * -0x3ef368eb < 0x4325c54) && (0 < *0x4f2718)) {\n        fcn.00409860();\n        iStack40 = fcn.0043e1e0();\n        fcn.00409a80();\n        if (iStack40 != 0) {\n            return iStack40;\n        }\n    }\n    if ((*0x544a14 & 0xc) == 0xc) {\n        LOCK();\n        if (*0x544a14 == 0xd) {\n            *0x544a14 = 1;\n            iVar5 = *0x4f15f8;\n        }\n        else {\n            iVar5 = 0;\n        }\n        if (iVar5 != 0) {\n            fcn.00433da0(1);\n        }\n    }\n    uVar9 = 1;\n    iVar5 = **0x4ef008;\n    if (iVar5 != 0) {\n        fcn.004586a0();\n        iStack256 = iVar5;\n    }\n    iVar5 = fcn.0043ec00();\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    if (*0x4f2718 != 0) {\n        fcn.00409860();\n        iStack48 = fcn.0043e1e0();\n        fcn.00409a80();\n        if (iStack48 != 0) {\n            return iStack48;\n        }\n    }\n    if (*0x544a34 == 0) {\n        bVar11 = false;\n    }\n    else if (*0x544a38 == 0) {\n        bVar11 = false;\n    }\n    else {\n        bVar11 = *0x4f26a8 != 0;\n    }\n    if ((bVar11) && (iVar5 = fcn.0042a420(),  iVar5 != 0)) {\n        uStack16 = iVar5;\n        fcn.00438800();\n        fcn.00434500(1);\n        if (*0x4f6bd0 != '\\0') {\n            fcn.0044c900();\n        }\n        return uStack16;\n    }\n    if (*(iStack80 + 0xe4) == '\\0') {\n        uVar9 = *0x4f26f8;\n        bVar11 = *0x4f26fc * 2 < *0x544a28 - *0x4f26f8;\n    }\n    else {\n        bVar11 = true;\n    }\n    if (bVar11) goto code_r0x004375a5;\n    uVar9 = 0;\n    goto code_r0x0043761e;\ncode_r0x004375a5:\n    if (*(iStack80 + 0xe4) == '\\0') {\n        *(iStack80 + 0xe4) = 1;\n        LOCK();\n        *0x4f26fc = *0x4f26fc + 1;\n        *0x4f2700 = 0;\n    }\n    iVar5 = fcn.00437fc0();\n    if (iVar5 != 0) {\n        return iVar5;\n    }\n    if (!bVar11) {\n        if (uVar9 == 0) {\n            uVar9 = 0;\n        }\ncode_r0x0043761e:\n        if (*0x544a1c == 0) {\n            cVar3 = '\\0';\n        }\n        else {\n            if ((*(uStack16 + 0x1238) == 0) ||\n               ((*(*(uStack16 + 0x1238) + 0x10) == 0 && (*(*(uStack16 + 0x1240) + 0x10) == 0)))) {\n                if (*0x4f20c0 == 0) {\n                    if (*0x4f2148 < *0x4f214c) {\n                        bVar11 = true;\n                    }\n                    else {\n                        bVar11 = false;\n                    }\n                }\n                else {\n                    bVar11 = true;\n                }\n            }\n            else {\n                bVar11 = true;\n            }\n            if (bVar11) {\n                cVar3 = fcn.0041bb20();\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        noname_1 = uStack16;\n        if (cVar3 == '\\0') goto code_r0x004376cd;\n        while( true ) {\n            if (*0x544ae8 == 0) {\n                piVar8 = NULL;\n            }\n            else {\n                piVar8 = (*0x544ae8 >> 0x13) << 3;\n                *0x544ae8 = *piVar8;\n                LOCK();\n            }\n            if (piVar8 != NULL) {\n                *(noname_1 + 0x1228) = 3;\n                uStack16 = piVar8[2];\n                fcn.00434500(1);\n                if (*0x4f6bd0 != '\\0') {\n                    fcn.0044c900();\n                }\n                return uStack16;\n            }\n            fcn.0041bc00();\ncode_r0x004376cd:\n            noname_2 = *0x4f1d40;\n            uVar4 = *0x4f1d00;\n            uStack24 = *0x4f1c70;\n            iStack128 = *0x4f1c78;\n            uStack120 = *0x4f1c80;\n            uStack72 = *0x4f1cf0;\n            uStack104 = *0x4f1d30;\n            fcn.00409860();\n            if ((*0x4f2788 != '\\0') || (*(uStack16 + 0x2270) != 0)) {\n                fcn.00409a80();\n                goto code_r0x004372d2;\n            }\n            if (*0x4f2718 != 0) {\n                iStack56 = fcn.0043e1e0();\n                fcn.00409a80();\n                return iStack56;\n            }\n            if (*(iStack80 + 0xe4) == '\\0') {\n                noname_1 = *0x4f2700 & 0xffffff00 | *0x4f2700 == 1;\n            }\n            else {\n                noname_1 = 0;\n            }\n            if (noname_1 != '\\0') break;\n            uVar6 = fcn.0043c960();\n            if (uVar6 == uStack16) {\n                fcn.0043e440();\n                fcn.00409a80();\n                iStack64 = iStack128;\n                uVar1 = *(iStack80 + 0xe4);\n                noname_1 = uVar1;\n                uVar6 = uVar9;\n                if (uVar1 == 0) {\ncode_r0x0043793b:\n                    iVar5 = *0x4f26a8;\n                    noname_1 = uVar1;\n                    if (*0x544a34 == 0) {\n                        bVar11 = false;\n                    }\n                    else if ((*0x544a38 == 0) && (uVar6 == 0)) {\n                        bVar11 = false;\n                    }\n                    else {\n                        *0x4f26a8 = 0;\n                        bVar11 = iVar5 != 0;\n                    }\n                    if (!bVar11) {\n                        if ((uVar6 != 0 && *0x544a34 != 0) && ((*0x4f26b0 == 0 || (uVar6 < *0x4f26b0)))) {\n                            fcn.0042a300();\n                        }\ncode_r0x00437d64:\n                        fcn.00436480();\n                        goto code_r0x004372d2;\n                    }\n                    *0x4f26b0 = uVar6;\n                    if (*(iStack80 + 0xa0) == 0) {\n                        if (*(iStack80 + 0xe4) == '\\0') {\n                            uStack112 = uVar6;\n                            fcn.0045a8a0();\n                            iVar7 = fcn.0042a420();\n                            iVar5 = *0x4f26a8;\n                            *0x4f26b0 = 0;\n                            *0x4f26a8 = iStack256;\n                            if ((*0x544ac0 == 0) || (iVar7 != 0)) {\n                                fcn.00409860(iVar5);\n                                iStack96 = fcn.0043e5e0();\n                                fcn.00409a80();\n                                if (iStack96 == 0) {\n                                    fcn.00438800();\n                                    goto code_r0x00437d64;\n                                }\n                                fcn.0043c7e0();\n                                if (iVar7 != 0) {\n                                    uStack16 = iVar7;\n                                    fcn.00438800();\n                                    fcn.00434500(1);\n                                    if (*0x4f6bd0 != '\\0') {\n                                        fcn.0044c900();\n                                    }\n                                    return uStack16;\n                                }\n                                if (uVar1 != 0) {\n                                    *(iStack80 + 0xe4) = 1;\n                                    LOCK();\n                                    *0x4f26fc = *0x4f26fc + 1;\n                                    *0x4f2700 = 0;\n                                }\n                            }\n                            else {\n                                fcn.00436480();\n                            }\n                            goto code_r0x004372d2;\n                        }\n                        fcn.00430040();\n                    }\n                    fcn.00430040();\n                }\n                else {\n                    *(iStack80 + 0xe4) = 0;\n                    LOCK();\n                    iVar2 = *0x4f26fc + -1;\n                    iVar10 = *0x4f26fc + -1;\n                    *0x4f26fc = iVar2;\n                    if (-1 < iVar10) {\n                        iVar5 = fcn.00438340(uStack120, noname_1, uVar4);\n                        if (iVar5 == 0) {\n                            iStack88 = fcn.00438540();\n                            if (iStack88 != 0) {\n                                fcn.0043c7e0();\n                                *(iStack80 + 0xe4) = 1;\n                                LOCK();\n                                *0x4f26fc = *0x4f26fc + 1;\n                                *0x4f2700 = 0;\n                                *(iStack88 + 0x1228) = 3;\n                                fcn.00434500(1);\n                                if (*0x4f6bd0 != '\\0') {\n                                    fcn.0044c900();\n                                }\n                                return iStack64;\n                            }\n                            uVar6 = fcn.004384a0(uStack120, noname_1, noname_2, uVar9);\n                            goto code_r0x0043793b;\n                        }\n                        fcn.0043c7e0();\n                        *(iStack80 + 0xe4) = 1;\n                        LOCK();\n                        *0x4f26fc = *0x4f26fc + 1;\n                        *0x4f2700 = 0;\n                        goto code_r0x004372d2;\n                    }\n                }\n                fcn.00430040();\n            }\n            fcn.00430040();\n        }\n        *(iStack80 + 0xe4) = 1;\n        LOCK();\n        *0x4f26fc = *0x4f26fc + 1;\n        *0x4f2700 = 0;\n        fcn.00409a80();\n    }\n    goto code_r0x004372d2;\n}\n",
        "token_count": 3169
    },
    "00438540": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00438540(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((*0x544a1c == 0) || (*0x5453d8 >> 0x20 <= *0x5453d8)) {\n        return 0;\n    }\n    if (*0x4f20c0 == 0) {\n        if (*0x4f2148 < *0x4f214c) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n    }\n    else {\n        bVar1 = true;\n    }\n    if (!bVar1) {\n        return 0;\n    }\n    fcn.00409860();\n    iVar3 = fcn.0043e780();\n    if (iVar3 == 0) {\n        fcn.00409a80();\n        return 0;\n    }\n    if ((*0x544a1c != 0) && (cVar2 = fcn.0041bb20(),  cVar2 != '\\0')) {\n        if (*0x544ae8 == 0) {\n            piVar4 = NULL;\n        }\n        else {\n            piVar4 = (*0x544ae8 >> 0x13) << 3;\n            *0x544ae8 = *piVar4;\n            LOCK();\n        }\n        if (piVar4 != NULL) {\n            fcn.00409a80();\n            return iVar3;\n        }\n        fcn.0043e440();\n        fcn.00409a80();\n        fcn.0041bc00();\n        return 0;\n    }\n    fcn.0043e440();\n    fcn.00409a80();\n    return 0;\n}\n",
        "token_count": 455
    },
    "00438780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438780(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xe4) != '\\0') {\n                *(*(unaff_R14 + 0x30) + 0xe4) = 0;\n                LOCK();\n                if (-1 < *0x4f26fc + -1) {\n                    *(*0x20 + -0x20) = 0x4387c9;\n                    *0x4f26fc = *0x4f26fc + -1;\n                    fcn.00436ba0();\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4387e5;\n                *0x4f26fc = *0x4f26fc + -1;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x20) = 0x4387f6;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x4387fc;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 374
    },
    "00438800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * fcn.00438800(void)\n\n{\n    int64_t *in_RAX;\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    int64_t iStack64;\n    uchar auStack48 [40];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar2 = *in_RAX;\n    if (iVar2 == 0) {\n        return in_RAX;\n    }\n    if (*0x4f6bd0 != '\\0') {\n        for (; iVar2 != 0; iVar2 = *(iVar2 + 0xa0)) {\n            fcn.0044c900();\n        }\n    }\n    arg1 = 0;\n    iStack64 = *in_RAX;\n    iVar2 = iStack64;\n    iVar4 = 0;\n    while (iVar3 = iVar2,  iVar3 != 0) {\n        fcn.00434500(1);\n        arg1 = arg1 + 1;\n        iVar4 = iVar3;\n        iVar2 = *(iVar3 + 0xa0);\n    }\n    *in_RAX = 0;\n    piVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (piVar1 == NULL) {\n        fcn.00409860();\n        iVar2 = *0x4f2708;\n        iVar3 = *0x4f2710;\n        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  iVar2 = iStack64,  iVar3 = iVar4,  *0x4f2710 != 0)) {\n            *(*0x4f2710 + 0xa0) = iStack64;\n            iVar2 = *0x4f2708;\n        }\n        *0x4f2710 = iVar3;\n        *0x4f2708 = iVar2;\n        *0x4f2718 = *0x4f2718 + arg1;\n        fcn.00409a80();\n        piVar1 = (**0x47cb50)(*0x47cb50, 0x47cb50);\n        return piVar1;\n    }\n    iVar4 = *0x4f26f8;\n    iVar2 = 0;\n    auStack48._0_16_ = in_XMM15;\n    while( true ) {\n        iVar3 = iStack64;\n        if ((iVar4 <= iVar2) || (iStack64 == 0)) break;\n        if (iStack64 != 0) {\n            iStack64 = *(iStack64 + 0xa0);\n        }\n        *(iVar3 + 0xa0) = 0;\n        if (auStack48._8_8_ == 0) {\n            auStack48._0_8_ = iVar3;\n        }\n        else {\n            *(auStack48._8_8_ + 0xa0) = iVar3;\n        }\n        auStack48._0_16_ = CONCAT88(iVar3, auStack48._0_8_);\n        iVar2 = iVar2 + 1;\n    }\n    if (0 < iVar2) {\n        fcn.00409860();\n        if (auStack48._8_8_ != 0) {\n            *(auStack48._8_8_ + 0xa0) = 0;\n            if (*0x4f2710 == 0) {\n                *0x4f2708 = auStack48._0_8_;\n            }\n            else {\n                *(*0x4f2710 + 0xa0) = auStack48._0_8_;\n            }\n            *0x4f2710 = auStack48._8_8_;\n        }\n        *0x4f2718 = *0x4f2718 + iVar2;\n        fcn.00409a80();\n        (**0x47cb50)(*0x47cb50, 0x47cb50);\n        arg1 = arg1 - iVar2;\n    }\n    if (iStack64 != 0) {\n        piVar1 = fcn.0043eac0(arg1);\n    }\n    return piVar1;\n}\n",
        "token_count": 998
    },
    "00438ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00438ae0(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    uint8_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = *(unaff_R14 + 0x30);\n            if (*(uVar4 + 0xd8) == 0) {\n                *(*0x20 + -0x18) = uVar4;\n                if (*(uVar4 + 0x130) != 0) {\n                    *(*0x20 + -0x38) = 0x438b1d;\n                    fcn.00436d00();\n                    noname_0 = *(*(*0x20 + -0x18) + 0x130);\n                    unaff_RBX = 0;\n                    *(*0x20 + -0x38) = 0x438b33;\n                    fcn.00437120(noname_0, param_2, param_3, param_4);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n                if (*(uVar4 + 0xe8) == '\\0') {\n                    while( true ) {\n                        param_2 = *(uVar4 + 0xa0);\n                        *(param_2 + 0x22c0) = 0;\n                        if ((*(uVar4 + 0xe4) != '\\0') &&\n                           ((*(param_2 + 0x998) != 0 || (*(param_2 + 0x194) != *(param_2 + 400))))) break;\n                        *(*0x20 + -0x38) = 0x438b91;\n                        iVar3 = fcn.004372a0();\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x19) = unaff_RBX;\n                        *(*0x20 + -0x1a) = uVar4;\n                        noname_1 = *(*0x20 + -0x18);\n                        if (*(noname_1 + 0xe4) != '\\0') {\n                            *(*0x20 + -0x38) = 0x438bb1;\n                            fcn.00438780();\n                            iVar3 = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + -0x19);\n                        }\n                        if (*0x4f2720 == '\\0') {\n                            uVar1 = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x438bdc;\n                            uVar1 = fcn.004508a0();\n                            uVar1 = uVar1 ^ 1;\n                            uVar4 = *(*0x20 + -0x1a);\n                            noname_1 = *(*0x20 + -0x18);\n                            unaff_RBX = *(*0x20 + -0x19);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        if (uVar1 == 0) {\ncode_r0x00438cb1:\n                            if (uVar4 != '\\0') {\n                                *(*0x20 + -0x38) = 0x438cba;\n                                fcn.00436ba0();\n                                iVar3 = *(*0x20 + -0x10);\n                                noname_1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + -0x19);\n                            }\n                            if (*(iVar3 + 0xe8) == 0) {\n                                *(*0x20 + -0x38) = 0x438cdc;\n                                fcn.00437120(uVar4, noname_1, param_3, param_4);\n                                return;\n                            }\n                            *(*0x20 + -0x38) = 0x438b4c;\n                            fcn.00436f60();\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            *(*0x20 + -0x38) = 0x438c0c;\n                            fcn.00409860();\n                            if (*0x4f2720 == '\\0') {\n                                cVar2 = '\\x01';\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x438c2b;\n                                cVar2 = fcn.004508a0();\n                            }\n                            if (cVar2 != '\\0') {\n                                *(*0x20 + -0x38) = 0x438c9d;\n                                fcn.00409a80();\n                                iVar3 = *(*0x20 + -0x10);\n                                uVar4 = *(*0x20 + -0x1a);\n                                noname_1 = *(*0x20 + -0x18);\n                                unaff_RBX = *(*0x20 + -0x19);\n                                goto code_r0x00438cb1;\n                            }\n                            unaff_RBX = *(*0x20 + -0x10);\n                            *(unaff_RBX + 0xa0) = 0;\n                            uVar4 = unaff_RBX;\n                            if (*0x4f2730 != 0) {\n                                *(*0x4f2730 + 0xa0) = unaff_RBX;\n                                uVar4 = *0x4f2728;\n                            }\n                            *0x4f2728 = uVar4;\n                            *0x4f2738 = *0x4f2738 + 1;\n                            *(*0x20 + -0x38) = 0x438c85;\n                            *0x4f2730 = unaff_RBX;\n                            fcn.00409a80();\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                    *(*0x20 + -0x38) = 0x438cf7;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x38) = 0x438d08;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x38) = 0x438d19;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x438d1f;\n        fcn.004568e0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1594
    },
    "00438d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00438d40(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iStack64;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = *(in_RAX + 0x1200);\n    iVar2 = *(in_RAX + 0x1208);\n    if ((iVar1 != 0) && ((iVar2 == 0 || (iVar1 <= iVar2)))) {\n        iVar2 = iVar1;\n    }\n    if (iVar2 == 0) {\n        return unaff_RBX;\n    }\n    if (unaff_RBX == 0) {\n        fcn.0045a8a0();\n        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n        unaff_RBX = iStack64;\n    }\n    if ((unaff_RBX < iVar2) &&\n       ((in_RAX != *(*(unaff_R14 + 0x30) + 0xa0) || (*(in_RAX + 0x229c) <= *(in_RAX + 0x2298) >> 2)))) {\n        return unaff_RBX;\n    }\n    fcn.00409860();\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.00449f00();\n        do {\n            if (*(in_RAX + 0x2288) == 0) break;\n            iVar1 = fcn.0044a2e0();\n        } while (iVar1 == 0);\n    }\n    if ((in_RAX == *(*(unaff_R14 + 0x30) + 0xa0)) && (*(in_RAX + 0x2288) >> 2 < *(in_RAX + 0x229c))) {\n        fcn.0044a700();\n    }\n    fcn.00409a80();\n    return unaff_RBX;\n}\n",
        "token_count": 495
    },
    "004390e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004390e0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                *(*0x20 + -0x38) = 0x439125;\n                fcn.00434500(1);\n                *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                *(*0x20 + -0x38) = 0x439154;\n                fcn.00409860();\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0xa0) = 0;\n                iVar2 = iVar1;\n                if (*0x4f2710 != 0) {\n                    *(*0x4f2710 + 0xa0) = iVar1;\n                    iVar2 = *0x4f2708;\n                }\n                *0x4f2708 = iVar2;\n                *0x4f2718 = *0x4f2718 + 1;\n                *(*0x20 + -0x38) = 0x4391a5;\n                *0x4f2710 = iVar1;\n                fcn.00409a80();\n                *(*0x20 + -0x38) = 0x4391aa;\n                fcn.00438ae0();\n                return;\n            }\n            *(*0x20 + -0x10) = unaff_R14;\n            *(*0x20 + -0x1c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = *(in_RAX + 0x98);\n            *(*0x20 + -0x38) = 0x4391d6;\n            fcn.00431980();\n            *(*0x20 + -0x38) = 0x4391e7;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x4391f1;\n            fcn.00432200();\n            *(*0x20 + -0x38) = 0x439205;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x43920f;\n            fcn.00431f80();\n            *(*0x20 + -0x38) = 0x439225;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x439230;\n            fcn.00431f80();\n            *(*0x20 + -0x38) = 0x439235;\n            fcn.00431be0();\n            *(*0x20 + -0x38) = 0x43923a;\n            fcn.00431a00();\n            *(*0x20 + -0x20) = *(*(*0x20 + -0x10) + 0x90);\n            *(*0x20 + -0x18) = *(*(*0x20 + -0x10) + 0x98);\n            *(*0x20 + -0x38) = 0x43925a;\n            fcn.00431980();\n            *(*0x20 + -0x38) = 0x43926b;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x439275;\n            fcn.00432200();\n            *(*0x20 + -0x38) = 0x439286;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x439290;\n            fcn.00431f80();\n            *(*0x20 + -0x38) = 0x4392a5;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x4392b0;\n            fcn.00431f80();\n            *(*0x20 + -0x38) = 0x4392b5;\n            fcn.00431be0();\n            *(*0x20 + -0x38) = 0x4392ba;\n            fcn.00431a00();\n            *(*0x20 + -0x38) = 0x4392cb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4392d6;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1199
    },
    "00439440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439440(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f6bd0 != '\\0') {\n        *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n        fcn.0044b220(0);\n    }\n    fcn.004390e0();\n    return;\n}\n",
        "token_count": 140
    },
    "004394c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004394c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x4f6bd0 != '\\0') {\n                unaff_RBX = 0;\n                *(*0x20 + -0x48) = 0x4394f2;\n                fcn.0044c880();\n                in_RAX = *(*0x20 + 8);\n            }\n            if ((*(in_RAX + 0x90) & 0xffffefff) == 2) {\n                if (*(in_RAX + 0xb4) == '\\0') goto code_r0x0043953c;\n                *(*0x20 + -0x48) = 0x439525;\n                iVar1 = fcn.00447600();\n                if (iVar1 != 0) {\n                    if ((*(iVar1 + 0x29) & 2) == 0) {\ncode_r0x0043953c:\n                        *(*0x20 + -0x48) = 0x43954b;\n                        fcn.00434940(0x1009);\n                        *(*(*(unaff_R14 + 0x30) + 0x90) + 0x30) = 0;\n                        *(*(unaff_R14 + 0x30) + 0x90) = 0;\n                        *(*0x20 + -0x48) = 0x439585;\n                        fcn.00434060(9);\n                        *(*0x20 + -0x48) = 0x43958a;\n                        fcn.00438ae0();\n                        return;\n                    }\n                    *(*0x20 + -0x48) = 0x439599;\n                    uVar2 = fcn.00447da0();\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x20) = unaff_RBX;\n                    *(*0x20 + -0x48) = 0x4395a8;\n                    fcn.00431980();\n                    *(*0x20 + -0x48) = 0x4395b9;\n                    fcn.00432280();\n                    *(*0x20 + -0x48) = 0x4395c8;\n                    fcn.00432280();\n                    *(*0x20 + -0x48) = 0x4395d9;\n                    fcn.00432280();\n                    *(*0x20 + -0x48) = 0x4395de;\n                    fcn.00431a00();\n                    *(*0x20 + -0x48) = 0x4395ef;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x48) = 0x439605;\n                in_RAX = fcn.00430040();\n            }\n            *(*0x20 + -0x18) = unaff_R14;\n            *(*0x20 + -0x2c) = *(in_RAX + 0x90);\n            *(*0x20 + -0x28) = *(in_RAX + 0x98);\n            *(*0x20 + -0x48) = 0x439627;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x439638;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x439645;\n            fcn.00432200();\n            *(*0x20 + -0x48) = 0x439656;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x439665;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x439676;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x439685;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x43968a;\n            fcn.00431be0();\n            *(*0x20 + -0x48) = 0x43968f;\n            fcn.00431a00();\n            *(*0x20 + -0x30) = *(*(*0x20 + -0x18) + 0x90);\n            *(*0x20 + -0x28) = *(*(*0x20 + -0x18) + 0x98);\n            *(*0x20 + -0x48) = 0x4396af;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x4396c5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x4396cf;\n            fcn.00432200();\n            *(*0x20 + -0x48) = 0x4396e5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x4396ef;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x439705;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x439710;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x439715;\n            fcn.00431be0();\n            *(*0x20 + -0x48) = 0x43971a;\n            fcn.00431a00();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x48) = 0x43972b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x439736;\n        fcn.0045b2e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1490
    },
    "00439ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439ba0(void)\n\n{\n    code *pcVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    if ((**(unaff_R14 + 0x30) != unaff_R14) && ((*(unaff_R14 + 0x30))[10] != unaff_R14)) {\n        *(unaff_R14 + 0x40) = in_RAX;\n        *(unaff_R14 + 0x38) = unaff_RBX;\n        *(unaff_R14 + 0x58) = in_XMM15_Da;\n        *(unaff_R14 + 0x5c) = in_XMM15_Db;\n        *(unaff_R14 + 0x60) = in_XMM15_Dc;\n        *(unaff_R14 + 100) = in_XMM15_Dd;\n        if (*(unaff_R14 + 0x50) != 0) {\n            fcn.004334e0();\n        }\n        return;\n    }\n    fcn.00430040();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 294
    },
    "00439c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00439c00(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14 + 0xb7) = 1;\n    fcn.00439ba0();\n    unaff_R14[0xe] = unaff_RBX;\n    unaff_R14[0xf] = in_RAX;\n    fcn.00434500(3);\n    uVar1 = unaff_R14[0xe];\n    if ((uVar1 <= *unaff_R14 && *unaff_R14 != uVar1) || (unaff_R14[1] < uVar1)) {\n        fcn.004567a0();\n    }\n    if (*0x4f6bd0 != '\\0') {\n        fcn.004567a0();\n        fcn.00439ba0();\n    }\n    if (*0x4f2798 != '\\0') {\n        fcn.004567a0();\n        fcn.00439ba0();\n    }\n    if (*(*(unaff_R14[6] + 0xa0) + 0x2270) != 0) {\n        fcn.004567a0();\n        fcn.00439ba0();\n    }\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    iVar2 = *(unaff_R14[6] + 0xa0);\n    *(iVar2 + 0x38) = 0;\n    *(unaff_R14[6] + 0xb0) = iVar2;\n    *(unaff_R14[6] + 0xa0) = 0;\n    *(iVar2 + 4) = 2;\n    if (*0x4f2788 != '\\0') {\n        fcn.004567a0();\n        fcn.00439ba0();\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 555
    },
    "0043a500": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043a5d7)\n\nulong fcn.0043a500(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*0x4f278c == 0x7fffffff) {\n        return 0;\n    }\n    if ((in_RAX != 0) && (*(in_RAX + 4) == 2)) {\n        LOCK();\n        if (*(in_RAX + 4) == 2) {\n            *(in_RAX + 4) = 0;\n            fcn.0043c840();\n            fcn.0043a6c0();\n            return 1;\n        }\n    }\n    if (*0x4f26f0 != 0) {\n        fcn.004567a0();\n    }\n    return 0;\n}\n",
        "token_count": 179
    },
    "0043a6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043a6c0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    \n    if (*(*(*(unaff_R14 + 0x30) + 0xa0) + 0x14) != *(*(unaff_R14 + 0x30) + 0x26c)) {\n        if (*0x4f6bd0 != '\\0') {\n            fcn.004567a0();\n        }\n        piVar1 = *(*(unaff_R14 + 0x30) + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0043ac40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043ac40(uint64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar auVar5 [16];\n    char cVar6;\n    uint8_t uVar7;\n    int64_t in_RAX;\n    int64_t iVar8;\n    ulong uVar9;\n    uint64_t uVar10;\n    int64_t *piVar11;\n    int64_t iVar12;\n    ulong unaff_RBX;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x50) = 0x43ac7d;\n                fcn.00430140();\n            }\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            arg1 = *(unaff_R14 + 0x30);\n            *(*0x20 + -0x30) = arg1;\n            *(*0x20 + -0x18) = *(arg1 + 0xa0);\n            *(*0x20 + -0x50) = 0x43aca7;\n            iVar8 = fcn.0043b4e0();\n            if (iVar8 == 0) {\n                *(*0x20 + -0x50) = 0x43acb6;\n                uVar9 = fcn.0043aa00();\n                *(*0x20 + -0x28) = uVar9;\n                arg1 = 6;\n                *(*0x20 + -0x50) = 0x43acc7;\n                fcn.00434500(6);\n                *(*0x20 + -0x50) = 0x43acd1;\n                fcn.00433500();\n                iVar8 = *(*0x20 + -0x28);\n            }\n            if (*(iVar8 + 8) != 0) {\n                arg1 = *(iVar8 + 0x90);\n                if (*(iVar8 + 0x90) == 6) {\n                    *(*0x20 + -0x28) = iVar8;\n                    *(*0x20 + -0x38) = *(iVar8 + 8);\n                    *(*0x20 + -0x20) = iVar8 + 0x38;\n                    *(*0x20 + -0x50) = 0x43ad1a;\n                    fcn.00459580();\n                    iVar8 = *(*0x20 + -0x38);\n                    iVar12 = *(*0x20 + -0x28);\n                    *(iVar12 + 0x38) = iVar8 + -0x20;\n                    *(iVar12 + 0x80) = iVar8 + -0x20;\n                    *(iVar12 + 0x40) = 0x458a41;\n                    *(iVar12 + 0x48) = iVar12;\n                    *(*0x20 + -0x50) = 0x43ad57;\n                    fcn.00444b80(iVar12, iVar12, in_R8, in_R9);\n                    *(*(*0x20 + -0x28) + 0x128) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x50) = 0x43ad72;\n                    uVar9 = fcn.0043b020();\n                    if (*0x544c10 == 0) {\n                        iVar8 = *(*0x20 + -0x28);\n                        *(iVar8 + 0x130) = uVar9;\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x28);\n                        *(*0x20 + -0x50) = 0x43ada5;\n                        fcn.00458a80(iVar8 + 0x130, iVar8, in_R8, in_R9);\n                    }\n                    *(iVar8 + 0x138) = **(*0x20 + 8);\n                    *(*0x20 + -0x50) = 0x43adc5;\n                    cVar6 = fcn.004508a0();\n                    if (cVar6 == '\\0') {\n                        iVar12 = *(*(*0x20 + -0x30) + 0x90);\n                        if (iVar12 == 0) {\n                            iVar8 = *(*0x20 + -0x28);\n                        }\n                        else if (*0x544c10 == 0) {\n                            iVar8 = *(*0x20 + -0x28);\n                            *(iVar8 + 0x168) = *(iVar12 + 0x168);\n                        }\n                        else {\n                            *(*0x20 + -0x50) = 0x43ae2c;\n                            iVar8 = fcn.00458be0(iVar8, *(*0x20 + -0x30), *(*0x20 + -0x28) + 0x168, in_R9);\n                        }\n                        if (*0x4ef244 != '\\0') {\n                            *(iVar8 + 0x17c) = 2;\n                        }\n                    }\n                    else {\n                        LOCK();\n                        *0x4f26e8 = *0x4f26e8 + 1;\n                        iVar8 = *(*0x20 + -0x28);\n                    }\n                    uVar10 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                    auVar5 = ZEXT816(uVar10) * ZEXT816(uVar10 ^ 0xe7037ed1a0b428db);\n                    *(*(unaff_R14 + 0x30) + 0xf0) = uVar10;\n                    uVar7 = SUB161(auVar5, 0) ^ SUB161(auVar5 >> 0x40, 0);\n                    *(iVar8 + 0xbd) = uVar7;\n                    if ((uVar7 & 7) == 0) {\n                        *(iVar8 + 0xbc) = 1;\n                    }\n                    *(*0x20 + -0x50) = 0x43aea5;\n                    fcn.00434500(1);\n                    piVar11 = *(*0x20 + -0x28);\n                    iVar12 = piVar11[1] - *piVar11;\n                    iVar8 = *(*0x20 + -0x18);\n                    if (iVar8 == 0) {\n                        LOCK();\n                        *0x545370 = *0x545370 + iVar12;\n                    }\n                    else {\n                        iVar4 = *(iVar8 + 0x22a8);\n                        iVar2 = iVar4 + iVar12;\n                        *(iVar8 + 0x22a8) = iVar2;\n                        if (0x3ffe < iVar4 + 0x1fff + iVar12) {\n                            LOCK();\n                            *0x545370 = *0x545370 + iVar2;\n                            *(iVar8 + 0x22a8) = 0;\n                        }\n                    }\n                    iVar12 = *0x4f26a0;\n                    if (*(iVar8 + 0x188) == *(iVar8 + 0x180)) {\n                        LOCK();\n                        iVar2 = *0x4f26a0 + 1;\n                        *0x4f26a0 = *0x4f26a0 + 0x10;\n                        *(iVar8 + 0x180) = iVar2;\n                        *(iVar8 + 0x188) = iVar12 + 0x11;\n                    }\n                    piVar11[0x13] = *(iVar8 + 0x180);\n                    *(iVar8 + 0x180) = *(iVar8 + 0x180) + 1;\n                    if (*0x4f6bd0 != '\\0') {\n                        *(*0x20 + -0x50) = 0x43af7b;\n                        fcn.0044c5e0();\n                        piVar11 = *(*0x20 + -0x28);\n                    }\n                    iVar3 = *(*(*0x20 + -0x30) + 0xd8);\n                    *(*(*0x20 + -0x30) + 0xd8) = iVar3 + -1;\n                    if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                    }\n                    return piVar11;\n                }\n                *(*0x20 + -0x50) = 0x43afc7;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x1c;\n            *(*0x20 + -0x50) = 0x43afd8;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        *(puVar13 + 0x18) = arg1;\n        *(puVar13 + -8) = 0x43afed;\n        fcn.004568e0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        arg1 = *(puVar13 + 0x18);\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 2242
    },
    "0043b020": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.0043b020(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t in_RAX;\n    ulong uVar4;\n    uchar *puVar5;\n    ulong *puVar6;\n    int64_t iVar7;\n    uint64_t noname_1;\n    ulong *puVar8;\n    uchar *unaff_RBP;\n    int32_t iVar9;\n    int64_t iVar10;\n    ulong uVar11;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x350 && *0x20 + -0x350 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x3d0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x544e94 < 1) || (*(in_RAX + 0x98) == 0)) {\n                return NULL;\n            }\n            *(*0x20 + 8) = in_RAX;\n            puVar8 = *(in_RAX + 0x130);\n            if (puVar8 == NULL) {\n                uVar11 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *puVar8;\n                uVar11 = puVar8[1];\n            }\n            *(*0x20 + -0x48) = uVar4;\n            *(*0x20 + -0x378) = uVar11;\n            iVar9 = uVar11 + 1;\n            if (*0x544e94 < iVar9) {\n                iVar9 = *0x544e94;\n            }\n            *(*0x20 + -0x370) = iVar9;\n            *(*0x20 + -0x3d8) = 0x43b0c5;\n            uVar4 = fcn.00441f00(iVar9);\n            if (*(*0x20 + -0x370) != 0) {\n                *(*0x20 + -0x38) = uVar4;\n                iVar10 = *(*0x20 + -0x370) + -1;\n                noname_1 = -iVar10 >> 0x3f & 0x28;\n                *(*0x20 + -0x3d8) = 0x43b10d;\n                fcn.0040f480(iVar10);\n                *(*0x20 + -0x3e0) = unaff_RBP;\n                *(*0x20 + -0x3d8) = 0x43b12f;\n                fcn.004590ae();\n                *(*0x20 + -0x3d0) = 0;\n                uVar11 = 100;\n                *(*0x20 + -0x3d8) = 0x43b167;\n                uVar4 = fcn.0044cd80(0, noname_1, *0x20 + -0x368, 100);\n                *(*0x20 + -0x380) = uVar4;\n                *(*0x20 + -0x3d8) = 0x43b17e;\n                puVar5 = fcn.00441f00(uVar4);\n                iVar10 = *(*0x20 + -0x380);\n                iVar7 = iVar10;\n                if (100 < iVar10) {\n                    iVar7 = 100;\n                }\n                if (puVar5 != *0x20 + -0x368) {\n                    *(*0x20 + -0x40) = puVar5;\n                    *(*0x20 + -0x3d8) = 0x43b1ae;\n                    fcn.00459880(iVar7 << 3);\n                    puVar5 = *(*0x20 + -0x40);\n                    iVar10 = *(*0x20 + -0x380);\n                }\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x28) = in_XMM15;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x30) = puVar5;\n                *(*0x20 + -0x28) = iVar10;\n                *(*0x20 + -0x20) = iVar10;\n                *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x98);\n                puVar8 = *(*(*0x20 + 8) + 0x128);\n                *(*0x20 + -0x10) = puVar8;\n                if (*0x544c10 == 0) {\n                    puVar8 = *(*0x20 + -0x38);\n                    *puVar8 = *(*0x20 + -0x30);\n                    uVar1 = *(*0x20 + -0x24);\n                    uVar2 = *(*0x20 + -0x20);\n                    uVar3 = *(*0x20 + -0x1c);\n                    *(puVar8 + 1) = *(*0x20 + -0x28);\n                    *(puVar8 + 0xc) = uVar1;\n                    *(puVar8 + 2) = uVar2;\n                    *(puVar8 + 0x14) = uVar3;\n                    uVar1 = *(*0x20 + -0x14);\n                    uVar2 = *(*0x20 + -0x10);\n                    uVar3 = *(*0x20 + -0xc);\n                    *(puVar8 + 3) = *(*0x20 + -0x18);\n                    *(puVar8 + 0x1c) = uVar1;\n                    *(puVar8 + 4) = uVar2;\n                    *(puVar8 + 0x24) = uVar3;\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43b266;\n                    fcn.0040f2c0(*0x20 + -0x30);\n                }\n                *(*0x20 + -0x3d8) = 0x43b272;\n                puVar6 = fcn.0040ba20();\n                uVar4 = *(*0x20 + -0x370);\n                puVar6[1] = uVar4;\n                puVar6[2] = uVar4;\n                if (*0x544c10 == 0) {\n                    *puVar6 = *(*0x20 + -0x38);\n                }\n                else {\n                    *(*0x20 + -0x3d8) = 0x43b2a5;\n                    puVar6 = fcn.00458b80(*(*0x20 + -0x38), puVar8, iVar10, uVar11);\n                }\n                return puVar6;\n            }\n            *(*0x20 + -0x3d8) = 0x43b2c5;\n            in_RAX = fcn.00458fe0(0);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x43b2d0;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1663
    },
    "0043b2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b2e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar (*unaff_RBX) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX[9] == 6) {\n                if (*0x4d9268 != *(*unaff_RBX + 8) - **unaff_RBX) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_RBX;\n                    *(*0x20 + -0x68) = 0x43b33a;\n                    fcn.00443040();\n                    unaff_RBX = *(*0x20 + 0x10);\n                    *unaff_RBX = in_XMM15;\n                    *unaff_RBX[1] = 0;\n                    in_RAX = *(*0x20 + 8);\n                }\n                *unaff_RBX[10] = *(in_RAX + 0x9a0);\n                *(in_RAX + 0x9a0) = unaff_RBX;\n                iVar2 = *(in_RAX + 0x9a8) + 1;\n                *(in_RAX + 0x9a8) = iVar2;\n                if (0x3f < iVar2) {\n                    *(*0x20 + -0x48) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    iVar2 = 0;\n                    while (0x1f < *(in_RAX + 0x9a8)) {\n                        piVar1 = *(in_RAX + 0x9a0);\n                        if (piVar1 != NULL) {\n                            *(in_RAX + 0x9a0) = piVar1[0x14];\n                        }\n                        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                        if (*piVar1 == 0) {\n                            piVar1[0x14] = *(*0x20 + -0x18);\n                            *(*0x20 + -0x18) = piVar1;\n                            if (*(*0x20 + -0x10) == 0) {\n                                *(*0x20 + -0x10) = piVar1;\n                            }\n                        }\n                        else {\n                            piVar1[0x14] = *(*0x20 + -0x48);\n                            *(*0x20 + -0x48) = piVar1;\n                            if (*(*0x20 + -0x40) == 0) {\n                                *(*0x20 + -0x40) = piVar1;\n                            }\n                        }\n                        iVar2 = iVar2 + 1;\n                    }\n                    *(*0x20 + -0x4c) = iVar2;\n                    *(*0x20 + -0x68) = 0x43b425;\n                    fcn.00409860();\n                    *(*0x20 + -0x28) = *(*0x20 + -0x18);\n                    *(*0x20 + -0x20) = *(*0x20 + -0x10);\n                    if (*(*0x20 + -0x18) != 0) {\n                        *(*(*0x20 + -0x10) + 0xa0) = *0x4f2750;\n                        *0x4f2750 = *(*0x20 + -0x28);\n                    }\n                    *(*0x20 + -0x38) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x30) = *(*0x20 + -0x40);\n                    if (*(*0x20 + -0x48) != 0) {\n                        *(*(*0x20 + -0x40) + 0xa0) = *0x4f2748;\n                        *0x4f2748 = *(*0x20 + -0x38);\n                    }\n                    *0x4f2758 = *0x4f2758 + *(*0x20 + -0x4c);\n                    *(*0x20 + -0x68) = 0x43b4a5;\n                    fcn.00409a80();\n                }\n                return;\n            }\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x68) = 0x43b4bb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x43b4cb;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1218
    },
    "0043b4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t * fcn.0043b4e0(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    do {\n        piVar1 = *(in_RAX + 0x9a0);\n        if ((piVar1 != NULL) || ((*0x4f2748 == 0 && (*0x4f2750 == 0)))) {\n            if (piVar1 != NULL) {\n                *(in_RAX + 0x9a0) = piVar1[0x14];\n                *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n                if ((*piVar1 != 0) && (*0x4d9268 != piVar1[1] - *piVar1)) {\n                    fcn.004567a0();\n                }\n                if (*piVar1 == 0) {\n                    fcn.004567a0();\n                    piVar1[2] = *piVar1 + 0x13a0;\n                }\n                return piVar1;\n            }\n            return NULL;\n        }\n        fcn.00409860();\n        while (*(in_RAX + 0x9a8) < 0x20) {\n            if (*0x4f2748 == 0) {\n                if (*0x4f2750 == 0) break;\n                iVar2 = *0x4f2750;\n                *0x4f2750 = *(*0x4f2750 + 0xa0);\n            }\n            else {\n                iVar2 = *0x4f2748;\n                *0x4f2748 = *(*0x4f2748 + 0xa0);\n            }\n            *0x4f2758 = *0x4f2758 + -1;\n            *(iVar2 + 0xa0) = *(in_RAX + 0x9a0);\n            *(in_RAX + 0x9a0) = iVar2;\n            *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + 1;\n        }\n        fcn.00409a80();\n    } while( true );\n}\n",
        "token_count": 553
    },
    "0043b780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043b780(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    uchar auStack72 [48];\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar2 = 0;\n    auStack72._0_16_ = in_XMM15;\n    auStack24 = in_XMM15;\n    while( true ) {\n        piVar1 = *(in_RAX + 0x9a0);\n        if (piVar1 == NULL) break;\n        if (piVar1 != NULL) {\n            *(in_RAX + 0x9a0) = piVar1[0x14];\n        }\n        *(in_RAX + 0x9a8) = *(in_RAX + 0x9a8) + -1;\n        if (*piVar1 == 0) {\n            piVar1[0x14] = auStack24._0_8_;\n            auStack24 = CONCAT88(auStack24._8_8_, piVar1);\n            if (auStack24._8_8_ == 0) {\n                auStack24 = CONCAT88(piVar1, piVar1);\n            }\n        }\n        else {\n            piVar1[0x14] = auStack72._0_8_;\n            auStack72._0_16_ = CONCAT88(auStack72._8_8_, piVar1);\n            if (auStack72._8_8_ == 0) {\n                auStack72._0_16_ = CONCAT88(piVar1, piVar1);\n            }\n        }\n        iVar2 = iVar2 + 1;\n    }\n    fcn.00409860();\n    if (auStack24._0_8_ != 0) {\n        *(auStack24._8_8_ + 0xa0) = *0x4f2750;\n        *0x4f2750 = auStack24._0_8_;\n    }\n    if (auStack72._0_8_ != 0) {\n        *(auStack72._8_8_ + 0xa0) = *0x4f2748;\n        *0x4f2748 = auStack72._0_8_;\n    }\n    *0x4f2758 = *0x4f2758 + iVar2;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 601
    },
    "0043b8e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b8e0(void)\n\n{\n    int32_t *piVar1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    int64_t iVar2;\n    \n    iVar2 = unaff_R14;\n    if (*(*(unaff_R14 + 0x30) + 0x23c) == 0) {\n        fcn.004567a0();\n        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n    }\n    piVar1 = *(iVar2 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + -1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if ((*(iVar2 + 0x23c) == 0) && (*(iVar2 + 0x238) == 0)) {\n        *(iVar2 + 0x130) = 0;\n        *(unaff_R14 + 0xe8) = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043b9c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043b9c0(ulong noname_0, uint64_t arg2, uint64_t arg3)\n\n{\n    uint32_t *puVar1;\n    uint64_t arg1;\n    uint *in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint unaff_EBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *in_RAX = unaff_EBX;\n            in_RAX[1] = 3;\n            *(in_RAX + 0x26e) = 0;\n            *(in_RAX + 0x270) = 0x80;\n            if (*0x544c10 == 0) {\n                *(in_RAX + 0x26c) = in_RAX + 0x272;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43ba1c;\n                in_RAX = fcn.00458b80(in_RAX + 0x272, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(in_RAX + 0x1c) = 0;\n            *(in_RAX + 0x1e) = 0x20;\n            if (*0x544c10 == 0) {\n                *(in_RAX + 0x1a) = in_RAX + 0x20;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x43ba51;\n                in_RAX = fcn.00458b80(in_RAX + 0x20, arg2, arg3, in_R9);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x43ba65;\n            fcn.00429c80(in_RAX + 0x498);\n            if (*(*(*0x20 + 8) + 0x40) == 0) {\n                uVar5 = *(*0x20 + 0x10);\n                arg2 = uVar5;\n                if (uVar5 != 0) {\n                    *(*0x20 + -0x20) = 0x43ba9a;\n                    uVar2 = fcn.00411560();\n                    *(*(*0x20 + 8) + 0x40) = uVar2;\n                    uVar5 = *(*0x20 + 0x10);\n                    goto code_r0x0043baa7;\n                }\n                if (*0x544b00 != 0) {\n                    *(*(*0x20 + 8) + 0x40) = *0x544b00;\n                    goto code_r0x0043baa7;\n                }\n            }\n            else {\n                uVar5 = *(*0x20 + 0x10);\ncode_r0x0043baa7:\n                arg1 = *0x4f1d38;\n                arg2 = (uVar5 / 0x20) * 0x20;\n                uVar4 = uVar5 % 0x20;\n                if (-1 < uVar4) {\n                    arg2 = -(uVar4 < 0x20);\n                    uVar4 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n                    arg3 = uVar4;\n                    uVar3 = ((uVar5 >> 0x1f) >> 0x1b) + uVar5 >> 5;\n                    if (uVar3 < *0x4f1d38) {\n                        puVar1 = *0x4f1d30 + uVar3 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | uVar4;\n                        if (uVar3 < *0x4f1cf8) {\n                            puVar1 = *0x4f1cf0 + uVar3 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~uVar4;\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x43bb1f;\n                        arg2 = *0x4f1cf0;\n                        fcn.00458f20(*0x4f1cf8);\n                    }\n                    *(*0x20 + -0x20) = 0x43bb27;\n                    fcn.00458f20(arg1);\n                }\n                *(*0x20 + -0x20) = 0x43bb2c;\n                fcn.0042e700();\n            }\n            unaff_EBX = 0xf;\n            *(*0x20 + -0x20) = 0x43bb3d;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_EBX;\n        *(puVar6 + -8) = 0x43bb4c;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_EBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1297
    },
    "0043bb60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043bb60(ulong param_1, int64_t param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    while (*(in_RAX + 400) != *(in_RAX + 0x194)) {\n        uVar3 = *(in_RAX + 0x194) - 1;\n        *(in_RAX + 0x194) = uVar3;\n        param_2 = *(in_RAX + 0x198 + (uVar3 & 0xff) * 8);\n        *(param_2 + 0xa0) = *0x4f2708;\n        if (*0x4f2710 == 0) {\n            *0x4f2710 = param_2;\n        }\n        *0x4f2718 = *0x4f2718 + 1;\n        *0x4f2708 = param_2;\n    }\n    iVar2 = *(in_RAX + 0x998);\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = *0x4f2708;\n        if (*0x4f2710 == 0) {\n            *0x4f2710 = iVar2;\n        }\n        *0x4f2718 = *0x4f2718 + 1;\n        *0x4f2708 = iVar2;\n        *(in_RAX + 0x998) = 0;\n        param_2 = iVar2;\n    }\n    if (*(in_RAX + 0x2288) != 0) {\n        fcn.00409860();\n        fcn.00409860();\n        param_2 = *(in_RAX + 0x2288);\n        fcn.00449cc0(param_2);\n        *(in_RAX + 0x2288) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        if (*0x544c10 == 0) {\n            *(in_RAX + 0x2280) = 0;\n            iVar2 = in_RAX;\n        }\n        else {\n            param_2 = 0;\n            iVar2 = fcn.00458ba0(in_RAX + 0x2280, 0, param_3, param_4);\n        }\n        *(iVar2 + 0x2298) = 0;\n        *(iVar2 + 0x229c) = 0;\n        uVar1 = *(iVar2 + 0x1200);\n        *(iVar2 + 0x1200) = 0;\n        fcn.00409a80(uVar1);\n        fcn.00409a80();\n    }\n    if (*0x544a24 != 0) {\n        fcn.00429dc0();\n        fcn.00420040(in_RAX + 0x1238);\n    }\n    fcn.0040f5c0(in_RAX + 0x9c8);\n    *(in_RAX + 0x9b8) = 0;\n    *(in_RAX + 0x9c0) = 0x80;\n    if (*0x544c10 == 0) {\n        *(in_RAX + 0x9b0) = in_RAX + 0x9c8;\n        iVar2 = in_RAX;\n    }\n    else {\n        iVar2 = fcn.00458b80(in_RAX + 0x9c8, param_2, param_3, param_4);\n    }\n    fcn.0040f5c0(iVar2 + 0x80);\n    *(in_RAX + 0x70) = 0;\n    *(in_RAX + 0x78) = 0x20;\n    if (*0x544c10 == 0) {\n        *(in_RAX + 0x68) = in_RAX + 0x80;\n    }\n    else {\n        fcn.00458b80(in_RAX + 0x80, in_RAX, param_3, param_4);\n    }\n    fcn.004567a0();\n    fcn.004116c0(*(in_RAX + 0x40));\n    *(in_RAX + 0x40) = 0;\n    fcn.0043b780();\n    fcn.0044b160();\n    *(in_RAX + 0x1210) = 0;\n    *(in_RAX + 4) = 4;\n    return;\n}\n",
        "token_count": 1125
    },
    "0043bf60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0043bf60(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int64_t iVar3;\n    int32_t in_EAX;\n    ulong uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint32_t uVar10;\n    int64_t *piVar11;\n    uint32_t uVar12;\n    int64_t *unaff_RBX;\n    int64_t *piVar13;\n    uint64_t uVar14;\n    uchar *puVar15;\n    uchar *unaff_RBP;\n    int64_t *unaff_RSI;\n    uint32_t uVar16;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar15 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar15 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((-1 < *0x544a28) && (0 < in_EAX)) {\n                *(*0x20 + -0x70) = *0x544a28;\n                *(*0x20 + 8) = in_EAX;\n                if (*0x4f6bd0 != '\\0') {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = in_EAX;\n                    unaff_RBX = 0x1;\n                    unaff_RSI = 0x1;\n                    *(*0x20 + -0xb8) = 0x43bfdc;\n                    fcn.0044b220(*0x20 + -0x38);\n                }\n                *(*0x20 + -0xb8) = 0x43bfe5;\n                fcn.0045a8a0();\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                iVar6 = *(*0x20 + -0xb0);\n                if (*0x4f27c8 == 0) {\n                    uVar10 = *(*0x20 + -0x70);\n                }\n                else {\n                    uVar10 = *(*0x20 + -0x70);\n                    *0x4f27d0 = *0x4f27d0 + uVar10 * (iVar6 - *0x4f27c8);\n                }\n                *(*0x20 + -0x40) = iVar6;\n                uVar12 = *(*0x20 + 8);\n                uVar9 = uVar12;\n                *(*0x20 + -0x6c) = ((uVar12 + 0x1f >> 0x1f) >> 0x1b) + 0x1f + uVar12 >> 5;\n                *0x4f27c8 = iVar6;\n                if (*0x4f1c78 < uVar12) {\n                    *(*0x20 + -0xb8) = 0x43c077;\n                    fcn.00409860();\n                    iVar1 = *(*0x20 + 8);\n                    if (*0x4f1c80 < iVar1) {\n                        *(*0x20 + -0x50) = iVar1;\n                        *(*0x20 + -0xb8) = 0x43c0bc;\n                        uVar4 = fcn.00441f00(iVar1);\n                        *(*0x20 + -0x10) = uVar4;\n                        uVar4 = *(*0x20 + -0x50);\n                        *(*0x20 + -0xb8) = 0x43c0e6;\n                        fcn.0040f480(uVar4);\n                        *0x4f1c78 = *(*0x20 + -0x50);\n                        *0x4f1c80 = *0x4f1c78;\n                        if (*0x544c10 == 0) {\n                            *0x4f1c70 = *(*0x20 + -0x10);\n                            piVar13 = *0x4f1c78;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43c127;\n                            fcn.00458be0(uVar4, *0x4f1c78, uVar9, iVar6);\n                            piVar13 = *0x4f1c78;\n                        }\ncode_r0x0043c12e:\n                        *0x4f1c78 = piVar13;\n                        unaff_RSI = *0x4f1cf8;\n                        uVar10 = *(*0x20 + -0x6c);\n                        uVar9 = uVar10;\n                        if (*0x4f1d00 < uVar10) {\n                            *(*0x20 + -0x58) = uVar10;\n                            *(*0x20 + -0xb8) = 0x43c193;\n                            uVar4 = fcn.00441da0(*0x4f1cf8);\n                            unaff_RBX = *(*0x20 + -0x58);\n                            piVar13 = unaff_RBX;\n                            piVar5 = unaff_RBX;\n                            if (*0x544c10 != 0) {\n                                *(*0x20 + -0xb8) = 0x43c1c5;\n                                piVar13 = *0x4f1cf8;\n                                *0x4f1cf8 = unaff_RBX;\n                                piVar5 = *0x4f1d00;\n                                *0x4f1d00 = unaff_RBX;\n                                fcn.00458a80(piVar13, piVar5, uVar9, iVar6);\n                                uVar4 = *0x4f1cf0;\n                                piVar13 = *0x4f1cf8;\n                                piVar5 = *0x4f1d00;\n                            }\n                            *0x4f1d00 = piVar5;\n                            *0x4f1cf8 = piVar13;\n                            *0x4f1cf0 = uVar4;\n                            *(*0x20 + -0xb8) = 0x43c1df;\n                            uVar4 = fcn.00441da0(*0x4f1d38);\n                            *0x4f1d40 = *(*0x20 + -0x58);\n                            piVar13 = *0x4f1d40;\n                            if (*0x544c10 != 0) {\n                                *(*0x20 + -0xb8) = 0x43c210;\n                                piVar13 = *0x4f1d38;\n                                *0x4f1d38 = *0x4f1d40;\n                                fcn.00458a80(piVar13, *0x4f1d40, uVar9, iVar6);\n                                uVar4 = *0x4f1d30;\n                                piVar13 = *0x4f1d38;\n                            }\ncode_r0x0043c212:\n                            *0x4f1d38 = piVar13;\n                            *0x4f1d30 = uVar4;\n                            *(*0x20 + -0xb8) = 0x43c21e;\n                            fcn.00409a80();\n                            uVar10 = *(*0x20 + -0x70);\n                            uVar9 = *(*0x20 + 8);\n                            goto code_r0x0043c260;\n                        }\n                        unaff_RBX = uVar10;\n                        piVar5 = *0x4f1d00;\n                        if (unaff_RBX <= *0x4f1d00) {\n                            piVar5 = *0x4f1d40;\n                            *0x4f1cf8 = unaff_RBX;\n                            uVar4 = *0x4f1d30;\n                            piVar13 = unaff_RBX;\n                            if (unaff_RBX <= *0x4f1d40) goto code_r0x0043c212;\n                            goto code_r0x0043c792;\n                        }\n                        goto code_r0x0043c79a;\n                    }\n                    unaff_RSI = iVar1;\n                    piVar5 = *0x4f1c80;\n                    piVar13 = unaff_RSI;\n                    if (unaff_RSI <= *0x4f1c80) goto code_r0x0043c12e;\n                }\n                else {\ncode_r0x0043c260:\n                    while( true ) {\n                        piVar13 = uVar10;\n                        if (uVar9 <= uVar10) break;\n                        unaff_RSI = uVar10;\n                        piVar11 = *0x4f1c78;\n                        piVar5 = piVar13;\n                        if (*0x4f1c78 <= unaff_RSI) goto code_r0x0043c78a;\n                        *(*0x20 + -0x60) = uVar10;\n                        *(*0x20 + -0x48) = unaff_RSI;\n                        iVar6 = (*0x4f1c70)[unaff_RSI];\n                        if (iVar6 == 0) {\n                            *(*0x20 + -0xb8) = 0x43c2a7;\n                            iVar6 = fcn.0040ba20();\n                            piVar13 = *(*0x20 + -0x60);\n                        }\n                        *(*0x20 + -0x28) = iVar6;\n                        *(*0x20 + -0xb8) = 0x43c2c5;\n                        fcn.0043b9c0(iVar6, piVar13, uVar9);\n                        piVar11 = *0x4f1c78;\n                        piVar5 = *0x4f1c70;\n                        if (*0x4f1c78 <= *(*0x20 + -0x48)) goto code_r0x0043c785;\n                        piVar5 = *0x4f1c70 + *(*0x20 + -0x48);\n                        if (*0x544c10 != '\\0') {\n                            *(*0x20 + -0x18) = piVar5;\n                            piVar13 = *(*0x20 + -0x28);\n                            *(*0x20 + -0xb8) = 0x43c30f;\n                            fcn.00402e00();\n                            piVar5 = *(*0x20 + -0x18);\n                        }\n                        *piVar5 = *(*0x20 + -0x28);\n                        uVar10 = *(*0x20 + -0x60) + 1;\n                        uVar9 = *(*0x20 + 8);\n                        unaff_RBX = piVar13;\n                    }\n                    *(*0x20 + -0x20) = unaff_R14;\n                    piVar2 = *(*(unaff_R14 + 0x30) + 0xa0);\n                    if (piVar2 == NULL) {\ncode_r0x0043c3df:\n                        piVar5 = *(*0x20 + -0x20);\ncode_r0x0043c3e7:\n                        *(piVar5[6] + 0xa0) = 0;\n                        piVar13 = *0x4f1c70;\n                        if (*0x4f1c78 != NULL) {\n                            iVar6 = **0x4f1c70;\n                            *(iVar6 + 0x38) = 0;\n                            *(iVar6 + 4) = 0;\n                            *(*0x20 + -0xb8) = 0x43c425;\n                            fcn.0043c7e0();\n                            if (*0x4f6bd0 != '\\0') {\n                                *(*0x20 + -0xb8) = 0x43c433;\n                                fcn.0044c6c0();\n                            }\n                            goto code_r0x0043c433;\n                        }\n                    }\n                    else {\n                        if (uVar9 <= *piVar2) {\n                            if (piVar2 == NULL) goto code_r0x0043c3df;\n                            if (*0x4f6bd0 != '\\0') {\n                                *(unaff_R14 + 0xe0) = piVar2;\n                                unaff_RSI = NULL;\n                                *(*0x20 + -0xb8) = 0x43c375;\n                                fcn.0044b220(0);\n                                *(*0x20 + -0xb8) = 0x43c38d;\n                                fcn.0044c360();\n                            }\n                            piVar5 = *(*0x20 + -0x20);\n                            *(*(piVar5[6] + 0xa0) + 0x38) = 0;\n                            goto code_r0x0043c3e7;\n                        }\n                        piVar2[1] = 1;\n                        *(*0x20 + -0xb8) = 0x43c3dd;\n                        fcn.00411e00();\n                        piVar13 = unaff_RBX;\ncode_r0x0043c433:\n                        *0x544b00 = 0;\n                        uVar12 = *(*0x20 + -0x70);\n                        uVar10 = *(*0x20 + 8);\n                        uVar16 = uVar10;\n                        while (piVar11 = *0x4f1c78,  piVar5 = uVar12,  uVar10 < uVar12) {\n                            piVar13 = uVar10;\n                            unaff_RSI = *0x4f1c78;\n                            if (*0x4f1c78 <= piVar13) goto code_r0x0043c770;\n                            *(*0x20 + -100) = uVar10;\n                            *(*0x20 + -0xb8) = 0x43c45a;\n                            fcn.0043bb60();\n                            uVar16 = *(*0x20 + 8);\n                            uVar12 = *(*0x20 + -0x70);\n                            unaff_RSI = piVar11;\n                            uVar10 = *(*0x20 + -100) + 1;\n                        }\n                        if (uVar16 == *0x4f1c78) {\ncode_r0x0043c529:\n                            uVar9 = uVar16;\n                            iVar6 = *(*0x20 + -0x20);\n                            iVar8 = 0;\n                            while( true ) {\n                                uVar16 = uVar16 - 1;\n                                *(*0x20 + -0x30) = iVar8;\n                                if (uVar16 < 0) {\n                                    *0x4f1de0 = uVar9;\n                                    *0x4f1df0 = 0;\n                                    for (uVar10 = 1; uVar16 = uVar9,  uVar14 = uVar9,  uVar12 = uVar10, \n                                        uVar10 <= uVar16; uVar10 = uVar10 + 1) {\n                                        while (uVar16 = uVar14,  uVar16 != 0) {\n                                            piVar5 = *(*0x20 + -0x70);\n                                            uVar14 = uVar12 % uVar14;\n                                            uVar12 = uVar16;\n                                        }\n                                        if (uVar12 == 1) {\n                                            uVar14 = *0x4f1df0 + 1;\n                                            iVar7 = *0x4f1de8;\n                                            if (*0x4f1df8 < uVar14) {\n                                                *(*0x20 + -0x5c) = uVar10;\n                                                *(*0x20 + -0xb8) = 0x43c66e;\n                                                iVar8 = *0x4f1de8;\n                                                iVar7 = fcn.00441fe0(*0x4f1df8);\n                                                iVar3 = iVar7;\n                                                if (*0x544c10 != 0) {\n                                                    *(*0x20 + -0xb8) = 0x43c693;\n                                                    iVar7 = fcn.00458a80(*0x4f1df8, piVar5, iVar8, iVar6);\n                                                    iVar3 = *0x4f1de8;\n                                                }\n                                                *0x4f1de8 = iVar3;\n                                                piVar5 = *(*0x20 + -0x70);\n                                                uVar10 = *(*0x20 + -0x5c);\n                                                uVar9 = *(*0x20 + 8);\n                                                iVar8 = *(*0x20 + -0x30);\n                                            }\n                                            *0x4f1df0 = uVar14;\n                                            *(iVar7 + -4 + uVar14 * 4) = uVar10;\n                                        }\n                                    }\n                                    *0x544a28 = uVar16;\n                                    if (uVar16 != piVar5) {\n                                        *(*0x20 + -0xb8) = 0x43c6e5;\n                                        fcn.00416940(uVar9);\n                                        iVar8 = *(*0x20 + -0x30);\n                                    }\n                                    return iVar8;\n                                }\n                                if (*0x4f1c78 <= uVar16) break;\n                                iVar7 = (*0x4f1c70)[uVar16];\n                                if (*(*(iVar6 + 0x30) + 0xa0) != iVar7) {\n                                    *(iVar7 + 4) = 0;\n                                    iVar3 = *0x4f26c0;\n                                    do {\n                                    } while (*(iVar7 + 0x194) != *(iVar7 + 0x194));\n                                    if ((*(iVar7 + 0x194) == *(iVar7 + 400)) && (*(iVar7 + 0x998) == 0)) {\n                                        *(*0x20 + -0x68) = uVar16;\n                                        piVar13 = *(*0x20 + -0x40);\n                                        *(*0x20 + -0xb8) = 0x43c5ac;\n                                        fcn.0043e440();\n                                        uVar9 = *(*0x20 + 8);\n                                        piVar5 = *(*0x20 + -0x70);\n                                        uVar16 = *(*0x20 + -0x68);\n                                        iVar6 = *(*0x20 + -0x20);\n                                        iVar8 = *(*0x20 + -0x30);\n                                    }\n                                    else {\n                                        if (*0x4f26c0 != 0) {\n                                            *0x4f26c0 = *(*0x4f26c0 + 0x128);\n                                            *0x4f26c8 = *0x4f26c8 + -1;\n                                        }\n                                        *(iVar7 + 0x38) = iVar3;\n                                        *(iVar7 + 8) = iVar8;\n                                        iVar8 = iVar7;\n                                    }\n                                }\n                            }\n                            *(*0x20 + -0xb8) = 0x43c750;\n                            fcn.00458f20(*0x4f1c78);\ncode_r0x0043c750:\n                            *(*0x20 + -0xb8) = 0x43c758;\n                            fcn.00458fa0(piVar13, piVar5);\ncode_r0x0043c758:\n                            *(*0x20 + -0xb8) = 0x43c765;\n                            fcn.00458fa0(piVar13, piVar5);\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x43c4ac;\n                            fcn.00409860();\n                            piVar11 = *(*0x20 + 8);\n                            piVar5 = piVar11;\n                            piVar13 = *0x4f1c80;\n                            if (piVar11 <= *0x4f1c80) {\n                                piVar13 = *(*0x20 + -0x6c);\n                                piVar5 = *0x4f1d00;\n                                *0x4f1c78 = piVar11;\n                                if (piVar13 <= *0x4f1d00) {\n                                    piVar5 = *0x4f1d40;\n                                    *0x4f1cf8 = piVar13;\n                                    if (piVar13 <= *0x4f1d40) {\n                                        *(*0x20 + -0xb8) = 0x43c51e;\n                                        *0x4f1d38 = piVar13;\n                                        fcn.00409a80();\n                                        uVar16 = *(*0x20 + 8);\n                                        piVar5 = *(*0x20 + -0x70);\n                                        goto code_r0x0043c529;\n                                    }\n                                    goto code_r0x0043c750;\n                                }\n                                goto code_r0x0043c758;\n                            }\n                        }\n                        *(*0x20 + -0xb8) = 0x43c770;\n                        piVar11 = piVar13;\n                        fcn.00458fa0(piVar5, piVar13);\n                        piVar5 = piVar11;\ncode_r0x0043c770:\n                        *(*0x20 + -0xb8) = 0x43c77b;\n                        fcn.00458f20(unaff_RSI);\n                    }\n                    piVar11 = NULL;\n                    *(*0x20 + -0xb8) = 0x43c785;\n                    fcn.00458f20(0);\ncode_r0x0043c785:\n                    *(*0x20 + -0xb8) = 0x43c78a;\n                    fcn.00458f20(piVar11);\n                    unaff_RBX = piVar13;\ncode_r0x0043c78a:\n                    *(*0x20 + -0xb8) = 0x43c792;\n                    fcn.00458f20(piVar11);\ncode_r0x0043c792:\n                    *(*0x20 + -0xb8) = 0x43c79a;\n                    fcn.00458fa0(unaff_RBX, piVar5);\ncode_r0x0043c79a:\n                    *(*0x20 + -0xb8) = 0x43c7a5;\n                    fcn.00458fa0(unaff_RBX, piVar5);\n                }\n                *(*0x20 + -0xb8) = 0x43c7ad;\n                fcn.00458fa0(unaff_RSI, piVar5);\n            }\n            unaff_RBX = 0x17;\n            *(*0x20 + -0xb8) = 0x43c7be;\n            in_EAX = fcn.00430040();\n        }\n        *(puVar15 + 8) = in_EAX;\n        *(puVar15 + -8) = 0x43c7c8;\n        fcn.004568e0();\n        in_EAX = *(puVar15 + 8);\n        *0x20 = puVar15;\n    } while( true );\n}\n",
        "token_count": 5120
    },
    "0043c7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c7e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0043c840();\n    fcn.00411e00();\n    if (*0x4f6bd0 != '\\0') {\n        fcn.0044c300();\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "0043c840": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c840(void)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n        fcn.00430040();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((*(in_RAX + 0x38) == 0) && (*(in_RAX + 4) == 0)) {\n        *(*(unaff_R14 + 0x30) + 0xa0) = in_RAX;\n        *(in_RAX + 0x38) = *(unaff_R14 + 0x30);\n        *(in_RAX + 4) = 1;\n        return;\n    }\n    do {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00431be0();\n        fcn.00431a00();\n        fcn.00430040();\n    } while( true );\n}\n",
        "token_count": 281
    },
    "0043c960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043c960(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(unaff_R14 + 0x30);\n            iVar3 = *(iVar1 + 0xa0);\n            if (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x18) = iVar3;\n                iVar2 = *(iVar3 + 0x38);\n                *(*0x20 + -0x30) = iVar2;\n                if ((iVar2 == iVar1) && (*(iVar3 + 4) == 1)) {\n                    *(*0x20 + -0x20) = unaff_R14;\n                    if (*0x4f6bd0 != '\\0') {\n                        *(*0x20 + -0x48) = 0x43c9be;\n                        fcn.0044c360();\n                        iVar3 = *(*0x20 + -0x18);\n                    }\n                    *(*(*(*0x20 + -0x20) + 0x30) + 0xa0) = 0;\n                    *(iVar3 + 0x38) = 0;\n                    *(iVar3 + 4) = 0;\n                    return;\n                }\n                *(*0x20 + -0x28) = *(iVar3 + 4);\n                *(*0x20 + -0x48) = 0x43c9fd;\n                fcn.00431980();\n                *(*0x20 + -0x48) = 0x43ca0e;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x43ca18;\n                fcn.00432200();\n                *(*0x20 + -0x48) = 0x43ca29;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x43ca33;\n                fcn.00432200();\n                *(*0x20 + -0x48) = 0x43ca45;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x43ca4f;\n                fcn.004320e0();\n                *(*0x20 + -0x48) = 0x43ca65;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x43ca6f;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x43ca74;\n                fcn.00431be0();\n                *(*0x20 + -0x48) = 0x43ca79;\n                fcn.00431a00();\n                *(*0x20 + -0x48) = 0x43ca8a;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x48) = 0x43ca9b;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x43caa5;\n        fcn.004568e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 833
    },
    "0043cb20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043cb20(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*0x5449e9 != '\\0') || (*0x5449e7 != '\\0')) {\n                return;\n            }\n            if (*0x544a44 != 0) {\n                return;\n            }\n            if (*0x5449e8 == '\\0') {\n                if (*0x5449e2 == '\\0') {\n                    uVar3 = 0;\n                }\n                else {\n                    *(*0x20 + -0x50) = 0x43cb8c;\n                    *0x544ab8 = fcn.00435ee0();\n                    uVar3 = *0x544a0c != 0;\n                }\n            }\n            else {\n                uVar3 = 0;\n            }\n            uVar5 = *0x4f26c8;\n            iVar6 = (((*0x4f26d0 - *0x4f26e0) - *0x4f26c8) - *0x4f26cc) - *0x4f26dc;\n            if (uVar3 < iVar6) {\n                return;\n            }\n            if (-1 < iVar6) {\n                *(*0x20 + -0x28) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x43ce40;\n                *(*0x20 + -0x10) = *0x20 + -0x28;\n                *(*0x20 + -0x50) = 0x43cc17;\n                fcn.00433660();\n                if (*(*0x20 + -0x28) == 0) {\n                    *(*0x20 + -0x50) = 0x43cc2d;\n                    fcn.00409a80();\n                    *(*0x20 + -0x50) = 0x43cc3e;\n                    fcn.00430140();\n                }\n                if (*0x544ac0 != 0) {\n                    *(*0x20 + -0x50) = 0x43cc4d;\n                    iVar1 = fcn.0044ab60();\n                    iVar4 = 0x7fffffffffffffff;\n                    if (iVar1 < 0x7fffffffffffffff) {\n                        *(*0x20 + -0x50) = 0x43cc7d;\n                        *0x544ac0 = iVar1;\n                        iVar2 = fcn.0043e5e0();\n                        iVar6 = *0x4f26fc;\n                        iVar1 = *0x4f26c0;\n                        if (iVar2 != 0) {\n                            if (*0x4f26c0 != 0) {\n                                *0x4f26c8 = *0x4f26c8 - 1;\n                                LOCK();\n                                *0x4f26fc = *0x4f26fc + 1;\n                                puVar7 = *0x4f26c0 + 0xe4;\n                                *0x4f26c0 = *(*0x4f26c0 + 0x128);\n                                *puVar7 = 1;\n                                *(iVar1 + 0xa8) = iVar2;\n                                *(*0x20 + -0x50) = 0x43ccdb;\n                                fcn.00409b60(iVar1, iVar6);\n                                return;\n                            }\n                            *(*0x20 + -0x50) = 0x43cd14;\n                            iVar4 = *0x4f26c0;\n                            fcn.00430040();\n                        }\n                        *(*0x20 + -0x50) = 0x43cd25;\n                        iVar1 = fcn.00430040();\n                        goto code_r0x0043cd25;\n                    }\n                }\n                iVar1 = 0;\n                iVar4 = *0x4f1c70;\n                uVar5 = *0x4f1c78;\n                while( true ) {\n                    if (uVar5 <= iVar1) {\n                        *(*0x20 + -0x50) = 0x43cd55;\n                        fcn.00409a80();\n                        *(*0x20 + -0x50) = 0x43cd66;\n                        fcn.00430140();\n                        return;\n                    }\n                    if (*(*(iVar4 + iVar1 * 8) + 0x2288) != 0) break;\ncode_r0x0043cd25:\n                    iVar1 = iVar1 + 1;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = *0x4f26d0 - *0x4f26e0;\n            *(*0x20 + -0x2c) = *0x4f26c8;\n            *(*0x20 + -0x30) = *0x4f26cc;\n            *(*0x20 + -0x34) = *0x4f26dc;\n            *(*0x20 + -0x50) = 0x43cd87;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x43cd98;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x43cda5;\n            fcn.00432080();\n            *(*0x20 + -0x50) = 0x43cdb6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x43cdc5;\n            fcn.00432080();\n            *(*0x20 + -0x50) = 0x43cdd6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x43cde5;\n            fcn.00432080();\n            *(*0x20 + -0x50) = 0x43cdf6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x43ce05;\n            fcn.00432080();\n            *(*0x20 + -0x50) = 0x43ce0a;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x43ce0f;\n            fcn.00431a00();\n            *(*0x20 + -0x50) = 0x43ce25;\n            fcn.00430040();\n        }\n        *(puVar7 + -8) = 0x43ce2b;\n        fcn.004568e0();\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1643
    },
    "0043d3c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0043d3c0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    bool bVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar5 = 0;\n    for (iVar4 = 0; iVar4 < *0x4f1c78; iVar4 = iVar4 + 1) {\n        iVar2 = *(*0x4f1c70 + iVar4 * 8);\n        if (iVar2 != 0) {\n            iVar1 = *(iVar2 + 4);\n            if ((iVar1 == 1) || (iVar1 == 2)) {\n                if (*(iVar2 + 0x18) == *(iVar2 + 0x10)) {\n                    iVar6 = *(iVar2 + 0x20) + 10000000;\n                    if (iVar6 <= in_RAX) {\n                        fcn.0043d6a0();\n                    }\n                    bVar3 = iVar6 <= in_RAX;\n                }\n                else {\n                    *(iVar2 + 0x18) = *(iVar2 + 0x10);\n                    *(iVar2 + 0x20) = in_RAX;\n                    bVar3 = false;\n                }\n            }\n            else {\n                bVar3 = false;\n            }\n            if (iVar1 == 2) {\n                if ((bVar3) || (*(iVar2 + 0x28) == *(iVar2 + 0x14))) {\n                    do {\n                    } while (*(iVar2 + 0x194) != *(iVar2 + 0x194));\n                    if (*(iVar2 + 0x194) == *(iVar2 + 400)) {\n                        if (*(iVar2 + 0x998) == 0) {\n                            bVar3 = 0 < *0x4f26fc + *0x4f26f8;\n                        }\n                        else {\n                            bVar3 = false;\n                        }\n                    }\n                    else {\n                        bVar3 = false;\n                    }\n                    if ((!bVar3) || (*(iVar2 + 0x30) + 10000000 <= in_RAX)) {\n                        fcn.00409a80();\n                        fcn.0043cac0();\n                        LOCK();\n                        if (*(iVar2 + 4) == 2) {\n                            *(iVar2 + 4) = 0;\n                            if (*0x4f6bd0 != '\\0') {\n                                fcn.0044cae0();\n                                fcn.0044c360();\n                            }\n                            *(iVar2 + 0x14) = *(iVar2 + 0x14) + 1;\n                            fcn.00436860();\n                            iVar5 = iVar5 + 1;\n                        }\n                        fcn.0043cac0();\n                        fcn.00409860();\n                    }\n                }\n                else {\n                    *(iVar2 + 0x28) = *(iVar2 + 0x14);\n                    *(iVar2 + 0x30) = in_RAX;\n                }\n            }\n        }\n    }\n    fcn.00409a80();\n    return iVar5;\n}\n",
        "token_count": 754
    },
    "0043d600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043d600(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x4f1c78,  iVar1 = *0x4f1c70,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar5 = 0;\n    for (iVar4 = 0; iVar4 < iVar2; iVar4 = iVar4 + 1) {\n        if (*(*(iVar1 + iVar4 * 8) + 4) == 1) {\n            uVar3 = fcn.0043d6a0();\n            uVar5 = uVar5 & 0xff | uVar3;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 233
    },
    "0043d6a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0043d6a0(void)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(in_RAX + 0x38);\n    if ((piVar1 != NULL) && (*(unaff_R14 + 0x30) != piVar1)) {\n        iVar2 = piVar1[0x12];\n        if ((iVar2 != 0) && (*piVar1 != iVar2)) {\n            *(iVar2 + 0xb1) = 1;\n            *(iVar2 + 0x10) = 0xfffffffffffffade;\n            if (*0x544e98 == 0) {\n                *(in_RAX + 0x22c0) = 1;\n                fcn.0042daa0();\n            }\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "0043d740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043d740(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    char in_AL;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    int64_t iStack176;\n    int64_t iStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    while (&iStack48 < *(unaff_R14 + 0x10) || &iStack48 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0045a8a0();\n    if (*0x544b98 == 0) {\n        *0x544b98 = iStack176;\n    }\n    fcn.00409860();\n    iVar4 = *0x544b98;\n    uVar1 = *0x4f26f8;\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432080(iStack176 - iVar4 >> 0x3f, (iStack176 - iVar4) / 1000000);\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00432080(uVar1);\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00431a00();\n    if (in_AL != '\\0') {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431c20();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431c20();\n        fcn.00431be0();\n        fcn.00431a00();\n    }\n    iVar3 = *0x4f1c78;\n    iStack16 = *0x4f1c70;\n    for (iVar4 = 0; iVar4 < iVar3; iVar4 = iVar4 + 1) {\n        iVar2 = *(iStack16 + iVar4 * 8);\n        uVar1 = *(iVar2 + 400);\n        if (in_AL == '\\0') {\n            fcn.00431980();\n            fcn.00431ba0();\n            fcn.00431a00();\n            if (iVar4 == 0) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n            }\n            fcn.00431980();\n            fcn.00431f80(uVar1);\n            fcn.00431a00();\n            if (iVar4 == *0x4f1c78 + -1) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n            }\n        }\n        else {\n            iStack48 = iVar2;\n            iStack24 = *(iVar2 + 0x38);\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00432080();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00432280();\n            fcn.00431a00();\n            if (iStack24 == 0) {\n                fcn.00431980();\n                fcn.00432280();\n                fcn.00431a00();\n            }\n            else {\n                fcn.00431980();\n                fcn.00432080();\n                fcn.00431a00();\n            }\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431f80(uVar1);\n            fcn.00432280();\n            fcn.00432080();\n            fcn.00432280();\n            fcn.00432080();\n            fcn.00431be0();\n            fcn.00431a00();\n        }\n    }\n    iVar4 = *0x4f15c0;\n    if (in_AL == '\\0') {\n        fcn.00409a40();\n        return;\n    }\n    while (iVar4 != 0) {\n        iStack24 = *(iVar4 + 0xa0);\n        iStack40 = iVar4;\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        if (iStack24 == 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        else {\n            fcn.00431980();\n            fcn.00432080();\n            fcn.00431a00();\n        }\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n        if (*(iStack40 + 0x90) == 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        else {\n            fcn.00431980();\n            fcn.00431f80();\n            fcn.00431a00();\n        }\n        uStack32 = *(iStack40 + 200);\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431c20();\n        fcn.00432280();\n        fcn.00431c20();\n        fcn.00432280();\n        fcn.00431a00();\n        if (*(iStack40 + 0x130) == 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        else {\n            fcn.00431980();\n            fcn.00431f80();\n            fcn.00431a00();\n        }\n        fcn.00431980();\n        fcn.00431be0();\n        fcn.00431a00();\n        iVar4 = *(iStack40 + 0x120);\n    }\n    fcn.00433660();\n    fcn.00409a40();\n    return;\n}\n",
        "token_count": 1562
    },
    "0043eac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043eac0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t in_RAX;\n    uchar (*unaff_RBX) [16];\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = *(in_RAX + 400);\n    iVar7 = 0;\n    for (iVar6 = *(in_RAX + 0x194); (iVar2 = **unaff_RBX,  iVar2 != 0 && (iVar6 - iVar1 < 0x100)); iVar6 = iVar6 + 1) {\n        if ((iVar2 != 0) && (iVar3 = *(iVar2 + 0xa0),  **unaff_RBX = iVar3,  iVar3 == 0)) {\n            *(*unaff_RBX + 8) = 0;\n        }\n        *(in_RAX + 0x198 + iVar6 * 8) = iVar2;\n        iVar7 = iVar7 + 1;\n    }\n    *(in_RAX + 0x194) = iVar6;\n    if (**unaff_RBX != 0) {\n        fcn.00409860();\n        iVar2 = *(*unaff_RBX + 8);\n        uVar4 = **unaff_RBX;\n        uVar5 = *0x4f2708;\n        iVar3 = *0x4f2710;\n        if ((iVar2 != 0) && (*(iVar2 + 0xa0) = 0,  uVar5 = uVar4,  iVar3 = iVar2,  *0x4f2710 != 0)) {\n            *(*0x4f2710 + 0xa0) = uVar4;\n            uVar5 = *0x4f2708;\n        }\n        *0x4f2710 = iVar3;\n        *0x4f2708 = uVar5;\n        *0x4f2718 = *0x4f2718 + (arg1 - iVar7);\n        *unaff_RBX = in_XMM15;\n        fcn.00409a80();\n    }\n    return;\n}\n",
        "token_count": 558
    },
    "0043edc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0043edc0(uint64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    \n    while (uVar5 = arg1,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        arg1 = arg1 & 0xffffffff;\n    }\n    do {\n        while( true ) {\n            iVar2 = *(in_RAX + 400);\n            uVar6 = *(in_RAX + 0x194) - iVar2;\n            uVar6 = uVar6 - (uVar6 >> 1);\n            if (uVar6 == 0) break;\n            if (uVar6 < 0x81) {\n                for (uVar7 = 0; uVar7 < uVar6; uVar7 = uVar7 + 1) {\n                    *(unaff_RBX + (uVar7 + uVar5 & 0xff) * 8) = *(in_RAX + 0x198 + (uVar7 + iVar2 & 0xff) * 8);\n                }\n                LOCK();\n                if (iVar2 == *(in_RAX + 400)) {\n                    *(in_RAX + 400) = uVar6 + iVar2;\n                    return uVar6;\n                }\n            }\n        }\n        if ((unaff_DIL == '\\0') || (uVar3 = *(in_RAX + 0x998),  uVar3 == 0)) {\n            return 0;\n        }\n        if (*(in_RAX + 4) == 1) {\n            fcn.004567a0();\n            uVar5 = arg1 & 0xffffffff;\n        }\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n    } while (uVar3 != uVar4);\n    *(unaff_RBX + (uVar5 & 0xff) * 8) = uVar3;\n    return 1;\n}\n",
        "token_count": 565
    },
    "0043ef60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0043ef60(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int32_t iVar4;\n    int64_t in_RAX;\n    int32_t iVar5;\n    ulong unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x194);\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x43ef9d;\n            iVar4 = fcn.0043edc0(uVar1);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            iVar5 = iVar4 + -1 + *(*0x20 + -0xc);\n            arg1._0_1_ = iVar5;\n            iVar2 = *(*0x20 + 8);\n            uVar3 = *(iVar2 + 0x198 + arg1 * 8);\n            if (iVar4 == 1) {\n                return uVar3;\n            }\n            if ((*(*0x20 + -0xc) - *(iVar2 + 400)) + -1 + iVar4 < 0x100) {\n                *(iVar2 + 0x194) = iVar5;\n                return uVar3;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x30) = 0x43f018;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        puVar6[0x18] = arg1;\n        *(puVar6 + -8) = 0x43f02c;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1._0_1_ = puVar6[0x18];\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 594
    },
    "0043f060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f060(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t *in_RAX;\n    ulong uVar3;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 1) {\n                if (*in_RAX == 2) {\n                    return;\n                }\n                *(*0x20 + 8) = in_RAX;\n                *in_RAX = 1;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[1] && in_RAX[1] != uVar5) {\n                    *(*0x20 + -0xe8) = uVar5;\n                    *(*0x20 + -0x130) = 0x43f0d1;\n                    fcn.0043f060();\n                    in_RAX = *(*0x20 + 8);\n                    uVar5 = *(*0x20 + -0xe8) + 1;\n                }\n                if (in_RAX[2] == 0) {\n                    *in_RAX = 2;\n                    return;\n                }\n                if (*0x544c80 == '\\0') {\n                    uVar3 = 0;\n                    uVar4 = 0;\n                    uVar7 = 0;\n                }\n                else {\n                    *(*0x20 + -0x130) = 0x43f105;\n                    fcn.0045a8a0();\n                    uVar3 = *(*0x20 + -0x128);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *0x544c98;\n                    uVar7 = *0x544c90;\n                }\n                *(*0x20 + -0xe0) = uVar4;\n                *(*0x20 + -0xd8) = uVar7;\n                *(*0x20 + -0x100) = uVar3;\n                *(*0x20 + -0x18) = in_RAX + in_RAX[1] + 3;\n                uVar5 = 0;\n                while (uVar5 <= in_RAX[2] && in_RAX[2] != uVar5) {\n                    *(*0x20 + -0xf0) = uVar5;\n                    pcVar1 = *(uVar5 * 8 + *(*0x20 + -0x18));\n                    *(*0x20 + -0x130) = 0x43f18b;\n                    (*pcVar1)(uVar4);\n                    in_RAX = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0xe0);\n                    uVar3 = *(*0x20 + -0x100);\n                    uVar5 = *(*0x20 + -0xf0) + 1;\n                }\n                if (*0x544c80 == '\\0') goto code_r0x0043f353;\n                *(*0x20 + -0x130) = 0x43f1c5;\n                fcn.0045a8a0(uVar4, uVar3);\n                uVar9 = 0;\n                uVar10 = 0;\n                uVar11 = 0;\n                uVar12 = 0;\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                *(*0x20 + -0xc0) = *0x544c90;\n                *(*0x20 + -200) = *0x544c98;\n                uVar4 = *(*0x20 + -0x128);\n                *(*0x20 + -0x108) = uVar4;\n                *(*0x20 + -0x130) = 0x43f208;\n                fcn.00447600();\n                *(*0x20 + -0x130) = 0x43f20d;\n                uVar3 = fcn.00447e40();\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0xf8) = uVar4;\n                *(*0x20 + -0xb8) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0xb0) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n                *(*0x20 + -0x130) = 0x43f22b;\n                fcn.00431980();\n                *(*0x20 + -0x130) = 0x43f23c;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f24e;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f25f;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f265;\n                fcn.00431a00();\n                *(*0x20 + -0x130) = 0x43f286;\n                uVar4 = fcn.00416220(0x18);\n                *(*0x20 + -0x130) = 0x43f299;\n                uVar3 = fcn.00445fe0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x43f2ab;\n                fcn.00431980();\n                *(*0x20 + -0x130) = 0x43f2bd;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f2ce;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f2d3;\n                fcn.00431a00();\n                *(*0x20 + -0x130) = 0x43f2f2;\n                uVar4 = fcn.00416220(0x18);\n                *(*0x20 + -0x130) = 0x43f305;\n                uVar3 = fcn.00445fe0(0x18);\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + -0xd0) = uVar4;\n                *(*0x20 + -0x130) = 0x43f317;\n                fcn.00431980();\n                *(*0x20 + -0x130) = 0x43f329;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f33a;\n                fcn.00432280();\n                *(*0x20 + -0x130) = 0x43f33f;\n                fcn.00431a00();\n                uVar5 = *(*0x20 + -200) - *(*0x20 + -0xe0);\n                uVar6 = 0x17;\n                while (cVar2 = uVar5,  9 < uVar5) {\n                    uVar5 = uVar5 / 10;\n                    if (0x17 < uVar6) goto code_r0x0043f529;\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + uVar5 * -10 + '0';\n                    uVar6 = uVar6 - 1;\n                }\n                if (uVar6 < 0x18) {\n                    *(*0x20 + (uVar6 - 0xb8)) = cVar2 + '0';\n                    *(*0x20 + -0x130) = 0x43f3e5;\n                    uVar4 = fcn.00445fe0(-(uVar6 - 0x18));\n                    *(*0x20 + -0x10) = uVar4;\n                    *(*0x20 + -0xd0) = *0x20 + ((uVar6 & uVar6 - 0x18 >> 0x3f) - 0xb8);\n                    *(*0x20 + -0x130) = 0x43f3f7;\n                    fcn.00431980();\n                    *(*0x20 + -0x130) = 0x43f409;\n                    fcn.00432280();\n                    *(*0x20 + -0x130) = 0x43f41a;\n                    fcn.00432280();\n                    *(*0x20 + -0x130) = 0x43f41f;\n                    fcn.00431a00();\n                    uVar6 = *(*0x20 + -0xc0) - *(*0x20 + -0xd8);\n                    uVar5 = 0x17;\n                    while (cVar2 = uVar6,  9 < uVar6) {\n                        uVar6 = uVar6 / 10;\n                        if (0x17 < uVar5) goto code_r0x0043f50f;\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + uVar6 * -10 + '0';\n                        uVar5 = uVar5 - 1;\n                    }\n                    if (uVar5 < 0x18) {\n                        *(*0x20 + (uVar5 - 0xb8)) = cVar2 + '0';\n                        *(*0x20 + -0x130) = 0x43f4aa;\n                        uVar4 = fcn.00445fe0(-(uVar5 - 0x18));\n                        *(*0x20 + -0x10) = uVar4;\n                        *(*0x20 + -0xd0) = *0x20 + ((uVar5 & uVar5 - 0x18 >> 0x3f) - 0xb8);\n                        *(*0x20 + -0x130) = 0x43f4bc;\n                        fcn.00431980();\n                        *(*0x20 + -0x130) = 0x43f4ce;\n                        fcn.00432280();\n                        *(*0x20 + -0x130) = 0x43f4df;\n                        fcn.00432280();\n                        *(*0x20 + -0x130) = 0x43f4e5;\n                        fcn.00431a00();\n                        *(*0x20 + -0x130) = 0x43f4ea;\n                        fcn.00431980();\n                        *(*0x20 + -0x130) = 0x43f4ef;\n                        fcn.00431be0();\n                        *(*0x20 + -0x130) = 0x43f4f4;\n                        fcn.00431a00();\n                        in_RAX = *(*0x20 + 8);\ncode_r0x0043f353:\n                        *in_RAX = 2;\n                        return;\n                    }\n                    *(*0x20 + -0x130) = 0x43f50f;\n                    fcn.00458f20(0x18);\ncode_r0x0043f50f:\n                    *(*0x20 + -0x130) = 0x43f51c;\n                    fcn.00458f20(0x18);\n                }\n                *(*0x20 + -0x130) = 0x43f529;\n                fcn.00458f20(0x18);\ncode_r0x0043f529:\n                *(*0x20 + -0x130) = 0x43f536;\n                fcn.00458f20(0x18);\n            }\n            *(*0x20 + -0x130) = 0x43f547;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x43f552;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2851
    },
    "0043f560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043f560(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    uint in_EAX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = unaff_RBX;\n    *0x544a00 = in_EAX;\n    if (*0x544c10 != 0) {\n        fcn.00458bc0(arg1, arg2, arg3, arg4);\n        uVar1 = *0x4f15c8;\n    }\n    *0x4f15c8 = uVar1;\n    return;\n}\n",
        "token_count": 192
    },
    "0043f5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f6fa)\n// WARNING: Removing unreachable block (ram,0x0043f70b)\n// WARNING: Removing unreachable block (ram,0x0043f71c)\n// WARNING: Removing unreachable block (ram,0x0043f72d)\n// WARNING: Removing unreachable block (ram,0x0043f73e)\n// WARNING: Removing unreachable block (ram,0x0043f74f)\n// WARNING: Removing unreachable block (ram,0x0043f765)\n// WARNING: Removing unreachable block (ram,0x0043f776)\n// WARNING: Removing unreachable block (ram,0x0043f787)\n// WARNING: Removing unreachable block (ram,0x0043f798)\n\nulong fcn.0043f5c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    LOCK();\n    LOCK();\n    *0x544bb0 = 0x2a;\n    *0x544bb8 = 0x30000000003;\n    return 0x2a;\n}\n",
        "token_count": 285
    },
    "0043fba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0043fba0(uint64_t param_1, uint64_t param_2, int64_t param_3, int64_t param_4)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *0x544e60 = 1;\n            *0x544e80 = 1;\n            *0x544ea0 = 1;\n            *(*0x20 + -0x88) = 0x43fbe7;\n            uVar3 = fcn.00406640();\n            *0x4f1bf8 = 7;\n            if (*0x544c10 != 0) {\n                *(*0x20 + -0x88) = 0x43fc0e;\n                fcn.00458a80(param_1, param_2, param_3, param_4);\n                uVar3 = *0x4f1bf0;\n            }\n            *0x4f1bf0 = uVar3;\n            *0x4f1600 = 0x4f1bf0;\n            uVar3 = *0x4f1bf0;\n            iVar5 = *0x4f1bf8;\n            while( true ) {\n                if (iVar5 == 0) {\n                    *0x544ea4 = (*0x544ea8 | *0x544eac | *0x544eb0) != 0;\n                    *(*0x20 + -0x88) = 0x43fdf6;\n                    fcn.00406640();\n                    *(*0x20 + -0x88) = 0x43fdfb;\n                    fcn.00454a20();\n                    *0x544a54 = *0x4d926c;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar5;\n                *(*0x20 + -0x28) = uVar3;\n                *(*0x20 + -0x80) = uVar3;\n                *(*0x20 + -0x78) = iVar5;\n                *(*0x20 + -0x70) = 0x2c;\n                *(*0x20 + -0x88) = 0x43fc66;\n                fcn.00402500(uVar3, iVar5);\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                param_1 = *(*0x20 + -0x68);\n                if (param_1 < 0) {\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar9 = 0;\n                    iVar4 = 0;\n                    param_1 = *(*0x20 + -0x60);\n                }\n                else {\n                    param_2 = *(*0x20 + -0x60);\n                    if (param_2 < param_1) goto code_r0x0043fef2;\n                    if (param_2 < param_1 + 1) goto code_r0x0043feea;\n                    iVar5 = param_2 - param_1;\n                    iVar9 = iVar5 + -1;\n                    iVar7 = *(*0x20 + -0x28);\n                    iVar4 = (param_1 + 1 & -iVar9 >> 0x3f) + iVar7;\n                }\n                *(*0x20 + -0x60) = iVar9;\n                *(*0x20 + -0x10) = iVar4;\n                *(*0x20 + -0x50) = param_1;\n                *(*0x20 + -0x80) = iVar7;\n                *(*0x20 + -0x78) = param_1;\n                *(*0x20 + -0x70) = 0x3d;\n                *(*0x20 + -0x88) = 0x43fcf4;\n                fcn.00402500(param_1, iVar5);\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                arg1 = *(*0x20 + -0x68);\n                if (-1 < arg1) break;\ncode_r0x0043fc31:\n                iVar5 = *(*0x20 + -0x60);\n                uVar3 = *(*0x20 + -0x10);\n            }\n            uVar6 = *(*0x20 + -0x50);\n            param_2 = uVar6;\n            if (arg1 <= uVar6) {\n                if (arg1 + 1 <= uVar6) {\n                    iVar5 = (uVar6 - arg1) + -1;\n                    piVar1 = *(*0x20 + -0x28);\n                    if ((((arg1 == 0xe) && (*piVar1 == 0x69666f72706d656d)) && (*(piVar1 + 1) == 0x6172656c)) &&\n                       (*(piVar1 + 0xc) == 0x6574)) {\n                        *(*0x20 + -0x88) = 0x43fd85;\n                        uVar3 = fcn.004463c0();\n                        if (iVar5 != '\\0') {\n                            *0x4d9288 = uVar3;\n                        }\n                    }\n                    else {\n                        *(*0x20 + -0x58) = arg1;\n                        *(*0x20 + -0x38) = iVar5;\n                        *(*0x20 + -0x30) = (arg1 + 1 & -iVar5 >> 0x3f) + piVar1;\n                        *(*0x20 + -0x40) = *0x4ef1a8;\n                        iVar9 = *0x4ef1a0;\n                        param_3 = *0x4ef1a8;\n                        for (param_4 = 0; param_4 < param_3; param_4 = param_4 + 1) {\n                            uVar6 = *(iVar9 + 8);\n                            uVar3 = *(iVar9 + 0x10);\n                            if (uVar6 == arg1) {\n                                *(*0x20 + -0x48) = param_4;\n                                *(*0x20 + -0x18) = iVar9;\n                                *(*0x20 + -0x20) = uVar3;\n                                *(*0x20 + -0x88) = 0x43fe53;\n                                cVar2 = fcn.004023a0(uVar6, iVar5);\n                                if (cVar2 == '\\0') {\n                                    arg1 = *(*0x20 + -0x58);\n                                    iVar5 = *(*0x20 + -0x38);\n                                    iVar9 = *(*0x20 + -0x18);\n                                    param_3 = *(*0x20 + -0x40);\n                                    param_4 = *(*0x20 + -0x48);\n                                }\n                                else {\n                                    uVar3 = *(*0x20 + -0x38);\n                                    *(*0x20 + -0x88) = 0x43fe95;\n                                    iVar5 = fcn.004463c0();\n                                    if ((iVar5 == iVar5) && (uVar3 != '\\0')) {\n                                        **(*0x20 + -0x20) = iVar5;\n                                    }\n                                    arg1 = *(*0x20 + -0x58);\n                                    iVar5 = *(*0x20 + -0x38);\n                                    iVar9 = *(*0x20 + -0x18);\n                                    param_3 = *(*0x20 + -0x40);\n                                    param_4 = *(*0x20 + -0x48);\n                                }\n                            }\n                            iVar9 = iVar9 + 0x18;\n                        }\n                    }\n                    goto code_r0x0043fc31;\n                }\n                *(*0x20 + -0x88) = 0x43fee5;\n                fcn.00458fe0(uVar6);\n                arg1 = uVar6;\n            }\n            *(*0x20 + -0x88) = 0x43feea;\n            fcn.00458f60(arg1, param_2);\ncode_r0x0043feea:\n            param_1 = param_2;\n            *(*0x20 + -0x88) = 0x43fef2;\n            param_2 = param_1;\n            fcn.00458fe0(param_1);\ncode_r0x0043fef2:\n            *(*0x20 + -0x88) = 0x43fef7;\n            fcn.00458f60(param_1, param_2);\n        }\n        *(puVar8 + -8) = 0x43fefd;\n        fcn.004568e0();\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2077
    },
    "00440200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440200(void)\n\n{\n    int32_t *piVar1;\n    int64_t in_RAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            piVar1 = in_RAX + 0x28;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            iVar2 = iVar2 + -1;\n            if (-1 < iVar2) goto code_r0x00440276;\n            if ((iVar2 != -1) && (iVar2 != -0x40000001)) {\n                LOCK();\n                piVar1 = in_RAX + 0x2c;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 == 1) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x20) = 0x440250;\n                    fcn.00409860();\n                    if (*(*(*0x20 + 8) + 0x20) != 0) {\n                        *(*0x20 + -0x20) = 0x44026a;\n                        fcn.00409b60();\n                    }\n                    *(*0x20 + -0x20) = 0x440276;\n                    fcn.00409a80();\n                }\ncode_r0x00440276:\n                iVar2 = *(*(unaff_R14 + 0x30) + 0xd8);\n                *(*(unaff_R14 + 0x30) + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4402bb;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x4402c6;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 627
    },
    "004402e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004402e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong in_RDX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 0x28) != 0) {\n        fcn.00458920(arg1, in_RDX);\n        *(in_RAX + 0x28) = uStack32;\n    }\n    fcn.00432ca0();\n    return;\n}\n",
        "token_count": 154
    },
    "00440360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00440360(ulong arg1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint32_t *in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int32_t *piVar9;\n    uchar unaff_BL;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar11;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14) break;\n            unaff_BL = 0x1d;\n            *(*0x20 + -0x68) = 0x440667;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        puVar10[0x10] = unaff_BL;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        puVar10[0x28] = unaff_SIL;\n        *(puVar10 + -8) = 0x440685;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_BL = puVar10[0x10];\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_SIL = puVar10[0x28];\n        *0x20 = puVar10;\n    } while( true );\n    while( true ) {\n        uVar3 = *in_RAX;\n        if (uVar3 == 0) break;\n        LOCK();\n        if (uVar3 == *in_RAX) {\n            *in_RAX = uVar3 - 1;\n            return uVar3;\n        }\n    }\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + -0x3d) = unaff_SIL;\n    *(*0x20 + -0x3e) = unaff_BL;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + -0x68) = 0x4403d8;\n    iVar4 = fcn.00432d60(arg1, uVar3);\n    *(*0x20 + -0x18) = iVar4;\n    uVar5 = *(*0x20 + 8);\n    *(iVar4 + 0x20) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    *(iVar4 + 0x30) = 0;\n    uVar5 = uVar5 >> 3;\n    uVar7 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar5) >> 0x40, 0);\n    uVar7 = (uVar7 + uVar5 >> 1 | CARRY8(uVar7, uVar5) << 0x3f) >> 7;\n    iVar6 = uVar5 + uVar7 * -0xfb;\n    *(*0x20 + -0x28) = iVar6;\n    uVar3 = *(*0x20 + 0x18);\n    if ((*(*0x20 + 0x18) & 1) == 0) {\n        iVar8 = 0;\n    }\n    else if (*0x544a90 == 0) {\n        iVar8 = 0;\n    }\n    else {\n        *(*0x20 + -0x68) = 0x440445;\n        fcn.00458920(iVar6, uVar7);\n        iVar8 = *(*0x20 + -0x60);\n        *(*(*0x20 + -0x18) + 0x28) = 0xffffffffffffffff;\n        iVar6 = *(*0x20 + -0x28);\n        iVar4 = *(*0x20 + -0x18);\n        uVar3 = *(*0x20 + 0x18);\n    }\n    if (((uVar3 >> 1 & 1) != 0) && (*0x544b10 != 0)) {\n        if (iVar8 == 0) {\n            *(*0x20 + -0x68) = 0x44049e;\n            fcn.00458920(iVar6, 0);\n            iVar8 = *(*0x20 + -0x60);\n            iVar6 = *(*0x20 + -0x28);\n            iVar4 = *(*0x20 + -0x18);\n        }\n        *(iVar4 + 0x20) = iVar8;\n    }\n    *(*0x20 + -0x38) = iVar8;\n    iVar6 = iVar6 * 0x40;\n    *(*0x20 + -0x30) = iVar6;\n    *(*0x20 + -0x20) = iVar6 + 0x4f2d00;\n    do {\n        *(*0x20 + -0x10) = iVar6 + 0x4f2d00;\n        *(*0x20 + -0x68) = 0x440505;\n        fcn.00409860();\n        piVar9 = *(*0x20 + -0x30) + 0x4f2d10;\n        LOCK();\n        *piVar9 = *piVar9 + 1;\n        piVar2 = *(*0x20 + 8);\n        do {\n            iVar1 = *piVar2;\n            bVar11 = iVar1 == 0;\n            if (bVar11) goto code_r0x00440534;\n            *(*0x20 + -0x3c) = iVar1;\n            LOCK();\n        } while (iVar1 != *piVar2);\n        *piVar2 = iVar1 + -1;\n        bVar11 = *(*0x20 + -0x3c) == 0;\ncode_r0x00440534:\n        if (!bVar11) {\n            LOCK();\n            iVar1 = *piVar9;\n            *piVar9 = *piVar9 + -1;\n            *(*0x20 + -0x68) = 0x4405ee;\n            fcn.00409a80(iVar1);\ncode_r0x004405ee:\n            iVar4 = *(*(*0x20 + -0x18) + 0x28);\n            if (0 < iVar4) {\n                *(*0x20 + -0x68) = 0x440618;\n                fcn.00427e60(iVar4 - *(*0x20 + -0x38));\n            }\n            *(*0x20 + -0x68) = 0x440625;\n            uVar5 = fcn.00433060();\n            return uVar5;\n        }\n        *(*0x20 + -0x68) = 0x440551;\n        fcn.004408e0(*(*0x20 + -0x18));\n        *(*0x20 + -0x68) = 0x44057b;\n        fcn.00432b60(*(*0x20 + -0x3d));\n        if (*(*(*0x20 + -0x18) + 0x30) == 0) {\n            piVar2 = *(*0x20 + 8);\n            do {\n                iVar1 = *piVar2;\n                if (iVar1 == 0) goto code_r0x004405a6;\n                LOCK();\n            } while (iVar1 != *piVar2);\n            *piVar2 = iVar1 + -1;\ncode_r0x004405a6:\n            bVar11 = iVar1 != 0;\n        }\n        else {\n            bVar11 = true;\n        }\n        if (bVar11) goto code_r0x004405ee;\n        iVar6 = *(*0x20 + -0x30);\n    } while( true );\n}\n",
        "token_count": 1954
    },
    "004406c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004406c0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    int32_t *arg1_00;\n    uint64_t uVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            *in_RAX = *in_RAX + 1;\n            uVar2 = in_RAX >> 3;\n            uVar4 = SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2) >> 0x40, 0);\n            iVar6 = (uVar2 + ((uVar4 + uVar2 >> 1 | CARRY8(uVar4, uVar2) << 0x3f) >> 7) * -0xfb) * 0x40;\n            if (*(iVar6 + 0x4f2d10) == 0) {\n                return SUB168(ZEXT816(0x5197f7d73404147) * ZEXT816(uVar2), 0);\n            }\n            *(*0x20 + 0x10) = unaff_BL;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = iVar6 + 0x4f2d10;\n            *(*0x20 + -0x30) = iVar6;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x20) = iVar6 + 0x4f2d00;\n            *(*0x20 + -0x50) = 0x440753;\n            fcn.00409860();\n            if (**(*0x20 + -0x10) == 0) {\n                *(*0x20 + -0x50) = 0x440809;\n                uVar3 = fcn.00409a80();\n                return uVar3;\n            }\n            uVar3 = *(*0x20 + -0x18);\n            *(*0x20 + -0x50) = 0x440785;\n            iVar6 = fcn.00440c80(*(*0x20 + -0x30));\n            *(*0x20 + -0x28) = iVar6;\n            *(*0x20 + -0x38) = uVar3;\n            if (iVar6 != 0) {\n                LOCK();\n                **(*0x20 + -0x10) = **(*0x20 + -0x10) + -1;\n            }\n            *(*0x20 + -0x50) = 0x4407af;\n            fcn.00409a80();\n            iVar6 = *(*0x20 + -0x28);\n            if (iVar6 == 0) {\n                return 0;\n            }\n            arg1 = *(iVar6 + 0x20);\n            if (arg1 != 0) {\n                arg1 = *(*0x20 + 0x18) + 3;\n                *(*0x20 + -0x50) = 0x4407de;\n                fcn.00454540();\n                iVar6 = *(*0x20 + -0x28);\n            }\n            if (*(iVar6 + 0x30) == 0) break;\n            unaff_BL = 0x1a;\n            *(*0x20 + -0x50) = 0x4408a9;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x4408bd;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n    arg1_00 = *(*0x20 + 0x10);\n    if (*(*0x20 + 0x10) != 0) {\n        arg1_00 = *(*0x20 + -0x18);\n        do {\n            iVar1 = *arg1_00;\n            if (iVar1 == 0) goto code_r0x00440885;\n            LOCK();\n        } while (iVar1 != *arg1_00);\n        *arg1_00 = iVar1 + -1;\ncode_r0x00440885:\n        if (iVar1 != 0) {\n            *(iVar6 + 0x30) = 1;\n        }\n    }\n    *(*0x20 + -0x50) = 0x440835;\n    uVar3 = fcn.004402e0(arg1_00);\n    if ((*(*(*0x20 + -0x28) + 0x30) == 1) && (*(*(unaff_R14 + 0x30) + 0xd8) == 0)) {\n        *(*0x20 + -0x50) = 0x44085c;\n        uVar3 = fcn.00456720();\n    }\n    return uVar3;\n}\n",
        "token_count": 1290
    },
    "004408e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004408e0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *noname_1;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t *piVar4;\n    int64_t **unaff_RDI;\n    int64_t **arg3;\n    int64_t *arg4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x004408e0:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x20;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        piVar4 = arg1 + 1;\n        if (*0x544c10 == 0) {\n            *arg1 = unaff_R14;\n            arg1[3] = unaff_RBX;\n            *(arg1 + 1) = in_XMM15;\n        }\n        else {\n            uVar5 = unaff_RDI & 0xffffffff;\n            *(*0x20 + -0x28) = 0x44092a;\n            fcn.00458c20(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x440936;\n            fcn.00458bc0(arg1, piVar4, uVar5, arg1 + 3);\n            *(*0x20 + -0x28) = 0x440945;\n            fcn.00458c20(arg1, piVar4, uVar5);\n            *(*0x20 + -0x28) = 0x44094d;\n            in_RAX = fcn.00458c20(arg1, piVar4, uVar5);\n            unaff_RDI = uVar5 & 0xffffffff;\n        }\n        arg3 = in_RAX + 8;\n        piVar1 = *(in_RAX + 8);\n        noname_1 = NULL;\n        while (arg4 = piVar1,  arg4 != NULL) {\n            if (unaff_RBX == arg4[3]) {\n                if (unaff_RDI == '\\0') {\n                    if (arg4[9] == 0) {\n                        if (*0x544c10 == 0) {\n                            arg4[8] = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x440b37;\n                            fcn.00458b80(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    else if (*0x544c10 == 0) {\n                        *(arg4[9] + 0x40) = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440b1d;\n                        fcn.00458b80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x544c10 == 0) {\n                        arg4[9] = arg1;\n                        arg1[8] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440b59;\n                        fcn.00458b80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x440b65;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                else {\n                    if (*0x544c10 == 0) {\n                        *arg3 = arg1;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4409b1;\n                        fcn.00458b80(arg1, piVar4, arg3, arg4);\n                    }\n                    *(arg1 + 6) = *(arg4 + 6);\n                    arg1[4] = arg4[4];\n                    if (*0x544c10 == 0) {\n                        arg1[7] = arg4[7];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4409dc;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                    iVar2 = arg4[2];\n                    if (*0x544c10 == 0) {\n                        arg1[2] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x4409fa;\n                        iVar2 = fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (*0x544c10 == 0) {\n                        arg1[1] = arg4[1];\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440a1b;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 != 0) {\n                        if (*0x544c10 == 0) {\n                            *(iVar2 + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x440a3d;\n                            fcn.00458b80(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (arg1[1] != 0) {\n                        if (*0x544c10 == 0) {\n                            *(arg1[1] + 0x38) = arg1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x440a5e;\n                            fcn.00458b80(arg1, piVar4, arg3, arg4);\n                        }\n                    }\n                    if (*0x544c10 == 0) {\n                        arg1[8] = arg4;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440a76;\n                        fcn.00458c20(arg1, piVar4, arg3);\n                    }\n                    iVar2 = arg4[9];\n                    if (*0x544c10 == 0) {\n                        arg1[9] = iVar2;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440a92;\n                        iVar2 = fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                    if (iVar2 == 0) {\n                        if (*0x544c10 == 0) {\n                            arg1[9] = arg4;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x440aad;\n                            fcn.00458c20(arg1, piVar4, arg3);\n                        }\n                    }\n                    if (*0x544c10 == 0) {\n                        arg4[7] = 0;\n                        *(arg4 + 1) = in_XMM15;\n                        arg4[9] = 0;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x440adb;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x440ae5;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x440aee;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                        *(*0x20 + -0x28) = 0x440af7;\n                        fcn.00458a80(arg1, piVar4, arg3, arg4);\n                    }\n                }\n                return;\n            }\n            if (unaff_RBX < arg4[3]) {\n                arg3 = arg4 + 2;\n            }\n            else {\n                arg3 = arg4 + 1;\n            }\n            noname_1 = arg4;\n            piVar1 = *arg3;\n        }\n        unaff_RDI = *(unaff_R14 + 0x30);\n        piVar4 = unaff_RDI[0x1e] + 0xa0761d6478bd642f;\n        uVar5 = piVar4 ^ 0xe7037ed1a0b428db;\n        unaff_RDI[0x1e] = piVar4;\n        *(arg1 + 6) = SUB164(ZEXT816(piVar4) * ZEXT816(uVar5), 0) ^ SUB164(ZEXT816(piVar4) * ZEXT816(uVar5) >> 0x40, 0)\n                      | 1;\n        if (*0x544c10 == 0) {\n            arg1[7] = noname_1;\n            *arg3 = arg1;\n        }\n        else {\n            *(*0x20 + -0x28) = 0x440bcb;\n            unaff_RDI = arg3;\n            fcn.00458ba0(arg1, noname_1, arg3, uVar5);\n            *(*0x20 + -0x28) = 0x440bd3;\n            arg3 = unaff_RDI;\n            fcn.00458b80(arg1, noname_1, unaff_RDI, uVar5);\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = in_RAX;\n        do {\n            iVar2 = arg1[7];\n            if ((iVar2 == 0) || (*(iVar2 + 0x30) <= *(arg1 + 6))) {\n                return;\n            }\n            if (*(iVar2 + 0x10) == arg1) {\n                *(*0x20 + -0x28) = 0x440c25;\n                fcn.00441140(arg1, iVar2, arg3, uVar5);\n            }\n            else {\n                if (*(iVar2 + 8) != arg1) goto code_r0x00440c31;\n                *(*0x20 + -0x28) = 0x440c17;\n                fcn.00440fe0(arg1, iVar2, arg3, uVar5);\n            }\n            arg1 = *(*0x20 + 0x18);\n        } while( true );\n    }\n    goto code_r0x00440c46;\ncode_r0x00440c31:\n    unaff_RBX = 0x48f810;\n    *(*0x20 + -0x28) = 0x440c45;\n    in_RAX = fcn.0042f8a0();\ncode_r0x00440c46:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    puVar3[0x20] = unaff_RDI;\n    *(puVar3 + -8) = 0x440c5f;\n    fcn.004568e0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = puVar3[0x20];\n    *0x20 = puVar3;\n    goto code_r0x004408e0;\n}\n",
        "token_count": 2621
    },
    "00440c80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00440c80(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    int64_t *arg2;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t noname_0;\n    int64_t noname_1;\n    ulong uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    arg2 = in_RAX + 8;\n    noname_0 = *(in_RAX + 8);\n    piVar5 = arg2;\n    while( true ) {\n        if (noname_0 == 0) {\n            return 0;\n        }\n        if (unaff_RBX == *(noname_0 + 0x18)) break;\n        if (unaff_RBX < *(noname_0 + 0x18)) {\n            piVar5 = noname_0 + 0x10;\n        }\n        else {\n            piVar5 = noname_0 + 8;\n        }\n        noname_0 = *piVar5;\n        param_3 = unaff_RBX;\n    }\n    if (*(noname_0 + 0x20) == 0) {\n        uStack56 = 0;\n    }\n    else {\n        fcn.00458920(noname_0, arg2);\n        in_XMM15_Da = 0;\n        in_XMM15_Db = 0;\n        in_XMM15_Dc = 0;\n        in_XMM15_Dd = 0;\n    }\n    iVar3 = *(noname_0 + 0x40);\n    if (iVar3 == 0) {\n        while( true ) {\n            while (*(noname_0 + 8) != 0) {\n                if ((*(noname_0 + 0x10) != 0) &&\n                   (uVar2 = *(*(noname_0 + 0x10) + 0x30),  puVar1 = *(noname_0 + 8) + 0x30, \n                   uVar2 <= *puVar1 && *puVar1 != uVar2)) goto code_r0x00440f22;\n                fcn.00440fe0(noname_0, arg2, param_3, param_4);\n            }\n            if (*(noname_0 + 0x10) == 0) break;\ncode_r0x00440f22:\n            fcn.00441140(noname_0, arg2, param_3, param_4);\n        }\n        iVar3 = *(noname_0 + 0x38);\n        if (iVar3 == 0) {\n            if (*0x544c10 == 0) {\n                *(in_RAX + 8) = 0;\n            }\n            else {\n                fcn.00458ba0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*(iVar3 + 0x10) == noname_0) {\n            if (*0x544c10 == 0) {\n                *(iVar3 + 0x10) = 0;\n            }\n            else {\n                fcn.00458ba0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x544c10 == 0) {\n            *(iVar3 + 8) = 0;\n        }\n        else {\n            fcn.00458ba0(noname_0, 0, param_3, param_4);\n        }\n    }\n    else {\n        if (*0x544c10 == 0) {\n            *piVar5 = iVar3;\n        }\n        else {\n            fcn.00458be0(noname_0, arg2, param_3, param_4);\n        }\n        *(iVar3 + 0x30) = *(noname_0 + 0x30);\n        noname_1 = *(noname_0 + 0x38);\n        if (*0x544c10 == 0) {\n            *(iVar3 + 0x38) = noname_1;\n        }\n        else {\n            fcn.00458ba0(noname_0, noname_1, param_3, param_4);\n        }\n        iVar4 = *(noname_0 + 0x10);\n        if (*0x544c10 == 0) {\n            *(iVar3 + 0x10) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 0x10;\n            iVar4 = fcn.00458a80(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x544c10 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.00458be0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        iVar4 = *(noname_0 + 8);\n        if (*0x544c10 == 0) {\n            *(iVar3 + 8) = iVar4;\n        }\n        else {\n            noname_1 = iVar3 + 8;\n            iVar4 = fcn.00458a80(noname_0, noname_1, param_3, param_4);\n        }\n        if (iVar4 != 0) {\n            if (*0x544c10 == 0) {\n                *(iVar4 + 0x38) = iVar3;\n            }\n            else {\n                fcn.00458be0(noname_0, noname_1, param_3, param_4);\n            }\n        }\n        if (*(iVar3 + 0x40) == 0) {\n            if (*0x544c10 == 0) {\n                *(iVar3 + 0x48) = 0;\n            }\n            else {\n                fcn.00458ba0(noname_0, 0, param_3, param_4);\n            }\n        }\n        else if (*0x544c10 == 0) {\n            *(iVar3 + 0x48) = *(noname_0 + 0x48);\n        }\n        else {\n            fcn.00458ba0(noname_0, *(noname_0 + 0x48), param_3, param_4);\n        }\n        *(iVar3 + 0x20) = uStack56;\n        if (*0x544c10 == 0) {\n            *(noname_0 + 0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n        }\n        else {\n            uVar6 = 0;\n            fcn.00458ba0(noname_0, 0, param_3, param_4);\n            fcn.00458ba0(noname_0, uVar6, param_3, param_4);\n        }\n    }\n    if (*0x544c10 == 0) {\n        *(noname_0 + 0x38) = 0;\n        *(noname_0 + 0x18) = 0;\n        *(noname_0 + 8) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n    }\n    else {\n        uVar6 = 0;\n        fcn.00458ba0(noname_0, 0, param_3, param_4);\n        fcn.00458be0(noname_0, uVar6, param_3, param_4);\n        fcn.00458ba0(noname_0, uVar6, param_3, param_4);\n        fcn.00458ba0(noname_0, uVar6, param_3, param_4);\n    }\n    *(noname_0 + 0x30) = 0;\n    return noname_0;\n}\n",
        "token_count": 1908
    },
    "00440fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00440fe0(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 8);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 0x10);\n            if (*0x544c10 == 0) {\n                *(arg3 + 0x10) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 8) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44102a;\n                fcn.00458bc0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x441033;\n                fcn.00458c00(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44103c;\n                in_RAX = fcn.00458ba0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x544c10 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x441065;\n                    in_RAX = fcn.00458bc0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x544c10 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x441086;\n                in_RAX = fcn.00458b80(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4410fa;\n                fcn.00458b80(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x544c10 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x4410b2;\n                fcn.00458b80(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x544c10 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x4410d8;\n                    fcn.00458b80(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x20) = 0x441115;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x441125;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1045
    },
    "00441140": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441140(ulong noname_0, ulong noname_1, int64_t noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    int64_t arg1;\n    int64_t arg2;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t arg3;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            arg3 = *(unaff_RBX + 0x10);\n            arg1 = *(unaff_RBX + 0x38);\n            arg2 = *(arg3 + 8);\n            if (*0x544c10 == 0) {\n                *(arg3 + 8) = unaff_RBX;\n                *(unaff_RBX + 0x38) = arg3;\n                *(unaff_RBX + 0x10) = arg2;\n            }\n            else {\n                *(*0x20 + -0x20) = 0x44118a;\n                fcn.00458bc0(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x441193;\n                fcn.00458c00(arg1, arg2, arg3, arg4);\n                *(*0x20 + -0x20) = 0x44119c;\n                in_RAX = fcn.00458ba0(arg1, arg2, arg3, arg4);\n                noname_2 = arg3;\n            }\n            if (arg2 != 0) {\n                if (*0x544c10 == 0) {\n                    *(arg2 + 0x38) = unaff_RBX;\n                }\n                else {\n                    arg2 = arg2 + 0x38;\n                    *(*0x20 + -0x20) = 0x4411c5;\n                    in_RAX = fcn.00458bc0(arg1, arg2, noname_2, arg4);\n                }\n            }\n            if (*0x544c10 == 0) {\n                *(arg3 + 0x38) = arg1;\n            }\n            else {\n                arg2 = arg3 + 0x38;\n                *(*0x20 + -0x20) = 0x4411e6;\n                in_RAX = fcn.00458b80(arg1, arg2, noname_2, arg4);\n            }\n            if (arg1 == 0) {\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 8) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x44125a;\n                fcn.00458b80(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 0x10) == unaff_RBX) {\n                if (*0x544c10 == 0) {\n                    *(arg1 + 0x10) = arg3;\n                    return;\n                }\n                *(*0x20 + -0x20) = 0x441212;\n                fcn.00458b80(arg3, arg2, noname_2, arg4);\n                return;\n            }\n            if (*(arg1 + 8) == unaff_RBX) {\n                if (*0x544c10 == 0) {\n                    *(arg1 + 8) = arg3;\n                }\n                else {\n                    *(*0x20 + -0x20) = 0x441238;\n                    fcn.00458b80(arg3, arg2, noname_2, arg4);\n                }\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x20) = 0x441275;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x441285;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 1044
    },
    "00441460": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441460(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t *in_RAX;\n    ulong *puVar3;\n    int64_t unaff_RBX;\n    \n    if (*(unaff_RBX + 0xf8) < *0x4d9b50) {\n        return 0;\n    }\n    if (*(unaff_RBX + 0xf8) <= *0x4d9b58) {\n        uVar1 = *in_RAX;\n        if (uVar1 < 0xc000008f) {\n            if (uVar1 < 0xc0000006) {\n                if ((uVar1 != 0x80000003) && (uVar1 != 0xc0000005)) {\n                    return 0;\n                }\n            }\n            else if (((uVar1 != 0xc000001d) && (uVar1 != 0xc000008d)) && (uVar1 != 0xc000008e)) {\n                return 0;\n            }\n        }\n        else if (uVar1 < 0xc0000092) {\n            if ((uVar1 != 0xc000008f) && (uVar1 != 0xc0000091)) {\n                return 0;\n            }\n        }\n        else if (((uVar1 != 0xc0000093) && (uVar1 != 0xc0000094)) && (uVar1 != 0xc0000095)) {\n            return 0;\n        }\n        if ((*(arg1 + 0xb7) != '\\0') || (cVar2 = fcn.00430ba0(),  cVar2 != '\\0')) {\n            fcn.00441740(arg1);\n        }\n        *(arg1 + 0xf0) = *in_RAX;\n        *(arg1 + 0x110) = *(in_RAX + 8);\n        *(arg1 + 0x118) = *(in_RAX + 10);\n        *(arg1 + 0x120) = *(unaff_RBX + 0xf8);\n        if ((*(unaff_RBX + 0xf8) != NULL) && (*(unaff_RBX + 0xf8) != fcn.00459f40)) {\n            puVar3 = *(unaff_RBX + 0x98) + -8;\n            *(unaff_RBX + 0x98) = puVar3;\n            *puVar3 = *(unaff_RBX + 0xf8);\n        }\n        *(unaff_RBX + 0xf8) = 0x458a60;\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 596
    },
    "004416e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004416e0(ulong arg1)\n\n{\n    if ((*0x5449e9 == '\\0') && (*0x5449e7 == '\\0')) {\n        if (*0x5449eb != '\\0') {\n            return 0;\n        }\n        fcn.00441740(arg1);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00441740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441740(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t *piVar2;\n    uint32_t uVar3;\n    ulong *unaff_R14;\n    ulong *puVar4;\n    \n    puVar4 = unaff_R14;\n    if (*0x544a44 != 0) {\n        fcn.0042c1c0();\n    }\n    *0x544a44 = 1;\n    *puVar4 = 0;\n    puVar4[2] = 0x13a0;\n    puVar4[3] = 0x13a0;\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431ba0();\n    fcn.004320e0();\n    fcn.00431ba0();\n    fcn.004320e0();\n    fcn.00431ba0();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    piVar2 = puVar4[6];\n    if (((*(piVar2 + 0x1d) != '\\0') && (*piVar2 == arg1)) && (piVar2[0x12] != 0)) {\n        if (*0x5449e8 != '\\0') {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        arg1 = *(puVar4[6] + 0x90);\n    }\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    *(puVar4[6] + 0xc4) = 2;\n    *(puVar4[6] + 0x98) = arg1;\n    uVar1 = *(unaff_R14[6] + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (uVar3 = *0x4d926c >> 2,  1 < *(unaff_R14[6] + 0xc4))) {\n        uVar3 = 2;\n    }\n    if (uVar3 != 0) {\n        fcn.0044f4c0(0);\n        fcn.00450440();\n        fcn.00406100();\n    }\n    fcn.0042c1c0();\n    return;\n}\n",
        "token_count": 598
    },
    "00441da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441da0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= arg1) {\n                uVar2 = *in_RAX * unaff_RBX;\n                uVar4 = uVar2;\n                goto code_r0x00441e0a;\n            }\n            uVar4 = *in_RAX;\n            *(*0x20 + -0x18) = uVar4;\n            auVar1 = ZEXT816(unaff_RBX) * ZEXT816(uVar4);\n            uVar2 = SUB168(auVar1, 0);\n            if (((SUB168(auVar1 >> 0x40, 0) == 0) && (uVar2 < 0x1000000000001)) && (-1 < unaff_RBX)) {\n                uVar4 = arg1 * *(*0x20 + -0x18);\ncode_r0x00441e0a:\n                *(*0x20 + 0x20) = unaff_RDI;\n                *(*0x20 + -0x20) = uVar4;\n                if (in_RAX[1] == 0) {\n                    *(*0x20 + -0x28) = uVar2;\n                    *(*0x20 + -0x48) = 0x441e29;\n                    iVar3 = fcn.0040b060(0);\n                    uVar4 = *(*0x20 + -0x20);\n                    if (uVar4 < *(*0x20 + -0x28)) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x441e4c;\n                        fcn.00459580(uVar4, iVar3 + uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                else {\n                    *(*0x20 + -0x48) = 0x441e65;\n                    iVar3 = fcn.0040b060(1);\n                    uVar4 = *(*0x20 + -0x20);\n                    if ((uVar4 != 0) && (*0x544c10 != '\\0')) {\n                        *(*0x20 + -0x10) = iVar3;\n                        *(*0x20 + -0x48) = 0x441e87;\n                        fcn.0040ffc0(uVar4);\n                        iVar3 = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x20);\n                    }\n                }\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x48) = 0x441ea5;\n                fcn.00459880(uVar4);\n                return *(*0x20 + -0x10);\n            }\n            unaff_RBX = 0x48f6b0;\n            *(*0x20 + -0x48) = 0x441ec8;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x441ee5;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1019
    },
    "00441fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00441fe0(char *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char *in_RAX;\n    ulong uVar3;\n    uint8_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint64_t uVar7;\n    char *unaff_RBX;\n    int64_t iVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    char **unaff_RSI;\n    int64_t unaff_RDI;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    int64_t unaff_R14;\n    \n    do {\n        puVar9 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar8 = unaff_RBX - unaff_RDI;\n            if (-1 < unaff_RBX) break;\n            unaff_RBX = 0x48f6d0;\n            *(*0x20 + -0x60) = 0x442678;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar9 + 8) = in_RAX;\n        *(puVar9 + 0x10) = unaff_RBX;\n        *(puVar9 + 0x18) = arg1;\n        *(puVar9 + 0x20) = unaff_RDI;\n        *(puVar9 + 0x28) = unaff_RSI;\n        *(puVar9 + -8) = 0x442697;\n        fcn.004568e0();\n        in_RAX = *(puVar9 + 8);\n        unaff_RBX = *(puVar9 + 0x10);\n        arg1 = *(puVar9 + 0x18);\n        unaff_RDI = *(puVar9 + 0x20);\n        unaff_RSI = *(puVar9 + 0x28);\n        *0x20 = puVar9;\n    } while( true );\n    pcVar10 = *unaff_RSI;\n    if (pcVar10 == NULL) {\n        return 0x544bd8;\n    }\n    pcVar12 = arg1 * 2;\n    pcVar5 = unaff_RBX;\n    if ((unaff_RBX == pcVar12 || SBORROW8(unaff_RBX, pcVar12) != unaff_RBX + arg1 * -2 < 0) &&\n       (pcVar5 = pcVar12,  0xff < arg1)) {\n        for (; 0 < arg1; arg1 = arg1 + (arg1 + ((arg1 + 0x300 >> 0x3f) >> 0x3e) + 0x300 >> 2)) {\n            if (unaff_RBX <= arg1) {\n                pcVar5 = arg1;\n                pcVar12 = arg1;\n                if (0 < arg1) goto code_r0x0044204e;\n                break;\n            }\n        }\n        pcVar5 = unaff_RBX;\n        pcVar12 = unaff_RBX;\n    }\ncode_r0x0044204e:\n    do {\n        if (pcVar10 == 0x1) {\n            if (0x7fff < pcVar5) {\n                pcVar10 = pcVar5;\n                if (pcVar5 <= pcVar5 + 0x2000) {\n                    pcVar10 = pcVar5 + 0x1fff & 0xffffffffffffe000;\n                }\ncode_r0x00442119:\n                pcVar5 = pcVar5 & 0xffffffffffffff00 | 0x1000000000000 < pcVar5;\n                pcVar12 = unaff_RBX;\n                pcVar11 = pcVar10;\n                goto code_r0x00442446;\n            }\n            if (0x3f8 < pcVar5) {\n                pcVar10 = pcVar5 + -0x381 >> 7;\n                if (pcVar10 < 0xf9) {\n                    pcVar12 = \n                    \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                    ;\n                    pcVar10 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                              [pcVar10];\n                    if (pcVar10 < 0x44) {\n                        pcVar10 = *(pcVar10 * 2 + 0x4d96c0);\n                        goto code_r0x00442119;\n                    }\n                    goto code_r0x004425d9;\n                }\n                goto code_r0x004425e6;\n            }\n            pcVar10 = pcVar5 + 7 >> 3;\n            if (pcVar10 < 0x81) {\n                pcVar12 = 0x4d9620;\n                pcVar10 = pcVar10[0x4d9620];\n                if (pcVar10 < 0x44) {\n                    pcVar10 = *(pcVar10 * 2 + 0x4d96c0);\n                    goto code_r0x00442119;\n                }\n                goto code_r0x004425f3;\n            }\n        }\n        else {\n            if (pcVar10 == 0x8) {\n                pcVar10 = pcVar5 * 8;\n                if (0x7fff < pcVar10) {\n                    if (pcVar10 <= pcVar10 + 0x2000) {\n                        pcVar10 = pcVar10 + 0x1fff & 0xffffffffffffe000;\n                    }\ncode_r0x004421f4:\n                    iVar8 = iVar8 << 3;\n                    pcVar12 = unaff_RBX << 3;\n                    pcVar11 = pcVar10 >> 3;\n                    pcVar5 = 0x200000000000 < pcVar5;\n                    goto code_r0x00442446;\n                }\n                if (0x3f8 < pcVar10) {\n                    pcVar6 = pcVar10 + -0x381 >> 7;\n                    if (pcVar6 < 0xf9) {\n                        pcVar12 = \n                        \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                        ;\n                        pcVar6 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                 [pcVar6];\n                        if (pcVar6 < 0x44) {\n                            pcVar10 = *(pcVar6 * 2 + 0x4d96c0);\n                            goto code_r0x004421f4;\n                        }\n                        goto code_r0x004425a5;\n                    }\n                    goto code_r0x004425b2;\n                }\n                pcVar6 = pcVar10 + 7 >> 3;\n                pcVar10 = pcVar5;\n                if (pcVar6 < 0x81) {\n                    pcVar12 = 0x4d9620;\n                    pcVar6 = pcVar6[0x4d9620];\n                    if (pcVar6 < 0x44) {\n                        pcVar10 = *(pcVar6 * 2 + 0x4d96c0);\n                        goto code_r0x004421f4;\n                    }\n                    goto code_r0x004425bf;\n                }\n            }\n            else {\n                if ((pcVar10 & pcVar10 + -1) == 0) {\n                    pcVar11 = NULL;\n                    if (pcVar10 != NULL) {\n                        for (; (pcVar10 >> pcVar11 & 1) == 0; pcVar11 = pcVar11 + 1) {\n                        }\n                    }\n                    uVar4 = pcVar11;\n                    iVar8 = iVar8 << (uVar4 & 0x3f);\n                    pcVar12 = unaff_RBX << (uVar4 & 0x3f);\n                    uVar7 = pcVar5 << (uVar4 & 0x3f);\n                    if (0x7fff < uVar7) {\n                        if (uVar7 <= uVar7 + 0x2000) {\n                            uVar7 = uVar7 + 0x1fff & 0xffffffffffffe000;\n                        }\ncode_r0x00442314:\n                        pcVar11 = uVar7 >> (uVar4 & 0x3f);\n                        pcVar10 = pcVar11 << (uVar4 & 0x3f);\n                        pcVar5 = pcVar5 & 0xffffff00 | 0x1000000000000U >> (uVar4 & 0x3f) < pcVar5;\ncode_r0x00442446:\n                        pcVar6 = 0x1000000000000;\n                        if ((pcVar5 == '\\0') && (pcVar10 < 0x1000000000001)) {\n                            *(*0x20 + 8) = in_RAX;\n                            *(*0x20 + -0x20) = unaff_RBX;\n                            *(*0x20 + -0x30) = iVar8;\n                            *(*0x20 + -0x38) = pcVar11;\n                            if (unaff_RSI[1] == NULL) {\n                                *(*0x20 + -0x28) = pcVar10;\n                                *(*0x20 + -0x40) = pcVar12;\n                                *(*0x20 + -0x60) = 0x442488;\n                                uVar3 = fcn.0040b060(0);\n                                *(*0x20 + -0x10) = uVar3;\n                                *(*0x20 + -0x60) = 0x4424a5;\n                                fcn.00459580();\n                                iVar8 = *(*0x20 + -0x30);\n                                uVar3 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + 0x28) = unaff_RSI;\n                                *(*0x20 + -0x60) = 0x4424c9;\n                                uVar3 = fcn.0040b060(1);\n                                iVar8 = *(*0x20 + -0x30);\n                                if ((iVar8 != 0) && (*0x544c10 != '\\0')) {\n                                    *(*0x20 + -0x10) = uVar3;\n                                    iVar1 = **(*0x20 + 0x28);\n                                    iVar2 = (*(*0x20 + 0x28))[1];\n                                    *(*0x20 + -0x60) = 0x4424fd;\n                                    fcn.0040ffc0((iVar8 - iVar1) + iVar2);\n                                    uVar3 = *(*0x20 + -0x10);\n                                    iVar8 = *(*0x20 + -0x30);\n                                }\n                            }\n                            *(*0x20 + -0x10) = uVar3;\n                            *(*0x20 + -0x60) = 0x442516;\n                            fcn.00459880(iVar8);\n                            return *(*0x20 + -0x10);\n                        }\n                        iVar8 = 0x48f6d0;\n                        *(*0x20 + -0x60) = 0x442545;\n                        fcn.0042f8a0();\n                        unaff_RBX = pcVar5;\n                        in_RAX = pcVar6;\ncode_r0x00442545:\n                        *(*0x20 + -0x60) = 0x44254f;\n                        fcn.00458f20(0x44);\ncode_r0x0044254f:\n                        *(*0x20 + -0x60) = 0x442559;\n                        fcn.00458f40(0xf9);\ncode_r0x00442559:\n                        *(*0x20 + -0x60) = 0x442565;\n                        fcn.00458f20(0x44);\n                        pcVar6 = unaff_RBX;\n                        pcVar11 = pcVar10;\n                        goto code_r0x00442565;\n                    }\n                    if (0x3f8 < uVar7) {\n                        pcVar6 = uVar7 - 0x381 >> 7;\n                        if (pcVar6 < 0xf9) {\n                            pcVar6 = \" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                     [pcVar6];\n                            if (pcVar6 < 0x44) {\n                                uVar7 = *(pcVar6 * 2 + 0x4d96c0);\n                                goto code_r0x00442314;\n                            }\n                            goto code_r0x0044256f;\n                        }\n                        goto code_r0x0044257c;\n                    }\n                    pcVar6 = uVar7 + 7 >> 3;\n                    if (pcVar6 < 0x81) {\n                        pcVar6 = pcVar6[0x4d9620];\n                        if (pcVar6 < 0x44) {\n                            uVar7 = *(pcVar6 * 2 + 0x4d96c0);\n                            goto code_r0x00442314;\n                        }\n                        goto code_r0x00442589;\n                    }\n                }\n                else {\n                    uVar7 = pcVar5 * pcVar10;\n                    iVar8 = iVar8 * pcVar10;\n                    pcVar12 = unaff_RBX * pcVar10;\n                    if (0x7fff < uVar7) {\n                        if (uVar7 < uVar7 + 0x2000 || uVar7 - (uVar7 + 0x2000) == 0) {\n                            uVar7 = uVar7 + 0x1fff & 0xffffffffffffe000;\n                        }\ncode_r0x00442412:\n                        *(*0x20 + -0x18) = uVar7 / pcVar10;\n                        pcVar5 = CONCAT71(SUB167(ZEXT816(pcVar5) * ZEXT816(pcVar10) >> 0x48, 0), \n                                          SUB168(ZEXT816(pcVar5) * ZEXT816(pcVar10) >> 0x40, 0) != 0);\n                        pcVar10 = pcVar10 * *(*0x20 + -0x18);\n                        pcVar11 = *(*0x20 + -0x18);\n                        goto code_r0x00442446;\n                    }\n                    if (0x3f8 < uVar7) {\n                        uVar7 = uVar7 - 0x381 >> 7;\n                        if (uVar7 < 0xf9) {\n                            if (\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                [uVar7] < 0x44) {\n                                uVar7 = *(\" !\\\"#$%%&&\\'\\'((()))*++,,,,,------....//////0001123333333333444444444455666677777888888888889999999999::::::;;;;;;;;;;;;;;;;<<<<<<<<<<<<<<<<=====>>>>>>>>>>>??????????@@@@@@@@@@@@@@@@@@@@@@AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\"\n                                          [uVar7] * 2 + 0x4d96c0);\n                                goto code_r0x00442412;\n                            }\n                            goto code_r0x00442545;\n                        }\n                        goto code_r0x0044254f;\n                    }\n                    uVar7 = uVar7 + 7 >> 3;\n                    pcVar6 = unaff_RBX;\n                    pcVar11 = pcVar10;\n                    if (uVar7 < 0x81) {\n                        uVar7 = *(uVar7 + 0x4d9620);\n                        if (uVar7 < 0x44) {\n                            uVar7 = *(uVar7 * 2 + 0x4d96c0);\n                            goto code_r0x00442412;\n                        }\n                        goto code_r0x00442559;\n                    }\ncode_r0x00442565:\n                    pcVar12 = in_RAX;\n                    *(*0x20 + -0x60) = 0x44256f;\n                    fcn.00458f40(0x81);\ncode_r0x0044256f:\n                    *(*0x20 + -0x60) = 0x44257c;\n                    fcn.00458f20(0x44);\ncode_r0x0044257c:\n                    *(*0x20 + -0x60) = 0x442589;\n                    fcn.00458f40(0xf9);\ncode_r0x00442589:\n                    *(*0x20 + -0x60) = 0x442596;\n                    fcn.00458f20(0x44);\n                }\n                *(*0x20 + -0x60) = 0x4425a5;\n                fcn.00458f40(0x81);\n                pcVar5 = pcVar11;\ncode_r0x004425a5:\n                *(*0x20 + -0x60) = 0x4425b2;\n                fcn.00458f20(0x44);\ncode_r0x004425b2:\n                *(*0x20 + -0x60) = 0x4425bf;\n                fcn.00458f40(0xf9);\ncode_r0x004425bf:\n                *(*0x20 + -0x60) = 0x4425cc;\n                fcn.00458f20(0x44);\n                pcVar10 = pcVar5;\n            }\n            *(*0x20 + -0x60) = 0x4425d9;\n            fcn.00458f40(0x81);\n            pcVar5 = pcVar6;\ncode_r0x004425d9:\n            *(*0x20 + -0x60) = 0x4425e6;\n            fcn.00458f20(0x44);\ncode_r0x004425e6:\n            *(*0x20 + -0x60) = 0x4425f3;\n            fcn.00458f40(0xf9);\ncode_r0x004425f3:\n            *(*0x20 + -0x60) = 0x442605;\n            fcn.00458f20(0x44);\n        }\n        unaff_RBX = pcVar5;\n        *(*0x20 + -0x60) = 0x442612;\n        in_RAX = fcn.00458f40(0x81);\n        pcVar5 = pcVar12;\n    } while( true );\n}\n",
        "token_count": 4422
    },
    "004426c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong * fcn.004426c0(void)\n\n{\n    uint8_t in_AL;\n    int64_t iVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_AL < 2) {\n                iVar3 = in_AL * 0x40;\n                iVar1 = *(iVar3 + 0x545028);\n                if (iVar1 != 0) goto code_r0x0044275e;\n                *(*0x20 + 8) = in_AL;\n                *(*0x20 + -0x18) = iVar3 + 0x545028;\n                *(*0x20 + -0x40) = 0x442725;\n                iVar1 = fcn.00421600();\n                if (iVar1 != 0) {\n                    if (*(iVar1 + 0x60) == 0) {\n                        if (*(iVar1 + 0x28) == 0) {\n                            *(iVar1 + 0x68) = 0x2000 << (*(*0x20 + 8) & 0x3f);\n                            puVar2 = NULL;\n                            do {\n                                if (0x7fff < puVar2) {\n                                    *(*0x20 + -0x20) = iVar1;\n                                    *(*0x20 + -0x40) = 0x4427ef;\n                                    fcn.00422c20();\n                                    iVar1 = *(*0x20 + -0x20);\ncode_r0x0044275e:\n                                    puVar2 = *(iVar1 + 0x28);\n                                    if (puVar2 != NULL) {\n                                        *(iVar1 + 0x28) = *puVar2;\n                                        *(iVar1 + 0x60) = *(iVar1 + 0x60) + 1;\n                                        if (*(iVar1 + 0x28) == 0) {\n                                            *(*0x20 + -0x10) = puVar2;\n                                            *(*0x20 + -0x40) = 0x442795;\n                                            fcn.00422aa0();\n                                            puVar2 = *(*0x20 + -0x10);\n                                        }\n                                        return puVar2;\n                                    }\n                                    *(*0x20 + -0x40) = 0x4427b8;\n                                    iVar1 = fcn.00430040();\n                                }\n                                puVar4 = *(iVar1 + 0x18) + puVar2;\n                                *puVar4 = *(iVar1 + 0x28);\n                                *(iVar1 + 0x28) = puVar4;\n                                puVar2 = puVar2 + *(iVar1 + 0x68);\n                            } while( true );\n                        }\n                        *(*0x20 + -0x40) = 0x44280f;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x40) = 0x442825;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x40) = 0x442836;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x40) = 0x442845;\n            in_AL = fcn.00458f20(2);\n        }\n        puVar5[8] = in_AL;\n        *(puVar5 + -8) = 0x44284f;\n        fcn.004568e0();\n        in_AL = puVar5[8];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 887
    },
    "00442860": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442860(void)\n\n{\n    int16_t iVar1;\n    ulong *in_RAX;\n    uint64_t uVar2;\n    uint8_t unaff_BL;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = in_RAX + 0x100000000000 >> 0x2a;\n            if (uVar2 < 0x40) {\n                iVar4 = *(*(*(uVar2 * 8 + 0x516e30) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                if (*(iVar4 + 99) == '\\x02') {\n                    *(*0x20 + -0x18) = iVar4;\n                    if (*(iVar4 + 0x28) == 0) {\n                        if (unaff_BL < 2) {\n                            *(*0x20 + 0x10) = unaff_BL;\n                            *(*0x20 + -0x10) = in_RAX;\n                            *(*0x20 + -0x38) = 0x442916;\n                            fcn.00422c20(unaff_BL * 0x40 + 8, 0x545020);\n                            unaff_BL = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar4 = *(*0x20 + -0x18);\n                            goto code_r0x00442925;\n                        }\n                    }\n                    else {\ncode_r0x00442925:\n                        *in_RAX = *(iVar4 + 0x28);\n                        *(iVar4 + 0x28) = in_RAX;\n                        iVar1 = *(iVar4 + 0x60);\n                        *(iVar4 + 0x60) = iVar1 + -1;\n                        if (*0x544a24 != 0) {\n                            return;\n                        }\n                        if (iVar1 != 1) {\n                            return;\n                        }\n                        if (unaff_BL < 2) {\n                            *(*0x20 + -0x38) = 0x442973;\n                            fcn.00422aa0(unaff_BL * 0x40 + 8, 0x545020);\n                            *(*(*0x20 + -0x18) + 0x28) = 0;\n                            *(*0x20 + -0x38) = 0x442991;\n                            fcn.004225e0(1);\n                            return;\n                        }\n                        *(*0x20 + -0x38) = 0x4429a5;\n                        fcn.00458f20(2);\n                    }\n                    *(*0x20 + -0x38) = 0x4429af;\n                    fcn.00458f20(2);\n                }\n                unaff_BL = 0x21;\n                *(*0x20 + -0x38) = 0x4429c5;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x38) = 0x4429d2;\n            in_RAX = fcn.00458f40(0x40);\n        }\n        *(puVar3 + 8) = in_RAX;\n        puVar3[0x10] = unaff_BL;\n        *(puVar3 + -8) = 0x4429e5;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_BL = puVar3[0x10];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 925
    },
    "00442a00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442a00(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = unaff_BL;\n            if (uVar4 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x18) = uVar4;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + -0x10) = uVar4 * 0x40 + 0x545020;\n                *(*0x20 + -0x40) = 0x442a51;\n                fcn.00409860();\n                uVar4 = 0;\n                puVar3 = NULL;\n                while( true ) {\n                    *(*0x20 + -0x28) = uVar4;\n                    *(*0x20 + -0x20) = puVar3;\n                    if (0x3fff < uVar4) break;\n                    *(*0x20 + -0x40) = 0x442a65;\n                    puVar3 = fcn.004426c0();\n                    *puVar3 = *(*0x20 + -0x20);\n                    uVar4 = (0x2000 << (*(*0x20 + 0x10) & 0x3f)) + *(*0x20 + -0x28);\n                }\n                *(*0x20 + -0x40) = 0x442ab4;\n                fcn.00409a80();\n                iVar1 = *(*0x20 + 8);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar1 + 0x468 + iVar2 * 0x10) = *(*0x20 + -0x20);\n                *(iVar1 + 0x470 + iVar2 * 0x10) = *(*0x20 + -0x28);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x442af5;\n            in_RAX = fcn.00458f20(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x442b05;\n        fcn.0045b2e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 702
    },
    "00442b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442b20(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    uint8_t unaff_BL;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_BL;\n            if (uVar2 < 2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + 0x10) = unaff_BL;\n                iVar4 = uVar2 * 0x10;\n                *(*0x20 + -0x18) = iVar4;\n                *(*0x20 + -0x28) = *(in_RAX + 0x468 + iVar4);\n                *(*0x20 + -0x20) = *(in_RAX + 0x470 + iVar4);\n                *(*0x20 + -0x10) = uVar2 * 0x40 + 0x545020;\n                *(*0x20 + -0x40) = 0x442b94;\n                fcn.00409860();\n                puVar3 = *(*0x20 + -0x28);\n                uVar2 = *(*0x20 + -0x20);\n                while (*(*0x20 + -0x20) = uVar2,  0x4000 < uVar2) {\n                    *(*0x20 + -0x28) = *puVar3;\n                    *(*0x20 + -0x40) = 0x442bb7;\n                    fcn.00442860();\n                    puVar3 = *(*0x20 + -0x28);\n                    uVar2 = *(*0x20 + -0x20) - (0x2000 << (*(*0x20 + 0x10) & 0x3f));\n                }\n                *(*0x20 + -0x28) = puVar3;\n                *(*0x20 + -0x40) = 0x442bef;\n                fcn.00409a80();\n                iVar4 = *(*0x20 + -0x18);\n                iVar1 = *(*0x20 + 8);\n                *(iVar1 + 0x468 + iVar4) = *(*0x20 + -0x28);\n                *(iVar1 + 0x470 + iVar4) = *(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x40) = 0x442c2a;\n            in_RAX = fcn.00458f20(2);\n        }\n        *(puVar5 + 8) = in_RAX;\n        puVar5[0x10] = unaff_BL;\n        *(puVar5 + -8) = 0x442c39;\n        fcn.0045b2e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_BL = puVar5[0x10];\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 776
    },
    "00442c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00442c60(void)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    ulong *puVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n    }\n    for (uVar1 = 0; uVar1 < 2; uVar1 = uVar1 + 1) {\n        fcn.00409860();\n        puVar2 = *(in_RAX + 0x468 + uVar1 * 0x10);\n        while (puVar2 != NULL) {\n            puVar2 = *puVar2;\n            fcn.00442860();\n        }\n        *(uVar1 * 0x10 + 0x468 + in_RAX) = in_XMM15;\n        fcn.00409a80();\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00442d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.00442d60(void)\n\n{\n    uint32_t uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        uVar1 = in_RAX;\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar11 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            piVar7 = *(unaff_R14 + 0x30);\n            if (*piVar7 == unaff_R14) {\n                if ((uVar1 - 1 & uVar1) == 0) {\n                    if (*0x544e68 != 0) {\n                        iVar3 = *0x544b48 + -1;\n                        uVar6 = -*0x544b48;\n                        piVar7 = (in_RAX & 0xffffffff) + iVar3 & uVar6;\n                        *(*0x20 + -0x18) = piVar7 & 0xffffffff;\n                        *(*0x20 + -0x78) = 0x442deb;\n                        puVar2 = fcn.004127c0();\n                        if (puVar2 != NULL) {\n                            return puVar2;\n                        }\n                        uVar10 = 0x1a;\n                        *(*0x20 + -0x78) = 0x442e14;\n                        fcn.00430040();\n                        goto code_r0x00442e14;\n                    }\n                    *(*0x20 + 8) = uVar1;\n                    if (0x7fff < uVar1) {\n                        piVar7 = in_RAX & 0xffffffff;\n                        iVar3 = 0;\n                        uVar6 = piVar7 >> 0xd;\n                        uVar10 = uVar6;\n                        for (; 1 < uVar6; uVar6 = uVar6 >> 1) {\ncode_r0x00442e14:\n                            iVar3 = iVar3 + 1;\n                        }\n                        *(*0x20 + -0x18) = uVar10;\n                        *(*0x20 + -0x20) = piVar7;\n                        *(*0x20 + -0x40) = iVar3;\n                        *(*0x20 + -0x78) = 0x442e45;\n                        fcn.00409860();\n                        if (*(*0x20 + -0x40) < 0x23) {\n                            iVar3 = *(*(*0x20 + -0x40) * 0x10 + 0x5458a8);\n                            if (iVar3 == 0) {\n                                uVar4 = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x28) = iVar3;\n                                *(*0x20 + -0x78) = 0x442e79;\n                                fcn.00422aa0();\n                                uVar4 = *(*0x20 + -0x28);\n                            }\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x78) = 0x442e91;\n                            fcn.00409a80();\n                            iVar3 = *(*0x20 + -0x48);\n                            if (iVar3 == 0) {\n                                *(*0x20 + -0x78) = 0x442eb1;\n                                iVar3 = fcn.00421600(1);\n                                if (iVar3 == 0) {\n                                    uVar10 = 0xd;\n                                    *(*0x20 + -0x78) = 0x442eee;\n                                    fcn.00430040();\n                                    goto code_r0x00442eee;\n                                }\n                                *(iVar3 + 0x68) = *(*0x20 + -0x20);\n                            }\n                            return *(iVar3 + 0x18);\n                        }\ncode_r0x00442eee:\n                        uVar9 = uVar10;\n                        uVar6 = 0x23;\n                        *(*0x20 + -0x78) = 0x442ef8;\n                        uVar1 = fcn.00458f20(0x23);\n                        goto code_r0x00442ef8;\n                    }\n                    uVar6 = in_RAX & 0xffffffff;\n                    uVar9 = 0;\n                    while( true ) {\n                        uVar5 = uVar6;\n                        uVar1 = in_RAX;\n                        if (uVar1 < 0x2001) break;\ncode_r0x00442ef8:\n                        uVar9 = uVar9 + 1;\n                        in_RAX = uVar1 >> 1;\n                    }\n                    if ((piVar7[0x14] == 0) || (piVar7[0x1a] != 0)) {\n                        if ((uVar9 & 0xff) < 2) {\n                            *(*0x20 + -0x51) = uVar9;\n                            *(*0x20 + -0x10) = (uVar9 & 0xff) * 0x40 + 0x545020;\n                            *(*0x20 + -0x78) = 0x442f47;\n                            fcn.00409860();\n                            *(*0x20 + -0x78) = 0x442f51;\n                            uVar4 = fcn.004426c0();\n                            *(*0x20 + -0x50) = uVar4;\n                            *(*0x20 + -0x78) = 0x442f65;\n                            fcn.00409a80();\n                            return *(*0x20 + -0x50);\n                        }\n                    }\n                    else {\n                        iVar3 = *(piVar7[0x14] + 0x40);\n                        if ((uVar9 & 0xff) < 2) {\n                            iVar8 = (uVar9 & 0xff) * 0x10;\n                            puVar2 = *(iVar3 + 0x468 + iVar8);\n                            if (puVar2 == NULL) {\n                                *(*0x20 + -0x38) = iVar3;\n                                *(*0x20 + -0x30) = iVar8;\n                                *(*0x20 + -0x78) = 0x442fa5;\n                                fcn.00442a00();\n                                iVar8 = *(*0x20 + -0x30);\n                                iVar3 = *(*0x20 + -0x38);\n                                puVar2 = *(iVar3 + 0x468 + iVar8);\n                                uVar5 = *(*0x20 + 8);\n                            }\n                            *(iVar3 + 0x468 + iVar8) = *puVar2;\n                            piVar7 = iVar3 + 0x470 + iVar8;\n                            *piVar7 = *piVar7 - uVar5;\n                            return puVar2;\n                        }\n                        *(*0x20 + -0x78) = 0x442ff2;\n                        fcn.00458f20(2);\n                    }\n                    *(*0x20 + -0x78) = 0x442ffc;\n                    fcn.00458f20(2);\n                }\n                *(*0x20 + -0x78) = 0x44300d;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x78) = 0x44301e;\n            uVar1 = fcn.00430040();\n        }\n        *(puVar11 + 8) = uVar1;\n        *(puVar11 + -8) = 0x443028;\n        fcn.0045b2e0();\n        in_RAX = *(puVar11 + 8);\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1806
    },
    "00443040": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443040(void)\n\n{\n    int64_t *piVar1;\n    ulong *in_RAX;\n    int32_t iVar2;\n    uint64_t uVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        iVar9 = *0x545420;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar8 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = unaff_RBX - in_RAX;\n            if ((uVar6 & uVar6 - 1) == 0) {\n                if (*0x544e68 != 0) {\n                    LOCK();\n                    *0x545420 = in_RAX + (*0x545420 - unaff_RBX);\n                    *(*0x20 + -0x80) = 0x44312e;\n                    fcn.00412a40(0x545420, iVar9);\n                    return;\n                }\n                puVar5 = in_RAX;\n                uVar7 = uVar6;\n                if (0x7fff < uVar6) {\n                    uVar6 = in_RAX + 0x100000000000 >> 0x2a;\n                    if (uVar6 < 0x40) {\n                        uVar4 = in_RAX >> 0xd;\n                        iVar9 = *(*(*(uVar6 * 8 + 0x516e30) + (in_RAX + 0x100000000000 >> 0x16 & 0xfffff) * 8) + 0x10400\n                                 + (uVar4 & 0x1ff) * 8);\n                        puVar5 = uVar4 & 0x100 | *(iVar9 + 99);\n                        if (*(iVar9 + 99) == 2) {\n                            if (*0x544a24 == 0) {\n                                *(*0x20 + -0x80) = 0x443116;\n                                fcn.004225e0(1);\n                                return;\n                            }\n                            iVar10 = 0;\n                            for (uVar6 = *(iVar9 + 0x20); 1 < uVar6; uVar6 = uVar6 >> 1) {\n                                iVar10 = iVar10 + 1;\n                            }\n                            *(*0x20 + -0x50) = iVar9;\n                            *(*0x20 + -0x48) = iVar10;\n                            *(*0x20 + -0x80) = 0x443166;\n                            fcn.00409860();\n                            if (*(*0x20 + -0x48) < 0x23) {\n                                *(*0x20 + -0x80) = 0x443189;\n                                fcn.00422c20(0x5458a8);\n                                *(*0x20 + -0x80) = 0x443197;\n                                fcn.00409a80();\n                                return;\n                            }\n                            *(*0x20 + -0x80) = 0x4431a5;\n                            in_RAX = fcn.00458f20(0x23);\n                        }\n                        *(*0x20 + -0x20) = in_RAX;\n                        *(*0x20 + -0x58) = *(iVar9 + 0x18);\n                        *(*0x20 + -0x80) = 0x4431b8;\n                        fcn.00431980();\n                        *(*0x20 + -0x80) = 0x4431c5;\n                        fcn.004320e0();\n                        *(*0x20 + -0x80) = 0x4431ca;\n                        fcn.00431ba0();\n                        *(*0x20 + -0x80) = 0x4431d4;\n                        fcn.00432200();\n                        *(*0x20 + -0x80) = 0x4431d9;\n                        fcn.00431be0();\n                        *(*0x20 + -0x80) = 0x4431de;\n                        fcn.00431a00();\n                        uVar7 = 0xe;\n                        *(*0x20 + -0x80) = 0x4431ef;\n                        fcn.00430040();\n                    }\n                    iVar2 = 0x40;\n                    *(*0x20 + -0x80) = 0x4431fc;\n                    uVar6 = fcn.00458f40(0x40);\n                    goto code_r0x004431fc;\n                }\n                *(*0x20 + -0x10) = unaff_R14;\n                uVar3 = 0;\n                for (; iVar2 = uVar3,  0x2000 < uVar7; uVar7 = uVar7 >> 1) {\ncode_r0x004431fc:\n                    uVar3 = iVar2 + 1;\n                }\n                *(*0x20 + -0x28) = puVar5;\n                iVar9 = *(*(*(*0x20 + -0x10) + 0x30) + 0xa0);\n                if ((iVar9 == 0) || (*(*(*(*0x20 + -0x10) + 0x30) + 0xd0) != 0)) {\n                    if ((uVar3 & 0xff) < 2) {\n                        *(*0x20 + -0x59) = uVar3;\n                        *(*0x20 + -0x18) = (uVar3 & 0xff) * 0x40 + 0x545020;\n                        *(*0x20 + -0x80) = 0x443259;\n                        fcn.00409860();\n                        *(*0x20 + -0x80) = 0x443268;\n                        fcn.00442860();\n                        *(*0x20 + -0x80) = 0x443274;\n                        fcn.00409a80();\n                        return;\n                    }\n                }\n                else {\n                    iVar9 = *(iVar9 + 0x40);\n                    if ((uVar3 & 0xff) < 2) {\n                        iVar10 = (uVar3 & 0xff) * 0x10;\n                        if (0x7fff < *(iVar9 + 0x470 + iVar10)) {\n                            *(*0x20 + -0x30) = uVar6;\n                            *(*0x20 + -0x40) = iVar9;\n                            *(*0x20 + -0x38) = iVar10;\n                            *(*0x20 + -0x80) = 0x4432b6;\n                            fcn.00442b20();\n                            uVar6 = *(*0x20 + -0x30);\n                            puVar5 = *(*0x20 + -0x28);\n                            iVar9 = *(*0x20 + -0x40);\n                            iVar10 = *(*0x20 + -0x38);\n                        }\n                        *puVar5 = *(iVar9 + 0x468 + iVar10);\n                        *(iVar9 + 0x468 + iVar10) = puVar5;\n                        piVar1 = iVar9 + 0x470 + iVar10;\n                        *piVar1 = *piVar1 + uVar6;\n                        return;\n                    }\n                    *(*0x20 + -0x80) = 0x4432fa;\n                    fcn.00458f20(2);\n                }\n                *(*0x20 + -0x80) = 0x443305;\n                fcn.00458f20(2);\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x80) = 0x443316;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x443326;\n        fcn.0045b2e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1910
    },
    "00443340": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443340(uint64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t in_RAX;\n    uint64_t uVar8;\n    ulong uVar9;\n    int32_t *unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    uint64_t uVar11;\n    uint32_t uVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (puVar10 = *0x20,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\ncode_r0x00443511:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + -8) = 0x44352f;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        *0x20 = puVar10;\n    }\n    puVar10 = *0x20 + -0x60;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x28) = unaff_RSI;\n    *(*0x20 + -0x10) = unaff_RSI;\n    *(*0x20 + -0x28) = in_RAX;\n    uVar3 = arg1[0x23];\n    uVar4 = *arg1;\n    uVar5 = arg1[1];\n    uVar6 = arg1[2];\n    uVar11 = *unaff_RBX;\n    *(*0x20 + -0x30) = uVar11;\n    uVar13 = 0;\n    uVar8 = in_RAX;\n    do {\n        if (uVar11 <= uVar13) {\n            return;\n        }\n        *(*0x20 + -0x40) = uVar13;\n        uVar12 = *((uVar13 >> 3) + *(unaff_RBX + 2));\n        while (uVar12 != '\\0') {\n            uVar7 = 0;\n            if (uVar12 != 0) {\n                for (; (uVar12 >> uVar7 & 1) == 0; uVar7 = uVar7 + 1) {\n                }\n            }\n            uVar12 = uVar12 & uVar12 - 1;\n            *(*0x20 + -0x49) = uVar12;\n            iVar1 = uVar7 + uVar13;\n            puVar2 = in_RAX + iVar1 * 8;\n            while( true ) {\n                uVar13 = *(in_RAX + iVar1 * 8);\n                *(*0x20 + -0x48) = uVar13;\n                if (unaff_RDI != 0) {\n                    if (uVar13 - 1 < 0xfff) {\n                        if (*0x544e80 != 0) {\n                            *(*0x20 + -0x20) = puVar2;\n                            arg1 = *(unaff_R14 + 0x30);\n                            *(arg1 + 0xf9) = 2;\n                            *(*0x20 + -0x68) = 0x443490;\n                            uVar9 = fcn.00447da0();\n                            *(*0x20 + -0x18) = uVar9;\n                            *(*0x20 + -0x38) = unaff_RSI;\n                            *(*0x20 + -0x68) = 0x44349f;\n                            fcn.00431980();\n                            *(*0x20 + -0x68) = 0x4434b0;\n                            fcn.00432280();\n                            *(*0x20 + -0x68) = 0x4434bf;\n                            fcn.00432280();\n                            *(*0x20 + -0x68) = 0x4434d0;\n                            fcn.00432280();\n                            *(*0x20 + -0x68) = 0x4434da;\n                            fcn.00432200();\n                            *(*0x20 + -0x68) = 0x4434eb;\n                            fcn.00432280();\n                            *(*0x20 + -0x68) = 0x4434f5;\n                            fcn.004320e0();\n                            *(*0x20 + -0x68) = 0x4434fa;\n                            fcn.00431be0();\n                            *(*0x20 + -0x68) = 0x4434ff;\n                            fcn.00431a00();\n                            unaff_RBX = 0x1e;\n                            *(*0x20 + -0x68) = 0x443510;\n                            in_RAX = fcn.00430040();\n                            goto code_r0x00443511;\n                        }\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                    else {\n                        uVar12 = *(*0x20 + -0x49);\n                    }\n                }\n                if ((uVar13 < uVar4) || (uVar5 <= uVar13)) goto code_r0x004433be;\n                if (uVar3 <= uVar8) {\n                    *(in_RAX + iVar1 * 8) = uVar13 + uVar6;\n                    goto code_r0x004433be;\n                }\n                LOCK();\n                uVar11 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar13 == uVar11) * (*puVar2 ^ *(*0x20 + -0x48) + uVar6);\n                if (uVar13 == uVar11) break;\n                uVar8 = *(*0x20 + -0x28);\n                unaff_RSI = *(*0x20 + -0x10);\n            }\n            uVar8 = *(*0x20 + -0x28);\n            unaff_RSI = *(*0x20 + -0x10);\ncode_r0x004433be:\n            uVar13 = *(*0x20 + -0x40);\n            uVar11 = *(*0x20 + -0x30);\n        }\n        uVar13 = uVar13 + 8;\n    } while( true );\n}\n",
        "token_count": 1590
    },
    "00443b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00443b60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    int64_t *in_RAX;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x130 && *0x20 + -0x130 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x1b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[0xe] == 0) {\n                iVar8 = in_RAX[1];\n                iVar1 = *in_RAX;\n                if (iVar1 != 0) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x130) = iVar8;\n                    *(*0x20 + -0x138) = iVar1;\n                    iVar2 = *(unaff_R14 + 0x30);\n                    *(*0x20 + -0x160) = iVar8 - in_RAX[7];\n                    iVar2 = *(iVar2 + 0xa0);\n                    *(*0x20 + -0x140) = iVar8 - iVar1;\n                    iVar8 = unaff_RBX - (iVar8 - iVar1);\n                    if (iVar2 == 0) {\n                        LOCK();\n                        uVar9 = *0x545370;\n                        *0x545370 = *0x545370 + iVar8;\n                    }\n                    else {\n                        iVar3 = *(iVar2 + 0x22a8);\n                        iVar1 = iVar3 + iVar8;\n                        *(iVar2 + 0x22a8) = iVar1;\n                        uVar9 = iVar8 + iVar3 + 0x1fff;\n                        if (0x3ffe < uVar9) {\n                            LOCK();\n                            *0x545370 = *0x545370 + iVar1;\n                            *(iVar2 + 0x22a8) = 0;\n                            uVar9 = 0x545370;\n                        }\n                    }\n                    *(*0x20 + -0x148) = unaff_RBX;\n                    *(*0x20 + -0x1b8) = 0x443c47;\n                    uVar5 = fcn.00442d60();\n                    *(*0x20 + -0x150) = uVar5;\n                    *(*0x20 + -0x158) = uVar9;\n                    *(*0x20 + -0x1c0) = unaff_RBP;\n                    *(*0x20 + -0x1b8) = 0x443c6f;\n                    fcn.00459166();\n                    uVar6 = *(*0x20 + -0x138);\n                    *(*0x20 + -0x128) = uVar6;\n                    uVar7 = *(*0x20 + -0x130);\n                    *(*0x20 + -0x120) = uVar7;\n                    *(*0x20 + -0x118) = uVar9 - uVar7;\n                    iVar8 = *(*0x20 + 8);\n                    if (*(iVar8 + 0xb8) == '\\0') {\n                        if ((*(*0x20 + -0x148) < *(*0x20 + -0x140)) &&\n                           (uVar9 = *(*0x20 + -0x148) & 0xffffffffffffff00 | *(iVar8 + 0xb9),  *(iVar8 + 0xb9) != 0)) {\n                            *(*0x20 + -0x1b8) = 0x443e88;\n                            fcn.00430040();\n                            goto code_r0x00443e88;\n                        }\n                        for (iVar8 = *(iVar8 + 0x148); iVar8 != 0; iVar8 = *(iVar8 + 0x40)) {\n                            uVar9 = *(iVar8 + 0x18);\n                            if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                               (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                                *(iVar8 + 0x18) = uVar9 + *(*0x20 + -0x118);\n                            }\n                        }\n                        iVar8 = *(*0x20 + -0x160);\n                    }\n                    else {\n                        uVar11 = 0;\n                        for (uVar9 = *(iVar8 + 0x148); uVar9 != 0; uVar9 = *(uVar9 + 0x40)) {\n                            unaff_RBX = *(*(uVar9 + 0x50) + 0x18) + *(uVar9 + 0x18);\n                            if (((unaff_RBX < uVar6) || (uVar7 <= unaff_RBX)) || (unaff_RBX <= uVar11)) {\n                                unaff_RBX = uVar11;\n                            }\ncode_r0x00443e88:\n                            uVar11 = unaff_RBX;\n                        }\n                        *(*0x20 + -0x10) = uVar11;\n                        *(*0x20 + -0x1b8) = 0x443ed5;\n                        iVar8 = fcn.004439e0(*0x20 + -0x128);\n                        iVar8 = *(*0x20 + -0x160) - iVar8;\n                    }\n                    *(*0x20 + -0x1b8) = 0x443d34;\n                    fcn.00459880(iVar8);\n                    iVar8 = *(*0x20 + 8);\n                    uVar9 = *(iVar8 + 0x50);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x50) = *(*0x20 + -0x118) + uVar9;\n                    }\n                    uVar9 = *(iVar8 + 0x68);\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        *(iVar8 + 0x68) = uVar9 + *(*0x20 + -0x118);\n                    }\n                    *(*0x20 + -0x1b8) = 0x443d9a;\n                    fcn.004438e0();\n                    piVar4 = *(*0x20 + 8);\n                    uVar9 = piVar4[4];\n                    if ((*(*0x20 + -0x128) < uVar9 || *(*0x20 + -0x128) == uVar9) &&\n                       (uVar9 <= *(*0x20 + -0x120) && *(*0x20 + -0x120) != uVar9)) {\n                        piVar4[4] = *(*0x20 + -0x118) + uVar9;\n                    }\n                    if (*(*0x20 + -0x10) != 0) {\n                        *(*0x20 + -0x10) = *(*0x20 + -0x10) + *(*0x20 + -0x118);\n                    }\n                    iVar8 = *(*0x20 + -0x150);\n                    *piVar4 = iVar8;\n                    iVar1 = *(*0x20 + -0x158);\n                    piVar4[1] = iVar1;\n                    piVar4[2] = iVar8 + 0x13a0;\n                    piVar4[7] = iVar1 - *(*0x20 + -0x160);\n                    iVar8 = *(*0x20 + -0x118);\n                    piVar4[0x10] = piVar4[0x10] + iVar8;\n                    *(*0x20 + -0x1b0) = 0;\n                    *(*0x20 + -0x1b8) = 0x443e55;\n                    fcn.0044cd80(0, iVar8, 0, 0x7fffffff);\n                    *(*0x20 + -0x1b8) = 0x443e67;\n                    fcn.00443040();\n                    return;\n                }\n                *(*0x20 + -0x1b8) = 0x443f05;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x27;\n            *(*0x20 + -0x1b8) = 0x443f16;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + -8) = 0x443f26;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2176
    },
    "00444b80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444b80(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t *arg3;\n    int64_t **in_RAX;\n    int64_t *arg1;\n    int64_t **arg2;\n    int64_t **unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX == NULL) {\n        arg1 = 0x444b60;\n    }\n    else {\n        arg1 = *unaff_RBX;\n    }\n    arg2 = *in_RAX + -1;\n    arg3 = in_RAX[1];\n    *arg2 = arg3;\n    *in_RAX = arg2;\n    in_RAX[1] = arg1;\n    if (*0x544c10 == 0) {\n        in_RAX[3] = unaff_RBX;\n    }\n    else {\n        fcn.00458bc0(arg1, arg2, arg3, arg4);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "00444c00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00444c00(void)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*in_RAX != 0) {\n                if (((*(in_RAX + 0x12) >> 0xc & 1) != 0) ||\n                   (((in_RAX == *(unaff_R14[6] + 0x90) && (unaff_R14 != *(unaff_R14[6] + 0x90))) &&\n                    (*(in_RAX + 0x12) == 2)))) {\n                    if (in_RAX[0xe] == 0) {\n                        if (*(in_RAX + 0xb4) == '\\0') {\n                            bVar5 = *(in_RAX + 0xb9) == '\\0';\n                        }\n                        else {\n                            bVar5 = false;\n                        }\n                    }\n                    else {\n                        bVar5 = false;\n                    }\n                    if (bVar5) {\n                        if ((*(unaff_R14[6] + 0x90) != in_RAX) || (*(in_RAX[6] + 0x2b0) == 0)) {\n                            if (0 < *0x544e74) {\n                                return;\n                            }\n                            *(*0x20 + 8) = in_RAX;\n                            iVar2 = in_RAX[0x27];\n                            *(*0x20 + -0x20) = 0x444ccc;\n                            iVar2 = fcn.00447600(iVar2);\n                            if ((iVar2 != 0) && (*(iVar2 + 0x28) == '\\x06')) {\n                                return;\n                            }\n                            piVar1 = *(*0x20 + 8);\n                            uVar3 = piVar1[1] - *piVar1;\n                            if (uVar3 >> 1 < 0x2000) {\n                                return;\n                            }\n                            if (uVar3 >> 2 <= (piVar1[1] - piVar1[7]) + 800U) {\n                                return;\n                            }\n                            *(*0x20 + -0x20) = 0x444d34;\n                            fcn.00443b60();\n                            return;\n                        }\n                        *(*0x20 + -0x20) = 0x444d65;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x20) = 0x444d76;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x20) = 0x444d87;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x20) = 0x444d98;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x444da5;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 804
    },
    "00444f60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444f60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    iVar5 = *0x4f1c78;\n    iVar4 = *0x4f1c70;\n    if (*0x544ea0 == 0) {\n        return;\n    }\n    uVar8 = 0;\n    uVar7 = 0;\n    for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n        iVar1 = *(iVar4 + iVar6 * 8);\n        iVar2 = *(iVar1 + 0x22b0);\n        iVar3 = *(iVar1 + 0x22b8);\n        *(iVar1 + 0x22b0) = in_XMM15_Da;\n        *(iVar1 + 0x22b4) = in_XMM15_Db;\n        *(iVar1 + 0x22b8) = in_XMM15_Dc;\n        *(iVar1 + 0x22bc) = in_XMM15_Dd;\n        uVar7 = uVar7 + iVar2;\n        uVar8 = uVar8 + iVar3;\n    }\n    if (uVar8 != 0) {\n        uVar8 = uVar7 / uVar8 + 0x13a0;\n        if (*0x4d92c8 < uVar8) {\n            uVar8 = *0x4d92c8;\n        }\n        if (uVar8 < 0x2000) {\n            uVar8 = 0x2000;\n        }\n        uVar7 = 0;\n        while (*0x4d9268 = 1 << (uVar7 & 0x1f) & -(uVar7 < 0x20),  *0x4d9268 < uVar8) {\n            uVar7 = uVar7 + 1;\n        }\n        return;\n    }\n    *0x4d9268 = 0x2000;\n    return;\n}\n",
        "token_count": 524
    },
    "00445360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00445360(uchar param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uchar auVar4 [16];\n    int32_t iVar5;\n    uint32_t **in_RAX;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    uint64_t *puVar10;\n    int64_t iVar11;\n    ulong unaff_RBX;\n    uint64_t uVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    int32_t *piVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX[3] == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x68) = in_RAX[3];\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            puVar3 = *in_RAX;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x20) = in_RAX[1];\n            uVar12 = *puVar3;\n            *(*0x20 + -0xa8) = 0x4453c9;\n            iVar6 = fcn.00447480();\n            iVar8 = *(*0x20 + -0x68);\n            if (iVar6 == iVar8) {\n                iVar5 = -1;\n            }\n            else {\n                *(*0x20 + -0x68) = iVar8 + -1;\n                uVar12 = *(*0x20 + -0x20);\n                *(*0x20 + -0xa8) = 0x445405;\n                iVar5 = fcn.004483e0(1);\n                iVar8 = *(*0x20 + -0x68);\n            }\n            *(*0x20 + -0x68) = iVar8;\n            if (iVar5 == -1) {\n                iVar5 = 0;\n            }\n            *(*0x20 + -0x74) = iVar5;\n            iVar8 = *(*0x20 + 8);\n            iVar6 = *(iVar8 + 0x38) - *(iVar8 + 0x28);\n            if (iVar6 == 0) {\n                iVar9 = 0;\n                iVar6 = 0;\n                goto code_r0x004454ee;\n            }\n            iVar11 = *(*0x20 + -0x18);\n            if (*(iVar11 + 0x2b) < 2) {\n                uVar12 = *(*0x20 + -0x20);\n                piVar14 = NULL;\n            }\n            else {\n                uVar2 = *(iVar11 + *(iVar11 + 0x1c) * 4 + 0x30);\n                uVar12 = *(*0x20 + -0x20);\n                piVar14 = uVar2 + *(uVar12 + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x60) = iVar6;\n            if ((piVar14 != NULL) && (iVar1 = *piVar14,  0 < iVar1)) {\n                iVar9 = piVar14[1];\n                if (iVar9 < 1) {\n                    iVar9 = 0;\n                    iVar6 = 0;\ncode_r0x004454ee:\n                    *(*0x20 + -0x28) = iVar6;\n                    *(*0x20 + -0x6c) = iVar9;\n                    *(*0x20 + -0xa8) = 0x4454ff;\n                    iVar5 = fcn.00445080();\n                    if (iVar5 < 1) {\n                        iVar6 = *(*0x20 + -0x18);\n                        iVar11 = *(*0x20 + -0x20);\ncode_r0x004455ee:\n                        if (iVar8 != '\\0') {\ncode_r0x00445676:\n                            return *(*0x20 + -0x6c);\n                        }\n                        if (*(iVar6 + 0x2b) < 3) {\n                            puVar10 = NULL;\n                        }\n                        else {\n                            uVar2 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x34);\n                            iVar11 = *(iVar11 + 0x140);\n                            puVar10 = uVar2 + iVar11 & (uVar2 == 0xffffffff) - 1;\n                        }\n                        if (puVar10 == NULL) goto code_r0x00445676;\n                        uVar12 = *puVar10;\n                        if (-1 < uVar12) {\n                            *(*0x20 + -0x40) = puVar10;\n                            auVar4 = ZEXT816(0x10) * ZEXT816(uVar12);\n                            if ((SUB168(auVar4 >> 0x40, 0) == 0) &&\n                               (iVar11 = *(*0x20 + -0x40) + 8,  SUB168(auVar4, 0) <= -iVar11)) goto code_r0x00445676;\n                            *(*0x20 + -0xa8) = 0x4456c5;\n                            fcn.00452d80();\n                        }\n                        *(*0x20 + -0xa8) = 0x4456ca;\n                        fcn.00452d80();\ncode_r0x004456ca:\n                        *(*0x20 + -0xa8) = 0x4456d5;\n                        uVar7 = fcn.00447da0();\n                        *(*0x20 + -0x28) = uVar7;\n                        *(*0x20 + -0x48) = iVar11;\n                        *(*0x20 + -0x50) = **(*0x20 + -0x38);\n                        *(*0x20 + -0xa8) = 0x4456f1;\n                        fcn.00431980();\n                        *(*0x20 + -0xa8) = 0x445705;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x445711;\n                        fcn.00432080(*(*0x20 + -0x74));\n                        *(*0x20 + -0xa8) = 0x445725;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x44572f;\n                        fcn.00432080();\n                        *(*0x20 + -0xa8) = 0x445745;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x445754;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x445765;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x44576f;\n                        fcn.004320e0();\n                        *(*0x20 + -0xa8) = 0x445785;\n                        fcn.00432280();\n                        *(*0x20 + -0xa8) = 0x44578a;\n                        fcn.00431a00();\n                        *(*0x20 + -0xa8) = 0x44579b;\n                        fcn.00430040();\n                    }\n                    else {\n                        if (uVar12 != 0) {\n                            iVar6 = *(*0x20 + -0x18);\n                            iVar11 = *(*0x20 + -0x20);\n                            goto code_r0x004455ee;\n                        }\n                        iVar6 = *(*0x20 + -0x18);\n                        if (*(iVar6 + 0x2b) == '\\0') {\n                            iVar11 = *(*0x20 + -0x20);\n                            piVar14 = NULL;\n                        }\n                        else {\n                            uVar2 = *(iVar6 + *(iVar6 + 0x1c) * 4 + 0x2c);\n                            iVar11 = *(*0x20 + -0x20);\n                            piVar14 = uVar2 + *(iVar11 + 0x140) & (uVar2 == 0xffffffff) - 1;\n                        }\n                        *(*0x20 + -0x70) = iVar5;\n                        if ((piVar14 != NULL) && (iVar5 = *piVar14,  0 < iVar5)) {\n                            *(*0x20 + -0x38) = piVar14;\n                            if ((-1 < *(*0x20 + -0x74)) && (*(*0x20 + -0x74) < iVar5)) goto code_r0x004455ee;\n                            goto code_r0x004456ca;\n                        }\n                    }\n                    *(*0x20 + -0xa8) = 0x4457a6;\n                    uVar7 = fcn.00447da0();\n                    *(*0x20 + -0x28) = uVar7;\n                    *(*0x20 + -0x48) = iVar11;\n                    *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x40);\n                    *(*0x20 + -0xa8) = 0x4457c6;\n                    fcn.00431980();\n                    *(*0x20 + -0xa8) = 0x4457d7;\n                    fcn.00432280();\n                    *(*0x20 + -0xa8) = 0x4457e6;\n                    fcn.00432280();\n                    *(*0x20 + -0xa8) = 0x4457f7;\n                    fcn.00432280();\n                    *(*0x20 + -0xa8) = 0x445805;\n                    fcn.004320e0();\n                    *(*0x20 + -0xa8) = 0x445816;\n                    fcn.00432280();\n                    *(*0x20 + -0xa8) = 0x445825;\n                    fcn.004320e0(*(*0x20 + -0x70) << 3);\n                    *(*0x20 + -0xa8) = 0x44582a;\n                    fcn.00431be0();\n                    *(*0x20 + -0xa8) = 0x44582f;\n                    fcn.00431a00();\n                    uVar12 = 0x10;\n                    *(*0x20 + -0xa8) = 0x445845;\n                    fcn.00430040();\n                }\n                else {\n                    *(*0x20 + -0x30) = piVar14;\n                    if ((-1 < iVar5) && (iVar5 < iVar1)) {\n                        iVar6 = piVar14 + (iVar9 + 7 >> 3) * iVar5 + 8;\n                        goto code_r0x004454ee;\n                    }\n                }\n                *(*0x20 + -0xa8) = 0x44584d;\n                uVar7 = fcn.00447da0();\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x48) = uVar12;\n                *(*0x20 + -0x50) = **(*0x20 + -0x30);\n                *(*0x20 + -0xa8) = 0x445869;\n                fcn.00431980();\n                *(*0x20 + -0xa8) = 0x44587a;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x445886;\n                fcn.00432080(*(*0x20 + -0x74));\n                *(*0x20 + -0xa8) = 0x445897;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x4458a5;\n                fcn.00432080();\n                *(*0x20 + -0xa8) = 0x4458b6;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x4458c5;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x4458d6;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x4458e5;\n                fcn.004320e0();\n                *(*0x20 + -0xa8) = 0x4458f6;\n                fcn.00432280();\n                *(*0x20 + -0xa8) = 0x4458fb;\n                fcn.00431a00();\n                uVar12 = 0x10;\n                *(*0x20 + -0xa8) = 0x44590c;\n                fcn.00430040();\n            }\n            *(*0x20 + -0xa8) = 0x445914;\n            uVar7 = fcn.00447da0();\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0x48) = uVar12;\n            *(*0x20 + -0x58) = *(*(*0x20 + 8) + 0x38);\n            *(*0x20 + -0xa8) = 0x445934;\n            fcn.00431980();\n            *(*0x20 + -0xa8) = 0x445945;\n            fcn.00432280();\n            *(*0x20 + -0xa8) = 0x445954;\n            fcn.00432280();\n            *(*0x20 + -0xa8) = 0x445965;\n            fcn.00432280();\n            param_1 = *(*0x20 + -0x60);\n            *(*0x20 + -0xa8) = 0x445977;\n            fcn.004320e0();\n            *(*0x20 + -0xa8) = 0x445988;\n            fcn.00432280();\n            *(*0x20 + -0xa8) = 0x445992;\n            fcn.004320e0();\n            *(*0x20 + -0xa8) = 0x445997;\n            fcn.00431be0();\n            *(*0x20 + -0xa8) = 0x44599c;\n            fcn.00431a00();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0xa8) = 0x4459ad;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + 0x10) = unaff_RBX;\n        puVar13[0x18] = param_1;\n        *(puVar13 + -8) = 0x4459c5;\n        fcn.004568e0();\n        in_RAX = *(puVar13 + 8);\n        unaff_RBX = *(puVar13 + 0x10);\n        param_1 = puVar13[0x18];\n        *0x20 = puVar13;\n    } while( true );\n}\n",
        "token_count": 3459
    },
    "00445b20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00445b20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t *puVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RDI;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint64_t uVar10;\n    uint64_t *unaff_R14;\n    bool bVar11;\n    \n    do {\n        puVar5 = *0x20;\n        if (unaff_R14[2] <= *0x20 && *0x20 != unaff_R14[2]) {\n            puVar5 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            unaff_RDI = 0;\n            uVar6 = 0;\n            iVar8 = 0;\n            iVar9 = unaff_RBX;\n            for (uVar7 = 0; uVar7 < arg1; uVar7 = uVar7 + 1) {\n                if (*(iVar9 + 8) != 0) {\n                    iVar1 = iVar8 + *(iVar9 + 8);\n                    if (iVar1 < iVar8) goto code_r0x00445d0d;\n                    unaff_RDI = unaff_RDI + 1;\n                    uVar6 = uVar7;\n                    iVar8 = iVar1;\n                }\n                iVar9 = iVar9 + 0x10;\n            }\n            if (unaff_RDI == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            uVar10 = unaff_RDI;\n            if (unaff_RDI == 1) {\n                if (in_RAX != 0) {\ncode_r0x00445be0:\n                    if (uVar6 < arg1) {\n                        return *(unaff_RBX + uVar6 * 0x10);\n                    }\n                    goto code_r0x00445cfd;\n                }\n                if (uVar6 < arg1) {\n                    unaff_RDI = *(unaff_RBX + uVar6 * 0x10);\n                    if ((*unaff_R14 < unaff_RDI || *unaff_R14 == unaff_RDI) &&\n                       (uVar7 = uVar6,  uVar10 = unaff_RDI,  unaff_RDI < unaff_R14[1])) goto code_r0x00445c01;\n                    goto code_r0x00445be0;\n                }\n            }\n            else {\ncode_r0x00445c01:\n                *(*0x20 + -0x70) = 0x445c09;\n                uVar2 = fcn.00446100();\n                *(*0x20 + -0x28) = uVar2;\n                *(*0x20 + -0x48) = iVar8;\n                puVar4 = *(*0x20 + -0x10);\n                iVar9 = *(*0x20 + 0x18);\n                iVar8 = 0;\n                while( true ) {\n                    if (iVar9 <= iVar8) {\n                        return uVar2;\n                    }\n                    uVar6 = puVar4[1];\n                    unaff_RDI = uVar10;\n                    if (uVar6 < uVar10) {\n                        unaff_RDI = uVar6;\n                    }\n                    if (arg1 == *puVar4) {\n                        bVar11 = uVar10 < uVar6;\n                        uVar3 = arg1;\n                        arg1 = uVar10;\n                    }\n                    else {\n                        *(*0x20 + -0x30) = iVar8;\n                        *(*0x20 + -0x18) = puVar4;\n                        *(*0x20 + -0x20) = arg1;\n                        *(*0x20 + -0x50) = uVar6;\n                        *(*0x20 + -0x40) = uVar7;\n                        *(*0x20 + -0x38) = uVar10;\n                        *(*0x20 + -0x70) = 0x445ca6;\n                        fcn.00459880(unaff_RDI);\n                        arg1 = *(*0x20 + -0x38);\n                        uVar6 = *(*0x20 + -0x50);\n                        bVar11 = arg1 < uVar6;\n                        puVar4 = *(*0x20 + -0x18);\n                        uVar7 = *(*0x20 + -0x40);\n                        iVar9 = *(*0x20 + 0x18);\n                        iVar8 = *(*0x20 + -0x30);\n                        uVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x20);\n                    }\n                    if (bVar11) break;\n                    puVar4 = puVar4 + 2;\n                    iVar8 = iVar8 + 1;\n                    uVar7 = uVar7 - uVar6;\n                    uVar10 = arg1 - uVar6;\n                    arg1 = uVar3 + (uVar6 & -uVar7 >> 0x3f);\n                }\n                *(*0x20 + -0x70) = 0x445cfd;\n                fcn.00458fe0(arg1);\ncode_r0x00445cfd:\n                *(*0x20 + -0x70) = 0x445d05;\n                fcn.00458f20(arg1);\n            }\n            *(*0x20 + -0x70) = 0x445d0d;\n            fcn.00458f20(arg1);\ncode_r0x00445d0d:\n            unaff_RBX = 0x1d;\n            *(*0x20 + -0x70) = 0x445d1e;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x445d38;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1538
    },
    "00445fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00445fe0(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    uint8_t *unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            if (arg1 == 1) {\n                arg1 = *unaff_RBX * 8 + 0x4d9ce0;\n                if (arg1 != 0) {\n                    return arg1;\n                }\n            }\n            else {\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                if ((in_RAX == 0) || (0x20 < arg1)) {\n                    *(*0x20 + -0x30) = 0x446065;\n                    in_RAX = fcn.0040b060(0);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x30) = 0x446079;\n                fcn.00459880(arg1);\n                unaff_RBX = *(*0x20 + 0x18);\n                if (-1 < unaff_RBX) {\n                    arg1 = *(*0x20 + -0x10);\n                    if (unaff_RBX <= -arg1) {\n                        return arg1;\n                    }\n                    if (arg1 != 0) {\n                        *(*0x20 + -0x30) = 0x4460ba;\n                        fcn.00452d00();\n                    }\n                    *(*0x20 + -0x30) = 0x4460bf;\n                    fcn.00452d40();\n                }\n                *(*0x20 + -0x30) = 0x4460c5;\n                fcn.00452d00();\n            }\n            *(*0x20 + -0x30) = 0x4460ca;\n            in_RAX = fcn.00452d00();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x4460df;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 698
    },
    "004464a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.004464a0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t iVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX == 0) {\n                return 0;\n            }\n            cVar1 = *(unaff_RBX + -1 + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x4465bd;\n                uVar4 = fcn.004463c0();\n                if ((unaff_RBX != '\\0') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if ((cVar1 != 'B') || (unaff_RBX < 2)) {\n                return 0;\n            }\n            cVar1 = *(unaff_RBX + -2 + in_RAX);\n            if (cVar1 - 0x30U < 10) {\n                *(*0x20 + -0x28) = 0x446589;\n                uVar4 = fcn.004463c0();\n                if ((unaff_RBX != '\\x01') && (-1 < uVar4)) {\n                    return uVar4;\n                }\n                return 0;\n            }\n            if (cVar1 != 'i') {\n                return 0;\n            }\n            if (unaff_RBX < 4) {\n                return 0;\n            }\n            uVar2 = *(unaff_RBX + -3 + in_RAX);\n            if (uVar2 < 0x4c) {\n                if (uVar2 == 0x47) {\n                    iVar5 = 3;\n                }\n                else {\n                    if (uVar2 != 0x4b) {\n                        return 0;\n                    }\n                    iVar5 = 1;\n                }\n            }\n            else if (uVar2 == 0x4d) {\n                iVar5 = 2;\n            }\n            else {\n                if (uVar2 != 0x54) {\n                    return 0;\n                }\n                iVar5 = 4;\n            }\n            iVar8 = 1;\n            for (iVar6 = 0; iVar6 < iVar5; iVar6 = iVar6 + 1) {\n                iVar8 = iVar8 << 10;\n            }\n            *(*0x20 + -0x10) = iVar8;\n            unaff_RBX = unaff_RBX + -3;\n            *(*0x20 + -0x28) = 0x446609;\n            uVar4 = fcn.004463c0();\n            if ((unaff_RBX == '\\0') || (uVar4 < 0)) {\n                return 0;\n            }\n            uVar3 = *(*0x20 + -0x10);\n            if (uVar3 != 0) {\n                if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0xffffffffffffffff)) / ZEXT816(uVar3), 0) < uVar4) {\n                    return 0;\n                }\n                if (uVar4 * uVar3 < 0x8000000000000000) {\n                    return uVar4 * uVar3;\n                }\n                return 0;\n            }\n            *(*0x20 + -0x28) = 0x446687;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x446697;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1031
    },
    "004469e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004469e0(ulong param_1, ulong param_2, int64_t *param_3, ulong param_4)\n\n{\n    int64_t *piVar1;\n    uint uVar2;\n    int64_t **ppiVar3;\n    int64_t *arg2;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t *piVar8;\n    int64_t iVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar11 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar11 = *0x20 + -0x68;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x70) = 0x446a05;\n            ppiVar3 = fcn.0040ba20();\n            *(*0x20 + -0x18) = ppiVar3;\n            for (iVar5 = 0x4d9aa0; iVar5 != 0; iVar5 = *(iVar5 + 0x230)) {\n                if (*(iVar5 + 0x228) == '\\0') {\n                    *(*0x20 + -0x10) = iVar5;\n                    piVar1 = ppiVar3[1];\n                    piVar8 = piVar1 + 1;\n                    piVar7 = *ppiVar3;\n                    piVar6 = ppiVar3[2];\n                    arg2 = piVar7;\n                    param_3 = piVar6;\n                    if (piVar6 < piVar8) {\n                        *(*0x20 + -0x70) = 0x446a65;\n                        arg2 = fcn.00441fe0(piVar6);\n                        ppiVar3 = *(*0x20 + -0x18);\n                        ppiVar3[2] = piVar6;\n                        if (*0x544c10 == 0) {\n                            *ppiVar3 = arg2;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x446a85;\n                            arg2 = fcn.00458a80(piVar6, piVar7, param_3, param_4);\n                        }\n                        iVar5 = *(*0x20 + -0x10);\n                    }\n                    ppiVar3[1] = piVar8;\n                    if (*0x544c10 == 0) {\n                        arg2[piVar1] = iVar5;\n                    }\n                    else {\n                        *(*0x20 + -0x70) = 0x446ab1;\n                        ppiVar3 = fcn.00458b80(iVar5, arg2, param_3, param_4);\n                    }\n                    if ((*(iVar5 + 0x200) == 0) && (*(iVar5 + 0x208) == 0)) {\n                        iVar9 = *(iVar5 + 0xd8) - *(iVar5 + 0xd0);\n                        *(*0x20 + -0x28) = iVar9;\n                        *(*0x20 + -0x70) = 0x446aeb;\n                        uVar2 = fcn.00410fe0();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x200) = uVar2;\n                        if (*0x544c10 == 0) {\n                            *(iVar5 + 0x208) = iVar9;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x446b1a;\n                            iVar5 = fcn.00458bc0(iVar5 + 0x208, arg2, param_3, param_4);\n                        }\n                        iVar10 = *(iVar5 + 0xe8) - *(iVar5 + 0xe0);\n                        *(*0x20 + -0x20) = iVar10;\n                        *(*0x20 + -0x70) = 0x446b3c;\n                        uVar2 = fcn.00410fe0();\n                        iVar5 = *(*0x20 + -0x10);\n                        *(iVar5 + 0x210) = uVar2;\n                        iVar9 = *(*0x20 + -0x20) + *(*0x20 + -0x28);\n                        if (*0x544c10 == 0) {\n                            *(iVar5 + 0x218) = iVar10;\n                        }\n                        else {\n                            *(*0x20 + -0x70) = 0x446b78;\n                            iVar5 = fcn.00458bc0(iVar9, iVar5 + 0x218, param_3, param_4);\n                        }\n                        LOCK();\n                        *0x545378 = *0x545378 + iVar9;\n                        ppiVar3 = *(*0x20 + -0x18);\n                    }\n                }\n            }\n            piVar1 = ppiVar3[1];\n            piVar7 = NULL;\n            while( true ) {\n                if (piVar1 <= piVar7) goto code_r0x00446bfc;\n                iVar5 = (*ppiVar3)[piVar7];\n                if (*(iVar5 + 0x1f8) != '\\0') break;\n                piVar7 = piVar7 + 1;\n            }\n            if (*0x544c10 == 0) {\n                **ppiVar3 = iVar5;\n            }\n            else {\n                *(*0x20 + -0x70) = 0x446bc7;\n                ppiVar3 = fcn.00458be0(piVar7, piVar1, param_3, param_4);\n            }\n            piVar1 = *ppiVar3;\n            piVar6 = ppiVar3[1];\n            if (piVar7 < piVar6) {\n                if (*0x544c10 == 0) {\n                    piVar1[piVar7] = 0x4d9aa0;\n                }\n                else {\n                    *(*0x20 + -0x70) = 0x446bfb;\n                    ppiVar3 = fcn.00458b80(0x4d9aa0, piVar1, param_3, param_4);\n                }\ncode_r0x00446bfc:\n                if (*0x544c10 != '\\0') {\n                    *(*0x20 + -0x70) = 0x446c14;\n                    fcn.00402e00();\n                    ppiVar3 = *(*0x20 + -0x18);\n                }\n                uVar4 = *0x4f1618;\n                *0x4f1618 = ppiVar3;\n                return uVar4;\n            }\n            *(*0x20 + -0x70) = 0x446c38;\n            fcn.00458f20(piVar6);\n        }\n        *(puVar11 + -8) = 0x446c3e;\n        fcn.004568e0();\n        *0x20 = puVar11;\n    } while( true );\n}\n",
        "token_count": 1614
    },
    "00446c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00446c60(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    char cVar6;\n    uint32_t **in_RAX;\n    uint32_t **ppuVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint32_t *puVar10;\n    ulong uVar11;\n    ulong *arg2;\n    uint32_t *arg1;\n    uint32_t *puVar12;\n    uchar *puVar13;\n    uchar *unaff_RBP;\n    uint32_t *arg1_00;\n    uint32_t *puVar14;\n    int64_t unaff_R14;\n    \n    do {\n        puVar13 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar13 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            puVar10 = *in_RAX;\n            uVar2 = *puVar10;\n            *(*0x20 + -0xdc) = uVar2;\n            if (((((uVar2 == 0xfffffff1) && (*(puVar10 + 1) == '\\0')) && (*(puVar10 + 5) == '\\0')) &&\n                ((*(puVar10 + 6) == '\\x01' && (*(puVar10 + 7) == '\\b')))) &&\n               (puVar14 = *(puVar10 + 6),  in_RAX[0x16] == puVar14)) {\n                *(*0x20 + 8) = in_RAX;\n                arg1 = in_RAX[0x11];\n                puVar10 = in_RAX[0x10];\n                arg1_00 = arg1 + -1;\n                puVar1 = NULL;\n                do {\n                    puVar12 = puVar1;\n                    if (arg1_00 <= puVar12) {\n                        if (arg1 == NULL) goto code_r0x004471b0;\n                        *(*0x20 + -0xd8) = arg1_00;\n                        *(*0x20 + -0x60) = arg1;\n                        puVar12 = *puVar10;\n                        *(*0x20 + -0x100) = 0x446f06;\n                        uVar11 = fcn.00447480();\n                        puVar10 = *(*(*0x20 + 8) + 0x88);\n                        arg1_00 = *(*(*0x20 + 8) + 0x80);\n                        puVar14 = *(*0x20 + -0xd8);\n                        if (puVar10 <= puVar14) goto code_r0x004471a5;\n                        *(*0x20 + -0xd0) = uVar11;\n                        *(*0x20 + -0x100) = 0x446f45;\n                        iVar8 = fcn.00447480();\n                        *(*0x20 + -200) = iVar8;\n                        iVar9 = *(*0x20 + 8);\n                        puVar10 = *(iVar9 + 0xa0);\n                        *(*0x20 + -0x80) = puVar10;\n                        arg1_00 = *(*0x20 + -0xd0);\n                        if ((arg1_00 != puVar10) || (*(iVar9 + 0xa8) != iVar8)) goto code_r0x004470f6;\n                        arg2 = *(iVar9 + 0x1e0);\n                        arg1_00 = *(iVar9 + 0x1e8);\n                        *(*0x20 + -0x60) = arg1_00;\n                        iVar9 = 0;\n                        goto code_r0x00446fba;\n                    }\n                    puVar14 = puVar10[puVar12 * 2];\n                    puVar1 = puVar12 + 1;\n                    if (arg1 <= puVar1) goto code_r0x004472ed;\n                } while (puVar10[puVar12 * 2] <= puVar10[puVar12 * 2 + 2]);\n                arg1 = in_RAX[0xe];\n                puVar14 = in_RAX[0xd];\n                uVar2 = puVar10[puVar12 * 2 + 1];\n                if (uVar2 < arg1) {\n                    puVar10 = puVar10[puVar12 * 2 + 3];\n                    if (puVar10 < arg1) {\n                        *(*0x20 + -0xb8) = puVar12;\n                        *(*0x20 + -0x60) = puVar1;\n                        if (puVar1 < arg1_00) {\n                            *(*0x20 + -0x38) = uVar2 + puVar14;\n                            *(*0x20 + -0x100) = 0x446d86;\n                            uVar11 = fcn.00447da0(puVar10 + puVar14);\n                            ppuVar7 = *(*0x20 + 8);\n                        }\n                        else {\n                            uVar11 = 0x475953;\n                            ppuVar7 = in_RAX;\n                            in_RAX = 0x3;\n                        }\n                        *(*0x20 + -0x58) = uVar11;\n                        *(*0x20 + -0xb0) = in_RAX;\n                        *(*0x20 + -0x100) = 0x446db4;\n                        uVar11 = fcn.00447da0();\n                        iVar9 = *(*0x20 + 8);\n                        arg1 = *(iVar9 + 0x88);\n                        iVar8 = *(iVar9 + 0x80);\n                        puVar10 = *(*0x20 + -0xb8);\n                        if (puVar10 < arg1) {\n                            if (*(*0x20 + -0x60) < arg1) {\n                                *(*0x20 + -0x68) = *(iVar8 + puVar10 * 8);\n                                *(*0x20 + -0x60) = ppuVar7;\n                                *(*0x20 + -0x40) = uVar11;\n                                *(*0x20 + -0x70) = *(iVar8 + 8 + puVar10 * 8);\n                                *(*0x20 + -0x48) = *(iVar9 + 0x1a8);\n                                *(*0x20 + -0x78) = *(iVar9 + 0x1b0);\n                                *(*0x20 + -0x100) = 0x446e34;\n                                fcn.00431980();\n                                *(*0x20 + -0x100) = 0x446e45;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446e52;\n                                fcn.004320e0();\n                                *(*0x20 + -0x100) = 0x446e57;\n                                fcn.00431ba0();\n                                *(*0x20 + -0x100) = 0x446e6c;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446e7d;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446e8a;\n                                fcn.004320e0();\n                                *(*0x20 + -0x100) = 0x446e8f;\n                                fcn.00431ba0();\n                                *(*0x20 + -0x100) = 0x446ea5;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446eb6;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446ecb;\n                                fcn.00432280();\n                                *(*0x20 + -0x100) = 0x446ed0;\n                                fcn.00431be0();\n                                *(*0x20 + -0x100) = 0x446ed5;\n                                fcn.00431a00();\n                                iVar9 = *(*0x20 + -0xb8);\n                                puVar12 = *(*0x20 + 8);\n                                arg1 = NULL;\n                                while (arg1 <= iVar9) {\n                                    arg1_00 = *(puVar12 + 0x1c);\n                                    puVar10 = *(puVar12 + 0x22);\n                                    if (puVar10 <= arg1) {\ncode_r0x004472a6:\n                                        *(*0x20 + -0x100) = 0x4472b1;\n                                        fcn.00458f20(puVar10);\n                                        break;\n                                    }\n                                    puVar10 = *(*(puVar12 + 0x20) + 4 + arg1 * 8);\n                                    if (arg1_00 <= puVar10) {\ncode_r0x0044729b:\n                                        *(*0x20 + -0x100) = 0x4472a6;\n                                        fcn.00458f20(arg1_00);\n                                        goto code_r0x004472a6;\n                                    }\n                                    *(*0x20 + -0xc0) = arg1;\n                                    *(*0x20 + -0x100) = 0x44726c;\n                                    uVar11 = fcn.00447da0();\n                                    arg1 = *(*(*0x20 + 8) + 0x88);\n                                    arg1_00 = *(*(*0x20 + 8) + 0x80);\n                                    puVar14 = *(*0x20 + -0xc0);\n                                    if (arg1 <= puVar14) {\n                                        *(*0x20 + -0x100) = 0x44729b;\n                                        fcn.00458f20(arg1);\n                                        goto code_r0x0044729b;\n                                    }\ncode_r0x004471ba:\n                                    *(*0x20 + -0x60) = puVar12;\n                                    *(*0x20 + -0x40) = uVar11;\n                                    *(*0x20 + -0x68) = arg1_00[puVar14 * 2];\n                                    *(*0x20 + -0x100) = 0x4471da;\n                                    fcn.00431980();\n                                    *(*0x20 + -0x100) = 0x4471eb;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x100) = 0x4471f8;\n                                    fcn.004320e0();\n                                    *(*0x20 + -0x100) = 0x4471fd;\n                                    fcn.00431ba0();\n                                    *(*0x20 + -0x100) = 0x447212;\n                                    fcn.00432280();\n                                    *(*0x20 + -0x100) = 0x447217;\n                                    fcn.00431be0();\n                                    *(*0x20 + -0x100) = 0x44721c;\n                                    fcn.00431a00();\n                                    iVar9 = *(*0x20 + -0xb8);\n                                    puVar12 = *(*0x20 + 8);\n                                    arg1 = *(*0x20 + -0xc0) + 1;\n                                }\n                                *(*0x20 + -0x100) = 0x4472c5;\n                                fcn.00430040();\n                            }\n                            *(*0x20 + -0x100) = 0x4472d0;\n                            fcn.00458f20(arg1);\n                        }\n                        *(*0x20 + -0x100) = 0x4472db;\n                        puVar10 = arg1;\n                        fcn.00458f20(arg1);\n                    }\n                    *(*0x20 + -0x100) = 0x4472e5;\n                    fcn.00458f20(arg1);\n                }\n                *(*0x20 + -0x100) = 0x4472ed;\n                fcn.00458f20(arg1);\ncode_r0x004472ed:\n                *(*0x20 + -0x100) = 0x4472f5;\n                in_RAX = fcn.00458f20(arg1);\n            }\n            *(*0x20 + -0x90) = *(puVar10 + 1);\n            *(*0x20 + -0x98) = *(puVar10 + 5);\n            *(*0x20 + -0xa0) = *(puVar10 + 6);\n            *(*0x20 + -0xa8) = *(puVar10 + 7);\n            *(*0x20 + -0x80) = *(puVar10 + 6);\n            *(*0x20 + -0x88) = in_RAX[0x16];\n            *(*0x20 + -0x40) = in_RAX[0x35];\n            *(*0x20 + -0x60) = in_RAX[0x36];\n            *(*0x20 + -0x100) = 0x447351;\n            fcn.00431980();\n            *(*0x20 + -0x100) = 0x447365;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x44736e;\n            fcn.004320e0();\n            *(*0x20 + -0x100) = 0x44737f;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x447389;\n            fcn.00431f80();\n            *(*0x20 + -0x100) = 0x44739a;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x4473a5;\n            fcn.00431f80();\n            *(*0x20 + -0x100) = 0x4473b6;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x4473c5;\n            fcn.00431f80();\n            *(*0x20 + -0x100) = 0x4473d6;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x4473e5;\n            fcn.00431f80();\n            *(*0x20 + -0x100) = 0x4473f6;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x447405;\n            fcn.004320e0();\n            *(*0x20 + -0x100) = 0x447416;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x447425;\n            fcn.004320e0();\n            *(*0x20 + -0x100) = 0x447436;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x44744b;\n            fcn.00432280();\n            *(*0x20 + -0x100) = 0x447450;\n            fcn.00431be0();\n            *(*0x20 + -0x100) = 0x447455;\n            fcn.00431a00();\n            *(*0x20 + -0x100) = 0x447466;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar13 + 8) = in_RAX;\n        *(puVar13 + -8) = 0x447471;\n        fcn.004568e0();\n        in_RAX = *(puVar13 + 8);\n        *0x20 = puVar13;\n    } while( true );\ncode_r0x00446fba:\n    if (arg1_00 <= iVar9) {\n        return;\n    }\n    *(*0x20 + -0x30) = *arg2;\n    uVar3 = *(arg2 + 0xc);\n    uVar4 = *(arg2 + 2);\n    uVar5 = *(arg2 + 0x14);\n    *(*0x20 + -0x28) = *(arg2 + 1);\n    *(*0x20 + -0x24) = uVar3;\n    *(*0x20 + -0x20) = uVar4;\n    *(*0x20 + -0x1c) = uVar5;\n    uVar3 = *(arg2 + 0x1c);\n    uVar4 = *(arg2 + 4);\n    uVar5 = *(arg2 + 0x24);\n    *(*0x20 + -0x18) = *(arg2 + 3);\n    *(*0x20 + -0x14) = uVar3;\n    *(*0x20 + -0x10) = uVar4;\n    *(*0x20 + -0xc) = uVar5;\n    puVar14 = *(*0x20 + -0x10);\n    if (*(puVar14 + 2) != *(*0x20 + -0x18)) {\ncode_r0x0044703f:\n        iVar9 = *(*(*0x20 + 8) + 0x1d0);\n        *(*0x20 + -0x40) = iVar9;\n        *(*0x20 + -0x60) = *(*(*0x20 + 8) + 0x1d8);\n        puVar10 = *(*0x20 + -0x30);\n        *(*0x20 + -0x48) = puVar10;\n        *(*0x20 + -0x78) = *(*0x20 + -0x28);\n        *(*0x20 + -0x100) = 0x44708a;\n        fcn.00431980();\n        *(*0x20 + -0x100) = 0x44709b;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x4470b0;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x4470c5;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x4470da;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x4470df;\n        fcn.00431be0();\n        *(*0x20 + -0x100) = 0x4470e5;\n        fcn.00431a00();\n        *(*0x20 + -0x100) = 0x4470f6;\n        fcn.00430040();\ncode_r0x004470f6:\n        *(*0x20 + -0x88) = *(iVar9 + 0xa8);\n        *(*0x20 + -0x100) = 0x447107;\n        fcn.00431980();\n        *(*0x20 + -0x100) = 0x447118;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x447125;\n        fcn.004320e0();\n        *(*0x20 + -0x100) = 0x447136;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x447145;\n        fcn.004320e0();\n        *(*0x20 + -0x100) = 0x447156;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x447165;\n        fcn.004320e0();\n        *(*0x20 + -0x100) = 0x447176;\n        fcn.00432280();\n        *(*0x20 + -0x100) = 0x447185;\n        fcn.004320e0();\n        *(*0x20 + -0x100) = 0x44718a;\n        fcn.00431be0();\n        *(*0x20 + -0x100) = 0x44718f;\n        fcn.00431a00();\n        puVar12 = 0x16;\n        *(*0x20 + -0x100) = 0x4471a5;\n        fcn.00430040();\ncode_r0x004471a5:\n        *(*0x20 + -0x100) = 0x4471b0;\n        fcn.00458f20(puVar10);\ncode_r0x004471b0:\n        *(*0x20 + -0x100) = 0x4471ba;\n        uVar11 = fcn.00458f20(0);\n        goto code_r0x004471ba;\n    }\n    *(*0x20 + -0x78) = iVar9;\n    *(*0x20 + -0x50) = arg2;\n    *(*0x20 + -0x100) = 0x447025;\n    cVar6 = fcn.004023a0(*(*0x20 + -0x18), arg2);\n    if (cVar6 == '\\0') goto code_r0x0044703f;\n    arg2 = *(*0x20 + -0x50) + 0x28;\n    iVar9 = *(*0x20 + -0x78) + 1;\n    arg1_00 = *(*0x20 + -0x60);\n    goto code_r0x00446fba;\n}\n",
        "token_count": 4768
    },
    "00447480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00447480(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t *puVar5;\n    int64_t iVar6;\n    \n    uVar3 = unaff_RBX & 0xffffffff;\n    uVar4 = *(in_RAX + 0xb0) + uVar3;\n    iVar1 = *(in_RAX + 0x150);\n    puVar5 = *(in_RAX + 0x148);\n    if (1 < iVar1) {\n        for (iVar6 = 0; iVar6 < iVar1; iVar6 = iVar6 + 1) {\n            if (((*puVar5 <= uVar3) && (uVar3 < puVar5[1])) || ((iVar6 == iVar1 + -1 && (puVar5[1] == uVar3)))) {\n                uVar4 = (puVar5[2] + uVar3) - *puVar5;\n                break;\n            }\n            puVar5 = puVar5 + 3;\n        }\n        if (*(in_RAX + 0xb8) < uVar4) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.004320e0();\n            fcn.00432280();\n            fcn.004320e0();\n            fcn.00432280();\n            fcn.004320e0();\n            fcn.00431be0();\n            fcn.00431a00();\n            fcn.00430040();\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 404
    },
    "00447600": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00447600(void)\n\n{\n    uint32_t uVar1;\n    uint32_t *in_RAX;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t *arg1;\n    int64_t unaff_RBX;\n    int64_t *piVar6;\n    int64_t *in_R9;\n    \n    for (iVar4 = 0x4d9aa0; iVar4 != 0; iVar4 = *(iVar4 + 0x230)) {\n        if ((*(iVar4 + 0xa0) < in_RAX || *(iVar4 + 0xa0) == in_RAX) &&\n           (in_RAX <= *(iVar4 + 0xa8) && *(iVar4 + 0xa8) != in_RAX)) goto code_r0x00447640;\n    }\n    iVar4 = 0;\ncode_r0x00447640:\n    if (iVar4 == 0) {\n        return 0;\n    }\n    arg1 = *(iVar4 + 0xb0);\n    iVar2 = in_RAX - arg1;\n    uVar1 = iVar2;\n    uVar5 = *(iVar4 + 0x150);\n    piVar6 = *(iVar4 + 0x148);\n    if (uVar5 < 2) goto code_r0x0044767c;\n    unaff_RBX = 0;\n    do {\n        uVar1 = iVar2;\n        if (unaff_RBX < uVar5) {\n            puVar3 = piVar6[2];\n            if (in_RAX < puVar3) {\n                return 0;\n            }\n            in_R9 = piVar6;\n            if (in_RAX < (piVar6[1] - *piVar6) + puVar3) {\n                uVar1 = *piVar6 + (in_RAX - puVar3);\n                goto code_r0x0044767c;\n            }\n        }\n        else {\ncode_r0x0044767c:\n            uVar5 = arg1 + (uVar1 - *(iVar4 + 0xa0));\n            arg1 = (uVar5 >> 0xc) * 0x14 + *(iVar4 + 0x98);\n            in_RAX = (uVar5 & 0xfff) >> 8;\n            uVar5 = *arg1;\n            if (in_RAX < 0x10) {\n                puVar3 = *(arg1 + 1 + in_RAX) + *arg1;\n                do {\n                    arg1 = puVar3;\n                    in_RAX = *(iVar4 + 0x88);\n                    uVar5 = *(iVar4 + 0x80);\n                    puVar3 = arg1 + 1;\n                    if (in_RAX <= puVar3) goto code_r0x00447718;\n                    in_R9 = uVar5 + puVar3 * 8;\n                } while (*in_R9 < uVar1 || *in_R9 == uVar1);\n                if (arg1 < in_RAX) {\n                    puVar3 = *(uVar5 + 4 + arg1 * 8);\n                    arg1 = *(iVar4 + 0x70);\n                    in_RAX = *(iVar4 + 0x68);\n                    if (puVar3 < arg1) {\n                        return puVar3 + in_RAX;\n                    }\n                    fcn.00458f20(arg1);\n                }\n                fcn.00458f20(in_RAX);\ncode_r0x00447718:\n                fcn.00458f20(in_RAX);\n            }\n            iVar4 = 0x10;\n            iVar2 = fcn.00458f40(0x10);\n        }\n        piVar6 = in_R9 + 3;\n        unaff_RBX = unaff_RBX + 1;\n    } while( true );\n}\n",
        "token_count": 865
    },
    "004486c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004486c0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    bool bVar7;\n    char cVar8;\n    ulong *in_RAX;\n    int64_t iVar9;\n    ulong arg1;\n    uint64_t uVar10;\n    int64_t arg2;\n    uint64_t *unaff_RBX;\n    uint64_t uVar11;\n    uchar *puVar12;\n    uchar *unaff_RBP;\n    uint8_t uVar13;\n    int64_t *piVar14;\n    int64_t *piVar15;\n    int64_t arg4;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar12 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar12 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*unaff_RBX < 9) {\n                uVar13 = *(unaff_RBX + 0x17) & 0x1f;\n                if ((uVar13 != 0xd) && (uVar13 != 0xe)) {\n                    if (*unaff_RBX != 0) {\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        *(*0x20 + 8) = in_RAX;\n                        *(*0x20 + -0x10) = *in_RAX;\n                        *(*0x20 + -0x48) = in_RAX[1];\n                        *(*0x20 + -0x40) = in_RAX[2];\n                        arg1 = 0;\n                        *(*0x20 + -0x90) = 0x44874e;\n                        cVar8 = fcn.004489a0(0);\n                        if (cVar8 == '\\0') {\n                            piVar14 = *(*0x20 + 8);\n                            piVar14[1] = *(*0x20 + -0x48);\n                            piVar14[2] = *(*0x20 + -0x40);\n                            if (*0x544c10 == 0) {\n                                *piVar14 = *(*0x20 + -0x10);\n                            }\n                            else {\n                                *(*0x20 + -0x90) = 0x4487c5;\n                                fcn.00458ba0(arg1, *(*0x20 + -0x10), param_3, param_4);\n                            }\n                            piVar15 = *(*0x20 + 0x10);\n                            piVar14[4] = -*(piVar15 + 0x15) & piVar14[4] + (*(piVar15 + 0x15) - 1);\n                            *(*0x20 + -0x38) = in_XMM15;\n                            *(*0x20 + -0x30) = in_XMM15;\n                            *(*0x20 + -0x20) = in_XMM15;\n                            *(*0x20 + -0x38) = 1;\n                            arg2 = piVar14[3];\n                            *(*0x20 + -0x30) = arg2;\n                            arg4 = piVar14[4];\n                            *(*0x20 + -0x28) = arg4;\n                            iVar9 = *piVar15;\n                            *(*0x20 + -0x18) = iVar9;\n                            iVar1 = *piVar14;\n                            iVar2 = piVar14[1];\n                            if (iVar2 == 0) {\n                                bVar7 = true;\n                            }\n                            else {\n                                if (*(iVar1 + -0x28 + iVar2 * 0x28) == 1) {\n                                    iVar3 = *(iVar1 + -8 + iVar2 * 0x28);\n                                    if ((arg2 == *(iVar1 + -0x20 + iVar2 * 0x28) + iVar3) &&\n                                       (arg2 = *(iVar1 + -0x18 + iVar2 * 0x28) + iVar3,  arg4 == arg2)) {\n                                        arg2 = iVar3 + iVar9;\n                                        *(iVar1 + -8 + iVar2 * 0x28) = arg2;\n                                        uVar13 = 1;\n                                    }\n                                    else {\n                                        uVar13 = 0;\n                                    }\n                                }\n                                else {\n                                    uVar13 = 0;\n                                }\n                                bVar7 = uVar13 ^ 1;\n                            }\n                            if (bVar7) {\n                                uVar11 = piVar14[1] + 1;\n                                iVar9 = *piVar14;\n                                uVar10 = piVar14[2];\n                                if (uVar10 < uVar11) {\n                                    *(*0x20 + -0x90) = 0x4488a5;\n                                    iVar9 = fcn.00441fe0(uVar10);\n                                    piVar14 = *(*0x20 + 8);\n                                    piVar14[2] = uVar10;\n                                    if (*0x544c10 == 0) {\n                                        *piVar14 = iVar9;\n                                    }\n                                    else {\n                                        *(*0x20 + -0x90) = 0x4488c5;\n                                        iVar9 = fcn.00458a80(uVar10, arg2, piVar15, arg4);\n                                    }\n                                    piVar15 = *(*0x20 + 0x10);\n                                }\n                                piVar14[1] = uVar11;\n                                *(iVar9 + -0x28 + uVar11 * 0x28) = *(*0x20 + -0x38);\n                                iVar9 = iVar9 + uVar11 * 0x28;\n                                uVar4 = *(*0x20 + -0x2c);\n                                uVar5 = *(*0x20 + -0x28);\n                                uVar6 = *(*0x20 + -0x24);\n                                *(iVar9 + -0x20) = *(*0x20 + -0x30);\n                                *(iVar9 + -0x1c) = uVar4;\n                                *(iVar9 + -0x18) = uVar5;\n                                *(iVar9 + -0x14) = uVar6;\n                                uVar4 = *(*0x20 + -0x1c);\n                                uVar5 = *(*0x20 + -0x18);\n                                uVar6 = *(*0x20 + -0x14);\n                                *(iVar9 + -0x10) = *(*0x20 + -0x20);\n                                *(iVar9 + -0xc) = uVar4;\n                                *(iVar9 + -8) = uVar5;\n                                *(iVar9 + -4) = uVar6;\n                            }\n                            piVar14[4] = piVar14[4] + *piVar15;\n                        }\n                        else {\n                            piVar14 = *(*0x20 + 8);\n                            piVar15 = *(*0x20 + 0x10);\n                            uVar10 = *(piVar15 + 0x15);\n                            uVar10 = piVar14[5] + (uVar10 - 1) & -uVar10;\n                            piVar14[5] = uVar10;\n                            piVar14[5] = uVar10 + *piVar15;\n                        }\n                        piVar14[3] = piVar14[3] + 8;\n                        return;\n                    }\n                    in_RAX[4] = -*(unaff_RBX + 0x15) & in_RAX[4] + (*(unaff_RBX + 0x15) - 1);\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x448950;\n                fcn.0042f8a0();\n            }\n            unaff_RBX = 0x48f6e0;\n            *(*0x20 + -0x90) = 0x448965;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar12 + 8) = in_RAX;\n        *(puVar12 + 0x10) = unaff_RBX;\n        *(puVar12 + -8) = 0x448975;\n        fcn.004568e0();\n        in_RAX = *(puVar12 + 8);\n        unaff_RBX = *(puVar12 + 0x10);\n        *0x20 = puVar12;\n    } while( true );\n}\n",
        "token_count": 1928
    },
    "00448fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00448fe0(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong arg1;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg1_00;\n    uint64_t *unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x544a34 == 0) {\n                *(*0x20 + -0x58) = 0x449011;\n                fcn.0042a080();\n                in_RAX = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            if (*unaff_RBX == 0) {\n                *unaff_RBX = in_RAX;\n                iVar3 = *(in_RAX + 0x2280);\n                arg1_00 = *(in_RAX + 0x2290);\n                arg3_00 = *(in_RAX + 0x2288) + 1;\n                if (arg1_00 < arg3_00) {\n                    *(*0x20 + -0x10) = *(in_RAX + 0x2288);\n                    *(*0x20 + -0x58) = 0x449066;\n                    arg3 = arg3_00;\n                    iVar3 = fcn.00441fe0(arg1_00);\n                    in_RAX = *(*0x20 + 8);\n                    *(in_RAX + 0x2290) = arg1_00;\n                    if (*0x544c10 == 0) {\n                        *(in_RAX + 0x2280) = iVar3;\n                    }\n                    else {\n                        *(*0x20 + -0x58) = 0x449096;\n                        iVar3 = fcn.00458a80(in_RAX, in_RAX + 0x2280, arg3, arg4);\n                        arg1_00 = in_RAX;\n                    }\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                *(in_RAX + 0x2288) = arg3_00;\n                if (*0x544c10 == 0) {\n                    *(iVar3 + -8 + arg3_00 * 8) = unaff_RBX;\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x4490d4;\n                    fcn.00458bc0(arg1_00, in_RAX, arg3_00, arg4);\n                }\n                arg1 = *(in_RAX + 0x2290);\n                *(*0x20 + -0x58) = 0x4490f1;\n                fcn.0044ac20(arg1, in_RAX, arg3_00, arg4);\n                iVar3 = *(*0x20 + 8);\n                if (*(iVar3 + 0x2288) != 0) {\n                    if (**(iVar3 + 0x2280) == *(*0x20 + 0x10)) {\n                        *(iVar3 + 0x1200) = *(*(*0x20 + 0x10) + 8);\n                    }\n                    LOCK();\n                    piVar1 = iVar3 + 0x2298;\n                    iVar2 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    return iVar2;\n                }\n                *(*0x20 + -0x58) = 0x44913e;\n                fcn.00458f20(0);\n            }\n            unaff_RBX = 0x22;\n            *(*0x20 + -0x58) = 0x44914f;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44915f;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1098
    },
    "00449400": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.00449400(ulong noname_0, uint64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong arg1;\n    int64_t in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = *(in_RAX + 0x2288);\n            if (unaff_RBX < uVar5) {\n                piVar3 = *(*(in_RAX + 0x2280) + unaff_RBX * 8);\n                if (in_RAX == *piVar3) {\n                    *piVar3 = 0;\n                    uVar5 = *(in_RAX + 0x2288);\n                    arg3 = uVar5 - 1;\n                    if (unaff_RBX == arg3) {\ncode_r0x00449496:\n                        arg4 = *(in_RAX + 0x2288);\n                        if (arg3 < arg4) {\n                            if (*0x544c10 == 0) {\n                                *(*(in_RAX + 0x2280) + -8 + uVar5 * 8) = 0;\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x4494d0;\n                                in_RAX = fcn.00458be0(uVar5, arg2, arg3, arg4);\n                            }\n                            arg2 = *(in_RAX + 0x2290);\n                            if (arg3 <= arg2) {\n                                *(in_RAX + 0x2288) = arg3;\n                                uVar5 = unaff_RBX;\n                                if (unaff_RBX != arg3) {\n                                    *(*0x20 + 8) = in_RAX;\n                                    *(*0x20 + 0x10) = unaff_RBX;\n                                    uVar4 = *(in_RAX + 0x2280);\n                                    arg1 = *(in_RAX + 0x2290);\n                                    *(*0x20 + -0x38) = 0x449525;\n                                    uVar4 = fcn.0044ac20(arg1, uVar4, arg3, arg4);\n                                    *(*0x20 + -0x10) = uVar4;\n                                    uVar4 = *(*(*0x20 + 8) + 0x2290);\n                                    *(*0x20 + -0x38) = 0x449551;\n                                    fcn.0044ada0(uVar4);\n                                    in_RAX = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + 0x10);\n                                    uVar5 = *(*0x20 + -0x10);\n                                }\n                                if (unaff_RBX == 0) {\n                                    if (*(in_RAX + 0x2288) == 0) {\n                                        *(in_RAX + 0x1200) = 0;\n                                    }\n                                    else {\n                                        *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n                                    }\n                                }\n                                LOCK();\n                                piVar1 = in_RAX + 0x2298;\n                                iVar2 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar2 == 1) {\n                                    *(in_RAX + 0x1208) = 0;\n                                }\n                                return uVar5;\n                            }\n                            *(*0x20 + -0x38) = 0x4495c5;\n                            fcn.00458fa0(arg3, arg2);\n                        }\n                        uVar5 = arg4;\n                        *(*0x20 + -0x38) = 0x4495d0;\n                        fcn.00458f20(uVar5);\ncode_r0x004495d0:\n                        *(*0x20 + -0x38) = 0x4495d8;\n                        fcn.00458f20(uVar5);\n                    }\n                    else if (arg3 < uVar5) {\n                        if (unaff_RBX < uVar5) {\n                            if (*0x544c10 == 0) {\n                                *(*(in_RAX + 0x2280) + unaff_RBX * 8) = *(*(in_RAX + 0x2280) + -8 + uVar5 * 8);\n                            }\n                            else {\n                                *(*0x20 + -0x38) = 0x449496;\n                                in_RAX = fcn.00458c20(uVar5, arg2, arg3);\n                            }\n                            goto code_r0x00449496;\n                        }\n                        goto code_r0x004495d0;\n                    }\n                    *(*0x20 + -0x38) = 0x4495e5;\n                    fcn.00458f20(uVar5);\n                }\n                unaff_RBX = 0x13;\n                *(*0x20 + -0x38) = 0x4495f6;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x38) = 0x4495fe;\n            in_RAX = fcn.00458f20(uVar5);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x44960e;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1391
    },
    "00449620": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00449620(ulong noname_0, uint64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t arg1;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    ulong arg1_00;\n    int64_t in_RAX;\n    int64_t arg1_01;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t arg3_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2288) != 0) {\n                arg3 = ***(in_RAX + 0x2280);\n                if (in_RAX == arg3) {\n                    ***(in_RAX + 0x2280) = 0;\n                    arg1_01 = *(in_RAX + 0x2288);\n                    arg1 = arg1_01 - 1;\n                    if (0 < arg1) {\n                        if (*0x544c10 == 0) {\n                            **(in_RAX + 0x2280) = (*(in_RAX + 0x2280))[arg1_01 + -1];\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x449694;\n                            in_RAX = fcn.00458be0(arg1_01, arg2, arg3, arg4);\n                        }\n                    }\n                    arg3_00 = *(in_RAX + 0x2288);\n                    if (arg1 < arg3_00) {\n                        if (*0x544c10 == 0) {\n                            *(*(in_RAX + 0x2280) + -8 + arg1_01 * 8) = 0;\n                        }\n                        else {\n                            *(*0x20 + -0x30) = 0x4496ce;\n                            in_RAX = fcn.00458be0(arg1_01, arg2, arg3_00, arg4);\n                        }\n                        arg2 = *(in_RAX + 0x2290);\n                        if (arg1 <= arg2) {\n                            *(in_RAX + 0x2288) = arg1;\n                            if (0 < arg1) {\n                                *(*0x20 + 8) = in_RAX;\n                                arg1_00 = *(in_RAX + 0x2290);\n                                *(*0x20 + -0x30) = 0x449707;\n                                fcn.0044ada0(arg1_00);\n                                in_RAX = *(*0x20 + 8);\n                            }\n                            if (*(in_RAX + 0x2288) == 0) {\n                                *(in_RAX + 0x1200) = 0;\n                            }\n                            else {\n                                *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n                            }\n                            LOCK();\n                            piVar1 = in_RAX + 0x2298;\n                            iVar2 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar2 == 1) {\n                                *(in_RAX + 0x1208) = 0;\n                            }\n                            return;\n                        }\n                        *(*0x20 + -0x30) = 0x449767;\n                        fcn.00458fa0(arg1, arg2);\n                    }\n                    *(*0x20 + -0x30) = 0x449772;\n                    fcn.00458f20(arg3_00);\n                }\n                *(*0x20 + -0x30) = 0x449785;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x44978f;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x44979a;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1009
    },
    "0044a2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044a2e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t *arg2;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \ncode_r0x0044a2e0:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n        puVar2 = *0x20 + -0x28;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\ncode_r0x0044a307:\n        if (*(in_RAX + 0x2288) == 0) goto code_r0x0044a525;\n        arg2 = **(in_RAX + 0x2280);\n        if (in_RAX != *arg2) {\n            unaff_RBX = 0xf;\n            *(*0x20 + -0x30) = 0x44a525;\n            fcn.00430040();\n            goto code_r0x0044a525;\n        }\n        uVar1 = *(arg2 + 8);\n        if (9 < uVar1) {\n            *(*0x20 + -0x30) = 0x44a4bb;\n            fcn.0044afe0();\n            in_RAX = *(*0x20 + 8);\n            goto code_r0x0044a4c5;\n        }\n        *(*0x20 + -0x10) = arg2;\n        switch(uVar1) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x30) = 0x44a3f0;\n            fcn.0044afe0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 1:\n            if (unaff_RBX < arg2[1]) {\n                return arg2[1];\n            }\n            LOCK();\n            if (uVar1 == *(arg2 + 8)) {\n                *(arg2 + 8) = 2;\n                *(*0x20 + -0x30) = 0x44a4e5;\n                fcn.0044a560(unaff_RBX);\n                return 0;\n            }\n            goto code_r0x0044a307;\n        default:\n            *(*0x20 + -0x30) = 0x44a4aa;\n            fcn.0044afe0();\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 3:\n            LOCK();\n            if (uVar1 != *(arg2 + 8)) goto code_r0x0044a307;\n            *(arg2 + 8) = 4;\n            *(*0x20 + -0x30) = 0x44a39f;\n            fcn.00449620(in_RAX, arg2, param_3, param_4);\n            LOCK();\n            if (*(*(*0x20 + -0x10) + 0x40) == 4) {\n                *(*(*0x20 + -0x10) + 0x40) = 5;\n            }\n            else {\n                *(*0x20 + -0x30) = 0x44a3bf;\n                fcn.0044afe0();\n            }\n            in_RAX = *(*0x20 + 8);\n            LOCK();\n            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n            if (*(in_RAX + 0x2288) == 0) {\n                return -1;\n            }\n            break;\n        case 6:\n            *(*0x20 + -0x28) = 0x47cc98;\n            *(*0x20 + -0x30) = 0x44a40f;\n            fcn.004567a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            in_RAX = *(*0x20 + 8);\n            break;\n        case 7:\n        case 8:\n            goto code_r0x0044a430;\n        }\n        goto code_r0x0044a4c5;\n    }\n    goto code_r0x0044a530;\ncode_r0x0044a430:\n    LOCK();\n    if (uVar1 != *(arg2 + 8)) goto code_r0x0044a307;\n    *(arg2 + 8) = 9;\n    arg2[1] = arg2[7];\n    *(*0x20 + -0x30) = 0x44a465;\n    fcn.00449620(in_RAX, arg2, param_3, param_4);\n    *(*0x20 + -0x30) = 0x44a474;\n    fcn.00448fe0(in_RAX, arg2, param_3, param_4);\n    LOCK();\n    if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n        *(*(*0x20 + -0x10) + 0x40) = 1;\n    }\n    else {\n        *(*0x20 + -0x30) = 0x44a494;\n        fcn.0044afe0();\n    }\n    in_RAX = *(*0x20 + 8);\ncode_r0x0044a4c5:\n    unaff_RBX = *(*0x20 + 0x10);\n    goto code_r0x0044a307;\ncode_r0x0044a525:\n    *(*0x20 + -0x30) = 0x44a52f;\n    in_RAX = fcn.00458f20(0);\ncode_r0x0044a530:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x44a53f;\n    fcn.0045b2e0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x0044a2e0;\n}\n",
        "token_count": 1490
    },
    "0044a560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a560(int64_t arg1)\n\n{\n    code **arg2;\n    ulong arg4;\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n    }\n    arg2 = *(unaff_RBX + 0x18);\n    arg4 = *(unaff_RBX + 0x30);\n    iVar1 = *(unaff_RBX + 0x10);\n    if (iVar1 < 1) {\n        fcn.00449620(arg1, arg2, *(unaff_RBX + 0x28), arg4);\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 0;\n        }\n        else {\n            fcn.0044afe0();\n        }\n    }\n    else {\n        iVar1 = iVar1 * ((arg1 - *(unaff_RBX + 8)) / iVar1 + 1) + *(unaff_RBX + 8);\n        *(unaff_RBX + 8) = iVar1;\n        if (iVar1 < 0) {\n            *(unaff_RBX + 8) = 0x7fffffffffffffff;\n        }\n        fcn.0044ada0(*(in_RAX + 0x2290));\n        LOCK();\n        if (*(unaff_RBX + 0x40) == 2) {\n            *(unaff_RBX + 0x40) = 1;\n        }\n        else {\n            fcn.0044afe0();\n        }\n        if (*(in_RAX + 0x2288) == 0) {\n            *(in_RAX + 0x1200) = 0;\n        }\n        else {\n            *(in_RAX + 0x1200) = *(**(in_RAX + 0x2280) + 8);\n        }\n    }\n    fcn.00409a80();\n    (**arg2)(arg4);\n    fcn.00409860();\n    return;\n}\n",
        "token_count": 504
    },
    "0044a700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044a700(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    ulong *arg1;\n    ulong *arg2;\n    ulong *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    ulong *arg1_00;\n    ulong *puVar8;\n    int32_t iVar9;\n    ulong *arg4;\n    ulong *in_R10;\n    uint64_t unaff_R12;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar10;\n    \ncode_r0x0044a700:\n    puVar5 = *0x20;\n    puVar8 = in_R10;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(in_RAX + 0x1208) = 0;\n        piVar6 = *(in_RAX + 0x2280);\n        *(*0x20 + -0x18) = piVar6;\n        arg1 = *(in_RAX + 0x2288);\n        *(*0x20 + -0x30) = arg1;\n        arg2 = *(in_RAX + 0x2290);\n        *(*0x20 + -0x28) = arg2;\n        puVar4 = NULL;\n        piVar7 = NULL;\n        arg1_00 = NULL;\n        arg4 = NULL;\n        uVar3 = unaff_R12;\ncode_r0x0044a760:\n        puVar8 = arg1_00;\n        if (puVar4 < arg1) {\n            *(*0x20 + -0x20) = puVar4;\n            *(*0x20 + -0x3c) = arg4;\n            *(*0x20 + -0x38) = arg1_00;\n            *(*0x20 + -0x3d) = piVar7;\n            puVar8 = piVar6[puVar4];\n            *(*0x20 + -0x10) = puVar8;\n            uVar3 = in_RAX;\n        }\n        else {\n            for (; puVar8 < arg1; puVar8 = puVar8 + 1) {\n                if (arg1 <= puVar8) goto code_r0x0044a9a9;\n                piVar7 = piVar6 + puVar8;\n                if (*0x544c10 == 0) {\n                    piVar6[puVar8] = 0;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44a927;\n                    in_RAX = fcn.00458bc0(arg1, arg2, puVar8, arg4);\n                    in_R10 = arg1_00;\n                }\n            }\n            iVar9 = arg4;\n            LOCK();\n            puVar1 = in_RAX + 0x229c;\n            arg4 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            LOCK();\n            puVar1 = in_RAX + 0x2298;\n            puVar8 = *puVar1;\n            *puVar1 = *puVar1 + -iVar9;\n            if (arg1_00 <= arg2) {\n                *(in_RAX + 0x2288) = arg1_00;\n                *(in_RAX + 0x2290) = arg2;\n                if (*0x544c10 == 0) {\n                    *(in_RAX + 0x2280) = piVar6;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44a977;\n                    in_RAX = fcn.00458be0(arg1, arg2, puVar8, arg4);\n                }\n                if (arg1_00 == NULL) {\n                    *(in_RAX + 0x1200) = 0;\n                }\n                else {\n                    *(in_RAX + 0x1200) = *(*piVar6 + 8);\n                }\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44a9a9;\n            arg1 = arg1_00;\n            fcn.00458fa0(arg1_00, arg2);\ncode_r0x0044a9a9:\n            *(*0x20 + -0x68) = 0x44a9b1;\n            fcn.00458f20(arg1);\n            puVar4 = arg1_00;\n            arg1_00 = puVar8;\n            puVar8 = in_R10;\n        }\ncode_r0x0044a9b4:\n        uVar2 = *(puVar8 + 8);\n        unaff_R12 = uVar2;\n        in_RAX = uVar3;\n        in_R10 = puVar8;\n        switch(unaff_R12) {\n        case 0:\n        case 5:\n            *(*0x20 + -0x68) = 0x44a9fb;\n            fcn.0044afe0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044a9b4;\n        case 1:\n            if (piVar7 != '\\0') {\n                if (arg1 <= arg1_00) goto code_r0x0044ab3b;\n                if (*0x544c10 == 0) {\n                    piVar6[arg1_00] = puVar8;\n                }\n                else {\n                    *(*0x20 + -0x68) = 0x44a7b7;\n                    fcn.00458c20(arg1, arg2, arg1_00);\n                    arg4 = puVar8;\n                }\n                *(*0x20 + -0x68) = 0x44a7c8;\n                fcn.0044ac20(arg2, arg2, arg1_00, arg4);\n                in_RAX = *(*0x20 + 8);\n                arg1 = *(*0x20 + -0x30);\n                arg2 = *(*0x20 + -0x28);\n                puVar4 = *(*0x20 + -0x20);\n                piVar6 = *(*0x20 + -0x18);\n                piVar7 = *(*0x20 + -0x3d);\n                arg1_00 = *(*0x20 + -0x38);\n                arg4 = *(*0x20 + -0x3c);\n            }\n            arg1_00 = arg1_00 + 1;\n            goto code_r0x0044a758;\n        case 2:\n        case 4:\n        case 9:\n            *(*0x20 + -0x68) = 0x44aabe;\n            fcn.0044afe0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044a9b4;\n        case 3:\n            LOCK();\n            if (uVar2 == *(puVar8 + 8)) {\n                *(puVar8 + 8) = 4;\n                *puVar8 = 0;\n                LOCK();\n                bVar10 = *(puVar8 + 8) == 4;\n                if (bVar10) {\n                    *(puVar8 + 8) = 5;\n                }\n                in_R10 = puVar8 & 0xffffffffffffff00 | bVar10;\n                if (!bVar10) {\n                    *(*0x20 + -0x68) = 0x44a81c;\n                    fcn.0044afe0();\n                    arg1 = *(*0x20 + -0x30);\n                    arg2 = *(*0x20 + -0x28);\n                    puVar4 = *(*0x20 + -0x20);\n                    piVar6 = *(*0x20 + -0x18);\n                    arg1_00 = *(*0x20 + -0x38);\n                    arg4 = *(*0x20 + -0x3c);\n                    in_RAX = *(*0x20 + 8);\n                }\n                arg4 = arg4 + 1;\n                piVar7 = 0x1;\n                unaff_R12 = in_RAX;\n                goto code_r0x0044a758;\n            }\n            goto code_r0x0044a9b4;\n        case 6:\n            *(*0x20 + -0x60) = 0x47cc98;\n            *(*0x20 + -0x68) = 0x44aa45;\n            fcn.004567a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            puVar4 = *(*0x20 + -0x20);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg1_00 = *(*0x20 + -0x38);\n            arg4 = *(*0x20 + -0x3c);\n            puVar8 = *(*0x20 + -0x10);\n            uVar3 = *(*0x20 + 8);\n            goto code_r0x0044a9b4;\n        case 7:\n        case 8:\n            goto code_r0x0044aa8f;\n        default:\n            *(*0x20 + -0x68) = 0x44aafb;\n            fcn.0044afe0();\n            arg1 = *(*0x20 + -0x30);\n            arg2 = *(*0x20 + -0x28);\n            piVar6 = *(*0x20 + -0x18);\n            piVar7 = *(*0x20 + -0x3d);\n            arg4 = *(*0x20 + -0x3c);\n            uVar3 = *(*0x20 + 8);\n            puVar4 = *(*0x20 + -0x20);\n            arg1_00 = *(*0x20 + -0x38);\n            puVar8 = *(*0x20 + -0x10);\n            goto code_r0x0044a9b4;\n        }\n    }\n    goto code_r0x0044ab46;\ncode_r0x0044aa8f:\n    LOCK();\n    if (uVar2 == *(puVar8 + 8)) goto code_r0x0044aa9c;\n    goto code_r0x0044a9b4;\ncode_r0x0044aa9c:\n    *(puVar8 + 8) = 9;\n    puVar8[1] = puVar8[7];\n    unaff_R12 = uVar3;\n    if (arg1_00 < arg1) {\n        if (*0x544c10 == 0) {\n            piVar6[arg1_00] = puVar8;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44a887;\n            fcn.00458c20(arg1, arg2, arg1_00);\n            arg4 = puVar8;\n        }\n        *(*0x20 + -0x68) = 0x44a898;\n        fcn.0044ac20(arg2, arg2, arg1_00, arg4);\n        LOCK();\n        if (*(*(*0x20 + -0x10) + 0x40) == 9) {\n            *(*(*0x20 + -0x10) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x68) = 0x44a8b8;\n            fcn.0044afe0();\n        }\n        arg1_00 = *(*0x20 + -0x38) + 1;\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + -0x30);\n        arg2 = *(*0x20 + -0x28);\n        puVar4 = *(*0x20 + -0x20);\n        piVar6 = *(*0x20 + -0x18);\n        piVar7 = 0x1;\n        arg4 = *(*0x20 + -0x3c);\ncode_r0x0044a758:\n        puVar4 = puVar4 + 1;\n        uVar3 = unaff_R12;\n        goto code_r0x0044a760;\n    }\n    *(*0x20 + -0x68) = 0x44ab3b;\n    fcn.00458f20(arg1);\ncode_r0x0044ab3b:\n    *(*0x20 + -0x68) = 0x44ab45;\n    in_RAX = fcn.00458f20(arg1);\ncode_r0x0044ab46:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x44ab50;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    in_R10 = puVar8;\n    goto code_r0x0044a700;\n}\n",
        "token_count": 3244
    },
    "0044ac20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ac20(uint64_t arg1, ulong noname_1, uint64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    bool bVar4;\n    bool bVar5;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar4 = unaff_RBX < unaff_RDI;\n            bVar5 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44ac51;\n                fcn.0044afe0();\n                arg1 = *(*0x20 + 0x10);\n                bVar4 = arg1 < *(*0x20 + 0x20);\n                bVar5 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar4 && !bVar5) {\n                iVar2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (iVar2 < 1) {\n                    *(*0x20 + -0x10) = iVar2;\n                    *(*0x20 + -0x28) = 0x44ac88;\n                    fcn.0044afe0();\n                    in_RAX = *(*0x20 + 8);\n                    iVar2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar1 = *(in_RAX + unaff_RDI * 8);\n                while (0 < unaff_RDI) {\n                    arg3 = unaff_RDI - 1 >> 2;\n                    if (unaff_RBX <= arg3) goto code_r0x0044ad3a;\n                    arg4 = *(in_RAX + arg3 * 8);\n                    if (*(arg4 + 8) == iVar2 || *(arg4 + 8) < iVar2) break;\n                    if (unaff_RBX <= unaff_RDI) goto code_r0x0044ad2f;\n                    if (*0x544c10 == 0) {\n                        *(in_RAX + unaff_RDI * 8) = arg4;\n                        unaff_RDI = arg3;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44ace6;\n                        unaff_RDI = arg3;\n                        in_RAX = fcn.00458c20(arg1, iVar2, arg3);\n                        arg3 = unaff_RDI;\n                    }\n                }\n                if (unaff_RDI < unaff_RBX) {\n                    iVar2 = *(in_RAX + unaff_RDI * 8);\n                    if (iVar2 != iVar1) {\n                        if (*0x544c10 == 0) {\n                            *(in_RAX + unaff_RDI * 8) = iVar1;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44ad14;\n                            unaff_RDI = fcn.00458be0(iVar2, in_RAX + unaff_RDI * 8, arg3, arg4);\n                        }\n                    }\n                    return unaff_RDI;\n                }\n                *(*0x20 + -0x28) = 0x44ad2f;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044ad2f:\n                *(*0x20 + -0x28) = 0x44ad3a;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044ad3a:\n                *(*0x20 + -0x28) = 0x44ad45;\n                fcn.00458f20(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44ad50;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00458f20(unaff_RBX);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x44ad6a;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1279
    },
    "0044ada0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ada0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    int64_t arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    uint64_t arg3;\n    uint64_t arg4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    int64_t unaff_R14;\n    int64_t iVar8;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            bVar9 = unaff_RBX < unaff_RDI;\n            bVar10 = unaff_RBX == unaff_RDI;\n            if (unaff_RBX <= unaff_RDI) {\n                *(*0x20 + -0x28) = 0x44add1;\n                fcn.0044afe0();\n                arg1 = *(*0x20 + 0x10);\n                bVar9 = arg1 < *(*0x20 + 0x20);\n                bVar10 = arg1 == *(*0x20 + 0x20);\n                in_RAX = *(*0x20 + 8);\n                unaff_RDI = *(*0x20 + 0x20);\n                unaff_RBX = arg1;\n            }\n            if (!bVar9 && !bVar10) {\n                arg2 = *(*(in_RAX + unaff_RDI * 8) + 8);\n                if (arg2 < 1) {\n                    *(*0x20 + -0x10) = arg2;\n                    *(*0x20 + -0x28) = 0x44ae08;\n                    fcn.0044afe0();\n                    in_RAX = *(*0x20 + 8);\n                    arg2 = *(*0x20 + -0x10);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RDI = *(*0x20 + 0x20);\n                }\n                iVar2 = *(in_RAX + unaff_RDI * 8);\n                arg3 = unaff_RDI;\n                while( true ) {\n                    unaff_RDI = arg3 * 4;\n                    arg4 = unaff_RDI + 1;\n                    if (unaff_RBX <= arg4) break;\n                    if (unaff_RBX <= arg4) goto code_r0x0044af7c;\n                    iVar8 = *(*(in_RAX + 8 + arg3 * 0x20) + 8);\n                    uVar7 = unaff_RDI + 2;\n                    uVar5 = arg4;\n                    iVar6 = iVar8;\n                    if (uVar7 < unaff_RBX) {\n                        if (unaff_RBX <= uVar7) goto code_r0x0044af71;\n                        iVar6 = *(*(in_RAX + 0x10 + arg3 * 0x20) + 8);\n                        uVar5 = uVar7;\n                        if (iVar8 <= iVar6) {\n                            uVar5 = arg4;\n                            iVar6 = iVar8;\n                        }\n                    }\n                    arg4 = unaff_RDI + 3;\n                    uVar7 = uVar5;\n                    iVar8 = iVar6;\n                    if (arg4 < unaff_RBX) {\n                        if (unaff_RBX <= arg4) goto code_r0x0044af66;\n                        iVar3 = *(*(in_RAX + 0x18 + arg3 * 0x20) + 8);\n                        uVar1 = unaff_RDI + 4;\n                        uVar7 = arg4;\n                        iVar8 = iVar3;\n                        if (uVar1 < unaff_RBX) {\n                            if (unaff_RBX <= uVar1) goto code_r0x0044af5b;\n                            iVar8 = *(*(in_RAX + 0x20 + arg3 * 0x20) + 8);\n                            uVar7 = uVar1;\n                            if (iVar3 <= iVar8) {\n                                uVar7 = arg4;\n                                iVar8 = iVar3;\n                            }\n                        }\n                        if (iVar6 <= iVar8) {\n                            uVar7 = uVar5;\n                            iVar8 = iVar6;\n                        }\n                    }\n                    if (arg2 <= iVar8) break;\n                    if (unaff_RBX <= uVar7) goto code_r0x0044af50;\n                    if (unaff_RBX <= arg3) goto code_r0x0044af45;\n                    if (*0x544c10 == 0) {\n                        *(in_RAX + arg3 * 8) = *(in_RAX + uVar7 * 8);\n                        arg3 = uVar7;\n                    }\n                    else {\n                        *(*0x20 + -0x28) = 0x44af05;\n                        in_RAX = fcn.00458c20(arg1, arg2, arg3);\n                        arg3 = uVar7;\n                    }\n                }\n                if (arg3 < unaff_RBX) {\n                    iVar8 = *(in_RAX + arg3 * 8);\n                    if (iVar8 != iVar2) {\n                        if (*0x544c10 == 0) {\n                            *(in_RAX + arg3 * 8) = iVar2;\n                        }\n                        else {\n                            *(*0x20 + -0x28) = 0x44af30;\n                            fcn.00458be0(iVar8, arg2, arg3, arg4);\n                        }\n                    }\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x44af45;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af45:\n                *(*0x20 + -0x28) = 0x44af50;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af50:\n                *(*0x20 + -0x28) = 0x44af5b;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af5b:\n                *(*0x20 + -0x28) = 0x44af66;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af66:\n                *(*0x20 + -0x28) = 0x44af71;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af71:\n                *(*0x20 + -0x28) = 0x44af7c;\n                fcn.00458f20(unaff_RBX);\ncode_r0x0044af7c:\n                *(*0x20 + -0x28) = 0x44af87;\n                fcn.00458f20(unaff_RBX);\n            }\n            *(*0x20 + -0x28) = 0x44af92;\n            arg1 = unaff_RBX;\n            in_RAX = fcn.00458f20(unaff_RBX);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x44afac;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1868
    },
    "0044b060": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint64_t fcn.0044b060(void)\n\n{\n    uint64_t uVar1;\n    int64_t unaff_R14;\n    bool bVar2;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n    }\n    uVar1 = *0x506c58;\n    if ((*0x4f6c18 == 0) && (*0x4f6bd1 == '\\0')) {\n        uVar1 = 0;\n    }\n    if (uVar1 == 0) {\n        return 0;\n    }\n    fcn.00409860();\n    uVar1 = *0x506c58;\n    if ((*0x4f6c18 == 0) && (*0x4f6bd1 == '\\0')) {\n        uVar1 = 0;\n    }\n    if (uVar1 != 0) {\n        LOCK();\n        bVar2 = uVar1 == *0x506c58;\n        *0x506c58 = *0x506c58 ^ bVar2 * *0x506c58;\n        if (bVar2) {\n            fcn.00409a80();\n            return uVar1;\n        }\n    }\n    fcn.00409a80();\n    return 0;\n}\n",
        "token_count": 311
    },
    "0044b160": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b160(void)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n    }\n    puVar1 = *(in_RAX + 0x11d0);\n    *(in_RAX + 0x11d0) = 0;\n    if (puVar1 == NULL) {\n        return;\n    }\n    fcn.00409860();\n    *puVar1 = 0;\n    puVar2 = puVar1;\n    if (*0x4f6c18 != NULL) {\n        **0x4f6c20 = puVar1;\n        puVar2 = *0x4f6c18;\n    }\n    *0x4f6c18 = puVar2;\n    *0x4f6c20 = puVar1;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 253
    },
    "0044b220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044b220(ulong arg1)\n\n{\n    int64_t iVar1;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = fcn.0044ba60();\n    if ((*0x4f6bd0 == '\\0') && (*(iVar1 + 0x268) == '\\0')) {\n        fcn.0044bb00();\n        return;\n    }\n    noname_1 = unaff_RBX;\n    if ((0 < unaff_RBX) && (*(iVar1 + 0x90) == unaff_R14)) {\n        noname_1 = unaff_RBX + 1;\n    }\n    fcn.0044b340(unaff_RBX & 0xffffffff, noname_1, 0, noname_1);\n    fcn.0044bb00();\n    return;\n}\n",
        "token_count": 249
    },
    "0044b940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0044b940(uint64_t arg1)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            iVar2 = *(in_RAX + 0x90);\n            *(*0x20 + -0x18) = iVar2;\n            if (unaff_R14 == iVar2) {\n                *(*0x20 + -0x48) = 0x44b9c5;\n                arg1 = fcn.0044fd20(arg1);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            else if (iVar2 == 0) {\n                arg1 = 0;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x44b9a5;\n                arg1 = fcn.0044fea0(unaff_RBX, unaff_RBX);\n                unaff_RBX = *(*0x20 + -0x10);\n                unaff_RDI = *(*0x20 + 0x20);\n                iVar2 = *(*0x20 + -0x18);\n            }\n            unaff_RSI = arg1 - 1;\n            if (0 < arg1) {\n                arg1 = unaff_RSI;\n            }\n            if ((0 < arg1) && (*(iVar2 + 0x98) == 1)) {\n                arg1 = arg1 - 1;\n            }\n            if (arg1 <= unaff_RDI) {\n                *(*0x20 + -0x48) = 0x44ba05;\n                uVar1 = fcn.0044be00(arg1);\n                return uVar1;\n            }\n            *(*0x20 + -0x48) = 0x44ba19;\n            in_RAX = fcn.00458fa0(arg1, unaff_RDI);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + 0x28) = unaff_RSI;\n        *(puVar3 + -8) = 0x44ba38;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        unaff_RSI = *(puVar3 + 0x28);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 828
    },
    "0044ba60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044ba60(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(unaff_R14 + 0x30);\n    if (*(iVar2 + 0xa0) != 0) {\n        return iVar2;\n    }\n    fcn.00409860();\n    return iVar2;\n}\n",
        "token_count": 175
    },
    "0044bb00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044bb00(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_EAX == -1) {\n        fcn.00409a80();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xd8);\n    *(*(unaff_R14 + 0x30) + 0xd8) = iVar1 + -1;\n    if ((iVar1 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 205
    },
    "0044bb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0044bb80(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *in_RAX;\n    ulong *puVar3;\n    uint64_t uVar4;\n    uint unaff_EBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar7 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f6bc8 == 0) {\n                uVar6 = 1;\n            }\n            else {\n                uVar6 = *0x4f6bc8 & 0xffffffffffffff00 | *(*(unaff_R14 + 0x30) + 0x90) != *0x4f6bc8;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x19) = uVar6;\n            if (uVar6 != '\\0') {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x38) = 0x44bbd9;\n                fcn.00409860();\n                in_RAX = *(*0x20 + 8);\n                uVar6 = *(*0x20 + -0x19);\n            }\n            puVar3 = *0x4f6c18;\n            puVar2 = *0x4f6c20;\n            if ((in_RAX != NULL) && (*in_RAX = 0,  puVar3 = in_RAX,  puVar2 = in_RAX,  *0x4f6c18 != NULL)) {\n                **0x4f6c20 = in_RAX;\n                puVar3 = *0x4f6c18;\n                puVar2 = in_RAX;\n            }\n            *0x4f6c20 = puVar2;\n            *0x4f6c18 = puVar3;\n            if (*0x4f6c10 == NULL) {\n                *(*0x20 + -0x38) = 0x44bc48;\n                puVar3 = fcn.004127c0();\n                if (puVar3 != NULL) goto code_r0x0044bc51;\n            }\n            else {\n                puVar3 = *0x4f6c10;\n                *0x4f6c10 = **0x4f6c10;\ncode_r0x0044bc51:\n                *(*0x20 + -0x18) = puVar3;\n                *(*0x20 + -0x10) = puVar3;\n                *puVar3 = 0;\n                puVar3[2] = 0;\n                *(*0x20 + -0x38) = 0x44bc6d;\n                fcn.00458920(uVar6, 0);\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                iVar1 = *(*0x20 + -0x10);\n                uVar6 = *(*0x20 + -0x30) >> 6;\n                if (*(iVar1 + 8) == *(*0x20 + -0x30) >> 6) {\n                    uVar6 = *(iVar1 + 8) + 1;\n                }\n                *(iVar1 + 8) = uVar6;\n                if (*(iVar1 + 0x10) < 0xfbe8) {\n                    *(iVar1 + 0x418 + *(iVar1 + 0x10)) = 0x41;\n                    uVar4 = *(iVar1 + 0x10) + 1;\n                    *(iVar1 + 0x10) = uVar4;\n                    for (uVar5 = *(*0x20 + 0x10); 0x7f < uVar5; uVar5 = uVar5 >> 7) {\n                        if (0xfbe7 < uVar4) goto code_r0x0044bdb2;\n                        *(iVar1 + 0x418 + uVar4) = uVar5 | 0x80;\n                        uVar4 = uVar4 + 1;\n                    }\n                    if (uVar4 < 0xfbe8) {\n                        *(iVar1 + 0x418 + uVar4) = uVar5;\n                        uVar4 = uVar4 + 1;\n                        *(iVar1 + 0x10) = uVar4;\n                        for (; 0x7f < uVar6; uVar6 = uVar6 >> 7) {\n                            if (0xfbe7 < uVar4) goto code_r0x0044bd95;\n                            *(iVar1 + 0x418 + uVar4) = uVar6 | 0x80;\n                            uVar4 = uVar4 + 1;\n                        }\n                        if (uVar4 < 0xfbe8) {\n                            *(iVar1 + 0x418 + uVar4) = uVar6;\n                            *(iVar1 + 0x10) = uVar4 + 1;\n                            if (*(*0x20 + -0x19) != '\\0') {\n                                *(*0x20 + -0x38) = 0x44bd79;\n                                fcn.00409a80();\n                            }\n                            return *(*0x20 + -0x18);\n                        }\n                        *(*0x20 + -0x38) = 0x44bd95;\n                        fcn.00458f20(0xfbe8);\ncode_r0x0044bd95:\n                        *(*0x20 + -0x38) = 0x44bda5;\n                        fcn.00458f20(0xfbe8);\n                    }\n                    *(*0x20 + -0x38) = 0x44bdb2;\n                    fcn.00458f20(0xfbe8);\ncode_r0x0044bdb2:\n                    *(*0x20 + -0x38) = 0x44bdbf;\n                    fcn.00458f20(0xfbe8);\n                }\n                *(*0x20 + -0x38) = 0x44bdcc;\n                fcn.00458f20(0xfbe8);\n            }\n            unaff_EBX = 0x14;\n            *(*0x20 + -0x38) = 0x44bddd;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_EBX;\n        *(puVar7 + -8) = 0x44bdec;\n        fcn.0045b2e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_EBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1616
    },
    "0044c1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044c1e0(void)\n\n{\n    int64_t **in_RAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar2 = unaff_RBX + 7U & 0xfffffffffffffff8;\n            if ((*in_RAX == NULL) || (0xfff8 < in_RAX[1] + uVar2)) {\n                if (uVar2 < 0xfff9) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x28) = 0x44c248;\n                    piVar1 = fcn.004127c0();\n                    if (piVar1 != NULL) {\n                        in_RAX = *(*0x20 + 8);\n                        *piVar1 = *in_RAX;\n                        *in_RAX = piVar1;\n                        in_RAX[1] = NULL;\n                        uVar2 = *(*0x20 + -0x10);\n                        goto code_r0x0044c26c;\n                    }\n                    goto code_r0x0044c2a5;\n                }\n            }\n            else {\ncode_r0x0044c26c:\n                piVar1 = in_RAX[1];\n                if (piVar1 < 0xfff8) {\n                    in_RAX[1] = piVar1 + uVar2;\n                    return *in_RAX + piVar1 + 1;\n                }\n                *(*0x20 + -0x28) = 0x44c2a5;\n                fcn.00458f40(0xfff8);\ncode_r0x0044c2a5:\n                *(*0x20 + -0x28) = 0x44c2b6;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x28) = 0x44c2c7;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x44c2d7;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 687
    },
    "0044c360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c360(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044b220(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044c420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c420(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) == '\\0') {\n                *(iVar1 + 0x11d8) = 1;\n                *(iVar1 + 0x11e0) = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x44c474;\n            fcn.00430040();\n        }\n        *(puVar2 + -8) = 0x44c47a;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 298
    },
    "0044c480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c480(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (*(iVar1 + 0x11d8) != '\\0') {\n        if (*(iVar1 + 0x11e0) == 0) {\n            fcn.0044b220(0);\n        }\n        *(iVar1 + 0x11e0) = *(iVar1 + 0x11e0) + in_RAX;\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0044c520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c520(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n            if (*(iVar1 + 0x11d8) != '\\0') {\n                if (*(iVar1 + 0x11e0) != 0) {\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x20) = in_XMM15;\n                    *(*0x20 + -0x20) = *(iVar1 + 0x11e0);\n                    *(*0x20 + -0x18) = *(iVar1 + 0x11e8);\n                    *(*0x20 + -0x50) = 0x44c599;\n                    fcn.0044b220(*0x20 + -0x20);\n                    iVar1 = *(*0x20 + -0x10);\n                }\n                *(iVar1 + 0x11d8) = 0;\n                return;\n            }\n            *(*0x20 + -0x50) = 0x44c5c5;\n            fcn.00430040();\n        }\n        *(puVar2 + -8) = 0x44c5cb;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 431
    },
    "0044c6c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044c6c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n            iVar2 = *(*(iVar1 + 0x30) + 0xa0);\n            *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n            if (*(iVar2 + 0x1228) == 0) {\n                if (*(iVar1 + 0xe0) == iVar2) {\n                    *(*0x20 + -0x38) = 0;\n                    *(*0x20 + -0x38) = *(iVar1 + 0x98);\n                    *(*0x20 + -0x68) = 0x44c7a9;\n                    fcn.0044b220(*0x20 + -0x38);\n                    return;\n                }\n                *(iVar1 + 0xe0) = iVar2;\n                *(*0x20 + -0x30) = in_XMM15;\n                *(*0x20 + -0x30) = *(iVar1 + 0x98);\n                *(*0x20 + -0x28) = *(iVar1 + 0xd8);\n                *(*0x20 + -0x68) = 0x44c7ee;\n                fcn.0044b220(*0x20 + -0x30);\n                return;\n            }\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x20) = *(iVar1 + 0x98);\n            *(*0x20 + -0x18) = *(iVar1 + 0xd8);\n            if (*(iVar2 + 0x1228) < 4) {\n                *(*0x20 + -0x10) = *(*(iVar2 + 0x1228) * 8 + 0x506c88);\n                *(*0x20 + -0x68) = 0x44c768;\n                fcn.0044b220(*0x20 + -0x20);\n                return;\n            }\n            *(*0x20 + -0x68) = 0x44c805;\n            fcn.00458f20(4);\n        }\n        *(puVar3 + -8) = 0x44c80b;\n        fcn.004568e0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 695
    },
    "0044cae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044cae0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar3 = *(unaff_R14 + 0x30);\n    uVar4 = *(iVar3 + 0xa0);\n    *(iVar3 + 0xa0) = in_RAX;\n    fcn.0044b220(0);\n    *(iVar3 + 0xa0) = uVar4;\n    iVar2 = *(iVar3 + 0xd8);\n    *(iVar3 + 0xd8) = iVar2 + -1;\n    if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n        *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "0044ea20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0044ea20(ulong arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int64_t in_RAX;\n    char cVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar1 = *(in_RAX + 0x2b);\n            if (uVar1 < 6) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x2b + *(in_RAX + 0x1c) * 4 + 0x15);\n                uVar9 = uVar2 + *(unaff_RBX + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            if (uVar9 == 0) {\n                return;\n            }\n            *(*0x20 + -0x40) = uVar9;\n            *(*0x20 + 0x18) = arg1;\n            if (uVar1 < 7) {\n                uVar9 = 0;\n            }\n            else {\n                uVar2 = *(in_RAX + 0x2b + *(in_RAX + 0x1c) * 4 + 0x19);\n                uVar9 = uVar2 + *(unaff_RBX + 0x140) & (uVar2 == 0xffffffff) - 1;\n            }\n            *(*0x20 + -0x48) = uVar9;\n            *(*0x20 + -0x90) = 0x44eaf8;\n            uVar4 = fcn.004483e0(3);\n            puVar3 = *(*0x20 + -0x48);\n            if (puVar3 == NULL) {\n                uVar7 = 0xff;\n            }\n            else {\n                uVar7 = *puVar3;\n            }\n            *(*0x20 + -0x5c) = uVar7;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0xc) = 0;\n            *(*0x20 + -0x20) = 0x44ef20;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x10) = uVar4;\n            *(*0x20 + -0xc) = uVar7;\n            *(*0x20 + -0x38) = in_XMM15;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x38) = 0x44ee40;\n            *(*0x20 + -0x30) = *(*0x20 + 0x18);\n            *(*0x20 + -0x28) = *0x20 + -0x20;\n            *(*0x20 + -0x5b) = 1;\n            unaff_RDI = *(*0x20 + -0x40);\n            uVar9 = 0;\n            cVar5 = '\\0';\n            while (uVar9 < 0xab) {\n                *(*0x20 + -0x5a) = cVar5;\n                uVar1 = *(unaff_RDI + uVar9);\n                uVar8 = uVar9 + 1;\n                *(*0x20 + -0x58) = uVar8;\n                if (uVar1 < 0xfd) {\n                    if (uVar1 == 0xfb) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x44ebdd;\n                            fcn.00431980();\n                            *(*0x20 + -0x90) = 0x44ebee;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x44ebf3;\n                            fcn.00431a00();\n                        }\n                        *(*0x20 + -0x90) = 0x44ebf8;\n                        fcn.00431980();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x44ec09;\n                        fcn.00432280();\n                        *(*0x20 + -0x90) = 0x44ec0e;\n                        fcn.00431a00();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else if (uVar1 == 0xfc) {\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x44ec3c;\n                            fcn.00431980();\n                            *(*0x20 + -0x90) = 0x44ec4d;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x44ec52;\n                            fcn.00431a00();\n                        }\n                        *(*0x20 + -0x90) = 0x44ec57;\n                        fcn.00431980();\n                        unaff_RBX = 3;\n                        *(*0x20 + -0x90) = 0x44ec68;\n                        fcn.00432280();\n                        *(*0x20 + -0x90) = 0x44ec6d;\n                        fcn.00431a00();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                    }\n                    else {\ncode_r0x0044ecfe:\n                        *(*0x20 + -0x59) = uVar1;\n                        *(*0x20 + -0x50) = uVar9;\n                        if (*(*0x20 + -0x5b) == '\\0') {\n                            *(*0x20 + -0x90) = 0x44ed15;\n                            fcn.00431980();\n                            unaff_RBX = 2;\n                            *(*0x20 + -0x90) = 0x44ed26;\n                            fcn.00432280();\n                            *(*0x20 + -0x90) = 0x44ed2b;\n                            fcn.00431a00();\n                            uVar9 = *(*0x20 + -0x50);\n                            unaff_RDI = *(*0x20 + -0x40);\n                            uVar8 = *(*0x20 + -0x58);\n                        }\n                        if (0xaa < uVar8) {\n                            *(*0x20 + -0x90) = 0x44ede5;\n                            fcn.00458f20(0xab);\n                            break;\n                        }\n                        unaff_RBX = *(uVar9 + 1 + unaff_RDI);\n                        *(*0x20 + -0x90) = 0x44ed6b;\n                        (**(*0x20 + -0x38))();\n                        if (*(*0x20 + -0x59) < *(*0x20 + -0x5c)) {\n                            cVar5 = *(*0x20 + -0x5a);\n                        }\n                        else {\n                            cVar5 = *(*0x20 + -0x5a) + '\\x01';\n                        }\n                        uVar9 = *(*0x20 + -0x50) + 2;\n                    }\ncode_r0x0044edbd:\n                    *(*0x20 + -0x5b) = 0;\n                }\n                else {\n                    if (uVar1 == 0xfd) {\n                        *(*0x20 + -0x90) = 0x44ed98;\n                        fcn.00431980();\n                        unaff_RBX = 1;\n                        *(*0x20 + -0x90) = 0x44eda9;\n                        fcn.00432280();\n                        *(*0x20 + -0x90) = 0x44edae;\n                        fcn.00431a00();\n                        uVar9 = *(*0x20 + -0x58);\n                        cVar5 = *(*0x20 + -0x5a);\n                        goto code_r0x0044edbd;\n                    }\n                    if (uVar1 != 0xfe) {\n                        if (uVar1 == 0xff) {\n                            return;\n                        }\n                        goto code_r0x0044ecfe;\n                    }\n                    if (*(*0x20 + -0x5b) == '\\0') {\n                        *(*0x20 + -0x90) = 0x44eca5;\n                        fcn.00431980();\n                        *(*0x20 + -0x90) = 0x44ecb6;\n                        fcn.00432280();\n                        *(*0x20 + -0x90) = 0x44ecbb;\n                        fcn.00431a00();\n                    }\n                    *(*0x20 + -0x90) = 0x44ecc5;\n                    fcn.00431980();\n                    unaff_RBX = 1;\n                    *(*0x20 + -0x90) = 0x44ecd6;\n                    fcn.00432280();\n                    *(*0x20 + -0x90) = 0x44ecdb;\n                    fcn.00431a00();\n                    *(*0x20 + -0x5b) = 1;\n                    uVar9 = *(*0x20 + -0x58);\n                    cVar5 = *(*0x20 + -0x5a);\n                }\n                unaff_RDI = *(*0x20 + -0x40);\n            }\n            arg1 = 0xab;\n            *(*0x20 + -0x90) = 0x44edef;\n            in_RAX = fcn.00458f20(0xab);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x44ee09;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2543
    },
    "0044f200": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044f200(ulong param_1, ulong param_2)\n\n{\n    ulong arg1;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    arg1 = *(in_RAX + 0x128);\n    iVar2 = fcn.00447600();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.0044ff40(in_RAX, param_2, 0);\n    }\n    if ((cVar1 != '\\0') && (*(in_RAX + 0x98) != 1)) {\n        iVar2 = fcn.0044f2a0(arg1);\n    }\n    return iVar2;\n}\n",
        "token_count": 229
    },
    "0044f8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0044f8a0(ulong arg1)\n\n{\n    ulong arg1_00;\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t unaff_RBX;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00431a00();\n    for (uVar3 = 0; uVar3 < unaff_RBX; uVar3 = uVar3 + 1) {\n        arg1_00 = *(in_RAX + uVar3 * 8);\n        uVar4 = uVar3;\n        fcn.00447600();\n        cVar1 = fcn.00450000(uVar4 & 0xffffff00 | uVar3 == 0);\n        if (cVar1 != '\\0') {\n            fcn.0044fa60(arg1_00);\n        }\n    }\n    if (unaff_RBX == 100) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    iVar2 = fcn.00447600();\n    if (iVar2 == 0) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = fcn.00450000();\n    }\n    if ((cVar1 != '\\0') && (unaff_RDI != 1)) {\n        iVar2 = fcn.0044f2a0(uStack0000000000000028);\n    }\n    return iVar2;\n}\n",
        "token_count": 472
    },
    "0044ff40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0044ff40(int64_t arg1, ulong noname_1, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint32_t unaff_EDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        unaff_EDI = unaff_EDI & 0xff;\n    }\n    iVar1 = *(unaff_R14 + 0x30);\n    if (((1 < *(iVar1 + 0xc4)) && (arg1 != 0)) && ((*(iVar1 + 0x90) == arg1 || (arg1 == *(iVar1 + 0x98))))) {\n        return 1;\n    }\n    uVar2 = fcn.00450000(unaff_EDI);\n    return uVar2;\n}\n",
        "token_count": 217
    },
    "00450000": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.00450000(uint64_t param_1)\n\n{\n    uint8_t uVar1;\n    int64_t in_RAX;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    uint64_t arg2;\n    int64_t unaff_RBX;\n    char unaff_SIL;\n    char unaff_DIL;\n    int64_t unaff_R14;\n    bool bVar4;\n    int64_t iStack32;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        param_1 = param_1 & 0xff;\n    }\n    arg2 = *0x4d926c;\n    uVar1 = *(*(unaff_R14 + 0x30) + 0xf9);\n    uVar3 = uVar1;\n    if ((uVar1 == 0) && (arg2 = *0x4d926c >> 2,  uVar3 = arg2,  1 < *(*(unaff_R14 + 0x30) + 0xc4))) {\n        arg2 = 2;\n        uVar3 = arg2;\n    }\n    if (1 < uVar3) {\n        return true;\n    }\n    if (in_RAX == 0) {\n        return false;\n    }\n    if ((((unaff_DIL == '\\x15') && (unaff_SIL != '\\t')) && (unaff_SIL != '\\x12')) && (unaff_SIL != '\\x0e')) {\n        return false;\n    }\n    uVar3 = param_1;\n    piVar2 = fcn.00447da0();\n    if ((((unaff_RBX == 0xf) && (uVar3 = 0x2e656d69746e7572,  *piVar2 == 0x2e656d69746e7572)) &&\n        ((*(piVar2 + 1) == 0x61706f67 && ((*(piVar2 + 0xc) == 0x696e && (*(piVar2 + 0xe) == 'c')))))) &&\n       (arg2 = param_1 & 0xff,  param_1 == '\\0')) {\n        return true;\n    }\n    fcn.00402500(uVar3, arg2);\n    if (iStack32 < 0) {\n        bVar4 = false;\n    }\n    else {\n        if (unaff_RBX < 8) {\n            bVar4 = false;\n        }\n        else {\n            bVar4 = *piVar2 == 0x2e656d69746e7572;\n        }\n        if (bVar4) {\n            if (((unaff_RBX < 9) || (*piVar2 != 0x2e656d69746e7572)) || (*(piVar2 + 1) < 0x41)) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = *(piVar2 + 1) < 0x5b;\n            }\n        }\n        else {\n            bVar4 = true;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 715
    },
    "00450440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00450440(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 != 0) && (in_RAX != iVar1)) {\n        fcn.00431980();\n        fcn.00431be0();\n        fcn.00431a00();\n        fcn.00450200();\n        fcn.0044f560(0);\n    }\n    fcn.00433720();\n    return;\n}\n",
        "token_count": 183
    },
    "00450980": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450980(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f15e8 != 0) {\n        uStack64 = SUB168(in_XMM15, 0);\n        uStack48 = SUB168(in_XMM15 >> 0x40, 0);\n        uStack56 = uStack64;\n        for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n            fcn.00450aa0(&uStack64);\n        }\n        uStack64 = 0;\n        fcn.00450ca0();\n        return;\n    }\n    for (iVar1 = 0; (iVar1 < 0x20 && (*(in_RAX + iVar1 * 8) != 0)); iVar1 = iVar1 + 1) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00431be0();\n        fcn.00431a00();\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "00450aa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00450aa0(ulong *arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *arg1 = in_RAX;\n    iVar1 = 0;\n    do {\n        if (unaff_RBX < iVar1) {\n            return iVar1;\n        }\n        fcn.00450ca0();\n        if (arg1[3] == 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        else {\n            fcn.004466c0();\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431be0();\n            fcn.00431a00();\n        }\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431a00();\n        if (arg1[1] != 0) {\n            fcn.004466c0();\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00431ba0();\n            fcn.00431a00();\n        }\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00431be0();\n        fcn.00431a00();\n        iVar1 = iVar1 + 1;\n    } while (arg1[5] != 0);\n    return iVar1;\n}\n",
        "token_count": 404
    },
    "00450d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00450d20(int64_t arg1)\n\n{\n    ulong in_RAX;\n    code *pcVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (*0x4f15f0 == 0) {\n                return;\n            }\n            if ((*0x544a44 == 0) && (unaff_RDI = unaff_R14,  *(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n                pcVar1 = vtable..0;\n            }\n            else {\n                pcVar1 = 0x47ca18;\n            }\n            if (arg1 != 0) {\n                *(*0x20 + -0x28) = in_RAX;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = arg1;\n                pcVar1 = *pcVar1;\n                *(*0x20 + -0x40) = 0x450da7;\n                (*pcVar1)();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x40) = 0x450dc5;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x450ddf;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 599
    },
    "00450e00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00450e00(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = *(in_RAX + 0x28);\n            *(*0x20 + -0x20) = 0x450e25;\n            fcn.00450fa0();\n            *(*0x20 + -0x20) = 0x450e2a;\n            iVar2 = fcn.00451700();\n            if ((*(*(*0x20 + 8) + 0x14) & 2) == 0) {\n                return iVar2;\n            }\n            if (uVar1 != 0) {\n                return iVar2 + (-(uVar1 - 1) >> 0x3f & 1);\n            }\n            *(*0x20 + -0x20) = 0x450e74;\n            in_RAX = fcn.00458fe0(0);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x450e7f;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 421
    },
    "00451a80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00451a80(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint uVar4;\n    ulong in_RAX;\n    ulong uVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    int64_t *piVar15;\n    int64_t iVar16;\n    int64_t iVar17;\n    int64_t arg4;\n    int64_t iVar18;\n    int64_t iVar19;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x230 && *0x20 + -0x230 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x2b0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4d9cd0 == 0) {\n                return in_RAX;\n            }\n            *(*0x20 + -0x1b8) = in_XMM15;\n            *(*0x20 + -0x1a8) = in_XMM15;\n            *(*0x20 + -0x198) = in_XMM15;\n            if (*0x4d9c08 < 9) {\n                *(*0x20 + -0x2c0) = unaff_RBP;\n                *(*0x20 + -0x2b8) = 0x451afa;\n                fcn.00459178();\n                unaff_RBP = *(*0x20 + -0x2c0);\n                *(*0x20 + -0x1a8) = *0x20 + -0xf8;\n            }\n            *(*0x20 + -0x2b8) = 0x451b25;\n            uVar5 = fcn.0040c5e0(*0x20 + -0x1b8);\n            if (*0x4f1618 == NULL) {\n                piVar15 = NULL;\n                piVar6 = NULL;\n                piVar10 = NULL;\n            }\n            else {\n                piVar6 = **0x4f1618;\n                piVar15 = (*0x4f1618)[1];\n                piVar10 = (*0x4f1618)[2];\n            }\n            if (piVar15 != NULL) {\n                *(*0x20 + -0x238) = uVar5;\n                iVar17 = *piVar6;\n                iVar11 = (-(piVar10 + -1) >> 0x3f & 8) + piVar6;\n                *(*0x20 + -0x1f0) = iVar11;\n                iVar19 = piVar15 + -1;\n                *(*0x20 + -0x240) = iVar19;\n                iVar8 = 0;\n                do {\n                    if (iVar19 <= iVar8) {\n                        return uVar5;\n                    }\n                    *(*0x20 + -0x248) = iVar8;\n                    *(*0x20 + -0x218) = iVar17;\n                    iVar16 = *(iVar11 + iVar8 * 8);\n                    *(*0x20 + -0x1f8) = iVar16;\n                    arg4 = *(iVar17 + 0x160);\n                    *(*0x20 + -0x200) = arg4;\n                    iVar18 = *(iVar17 + 0x168);\n                    *(*0x20 + -0x250) = iVar18;\n                    iVar12 = 0;\n                    while (iVar12 < iVar18) {\n                        *(*0x20 + -600) = iVar12;\n                        uVar1 = *(arg4 + iVar12 * 4);\n                        if (*(iVar17 + 0x220) == 0) {\n                            iVar19 = uVar1 + *(iVar17 + 0x128);\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x451d7c;\n                            piVar6 = fcn.0040db00(uVar1);\n                            iVar19 = *piVar6;\n                        }\n                        *(*0x20 + -0x220) = iVar19;\n                        uVar1 = *(iVar19 + 0x10);\n                        *(*0x20 + -0x2b8) = 0x451d9f;\n                        piVar6 = fcn.0040db00(uVar1);\n                        iVar19 = *piVar6;\n                        uVar9 = piVar6[2];\n                        iVar8 = *(*0x20 + -0x220);\n                        for (iVar11 = 0; iVar11 < piVar6[1]; iVar11 = iVar11 + 1) {\n                            iVar17 = *(iVar19 + iVar11 * 8);\n                            if (iVar17 == iVar8) goto code_r0x00451d02;\n                        }\n                        uVar13 = piVar6[1] + 1;\n                        if (uVar9 < uVar13) {\n                            *(*0x20 + -0x2b8) = 0x451dd9;\n                            iVar19 = fcn.00441fe0(uVar9);\n                            iVar8 = *(*0x20 + -0x220);\n                        }\n                        *(*0x20 + -0x210) = iVar19;\n                        *(*0x20 + -0x260) = uVar13;\n                        *(*0x20 + -0x268) = uVar9;\n                        if (*0x544c10 == 0) {\n                            *(iVar19 + -8 + uVar13 * 8) = iVar8;\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x451e13;\n                            fcn.00458be0(uVar9, iVar19, iVar17, arg4);\n                        }\n                        uVar9 = *(iVar8 + 0x10);\n                        *(*0x20 + -0x2b8) = 0x451e27;\n                        puVar7 = fcn.0040de40(uVar9);\n                        puVar7[1] = *(*0x20 + -0x260);\n                        puVar7[2] = *(*0x20 + -0x268);\n                        if (*0x544c10 == 0) {\n                            *puVar7 = *(*0x20 + -0x210);\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x451e65;\n                            fcn.00458ba0(uVar9, *(*0x20 + -0x210), iVar17, arg4);\n                        }\ncode_r0x00451d02:\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar8 = *(*0x20 + -0x248);\n                        iVar11 = *(*0x20 + -0x1f0);\n                        iVar19 = *(*0x20 + -0x240);\n                        iVar16 = *(*0x20 + -0x1f8);\n                        iVar17 = *(*0x20 + -0x218);\n                        arg4 = *(*0x20 + -0x200);\n                        iVar18 = *(*0x20 + -0x250);\n                        iVar12 = *(*0x20 + -600) + 1;\n                    }\n                    if (*(iVar16 + 0x220) == 0) {\n                        *(*0x20 + -0x2b8) = 0x451bf3;\n                        uVar5 = fcn.0040c5e0(0);\n                        uVar13 = *0x4f1d18 + 1;\n                        uVar9 = *0x4f1d20;\n                        iVar19 = *0x4f1d10;\n                        if (*0x4f1d20 < uVar13) {\n                            *(*0x20 + -0x230) = uVar5;\n                            *(*0x20 + -0x2b8) = 0x451c2c;\n                            iVar8 = *0x4f1d10;\n                            iVar19 = fcn.00441fe0(*0x4f1d20);\n                            uVar9 = *0x4f1d20;\n                            iVar11 = iVar19;\n                            if (*0x544c10 != 0) {\n                                *(*0x20 + -0x2b8) = 0x451c51;\n                                iVar19 = fcn.00458a80(*0x4f1d20, iVar8, iVar17, arg4);\n                                iVar11 = *0x4f1d10;\n                            }\n                            *0x4f1d10 = iVar11;\n                            uVar5 = *(*0x20 + -0x230);\n                        }\n                        *0x4f1d18 = uVar13;\n                        if (*0x544c10 == 0) {\n                            *(iVar19 + -8 + uVar13 * 8) = uVar5;\n                            iVar19 = *(*0x20 + -0x1f8);\n                            *(iVar19 + 0x220) = uVar5;\n                        }\n                        else {\n                            *(*0x20 + -0x2b8) = 0x451c8f;\n                            fcn.00458a80(uVar9, iVar19, iVar17, arg4);\n                            iVar19 = *(*0x20 + -0x1f8);\n                            *(*0x20 + -0x2b8) = 0x451ca9;\n                            fcn.00458a80(iVar19, iVar19 + 0x220, iVar17, arg4);\n                        }\n                        iVar8 = *(iVar19 + 0x160);\n                        *(*0x20 + -0x200) = iVar8;\n                        iVar11 = *(iVar19 + 0x168);\n                        *(*0x20 + -0x250) = iVar11;\n                        iVar17 = 0;\n                        while (iVar17 < iVar11) {\n                            *(*0x20 + -600) = iVar17;\n                            iVar2 = *(iVar8 + iVar17 * 4);\n                            *(*0x20 + -0x26c) = iVar2;\n                            iVar17 = iVar2 + *(iVar19 + 0x128);\n                            *(*0x20 + -0x208) = iVar17;\n                            uVar1 = *(iVar17 + 0x10);\n                            *(*0x20 + -0x2b8) = 0x451ec5;\n                            piVar6 = fcn.0040db00(uVar1);\n                            iVar19 = *piVar6;\n                            *(*0x20 + -0x210) = iVar19;\n                            iVar8 = piVar6[1];\n                            *(*0x20 + -0x260) = iVar8;\n                            iVar11 = 0;\n                            while (iVar11 < iVar8) {\n                                *(*0x20 + -0x268) = iVar11;\n                                *(*0x20 + -0x228) = *(iVar19 + iVar11 * 8);\n                                *(*0x20 + -0x1e8) = in_XMM15;\n                                *(*0x20 + -0x1d8) = in_XMM15;\n                                *(*0x20 + -0x1c8) = in_XMM15;\n                                *(*0x20 + -0x2c0) = unaff_RBP;\n                                *(*0x20 + -0x2b8) = 0x451faf;\n                                fcn.00459199();\n                                unaff_RBP = *(*0x20 + -0x2c0);\n                                *(*0x20 + -0x1d8) = *0x20 + -0x188;\n                                *(*0x20 + -0x2b8) = 0x451fc8;\n                                uVar4 = fcn.004469a0();\n                                *(*0x20 + -0x1dc) = uVar4;\n                                *(*0x20 + -0x2b8) = 0x451fec;\n                                cVar3 = fcn.00452040(*0x20 + -0x1e8);\n                                if (cVar3 != '\\0') {\n                                    uVar5 = *(*0x20 + -0x228);\n                                    goto code_r0x00451ef7;\n                                }\n                                iVar19 = *(*0x20 + -0x210);\n                                iVar8 = *(*0x20 + -0x260);\n                                iVar11 = *(*0x20 + -0x268) + 1;\n                            }\n                            uVar5 = *(*0x20 + -0x208);\ncode_r0x00451ef7:\n                            *(*0x20 + -0x228) = uVar5;\n                            uVar9 = *(*0x20 + -0x26c);\n                            *(*0x20 + -0x2b8) = 0x451f1e;\n                            puVar7 = fcn.0040de40(uVar9);\n                            if (*0x544c10 == 0) {\n                                *puVar7 = *(*0x20 + -0x228);\n                            }\n                            else {\n                                *(*0x20 + -0x2b8) = 0x451f49;\n                                fcn.00458ba0(uVar9, *(*0x20 + -0x228), iVar17, arg4);\n                            }\n                            iVar19 = *(*0x20 + -0x1f8);\n                            iVar8 = *(*0x20 + -0x200);\n                            iVar11 = *(*0x20 + -0x250);\n                            iVar17 = *(*0x20 + -600) + 1;\n                        }\n                        uVar5 = *(*0x20 + -0x238);\n                        iVar8 = *(*0x20 + -0x248);\n                        iVar11 = *(*0x20 + -0x1f0);\n                        iVar19 = *(*0x20 + -0x240);\n                        iVar16 = *(*0x20 + -0x1f8);\n                    }\n                    iVar8 = iVar8 + 1;\n                    iVar17 = iVar16;\n                } while( true );\n            }\n            *(*0x20 + -0x2b8) = 0x452025;\n            fcn.00458f20(0);\n        }\n        *(puVar14 + -8) = 0x45202b;\n        in_RAX = fcn.004568e0();\n        *0x20 = puVar14;\n    } while( true );\n}\n",
        "token_count": 3237
    },
    "00454480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00454480(void)\n\n{\n    if (*0x544c10 != '\\0') {\n        fcn.00402e00();\n    }\n    fcn.00401080();\n    return;\n}\n",
        "token_count": 47
    },
    "004544e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004544e0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = in_RAX;\n    if (*0x544c10 != 0) {\n        fcn.00458a80(arg1, arg2, arg3, arg4);\n        uVar1 = *0x4f1630;\n    }\n    *0x4f1630 = uVar1;\n    return;\n}\n",
        "token_count": 170
    },
    "004546e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004546e0(ulong param_1, int64_t param_2)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    char cVar5;\n    int64_t *unaff_R14;\n    uchar auStackX8 [32];\n    int64_t iStack56;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    if (unaff_R14[0xe] < auStackX8) {\n        fcn.00430040();\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    unaff_R14[0x15] = 0;\n    iVar2 = *(unaff_R14[6] + 0xb0);\n    *(unaff_R14[6] + 0xb0) = 0;\n    cVar5 = fcn.0043a500();\n    if (cVar5 != '\\0') {\n        if (*0x4ef244 != '\\0') {\n            fcn.004567a0();\n        }\n        if (*0x4f6bd0 != '\\0') {\n            iVar3 = *(unaff_R14[6] + 0xa0);\n            if ((iVar3 != iVar2) || (*(iVar3 + 0x14) != *(unaff_R14[6] + 0x26c))) {\n                fcn.004567a0();\n            }\n        }\n        piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n        *piVar1 = *piVar1 + 1;\n        fcn.00434500(2);\n        unaff_R14[0xe] = 0;\n        *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n        if (*(unaff_R14 + 0xb1) == '\\0') {\n            unaff_R14[2] = *unaff_R14 + 0x13a0;\n        }\n        else {\n            unaff_R14[2] = -0x522;\n        }\n        *(unaff_R14 + 0xb7) = 0;\n        if ((*0x4f2720 != '\\0') && (cVar5 = fcn.004508a0(),  cVar5 == '\\0')) {\n            fcn.00432ac0();\n        }\n        return;\n    }\n    unaff_R14[0x1a] = 0;\n    if (*0x4f6bd0 != '\\0') {\n        while ((iVar2 != 0 && (param_2 = unaff_R14[6],  *(param_2 + 0x26c) == *(iVar2 + 0x14)))) {\n            iStack56 = 0x47cc98;\n            fcn.004567a0();\n        }\n        fcn.00458920(unaff_R14, param_2);\n        unaff_R14[0x1a] = iStack56;\n    }\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    fcn.00456720();\n    unaff_R14[0xe] = 0;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    *(unaff_R14 + 0xb7) = 0;\n    return;\n}\n",
        "token_count": 819
    },
    "00454960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00454960(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    if (((3 < in_RAX) || (*0x544a30 < 2)) || (*0x544a28 <= *0x4f26f8 + 1 + *0x4f26fc)) {\n        return 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    do {\n    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n    if ((*(iVar1 + 0x194) == *(iVar1 + 400)) && (*(iVar1 + 0x998) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 187
    },
    "00454d60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.00454d60(uchar param_1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t in_RAX;\n    int64_t **ppiVar3;\n    ulong *puVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint64_t uVar9;\n    int64_t *piVar10;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    bool bVar11;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x78 && *0x20 + -0x78 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xf8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX != 0) && ((*(in_RAX + 0x17) & 0x1f) == 0x13)) {\n                *(*0x20 + -0x98) = in_XMM15;\n                *(*0x20 + -0x88) = in_XMM15;\n                *(*0x20 + -0x78) = in_XMM15;\n                *(*0x20 + -0x68) = in_XMM15;\n                if ((*(in_RAX + 0x14) & 1) == 0) {\n                    iVar7 = 0x38;\n                }\n                else {\n                    iVar7 = 0x48;\n                }\n                arg1_00 = *(in_RAX + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(*0x20 + -0xb0) = in_RAX;\n                    *(*0x20 + -0xc0) = iVar7 + in_RAX;\n                    *(*0x20 + -0xb8) = unaff_RBX;\n                    *(*0x20 + -200) = arg1_00;\n                    iVar7 = 0;\n                    while (iVar7 < arg1_00) {\n                        *(*0x20 + -0xd0) = iVar7;\n                        *(*0x20 + -0x100) = 0x454e25;\n                        fcn.004486c0();\n                        in_RAX = *(*0x20 + -0xb0);\n                        unaff_RBX = *(*0x20 + -0xb8);\n                        arg1_00 = *(*0x20 + -200);\n                        iVar7 = *(*0x20 + -0xd0) + 1;\n                    }\n                    arg2 = *(*0x20 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x60) = arg2;\n                    uVar1 = *(in_RAX + 0x14);\n                    arg1_00 = uVar1;\n                    uVar2 = *(in_RAX + 0x30);\n                    piVar10 = uVar2;\n                    arg1 = (*(in_RAX + 0x32) & 0x7fff) + uVar2 & 0xffff;\n                    if (piVar10 <= arg1) {\n                        arg4 = uVar2;\n                        arg3 = piVar10 << 3;\n                        uVar9 = piVar10 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar1 & 1) == 0) {\n                                iVar7 = 0x38;\n                            }\n                            else {\n                                iVar7 = 0x48;\n                            }\n                            arg1 = *(iVar7 + in_RAX + uVar9);\n                            if (*arg1 == 8) {\n                                if ((uVar1 & 1) == 0) {\n                                    iVar7 = 0x38;\n                                }\n                                else {\n                                    iVar7 = 0x48;\n                                }\n                                uVar6 = *(*(iVar7 + in_RAX + uVar9) + 0x17) & 0x1f;\n                                arg1 = uVar6;\n                                cVar5 = uVar6;\n                                if ((cVar5 != '\\r') && (cVar5 != '\\x0e')) {\n                                    if (*0x4d92a0 == 0) {\n                                        *(*0x20 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(*0x20 + -0x78) + 7U & 0xfffffffffffffff8) + *(*0x20 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(*0x20 + -0xa8) = 0;\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0xa8) = unaff_RBX;\n                                        *(*0x20 + -0xa0) = 0;\n                                        *(*0x20 + -0x100) = 0x454f74;\n                                        fcn.00409860();\n                                        iVar7 = *0x5449c8;\n                                        *(*0x20 + -0x100) = 0x454f8c;\n                                        ppiVar3 = fcn.0040ca00(*0x20 + -0xa8);\n                                        arg1 = *ppiVar3;\n                                        if (iVar7 != '\\0') {\n                                            *(*0x20 + -0xd8) = arg1;\n                                            *(*0x20 + -0x100) = 0x455119;\n                                            fcn.00409a80();\n                                            return *(*0x20 + -0xd8) * 5 + 0x45bd00;\n                                        }\n                                        iVar7 = *0x5449c8;\n                                        if (*0x5449c8 == 0) {\n                                            *(*0x20 + -0x100) = 0x454fa7;\n                                            iVar7 = fcn.0040c560();\n                                            if (*0x544c10 != 0) {\n                                                *(*0x20 + -0x100) = 0x454fc5;\n                                                fcn.00458a80(arg1, arg2, arg3, arg4);\n                                                iVar7 = *0x5449c8;\n                                            }\n                                        }\n                                        *0x5449c8 = iVar7;\n                                        bVar11 = *0x5449d0 < 2000;\n                                        if (*0x5449d0 < 2000) {\n                                            *(*0x20 + -0x108) = unaff_RBP;\n                                            *(*0x20 + -0x100) = 0x454ff3;\n                                            iVar7 = fcn.004591b0();\n                                            unaff_RBP = *(*0x20 + -0x108);\n                                            *(*0x20 + -0x58) = *(*0x20 + -0xa8);\n                                            *(*0x20 + -0x48) = *(*0x20 + -0x98);\n                                            *(*0x20 + -0x44) = *(*0x20 + -0x94);\n                                            *(*0x20 + -0x40) = *(*0x20 + -0x90);\n                                            *(*0x20 + -0x3c) = *(*0x20 + -0x8c);\n                                            *(*0x20 + -0x38) = *(*0x20 + -0x88);\n                                            *(*0x20 + -0x34) = *(*0x20 + -0x84);\n                                            *(*0x20 + -0x30) = *(*0x20 + -0x80);\n                                            *(*0x20 + -0x2c) = *(*0x20 + -0x7c);\n                                            *(*0x20 + -0x28) = *(*0x20 + -0x78);\n                                            *(*0x20 + -0x24) = *(*0x20 + -0x74);\n                                            *(*0x20 + -0x20) = *(*0x20 + -0x70);\n                                            *(*0x20 + -0x1c) = *(*0x20 + -0x6c);\n                                            *(*0x20 + -0x18) = *(*0x20 + -0x68);\n                                            *(*0x20 + -0x14) = *(*0x20 + -100);\n                                            *(*0x20 + -0x10) = *(*0x20 + -0x60);\n                                            *(*0x20 + -0xc) = *(*0x20 + -0x5c);\n                                            if (bVar11) {\n                                                *(*0x20 + -0xe0) = iVar7;\n                                                *(*0x20 + -200) = iVar7 * 5;\n                                                if (*0x544c10 == 0) {\n                                                    *(*0x20 + -0x108) = unaff_RBP;\n                                                    *(*0x20 + -0x100) = 0x45508f;\n                                                    fcn.0045951a();\n                                                }\n                                                else {\n                                                    *(*0x20 + -0x100) = 0x4550ac;\n                                                    fcn.0040f2c0(*0x20 + -0x58);\n                                                }\n                                                *(*0x20 + -0x100) = 0x4550c5;\n                                                puVar4 = fcn.0040cc40(*0x20 + -0xa8);\n                                                *puVar4 = *(*0x20 + -0xe0);\n                                                *0x5449d0 = *0x5449d0 + 1;\n                                                *(*0x20 + -0x100) = 0x4550e5;\n                                                fcn.00409a80();\n                                                return *(*0x20 + -200) + 0x45bd00;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(*0x20 + -0x100) = 0x455147;\n                                            fcn.00458f20(2000);\n                                        }\n                                        *(*0x20 + -0x100) = 0x455156;\n                                        fcn.00409a80();\n                                        *(*0x20 + -0x100) = 0x455167;\n                                        fcn.00430040();\n                                    }\n                                    *(*0x20 + -0x100) = 0x45517a;\n                                    fcn.0042f8a0();\n                                }\n                                *(*0x20 + -0x100) = 0x45518d;\n                                fcn.0042f8a0();\n                            }\n                            *(*0x20 + -0x100) = 0x4551a5;\n                            fcn.0042f8a0();\n                        }\n                        *(*0x20 + -0x100) = 0x4551b8;\n                        fcn.0042f8a0();\n                    }\n                    *(*0x20 + -0x100) = 0x4551c5;\n                    fcn.00458fe0(arg1);\n                }\n                *(*0x20 + -0x100) = 0x4551d2;\n                fcn.00458f60(arg1_00, 0x100000);\n                param_1 = arg1_00;\n            }\n            unaff_RBX = 0x48f700;\n            *(*0x20 + -0x100) = 0x4551e5;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = param_1;\n        *(puVar8 + -8) = 0x4551f9;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        param_1 = puVar8[0x18];\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 2765
    },
    "00455220": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00455220(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    ulong uStack24;\n    uint uStack16;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x544bc0);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    if (*0x5449ef == '\\0') {\n        *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n        *(iVar2 + 0x2c8) = 1;\n        *(iVar2 + 0x2d0) = auStackX16;\n    }\n    else {\n        *(iVar2 + 0x2c0) = *0x4f1568;\n        *(iVar2 + 0x2c8) = 3;\n        uStack24 = 0;\n        uStack16 = 0x800;\n        *(iVar2 + 0x2d0) = auStack32;\n    }\n    fcn.00402ea0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043b8e0();\n    return;\n}\n",
        "token_count": 460
    },
    "004586a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004586a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t in_GS_OFFSET;\n    code *pcStackX8;\n    ulong uStackX16;\n    \n    piVar5 = *(in_GS_OFFSET + *0x544bc0);\n    iVar1 = *piVar5;\n    if (((iVar1 != 0) && (iVar1 != (*(iVar1 + 0x30))[10])) && (iVar2 = **(iVar1 + 0x30),  iVar1 != iVar2)) {\n        pcVar4 = fcn.00455980();\n        *piVar5 = iVar2;\n        uVar6 = *(iVar2 + 0x38) - 0x40U & 0xfffffffffffffff0;\n        *(uVar6 + 0x30) = iVar1;\n        *(uVar6 + 0x28) = *(iVar1 + 8) - *0x20;\n        *(uVar6 - 8) = 0x458703;\n        uVar3 = (*pcVar4)(uStackX16);\n        iVar1 = *(*(uVar6 + 0x30) + 8);\n        iVar2 = *(uVar6 + 0x28);\n        **(in_GS_OFFSET + *0x544bc0) = *(uVar6 + 0x30);\n        *((iVar1 - iVar2) + 0x18) = uVar3;\n        return;\n    }\n    uVar3 = (*pcStackX8)(uStackX16);\n    *(*0x20 + 0x18) = uVar3;\n    return;\n}\n",
        "token_count": 394
    },
    "00458920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00458920(ulong noname_0, ulong arg2)\n\n{\n    if (*0x5450eb == '\\x01') {\n        rdtscp();\n    }\n    else {\n        rdtsc();\n    }\n    return;\n}\n",
        "token_count": 55
    },
    "00458960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.00458960(uint64_t arg1)\n\n{\n    uchar (*in_RAX) [16];\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar auVar5 [16];\n    uchar auVar6 [16];\n    uchar auVar7 [16];\n    uchar auVar8 [16];\n    uchar auVar9 [16];\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    uchar auVar12 [16];\n    uchar auVar13 [16];\n    \n    if (*0x5449ed == '\\0') {\n        uVar1 = unaff_RBX ^ *0x544c60 ^ 0xa0761d6478bd642f;\n        if (arg1 == 0) {\n            return uVar1;\n        }\n        if (arg1 < 4) {\n            uVar2 = CONCAT12(in_RAX[-1][arg1 + 0xf], CONCAT11((*in_RAX)[arg1 >> 1], (*in_RAX)[0]));\n            uVar3 = 0;\n        }\n        else if (arg1 == 4) {\n            uVar2 = **in_RAX;\n            uVar3 = **in_RAX;\n        }\n        else if (arg1 < 8) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 0xc);\n        }\n        else if (arg1 == 8) {\n            uVar2 = **in_RAX;\n            uVar3 = uVar2;\n        }\n        else if (arg1 < 0x11) {\n            uVar2 = **in_RAX;\n            uVar3 = *(in_RAX[-1] + arg1 + 8);\n        }\n        else {\n            uVar3 = arg1;\n            uVar2 = uVar1;\n            uVar4 = uVar1;\n            if (0x30 < arg1) {\n                for (; 0x30 < uVar3; uVar3 = uVar3 - 0x30) {\n                    auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                    auVar6 = ZEXT816(*(in_RAX[1] + 8) ^ uVar2) * ZEXT816(*in_RAX[1] ^ 0x8ebc6af09c88c6e3);\n                    auVar7 = ZEXT816(*(in_RAX[2] + 8) ^ uVar4) * ZEXT816(*in_RAX[2] ^ 0x589965cc75374cc3);\n                    uVar1 = SUB168(auVar5 >> 0x40, 0) ^ SUB168(auVar5, 0);\n                    in_RAX = in_RAX[3];\n                    uVar2 = SUB168(auVar6 >> 0x40, 0) ^ SUB168(auVar6, 0);\n                    uVar4 = SUB168(auVar7 >> 0x40, 0) ^ SUB168(auVar7, 0);\n                }\n                uVar1 = uVar1 ^ uVar2 ^ uVar4;\n            }\n            for (; 0x10 < uVar3; uVar3 = uVar3 - 0x10) {\n                auVar5 = ZEXT816(*(*in_RAX + 8) ^ uVar1) * ZEXT816(**in_RAX ^ 0xe7037ed1a0b428db);\n                uVar1 = SUB168(auVar5 >> 0x40, 0) ^ SUB168(auVar5, 0);\n                in_RAX = in_RAX[1];\n            }\n            uVar2 = *(in_RAX[-1] + uVar3);\n            uVar3 = *(in_RAX[-1] + uVar3 + 8);\n        }\n        auVar5 = ZEXT816(uVar1 ^ uVar3) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n        auVar5 = ZEXT816(SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n        return SUB168(auVar5, 0) ^ SUB168(auVar5 >> 0x40, 0);\n    }\n    auVar5 = pinsrw(ZEXT816(unaff_RBX), arg1, 4);\n    auVar5 = pshufhw(auVar5, auVar5, 0);\n    auVar6 = aesenc(auVar5 ^ *0x544fa0, auVar5 ^ *0x544fa0);\n    if (arg1 < 0x10) {\n        if (arg1 == 0) {\n            auVar5 = aesenc(auVar6, auVar6);\n            return SUB168(auVar5, 0);\n        }\n        if ((in_RAX[1] & 0xff0) == 0) {\n            auVar5 = pshufb(*(in_RAX[-1] + arg1), *(arg1 * 0x10 + 0x4901a0));\n        }\n        else {\n            auVar5 = *in_RAX & *(arg1 * 0x10 + 0x4900a0);\n        }\n    }\n    else {\n        if (arg1 != 0x10) {\n            if (arg1 < 0x21) {\n                auVar5 = aesenc(auVar5 ^ *0x544fb0, auVar5 ^ *0x544fb0);\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                return SUB168(auVar5, 0) ^ SUB168(auVar6, 0);\n            }\n            if (arg1 < 0x41) {\n                auVar7 = aesenc(auVar5 ^ *0x544fb0, auVar5 ^ *0x544fb0);\n                auVar8 = aesenc(auVar5 ^ *0x544fc0, auVar5 ^ *0x544fc0);\n                auVar5 = aesenc(auVar5 ^ *0x544fd0, auVar5 ^ *0x544fd0);\n                auVar8 = *(in_RAX[-2] + arg1) ^ auVar8;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                return SUB168(auVar5, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar6, 0) ^ SUB168(auVar8, 0);\n            }\n            if (arg1 < 0x81) {\n                auVar7 = aesenc(auVar5 ^ *0x544fb0, auVar5 ^ *0x544fb0);\n                auVar8 = aesenc(auVar5 ^ *0x544fc0, auVar5 ^ *0x544fc0);\n                auVar9 = aesenc(auVar5 ^ *0x544fd0, auVar5 ^ *0x544fd0);\n                auVar10 = aesenc(auVar5 ^ *0x544fe0, auVar5 ^ *0x544fe0);\n                auVar11 = aesenc(auVar5 ^ *0x544ff0, auVar5 ^ *0x544ff0);\n                auVar12 = aesenc(auVar5 ^ *0x545000, auVar5 ^ *0x545000);\n                auVar5 = aesenc(auVar5 ^ *0x545010, auVar5 ^ *0x545010);\n                auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n                auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n                auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n                auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n                auVar6 = aesenc(*in_RAX ^ auVar6, *in_RAX ^ auVar6);\n                auVar7 = aesenc(in_RAX[1] ^ auVar7, in_RAX[1] ^ auVar7);\n                auVar8 = aesenc(in_RAX[2] ^ auVar8, in_RAX[2] ^ auVar8);\n                auVar9 = aesenc(in_RAX[3] ^ auVar9, in_RAX[3] ^ auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar13 = aesenc(auVar5, auVar5);\n                auVar5 = aesenc(auVar6, auVar6);\n                auVar6 = aesenc(auVar7, auVar7);\n                auVar7 = aesenc(auVar8, auVar8);\n                auVar8 = aesenc(auVar9, auVar9);\n                auVar9 = aesenc(auVar10, auVar10);\n                auVar10 = aesenc(auVar11, auVar11);\n                auVar11 = aesenc(auVar12, auVar12);\n                auVar12 = aesenc(auVar13, auVar13);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                       SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n            }\n            auVar7 = aesenc(auVar5 ^ *0x544fb0, auVar5 ^ *0x544fb0);\n            auVar8 = aesenc(auVar5 ^ *0x544fc0, auVar5 ^ *0x544fc0);\n            auVar9 = aesenc(auVar5 ^ *0x544fd0, auVar5 ^ *0x544fd0);\n            auVar10 = aesenc(auVar5 ^ *0x544fe0, auVar5 ^ *0x544fe0);\n            auVar11 = aesenc(auVar5 ^ *0x544ff0, auVar5 ^ *0x544ff0);\n            auVar12 = aesenc(auVar5 ^ *0x545000, auVar5 ^ *0x545000);\n            auVar5 = aesenc(auVar5 ^ *0x545010, auVar5 ^ *0x545010);\n            auVar6 = *(in_RAX[-8] + arg1) ^ auVar6;\n            auVar7 = *(in_RAX[-7] + arg1) ^ auVar7;\n            auVar8 = *(in_RAX[-6] + arg1) ^ auVar8;\n            auVar9 = *(in_RAX[-5] + arg1) ^ auVar9;\n            auVar10 = *(in_RAX[-4] + arg1) ^ auVar10;\n            auVar11 = *(in_RAX[-3] + arg1) ^ auVar11;\n            auVar12 = *(in_RAX[-2] + arg1) ^ auVar12;\n            auVar5 = *(in_RAX[-1] + arg1) ^ auVar5;\n            uVar1 = arg1 - 1 >> 7;\n            do {\n                auVar6 = aesenc(auVar6, auVar6);\n                auVar7 = aesenc(auVar7, auVar7);\n                auVar8 = aesenc(auVar8, auVar8);\n                auVar9 = aesenc(auVar9, auVar9);\n                auVar10 = aesenc(auVar10, auVar10);\n                auVar11 = aesenc(auVar11, auVar11);\n                auVar12 = aesenc(auVar12, auVar12);\n                auVar5 = aesenc(auVar5, auVar5);\n                auVar6 = aesenc(auVar6, *in_RAX);\n                auVar7 = aesenc(auVar7, in_RAX[1]);\n                auVar8 = aesenc(auVar8, in_RAX[2]);\n                auVar9 = aesenc(auVar9, in_RAX[3]);\n                auVar10 = aesenc(auVar10, in_RAX[4]);\n                auVar11 = aesenc(auVar11, in_RAX[5]);\n                auVar12 = aesenc(auVar12, in_RAX[6]);\n                auVar5 = aesenc(auVar5, in_RAX[7]);\n                in_RAX = in_RAX[8];\n                uVar1 = uVar1 - 1;\n            } while (uVar1 != 0);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            auVar13 = aesenc(auVar5, auVar5);\n            auVar5 = aesenc(auVar6, auVar6);\n            auVar6 = aesenc(auVar7, auVar7);\n            auVar7 = aesenc(auVar8, auVar8);\n            auVar8 = aesenc(auVar9, auVar9);\n            auVar9 = aesenc(auVar10, auVar10);\n            auVar10 = aesenc(auVar11, auVar11);\n            auVar11 = aesenc(auVar12, auVar12);\n            auVar12 = aesenc(auVar13, auVar13);\n            auVar5 = aesenc(auVar5, auVar5);\n            auVar6 = aesenc(auVar6, auVar6);\n            auVar7 = aesenc(auVar7, auVar7);\n            auVar8 = aesenc(auVar8, auVar8);\n            auVar9 = aesenc(auVar9, auVar9);\n            auVar10 = aesenc(auVar10, auVar10);\n            auVar11 = aesenc(auVar11, auVar11);\n            auVar12 = aesenc(auVar12, auVar12);\n            return SUB168(auVar5, 0) ^ SUB168(auVar9, 0) ^ SUB168(auVar7, 0) ^ SUB168(auVar11, 0) ^\n                   SUB168(auVar6, 0) ^ SUB168(auVar10, 0) ^ SUB168(auVar8, 0) ^ SUB168(auVar12, 0);\n        }\n        auVar5 = *in_RAX;\n    }\n    auVar5 = aesenc(auVar5 ^ auVar6, auVar5 ^ auVar6);\n    auVar5 = aesenc(auVar5, auVar5);\n    auVar5 = aesenc(auVar5, auVar5);\n    return SUB168(auVar5, 0);\n}\n",
        "token_count": 3934
    },
    "004589e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "encrypt data using AES via x86 extensions"
        ],
        "decompiled_code": "\nuint64_t fcn.004589e0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    uchar auVar1 [16];\n    \n    if (*0x5449ed != '\\0') {\n        auVar1 = pinsrq(ZEXT816(unaff_RBX), *in_RAX, 1);\n        auVar1 = aesenc(auVar1, *0x544fa0);\n        auVar1 = aesenc(auVar1, *0x544fb0);\n        auVar1 = aesenc(auVar1, *0x544fc0);\n        return SUB168(auVar1, 0);\n    }\n    auVar1 = ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db) * ZEXT816(*in_RAX ^ unaff_RBX ^ *0x544c60 ^ 0xa0761d6478bd642f);\n    auVar1 = ZEXT816(0x1d8e4e27c47d1247) * ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0));\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 291
    },
    "00459580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00459580(void)\n\n{\n    uint *puVar1;\n    uchar auVar2 [32];\n    uchar (*in_RAX) [32];\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    uchar (*pauVar5) [32];\n    uchar (*pauVar6) [32];\n    uchar auVar7 [16];\n    uchar in_YMM0 [32];\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    while( true ) {\n        while( true ) {\n            if (unaff_RBX == 0) {\n                return;\n            }\n            if (unaff_RBX < 3) {\n                (*in_RAX)[0] = 0;\n                in_RAX[-1][unaff_RBX + 0x1f] = 0;\n                return;\n            }\n            if (unaff_RBX < 5) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1e) = 0;\n                return;\n            }\n            if (unaff_RBX < 8) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x1c) = 0;\n                return;\n            }\n            if (unaff_RBX == 8) {\n                **in_RAX = 0;\n                return;\n            }\n            if (unaff_RBX < 0x11) {\n                **in_RAX = 0;\n                *(in_RAX[-1] + unaff_RBX + 0x18) = 0;\n                return;\n            }\n            if (unaff_RBX < 0x21) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x41) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x81) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            if (unaff_RBX < 0x101) {\n                **in_RAX = in_XMM15_Da;\n                *(*in_RAX + 4) = in_XMM15_Db;\n                *(*in_RAX + 8) = in_XMM15_Dc;\n                *(*in_RAX + 0xc) = in_XMM15_Dd;\n                *(*in_RAX + 0x10) = in_XMM15_Da;\n                *(*in_RAX + 0x14) = in_XMM15_Db;\n                *(*in_RAX + 0x18) = in_XMM15_Dc;\n                *(*in_RAX + 0x1c) = in_XMM15_Dd;\n                *in_RAX[1] = in_XMM15_Da;\n                *(in_RAX[1] + 4) = in_XMM15_Db;\n                *(in_RAX[1] + 8) = in_XMM15_Dc;\n                *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[1] + 0x10) = in_XMM15_Da;\n                *(in_RAX[1] + 0x14) = in_XMM15_Db;\n                *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[2] = in_XMM15_Da;\n                *(in_RAX[2] + 4) = in_XMM15_Db;\n                *(in_RAX[2] + 8) = in_XMM15_Dc;\n                *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[2] + 0x10) = in_XMM15_Da;\n                *(in_RAX[2] + 0x14) = in_XMM15_Db;\n                *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n                *in_RAX[3] = in_XMM15_Da;\n                *(in_RAX[3] + 4) = in_XMM15_Db;\n                *(in_RAX[3] + 8) = in_XMM15_Dc;\n                *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n                *(in_RAX[3] + 0x10) = in_XMM15_Da;\n                *(in_RAX[3] + 0x14) = in_XMM15_Db;\n                *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n                *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-4] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-3] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-2] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                puVar1 = in_RAX[-1] + unaff_RBX + 0x10;\n                *puVar1 = in_XMM15_Da;\n                puVar1[1] = in_XMM15_Db;\n                puVar1[2] = in_XMM15_Dc;\n                puVar1[3] = in_XMM15_Dd;\n                return;\n            }\n            auVar7 = SUB3216(in_YMM0, 0);\n            if ((*0x5450e6 != '\\x01') || (unaff_RBX < 0x800)) break;\n            if (*0x5450e3 == '\\x01') {\n                auVar7 = vpxor_avx(auVar7, auVar7);\n                in_YMM0 = ZEXT1632(auVar7);\n                if (0x1ffffff < unaff_RBX) goto code_r0x00459721;\n            }\n            uVar4 = unaff_RBX & 7;\n            for (uVar3 = unaff_RBX >> 3; unaff_RBX = uVar4,  uVar3 != 0; uVar3 = uVar3 - 1) {\n                **in_RAX = 0;\n                in_RAX = *in_RAX + 8;\n            }\n        }\n        if (*0x5450e3 == '\\x01') break;\n        do {\n            **in_RAX = in_XMM15_Da;\n            *(*in_RAX + 4) = in_XMM15_Db;\n            *(*in_RAX + 8) = in_XMM15_Dc;\n            *(*in_RAX + 0xc) = in_XMM15_Dd;\n            *(*in_RAX + 0x10) = in_XMM15_Da;\n            *(*in_RAX + 0x14) = in_XMM15_Db;\n            *(*in_RAX + 0x18) = in_XMM15_Dc;\n            *(*in_RAX + 0x1c) = in_XMM15_Dd;\n            *in_RAX[1] = in_XMM15_Da;\n            *(in_RAX[1] + 4) = in_XMM15_Db;\n            *(in_RAX[1] + 8) = in_XMM15_Dc;\n            *(in_RAX[1] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[1] + 0x10) = in_XMM15_Da;\n            *(in_RAX[1] + 0x14) = in_XMM15_Db;\n            *(in_RAX[1] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[1] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[2] = in_XMM15_Da;\n            *(in_RAX[2] + 4) = in_XMM15_Db;\n            *(in_RAX[2] + 8) = in_XMM15_Dc;\n            *(in_RAX[2] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[2] + 0x10) = in_XMM15_Da;\n            *(in_RAX[2] + 0x14) = in_XMM15_Db;\n            *(in_RAX[2] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[2] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[3] = in_XMM15_Da;\n            *(in_RAX[3] + 4) = in_XMM15_Db;\n            *(in_RAX[3] + 8) = in_XMM15_Dc;\n            *(in_RAX[3] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[3] + 0x10) = in_XMM15_Da;\n            *(in_RAX[3] + 0x14) = in_XMM15_Db;\n            *(in_RAX[3] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[3] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[4] = in_XMM15_Da;\n            *(in_RAX[4] + 4) = in_XMM15_Db;\n            *(in_RAX[4] + 8) = in_XMM15_Dc;\n            *(in_RAX[4] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[4] + 0x10) = in_XMM15_Da;\n            *(in_RAX[4] + 0x14) = in_XMM15_Db;\n            *(in_RAX[4] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[4] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[5] = in_XMM15_Da;\n            *(in_RAX[5] + 4) = in_XMM15_Db;\n            *(in_RAX[5] + 8) = in_XMM15_Dc;\n            *(in_RAX[5] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[5] + 0x10) = in_XMM15_Da;\n            *(in_RAX[5] + 0x14) = in_XMM15_Db;\n            *(in_RAX[5] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[5] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[6] = in_XMM15_Da;\n            *(in_RAX[6] + 4) = in_XMM15_Db;\n            *(in_RAX[6] + 8) = in_XMM15_Dc;\n            *(in_RAX[6] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[6] + 0x10) = in_XMM15_Da;\n            *(in_RAX[6] + 0x14) = in_XMM15_Db;\n            *(in_RAX[6] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[6] + 0x1c) = in_XMM15_Dd;\n            *in_RAX[7] = in_XMM15_Da;\n            *(in_RAX[7] + 4) = in_XMM15_Db;\n            *(in_RAX[7] + 8) = in_XMM15_Dc;\n            *(in_RAX[7] + 0xc) = in_XMM15_Dd;\n            *(in_RAX[7] + 0x10) = in_XMM15_Da;\n            *(in_RAX[7] + 0x14) = in_XMM15_Db;\n            *(in_RAX[7] + 0x18) = in_XMM15_Dc;\n            *(in_RAX[7] + 0x1c) = in_XMM15_Dd;\n            unaff_RBX = unaff_RBX - 0x100;\n            in_RAX = in_RAX[8];\n        } while (0xff < unaff_RBX);\n    }\n    auVar7 = vpxor_avx(auVar7, auVar7);\n    in_YMM0 = ZEXT1632(auVar7);\n    if (unaff_RBX < 0x2000000) {\n        do {\n            pauVar5 = in_RAX;\n            uVar3 = unaff_RBX;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            *pauVar5 = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[1] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[2] = auVar2;\n            auVar2 = vmovdqu_avx(in_YMM0);\n            pauVar5[3] = auVar2;\n            unaff_RBX = uVar3 - 0x80;\n            in_RAX = pauVar5[4];\n        } while (0x7f < uVar3 - 0x80);\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-1] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-2] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-3] + uVar3) = auVar2;\n        auVar2 = vmovdqu_avx(in_YMM0);\n        *(pauVar5[-4] + uVar3) = auVar2;\n        vzeroupper_avx();\n        return;\n    }\ncode_r0x00459721:\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *in_RAX = auVar2;\n    uVar3 = in_RAX + (unaff_RBX - (in_RAX[1] & 0xffffffffffffffe0));\n    pauVar5 = in_RAX[1] & 0xffffffffffffffe0;\n    do {\n        pauVar6 = pauVar5;\n        uVar4 = uVar3;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        *pauVar6 = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[1] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[2] = auVar2;\n        auVar2 = vmovntdq_avx(in_YMM0);\n        pauVar6[3] = auVar2;\n        uVar3 = uVar4 - 0x80;\n        pauVar5 = pauVar6[4];\n    } while (0x7f < uVar4 - 0x80);\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-1] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-2] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-3] + uVar4) = auVar2;\n    auVar2 = vmovdqu_avx(in_YMM0);\n    *(pauVar6[-4] + uVar4) = auVar2;\n    vzeroupper_avx();\n    return;\n}\n",
        "token_count": 5095
    },
    "00459880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00459880(uint64_t arg1)\n\n{\n    uint *puVar1;\n    uchar uVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint uVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    uint uVar35;\n    uint uVar36;\n    uint uVar37;\n    uint uVar38;\n    uint uVar39;\n    uint uVar40;\n    uint uVar41;\n    uint uVar42;\n    uint uVar43;\n    uint uVar44;\n    uint uVar45;\n    uint uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    uint uVar50;\n    uint uVar51;\n    uint uVar52;\n    uint uVar53;\n    uint uVar54;\n    uint uVar55;\n    uint uVar56;\n    uint uVar57;\n    uint uVar58;\n    uint uVar59;\n    uint uVar60;\n    uint uVar61;\n    uint uVar62;\n    uint uVar63;\n    uint uVar64;\n    uint uVar65;\n    uint uVar66;\n    uchar (*in_RAX) [32];\n    uint64_t uVar67;\n    uchar (*unaff_RBX) [32];\n    uint64_t uVar68;\n    int64_t iVar69;\n    ulong *puVar70;\n    uchar (*pauVar71) [32];\n    ulong *puVar72;\n    uchar (*pauVar73) [32];\n    uchar (*pauVar74) [32];\n    uchar *puVar75;\n    bool bVar76;\n    uchar auVar77 [32];\n    uchar auVar78 [32];\n    uchar auVar79 [32];\n    uchar auVar80 [32];\n    uchar auVar81 [32];\n    \n    while( true ) {\n        if (arg1 == 0) {\n            return;\n        }\n        if (arg1 < 3) {\n            uVar2 = unaff_RBX[-1][arg1 + 0x1f];\n            (*in_RAX)[0] = (*unaff_RBX)[0];\n            in_RAX[-1][arg1 + 0x1f] = uVar2;\n            return;\n        }\n        if (arg1 < 4) {\n            uVar2 = (*unaff_RBX)[2];\n            **in_RAX = **unaff_RBX;\n            (*in_RAX)[2] = uVar2;\n            return;\n        }\n        if (arg1 < 5) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 8) {\n            uVar3 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x1c) = uVar3;\n            return;\n        }\n        if (arg1 == 8) {\n            **in_RAX = **unaff_RBX;\n            return;\n        }\n        if (arg1 < 0x11) {\n            uVar4 = *(unaff_RBX[-1] + arg1 + 0x18);\n            **in_RAX = **unaff_RBX;\n            *(in_RAX[-1] + arg1 + 0x18) = uVar4;\n            return;\n        }\n        if (arg1 < 0x21) break;\n        if (arg1 < 0x41) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar11 = *puVar1;\n            uVar12 = puVar1[1];\n            uVar13 = puVar1[2];\n            uVar14 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar15 = *puVar1;\n            uVar16 = puVar1[1];\n            uVar17 = puVar1[2];\n            uVar18 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar11;\n            puVar1[1] = uVar12;\n            puVar1[2] = uVar13;\n            puVar1[3] = uVar14;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar15;\n            puVar1[1] = uVar16;\n            puVar1[2] = uVar17;\n            puVar1[3] = uVar18;\n            return;\n        }\n        if (arg1 < 0x81) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar19 = *puVar1;\n            uVar20 = puVar1[1];\n            uVar21 = puVar1[2];\n            uVar22 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar23 = *puVar1;\n            uVar24 = puVar1[1];\n            uVar25 = puVar1[2];\n            uVar26 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar27 = *puVar1;\n            uVar28 = puVar1[1];\n            uVar29 = puVar1[2];\n            uVar30 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar31 = *puVar1;\n            uVar32 = puVar1[1];\n            uVar33 = puVar1[2];\n            uVar34 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar19;\n            puVar1[1] = uVar20;\n            puVar1[2] = uVar21;\n            puVar1[3] = uVar22;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar23;\n            puVar1[1] = uVar24;\n            puVar1[2] = uVar25;\n            puVar1[3] = uVar26;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar27;\n            puVar1[1] = uVar28;\n            puVar1[2] = uVar29;\n            puVar1[3] = uVar30;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar31;\n            puVar1[1] = uVar32;\n            puVar1[2] = uVar33;\n            puVar1[3] = uVar34;\n            return;\n        }\n        if (arg1 < 0x101) {\n            uVar3 = *(*unaff_RBX + 4);\n            uVar5 = *(*unaff_RBX + 8);\n            uVar6 = *(*unaff_RBX + 0xc);\n            uVar7 = *(*unaff_RBX + 0x10);\n            uVar8 = *(*unaff_RBX + 0x14);\n            uVar9 = *(*unaff_RBX + 0x18);\n            uVar10 = *(*unaff_RBX + 0x1c);\n            uVar11 = *unaff_RBX[1];\n            uVar12 = *(unaff_RBX[1] + 4);\n            uVar13 = *(unaff_RBX[1] + 8);\n            uVar14 = *(unaff_RBX[1] + 0xc);\n            uVar15 = *(unaff_RBX[1] + 0x10);\n            uVar16 = *(unaff_RBX[1] + 0x14);\n            uVar17 = *(unaff_RBX[1] + 0x18);\n            uVar18 = *(unaff_RBX[1] + 0x1c);\n            uVar19 = *unaff_RBX[2];\n            uVar20 = *(unaff_RBX[2] + 4);\n            uVar21 = *(unaff_RBX[2] + 8);\n            uVar22 = *(unaff_RBX[2] + 0xc);\n            uVar23 = *(unaff_RBX[2] + 0x10);\n            uVar24 = *(unaff_RBX[2] + 0x14);\n            uVar25 = *(unaff_RBX[2] + 0x18);\n            uVar26 = *(unaff_RBX[2] + 0x1c);\n            uVar27 = *unaff_RBX[3];\n            uVar28 = *(unaff_RBX[3] + 4);\n            uVar29 = *(unaff_RBX[3] + 8);\n            uVar30 = *(unaff_RBX[3] + 0xc);\n            uVar31 = *(unaff_RBX[3] + 0x10);\n            uVar32 = *(unaff_RBX[3] + 0x14);\n            uVar33 = *(unaff_RBX[3] + 0x18);\n            uVar34 = *(unaff_RBX[3] + 0x1c);\n            puVar1 = unaff_RBX[-4] + arg1;\n            uVar35 = *puVar1;\n            uVar36 = puVar1[1];\n            uVar37 = puVar1[2];\n            uVar38 = puVar1[3];\n            puVar1 = unaff_RBX[-4] + arg1 + 0x10;\n            uVar39 = *puVar1;\n            uVar40 = puVar1[1];\n            uVar41 = puVar1[2];\n            uVar42 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1;\n            uVar43 = *puVar1;\n            uVar44 = puVar1[1];\n            uVar45 = puVar1[2];\n            uVar46 = puVar1[3];\n            puVar1 = unaff_RBX[-3] + arg1 + 0x10;\n            uVar47 = *puVar1;\n            uVar48 = puVar1[1];\n            uVar49 = puVar1[2];\n            uVar50 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1;\n            uVar51 = *puVar1;\n            uVar52 = puVar1[1];\n            uVar53 = puVar1[2];\n            uVar54 = puVar1[3];\n            puVar1 = unaff_RBX[-2] + arg1 + 0x10;\n            uVar55 = *puVar1;\n            uVar56 = puVar1[1];\n            uVar57 = puVar1[2];\n            uVar58 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1;\n            uVar59 = *puVar1;\n            uVar60 = puVar1[1];\n            uVar61 = puVar1[2];\n            uVar62 = puVar1[3];\n            puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n            uVar63 = *puVar1;\n            uVar64 = puVar1[1];\n            uVar65 = puVar1[2];\n            uVar66 = puVar1[3];\n            **in_RAX = **unaff_RBX;\n            *(*in_RAX + 4) = uVar3;\n            *(*in_RAX + 8) = uVar5;\n            *(*in_RAX + 0xc) = uVar6;\n            *(*in_RAX + 0x10) = uVar7;\n            *(*in_RAX + 0x14) = uVar8;\n            *(*in_RAX + 0x18) = uVar9;\n            *(*in_RAX + 0x1c) = uVar10;\n            *in_RAX[1] = uVar11;\n            *(in_RAX[1] + 4) = uVar12;\n            *(in_RAX[1] + 8) = uVar13;\n            *(in_RAX[1] + 0xc) = uVar14;\n            *(in_RAX[1] + 0x10) = uVar15;\n            *(in_RAX[1] + 0x14) = uVar16;\n            *(in_RAX[1] + 0x18) = uVar17;\n            *(in_RAX[1] + 0x1c) = uVar18;\n            *in_RAX[2] = uVar19;\n            *(in_RAX[2] + 4) = uVar20;\n            *(in_RAX[2] + 8) = uVar21;\n            *(in_RAX[2] + 0xc) = uVar22;\n            *(in_RAX[2] + 0x10) = uVar23;\n            *(in_RAX[2] + 0x14) = uVar24;\n            *(in_RAX[2] + 0x18) = uVar25;\n            *(in_RAX[2] + 0x1c) = uVar26;\n            *in_RAX[3] = uVar27;\n            *(in_RAX[3] + 4) = uVar28;\n            *(in_RAX[3] + 8) = uVar29;\n            *(in_RAX[3] + 0xc) = uVar30;\n            *(in_RAX[3] + 0x10) = uVar31;\n            *(in_RAX[3] + 0x14) = uVar32;\n            *(in_RAX[3] + 0x18) = uVar33;\n            *(in_RAX[3] + 0x1c) = uVar34;\n            puVar1 = in_RAX[-4] + arg1;\n            *puVar1 = uVar35;\n            puVar1[1] = uVar36;\n            puVar1[2] = uVar37;\n            puVar1[3] = uVar38;\n            puVar1 = in_RAX[-4] + arg1 + 0x10;\n            *puVar1 = uVar39;\n            puVar1[1] = uVar40;\n            puVar1[2] = uVar41;\n            puVar1[3] = uVar42;\n            puVar1 = in_RAX[-3] + arg1;\n            *puVar1 = uVar43;\n            puVar1[1] = uVar44;\n            puVar1[2] = uVar45;\n            puVar1[3] = uVar46;\n            puVar1 = in_RAX[-3] + arg1 + 0x10;\n            *puVar1 = uVar47;\n            puVar1[1] = uVar48;\n            puVar1[2] = uVar49;\n            puVar1[3] = uVar50;\n            puVar1 = in_RAX[-2] + arg1;\n            *puVar1 = uVar51;\n            puVar1[1] = uVar52;\n            puVar1[2] = uVar53;\n            puVar1[3] = uVar54;\n            puVar1 = in_RAX[-2] + arg1 + 0x10;\n            *puVar1 = uVar55;\n            puVar1[1] = uVar56;\n            puVar1[2] = uVar57;\n            puVar1[3] = uVar58;\n            puVar1 = in_RAX[-1] + arg1;\n            *puVar1 = uVar59;\n            puVar1[1] = uVar60;\n            puVar1[2] = uVar61;\n            puVar1[3] = uVar62;\n            puVar1 = in_RAX[-1] + arg1 + 0x10;\n            *puVar1 = uVar63;\n            puVar1[1] = uVar64;\n            puVar1[2] = uVar65;\n            puVar1[3] = uVar66;\n            return;\n        }\n        if ((*0x5449ec & 1) != 0) {\n            if (in_RAX - unaff_RBX < arg1) {\n                uVar3 = **unaff_RBX;\n                uVar5 = *(*unaff_RBX + 4);\n                uVar6 = *(*unaff_RBX + 8);\n                uVar7 = *(*unaff_RBX + 0xc);\n                uVar8 = *(*unaff_RBX + 0x10);\n                uVar9 = *(*unaff_RBX + 0x14);\n                uVar10 = *(*unaff_RBX + 0x18);\n                uVar11 = *(*unaff_RBX + 0x1c);\n                puVar75 = *in_RAX + arg1;\n                uVar12 = *unaff_RBX[1];\n                uVar13 = *(unaff_RBX[1] + 4);\n                uVar14 = *(unaff_RBX[1] + 8);\n                uVar15 = *(unaff_RBX[1] + 0xc);\n                uVar16 = *(unaff_RBX[1] + 0x10);\n                uVar17 = *(unaff_RBX[1] + 0x14);\n                uVar18 = *(unaff_RBX[1] + 0x18);\n                uVar19 = *(unaff_RBX[1] + 0x1c);\n                uVar20 = *unaff_RBX[2];\n                uVar21 = *(unaff_RBX[2] + 4);\n                uVar22 = *(unaff_RBX[2] + 8);\n                uVar23 = *(unaff_RBX[2] + 0xc);\n                uVar24 = *(unaff_RBX[2] + 0x10);\n                uVar25 = *(unaff_RBX[2] + 0x14);\n                uVar26 = *(unaff_RBX[2] + 0x18);\n                uVar27 = *(unaff_RBX[2] + 0x1c);\n                uVar68 = puVar75 & 0x1f;\n                uVar28 = *unaff_RBX[3];\n                uVar29 = *(unaff_RBX[3] + 4);\n                uVar30 = *(unaff_RBX[3] + 8);\n                uVar31 = *(unaff_RBX[3] + 0xc);\n                uVar32 = *(unaff_RBX[3] + 0x10);\n                uVar33 = *(unaff_RBX[3] + 0x14);\n                uVar34 = *(unaff_RBX[3] + 0x18);\n                uVar35 = *(unaff_RBX[3] + 0x1c);\n                uVar67 = puVar75 ^ uVar68;\n                auVar81 = vmovdqu_avx(*(unaff_RBX[-1] + arg1));\n                iVar69 = unaff_RBX + (arg1 - uVar68);\n                arg1 = arg1 - uVar68;\n                if (0x100000 < arg1) {\n                    arg1 = arg1 - 0x80;\n                    do {\n                        auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                        auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                        auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                        auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                        iVar69 = iVar69 + -0x80;\n                        auVar77 = vmovntdq_avx(auVar77);\n                        *(uVar67 - 0x20) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar78);\n                        *(uVar67 - 0x40) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar79);\n                        *(uVar67 - 0x60) = auVar77;\n                        auVar77 = vmovntdq_avx(auVar80);\n                        *(uVar67 - 0x80) = auVar77;\n                        uVar67 = uVar67 - 0x80;\n                        bVar76 = 0x7f < arg1;\n                        arg1 = arg1 - 0x80;\n                    } while (bVar76 && arg1 != 0);\n                    auVar81 = vmovdqu_avx(auVar81);\n                    *(puVar75 + -0x20) = auVar81;\n                    vzeroupper_avx();\n                    **in_RAX = uVar3;\n                    *(*in_RAX + 4) = uVar5;\n                    *(*in_RAX + 8) = uVar6;\n                    *(*in_RAX + 0xc) = uVar7;\n                    *(*in_RAX + 0x10) = uVar8;\n                    *(*in_RAX + 0x14) = uVar9;\n                    *(*in_RAX + 0x18) = uVar10;\n                    *(*in_RAX + 0x1c) = uVar11;\n                    *in_RAX[1] = uVar12;\n                    *(in_RAX[1] + 4) = uVar13;\n                    *(in_RAX[1] + 8) = uVar14;\n                    *(in_RAX[1] + 0xc) = uVar15;\n                    *(in_RAX[1] + 0x10) = uVar16;\n                    *(in_RAX[1] + 0x14) = uVar17;\n                    *(in_RAX[1] + 0x18) = uVar18;\n                    *(in_RAX[1] + 0x1c) = uVar19;\n                    *in_RAX[2] = uVar20;\n                    *(in_RAX[2] + 4) = uVar21;\n                    *(in_RAX[2] + 8) = uVar22;\n                    *(in_RAX[2] + 0xc) = uVar23;\n                    *(in_RAX[2] + 0x10) = uVar24;\n                    *(in_RAX[2] + 0x14) = uVar25;\n                    *(in_RAX[2] + 0x18) = uVar26;\n                    *(in_RAX[2] + 0x1c) = uVar27;\n                    *in_RAX[3] = uVar28;\n                    *(in_RAX[3] + 4) = uVar29;\n                    *(in_RAX[3] + 8) = uVar30;\n                    *(in_RAX[3] + 0xc) = uVar31;\n                    *(in_RAX[3] + 0x10) = uVar32;\n                    *(in_RAX[3] + 0x14) = uVar33;\n                    *(in_RAX[3] + 0x18) = uVar34;\n                    *(in_RAX[3] + 0x1c) = uVar35;\n                    return;\n                }\n                arg1 = arg1 - 0x80;\n                do {\n                    auVar77 = vmovdqu_avx(*(iVar69 + -0x20));\n                    auVar78 = vmovdqu_avx(*(iVar69 + -0x40));\n                    auVar79 = vmovdqu_avx(*(iVar69 + -0x60));\n                    auVar80 = vmovdqu_avx(*(iVar69 + -0x80));\n                    iVar69 = iVar69 + -0x80;\n                    *(uVar67 - 0x20) = auVar77;\n                    *(uVar67 - 0x40) = auVar78;\n                    *(uVar67 - 0x60) = auVar79;\n                    *(uVar67 - 0x80) = auVar80;\n                    uVar67 = uVar67 - 0x80;\n                    bVar76 = 0x7f < arg1;\n                    arg1 = arg1 - 0x80;\n                } while (bVar76 && arg1 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *(puVar75 + -0x20) = auVar81;\n                vzeroupper_avx();\n                **in_RAX = uVar3;\n                *(*in_RAX + 4) = uVar5;\n                *(*in_RAX + 8) = uVar6;\n                *(*in_RAX + 0xc) = uVar7;\n                *(*in_RAX + 0x10) = uVar8;\n                *(*in_RAX + 0x14) = uVar9;\n                *(*in_RAX + 0x18) = uVar10;\n                *(*in_RAX + 0x1c) = uVar11;\n                *in_RAX[1] = uVar12;\n                *(in_RAX[1] + 4) = uVar13;\n                *(in_RAX[1] + 8) = uVar14;\n                *(in_RAX[1] + 0xc) = uVar15;\n                *(in_RAX[1] + 0x10) = uVar16;\n                *(in_RAX[1] + 0x14) = uVar17;\n                *(in_RAX[1] + 0x18) = uVar18;\n                *(in_RAX[1] + 0x1c) = uVar19;\n                *in_RAX[2] = uVar20;\n                *(in_RAX[2] + 4) = uVar21;\n                *(in_RAX[2] + 8) = uVar22;\n                *(in_RAX[2] + 0xc) = uVar23;\n                *(in_RAX[2] + 0x10) = uVar24;\n                *(in_RAX[2] + 0x14) = uVar25;\n                *(in_RAX[2] + 0x18) = uVar26;\n                *(in_RAX[2] + 0x1c) = uVar27;\n                *in_RAX[3] = uVar28;\n                *(in_RAX[3] + 4) = uVar29;\n                *(in_RAX[3] + 8) = uVar30;\n                *(in_RAX[3] + 0xc) = uVar31;\n                *(in_RAX[3] + 0x10) = uVar32;\n                *(in_RAX[3] + 0x14) = uVar33;\n                *(in_RAX[3] + 0x18) = uVar34;\n                *(in_RAX[3] + 0x1c) = uVar35;\n                return;\n            }\n            if (0xfffff < arg1) {\n                puVar1 = unaff_RBX[-4] + arg1;\n                uVar3 = *puVar1;\n                uVar5 = puVar1[1];\n                uVar6 = puVar1[2];\n                uVar7 = puVar1[3];\n                uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n                uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n                uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n                uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n                uVar12 = *(unaff_RBX[-3] + arg1);\n                uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n                uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n                uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n                uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n                uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n                uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n                uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n                uVar20 = *(unaff_RBX[-2] + arg1);\n                uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n                uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n                uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n                uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n                uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n                uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n                uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n                uVar28 = *(unaff_RBX[-1] + arg1);\n                uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n                uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n                uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n                uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n                uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n                uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n                uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n                auVar81 = vmovdqu_avx(*unaff_RBX);\n                pauVar74 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n                iVar69 = arg1 - (pauVar74 - in_RAX);\n                pauVar73 = unaff_RBX + (pauVar74 - in_RAX);\n                uVar67 = iVar69 - 0x80;\n                pauVar71 = pauVar74;\n                do {\n                    auVar77 = vmovdqu_avx(*pauVar73);\n                    auVar78 = vmovdqu_avx(pauVar73[1]);\n                    auVar79 = vmovdqu_avx(pauVar73[2]);\n                    auVar80 = vmovdqu_avx(pauVar73[3]);\n                    pauVar73 = pauVar73[4];\n                    auVar77 = vmovntdq_avx(auVar77);\n                    *pauVar71 = auVar77;\n                    auVar77 = vmovntdq_avx(auVar78);\n                    pauVar71[1] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar79);\n                    pauVar71[2] = auVar77;\n                    auVar77 = vmovntdq_avx(auVar80);\n                    pauVar71[3] = auVar77;\n                    pauVar71 = pauVar71[4];\n                    bVar76 = 0x7f < uVar67;\n                    uVar67 = uVar67 - 0x80;\n                } while (bVar76 && uVar67 != 0);\n                auVar81 = vmovdqu_avx(auVar81);\n                *in_RAX = auVar81;\n                vzeroupper_avx();\n                *(pauVar74 + iVar69 + -0x80) = uVar3;\n                *(pauVar74 + iVar69 + -0x7c) = uVar5;\n                *(pauVar74 + iVar69 + -0x78) = uVar6;\n                *(pauVar74 + iVar69 + -0x74) = uVar7;\n                *(pauVar74 + iVar69 + -0x70) = uVar8;\n                *(pauVar74 + iVar69 + -0x6c) = uVar9;\n                *(pauVar74 + iVar69 + -0x68) = uVar10;\n                *(pauVar74 + iVar69 + -100) = uVar11;\n                *(pauVar74 + iVar69 + -0x60) = uVar12;\n                *(pauVar74 + iVar69 + -0x5c) = uVar13;\n                *(pauVar74 + iVar69 + -0x58) = uVar14;\n                *(pauVar74 + iVar69 + -0x54) = uVar15;\n                *(pauVar74 + iVar69 + -0x50) = uVar16;\n                *(pauVar74 + iVar69 + -0x4c) = uVar17;\n                *(pauVar74 + iVar69 + -0x48) = uVar18;\n                *(pauVar74 + iVar69 + -0x44) = uVar19;\n                *(pauVar74 + iVar69 + -0x40) = uVar20;\n                *(pauVar74 + iVar69 + -0x3c) = uVar21;\n                *(pauVar74 + iVar69 + -0x38) = uVar22;\n                *(pauVar74 + iVar69 + -0x34) = uVar23;\n                *(pauVar74 + iVar69 + -0x30) = uVar24;\n                *(pauVar74 + iVar69 + -0x2c) = uVar25;\n                *(pauVar74 + iVar69 + -0x28) = uVar26;\n                *(pauVar74 + iVar69 + -0x24) = uVar27;\n                *(pauVar74 + iVar69 + -0x20) = uVar28;\n                *(pauVar74 + iVar69 + -0x1c) = uVar29;\n                *(pauVar74 + iVar69 + -0x18) = uVar30;\n                *(pauVar74 + iVar69 + -0x14) = uVar31;\n                *(pauVar74 + iVar69 + -0x10) = uVar32;\n                *(pauVar74 + iVar69 + -0xc) = uVar33;\n                *(pauVar74 + iVar69 + -8) = uVar34;\n                *(pauVar74 + iVar69 + -4) = uVar35;\n                return;\n            }\n            uVar3 = *(unaff_RBX[-4] + arg1);\n            uVar5 = *(unaff_RBX[-4] + arg1 + 4);\n            uVar6 = *(unaff_RBX[-4] + arg1 + 8);\n            uVar7 = *(unaff_RBX[-4] + arg1 + 0xc);\n            uVar8 = *(unaff_RBX[-4] + arg1 + 0x10);\n            uVar9 = *(unaff_RBX[-4] + arg1 + 0x14);\n            uVar10 = *(unaff_RBX[-4] + arg1 + 0x18);\n            uVar11 = *(unaff_RBX[-4] + arg1 + 0x1c);\n            pauVar73 = (in_RAX & 0xffffffffffffffe0) + 0x20;\n            uVar12 = *(unaff_RBX[-3] + arg1);\n            uVar13 = *(unaff_RBX[-3] + arg1 + 4);\n            uVar14 = *(unaff_RBX[-3] + arg1 + 8);\n            uVar15 = *(unaff_RBX[-3] + arg1 + 0xc);\n            uVar16 = *(unaff_RBX[-3] + arg1 + 0x10);\n            uVar17 = *(unaff_RBX[-3] + arg1 + 0x14);\n            uVar18 = *(unaff_RBX[-3] + arg1 + 0x18);\n            uVar19 = *(unaff_RBX[-3] + arg1 + 0x1c);\n            uVar20 = *(unaff_RBX[-2] + arg1);\n            uVar21 = *(unaff_RBX[-2] + arg1 + 4);\n            uVar22 = *(unaff_RBX[-2] + arg1 + 8);\n            uVar23 = *(unaff_RBX[-2] + arg1 + 0xc);\n            uVar24 = *(unaff_RBX[-2] + arg1 + 0x10);\n            uVar25 = *(unaff_RBX[-2] + arg1 + 0x14);\n            uVar26 = *(unaff_RBX[-2] + arg1 + 0x18);\n            uVar27 = *(unaff_RBX[-2] + arg1 + 0x1c);\n            uVar28 = *(unaff_RBX[-1] + arg1);\n            uVar29 = *(unaff_RBX[-1] + arg1 + 4);\n            uVar30 = *(unaff_RBX[-1] + arg1 + 8);\n            uVar31 = *(unaff_RBX[-1] + arg1 + 0xc);\n            uVar32 = *(unaff_RBX[-1] + arg1 + 0x10);\n            uVar33 = *(unaff_RBX[-1] + arg1 + 0x14);\n            uVar34 = *(unaff_RBX[-1] + arg1 + 0x18);\n            uVar35 = *(unaff_RBX[-1] + arg1 + 0x1c);\n            auVar81 = vmovdqu_avx(*unaff_RBX);\n            pauVar71 = unaff_RBX + (pauVar73 - in_RAX);\n            uVar67 = (arg1 - (pauVar73 - in_RAX)) - 0x80;\n            do {\n                uVar68 = uVar67;\n                auVar77 = vmovdqu_avx(*pauVar71);\n                auVar78 = vmovdqu_avx(pauVar71[1]);\n                auVar79 = vmovdqu_avx(pauVar71[2]);\n                auVar80 = vmovdqu_avx(pauVar71[3]);\n                pauVar71 = pauVar71[4];\n                *pauVar73 = auVar77;\n                pauVar73[1] = auVar78;\n                pauVar73[2] = auVar79;\n                pauVar73[3] = auVar80;\n                pauVar73 = pauVar73[4];\n                uVar67 = uVar68 - 0x80;\n            } while (0x7f < uVar68 && uVar68 - 0x80 != 0);\n            auVar81 = vmovdqu_avx(auVar81);\n            *in_RAX = auVar81;\n            vzeroupper_avx();\n            *(pauVar73[-4] + uVar68) = uVar3;\n            *(pauVar73[-4] + uVar68 + 4) = uVar5;\n            *(pauVar73[-4] + uVar68 + 8) = uVar6;\n            *(pauVar73[-4] + uVar68 + 0xc) = uVar7;\n            *(pauVar73[-4] + uVar68 + 0x10) = uVar8;\n            *(pauVar73[-4] + uVar68 + 0x14) = uVar9;\n            *(pauVar73[-4] + uVar68 + 0x18) = uVar10;\n            *(pauVar73[-4] + uVar68 + 0x1c) = uVar11;\n            *(pauVar73[-3] + uVar68) = uVar12;\n            *(pauVar73[-3] + uVar68 + 4) = uVar13;\n            *(pauVar73[-3] + uVar68 + 8) = uVar14;\n            *(pauVar73[-3] + uVar68 + 0xc) = uVar15;\n            *(pauVar73[-3] + uVar68 + 0x10) = uVar16;\n            *(pauVar73[-3] + uVar68 + 0x14) = uVar17;\n            *(pauVar73[-3] + uVar68 + 0x18) = uVar18;\n            *(pauVar73[-3] + uVar68 + 0x1c) = uVar19;\n            *(pauVar73[-2] + uVar68) = uVar20;\n            *(pauVar73[-2] + uVar68 + 4) = uVar21;\n            *(pauVar73[-2] + uVar68 + 8) = uVar22;\n            *(pauVar73[-2] + uVar68 + 0xc) = uVar23;\n            *(pauVar73[-2] + uVar68 + 0x10) = uVar24;\n            *(pauVar73[-2] + uVar68 + 0x14) = uVar25;\n            *(pauVar73[-2] + uVar68 + 0x18) = uVar26;\n            *(pauVar73[-2] + uVar68 + 0x1c) = uVar27;\n            *(pauVar73[-1] + uVar68) = uVar28;\n            *(pauVar73[-1] + uVar68 + 4) = uVar29;\n            *(pauVar73[-1] + uVar68 + 8) = uVar30;\n            *(pauVar73[-1] + uVar68 + 0xc) = uVar31;\n            *(pauVar73[-1] + uVar68 + 0x10) = uVar32;\n            *(pauVar73[-1] + uVar68 + 0x14) = uVar33;\n            *(pauVar73[-1] + uVar68 + 0x18) = uVar34;\n            *(pauVar73[-1] + uVar68 + 0x1c) = uVar35;\n            return;\n        }\n        if ((in_RAX < unaff_RBX) || (*unaff_RBX + arg1 <= in_RAX)) {\n            if (arg1 < 0x801) {\n                do {\n                    arg1 = arg1 - 0x100;\n                    uVar48 = *(*unaff_RBX + 4);\n                    uVar49 = *(*unaff_RBX + 8);\n                    uVar50 = *(*unaff_RBX + 0xc);\n                    uVar51 = *(*unaff_RBX + 0x10);\n                    uVar52 = *(*unaff_RBX + 0x14);\n                    uVar53 = *(*unaff_RBX + 0x18);\n                    uVar54 = *(*unaff_RBX + 0x1c);\n                    uVar55 = *unaff_RBX[1];\n                    uVar56 = *(unaff_RBX[1] + 4);\n                    uVar57 = *(unaff_RBX[1] + 8);\n                    uVar58 = *(unaff_RBX[1] + 0xc);\n                    uVar59 = *(unaff_RBX[1] + 0x10);\n                    uVar60 = *(unaff_RBX[1] + 0x14);\n                    uVar61 = *(unaff_RBX[1] + 0x18);\n                    uVar62 = *(unaff_RBX[1] + 0x1c);\n                    uVar63 = *unaff_RBX[2];\n                    uVar64 = *(unaff_RBX[2] + 4);\n                    uVar65 = *(unaff_RBX[2] + 8);\n                    uVar66 = *(unaff_RBX[2] + 0xc);\n                    uVar3 = *(unaff_RBX[2] + 0x10);\n                    uVar5 = *(unaff_RBX[2] + 0x14);\n                    uVar6 = *(unaff_RBX[2] + 0x18);\n                    uVar7 = *(unaff_RBX[2] + 0x1c);\n                    uVar8 = *unaff_RBX[3];\n                    uVar9 = *(unaff_RBX[3] + 4);\n                    uVar10 = *(unaff_RBX[3] + 8);\n                    uVar11 = *(unaff_RBX[3] + 0xc);\n                    uVar12 = *(unaff_RBX[3] + 0x10);\n                    uVar13 = *(unaff_RBX[3] + 0x14);\n                    uVar14 = *(unaff_RBX[3] + 0x18);\n                    uVar15 = *(unaff_RBX[3] + 0x1c);\n                    uVar16 = *unaff_RBX[4];\n                    uVar17 = *(unaff_RBX[4] + 4);\n                    uVar18 = *(unaff_RBX[4] + 8);\n                    uVar19 = *(unaff_RBX[4] + 0xc);\n                    uVar20 = *(unaff_RBX[4] + 0x10);\n                    uVar21 = *(unaff_RBX[4] + 0x14);\n                    uVar22 = *(unaff_RBX[4] + 0x18);\n                    uVar23 = *(unaff_RBX[4] + 0x1c);\n                    uVar24 = *unaff_RBX[5];\n                    uVar25 = *(unaff_RBX[5] + 4);\n                    uVar26 = *(unaff_RBX[5] + 8);\n                    uVar27 = *(unaff_RBX[5] + 0xc);\n                    uVar28 = *(unaff_RBX[5] + 0x10);\n                    uVar29 = *(unaff_RBX[5] + 0x14);\n                    uVar30 = *(unaff_RBX[5] + 0x18);\n                    uVar31 = *(unaff_RBX[5] + 0x1c);\n                    uVar32 = *unaff_RBX[6];\n                    uVar33 = *(unaff_RBX[6] + 4);\n                    uVar34 = *(unaff_RBX[6] + 8);\n                    uVar35 = *(unaff_RBX[6] + 0xc);\n                    uVar36 = *(unaff_RBX[6] + 0x10);\n                    uVar37 = *(unaff_RBX[6] + 0x14);\n                    uVar38 = *(unaff_RBX[6] + 0x18);\n                    uVar39 = *(unaff_RBX[6] + 0x1c);\n                    uVar40 = *unaff_RBX[7];\n                    uVar41 = *(unaff_RBX[7] + 4);\n                    uVar42 = *(unaff_RBX[7] + 8);\n                    uVar43 = *(unaff_RBX[7] + 0xc);\n                    uVar44 = *(unaff_RBX[7] + 0x10);\n                    uVar45 = *(unaff_RBX[7] + 0x14);\n                    uVar46 = *(unaff_RBX[7] + 0x18);\n                    uVar47 = *(unaff_RBX[7] + 0x1c);\n                    **in_RAX = **unaff_RBX;\n                    *(*in_RAX + 4) = uVar48;\n                    *(*in_RAX + 8) = uVar49;\n                    *(*in_RAX + 0xc) = uVar50;\n                    *(*in_RAX + 0x10) = uVar51;\n                    *(*in_RAX + 0x14) = uVar52;\n                    *(*in_RAX + 0x18) = uVar53;\n                    *(*in_RAX + 0x1c) = uVar54;\n                    *in_RAX[1] = uVar55;\n                    *(in_RAX[1] + 4) = uVar56;\n                    *(in_RAX[1] + 8) = uVar57;\n                    *(in_RAX[1] + 0xc) = uVar58;\n                    *(in_RAX[1] + 0x10) = uVar59;\n                    *(in_RAX[1] + 0x14) = uVar60;\n                    *(in_RAX[1] + 0x18) = uVar61;\n                    *(in_RAX[1] + 0x1c) = uVar62;\n                    *in_RAX[2] = uVar63;\n                    *(in_RAX[2] + 4) = uVar64;\n                    *(in_RAX[2] + 8) = uVar65;\n                    *(in_RAX[2] + 0xc) = uVar66;\n                    *(in_RAX[2] + 0x10) = uVar3;\n                    *(in_RAX[2] + 0x14) = uVar5;\n                    *(in_RAX[2] + 0x18) = uVar6;\n                    *(in_RAX[2] + 0x1c) = uVar7;\n                    *in_RAX[3] = uVar8;\n                    *(in_RAX[3] + 4) = uVar9;\n                    *(in_RAX[3] + 8) = uVar10;\n                    *(in_RAX[3] + 0xc) = uVar11;\n                    *(in_RAX[3] + 0x10) = uVar12;\n                    *(in_RAX[3] + 0x14) = uVar13;\n                    *(in_RAX[3] + 0x18) = uVar14;\n                    *(in_RAX[3] + 0x1c) = uVar15;\n                    *in_RAX[4] = uVar16;\n                    *(in_RAX[4] + 4) = uVar17;\n                    *(in_RAX[4] + 8) = uVar18;\n                    *(in_RAX[4] + 0xc) = uVar19;\n                    *(in_RAX[4] + 0x10) = uVar20;\n                    *(in_RAX[4] + 0x14) = uVar21;\n                    *(in_RAX[4] + 0x18) = uVar22;\n                    *(in_RAX[4] + 0x1c) = uVar23;\n                    *in_RAX[5] = uVar24;\n                    *(in_RAX[5] + 4) = uVar25;\n                    *(in_RAX[5] + 8) = uVar26;\n                    *(in_RAX[5] + 0xc) = uVar27;\n                    *(in_RAX[5] + 0x10) = uVar28;\n                    *(in_RAX[5] + 0x14) = uVar29;\n                    *(in_RAX[5] + 0x18) = uVar30;\n                    *(in_RAX[5] + 0x1c) = uVar31;\n                    *in_RAX[6] = uVar32;\n                    *(in_RAX[6] + 4) = uVar33;\n                    *(in_RAX[6] + 8) = uVar34;\n                    *(in_RAX[6] + 0xc) = uVar35;\n                    *(in_RAX[6] + 0x10) = uVar36;\n                    *(in_RAX[6] + 0x14) = uVar37;\n                    *(in_RAX[6] + 0x18) = uVar38;\n                    *(in_RAX[6] + 0x1c) = uVar39;\n                    *in_RAX[7] = uVar40;\n                    *(in_RAX[7] + 4) = uVar41;\n                    *(in_RAX[7] + 8) = uVar42;\n                    *(in_RAX[7] + 0xc) = uVar43;\n                    *(in_RAX[7] + 0x10) = uVar44;\n                    *(in_RAX[7] + 0x14) = uVar45;\n                    *(in_RAX[7] + 0x18) = uVar46;\n                    *(in_RAX[7] + 0x1c) = uVar47;\n                    unaff_RBX = unaff_RBX[8];\n                    in_RAX = in_RAX[8];\n                } while (0xff < arg1);\n            }\n            else {\n                if ((*0x5450e6 == '\\x01') && (((unaff_RBX | in_RAX) & 7) != 0)) {\n                    for (; arg1 != 0; arg1 = arg1 - 1) {\n                        (*in_RAX)[0] = (*unaff_RBX)[0];\n                        unaff_RBX = *unaff_RBX + 1;\n                        in_RAX = *in_RAX + 1;\n                    }\n                    return;\n                }\n                uVar68 = arg1 & 7;\n                for (uVar67 = arg1 >> 3; arg1 = uVar68,  uVar67 != 0; uVar67 = uVar67 - 1) {\n                    **in_RAX = **unaff_RBX;\n                    unaff_RBX = *unaff_RBX + 8;\n                    in_RAX = *in_RAX + 8;\n                }\n            }\n        }\n        else {\n            uVar67 = arg1 >> 3;\n            uVar68 = arg1 & 7;\n            puVar70 = *unaff_RBX + arg1;\n            puVar72 = *in_RAX + arg1;\n            while( true ) {\n                if (uVar67 == 0) break;\n                uVar67 = uVar67 - 1;\n                puVar72[-1] = puVar70[-1];\n                puVar70 = puVar70 + -1;\n                puVar72 = puVar72 + -1;\n            }\n            in_RAX = puVar72 - uVar68;\n            unaff_RBX = puVar70 - uVar68;\n            arg1 = uVar68;\n        }\n    }\n    uVar3 = *(*unaff_RBX + 4);\n    uVar5 = *(*unaff_RBX + 8);\n    uVar6 = *(*unaff_RBX + 0xc);\n    puVar1 = unaff_RBX[-1] + arg1 + 0x10;\n    uVar7 = *puVar1;\n    uVar8 = puVar1[1];\n    uVar9 = puVar1[2];\n    uVar10 = puVar1[3];\n    **in_RAX = **unaff_RBX;\n    *(*in_RAX + 4) = uVar3;\n    *(*in_RAX + 8) = uVar5;\n    *(*in_RAX + 0xc) = uVar6;\n    puVar1 = in_RAX[-1] + arg1 + 0x10;\n    *puVar1 = uVar7;\n    puVar1[1] = uVar8;\n    puVar1[2] = uVar9;\n    puVar1[3] = uVar10;\n    return;\n}\n",
        "token_count": 13217
    },
    "0045a8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045a8a0(void)\n\n{\n    if (*0x5449f0 == '\\0') {\n        return;\n    }\n    fcn.0042baa0();\n    return;\n}\n",
        "token_count": 47
    },
    "0045a940": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0045a940(ulong noname_0, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*0x5449f0 == '\\0') {\n        return (*0x7ffe0014 + -0x19db1ded53e8000) * 0x5fca6af2bd215e5c;\n    }\n    iVar1 = fcn.0042bb20();\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "0045aea0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045aea0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t arg1_00;\n    ulong in_R9;\n    int64_t in_GS_OFFSET;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    \n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\n    iVar2 = **(in_GS_OFFSET + *0x544bc0);\n    puVar5 = *0x20;\n    do {\n        puVar1 = iVar2 + 0x10;\n        puVar6 = puVar5;\n        if (*puVar1 <= puVar5 && puVar5 != *puVar1) {\n            puVar6 = puVar5 + -0x60;\n            *(puVar5 + -8) = unaff_RBP;\n            unaff_RBP = puVar5 + -8;\n            if (*0x544c10 == 0) {\n                *0x4f15d0 = 0x45a340;\n            }\n            else {\n                *(puVar5 + -0x68) = 0x42b965;\n                fcn.00458ba0(arg1, 0x45a340, arg3, in_R9);\n            }\n            arg1_00 = 0;\n            while( true ) {\n                if (0x35 < arg1_00) {\n                    *(puVar5 + -0x68) = 0x42b9d5;\n                    fcn.0042ab40();\n                    *(puVar5 + -0x68) = 0x42b9da;\n                    fcn.004412a0();\n                    *(puVar5 + -0x68) = 0x42b9df;\n                    fcn.00441340();\n                    *(puVar5 + -0x68) = 0x42b9e5;\n                    fcn.0042b5c0();\n                    *(puVar5 + -0x68) = 0x42b9ec;\n                    *0x544a50 = fcn.0042b500();\n                    *(puVar5 + -0x68) = 0x42b9f7;\n                    fcn.0042b680();\n                    *(puVar5 + -0x68) = 0x42b9fc;\n                    *0x544a30 = fcn.0042b3e0();\n                    *(puVar5 + -0x38) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x28) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x18) = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_GetSystemInfo;\n                    *(puVar5 + -0x58) = puVar5 + -0x38;\n                    *(puVar5 + -0x68) = 0x42ba2e;\n                    fcn.0042d480();\n                    *0x544b48 = *(puVar5 + -0x34);\n                    *(puVar5 + -0x60) = _sym.imp.kernel32.dll_SetProcessPriorityBoost;\n                    *(puVar5 + -0x58) = 0xffffffffffffffff;\n                    *(puVar5 + -0x50) = 1;\n                    *(puVar5 + -0x68) = 0x42ba6d;\n                    fcn.0042d500();\n                    return;\n                }\n                uVar3 = *(arg1_00 + 0x47c21b);\n                if (uVar3 < 0x80) {\n                    uVar4 = arg1_00;\n                    arg1_00 = arg1_00 + 1;\n                }\n                else {\n                    *(puVar5 + -0x40) = arg1_00;\n                    *(puVar5 + -0x68) = 0x42b9b4;\n                    uVar3 = fcn.00452dc0(arg1_00);\n                    arg1_00 = 0x36;\n                    uVar4 = *(puVar5 + -0x40);\n                }\n                if (99 < uVar4) break;\n                arg3 = 0x544f20;\n                *(uVar4 + 0x544f20) = uVar3;\n                *0x544a04 = *0x544a04 + 1;\n            }\n            arg1 = 100;\n            *(puVar5 + -0x68) = 0x42ba93;\n            fcn.00458f20(100);\n        }\n        *(puVar6 + -8) = 0x42ba99;\n        fcn.004568e0();\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1174
    },
    "0045b080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043396f)\n\nvoid fcn.0045b080(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    int64_t arg2;\n    uchar *puVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    \n    uVar6 = 0;\n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    iVar2 = **(in_GS_OFFSET + *0x544bc0);\n    puVar4 = *0x20;\n    do {\n        puVar5 = puVar4;\n        if (*(iVar2 + 0x10) <= puVar4 && puVar4 != *(iVar2 + 0x10)) {\n            puVar5 = puVar4 + -0x50;\n            *(puVar4 + -8) = unaff_RBP;\n            unaff_RBP = puVar4 + -8;\n            *(puVar4 + -0x20) = iVar2;\n            *0x4f26d8 = 10000;\n            iVar2 = 0x4d9aa0;\n            while (iVar2 != 0) {\n                *(puVar4 + -0x18) = iVar2;\n                *(puVar4 + -0x58) = 0x4337fa;\n                fcn.00446c60();\n                iVar2 = *(*(puVar4 + -0x18) + 0x230);\n            }\n            for (iVar2 = 0; iVar2 < 2; iVar2 = iVar2 + 1) {\n                *(iVar2 * 0x40 + 0x545028) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n            }\n            for (iVar2 = 0; iVar2 < 0x23; iVar2 = iVar2 + 1) {\n                *(iVar2 * 0x10 + 0x5458a8) = CONCAT412(uVar9, CONCAT48(uVar8, CONCAT44(uVar7, uVar6)));\n            }\n            *(puVar4 + -0x58) = 0x43385a;\n            fcn.0040a200();\n            *(puVar4 + -0x58) = 0x433865;\n            fcn.004010a0();\n            *0x5449f2 = *0x5450ea;\n            *0x5449f3 = *0x5450ef;\n            *0x5449f1 = *0x5450e7;\n            *(puVar4 + -0x58) = 0x433891;\n            fcn.00402a40();\n            *(puVar4 + -0x58) = 0x4338a6;\n            fcn.0042bee0(8);\n            uVar1 = *(*(puVar4 + -0x20) + 0x30);\n            *(puVar4 + -0x58) = 0x4338be;\n            fcn.00433bc0(uVar1);\n            *(puVar4 + -0x58) = 0x4338c5;\n            fcn.004469e0();\n            *(puVar4 + -0x58) = 0x4338ca;\n            fcn.00451a80();\n            *(puVar4 + -0x58) = 0x4338cf;\n            fcn.004090a0();\n            *(puVar4 + -0x58) = 0x4338d4;\n            fcn.004459e0();\n            *(puVar4 + -0x58) = 0x4338e5;\n            fcn.0042bf80();\n            *(puVar4 + -0x58) = 0x4338ea;\n            fcn.0043fba0();\n            *(puVar4 + -0x58) = 0x4338ef;\n            fcn.004135a0();\n            if (*0x4ef000 != '\\0') {\n                *0x4d9288 = 0;\n            }\n            *(puVar4 + -0x58) = 0x433911;\n            fcn.00409860();\n            *(puVar4 + -0x58) = 0x433917;\n            fcn.0045a8a0();\n            uVar6 = 0;\n            uVar7 = 0;\n            uVar8 = 0;\n            uVar9 = 0;\n            iVar2 = **(in_GS_OFFSET + *0x544bc0);\n            *0x4f26a8 = *(puVar4 + -0x50);\n            *(puVar4 + -0x34) = *0x544a30;\n            *(puVar4 + -0x58) = 0x433953;\n            fcn.00406640();\n            *(puVar4 + -0x58) = 0x433958;\n            fcn.004463c0();\n            arg2 = 0;\n            arg1 = *(puVar4 + -0x34);\n            *(puVar4 + -0x58) = 0x43397e;\n            iVar3 = fcn.0043bf60();\n            if (iVar3 == 0) {\n                *(puVar4 + -0x58) = 0x433997;\n                fcn.00409a80();\n                if (1 < *0x544e60) {\n                    *0x544c15 = 1;\n                    *0x544c10 = CONCAT31(*0x544c11, 1);\n                    *(puVar4 + -0x10) = *0x4f1c70;\n                    *(puVar4 + -0x28) = *0x4f1c78;\n                    iVar2 = 0;\n                    arg1 = *0x4f1c70;\n                    arg2 = *0x4f1c78;\n                    while (iVar2 < arg2) {\n                        *(puVar4 + -0x30) = iVar2;\n                        iVar2 = *(arg1 + iVar2 * 8);\n                        *(puVar4 + -0x58) = 0x433a6d;\n                        fcn.00429c80(arg1, iVar2 + 0x1260);\n                        arg1 = *(puVar4 + -0x10);\n                        arg2 = *(puVar4 + -0x28);\n                        iVar2 = *(puVar4 + -0x30) + 1;\n                    }\n                }\n                if (*0x4ef078 == 0) {\n                    *0x4ef078 = 7;\n                    if (*0x544c10 == 0) {\n                        *0x4ef070 = 0x475ce1;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x433a10;\n                        fcn.00458a80(arg1, arg2, param_3, param_4);\n                    }\n                }\n                if (*0x4ef0b8 == 1) {\n                    *0x4ef0b8 = 0;\n                    if (*0x544c10 == 0) {\n                        *0x4ef0b0 = 0;\n                    }\n                    else {\n                        *(puVar4 + -0x58) = 0x433a49;\n                        fcn.00458a80(arg1, arg2, param_3, param_4);\n                    }\n                }\n                return;\n            }\n            *(puVar4 + -0x58) = 0x433a9b;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x433aa5;\n        fcn.004568e0();\n        puVar4 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1794
    },
    "0045b0a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045b0a0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int64_t iStack24;\n    int64_t *piStack16;\n    \n    piStack16 = **(in_GS_OFFSET + *0x544bc0);\n    if (*piStack16 == 0) {\n        iStack24 = piStack16[1];\n        if (iStack24 == 0) {\n            iStack24 = 0x2000;\n        }\n        piStack16[1] = &iStack24;\n        *piStack16 = &stack0x000003e8 + -iStack24;\n    }\n    piStack16[2] = *piStack16 + 0x13a0;\n    piStack16[3] = *piStack16 + 0x13a0;\n    fcn.00434f80();\n    fcn.00435120();\n    return;\n}\n",
        "token_count": 202
    },
    "0045b180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043f9ac)\n// WARNING: Removing unreachable block (ram,0x0043f9ae)\n// WARNING: Removing unreachable block (ram,0x0043f9b4)\n// WARNING: Removing unreachable block (ram,0x0043f9cf)\n// WARNING: Removing unreachable block (ram,0x0043f9d5)\n// WARNING: Removing unreachable block (ram,0x0043f9d7)\n// WARNING: Removing unreachable block (ram,0x0043f9dd)\n// WARNING: Removing unreachable block (ram,0x0043f9f0)\n// WARNING: Removing unreachable block (ram,0x0043f9f6)\n// WARNING: Removing unreachable block (ram,0x0043fa0f)\n// WARNING: Removing unreachable block (ram,0x0043fa11)\n// WARNING: Removing unreachable block (ram,0x0043fa1d)\n// WARNING: Removing unreachable block (ram,0x0043fa37)\n// WARNING: Removing unreachable block (ram,0x0043fa39)\n// WARNING: Removing unreachable block (ram,0x0043fa56)\n// WARNING: Removing unreachable block (ram,0x0043fa61)\n// WARNING: Removing unreachable block (ram,0x0043fa72)\n// WARNING: Removing unreachable block (ram,0x0043fa1a)\n// WARNING: Removing unreachable block (ram,0x0043fa85)\n// WARNING: Removing unreachable block (ram,0x0043fa96)\n// WARNING: Removing unreachable block (ram,0x0043faa7)\n// WARNING: Removing unreachable block (ram,0x0043fab8)\n// WARNING: Removing unreachable block (ram,0x0043fac9)\n\nvoid fcn.0045b180(void)\n\n{\n    uint64_t *puVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uchar *puVar8;\n    uchar *puVar9;\n    uchar *unaff_RBP;\n    int64_t iVar10;\n    int64_t in_GS_OFFSET;\n    \n    iVar4 = **(in_GS_OFFSET + *0x544bc0);\n    puVar8 = *0x20;\n    do {\n        puVar1 = iVar4 + 0x10;\n        puVar9 = puVar8;\n        if (*puVar1 <= puVar8 && puVar8 != *puVar1) {\n            puVar9 = puVar8 + -0x40;\n            *(puVar8 + -8) = unaff_RBP;\n            unaff_RBP = puVar8 + -8;\n            *(puVar8 + -0x1c) = 0;\n            *(puVar8 + -0x20) = 0;\n            *(puVar8 + -0x24) = 0;\n            *(puVar8 + -0x10) = 0;\n            *(puVar8 + -0x18) = 0;\n            *(puVar8 + -0x28) = 0;\n            uVar5 = 0;\n            iVar7 = 0xb3a4b57ce31;\n            for (iVar6 = 0x1e; -1 < iVar6; iVar6 = iVar6 + -1) {\n                iVar10 = 1000000000 << (iVar6 & 0x3f);\n                if (iVar10 <= iVar7) {\n                    iVar7 = iVar7 - iVar10;\n                    uVar5 = uVar5 | 1 << (iVar6 & 0x1f);\n                }\n            }\n            if (iVar7 < 1000000000) {\n                *(puVar8 + -0x1c) = iVar7;\n            }\n            else {\n                *(puVar8 + -0x1c) = 0;\n                uVar5 = 0x7fffffff;\n            }\n            if ((uVar5 == 0x3039) && (*(puVar8 + -0x1c) == 0xd431)) {\n                *(puVar8 + -0x2c) = 0;\n                *(puVar8 + -0x2c) = 1;\n                piVar2 = puVar8 + -0x2c;\n                LOCK();\n                if (*piVar2 == 1) {\n                    *piVar2 = 2;\n                    if (*(puVar8 + -0x2c) == 2) {\n                        *(puVar8 + -0x2c) = 4;\n                        LOCK();\n                        if (*piVar2 == 5) {\n                            *piVar2 = 6;\n                        }\n                        else {\n                            if (*(puVar8 + -0x2c) == 4) {\n                                *(puVar8 + -0x2c) = 0xffffffff;\n                                LOCK();\n                                if (*piVar2 == -1) {\n                                    *piVar2 = -2;\n                                    if (*(puVar8 + -0x2c) == -2) {\n                                        *(puVar8 + -0x28) = 0x1010101;\n                                        puVar3 = puVar8 + -0x27;\n                                        LOCK();\n                                        *puVar3 = *puVar3 | 0xf0;\n                                        if ((((puVar8[-0x28] == '\\x01') && (puVar8[-0x27] == -0xf)) &&\n                                            (puVar8[-0x26] == '\\x01')) && (puVar8[-0x25] == '\\x01')) {\n                                            *(puVar8 + -0x28) = 0xffffffff;\n                                            LOCK();\n                                            *puVar3 = *puVar3 & 1;\n                                            if (((puVar8[-0x28] == -1) && (puVar8[-0x27] == '\\x01')) &&\n                                               ((puVar8[-0x26] == -1 && (puVar8[-0x25] == -1)))) {\n                                                *(puVar8 + -0x10) = 0xffffffffffffffff;\n                                                *(puVar8 + -0x48) = 0x43faeb;\n                                                fcn.00430040();\n                                            }\n                                            *(puVar8 + -0x48) = 0x43fafc;\n                                            fcn.00430040();\n                                        }\n                                        *(puVar8 + -0x48) = 0x43fb0d;\n                                        fcn.00430040();\n                                    }\n                                    *(puVar8 + -0x48) = 0x43fb1e;\n                                    fcn.00430040();\n                                }\n                                *(puVar8 + -0x48) = 0x43fb2f;\n                                fcn.00430040();\n                            }\n                            *(puVar8 + -0x48) = 0x43fb45;\n                            fcn.00430040();\n                        }\n                        *(puVar8 + -0x48) = 0x43fb56;\n                        fcn.00430040();\n                    }\n                    *(puVar8 + -0x48) = 0x43fb67;\n                    fcn.00430040();\n                }\n                *(puVar8 + -0x48) = 0x43fb78;\n                fcn.00430040();\n            }\n            *(puVar8 + -0x48) = 0x43fb89;\n            fcn.00430040();\n        }\n        *(puVar9 + -8) = 0x43fb8f;\n        fcn.004568e0();\n        puVar8 = puVar9;\n    } while( true );\n}\n",
        "token_count": 1680
    },
    "0045b2c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0045b2c0(void)\n\n{\n    uint uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t **ppuVar4;\n    int64_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint64_t *puVar10;\n    ulong uVar11;\n    uint64_t uVar12;\n    ulong *puVar13;\n    ulong uVar14;\n    uint64_t uVar15;\n    ulong unaff_RBX;\n    uchar *puVar16;\n    uchar *puVar17;\n    uchar *unaff_RBP;\n    int64_t in_GS_OFFSET;\n    \n    iVar9 = **(in_GS_OFFSET + *0x544bc0);\n    puVar16 = *0x20;\n    do {\n        puVar17 = puVar16;\n        if (*(iVar9 + 0x10) <= puVar16 + -0x128 && puVar16 + -0x128 != *(iVar9 + 0x10)) {\n            puVar17 = puVar16 + -0x1a8;\n            *(puVar16 + -8) = unaff_RBP;\n            unaff_RBP = puVar16 + -8;\n            puVar13 = *(iVar9 + 0x30);\n            puVar2 = puVar13[3];\n            if (puVar2[2] != 0xfffffffffffffb2e) {\n                *(puVar16 + -0xf8) = iVar9;\n                puVar10 = puVar13[0x12];\n                *(puVar16 + -0xb8) = puVar10;\n                if (puVar2 == puVar10) break;\n                *(puVar16 + -0xd8) = puVar13;\n                *(puVar16 + -0x150) = puVar2;\n                *(puVar16 + -0xe0) = *puVar13;\n                *(puVar16 + -0xe8) = puVar13[10];\n                *(puVar16 + -0x1b0) = 0x444a1b;\n                fcn.00431980();\n                *(puVar16 + -0x1b0) = 0x444a2c;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444a36;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444a47;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444a54;\n                fcn.00432200();\n                *(puVar16 + -0x1b0) = 0x444a65;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444a72;\n                fcn.00432200();\n                *(puVar16 + -0x1b0) = 0x444a85;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444a92;\n                fcn.00432200();\n                *(puVar16 + -0x1b0) = 0x444aa5;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444ab2;\n                fcn.00432200();\n                *(puVar16 + -0x1b0) = 0x444ab7;\n                fcn.00431be0();\n                *(puVar16 + -0x1b0) = 0x444abc;\n                fcn.00431a00();\n                iVar5 = *(*(puVar16 + -0xf8) + 0x30);\n                *(puVar16 + -0x40) = *(iVar5 + 8);\n                uVar1 = *(iVar5 + 0x14);\n                uVar6 = *(iVar5 + 0x18);\n                uVar7 = *(iVar5 + 0x1c);\n                *(puVar16 + -0x38) = *(iVar5 + 0x10);\n                *(puVar16 + -0x34) = uVar1;\n                *(puVar16 + -0x30) = uVar6;\n                *(puVar16 + -0x2c) = uVar7;\n                uVar1 = *(iVar5 + 0x24);\n                uVar6 = *(iVar5 + 0x28);\n                uVar7 = *(iVar5 + 0x2c);\n                *(puVar16 + -0x28) = *(iVar5 + 0x20);\n                *(puVar16 + -0x24) = uVar1;\n                *(puVar16 + -0x20) = uVar6;\n                *(puVar16 + -0x1c) = uVar7;\n                uVar1 = *(iVar5 + 0x34);\n                uVar6 = *(iVar5 + 0x38);\n                uVar7 = *(iVar5 + 0x3c);\n                *(puVar16 + -0x18) = *(iVar5 + 0x30);\n                *(puVar16 + -0x14) = uVar1;\n                *(puVar16 + -0x10) = uVar6;\n                *(puVar16 + -0xc) = uVar7;\n                *(puVar16 + -0x1b0) = 0x444b25;\n                fcn.0044f560(*(puVar16 + -0x18));\n                *(puVar16 + -0x1b0) = 0x444b36;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x17;\n            *(puVar16 + -0x1b0) = 0x444b47;\n            fcn.00430040();\n        }\n        *(puVar17 + -8) = 0x444b4d;\n        fcn.004568e0();\n        puVar16 = puVar17;\n    } while( true );\n    if (*(puVar10 + 0xb7) == '\\0') {\n        *(puVar16 + -0xb0) = puVar13[1];\n        uVar1 = *(puVar13 + 0x14);\n        uVar6 = *(puVar13 + 3);\n        uVar7 = *(puVar13 + 0x1c);\n        *(puVar16 + -0xa8) = *(puVar13 + 2);\n        *(puVar16 + -0xa4) = uVar1;\n        *(puVar16 + -0xa0) = uVar6;\n        *(puVar16 + -0x9c) = uVar7;\n        uVar1 = *(puVar13 + 0x24);\n        uVar6 = *(puVar13 + 5);\n        uVar7 = *(puVar13 + 0x2c);\n        *(puVar16 + -0x98) = *(puVar13 + 4);\n        *(puVar16 + -0x94) = uVar1;\n        *(puVar16 + -0x90) = uVar6;\n        *(puVar16 + -0x8c) = uVar7;\n        uVar1 = *(puVar13 + 0x34);\n        uVar6 = *(puVar13 + 7);\n        uVar7 = *(puVar13 + 0x3c);\n        *(puVar16 + -0x88) = *(puVar13 + 6);\n        *(puVar16 + -0x84) = uVar1;\n        *(puVar16 + -0x80) = uVar6;\n        *(puVar16 + -0x7c) = uVar7;\n        *(*(iVar9 + 0x30) + 0x10) = 0;\n        *(*(iVar9 + 0x30) + 0x30) = 0;\n        *(*(iVar9 + 0x30) + 8) = 0;\n        *(*(iVar9 + 0x30) + 0x18) = 0;\n        puVar13 = puVar10[2];\n        *(puVar16 + -0x100) = puVar13;\n        if ((puVar13 == 0xfffffffffffffade) &&\n           ((((iVar9 = *(iVar9 + 0x30),  *(iVar9 + 0xd8) != 0 || (*(iVar9 + 0xc0) != 0)) || (*(iVar9 + 0xd0) != 0)) ||\n            (*(*(iVar9 + 0xa0) + 4) != 1)))) {\n            puVar10[2] = *puVar10 + 0x13a0;\n            *(puVar16 + -0x1a8) = puVar10 + 7;\n            *(puVar16 + -0x1b0) = 0x444074;\n            fcn.00456700();\n            puVar10 = *(puVar16 + -0xb8);\n            puVar13 = *(puVar16 + -0x100);\n        }\n        uVar15 = *puVar10;\n        if (uVar15 != 0) {\n            uVar3 = puVar10[7];\n            uVar12 = uVar3 - 8;\n            *(puVar16 + -0x178) = uVar12;\n            if (uVar12 < uVar15) {\n                *(puVar16 + -0x108) = uVar15;\n                *(puVar16 + -0x110) = uVar3;\n                *(puVar16 + -0x118) = puVar10[1];\n                *(puVar16 + -0x120) = *(puVar16 + -0xa8);\n                *(puVar16 + -0x128) = *(puVar16 + -0xb0);\n                *(puVar16 + -0x130) = *(puVar16 + -0x88);\n                *(puVar16 + -0x138) = puVar10[8];\n                *(puVar16 + -0x140) = puVar10[0xc];\n                *(puVar16 + -0xc0) = puVar10[10];\n                *(puVar16 + -0x1b0) = 0x44412b;\n                fcn.00431980();\n                *(puVar16 + -0x1b0) = 0x44413c;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444146;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444157;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444165;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444176;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444185;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444196;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x4441a5;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x4441b6;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x4441c5;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x4441d6;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x4441e5;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x4441f6;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444205;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444216;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444225;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444236;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444245;\n                fcn.004320e0();\n                *(puVar16 + -0x1b0) = 0x444256;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x444265;\n                fcn.00432200();\n                *(puVar16 + -0x1b0) = 0x444276;\n                fcn.00432280();\n                *(puVar16 + -0x1b0) = 0x44427b;\n                fcn.00431a00();\n                puVar10 = *(puVar16 + -0xb8);\n                puVar13 = *(puVar16 + -0x100);\n                uVar12 = *(puVar16 + -0x178);\n            }\n            if (*puVar10 < uVar12 || *puVar10 == uVar12) {\n                if (puVar13 != 0xfffffffffffffade) {\ncode_r0x00444322:\n                    uVar15 = puVar10[1];\n                    uVar12 = *puVar10;\n                    *(puVar16 + -0x160) = uVar15 - uVar12;\n                    uVar3 = puVar10[8];\n                    *(puVar16 + -0x1b0) = 0x44433a;\n                    iVar9 = fcn.00447600(uVar15 - uVar12, uVar3);\n                    uVar15 = *(puVar16 + -0x160);\n                    uVar12 = uVar15 << 1;\n                    if (iVar9 != 0) {\n                        *(puVar16 + -0x148) = uVar12;\n                        *(puVar16 + -0x1b0) = 0x444354;\n                        iVar8 = fcn.00448260();\n                        for (uVar12 = *(puVar16 + -0x148);\n                            uVar12 - (*(*(puVar16 + -0xb8) + 8) - *(*(puVar16 + -0xb8) + 0x38)) < iVar8 + 0x13a0U;\n                            uVar12 = uVar12 << 1) {\n                        }\n                        uVar15 = *(puVar16 + -0x160);\n                    }\n                    if (*(puVar16 + -0x100) == -0x113) {\n                        uVar12 = uVar15;\n                    }\n                    if ((uVar12 <= *0x4d92c8) && (uVar12 <= *0x4d92c0)) {\n                        *(puVar16 + -0x158) = uVar12;\n                        *(puVar16 + -0x1b0) = 0x4443c5;\n                        fcn.00434500(8);\n                        *(puVar16 + -0x1b0) = 0x4443d7;\n                        fcn.00443b60();\n                        *(puVar16 + -0x1b0) = 0x4443ee;\n                        fcn.00434500(2);\n                        *(puVar16 + -0x1a8) = *(puVar16 + -0xb8) + 0x38;\n                        *(puVar16 + -0x1b0) = 0x444405;\n                        fcn.00456700();\n                        return;\n                    }\n                    if (*0x4d92c0 <= *0x4d92c8) goto code_r0x0044451b;\n                    *(puVar16 + -0x1b0) = 0x444439;\n                    fcn.00431980();\n                    *(puVar16 + -0x1b0) = 0x44444a;\n                    fcn.00432280();\n                    *(puVar16 + -0x1b0) = 0x444456;\n                    fcn.00431f80();\n                    *(puVar16 + -0x1b0) = 0x444467;\n                    fcn.00432280();\n                    *(puVar16 + -0x1b0) = 0x44446c;\n                    fcn.00431a00();\n                    do {\n                        *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n                        *(puVar16 + -0x110) = (*(puVar16 + -0xb8))[1];\n                        *(puVar16 + -0x1b0) = 0x444490;\n                        fcn.00431980();\n                        *(puVar16 + -0x1b0) = 0x4444a5;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x4444af;\n                        fcn.004320e0();\n                        *(puVar16 + -0x1b0) = 0x4444c5;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x4444d2;\n                        fcn.004320e0();\n                        *(puVar16 + -0x1b0) = 0x4444e5;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x4444f2;\n                        fcn.004320e0();\n                        *(puVar16 + -0x1b0) = 0x444505;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x44450a;\n                        fcn.00431a00();\n                        *(puVar16 + -0x1b0) = 0x44451b;\n                        fcn.00430040();\ncode_r0x0044451b:\n                        *(puVar16 + -0x1b0) = 0x444525;\n                        fcn.00431980();\n                        *(puVar16 + -0x1b0) = 0x444536;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x444545;\n                        fcn.00431f80();\n                        *(puVar16 + -0x1b0) = 0x444556;\n                        fcn.00432280();\n                        *(puVar16 + -0x1b0) = 0x44455b;\n                        fcn.00431a00();\n                    } while( true );\n                }\n                ppuVar4 = *(*(puVar16 + -0xf8) + 0x30);\n                if (*ppuVar4 != puVar10) {\n                    if ((ppuVar4[0x14] != NULL) || (*(ppuVar4 + 0x1b) != 0)) {\n                        if (*(puVar10 + 0xb3) != '\\0') {\n                            *(puVar10 + 0xb3) = 0;\n                            *(puVar16 + -0x1b0) = 0x4442ea;\n                            fcn.00444c00();\n                            puVar10 = *(puVar16 + -0xb8);\n                            puVar13 = *(puVar16 + -0x100);\n                        }\n                        if (*(puVar10 + 0xb2) != '\\0') {\n                            *(puVar16 + -0x1b0) = 0x44430d;\n                            fcn.004394c0(puVar13);\n                        }\n                        *(puVar16 + -0x1b0) = 0x44431a;\n                        fcn.00439440();\n                        puVar10 = *(puVar16 + -0xb8);\n                        goto code_r0x00444322;\n                    }\n                    *(puVar16 + -0x1b0) = 0x444596;\n                    fcn.00430040();\n                }\n                *(puVar16 + -0x1b0) = 0x4445a7;\n                puVar10 = fcn.00430040();\n            }\n            puVar13 = *(puVar10 + 0x12);\n            *(puVar16 + -0x17c) = *(puVar10 + 0x12);\n            *(puVar16 + -0x100) = puVar10[0x13];\n            *(puVar16 + -0x1b0) = 0x4445c6;\n            fcn.00431980();\n            *(puVar16 + -0x1b0) = 0x4445d7;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x4445e5;\n            fcn.00432200();\n            *(puVar16 + -0x1b0) = 0x4445f6;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x444605;\n            fcn.00431f80();\n            *(puVar16 + -0x1b0) = 0x444616;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x444625;\n            fcn.004320e0();\n            *(puVar16 + -0x1b0) = 0x444636;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x44463b;\n            fcn.00431a00();\n            *(puVar16 + -0x108) = **(puVar16 + -0xb8);\n            *(puVar16 + -0x1b0) = 0x444653;\n            fcn.00431980();\n            *(puVar16 + -0x1b0) = 0x444665;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x44466f;\n            fcn.004320e0();\n            *(puVar16 + -0x1b0) = 0x444685;\n            fcn.00432280();\n            *(puVar16 + -0x1b0) = 0x444692;\n            fcn.004320e0();\n            *(puVar16 + -0x1b0) = 0x444697;\n            fcn.00431be0();\n            *(puVar16 + -0x1b0) = 0x44469c;\n            fcn.00431a00();\n            *(puVar16 + -0x1b0) = 0x4446ad;\n            fcn.00430040();\n        }\n        unaff_RBX = 0x19;\n        *(puVar16 + -0x1b0) = 0x4446be;\n        puVar10 = fcn.00430040();\n    }\n    *(puVar16 + -0x78) = puVar13[1];\n    uVar1 = *(puVar13 + 0x14);\n    uVar6 = *(puVar13 + 3);\n    uVar7 = *(puVar13 + 0x1c);\n    *(puVar16 + -0x70) = *(puVar13 + 2);\n    *(puVar16 + -0x6c) = uVar1;\n    *(puVar16 + -0x68) = uVar6;\n    *(puVar16 + -100) = uVar7;\n    uVar1 = *(puVar13 + 0x24);\n    uVar6 = *(puVar13 + 5);\n    uVar7 = *(puVar13 + 0x2c);\n    *(puVar16 + -0x60) = *(puVar13 + 4);\n    *(puVar16 + -0x5c) = uVar1;\n    *(puVar16 + -0x58) = uVar6;\n    *(puVar16 + -0x54) = uVar7;\n    uVar1 = *(puVar13 + 0x34);\n    uVar6 = *(puVar13 + 7);\n    uVar7 = *(puVar13 + 0x3c);\n    *(puVar16 + -0x50) = *(puVar13 + 6);\n    *(puVar16 + -0x4c) = uVar1;\n    *(puVar16 + -0x48) = uVar6;\n    *(puVar16 + -0x44) = uVar7;\n    puVar10[0xe] = *(puVar16 + -0x78);\n    puVar10[0xf] = *(puVar16 + -0x70);\n    uVar15 = puVar10[8];\n    *(puVar16 + -0x1b0) = 0x444712;\n    iVar9 = fcn.00447600(uVar15);\n    if (iVar9 != 0) goto code_r0x00444996;\n    uVar11 = 9;\n    uVar14 = 0x475f4a;\n    iVar9 = 0;\n    do {\n        *(puVar16 + -0x168) = uVar11;\n        *(puVar16 + -0xf0) = uVar14;\n        *(puVar16 + -0x170) = iVar9;\n        puVar13 = *(puVar16 + -0xb8);\n        *(puVar16 + -0x108) = puVar13[7];\n        *(puVar16 + -0x110) = *puVar13;\n        *(puVar16 + -0x118) = puVar13[1];\n        *(puVar16 + -0x120) = *(puVar16 + -0x70);\n        *(puVar16 + -0x128) = *(puVar16 + -0x78);\n        *(puVar16 + -0x130) = *(puVar16 + -0x50);\n        *(puVar16 + -0x138) = puVar13[8];\n        *(puVar16 + -0x140) = puVar13[0xc];\n        *(puVar16 + -0xc0) = puVar13[10];\n        *(puVar16 + -0x1b0) = 0x4447b6;\n        fcn.00431980();\n        *(puVar16 + -0x1b0) = 0x4447c7;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4447d9;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4447ea;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4447f4;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444805;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444812;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444825;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444832;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444845;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444852;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444865;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444872;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444885;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444892;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x4448a5;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4448af;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x4448c5;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4448cf;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x4448e5;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x4448f2;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444905;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x44490f;\n        fcn.004320e0();\n        *(puVar16 + -0x1b0) = 0x444925;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x444932;\n        fcn.00432200();\n        *(puVar16 + -0x1b0) = 0x444945;\n        fcn.00432280();\n        *(puVar16 + -0x1b0) = 0x44494a;\n        fcn.00431a00();\n        *(*(*(puVar16 + -0xf8) + 0x30) + 0xf9) = 2;\n        *(puVar16 + -0x1b0) = 0x444985;\n        fcn.0044f560(*(puVar16 + -0x50));\n        unaff_RBX = 0x20;\n        *(puVar16 + -0x1b0) = 0x444996;\n        iVar9 = fcn.00430040();\ncode_r0x00444996:\n        *(puVar16 + -200) = unaff_RBX;\n        *(puVar16 + -0xd0) = iVar9;\n        *(puVar16 + -0x1b0) = 0x4449ab;\n        uVar11 = fcn.00447da0();\n        *(puVar16 + -0xf0) = uVar11;\n        *(puVar16 + -0x168) = unaff_RBX;\n        uVar1 = **(puVar16 + -0xd0);\n        *(puVar16 + -0x1b0) = 0x4449d1;\n        iVar9 = fcn.00447480(uVar1);\n        iVar9 = *(*(puVar16 + -0xb8) + 0x40) - iVar9;\n        uVar11 = *(puVar16 + -0x168);\n        uVar14 = *(puVar16 + -0xf0);\n    } while( true );\n}\n",
        "token_count": 7037
    },
    "0045e480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0045e480(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t *in_RAX;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar7 = *in_RAX;\n    bVar3 = false;\n    bVar1 = false;\n    iVar5 = 0;\n    while( true ) {\n        while( true ) {\n            while( true ) {\n                uVar8 = uVar7 & 5;\n                if (uVar8 == 1) {\n                    cVar2 = fcn.00454960();\n                }\n                else {\n                    cVar2 = '\\0';\n                }\n                if (cVar2 == '\\0') break;\n                if (((!bVar1) && ((uVar7 >> 1 & 1) == 0)) && (uVar7 >> 3 != 0)) {\n                    LOCK();\n                    if (uVar7 == *in_RAX) {\n                        *in_RAX = uVar7 | 2;\n                        bVar1 = true;\n                    }\n                }\n                fcn.004549e0();\n                uVar7 = *in_RAX;\n            }\n            uVar9 = uVar7;\n            if ((uVar7 & 4) == 0) {\n                uVar9 = uVar7 | 1;\n            }\n            if (uVar8 != 0) {\n                uVar9 = uVar9 + 8;\n            }\n            if ((bVar3) && ((uVar7 & 1) != 0)) {\n                uVar9 = uVar9 | 4;\n            }\n            if (bVar1) {\n                if ((uVar9 >> 1 & 1) == 0) {\n                    fcn.00454600();\n                }\n                uVar9 = uVar9 & 0xfffffffd;\n            }\n            LOCK();\n            if (uVar7 == *in_RAX) break;\n            uVar7 = *in_RAX;\n        }\n        *in_RAX = uVar9;\n        if (uVar8 == 0) break;\n        if (iVar5 == 0) {\n            iVar5 = fcn.00454ce0();\n        }\n        fcn.00454be0(1);\n        if (bVar3) {\n            bVar3 = true;\n        }\n        else {\n            iVar6 = fcn.00454ce0();\n            bVar3 = 1000000 < iVar6 - iVar5;\n        }\n        uVar7 = *in_RAX;\n        if ((uVar7 >> 2 & 1) != 0) {\n            if (((uVar7 & 3) != 0) || (uVar7 >> 3 == 0)) {\n                fcn.00454600();\n            }\n            if ((bVar3) && (uVar7 >> 3 != 1)) {\n                iVar4 = -7;\n            }\n            else {\n                iVar4 = -0xb;\n            }\n            LOCK();\n            uVar7 = *in_RAX;\n            *in_RAX = *in_RAX + iVar4;\n            return uVar7;\n        }\n        bVar1 = true;\n    }\n    return uVar7;\n}\n",
        "token_count": 796
    },
    "0045f5c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.0045f5c0(ulong arg1)\n\n{\n    ulong in_RAX;\n    ulong uVar1;\n    char *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    ulong *arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    ulong arg4;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0xa0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0xa8) = 0x45f5fb;\n            uVar1 = fcn.004601c0(arg1);\n            iVar3 = *0x4f1540;\n            if (unaff_RDI == 0) {\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\n                    goto code_r0x0045f616;\n                }\n            }\n            else {\n                uVar1 = 0;\ncode_r0x0045f616:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                *(*0x20 + -0x20) = uVar1;\n                *(*0x20 + -0xa8) = 0x45f64a;\n                pcVar2 = fcn.0040e5e0(*(*0x20 + 8));\n                unaff_RBX = *0x4f1c00;\n                if (*pcVar2 == '\\0') {\n                    *(*0x20 + -0xa8) = 0x45f6d2;\n                    uVar1 = fcn.0045b3c0();\n                    goto code_r0x0045f6d2;\n                }\n                unaff_RDI = *(*0x20 + 8);\n                *(*0x20 + -0xa8) = 0x45f677;\n                uVar1 = *0x4f1c08;\n                fcn.00445d60(*0x4f1c08);\n                *(*0x20 + -0xa8) = 0x45f67c;\n                iVar3 = fcn.004601c0(uVar1);\n                if (unaff_RDI != 0) {\n                    iVar3 = 0;\n                    goto code_r0x0045f696;\n                }\n                if (unaff_RBX != 0) {\n                    unaff_RDI = 0;\ncode_r0x0045f696:\n                    if (unaff_RDI != 0) {\n                        return NULL;\n                    }\n                    *(*0x20 + -0xa8) = 0x45f6ab;\n                    uVar1 = fcn.0045b360();\ncode_r0x0045f6d2:\n                    if (iVar3 != 0) {\n                        *(*0x20 + -0x50) = iVar3;\n                        *(*0x20 + -0xa8) = 0x45f6e8;\n                        uVar1 = fcn.004604e0();\n                        *(*0x20 + -0x10) = uVar1;\n                        *(*0x20 + -0x48) = iVar3;\n                        *(*0x20 + -0xa8) = 0x45f705;\n                        uVar1 = fcn.0040ba20();\n                        *(*0x20 + -0x18) = uVar1;\n                        *(*0x20 + -0xa8) = 0x45f717;\n                        uVar1 = fcn.00409360();\n                        puVar5 = *(*0x20 + -0x18);\n                        *puVar5 = 0x48f8b8;\n                        if (*0x544c10 == 0) {\n                            puVar5[1] = uVar1;\n                            arg1_00 = 0x48f8b8;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x45f747;\n                            fcn.00458a80(puVar5, puVar5 + 1, in_R8, in_R9);\n                            arg1_00 = puVar5;\n                        }\n                        puVar5[3] = *(*0x20 + 0x10);\n                        if (*0x544c10 == 0) {\n                            uVar1 = *(*0x20 + 8);\n                            puVar5[2] = uVar1;\n                        }\n                        else {\n                            uVar1 = *(*0x20 + 8);\n                            *(*0x20 + -0xa8) = 0x45f785;\n                            fcn.00458ba0(arg1_00, uVar1, in_R8, in_R9);\n                        }\n                        arg3 = 0x475902;\n                        arg4 = 2;\n                        *(*0x20 + -0xa8) = 0x45f7b5;\n                        uVar4 = fcn.00445ee0(0xf, uVar1, 0x475902, 2);\n                        iVar3 = *(*0x20 + -0x18);\n                        *(iVar3 + 0x28) = 0x476e5b;\n                        if (*0x544c10 == 0) {\n                            *(iVar3 + 0x20) = uVar4;\n                        }\n                        else {\n                            *(*0x20 + -0xa8) = 0x45f7d9;\n                            fcn.00458a80(iVar3, uVar1, arg3, arg4);\n                        }\n                        return NULL;\n                    }\n                    *(*0x20 + -0x58) = uVar1;\n                    *(*0x20 + -0xa8) = 0x45f805;\n                    puVar5 = fcn.0040ba20();\n                    uVar1 = *(*0x20 + 0x10);\n                    puVar5[1] = uVar1;\n                    if (*0x544c10 == 0) {\n                        *puVar5 = *(*0x20 + 8);\n                    }\n                    else {\n                        *(*0x20 + -0xa8) = 0x45f837;\n                        puVar5 = fcn.00458ba0(uVar1, *(*0x20 + 8), in_R8, in_R9);\n                    }\n                    puVar5[2] = *(*0x20 + -0x58);\n                    return puVar5;\n                }\n                *(*0x20 + -0xa8) = 0x45f876;\n                fcn.00458f20(0);\n            }\n            arg1 = 0;\n            *(*0x20 + -0xa8) = 0x45f885;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x45f895;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1727
    },
    "0045f8c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong * fcn.0045f8c0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong uVar3;\n    ulong *puVar4;\n    int64_t arg1_00;\n    ulong *arg1_01;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    ulong in_R8;\n    ulong arg3;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    do {\n        iVar1 = arg1;\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0xb8) = 0x45f909;\n            iVar1 = fcn.004600e0(arg1);\n            if (unaff_RDI != 0) {\n                iVar1 = 0;\n                goto code_r0x0045f920;\n            }\n            if (arg1 != 0) {\n                unaff_RDI = 0;\ncode_r0x0045f920:\n                if (unaff_RDI != 0) {\n                    return NULL;\n                }\n                arg1_00 = *(*0x20 + 8);\n                uVar2 = *(arg1_00 + 0x10);\n                *(*0x20 + -0xb8) = 0x45f945;\n                uVar2 = fcn.0045b400(arg1_00, uVar2);\n                if (iVar1 != 0) {\n                    *(*0x20 + -0x90) = iVar1;\n                    *(*0x20 + -0xb8) = 0x45f95b;\n                    uVar2 = fcn.004604e0();\n                    *(*0x20 + -0x70) = uVar2;\n                    *(*0x20 + -0x80) = iVar1;\n                    *(*0x20 + -0xb8) = 0x45f971;\n                    uVar2 = fcn.0040ba20();\n                    *(*0x20 + -0x78) = uVar2;\n                    *(*0x20 + -0xb8) = 0x45f985;\n                    uVar2 = fcn.00409360();\n                    puVar4 = *(*0x20 + -0x78);\n                    *puVar4 = 0x48f8b8;\n                    if (*0x544c10 == 0) {\n                        puVar4[1] = uVar2;\n                        arg1_01 = 0x48f8b8;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x45f9b2;\n                        fcn.00458a80(puVar4, puVar4 + 1, in_R8, in_R9);\n                        arg1_01 = puVar4;\n                    }\n                    uVar2 = *(*0x20 + 0x18);\n                    puVar4[3] = uVar2;\n                    if (*0x544c10 == 0) {\n                        uVar3 = *(*0x20 + 0x10);\n                        puVar4[2] = uVar3;\n                    }\n                    else {\n                        uVar3 = *(*0x20 + 0x10);\n                        *(*0x20 + -0xb8) = 0x45f9ec;\n                        fcn.00458c00(arg1_01, uVar2, uVar3, in_R9);\n                    }\n                    *(*0x20 + -0xc0) = unaff_RBP;\n                    *(*0x20 + -0xb8) = 0x45fa0f;\n                    fcn.004591ab();\n                    arg3 = 0x476e4c;\n                    *(*0x20 + -0x68) = 0x476e4c;\n                    *(*0x20 + -0x60) = 0xf;\n                    *(*0x20 + -0x58) = uVar3;\n                    *(*0x20 + -0x50) = uVar2;\n                    *(*0x20 + -0x48) = 0x476b53;\n                    *(*0x20 + -0x40) = 0xe;\n                    uVar2 = (*(*0x20 + 8))[1];\n                    *(*0x20 + -0x38) = **(*0x20 + 8);\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x28) = 0x475902;\n                    *(*0x20 + -0x20) = 2;\n                    *(*0x20 + -0x18) = *(*0x20 + -0x70);\n                    uVar2 = *(*0x20 + -0x80);\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0xb8) = 0x45faac;\n                    uVar3 = fcn.00445b20(6);\n                    iVar1 = *(*0x20 + -0x78);\n                    *(iVar1 + 0x28) = *0x20 + -0x68;\n                    if (*0x544c10 == 0) {\n                        *(iVar1 + 0x20) = uVar3;\n                    }\n                    else {\n                        *(*0x20 + -0xb8) = 0x45facd;\n                        fcn.00458a80(iVar1, uVar2, arg3, in_R9);\n                    }\n                    return NULL;\n                }\n                *(*0x20 + -0x88) = uVar2;\n                *(*0x20 + -0xb8) = 0x45faf7;\n                puVar4 = fcn.0040ba20();\n                if (*0x544c10 == 0) {\n                    *puVar4 = *(*0x20 + 8);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x45fb1f;\n                    puVar4 = fcn.00458ba0(arg1_00, *(*0x20 + 8), in_R8, in_R9);\n                }\n                puVar4[2] = *(*0x20 + 0x18);\n                if (*0x544c10 == 0) {\n                    puVar4[1] = *(*0x20 + 0x10);\n                }\n                else {\n                    *(*0x20 + -0xb8) = 0x45fb53;\n                    puVar4 = fcn.00458ba0(arg1_00, *(*0x20 + 0x10), in_R8, in_R9);\n                }\n                puVar4[3] = *(*0x20 + -0x88);\n                return puVar4;\n            }\n            iVar1 = 0;\n            *(*0x20 + -0xb8) = 0x45fb92;\n            in_RAX = fcn.00458f20(0);\n            unaff_RBX = arg1;\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = iVar1;\n        *(puVar5 + -8) = 0x45fba7;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1810
    },
    "0045fc60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0045fc60(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 2) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045e480();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x45fdc0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 2) == 0) {\n            iVar1 = *(in_RAX + 6);\n            fcn.0045f5c0(in_RAX);\n            if (iVar1 != 0) {\n                (**ppcStack16)();\n                return iVar1;\n            }\n            fcn.00454480(in_RAX + 2);\n        }\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if (bVar2) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 355
    },
    "0045fe20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint64_t fcn.0045fe20(void)\n\n{\n    bool bVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    int64_t iVar3;\n    uchar in_XMM15 [16];\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (iVar3 = SUB168(in_XMM15, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    ppcStack16 = NULL;\n    if (*(in_RAX + 8) == 0) {\n        LOCK();\n        if (*in_RAX == 0) {\n            *in_RAX = 1;\n        }\n        else {\n            fcn.0045e480();\n        }\n        auStack32 = CONCAT88(in_RAX, 0x45ffe0);\n        ppcStack16 = auStack32;\n        if (*(in_RAX + 8) == 0) {\n            iVar2 = fcn.0045fc60();\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            iVar2 = *(in_RAX + 2);\n            fcn.0045f8c0(*(in_RAX + 4));\n            if (iVar2 != 0) {\n                (**ppcStack16)();\n                return iVar2;\n            }\n            fcn.00454480(in_RAX + 8);\n        }\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        (**ppcStack16)();\n    }\n    return iVar3;\n}\n",
        "token_count": 395
    },
    "00410fe0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.00410fe0(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x10) = in_RAX;\n            uVar2 = (unaff_RBX >> 3) + 7 >> 3;\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x28) = uVar2 + 1;\n            unaff_RBX = 1;\n            *(*0x20 + -0x48) = 0x41102b;\n            iVar1 = fcn.0040bd80(0x5474b0);\n            uVar2 = *(*0x20 + -0x28);\n            if (uVar2 < 0x40000001) {\n                if (*(*0x20 + -0x20) < uVar2) {\n                    *(*0x20 + -0x18) = iVar1;\n                    *(*(*0x20 + -0x20) + iVar1) = 0xa1;\n                    *(*0x20 + -0x48) = 0x41105b;\n                    fcn.004110c0();\n                    uVar2 = *(*(*0x20 + -0x20) + *(*0x20 + -0x18));\n                    if (*(*(*0x20 + -0x20) + *(*0x20 + -0x18)) == 0xa1) {\n                        return;\n                    }\n                    unaff_RBX = 0x1b;\n                    *(*0x20 + -0x48) = 0x411089;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x48) = 0x411091;\n                fcn.00458f20(uVar2);\n            }\n            *(*0x20 + -0x48) = 0x41109b;\n            in_RAX = fcn.00458f80(uVar2, 0x40000000);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + -8) = 0x4110ab;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 676
    },
    "0041d600": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0041d600(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t arg1_00;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_RBX;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t in_R9;\n    uint64_t in_R11;\n    \n    uVar5 = unaff_RBX + 0x800000000000;\n    uVar6 = uVar5 >> 0x16;\n    uVar3 = arg1 + 0x7fffffffe000;\n    uVar4 = uVar3 >> 0x16;\n    uVar2 = uVar6;\n    uVar8 = uVar3;\n    if (uVar4 == uVar6) {\n        uVar8 = in_RAX[1];\n        if (uVar5 >> 0x19 < in_RAX[2]) {\n            puVar7 = (uVar5 >> 0x19) + uVar8;\n            LOCK();\n            *puVar7 = *puVar7 | 1 << (uVar2 & 7);\n            uVar8 = uVar3;\n        }\n        else {\n            in_RAX = fcn.00458f40(in_RAX[2]);\n        }\n    }\n    else {\n        uVar5 = uVar5 >> 0x19;\n        uVar3 = uVar3 >> 0x19;\n        if (uVar5 == uVar3) {\n            uVar4 = (uVar4 - uVar6) + 1;\n            uVar9 = 1 << (uVar4 & 0x1f) & -(uVar4 < 0x20);\n            uVar10 = uVar9;\n            uVar9 = uVar9 - 1 << (uVar2 & 7);\n            uVar3 = uVar9;\n            uVar4 = in_RAX[2];\n            if (uVar4 <= uVar5) {\n                in_RAX = fcn.00458f40(uVar4);\n                goto code_r0x0041d756;\n            }\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | uVar9;\n            goto code_r0x0041d719;\n        }\n        uVar10 = uVar6 + 7 & 0xfffffffffffffff8;\n        uVar6 = uVar10 - uVar6;\n        if (uVar6 != 0) {\n            arg1_00 = in_RAX[2];\n            if (arg1_00 <= uVar5) goto code_r0x0041d7c7;\n            LOCK();\n            *(in_RAX[1] + uVar5) = *(in_RAX[1] + uVar5) | (-(uVar6 < 0x20) & 1 << (uVar6 & 0x1f)) - 1 << (uVar2 & 7);\n        }\n        in_R11 = uVar4 & 0xfffffffffffffff8;\n        for (; uVar10 < in_R11; uVar10 = uVar10 + 8) {\n            arg1_00 = in_RAX[2];\n            uVar5 = in_RAX[1];\n            in_R9 = uVar10 >> 3;\n            if (arg1_00 <= in_R9) goto code_r0x0041d7bc;\ncode_r0x0041d756:\n            *(in_R9 + uVar5) = 0xff;\n        }\n        uVar4 = (uVar4 - in_R11) + 1;\n        if (uVar4 != 0) {\n            arg1_00 = in_RAX[1];\n            if (in_RAX[2] <= uVar3) {\n                fcn.00458f40(in_RAX[2]);\ncode_r0x0041d7bc:\n                fcn.00458f40(arg1_00);\ncode_r0x0041d7c7:\n                fcn.00458f40(arg1_00);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            LOCK();\n            *(arg1_00 + uVar3) = *(arg1_00 + uVar3) | (1 << (uVar4 & 0x1f) & -(uVar4 < 0x20)) - 1;\n        }\n    }\ncode_r0x0041d719:\n    uVar4 = *in_RAX;\n    if (uVar4 < 0) {\n        uVar4 = -uVar4;\n    }\n    if (uVar4 < uVar8) {\n        *in_RAX = -uVar8;\n    }\n    return;\n}\n",
        "token_count": 1109
    },
    "00431c80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00431d6b)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00431c80(ulong noname_0, ulong arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    uint uVar4;\n    uint uVar6;\n    double dVar5;\n    uchar in_XMM0 [16];\n    double dVar7;\n    uint uStack20;\n    ushort uStack16;\n    uchar uStack14;\n    uchar uStack13;\n    uchar uStack12;\n    char cStack11;\n    char cStack10;\n    char cStack9;\n    \n    while (dVar5 = SUB168(in_XMM0, 0),  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        in_XMM0 = in_XMM0 & 0xffffffffffffffff;\n    }\n    uVar4 = SUB164(in_XMM0, 0);\n    uVar6 = SUB164(in_XMM0 >> 0x20, 0);\n    if (dVar5 == dVar5 + dVar5) {\n        if (0.0 < dVar5) {\n            fcn.00432280();\n            return;\n        }\n        if ((dVar5 == dVar5 + dVar5) && (dVar5 < 0.0)) {\n            fcn.00432280();\n            return;\n        }\n    }\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack14 = 0;\n    if (dVar5 == 0.0) {\n        iVar2 = 0;\n    }\n    else {\n        if (dVar5 < 0.0) {\n            in_XMM0 = ZEXT816(*0x48f650) ^ in_XMM0;\n        }\n        iVar2 = 0;\n        for (; *0x48f608 <= SUB168(in_XMM0, 0);\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), SUB168(in_XMM0, 0) / *0x48f608)) {\n            iVar2 = iVar2 + 1;\n        }\n        for (; dVar5 = SUB168(in_XMM0, 0),  dVar5 < *0x48f5e0;\n            in_XMM0 = CONCAT88(SUB168(in_XMM0 >> 0x40, 0), dVar5 * *0x48f608)) {\n            iVar2 = iVar2 + -1;\n        }\n        dVar7 = *0x48f600;\n        for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n            dVar7 = dVar7 / *0x48f608;\n        }\n        dVar7 = dVar7 + dVar5;\n        if (*0x48f608 <= dVar7) {\n            iVar2 = iVar2 + 1;\n            dVar7 = dVar7 / *0x48f608;\n        }\n        uVar4 = SUB84(dVar7, 0);\n        uVar6 = dVar7 >> 0x20;\n    }\n    for (iVar3 = 0; iVar3 < 7; iVar3 = iVar3 + 1) {\n        *(&uStack20 + iVar3) = CONCAT44(uVar6, uVar4) + '0';\n        dVar5 = (CONCAT44(uVar6, uVar4) - CONCAT44(uVar6, uVar4)) * *0x48f608;\n        uVar4 = SUB84(dVar5, 0);\n        uVar6 = dVar5 >> 0x20;\n    }\n    uStack20 = CONCAT31(uStack20._1_3_, 0x2e);\n    uStack13 = 0x65;\n    uStack12 = 0x2b;\n    if (iVar2 < 0) {\n        uStack12 = 0x2d;\n        iVar2 = -iVar2;\n    }\n    cStack11 = ((SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 6) - (iVar2 >> 0x3f)) + '0'\n    ;\n    iVar3 = (SUB168(SEXT816(-0x3333333333333333) * SEXT816(iVar2) >> 0x40, 0) + iVar2 >> 3) - (iVar2 >> 0x3f);\n    cVar1 = iVar3;\n    cStack10 = cVar1 + ((iVar3 & 0xff) / 10) * -10 + '0';\n    cStack9 = iVar2 + cVar1 * -10 + '0';\n    fcn.00431a60(0xe);\n    return;\n}\n",
        "token_count": 1126
    },
    "004459e0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.004459e0(void)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xb8 && *0x20 + -0xb8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x138;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x148) = *0x20 + -8;\n            *(*0x20 + -0x140) = 0x445a2f;\n            fcn.0045916b();\n            unaff_RBP = *(*0x20 + -0x148);\n            *(*0x20 + -0x128) = 0x471780;\n            *(*0x20 + -0x120) = *0x20 + -0x118;\n            puVar1 = *(*0x20 + -0x128);\n            if ((*(puVar1 + 0x17) & 0x40) == 0) {\n                for (iVar2 = 0x4d9aa0; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                    if ((*(iVar2 + 0x140) < 0x544c01) && (0x544c00 < *(iVar2 + 0x110))) goto code_r0x00445a96;\n                }\n                iVar2 = 0;\ncode_r0x00445a96:\n                if (iVar2 != 0) {\n                    *0x544c00 = -(*puVar1 + 7U & 0xfffffff8);\n                    *0x544c04 = *puVar1;\n                    *0x544c08 = puVar1[1];\n                    *0x544c0c = puVar1[4] - *(iVar2 + 0x138);\n                    return;\n                }\n                *(*0x20 + -0x140) = 0x445af0;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x140) = 0x445b05;\n            fcn.00430040();\n        }\n        *(puVar3 + -8) = 0x445b0b;\n        fcn.004568e0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 575
    },
    "00448520": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint8_t * fcn.00448520(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint8_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint8_t *puVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint64_t unaff_RBX;\n    int32_t *unaff_RSI;\n    int64_t *unaff_RDI;\n    char in_R8B;\n    uint64_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    uint64_t in_R10;\n    int64_t unaff_R12;\n    \n    if (unaff_RBX != 0) {\n        uVar1 = *in_RAX;\n        uVar10 = uVar1;\n        if ((uVar1 == 0) && (in_R8B == '\\0')) {\n            return NULL;\n        }\n        if (-1 < uVar1) {\n            uVar8 = 1;\n            goto code_r0x00448575;\n        }\n        uVar6 = 0;\n        uVar8 = 0;\n        iVar9 = 0;\n        while (uVar6 < unaff_RBX) {\n            puVar5 = in_RAX + uVar6;\n            uVar7 = uVar6 + 1;\n            uVar6 = uVar7;\n            uVar10 = (*puVar5 & 0x7f) << (iVar9 & 0x1f);\n            in_R10 = uVar10;\n            uVar10 = uVar8 | uVar10;\n            uVar8 = uVar10;\n            if ((*puVar5 & 0x80) == 0) {\n                uVar8 = uVar7;\n                unaff_R12 = arg1;\ncode_r0x00448575:\n                uVar10 = -(uVar10 & 1) ^ uVar10 >> 1;\n                uVar6 = uVar10;\n                *unaff_RSI = *unaff_RSI + uVar10;\n                if (uVar8 <= unaff_RBX) {\n                    unaff_RBX = unaff_RBX - uVar8;\n                    uVar6 = arg1 - uVar8;\n                    uVar8 = uVar8 & -uVar6 >> 0x3f;\n                    unaff_RSI = in_RAX + uVar8;\n                    if (unaff_RBX != 0) {\n                        uVar3 = in_RAX[uVar8];\n                        if (-1 < in_RAX[uVar8]) {\n                            uVar4 = 1;\n                            goto code_r0x004485c8;\n                        }\n                        uVar10 = 0;\n                        uVar8 = 0;\n                        uVar3 = 0;\n                        while (uVar3 < unaff_RBX) {\n                            uVar4 = uVar3 + 1;\n                            iVar9 = uVar8;\n                            uVar10 = uVar10 | (*(uVar3 + unaff_RSI) & 0x7f) << (uVar8 & 0x1f);\n                            in_R10 = uVar4;\n                            if ((*(uVar3 + unaff_RSI) & 0x80) == 0) {\n                                uVar3 = uVar10;\ncode_r0x004485c8:\n                                if (uVar4 <= unaff_RBX) {\n                                    *unaff_RDI = *unaff_RDI + uVar3;\n                                    return (uVar4 & -(uVar6 - uVar4) >> 0x3f) + unaff_RSI;\n                                }\n                                uVar8 = unaff_RBX;\n                                uVar10 = fcn.00458fe0(unaff_RBX);\n                                iVar9 = uVar8;\n                            }\n                            uVar8 = iVar9 + 7;\n                            uVar3 = in_R10 & 0xffffffff;\n                        }\n                        fcn.00458f20(unaff_RBX);\n                    }\n                    fcn.00458f20(0);\n                }\n                uVar3 = unaff_RBX;\n                in_RAX = fcn.00458fe0(unaff_RBX);\n                iVar9 = uVar3;\n                arg1 = unaff_R12;\n            }\n            iVar9 = iVar9 + 7;\n        }\n        fcn.00458f20(unaff_RBX);\n    }\n    fcn.00458f20(0);\n    pcVar2 = swi(3);\n    puVar5 = (*pcVar2)();\n    return puVar5;\n}\n",
        "token_count": 1007
    },
    "0044ccc0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.0044ccc0(void)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar2 = fcn.00447600();\n    if (iVar2 != 0) {\n        if (*(iVar2 + 0x2b) < 8) {\n            puVar4 = NULL;\n        }\n        else {\n            uVar1 = *(iVar2 + *(iVar2 + 0x1c) * 4 + 0x48);\n            puVar4 = uVar1 + *(unaff_RBX + 0x140) & (uVar1 == 0xffffffff) - 1;\n        }\n        if (puVar4 != NULL) {\n            uVar3 = fcn.00447480(*puVar4);\n            return uVar3;\n        }\n        return in_RAX;\n    }\n    return in_RAX;\n}\n",
        "token_count": 275
    },
    "00406640": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nint64_t fcn.00406640(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    char cVar6;\n    char cVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (*0x4f1cb0 != NULL) {\n                iVar2 = 0;\n                piVar3 = *0x4f1cb0;\n                while( true ) {\n                    if (*0x4f1cb8 <= iVar2) {\n                        return 0;\n                    }\n                    iVar1 = *piVar3;\n                    if ((unaff_RBX < piVar3[1]) && (*(unaff_RBX + iVar1) == '=')) break;\ncode_r0x00406678:\n                    piVar3 = piVar3 + 2;\n                    iVar2 = iVar2 + 1;\n                }\n                uVar5 = 0;\n                do {\n                    if (unaff_RBX <= uVar5) {\n                        return iVar1 + (unaff_RBX + 1 & -((piVar3[1] - unaff_RBX) + -1) >> 0x3f);\n                    }\n                    cVar6 = *(uVar5 + iVar1);\n                    if (unaff_RBX <= uVar5) {\n                        *(*0x20 + -0x20) = 0x406725;\n                        fcn.00458f20(unaff_RBX);\n                        break;\n                    }\n                    cVar7 = *(uVar5 + in_RAX);\n                    if (cVar7 != cVar6) {\n                        if (cVar6 + 0xbfU < 0x1a) {\n                            cVar6 = cVar6 + ' ';\n                        }\n                        if (cVar7 + 0xbfU < 0x1a) {\n                            cVar7 = cVar7 + ' ';\n                        }\n                        if (cVar6 != cVar7) goto code_r0x00406678;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while( true );\n            }\n            unaff_RBX = 0x16;\n            *(*0x20 + -0x20) = 0x406736;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x406746;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 742
    },
    "0041db80": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041db80(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 0x18) = arg1;\n            iVar2 = *(in_RAX + 0x138);\n            iVar3 = unaff_RBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x28) = 0x41dbb8;\n                iVar2 = fcn.004202c0();\n                *(iVar2 + 0x18) = 0;\n                iVar3 = *(*0x20 + 8);\n                *(iVar3 + 0x130) = iVar2;\n                *(iVar3 + 0x138) = iVar2;\n                arg1 = *(*0x20 + 0x18);\n                iVar3 = *(*0x20 + 0x10);\n                in_RAX = *(*0x20 + 8);\n            }\n            iVar4 = *(iVar2 + 0x10);\n            if (iVar4 < 1) {\ncode_r0x0041dc6b:\n                uVar1 = *(iVar2 + 0x10);\n                if (uVar1 < 0x3f) {\n                    *(iVar2 + 0x10) = uVar1 + 1;\n                    iVar4 = uVar1 * 0x20;\n                    *(iVar2 + 0x20 + iVar4) = iVar3 - *(in_RAX + 0x100);\n                    *(iVar2 + 0x24 + iVar4) = *(arg1 + 4);\n                    *(iVar2 + 0x28 + iVar4) = arg1;\n                    *(in_RAX + 0x140) = *(in_RAX + 0x140) + 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x41dcbb;\n                fcn.00458f20(0x3f);\ncode_r0x0041dcbb:\n                unaff_RBX = 0x29;\n                *(*0x20 + -0x28) = 0x41dccc;\n                fcn.00430040();\n            }\n            else {\n                unaff_RBX = iVar3 - *(in_RAX + 0x100);\n                if (iVar4 - 1U < 0x3f) {\n                    iVar6 = (iVar4 - 1U) * 0x20;\n                    if (*(iVar2 + 0x20 + iVar6) + *(iVar2 + 0x24 + iVar6) <= unaff_RBX) {\n                        if (iVar4 == 0x3f) {\n                            *(*0x20 + -0x10) = iVar2;\n                            *(*0x20 + -0x28) = 0x41dc39;\n                            iVar2 = fcn.004202c0();\n                            *(iVar2 + 0x18) = 0;\n                            *(*(*0x20 + -0x10) + 0x18) = iVar2;\n                            in_RAX = *(*0x20 + 8);\n                            *(in_RAX + 0x138) = iVar2;\n                            iVar3 = *(*0x20 + 0x10);\n                            arg1 = *(*0x20 + 0x18);\n                        }\n                        goto code_r0x0041dc6b;\n                    }\n                    goto code_r0x0041dcbb;\n                }\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x28) = 0x41dcd9;\n            in_RAX = fcn.00458f20(0x3f);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x41dcee;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1120
    },
    "0041dd20": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong fcn.0041dd20(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (arg1 == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x18) = arg1;\n            arg1_00 = arg1 / 2;\n            *(*0x20 + -0x10) = arg1_00;\n            *(*0x20 + -0x50) = 0x41dd65;\n            uVar3 = fcn.0041dd20(arg1_00);\n            if (arg1_00 < 0x3f) {\n                *(*0x20 + -0x30) = uVar3;\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x20) = arg1_00 * 0x20;\n                *(*0x20 + -0x28) = arg1_00 * 0x20 + 0x20 + unaff_RBX;\n                *(*0x20 + -0x50) = 0x41ddc5;\n                uVar3 = fcn.0041dd20((*(*0x20 + 0x18) - *(*0x20 + -0x10)) + -1);\n                iVar1 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + -0x18);\n                *(iVar2 + 0x30 + iVar1) = *(*0x20 + -0x30);\n                *(iVar2 + 0x38 + iVar1) = uVar3;\n                return *(*0x20 + -0x28);\n            }\n            arg1 = 0x3f;\n            *(*0x20 + -0x50) = 0x41de0c;\n            in_RAX = fcn.00458f20(0x3f);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x41de25;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 701
    },
    "00428f00": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid fcn.00428f00(int64_t **arg1)\n\n{\n    ulong in_RAX;\n    int64_t **arg1_00;\n    int64_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t **ppiVar4;\n    int64_t **arg2;\n    int64_t unaff_RBX;\n    int64_t *piVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t iVar7;\n    int64_t **arg1_01;\n    int64_t iVar8;\n    int64_t **unaff_R13;\n    int64_t unaff_R14;\n    bool bVar9;\n    bool bVar10;\n    \n    do {\n        ppiVar2 = arg1;\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX + 0x800000000000U < arg1 + 0x100000000000) {\n                ppiVar2 = arg1 - unaff_RBX;\n            }\n            else {\n                ppiVar2 = NULL;\n            }\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x20) = unaff_RBX;\n            if (ppiVar2 != NULL) {\n                *(*0x20 + -0x28) = unaff_RBX + 0x800000000000U;\n                *(*0x20 + -0x30) = arg1 + 0x100000000000;\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x68) = 0x428f65;\n                arg1_00 = fcn.00428ce0();\n                if (arg1_00 < 1) {\n                    ppiVar4 = *(*0x20 + 8);\n                    iVar7 = *(*0x20 + -0x20);\n                    bVar9 = false;\ncode_r0x00428fae:\n                    ppiVar2 = ppiVar4[1];\n                    piVar1 = *ppiVar4;\n                    arg2 = ppiVar4[2];\n                    if (arg1_00 < ppiVar2) {\n                        if (arg1_00 < ppiVar2) {\n                            iVar8 = *(*0x20 + -0x18);\n                            bVar10 = piVar1[arg1_00 * 2] == iVar8;\n                            goto code_r0x00428fea;\n                        }\n                    }\n                    else {\n                        iVar8 = *(*0x20 + -0x18);\n                        bVar10 = false;\ncode_r0x00428fea:\n                        if (bVar10) {\n                            if (!bVar9) {\ncode_r0x00429114:\n                                if (bVar10) {\n                                    if (arg1_00 < ppiVar2) {\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00429311;\n                                    }\n                                }\n                                else {\n                                    *(*0x20 + -0x38) = arg1_00;\n                                    arg1_01 = ppiVar2 + 1;\n                                    if (arg2 < arg1_01) {\n                                        *(*0x20 + -0x40) = arg2;\n                                        *(*0x20 + -0x48) = ppiVar2;\n                                        *(*0x20 + -0x10) = piVar1;\n                                        ppiVar4[1] = arg1_01;\n                                        ppiVar4[2] = arg2 << 1;\n                                        piVar1 = ppiVar4[4];\n                                        *(*0x20 + -0x68) = 0x42920d;\n                                        piVar1 = fcn.0040bd80(piVar1);\n                                        ppiVar4 = *(*0x20 + 8);\n                                        *ppiVar4 = piVar1;\n                                        arg2 = ppiVar4[2];\n                                        arg1_00 = *(*0x20 + -0x38);\n                                        if (arg1_00 <= arg2) {\n                                            arg2 = *(*0x20 + -0x40);\n                                            if (arg1_00 <= arg2) {\n                                                piVar5 = *(*0x20 + -0x10);\n                                                if (piVar1 != piVar5) {\n                                                    *(*0x20 + -0x68) = 0x42924e;\n                                                    fcn.00459880(arg1_00 << 4);\n                                                    arg1_00 = *(*0x20 + -0x38);\n                                                    ppiVar4 = *(*0x20 + 8);\n                                                    piVar5 = *(*0x20 + -0x10);\n                                                    arg2 = *(*0x20 + -0x40);\n                                                }\n                                                arg1_01 = ppiVar4[1];\n                                                if (arg1_00 + 1U <= arg1_01) {\n                                                    iVar7 = arg1_01 + (-1 - arg1_00);\n                                                    if (*(*0x20 + -0x48) - arg1_00 < iVar7) {\n                                                        iVar7 = *(*0x20 + -0x48) - arg1_00;\n                                                    }\n                                                    if (piVar5 + (arg1_00 - arg2 >> 0x3f & arg1_00 << 4) !=\n                                                        *ppiVar4 +\n                                                        (-(ppiVar4[2] + (-1 - arg1_00)) >> 0x3f & (arg1_00 + 1U) * 0x10)\n                                                       ) {\n                                                        *(*0x20 + -0x68) = 0x4292d1;\n                                                        fcn.00459880(iVar7 << 4);\n                                                        ppiVar4 = *(*0x20 + 8);\n                                                        arg1_00 = *(*0x20 + -0x38);\n                                                    }\n                                                    iVar7 = *(*0x20 + -0x20);\n                                                    iVar8 = *(*0x20 + -0x18);\n                                                    goto code_r0x004292eb;\n                                                }\ncode_r0x00429332:\n                                                *(*0x20 + -0x68) = 0x42933a;\n                                                arg1_00 = arg1_01;\n                                                fcn.00458fe0(arg1_01);\n                                            }\n                                            *(*0x20 + -0x68) = 0x429345;\n                                            fcn.00458fa0(arg1_00, arg2);\n                                        }\n                                        *(*0x20 + -0x68) = 0x42934d;\n                                        fcn.00458fa0(arg1_00, arg2);\ncode_r0x0042934d:\n                                        *(*0x20 + -0x68) = 0x429358;\n                                        fcn.00458fe0(arg1_01);\ncode_r0x00429358:\n                                        *(*0x20 + -0x68) = 0x429365;\n                                        fcn.00458fe0(arg1_01);\n                                    }\n                                    else if (arg1_01 <= arg2) {\n                                        ppiVar4[1] = arg1_01;\n                                        arg2 = *ppiVar4;\n                                        if (arg1_01 < arg1_00 + 1U) goto code_r0x00429358;\n                                        iVar3 = ppiVar2 - arg1_00;\n                                        if (arg1_01 < arg1_00) goto code_r0x0042934d;\n                                        if (iVar3 + 1 < iVar3) {\n                                            iVar3 = iVar3 + 1;\n                                        }\n                                        if ((-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 << 4) + arg2 !=\n                                            arg2 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1U) * 0x10)) {\n                                            *(*0x20 + -0x68) = 0x4291c5;\n                                            fcn.00459880(iVar3 << 4);\n                                            ppiVar4 = *(*0x20 + 8);\n                                            arg1_00 = *(*0x20 + -0x38);\n                                            iVar7 = *(*0x20 + -0x20);\n                                            iVar8 = *(*0x20 + -0x18);\n                                        }\ncode_r0x004292eb:\n                                        piVar1 = *ppiVar4;\n                                        ppiVar2 = ppiVar4[1];\n                                        if (ppiVar2 <= arg1_00) {\n                                            *(*0x20 + -0x68) = 0x429332;\n                                            fcn.00458f20(ppiVar2);\n                                            arg2 = ppiVar4;\n                                            arg1_01 = arg1_00;\n                                            goto code_r0x00429332;\n                                        }\n                                        piVar1[arg1_00 * 2] = iVar7;\n                                        piVar1[arg1_00 * 2 + 1] = iVar8;\n                                        bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                        bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                        goto code_r0x00429311;\n                                    }\n                                    ppiVar2 = arg1_01;\n                                    *(*0x20 + -0x68) = 0x42936d;\n                                    fcn.00458fa0(ppiVar2, arg2);\n                                }\n                                *(*0x20 + -0x68) = 0x429375;\n                                fcn.00458f20(ppiVar2);\n                                goto code_r0x00429375;\n                            }\n                            if (arg1_00 < ppiVar2) {\n                                if (ppiVar2 <= arg1_00 - 1U) goto code_r0x00429392;\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = piVar1[arg1_00 * 2 + 1];\n                                ppiVar2 = ppiVar4[1];\n                                if (ppiVar2 < arg1_00) goto code_r0x0042938a;\n                                iVar3 = ppiVar2 - arg1_00;\n                                unaff_R13 = ppiVar2;\n                                if (ppiVar2 < arg1_00 + 1) goto code_r0x0042937f;\n                                if (iVar3 + -1 < iVar3) {\n                                    iVar3 = iVar3 + -1;\n                                }\n                                if (*ppiVar4 + (-((ppiVar4[2] - arg1_00) + -1) >> 0x3f & (arg1_00 + 1) * 0x10) !=\n                                    (-(ppiVar4[2] - arg1_00) >> 0x3f & arg1_00 * 0x10) + *ppiVar4) {\n                                    *(*0x20 + -0x68) = 0x42909e;\n                                    fcn.00459880(iVar3 << 4);\n                                    ppiVar4 = *(*0x20 + 8);\n                                    iVar7 = *(*0x20 + -0x20);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                arg2 = ppiVar4[2];\n                                ppiVar2 = ppiVar4[1] + -1;\n                                if (arg2 < ppiVar2) goto code_r0x0042937a;\n                                ppiVar4[1] = ppiVar2;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\ncode_r0x00429311:\n                                if (bVar9 || bVar10) {\n                                    iVar8 = 0;\n                                }\n                                else {\n                                    iVar8 = iVar8 - iVar7;\n                                }\n                                ppiVar4[3] = ppiVar4[3] + iVar8;\n                                return;\n                            }\n                        }\n                        else {\n                            if (!bVar9) goto code_r0x00429114;\n                            if (arg1_00 - 1U < ppiVar2) {\n                                piVar1[(arg1_00 - 1U) * 2 + 1] = iVar8;\n                                bVar9 = *(*0x20 + -0x30) < *(*0x20 + -0x28);\n                                bVar10 = *(*0x20 + -0x30) == *(*0x20 + -0x28);\n                                goto code_r0x00429311;\n                            }\ncode_r0x00429375:\n                            *(*0x20 + -0x68) = 0x42937a;\n                            fcn.00458f20(ppiVar2);\ncode_r0x0042937a:\n                            *(*0x20 + -0x68) = 0x42937f;\n                            fcn.00458fa0(ppiVar2, arg2);\ncode_r0x0042937f:\n                            *(*0x20 + -0x68) = 0x42938a;\n                            ppiVar2 = unaff_R13;\n                            fcn.00458fe0(unaff_R13);\ncode_r0x0042938a:\n                            *(*0x20 + -0x68) = 0x429392;\n                            fcn.00458fe0(ppiVar2);\ncode_r0x00429392:\n                            *(*0x20 + -0x68) = 0x429397;\n                            fcn.00458f20(ppiVar2);\n                        }\n                        *(*0x20 + -0x68) = 0x42939f;\n                        fcn.00458f20(ppiVar2);\n                    }\n                    *(*0x20 + -0x68) = 0x4293a5;\n                    fcn.00458f20(ppiVar2);\n                }\n                else {\n                    ppiVar4 = *(*0x20 + 8);\n                    ppiVar2 = ppiVar4[1];\n                    if (arg1_00 - 1U < ppiVar2) {\n                        iVar7 = *(*0x20 + -0x20);\n                        bVar9 = *(*ppiVar4 + 8 + (arg1_00 - 1U) * 0x10) == iVar7;\n                        goto code_r0x00428fae;\n                    }\n                }\n                *(*0x20 + -0x68) = 0x4293ad;\n                fcn.00458f20(ppiVar2);\n            }\n            *(*0x20 + -0x68) = 0x4293b2;\n            fcn.00431980();\n            *(*0x20 + -0x68) = 0x4293c5;\n            fcn.00432280();\n            *(*0x20 + -0x68) = 0x4293cf;\n            fcn.004320e0();\n            *(*0x20 + -0x68) = 0x4293e5;\n            fcn.00432280();\n            *(*0x20 + -0x68) = 0x4293ef;\n            fcn.004320e0();\n            *(*0x20 + -0x68) = 0x429405;\n            fcn.00432280();\n            *(*0x20 + -0x68) = 0x42940a;\n            fcn.00431a00();\n            unaff_RBX = 0x29;\n            *(*0x20 + -0x68) = 0x42941b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = ppiVar2;\n        *(puVar6 + -8) = 0x429430;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 3702
    },
    "00403ce0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00403ce0(uint64_t arg1)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_RBX;\n    uint8_t *puVar6;\n    uint32_t uVar7;\n    int64_t unaff_RDI;\n    uint64_t uVar8;\n    \n    iVar5 = arg1 - (arg1 & 0xffffffffffffffc0);\n    uVar8 = unaff_RDI + iVar5;\n    puVar6 = unaff_RBX + (arg1 >> 6);\n    iVar4 = (arg1 & 0xffffffffffffffc0) + in_RAX;\n    uVar3 = 0;\n    uVar7 = 0;\n    do {\n        if (uVar8 <= uVar3) {\n            return;\n        }\n        if ((uVar3 & 0x3f) == 0) {\n            uVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        else {\n            uVar7 = uVar7 >> 1;\n        }\n        if (iVar5 == 0) {\n            if (((uVar7 & 1) != 0) && (cVar2 = fcn.00403660(iVar4, *(iVar4 + uVar3)),  cVar2 != '\\0')) {\n                fcn.00430040();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        else {\n            iVar5 = iVar5 + -8;\n        }\n        uVar3 = uVar3 + 8;\n    } while( true );\n}\n",
        "token_count": 388
    },
    "00407f20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00407f20(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uchar uVar6;\n    uchar uVar7;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0xa8 && *0x20 + -0xa8 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x128;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x130) = 0x407f56;\n            fcn.00447600();\n            *(*0x20 + -0x130) = 0x407f5b;\n            uVar1 = fcn.00447da0();\n            *(*0x20 + -0xa8) = uVar1;\n            *(*0x20 + -0xf8) = unaff_RBX;\n            *(*0x20 + -0x128) = uVar1;\n            *(*0x20 + -0x120) = unaff_RBX;\n            *(*0x20 + -0x118) = 0x28;\n            *(*0x20 + -0x130) = 0x407f7b;\n            fcn.00402500(param_1, param_2);\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            iVar4 = *(*0x20 + -0x110);\n            if (-1 < iVar4) {\n                uVar2 = iVar4 - 1;\n                param_2 = *(*0x20 + -0xf8);\n                if (uVar2 <= param_2) {\n                    arg1 = iVar4 + 2;\n                    uVar6 = param_2 < arg1;\n                    if (arg1 < param_2) goto code_r0x00407fd9;\n                    do {\n                        uVar6 = 0;\n                        iVar4 = 0x31;\n                        *(*0x20 + -0x130) = 0x407fd4;\n                        fcn.00445d60(0x31);\n                        *(*0x20 + -0x130) = 0x407fd9;\n                        uVar2 = fcn.00430040();\ncode_r0x00407fd9:\n                        if (uVar6) goto code_r0x0040824d;\n                        if (arg1 < uVar2) goto code_r0x00408245;\n                        iVar3 = *(*0x20 + -0xa8);\n                    } while ((CONCAT11(*(iVar4 + iVar3), *(iVar4 + -1 + iVar3)) != 0x282e) ||\n                            (*(iVar4 + 1 + iVar3) != '*'));\n                    *(*0x20 + -0x100) = uVar2;\n                    param_2 = param_2 - iVar4;\n                    *(*0x20 + -0xf0) = param_2;\n                    iVar4 = param_2 - 2;\n                    *(*0x20 + -0xf8) = iVar4;\n                    iVar3 = (-iVar4 >> 0x3f & arg1) + iVar3;\n                    *(*0x20 + -0xa0) = iVar3;\n                    *(*0x20 + -0x128) = iVar3;\n                    *(*0x20 + -0x120) = iVar4;\n                    *(*0x20 + -0x118) = 0x29;\n                    *(*0x20 + -0x130) = 0x408058;\n                    fcn.00402500(iVar4, param_2);\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    uVar2 = *(*0x20 + -0x110);\n                    if (-1 < uVar2) {\n                        arg1 = uVar2 + 2;\n                        param_2 = *(*0x20 + -0xf8);\n                        uVar6 = arg1 < param_2;\n                        uVar7 = arg1 == param_2;\n                        if (arg1 < param_2) goto code_r0x004080aa;\n                        do {\n                            uVar6 = 0;\n                            uVar7 = 1;\n                            uVar2 = 0x2e;\n                            *(*0x20 + -0x130) = 0x4080a5;\n                            fcn.00445d60(0x2e);\n                            *(*0x20 + -0x130) = 0x4080aa;\n                            fcn.00430040();\ncode_r0x004080aa:\n                            if (!uVar6 && !uVar7) goto code_r0x00408212;\n                            if (arg1 < uVar2) goto code_r0x00408207;\n                        } while (*(*(*0x20 + -0xa0) + uVar2) != 0x2e29);\n                        *(*0x20 + -0x138) = unaff_RBP;\n                        *(*0x20 + -0x130) = 0x4080ef;\n                        iVar4 = fcn.00459199();\n                        unaff_RBP = *(*0x20 + -0x138);\n                        *(*0x20 + -0x98) = 0x476af5;\n                        *(*0x20 + -0x90) = 0xd;\n                        *(*0x20 + -0x88) = *(*0x20 + -0xa8);\n                        *(*0x20 + -0x80) = *(*0x20 + -0x100);\n                        *(*0x20 + -0x78) = 0x4758e3;\n                        *(*0x20 + -0x70) = 1;\n                        *(*0x20 + -0x68) = iVar4;\n                        *(*0x20 + -0x60) = uVar2;\n                        *(*0x20 + -0x58) = 0x4758e3;\n                        *(*0x20 + -0x50) = 1;\n                        *(*0x20 + -0x48) = (-((*(*0x20 + -0xf0) - uVar2) + -4) >> 0x3f & arg1) + iVar4;\n                        *(*0x20 + -0x40) = (*(*0x20 + -0xf0) - uVar2) + -4;\n                        *(*0x20 + -0x38) = 0x47786d;\n                        *(*0x20 + -0x30) = 0x13;\n                        *(*0x20 + -0x28) = iVar4;\n                        *(*0x20 + -0x20) = uVar2;\n                        param_2 = 0x475d47;\n                        *(*0x20 + -0x18) = 0x475d47;\n                        *(*0x20 + -0x10) = 8;\n                        *(*0x20 + -0x130) = 0x4081f3;\n                        fcn.00445b20(9);\n                        *(*0x20 + -0x130) = 0x4081f8;\n                        fcn.004093e0();\n                        *(*0x20 + -0x130) = 0x408207;\n                        fcn.0042f8a0();\ncode_r0x00408207:\n                        *(*0x20 + -0x130) = 0x408212;\n                        fcn.00458fe0(arg1);\ncode_r0x00408212:\n                        *(*0x20 + -0x130) = 0x40821a;\n                        fcn.00458f60(arg1, param_2);\n                    }\n                    *(*0x20 + -0x130) = 0x40823d;\n                    fcn.00445d60(0x13);\n                    *(*0x20 + -0x130) = 0x408245;\n                    fcn.00430040();\ncode_r0x00408245:\n                    *(*0x20 + -0x130) = 0x40824d;\n                    fcn.00458fe0(arg1);\ncode_r0x0040824d:\n                    *(*0x20 + -0x130) = 0x408255;\n                    uVar2 = fcn.00458f60(arg1, param_2);\n                }\n                *(*0x20 + -0x130) = 0x40825d;\n                fcn.00458f60(uVar2, param_2);\n            }\n            unaff_RBX = 0x477b06;\n            param_1 = 0x13;\n            *(*0x20 + -0x130) = 0x408285;\n            fcn.00445d60(0x13);\n            *(*0x20 + -0x130) = 0x40828a;\n            fcn.00430040();\n        }\n        *(puVar5 + -8) = 0x408290;\n        fcn.004568e0();\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 2081
    },
    "0040f620": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0040f620(ulong noname_0, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(in_RAX + 0x30);\n            uVar3 = *(in_RAX + 0x38);\n            if (uVar3 == uVar1) {\n                return uVar1;\n            }\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + 8) = in_RAX;\n                uVar5 = *(in_RAX + 0x40);\n                iVar4 = 0;\n                if (uVar5 != 0) {\n                    for (; (uVar5 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar5 == 0) {\n                    iVar4 = 0x40;\n                }\n                while( true ) {\n                    if (iVar4 != 0x40) {\n                        uVar5 = uVar1 + iVar4;\n                        if (uVar3 <= uVar5) {\n                            *(in_RAX + 0x30) = uVar3;\n                            return uVar3;\n                        }\n                        *(in_RAX + 0x40) = *(in_RAX + 0x40) >> (iVar4 + 1U & 0x3f) & -(iVar4 + 1U < 0x40);\n                        uVar1 = uVar1 + 1 + iVar4;\n                        if (((uVar1 & 0x3f) == 0) && (uVar3 != uVar1)) {\n                            *(*0x20 + -0x10) = uVar5;\n                            *(*0x20 + -0x18) = uVar1;\n                            *(*0x20 + -0x38) = 0x40f725;\n                            fcn.0040f600();\n                            in_RAX = *(*0x20 + 8);\n                            uVar1 = *(*0x20 + -0x18);\n                            uVar5 = *(*0x20 + -0x10);\n                        }\n                        *(in_RAX + 0x30) = uVar1;\n                        return uVar5;\n                    }\n                    uVar1 = uVar1 + 0x40 & 0xffffffffffffffc0;\n                    if (uVar3 <= uVar1) break;\n                    *(*0x20 + -0x18) = uVar1;\n                    *(*0x20 + -0x38) = 0x40f685;\n                    fcn.0040f600();\n                    in_RAX = *(*0x20 + 8);\n                    uVar3 = *(in_RAX + 0x40);\n                    iVar4 = 0;\n                    if (uVar3 != 0) {\n                        for (; (uVar3 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                        }\n                    }\n                    if (uVar3 == 0) {\n                        iVar4 = 0x40;\n                    }\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar1 = *(*0x20 + -0x18);\n                }\n                *(in_RAX + 0x30) = uVar3;\n                return uVar3;\n            }\n            *(*0x20 + -0x38) = 0x40f767;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x40f772;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 997
    },
    "00419540": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00419540(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t arg3;\n    uint64_t uVar4;\n    uint64_t noname_1;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t arg1_00;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    int64_t iStack0000000000000028;\n    \n    iStack0000000000000028 = unaff_RSI;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    arg1_00 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar1 = *(arg1 + (arg1_00 >> 6));\n        uVar4 = uVar1;\n        if (uVar1 == 0) {\n            arg1_00 = arg1_00 + 0x40;\n        }\n        else {\n            iVar5 = 0;\n            for (; (iVar5 < 8 && (arg1_00 < unaff_RBX)); arg1_00 = arg1_00 + 8) {\n                if (((uVar4 & 1) != 0) && (uVar2 = *(arg1_00 + in_RAX),  uVar2 != 0)) {\n                    arg3 = arg1_00;\n                    noname_1 = uVar4;\n                    iVar3 = fcn.0040f9c0(arg1_00);\n                    if (iVar3 == 0) {\n                        if (((iStack0000000000000028 != 0) &&\n                            (*(iStack0000000000000028 + 0x100) < uVar2 || *(iStack0000000000000028 + 0x100) == uVar2))\n                           && (uVar2 <= *(iStack0000000000000028 + 0x108) && *(iStack0000000000000028 + 0x108) != uVar2)\n                           ) {\n                            fcn.0041d900(0);\n                        }\n                    }\n                    else {\n                        fcn.00419ca0(arg1_00, noname_1, arg3);\n                    }\n                }\n                iVar5 = iVar5 + 1;\n                uVar4 = uVar4 >> 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "0041c8e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041c8e0(code **arg1)\n\n{\n    char cVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    uint64_t uStack64;\n    uchar auStack56 [16];\n    uchar auStack40 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uStack64 = 0;\n    while( true ) {\n        if (unaff_RBX <= uStack64) {\n            return uStack64;\n        }\n        iVar2 = fcn.0041d480(in_RAX + 0x100b8);\n        if (iVar2 == 0) break;\n        auStack56 = CONCAT88(&uStack64, 0x41ca20);\n        auStack40 = CONCAT88(iVar2, in_RAX);\n        fcn.004567a0();\n        if (arg1 == NULL) {\n            cVar1 = '\\0';\n        }\n        else {\n            cVar1 = (**arg1)();\n        }\n        if (cVar1 != '\\0') {\n            return uStack64;\n        }\n    }\n    return uStack64;\n}\n",
        "token_count": 302
    },
    "0041d140": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d140(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t unaff_R14;\n    bool bVar10;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (((arg1 - 1 & arg1) == 0) && (arg1 != 0)) {\n                if (arg1 < 0x41) {\n                    uVar5 = arg1;\n                    if (unaff_RDI != 0) {\n                        uVar5 = -arg1 & unaff_RDI + -1 + arg1;\n                    }\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar5;\n                    uVar5 = unaff_RBX >> 6;\n                    while( true ) {\n                        *(*0x20 + -0x28) = uVar5;\n                        bVar10 = uVar5 < 0;\n                        if (bVar10) break;\n                        if (7 < uVar5) goto code_r0x0041d3c8;\n                        uVar4 = *(in_RAX + uVar5 * 8);\n                        uVar5 = *(in_RAX + 0x40 + uVar5 * 8);\n                        *(*0x20 + -0x50) = 0x41d1ef;\n                        iVar3 = fcn.0041cf80(uVar4 | uVar5, arg1);\n                        if (iVar3 != -1) {\n                            bVar10 = *(*0x20 + -0x28) < 0;\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            uVar5 = *(*0x20 + -0x28);\n                            break;\n                        }\n                        uVar5 = *(*0x20 + -0x28) - 1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                    }\n                    if (bVar10) {\n                        return 0;\n                    }\n                    if (uVar5 < 8) break;\n                    *(*0x20 + -0x50) = 0x41d3c8;\n                    fcn.00458f20(8);\ncode_r0x0041d3c8:\n                    arg1 = 8;\n                    *(*0x20 + -0x50) = 0x41d3d5;\n                    fcn.00458f20(8);\n                }\n                *(*0x20 + -0x50) = 0x41d3da;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x41d3eb;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x41d3f5;\n                fcn.00431f80();\n                *(*0x20 + -0x50) = 0x41d3fa;\n                fcn.00431be0();\n                *(*0x20 + -0x50) = 0x41d3ff;\n                fcn.00431a00();\n                *(*0x20 + -0x50) = 0x41d410;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x50) = 0x41d415;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x41d426;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x41d430;\n            fcn.00431f80();\n            *(*0x20 + -0x50) = 0x41d435;\n            fcn.00431be0();\n            *(*0x20 + -0x50) = 0x41d43a;\n            fcn.00431a00();\n            unaff_RBX = 0x21;\n            *(*0x20 + -0x50) = 0x41d44b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + 0x20) = unaff_RDI;\n        *(puVar6 + -8) = 0x41d465;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        unaff_RDI = *(puVar6 + 0x20);\n        *0x20 = puVar6;\n    } while( true );\n    uVar4 = *(in_RAX + uVar5 * 8);\n    uVar5 = *(in_RAX + 0x40 + uVar5 * 8);\n    *(*0x20 + -0x50) = 0x41d23e;\n    uVar5 = fcn.0041cf80(uVar4 | uVar5, arg1);\n    uVar4 = ~uVar5;\n    iVar3 = 0x3f;\n    if (uVar4 != 0) {\n        for (; uVar4 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n        }\n    }\n    if (uVar4 == 0) {\n        iVar3 = -1;\n    }\n    iVar2 = *(*0x20 + -0x28);\n    iVar1 = iVar3 + 1;\n    uVar4 = iVar2 * 0x40 + iVar1;\n    iVar8 = iVar2 * 0x40 + iVar1;\n    uVar5 = uVar5 << (-iVar1 & 0x3fU) & -(-(iVar3 + -0x3f) < 0x40);\n    if (uVar5 == 0) {\n        *(*0x20 + -0x20) = uVar4;\n        *(*0x20 + -0x18) = iVar8;\n        uVar5 = iVar3 + 1;\n        while (-1 < iVar2 + -1) {\n            *(*0x20 + -0x30) = iVar2 + -1;\n            *(*0x20 + -0x38) = uVar5;\n            *(*0x20 + -0x50) = 0x41d30b;\n            uVar4 = fcn.0041cf80();\n            iVar3 = 0x3f;\n            if (uVar4 != 0) {\n                for (; uVar4 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                }\n            }\n            if (uVar4 == 0) {\n                iVar3 = -1;\n            }\n            uVar5 = (*(*0x20 + -0x38) - (iVar3 + 1)) + 0x40;\n            if (uVar4 != 0) {\n                iVar8 = *(*0x20 + -0x18);\n                uVar4 = *(*0x20 + -0x20);\n                break;\n            }\n            iVar8 = *(*0x20 + -0x18);\n            uVar4 = *(*0x20 + -0x20);\n            iVar2 = *(*0x20 + -0x30);\n        }\n    }\n    else {\n        iVar3 = 0x3f;\n        if (uVar5 != 0) {\n            for (; uVar5 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        if (uVar5 == 0) {\n            iVar3 = -1;\n        }\n        uVar5 = -(iVar3 + -0x3f);\n    }\n    uVar9 = uVar5;\n    if (*(*0x20 + -0x10) < uVar5) {\n        uVar9 = *(*0x20 + -0x10);\n    }\n    uVar9 = iVar8 - uVar9;\n    if ((((0x2000 < *0x544b40) && (*0x544b48 < *0x544b40)) &&\n        (uVar7 = -(*0x544b40 >> 0xd),  (((*0x544b40 >> 0xd) - 1) + uVar9 & uVar7) <= uVar4)) &&\n       (uVar7 = uVar7 & uVar9,  iVar8 - uVar5 <= uVar7)) {\n        uVar9 = uVar7;\n    }\n    return uVar9;\n}\n",
        "token_count": 2112
    },
    "00424000": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00424000(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t in_RDX;\n    int64_t iVar5;\n    uint64_t unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            uVar1 = unaff_RBX;\n            uVar9 = unaff_RBX + 0x800000000000;\n            uVar10 = uVar9 >> 0x16;\n            uVar7 = unaff_RBX + arg1 * 0x2000 + 0x7fffffffffff;\n            uVar8 = uVar7 >> 0x16;\n            unaff_RBX = (uVar1 & 0x3fffff) >> 0xd;\n            *(*0x20 + -0x18) = unaff_RBX;\n            uVar4 = (arg1 * 0x2000 + (uVar1 - 1) & 0x3fffff) >> 0xd;\n            if (uVar8 == uVar10) {\n                if (0x1fff < uVar9 >> 0x23) {\n                    *(*0x20 + -0x90) = 0x424205;\n                    fcn.00458f40(0x2000);\n                    goto code_r0x00424205;\n                }\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar10 & 0x1fff) << 7;\n                iVar5 = (uVar4 - unaff_RBX) + 1;\n                *(*0x20 + -0x48) = iVar5;\n                *(*0x20 + -0x90) = 0x42418c;\n                uVar2 = fcn.00426ce0(iVar5);\n                *(*0x20 + -0x50) = uVar2;\n                *(*0x20 + -0x90) = 0x4241b0;\n                fcn.004273e0(*(*0x20 + -0x48));\n                iVar5 = *(*0x20 + -0x50);\ncode_r0x004241b5:\n                *(*0x20 + -0x68) = iVar5;\n                *(*0x20 + -0x90) = 0x4241de;\n                fcn.00423a20(*(*0x20 + 0x18));\n                return *(*0x20 + -0x68) << 0xd;\n            }\n            if (uVar9 >> 0x23 < 0x2000) {\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0x30) = uVar10;\n                *(*0x20 + -0x38) = uVar4;\n                *(*0x20 + -0x10) = *(in_RAX + 0x78 + (uVar9 >> 0x23) * 8);\n                *(*0x20 + -0x40) = (uVar10 & 0x1fff) << 7;\n                *(*0x20 + -0x48) = -(unaff_RBX - 0x200);\n                *(*0x20 + -0x90) = 0x4240fc;\n                uVar2 = fcn.00426ce0(-(unaff_RBX - 0x200));\n                *(*0x20 + -0x50) = uVar2;\n                unaff_RBX = *(*0x20 + -0x18);\n                *(*0x20 + -0x90) = 0x424125;\n                fcn.004273e0(*(*0x20 + -0x48));\n                iVar3 = *(*0x20 + -0x30);\n                iVar5 = *(*0x20 + 8);\n                uVar4 = *(*0x20 + -0x20);\n                uVar2 = *(*0x20 + -0x50);\n                while( true ) {\n                    in_RDX = iVar3 + 1;\n                    *(*0x20 + -0x68) = uVar2;\n                    if (uVar4 <= in_RDX) {\n                        if (0x1fff < *(*0x20 + -0x28) >> 0x23) {\n                            *(*0x20 + -0x90) = 0x42434f;\n                            iVar3 = fcn.00458f40(0x2000);\n                            goto code_r0x0042434f;\n                        }\n                        *(*0x20 + -0x10) = *(iVar5 + 0x78 + (*(*0x20 + -0x28) >> 0x23) * 8);\n                        *(*0x20 + -0x40) = (uVar4 & 0x1fff) << 7;\n                        *(*0x20 + -0x48) = *(*0x20 + -0x38) + 1;\n                        *(*0x20 + -0x90) = 0x42430e;\n                        uVar2 = fcn.00426ce0(*(*0x20 + -0x38) + 1);\n                        *(*0x20 + -0x50) = uVar2;\n                        *(*0x20 + -0x90) = 0x42432f;\n                        fcn.004273e0(*(*0x20 + -0x48));\n                        iVar5 = *(*0x20 + -0x68) + *(*0x20 + -0x50);\n                        goto code_r0x004241b5;\n                    }\n                    if (0x1fff < in_RDX >> 0xd) break;\n                    *(*0x20 + -0x60) = in_RDX;\n                    *(*0x20 + -0x10) = *(iVar5 + 0x78 + (in_RDX >> 0xd) * 8);\n                    iVar5 = (in_RDX & 0x1fff) * 0x80;\n                    *(*0x20 + -0x40) = iVar5;\n                    *(*0x20 + -0x58) = iVar5 + 0x40;\n                    *(*0x20 + -0x90) = 0x4242a5;\n                    iVar5 = fcn.00426ce0(0x200);\n                    in_RDX = *(*0x20 + -0x68) + iVar5;\n                    iVar5 = *(*0x20 + -0x40) + *(*0x20 + -0x10);\n                    for (iVar3 = 0; iVar3 < 8; iVar3 = iVar3 + 1) {\ncode_r0x0042434f:\n                        *(iVar5 + iVar3 * 8) = 0xffffffffffffffff;\n                    }\ncode_r0x00424205:\n                    *(*0x20 + -0x68) = in_RDX;\n                    unaff_RBX = 0x40;\n                    *(*0x20 + -0x90) = 0x42421e;\n                    fcn.00459580(*(*0x20 + -0x58));\n                    iVar3 = *(*0x20 + -0x60);\n                    iVar5 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x20);\n                    uVar2 = *(*0x20 + -0x68);\n                }\n                *(*0x20 + -0x90) = 0x424375;\n                fcn.00458f40(0x2000);\n            }\n            arg1 = 0x2000;\n            *(*0x20 + -0x90) = 0x424385;\n            in_RAX = fcn.00458f40(0x2000);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + 0x18) = arg1;\n        *(puVar6 + -8) = 0x42439a;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        arg1 = *(puVar6 + 0x18);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 2082
    },
    "004267e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004267e0(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar5 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar10 = *(in_RAX + 0x10078);\n            uVar8 = iVar10 + 0x800000000000;\n            uVar6 = uVar8 >> 0x16;\n            if (*(in_RAX + 0x10088) < uVar6 || *(in_RAX + 0x10088) == uVar6) {\n                return 0;\n            }\n            uVar4 = *(in_RAX + 0x68);\n            iVar2 = *(in_RAX + 0x60);\n            if (uVar6 < uVar4) {\n                *(*0x20 + 8) = in_RAX;\n                uVar4 = *(iVar2 + uVar6 * 8);\n                if (uVar4 == 0) {\n                    *(*0x20 + -0x68) = 0x42685a;\n                    uVar3 = fcn.004244a0();\n                    if (uVar3 == 0) {\n                        *(*(*0x20 + 8) + 0x10078) = *0x4d92b8;\n                        return 0;\n                    }\n                    uVar4 = uVar3 + 0x800000000000;\n                    if (uVar4 >> 0x23 < 0x2000) {\n                        iVar2 = *(*(*0x20 + 8) + 0x78 + (uVar4 >> 0x23) * 8);\n                        uVar4 = (uVar4 >> 0x16 & 0x1fff) * 0x80;\n                        iVar10 = iVar2 + uVar4;\n                        uVar6 = (uVar3 & 0x3fffff) >> 0x13;\n                        if (uVar6 < 8) {\n                            uVar9 = *(iVar2 + uVar4 + uVar6 * 8);\n                            uVar8 = uVar4 + 0x40;\n                            uVar3 = uVar3 & 0xfffffffffff80000;\n                            uVar6 = *(iVar2 + uVar8 + uVar6 * 8);\ncode_r0x004269cb:\n                            uVar9 = ~uVar9;\n                            uVar4 = (uVar3 & 0x3fffff) >> 0x13;\n                            if (uVar4 < 8) {\n                                *(*0x20 + -0x40) = uVar6;\n                                *(*0x20 + -0x38) = uVar9;\n                                *(*0x20 + -0x30) = uVar3;\n                                puVar1 = iVar10 + uVar4 * 8;\n                                *puVar1 = *puVar1 | uVar9;\n                                puVar1 = iVar10 + 0x40 + uVar4 * 8;\n                                *puVar1 = *puVar1 & ~(uVar9 & uVar6);\n                                *(*0x20 + -0x68) = 0x426a13;\n                                fcn.00423a20(0x40);\n                                iVar10 = *(*0x20 + -0x30);\n                                *(*(*0x20 + 8) + 0x10078) = iVar10 + 0x7e000;\n                                return iVar10;\n                            }\n                            *(*0x20 + -0x68) = 0x426a5a;\n                            fcn.00458f40(8);\ncode_r0x00426a5a:\n                            *(*0x20 + -0x68) = 0x426a65;\n                            fcn.00458f40(8);\n                            uVar4 = uVar8;\n                            goto code_r0x00426a65;\n                        }\n                        goto code_r0x00426a85;\n                    }\n                }\n                else {\n                    uVar8 = uVar8 >> 0x23;\n                    if (uVar8 < 0x2000) {\n                        *(*0x20 + -0x28) = uVar6;\n                        iVar2 = *(in_RAX + 0x78 + uVar8 * 8);\n                        *(*0x20 + -0x10) = iVar2;\n                        iVar7 = (uVar6 & 0x1fff) * 0x80;\n                        *(*0x20 + -0x20) = iVar7;\n                        uVar4 = iVar2 + iVar7;\n                        *(*0x20 + -0x18) = uVar4;\n                        *(*0x20 + -0x68) = 0x42695e;\n                        uVar8 = fcn.004270e0((iVar10 & 0x3fffff) >> 0xd);\n                        iVar10 = *(*0x20 + -0x10) + *(*0x20 + -0x20);\n                        if (uVar8 != 0xffffffffffffffff) {\n                            uVar6 = uVar8 >> 6;\n                            if (uVar6 < 8) {\n                                uVar3 = ((uVar8 & 0xffffffffffffffc0) * 0x2000 + *(*0x20 + -0x28) * 0x400000) -\n                                        0x800000000000;\n                                uVar9 = *(*(*0x20 + -0x18) + uVar6 * 8);\n                                uVar8 = *(*0x20 + -0x20) + 0x40 + *(*0x20 + -0x10);\n                                uVar6 = *(uVar8 + uVar6 * 8);\n                                goto code_r0x004269cb;\n                            }\n                            goto code_r0x00426a5a;\n                        }\ncode_r0x00426a65:\n                        *(*0x20 + -0x68) = 0x426a76;\n                        fcn.00430040();\n                    }\n                    *(*0x20 + -0x68) = 0x426a85;\n                    fcn.00458f40(0x2000);\ncode_r0x00426a85:\n                    *(*0x20 + -0x68) = 0x426a8f;\n                    fcn.00458f40(8);\n                }\n                *(*0x20 + -0x68) = 0x426a9c;\n                fcn.00458f40(0x2000);\n            }\n            *(*0x20 + -0x68) = 0x426aa7;\n            in_RAX = fcn.00458f40(uVar4);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x426ab2;\n        fcn.0045b2e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1687
    },
    "004272a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.004272a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    \n    arg1 = arg1 >> 6;\n    uVar3 = 0;\n    iVar4 = -1;\n    iVar5 = -1;\n    do {\n        if (7 < arg1) {\n            if (unaff_RBX <= uVar3) {\n                return iVar5;\n            }\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        if (uVar1 == 0xffffffffffffffff) {\n            uVar3 = 0;\n        }\n        else {\n            if (iVar4 == -1) {\n                uVar6 = ~uVar1;\n                iVar4 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar4 & 1) == 0; iVar4 = iVar4 + 1) {\n                    }\n                }\n                if (uVar6 == 0) {\n                    iVar4 = 0x40;\n                }\n                iVar4 = arg1 * 0x40 + iVar4;\n            }\n            if (uVar3 == 0) {\n                iVar2 = 0x3f;\n                if (uVar1 != 0) {\n                    for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    iVar2 = -1;\n                }\n                iVar5 = iVar2 + 1 + arg1 * 0x40;\n                uVar3 = -(iVar2 + -0x3f);\n            }\n            else {\n                uVar6 = 0;\n                if (uVar1 != 0) {\n                    for (; (uVar1 >> uVar6 & 1) == 0; uVar6 = uVar6 + 1) {\n                    }\n                }\n                if (uVar1 == 0) {\n                    uVar6 = 0x40;\n                }\n                if (unaff_RBX <= uVar6 + uVar3) {\n                    return iVar5;\n                }\n                if (uVar6 < 0x40) {\n                    iVar2 = 0x3f;\n                    if (uVar1 != 0) {\n                        for (; uVar1 >> iVar2 == 0; iVar2 = iVar2 + -1) {\n                        }\n                    }\n                    if (uVar1 == 0) {\n                        iVar2 = -1;\n                    }\n                    iVar5 = iVar2 + 1 + arg1 * 0x40;\n                    uVar3 = -(iVar2 + -0x3f);\n                }\n                else {\n                    uVar3 = uVar3 + 0x40;\n                }\n            }\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0042b240": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042b240(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    ulong uStack24;\n    ulong uStack16;\n    \n    while (&uStack24 < *(unaff_R14 + 0x10) || &uStack24 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = fcn.0042a920(0xd);\n    if (iVar1 != 0) {\n        iVar1 = fcn.0042a860(0x27);\n        if (iVar1 != 0) {\n            uStack24 = 0x46cb20;\n            uStack16 = 0x47cbb8;\n            fcn.00454d60(1);\n            fcn.0042d580();\n            return;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 198
    },
    "0042c680": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042c680(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 == 0) {\n                return;\n            }\n            *(*0x20 + -0xc) = 0;\n            if (arg1 != 0) {\n                *(*0x20 + -0x48) = _sym.imp.kernel32.dll_WriteConsoleW;\n                *(*0x20 + -0x40) = in_RAX;\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x30) = arg1 & 0xffffffff;\n                *(*0x20 + -0x28) = *0x20 + -0xc;\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x50) = 0x42c6e5;\n                fcn.0042d680();\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x50) = 0x42c715;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + -8) = 0x42c72f;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 564
    },
    "0042d9c0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0042d9c0(void)\n\n{\n    uint in_EAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d700();\n    *(*(**(in_GS_OFFSET + *0x544bc0) + 0x30) + 0xe0) = in_EAX;\n    return;\n}\n",
        "token_count": 132
    },
    "004304a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004304a0(void)\n\n{\n    fcn.004567a0();\n    fcn.004567a0();\n    _pe_dos_header = 0;\n    return;\n}\n",
        "token_count": 44
    },
    "00432280": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00432280(void)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431a60(unaff_RBX);\n    return;\n}\n",
        "token_count": 92
    },
    "00445d60": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00445d60(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00445b20(2);\n    return;\n}\n",
        "token_count": 87
    },
    "004477a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00447a6c)\n// WARNING: Removing unreachable block (ram,0x00447a7a)\n// WARNING: Removing unreachable block (ram,0x00447bf0)\n// WARNING: Removing unreachable block (ram,0x00447a8a)\n// WARNING: Removing unreachable block (ram,0x00447b8f)\n// WARNING: Removing unreachable block (ram,0x00447c81)\n// WARNING: Removing unreachable block (ram,0x00447cdb)\n// WARNING: Removing unreachable block (ram,0x00447c07)\n// WARNING: Removing unreachable block (ram,0x00447cec)\n\nuint fcn.004477a0(uint64_t arg1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uchar auVar3 [16];\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t in_R8;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    int32_t iStackX24;\n    uint64_t uStackX32;\n    int64_t in_stack_00000028;\n    uint uStack140;\n    uint64_t uStack128;\n    uint64_t uStack64;\n    int64_t iStack56;\n    int64_t iStack32;\n    uint64_t uStack24;\n    int64_t iStack16;\n    \n    while (iVar5 = arg1,  &uStack64 < *(unaff_R14 + 0x10) || &uStack64 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        arg1 = arg1 & 0xffffffff;\n        in_R8 = in_R8 & 0xff;\n        iStackX24 = iVar5;\n        uStackX32 = unaff_RDI;\n        in_stack_00000028 = unaff_RSI;\n    }\n    if (iVar5 == 0) {\n        return 0xffffffff;\n    }\n    if (unaff_RSI == 0) goto code_r0x00447809;\n    uVar6 = unaff_RDI >> 3 & 1;\n    uVar8 = 0;\n    do {\n        if (uVar8 < 8) {\n            iVar7 = uVar6 * 0x80 + unaff_RSI;\n            iVar9 = uVar8 * 0x10;\n            if ((*(iVar7 + 8 + iVar9) == arg1) && (*(iVar7 + iVar9) == unaff_RDI)) {\n                return *(iVar7 + 0xc + iVar9);\n            }\n        }\n        else {\ncode_r0x00447809:\n            if (in_RAX == 0) {\n                if ((in_R8 == '\\0') || (uVar6 = *0x544a44,  *0x544a44 != 0)) {\n                    return 0xffffffff;\n                }\n                fcn.004475a0();\n                fcn.00431980();\n                fcn.00432280();\n                fcn.004320e0();\n                fcn.00431be0();\n                fcn.00431a00();\n                iVar7 = fcn.00430040();\ncode_r0x00447936:\n                do {\n                    iStack56 = iVar7;\n                    fcn.004475a0();\n                    iVar7 = fcn.00448520(uVar6);\n                } while (uStack128 <= uStackX32);\n                if (in_stack_00000028 == 0) {\n                    return uStack140;\n                }\n                unaff_RBX = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n                auVar3 = ZEXT816(unaff_RBX) * ZEXT816(unaff_RBX ^ 0xe7037ed1a0b428db);\n                arg1 = SUB168(auVar3 >> 0x40, 0);\n                *(*(unaff_R14 + 0x30) + 0xf0) = unaff_RBX;\n                unaff_RSI = (uStackX32 >> 3 & 1) * 0x80;\n                in_R8 = in_stack_00000028 + unaff_RSI;\n                uVar1 = *(in_stack_00000028 + 8 + unaff_RSI);\n                uVar2 = *(in_stack_00000028 + 0xc + unaff_RSI);\n                uVar6 = uVar2;\n                uVar8 = *(in_stack_00000028 + unaff_RSI);\n                uVar4 = ((SUB164(auVar3, 0) ^ SUB164(auVar3 >> 0x40, 0)) << 3) >> 0x20;\n                if (uVar4 < 8) {\n                    iVar7 = uVar4 * 0x10;\n                    *(in_R8 + iVar7) = uVar8;\n                    *(in_R8 + 8 + iVar7) = uVar1;\n                    *(in_R8 + 0xc + iVar7) = uVar2;\n                    *(in_stack_00000028 + unaff_RSI) = uStackX32;\n                    *(in_stack_00000028 + 8 + unaff_RSI) = iStackX24;\n                    *(in_stack_00000028 + 0xc + unaff_RSI) = uStack140;\n                    return uStack140;\n                }\n                fcn.00458f20(8);\n            }\n            else {\n                uVar6 = *(unaff_RBX + 0x60);\n                iVar5 = arg1;\n                uVar8 = arg1 & 0xffffffff;\n                arg1 = *(unaff_RBX + 0x58);\n                if (uVar8 <= *(unaff_RBX + 0x58)) {\n                    uStack64 = uVar8;\n                    iStack32 = in_RAX;\n                    uStack24 = unaff_RBX;\n                    iStack16 = *(unaff_RBX + 0x50);\n                    uStack128 = fcn.004475a0();\n                    uStack140 = 0xffffffff;\n                    uVar6 = uVar6 - uStack64;\n                    iVar7 = (-uVar6 >> 0x3f & uStack64) + iStack16;\n                    iStackX24 = iVar5;\n                    uStackX32 = unaff_RDI;\n                    in_stack_00000028 = unaff_RSI;\n                    goto code_r0x00447936;\n                }\n            }\n            unaff_RDI = arg1;\n            in_RAX = fcn.00458fe0(arg1);\n        }\n        uVar8 = uVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1534
    },
    "0044c5e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044c5e0(void)\n\n{\n    uint uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *(in_RAX + 0xd8) = 0;\n    *(in_RAX + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    iVar2 = fcn.0044ccc0();\n    piVar3 = fcn.0040ba20();\n    *piVar3 = iVar2 + 1;\n    uVar1 = fcn.0044be00(1);\n    auStack24 = ZEXT1216(CONCAT48(uVar1, *(in_RAX + 0x98)));\n    fcn.0044b220(auStack24);\n    return;\n}\n",
        "token_count": 249
    },
    "0044c900": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044c900(void)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    *(in_RAX + 0xd8) = *(in_RAX + 0xd8) + 1;\n    if (*(in_RAX + 0xe0) == iVar1) {\n        uStack32 = *(in_RAX + 0x98);\n        fcn.0044b220(&uStack32);\n    }\n    else {\n        *(in_RAX + 0xe0) = iVar1;\n        auStack24 = CONCAT88(*(in_RAX + 0xd8), *(in_RAX + 0x98));\n        fcn.0044b220(auStack24);\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0044ca20": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0044ca20(void)\n\n{\n    int64_t iVar1;\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    ulong uStack32;\n    ulong uStack24;\n    uint64_t uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((in_RAX != 0) && (in_RAX < *0x4f6be0)) {\n        in_RAX = 0;\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    *(iVar1 + 0xd8) = *(iVar1 + 0xd8) + 1;\n    *(iVar1 + 0xe0) = *(*(iVar1 + 0x30) + 0xa0);\n    uStack32 = *(iVar1 + 0x98);\n    uStack24 = *(iVar1 + 0xd8);\n    uStack16 = in_RAX >> 6;\n    fcn.0044b220(&uStack32);\n    return;\n}\n",
        "token_count": 270
    },
    "00451500": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00451500(void)\n\n{\n    uint64_t in_RAX;\n    ulong *puVar1;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == -1) {\n                return 0x4095a0;\n            }\n            for (iVar2 = 0x4d9aa0; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                if ((*(iVar2 + 0x128) < in_RAX || *(iVar2 + 0x128) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x130) && *(iVar2 + 0x130) != in_RAX)) goto code_r0x00451560;\n            }\n            iVar2 = 0;\ncode_r0x00451560:\n            if (iVar2 != 0) {\n                *(*0x20 + -0x50) = 0x451639;\n                iVar2 = fcn.00447480();\n                return iVar2;\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x50) = 0x451585;\n            fcn.00409860();\n            *(*0x20 + -0x50) = 0x45159c;\n            puVar1 = fcn.0040db00(*(*0x20 + 0x10));\n            *(*0x20 + -0x18) = *puVar1;\n            *(*0x20 + -0x50) = 0x4515b3;\n            fcn.00409a80();\n            if (*(*0x20 + -0x18) != 0) {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x50) = 0x4515c5;\n            fcn.00431980();\n            *(*0x20 + -0x50) = 0x4515d6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x4515e5;\n            fcn.004320e0();\n            *(*0x20 + -0x50) = 0x4515f6;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x451605;\n            fcn.004320e0();\n            *(*0x20 + -0x50) = 0x451616;\n            fcn.00432280();\n            *(*0x20 + -0x50) = 0x45161b;\n            fcn.00431a00();\n            iVar2 = 0x4d9aa0;\n            while (iVar2 != 0) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x20) = *(iVar2 + 0x128);\n                *(*0x20 + -0x28) = *(iVar2 + 0x130);\n                *(*0x20 + -0x50) = 0x451665;\n                fcn.00431980();\n                *(*0x20 + -0x50) = 0x451676;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x451685;\n                fcn.004320e0();\n                *(*0x20 + -0x50) = 0x451696;\n                fcn.00432280();\n                *(*0x20 + -0x50) = 0x4516a5;\n                fcn.004320e0();\n                *(*0x20 + -0x50) = 0x4516aa;\n                fcn.00431be0();\n                *(*0x20 + -0x50) = 0x4516af;\n                fcn.00431a00();\n                iVar2 = *(*(*0x20 + -0x10) + 0x230);\n            }\n            unaff_EBX = 0x2e;\n            *(*0x20 + -0x50) = 0x4516da;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x4516e9;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 1169
    },
    "004553a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004553a0(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [8];\n    int64_t iStackX16;\n    ulong uStackX24;\n    \n    iStackX16 = 0;\n    uStackX24 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x544bc0);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_LoadLibraryW;\n    *(iVar2 + 0x2c8) = 1;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00402ea0(iVar2 + 0x2c0);\n    iStackX16 = *(iVar2 + 0x2d8);\n    if (iStackX16 == 0) {\n        uStackX24 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043b8e0();\n    return;\n}\n",
        "token_count": 349
    },
    "00459060": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459060(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    unaff_RDI[0x80] = in_XMM15_Da;\n    unaff_RDI[0x81] = in_XMM15_Db;\n    unaff_RDI[0x82] = in_XMM15_Dc;\n    unaff_RDI[0x83] = in_XMM15_Dd;\n    unaff_RDI[0x84] = in_XMM15_Da;\n    unaff_RDI[0x85] = in_XMM15_Db;\n    unaff_RDI[0x86] = in_XMM15_Dc;\n    unaff_RDI[0x87] = in_XMM15_Dd;\n    unaff_RDI[0x88] = in_XMM15_Da;\n    unaff_RDI[0x89] = in_XMM15_Db;\n    unaff_RDI[0x8a] = in_XMM15_Dc;\n    unaff_RDI[0x8b] = in_XMM15_Dd;\n    unaff_RDI[0x8c] = in_XMM15_Da;\n    unaff_RDI[0x8d] = in_XMM15_Db;\n    unaff_RDI[0x8e] = in_XMM15_Dc;\n    unaff_RDI[0x8f] = in_XMM15_Dd;\n    unaff_RDI[0x90] = in_XMM15_Da;\n    unaff_RDI[0x91] = in_XMM15_Db;\n    unaff_RDI[0x92] = in_XMM15_Dc;\n    unaff_RDI[0x93] = in_XMM15_Dd;\n    unaff_RDI[0x94] = in_XMM15_Da;\n    unaff_RDI[0x95] = in_XMM15_Db;\n    unaff_RDI[0x96] = in_XMM15_Dc;\n    unaff_RDI[0x97] = in_XMM15_Dd;\n    unaff_RDI[0x98] = in_XMM15_Da;\n    unaff_RDI[0x99] = in_XMM15_Db;\n    unaff_RDI[0x9a] = in_XMM15_Dc;\n    unaff_RDI[0x9b] = in_XMM15_Dd;\n    unaff_RDI[0x9c] = in_XMM15_Da;\n    unaff_RDI[0x9d] = in_XMM15_Db;\n    unaff_RDI[0x9e] = in_XMM15_Dc;\n    unaff_RDI[0x9f] = in_XMM15_Dd;\n    unaff_RDI[0xa0] = in_XMM15_Da;\n    unaff_RDI[0xa1] = in_XMM15_Db;\n    unaff_RDI[0xa2] = in_XMM15_Dc;\n    unaff_RDI[0xa3] = in_XMM15_Dd;\n    unaff_RDI[0xa4] = in_XMM15_Da;\n    unaff_RDI[0xa5] = in_XMM15_Db;\n    unaff_RDI[0xa6] = in_XMM15_Dc;\n    unaff_RDI[0xa7] = in_XMM15_Dd;\n    unaff_RDI[0xa8] = in_XMM15_Da;\n    unaff_RDI[0xa9] = in_XMM15_Db;\n    unaff_RDI[0xaa] = in_XMM15_Dc;\n    unaff_RDI[0xab] = in_XMM15_Dd;\n    unaff_RDI[0xac] = in_XMM15_Da;\n    unaff_RDI[0xad] = in_XMM15_Db;\n    unaff_RDI[0xae] = in_XMM15_Dc;\n    unaff_RDI[0xaf] = in_XMM15_Dd;\n    unaff_RDI[0xb0] = in_XMM15_Da;\n    unaff_RDI[0xb1] = in_XMM15_Db;\n    unaff_RDI[0xb2] = in_XMM15_Dc;\n    unaff_RDI[0xb3] = in_XMM15_Dd;\n    unaff_RDI[0xb4] = in_XMM15_Da;\n    unaff_RDI[0xb5] = in_XMM15_Db;\n    unaff_RDI[0xb6] = in_XMM15_Dc;\n    unaff_RDI[0xb7] = in_XMM15_Dd;\n    unaff_RDI[0xb8] = in_XMM15_Da;\n    unaff_RDI[0xb9] = in_XMM15_Db;\n    unaff_RDI[0xba] = in_XMM15_Dc;\n    unaff_RDI[0xbb] = in_XMM15_Dd;\n    unaff_RDI[0xbc] = in_XMM15_Da;\n    unaff_RDI[0xbd] = in_XMM15_Db;\n    unaff_RDI[0xbe] = in_XMM15_Dc;\n    unaff_RDI[0xbf] = in_XMM15_Dd;\n    unaff_RDI[0xc0] = in_XMM15_Da;\n    unaff_RDI[0xc1] = in_XMM15_Db;\n    unaff_RDI[0xc2] = in_XMM15_Dc;\n    unaff_RDI[0xc3] = in_XMM15_Dd;\n    unaff_RDI[0xc4] = in_XMM15_Da;\n    unaff_RDI[0xc5] = in_XMM15_Db;\n    unaff_RDI[0xc6] = in_XMM15_Dc;\n    unaff_RDI[199] = in_XMM15_Dd;\n    unaff_RDI[200] = in_XMM15_Da;\n    unaff_RDI[0xc9] = in_XMM15_Db;\n    unaff_RDI[0xca] = in_XMM15_Dc;\n    unaff_RDI[0xcb] = in_XMM15_Dd;\n    unaff_RDI[0xcc] = in_XMM15_Da;\n    unaff_RDI[0xcd] = in_XMM15_Db;\n    unaff_RDI[0xce] = in_XMM15_Dc;\n    unaff_RDI[0xcf] = in_XMM15_Dd;\n    unaff_RDI[0xd0] = in_XMM15_Da;\n    unaff_RDI[0xd1] = in_XMM15_Db;\n    unaff_RDI[0xd2] = in_XMM15_Dc;\n    unaff_RDI[0xd3] = in_XMM15_Dd;\n    unaff_RDI[0xd4] = in_XMM15_Da;\n    unaff_RDI[0xd5] = in_XMM15_Db;\n    unaff_RDI[0xd6] = in_XMM15_Dc;\n    unaff_RDI[0xd7] = in_XMM15_Dd;\n    unaff_RDI[0xd8] = in_XMM15_Da;\n    unaff_RDI[0xd9] = in_XMM15_Db;\n    unaff_RDI[0xda] = in_XMM15_Dc;\n    unaff_RDI[0xdb] = in_XMM15_Dd;\n    unaff_RDI[0xdc] = in_XMM15_Da;\n    unaff_RDI[0xdd] = in_XMM15_Db;\n    unaff_RDI[0xde] = in_XMM15_Dc;\n    unaff_RDI[0xdf] = in_XMM15_Dd;\n    unaff_RDI[0xe0] = in_XMM15_Da;\n    unaff_RDI[0xe1] = in_XMM15_Db;\n    unaff_RDI[0xe2] = in_XMM15_Dc;\n    unaff_RDI[0xe3] = in_XMM15_Dd;\n    unaff_RDI[0xe4] = in_XMM15_Da;\n    unaff_RDI[0xe5] = in_XMM15_Db;\n    unaff_RDI[0xe6] = in_XMM15_Dc;\n    unaff_RDI[0xe7] = in_XMM15_Dd;\n    unaff_RDI[0xe8] = in_XMM15_Da;\n    unaff_RDI[0xe9] = in_XMM15_Db;\n    unaff_RDI[0xea] = in_XMM15_Dc;\n    unaff_RDI[0xeb] = in_XMM15_Dd;\n    unaff_RDI[0xec] = in_XMM15_Da;\n    unaff_RDI[0xed] = in_XMM15_Db;\n    unaff_RDI[0xee] = in_XMM15_Dc;\n    unaff_RDI[0xef] = in_XMM15_Dd;\n    unaff_RDI[0xf0] = in_XMM15_Da;\n    unaff_RDI[0xf1] = in_XMM15_Db;\n    unaff_RDI[0xf2] = in_XMM15_Dc;\n    unaff_RDI[0xf3] = in_XMM15_Dd;\n    unaff_RDI[0xf4] = in_XMM15_Da;\n    unaff_RDI[0xf5] = in_XMM15_Db;\n    unaff_RDI[0xf6] = in_XMM15_Dc;\n    unaff_RDI[0xf7] = in_XMM15_Dd;\n    unaff_RDI[0xf8] = in_XMM15_Da;\n    unaff_RDI[0xf9] = in_XMM15_Db;\n    unaff_RDI[0xfa] = in_XMM15_Dc;\n    unaff_RDI[0xfb] = in_XMM15_Dd;\n    unaff_RDI[0xfc] = in_XMM15_Da;\n    unaff_RDI[0xfd] = in_XMM15_Db;\n    unaff_RDI[0xfe] = in_XMM15_Dc;\n    unaff_RDI[0xff] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4584
    },
    "004590ae": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004590ae(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x280) = in_XMM15_Da;\n    *(unaff_RDI + 0x284) = in_XMM15_Db;\n    *(unaff_RDI + 0x288) = in_XMM15_Dc;\n    *(unaff_RDI + 0x28c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x290) = in_XMM15_Da;\n    *(unaff_RDI + 0x294) = in_XMM15_Db;\n    *(unaff_RDI + 0x298) = in_XMM15_Dc;\n    *(unaff_RDI + 0x29c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2b8) = in_XMM15_Dc;\n    *(unaff_RDI + 700) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x2f0) = in_XMM15_Da;\n    *(unaff_RDI + 0x2f4) = in_XMM15_Db;\n    *(unaff_RDI + 0x2f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x300) = in_XMM15_Da;\n    *(unaff_RDI + 0x304) = in_XMM15_Db;\n    *(unaff_RDI + 0x308) = in_XMM15_Dc;\n    *(unaff_RDI + 0x30c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x310) = in_XMM15_Da;\n    *(unaff_RDI + 0x314) = in_XMM15_Db;\n    *(unaff_RDI + 0x318) = in_XMM15_Dc;\n    *(unaff_RDI + 0x31c) = in_XMM15_Dd;\n    *(unaff_RDI + 800) = in_XMM15_Da;\n    *(unaff_RDI + 0x324) = in_XMM15_Db;\n    *(unaff_RDI + 0x328) = in_XMM15_Dc;\n    *(unaff_RDI + 0x32c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x330) = in_XMM15_Da;\n    *(unaff_RDI + 0x334) = in_XMM15_Db;\n    *(unaff_RDI + 0x338) = in_XMM15_Dc;\n    *(unaff_RDI + 0x33c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 4100
    },
    "004590f8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004590f8(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x180) = in_XMM15_Da;\n    *(unaff_RDI + 0x184) = in_XMM15_Db;\n    *(unaff_RDI + 0x188) = in_XMM15_Dc;\n    *(unaff_RDI + 0x18c) = in_XMM15_Dd;\n    *(unaff_RDI + 400) = in_XMM15_Da;\n    *(unaff_RDI + 0x194) = in_XMM15_Db;\n    *(unaff_RDI + 0x198) = in_XMM15_Dc;\n    *(unaff_RDI + 0x19c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1a0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1a4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1a8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ac) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1b0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1b4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1b8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1bc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1c0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1c4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1c8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1cc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1d0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1d4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1d8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1dc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1e0) = in_XMM15_Da;\n    *(unaff_RDI + 0x1e4) = in_XMM15_Db;\n    *(unaff_RDI + 0x1e8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1ec) = in_XMM15_Dd;\n    *(unaff_RDI + 0x1f0) = in_XMM15_Da;\n    *(unaff_RDI + 500) = in_XMM15_Db;\n    *(unaff_RDI + 0x1f8) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1fc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x200) = in_XMM15_Da;\n    *(unaff_RDI + 0x204) = in_XMM15_Db;\n    *(unaff_RDI + 0x208) = in_XMM15_Dc;\n    *(unaff_RDI + 0x20c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x210) = in_XMM15_Da;\n    *(unaff_RDI + 0x214) = in_XMM15_Db;\n    *(unaff_RDI + 0x218) = in_XMM15_Dc;\n    *(unaff_RDI + 0x21c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x220) = in_XMM15_Da;\n    *(unaff_RDI + 0x224) = in_XMM15_Db;\n    *(unaff_RDI + 0x228) = in_XMM15_Dc;\n    *(unaff_RDI + 0x22c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x230) = in_XMM15_Da;\n    *(unaff_RDI + 0x234) = in_XMM15_Db;\n    *(unaff_RDI + 0x238) = in_XMM15_Dc;\n    *(unaff_RDI + 0x23c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x240) = in_XMM15_Da;\n    *(unaff_RDI + 0x244) = in_XMM15_Db;\n    *(unaff_RDI + 0x248) = in_XMM15_Dc;\n    *(unaff_RDI + 0x24c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x250) = in_XMM15_Da;\n    *(unaff_RDI + 0x254) = in_XMM15_Db;\n    *(unaff_RDI + 600) = in_XMM15_Dc;\n    *(unaff_RDI + 0x25c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x260) = in_XMM15_Da;\n    *(unaff_RDI + 0x264) = in_XMM15_Db;\n    *(unaff_RDI + 0x268) = in_XMM15_Dc;\n    *(unaff_RDI + 0x26c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x270) = in_XMM15_Da;\n    *(unaff_RDI + 0x274) = in_XMM15_Db;\n    *(unaff_RDI + 0x278) = in_XMM15_Dc;\n    *(unaff_RDI + 0x27c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 3030
    },
    "00459118": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459118(void)\n\n{\n    uint *unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *unaff_RDI = in_XMM15_Da;\n    unaff_RDI[1] = in_XMM15_Db;\n    unaff_RDI[2] = in_XMM15_Dc;\n    unaff_RDI[3] = in_XMM15_Dd;\n    unaff_RDI[4] = in_XMM15_Da;\n    unaff_RDI[5] = in_XMM15_Db;\n    unaff_RDI[6] = in_XMM15_Dc;\n    unaff_RDI[7] = in_XMM15_Dd;\n    unaff_RDI[8] = in_XMM15_Da;\n    unaff_RDI[9] = in_XMM15_Db;\n    unaff_RDI[10] = in_XMM15_Dc;\n    unaff_RDI[0xb] = in_XMM15_Dd;\n    unaff_RDI[0xc] = in_XMM15_Da;\n    unaff_RDI[0xd] = in_XMM15_Db;\n    unaff_RDI[0xe] = in_XMM15_Dc;\n    unaff_RDI[0xf] = in_XMM15_Dd;\n    unaff_RDI[0x10] = in_XMM15_Da;\n    unaff_RDI[0x11] = in_XMM15_Db;\n    unaff_RDI[0x12] = in_XMM15_Dc;\n    unaff_RDI[0x13] = in_XMM15_Dd;\n    unaff_RDI[0x14] = in_XMM15_Da;\n    unaff_RDI[0x15] = in_XMM15_Db;\n    unaff_RDI[0x16] = in_XMM15_Dc;\n    unaff_RDI[0x17] = in_XMM15_Dd;\n    unaff_RDI[0x18] = in_XMM15_Da;\n    unaff_RDI[0x19] = in_XMM15_Db;\n    unaff_RDI[0x1a] = in_XMM15_Dc;\n    unaff_RDI[0x1b] = in_XMM15_Dd;\n    unaff_RDI[0x1c] = in_XMM15_Da;\n    unaff_RDI[0x1d] = in_XMM15_Db;\n    unaff_RDI[0x1e] = in_XMM15_Dc;\n    unaff_RDI[0x1f] = in_XMM15_Dd;\n    unaff_RDI[0x20] = in_XMM15_Da;\n    unaff_RDI[0x21] = in_XMM15_Db;\n    unaff_RDI[0x22] = in_XMM15_Dc;\n    unaff_RDI[0x23] = in_XMM15_Dd;\n    unaff_RDI[0x24] = in_XMM15_Da;\n    unaff_RDI[0x25] = in_XMM15_Db;\n    unaff_RDI[0x26] = in_XMM15_Dc;\n    unaff_RDI[0x27] = in_XMM15_Dd;\n    unaff_RDI[0x28] = in_XMM15_Da;\n    unaff_RDI[0x29] = in_XMM15_Db;\n    unaff_RDI[0x2a] = in_XMM15_Dc;\n    unaff_RDI[0x2b] = in_XMM15_Dd;\n    unaff_RDI[0x2c] = in_XMM15_Da;\n    unaff_RDI[0x2d] = in_XMM15_Db;\n    unaff_RDI[0x2e] = in_XMM15_Dc;\n    unaff_RDI[0x2f] = in_XMM15_Dd;\n    unaff_RDI[0x30] = in_XMM15_Da;\n    unaff_RDI[0x31] = in_XMM15_Db;\n    unaff_RDI[0x32] = in_XMM15_Dc;\n    unaff_RDI[0x33] = in_XMM15_Dd;\n    unaff_RDI[0x34] = in_XMM15_Da;\n    unaff_RDI[0x35] = in_XMM15_Db;\n    unaff_RDI[0x36] = in_XMM15_Dc;\n    unaff_RDI[0x37] = in_XMM15_Dd;\n    unaff_RDI[0x38] = in_XMM15_Da;\n    unaff_RDI[0x39] = in_XMM15_Db;\n    unaff_RDI[0x3a] = in_XMM15_Dc;\n    unaff_RDI[0x3b] = in_XMM15_Dd;\n    unaff_RDI[0x3c] = in_XMM15_Da;\n    unaff_RDI[0x3d] = in_XMM15_Db;\n    unaff_RDI[0x3e] = in_XMM15_Dc;\n    unaff_RDI[0x3f] = in_XMM15_Dd;\n    unaff_RDI[0x40] = in_XMM15_Da;\n    unaff_RDI[0x41] = in_XMM15_Db;\n    unaff_RDI[0x42] = in_XMM15_Dc;\n    unaff_RDI[0x43] = in_XMM15_Dd;\n    unaff_RDI[0x44] = in_XMM15_Da;\n    unaff_RDI[0x45] = in_XMM15_Db;\n    unaff_RDI[0x46] = in_XMM15_Dc;\n    unaff_RDI[0x47] = in_XMM15_Dd;\n    unaff_RDI[0x48] = in_XMM15_Da;\n    unaff_RDI[0x49] = in_XMM15_Db;\n    unaff_RDI[0x4a] = in_XMM15_Dc;\n    unaff_RDI[0x4b] = in_XMM15_Dd;\n    unaff_RDI[0x4c] = in_XMM15_Da;\n    unaff_RDI[0x4d] = in_XMM15_Db;\n    unaff_RDI[0x4e] = in_XMM15_Dc;\n    unaff_RDI[0x4f] = in_XMM15_Dd;\n    unaff_RDI[0x50] = in_XMM15_Da;\n    unaff_RDI[0x51] = in_XMM15_Db;\n    unaff_RDI[0x52] = in_XMM15_Dc;\n    unaff_RDI[0x53] = in_XMM15_Dd;\n    unaff_RDI[0x54] = in_XMM15_Da;\n    unaff_RDI[0x55] = in_XMM15_Db;\n    unaff_RDI[0x56] = in_XMM15_Dc;\n    unaff_RDI[0x57] = in_XMM15_Dd;\n    unaff_RDI[0x58] = in_XMM15_Da;\n    unaff_RDI[0x59] = in_XMM15_Db;\n    unaff_RDI[0x5a] = in_XMM15_Dc;\n    unaff_RDI[0x5b] = in_XMM15_Dd;\n    unaff_RDI[0x5c] = in_XMM15_Da;\n    unaff_RDI[0x5d] = in_XMM15_Db;\n    unaff_RDI[0x5e] = in_XMM15_Dc;\n    unaff_RDI[0x5f] = in_XMM15_Dd;\n    unaff_RDI[0x60] = in_XMM15_Da;\n    unaff_RDI[0x61] = in_XMM15_Db;\n    unaff_RDI[0x62] = in_XMM15_Dc;\n    unaff_RDI[99] = in_XMM15_Dd;\n    unaff_RDI[100] = in_XMM15_Da;\n    unaff_RDI[0x65] = in_XMM15_Db;\n    unaff_RDI[0x66] = in_XMM15_Dc;\n    unaff_RDI[0x67] = in_XMM15_Dd;\n    unaff_RDI[0x68] = in_XMM15_Da;\n    unaff_RDI[0x69] = in_XMM15_Db;\n    unaff_RDI[0x6a] = in_XMM15_Dc;\n    unaff_RDI[0x6b] = in_XMM15_Dd;\n    unaff_RDI[0x6c] = in_XMM15_Da;\n    unaff_RDI[0x6d] = in_XMM15_Db;\n    unaff_RDI[0x6e] = in_XMM15_Dc;\n    unaff_RDI[0x6f] = in_XMM15_Dd;\n    unaff_RDI[0x70] = in_XMM15_Da;\n    unaff_RDI[0x71] = in_XMM15_Db;\n    unaff_RDI[0x72] = in_XMM15_Dc;\n    unaff_RDI[0x73] = in_XMM15_Dd;\n    unaff_RDI[0x74] = in_XMM15_Da;\n    unaff_RDI[0x75] = in_XMM15_Db;\n    unaff_RDI[0x76] = in_XMM15_Dc;\n    unaff_RDI[0x77] = in_XMM15_Dd;\n    unaff_RDI[0x78] = in_XMM15_Da;\n    unaff_RDI[0x79] = in_XMM15_Db;\n    unaff_RDI[0x7a] = in_XMM15_Dc;\n    unaff_RDI[0x7b] = in_XMM15_Dd;\n    unaff_RDI[0x7c] = in_XMM15_Da;\n    unaff_RDI[0x7d] = in_XMM15_Db;\n    unaff_RDI[0x7e] = in_XMM15_Dc;\n    unaff_RDI[0x7f] = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 2340
    },
    "00459154": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459154(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x140) = in_XMM15_Da;\n    *(unaff_RDI + 0x144) = in_XMM15_Db;\n    *(unaff_RDI + 0x148) = in_XMM15_Dc;\n    *(unaff_RDI + 0x14c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x150) = in_XMM15_Da;\n    *(unaff_RDI + 0x154) = in_XMM15_Db;\n    *(unaff_RDI + 0x158) = in_XMM15_Dc;\n    *(unaff_RDI + 0x15c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x160) = in_XMM15_Da;\n    *(unaff_RDI + 0x164) = in_XMM15_Db;\n    *(unaff_RDI + 0x168) = in_XMM15_Dc;\n    *(unaff_RDI + 0x16c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x170) = in_XMM15_Da;\n    *(unaff_RDI + 0x174) = in_XMM15_Db;\n    *(unaff_RDI + 0x178) = in_XMM15_Dc;\n    *(unaff_RDI + 0x17c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1721
    },
    "0045916b": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0045916b(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    *(unaff_RDI + 0x100) = in_XMM15_Da;\n    *(unaff_RDI + 0x104) = in_XMM15_Db;\n    *(unaff_RDI + 0x108) = in_XMM15_Dc;\n    *(unaff_RDI + 0x10c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x110) = in_XMM15_Da;\n    *(unaff_RDI + 0x114) = in_XMM15_Db;\n    *(unaff_RDI + 0x118) = in_XMM15_Dc;\n    *(unaff_RDI + 0x11c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x120) = in_XMM15_Da;\n    *(unaff_RDI + 0x124) = in_XMM15_Db;\n    *(unaff_RDI + 0x128) = in_XMM15_Dc;\n    *(unaff_RDI + 300) = in_XMM15_Dd;\n    *(unaff_RDI + 0x130) = in_XMM15_Da;\n    *(unaff_RDI + 0x134) = in_XMM15_Db;\n    *(unaff_RDI + 0x138) = in_XMM15_Dc;\n    *(unaff_RDI + 0x13c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1402
    },
    "00459178": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459178(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x10) = in_XMM15_Da;\n    *(unaff_RDI + 0x14) = in_XMM15_Db;\n    *(unaff_RDI + 0x18) = in_XMM15_Dc;\n    *(unaff_RDI + 0x1c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x20) = in_XMM15_Da;\n    *(unaff_RDI + 0x24) = in_XMM15_Db;\n    *(unaff_RDI + 0x28) = in_XMM15_Dc;\n    *(unaff_RDI + 0x2c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xc0) = in_XMM15_Da;\n    *(unaff_RDI + 0xc4) = in_XMM15_Db;\n    *(unaff_RDI + 200) = in_XMM15_Dc;\n    *(unaff_RDI + 0xcc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xd0) = in_XMM15_Da;\n    *(unaff_RDI + 0xd4) = in_XMM15_Db;\n    *(unaff_RDI + 0xd8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xdc) = in_XMM15_Dd;\n    *(unaff_RDI + 0xe0) = in_XMM15_Da;\n    *(unaff_RDI + 0xe4) = in_XMM15_Db;\n    *(unaff_RDI + 0xe8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xec) = in_XMM15_Dd;\n    *(unaff_RDI + 0xf0) = in_XMM15_Da;\n    *(unaff_RDI + 0xf4) = in_XMM15_Db;\n    *(unaff_RDI + 0xf8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xfc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 1244
    },
    "00459199": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00459199(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x80) = in_XMM15_Da;\n    *(unaff_RDI + 0x84) = in_XMM15_Db;\n    *(unaff_RDI + 0x88) = in_XMM15_Dc;\n    *(unaff_RDI + 0x8c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x90) = in_XMM15_Da;\n    *(unaff_RDI + 0x94) = in_XMM15_Db;\n    *(unaff_RDI + 0x98) = in_XMM15_Dc;\n    *(unaff_RDI + 0x9c) = in_XMM15_Dd;\n    *(unaff_RDI + 0xa0) = in_XMM15_Da;\n    *(unaff_RDI + 0xa4) = in_XMM15_Db;\n    *(unaff_RDI + 0xa8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xac) = in_XMM15_Dd;\n    *(unaff_RDI + 0xb0) = in_XMM15_Da;\n    *(unaff_RDI + 0xb4) = in_XMM15_Db;\n    *(unaff_RDI + 0xb8) = in_XMM15_Dc;\n    *(unaff_RDI + 0xbc) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 774
    },
    "004591b0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004591b0(void)\n\n{\n    int64_t unaff_RDI;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *(unaff_RDI + 0x30) = in_XMM15_Da;\n    *(unaff_RDI + 0x34) = in_XMM15_Db;\n    *(unaff_RDI + 0x38) = in_XMM15_Dc;\n    *(unaff_RDI + 0x3c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x40) = in_XMM15_Da;\n    *(unaff_RDI + 0x44) = in_XMM15_Db;\n    *(unaff_RDI + 0x48) = in_XMM15_Dc;\n    *(unaff_RDI + 0x4c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x50) = in_XMM15_Da;\n    *(unaff_RDI + 0x54) = in_XMM15_Db;\n    *(unaff_RDI + 0x58) = in_XMM15_Dc;\n    *(unaff_RDI + 0x5c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x60) = in_XMM15_Da;\n    *(unaff_RDI + 100) = in_XMM15_Db;\n    *(unaff_RDI + 0x68) = in_XMM15_Dc;\n    *(unaff_RDI + 0x6c) = in_XMM15_Dd;\n    *(unaff_RDI + 0x70) = in_XMM15_Da;\n    *(unaff_RDI + 0x74) = in_XMM15_Db;\n    *(unaff_RDI + 0x78) = in_XMM15_Dc;\n    *(unaff_RDI + 0x7c) = in_XMM15_Dd;\n    return;\n}\n",
        "token_count": 459
    },
    "004604e0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00460589)\n// WARNING: Removing unreachable block (ram,0x004605b5)\n\nulong fcn.004604e0(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x218 && *0x20 + -0x218 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x298;\n            *(*0x20 + -8) = unaff_RBP;\n            uVar3 = in_RAX - 0x20000000;\n            if (uVar3 < 0x83) {\n                return *(uVar3 * 0x10 + 0x4efcc0);\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x260) = in_XMM15;\n            *(*0x20 + -0x2a8) = *0x20 + -8;\n            *(*0x20 + -0x2a0) = 0x46054f;\n            uVar2 = fcn.004590f8();\n            unaff_RBP = *(*0x20 + -0x2a8);\n            *(*0x20 + -0x2a0) = 0x460578;\n            uVar3 = fcn.004606c0(uVar2, uVar3, 300, 300);\n            do {\n                uVar4 = uVar3;\n                iVar1 = uVar4;\n                if (iVar1 == 0) break;\n                uVar3 = iVar1 - 1;\n                if (299 < uVar3) goto code_r0x00460685;\n            } while ((*(*0x20 + uVar3 * 2 + -0x260) == 10) || (*(*0x20 + uVar3 * 2 + -0x260) == 0xd));\n            uVar4 = uVar4 & 0xffffffff;\n            if (uVar4 < 0x12d) {\n                *(*0x20 + -0x2a0) = 0x46065b;\n                fcn.0045eaa0(300);\n                *(*0x20 + -0x2a0) = 0x46066b;\n                uVar2 = fcn.004461e0(uVar4);\n                return uVar2;\n            }\n            *(*0x20 + -0x2a0) = 0x460685;\n            fcn.00458fa0(uVar4, 300);\ncode_r0x00460685:\n            *(*0x20 + -0x2a0) = 0x460691;\n            in_RAX = fcn.00458f20(300);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x46069c;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 768
    },
    "00460860": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00460860(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int64_t iVar2;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = *0x4f1920;\n            *(*0x20 + -0x50) = 0x460892;\n            iVar1 = fcn.0045fe20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x18);\n                *(*0x20 + -0x50) = 0x4608bc;\n                iVar2 = fcn.00455640(iVar1);\n                if (((iVar2 == -1) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = 0xffffffffffffffff;\n                    *(*0x20 + -0x50) = 0x460906;\n                    fcn.00409360();\n                    iVar2 = *(*0x20 + -0x20);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x50) = 0x460936;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x460945;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00460960": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00460960(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x48;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x18) = *0x4f1928;\n            *(*0x20 + -0x50) = 0x460993;\n            iVar1 = fcn.0045fe20();\n            if (iVar1 == 0) {\n                iVar1 = *(*0x20 + -0x10);\n                *(*0x20 + -0x50) = 0x4609c5;\n                uVar2 = fcn.00455640(iVar1);\n                if (((uVar2 == 0) && (iVar1 != 0)) && (iVar1 != 0x3e5)) {\n                    *(*0x20 + -0x20) = uVar2;\n                    *(*0x20 + -0x50) = 0x460a06;\n                    fcn.00409360();\n                    uVar2 = *(*0x20 + -0x20);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x50) = 0x460a36;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x460a45;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 535
    },
    "00402120": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint32_t fcn.00402120(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (in_RAX & 0x5555555555555555) + (in_RAX >> 1 & 0x5555555555555555);\n    uVar1 = (uVar1 >> 2 & 0x3333333333333333) + (uVar1 & 0x3333333333333333);\n    uVar1 = (uVar1 >> 4) + uVar1 & 0xf0f0f0f0f0f0f0f;\n    uVar1 = uVar1 + (uVar1 >> 8);\n    iVar2 = (uVar1 >> 0x10) + uVar1;\n    return (iVar2 >> 0x20) + iVar2 & 0x7f;\n}\n",
        "token_count": 209
    },
    "004083e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.004083e0(uint64_t arg1)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    uchar auVar3 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    \n    uVar5 = unaff_RBX ^ *0x544c60 ^ 0xa0761d6478bd642f;\n    if (arg1 == 0) {\n        return uVar5;\n    }\n    if (arg1 < 4) {\n        uVar4 = CONCAT12(*((arg1 - 1) + in_RAX), CONCAT11(*(in_RAX + (arg1 >> 1)), *in_RAX));\n        uVar6 = 0;\n    }\n    else if (arg1 == 4) {\n        uVar4 = *in_RAX;\n        uVar6 = *in_RAX;\n    }\n    else if (arg1 < 8) {\n        uVar4 = *in_RAX;\n        uVar6 = *((arg1 - 4) + in_RAX);\n    }\n    else if (arg1 == 8) {\n        uVar4 = *in_RAX;\n        uVar6 = uVar4;\n    }\n    else if (arg1 < 0x11) {\n        uVar4 = *in_RAX;\n        uVar6 = *((arg1 - 8) + in_RAX);\n    }\n    else {\n        uVar6 = arg1;\n        uVar4 = uVar5;\n        uVar7 = uVar5;\n        if (0x30 < arg1) {\n            for (; 0x30 < uVar6; uVar6 = uVar6 - 0x30) {\n                auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n                auVar2 = ZEXT816(in_RAX[3] ^ uVar4) * ZEXT816(in_RAX[2] ^ 0x8ebc6af09c88c6e3);\n                auVar3 = ZEXT816(in_RAX[5] ^ uVar7) * ZEXT816(in_RAX[4] ^ 0x589965cc75374cc3);\n                uVar5 = SUB168(auVar1 >> 0x40, 0) ^ SUB168(auVar1, 0);\n                in_RAX = in_RAX + 6;\n                uVar4 = SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0);\n                uVar7 = SUB168(auVar3 >> 0x40, 0) ^ SUB168(auVar3, 0);\n            }\n            uVar5 = uVar5 ^ uVar4 ^ uVar7;\n        }\n        for (; 0x10 < uVar6; uVar6 = uVar6 - 0x10) {\n            auVar1 = ZEXT816(in_RAX[1] ^ uVar5) * ZEXT816(*in_RAX ^ 0xe7037ed1a0b428db);\n            uVar5 = SUB168(auVar1 >> 0x40, 0) ^ SUB168(auVar1, 0);\n            in_RAX = in_RAX + 2;\n        }\n        uVar4 = *((uVar6 - 0x10) + in_RAX);\n        uVar6 = *((uVar6 - 8) + in_RAX);\n    }\n    auVar1 = ZEXT816(uVar5 ^ uVar6) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    auVar1 = ZEXT816(SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0)) * ZEXT816(arg1 ^ 0x1d8e4e27c47d124f);\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 942
    },
    "004117e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.004117e0(void)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    ulong arg1;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint8_t unaff_BL;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar8 = unaff_BL;\n            if (uVar8 < 0x88) {\n                iVar4 = *(in_RAX + 0x28 + uVar8 * 8);\n                if (*(iVar4 + 0x38) == *(iVar4 + 0x60)) {\n                    *(*0x20 + 8) = in_RAX;\n                    *(*0x20 + -0x10) = uVar8;\n                    if (iVar4 == 0x545140) {\ncode_r0x0041191a:\n                        *(*0x20 + -0x40) = 0x411932;\n                        iVar4 = fcn.00411ee0(uVar8 * 0xc0);\n                        if (iVar4 != 0) {\n                            if (*(iVar4 + 0x38) != *(iVar4 + 0x60)) {\n                                *(*0x20 + -0x18) = iVar4;\n                                *(iVar4 + 0x58) = *0x516dd8 + 3;\n                                *(iVar4 + 0x66) = *(iVar4 + 0x60);\n                                arg1 = *(*(*0x20 + 8) + 8);\n                                *(*0x20 + -0x40) = 0x41198b;\n                                fcn.0041b520(arg1);\n                                iVar4 = *(*0x20 + 8);\n                                *(iVar4 + 8) = 0;\n                                *(iVar4 + 0x28 + *(*0x20 + -0x10) * 8) = *(*0x20 + -0x18);\n                                return;\n                            }\n                            *(*0x20 + -0x40) = 0x4119c5;\n                            fcn.00430040();\n                        }\n                        *(*0x20 + -0x40) = 0x4119d6;\n                        fcn.00430040();\ncode_r0x004119d6:\n                        *(*0x20 + -0x40) = 0x4119e5;\n                        fcn.00458f20(0x44);\n                    }\n                    else if (*(iVar4 + 0x58) == *0x516dd8 + 3) {\n                        *(*0x20 + 0x10) = unaff_BL;\n                        *(*0x20 + -0x18) = iVar4;\n                        *(*0x20 + -0x40) = 0x41187f;\n                        fcn.00412240();\n                        *(*0x20 + -0x40) = 0x41188b;\n                        iVar3 = fcn.00429b00();\n                        iVar4 = *(*0x20 + -0x18);\n                        iVar5 = *(iVar4 + 0x60) - *(iVar4 + 0x66);\n                        uVar2 = *(*0x20 + 0x10);\n                        uVar8 = uVar2 >> 1;\n                        if (uVar8 < 0x44) {\n                            *(*0x20 + -0x20) = iVar5;\n                            piVar1 = iVar3 + uVar8 * 8 + 0x48;\n                            LOCK();\n                            iVar6 = *piVar1;\n                            *piVar1 = *piVar1 + iVar5;\n                            if (uVar2 == 5) {\n                                iVar6 = *(*0x20 + 8);\n                                LOCK();\n                                *(iVar3 + 0x30) = *(iVar3 + 0x30) + *(iVar6 + 0x20);\n                                *(iVar6 + 0x20) = 0;\n                            }\n                            *(*0x20 + -0x40) = 0x4118f0;\n                            fcn.00429be0(iVar4, iVar6);\n                            LOCK();\n                            *0x545410 = *0x545410 + *(*0x20 + -0x20) * *(*(*0x20 + -0x18) + 0x68);\n                            *(*(*0x20 + -0x18) + 0x66) = 0;\n                            uVar8 = *(*0x20 + -0x10);\n                            goto code_r0x0041191a;\n                        }\n                        goto code_r0x004119d6;\n                    }\n                    *(*0x20 + -0x40) = 0x4119f6;\n                    fcn.00430040();\n                }\n                unaff_BL = 0x28;\n                *(*0x20 + -0x40) = 0x411a07;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x40) = 0x411a14;\n            in_RAX = fcn.00458f20(0x88);\n        }\n        *(puVar7 + 8) = in_RAX;\n        puVar7[0x10] = unaff_BL;\n        *(puVar7 + -8) = 0x411a25;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_BL = puVar7[0x10];\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1329
    },
    "00411a40": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00411a40(uchar param_1)\n\n{\n    int64_t *piVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x2000) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                *(*0x20 + 0x18) = param_1;\n                uVar2 = unaff_RBX >> 0xd;\n                if ((unaff_RBX & 0x1fff) != 0) {\n                    uVar2 = (unaff_RBX >> 0xd) + 1;\n                }\n                *(*0x20 + -0x18) = uVar2;\n                *(*0x20 + -0x10) = uVar2 << 0xd;\n                *(*0x20 + -0x48) = 0x411aa5;\n                fcn.0041f9c0();\n                param_1 = *(*0x20 + 0x18);\n                *(*0x20 + -0x21) = param_1;\n                *(*0x20 + -0x48) = 0x411ac5;\n                iVar3 = fcn.004214c0();\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x20) = iVar3;\n                    *(*0x20 + -0x48) = 0x411adf;\n                    iVar3 = fcn.00429b00();\n                    LOCK();\n                    *(iVar3 + 0x38) = *(iVar3 + 0x38) + *(*0x20 + -0x10);\n                    LOCK();\n                    piVar1 = iVar3 + 0x40;\n                    iVar3 = *piVar1;\n                    *piVar1 = *piVar1 + 1;\n                    *(*0x20 + -0x48) = 0x411b05;\n                    fcn.00429be0(iVar3);\n                    LOCK();\n                    *0x545410 = *0x545410 + *(*0x20 + -0x10);\n                    *(*0x20 + -0x48) = 0x411b32;\n                    fcn.0041b520(0);\n                    if (*(*0x20 + -0x21) < 0x88) {\n                        *(*0x20 + -0x48) = 0x411b72;\n                        fcn.00429460(*(*0x20 + -0x21) * 0xc0 + 0x517128, (*0x516dd8 >> 1 & 1) * 5);\n                        *(*(*0x20 + -0x20) + 0x70) = *(*(*0x20 + -0x20) + 0x18) + *(*0x20 + 0x10);\n                        *(*0x20 + -0x48) = 0x411b8e;\n                        fcn.004104e0();\n                        return *(*0x20 + -0x20);\n                    }\n                    param_1 = 0x88;\n                    *(*0x20 + -0x48) = 0x411ba7;\n                    fcn.00458f20(0x88);\n                }\n                *(*0x20 + -0x48) = 0x411bb8;\n                fcn.00430040();\n            }\n            unaff_RBX = 0xd;\n            *(*0x20 + -0x48) = 0x411bc9;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        puVar4[0x18] = param_1;\n        *(puVar4 + -8) = 0x411bdd;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        param_1 = puVar4[0x18];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1044
    },
    "00411c00": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00411c00(void)\n\n{\n    int64_t *piVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    ulong uVar6;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00411c00:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x10) = *(in_RAX + 8);\n        *(in_RAX + 8) = 0;\n        *(*0x20 + -0x44) = *0x516dd8;\n        iVar2 = 0;\n        uVar6 = 0;\n        do {\n            *(*0x20 + -0x28) = uVar6;\n            if (0x87 < iVar2) {\n                *(in_RAX + 0x10) = in_XMM15;\n                *(*0x20 + -0x68) = 0x411d8c;\n                iVar3 = fcn.00429b00();\n                iVar2 = *(*0x20 + 8);\n                LOCK();\n                piVar1 = iVar3 + 0x30;\n                iVar3 = *piVar1;\n                *piVar1 = *piVar1 + *(iVar2 + 0x20);\n                *(iVar2 + 0x20) = 0;\n                *(*0x20 + -0x68) = 0x411daf;\n                fcn.00429be0(iVar2, iVar3);\n                *(*0x20 + -0x68) = 0x411dc5;\n                fcn.0041b520(*(*0x20 + -0x10));\n                return;\n            }\n            iVar3 = *(in_RAX + 0x28 + iVar2 * 8);\n            if (iVar3 != 0x545140) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x38) = iVar3;\n                *(*0x20 + -0x18) = *(iVar3 + 0x60);\n                *(*0x20 + -0x20) = *(iVar3 + 0x66);\n                *(iVar3 + 0x66) = 0;\n                *(*0x20 + -0x68) = 0x411c93;\n                iVar2 = fcn.00429b00();\n                uVar4 = *(*0x20 + -0x30) >> 1 & 0x7f;\n                if (0x43 < uVar4) goto code_r0x00411dcf;\n                *(*0x20 + -0x40) = *(*0x20 + -0x18) - *(*0x20 + -0x20);\n                piVar1 = iVar2 + uVar4 * 8 + 0x48;\n                LOCK();\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + (*(*0x20 + -0x18) - *(*0x20 + -0x20));\n                *(*0x20 + -0x68) = 0x411cd5;\n                fcn.00429be0(iVar2);\n                iVar2 = *(*0x20 + -0x38);\n                LOCK();\n                *0x545410 = *0x545410 + *(iVar2 + 0x68) * *(*0x20 + -0x40);\n                if (*(iVar2 + 0x58) == *(*0x20 + -0x44) + 1) {\n                    iVar2 = *(*0x20 + -0x28);\n                }\n                else {\n                    iVar2 = *(*0x20 + -0x28) - *(iVar2 + 0x68) * (*(iVar2 + 0x38) - *(iVar2 + 0x60));\n                }\n                *(*0x20 + -0x28) = iVar2;\n                *(*0x20 + -0x68) = 0x411d45;\n                fcn.00412240(*(*0x20 + -0x30), *(*0x20 + -0x30) * 0xc0);\n                iVar2 = *(*0x20 + -0x30);\n                in_RAX = *(*0x20 + 8);\n                *(in_RAX + 0x28 + iVar2 * 8) = 0x545140;\n                uVar6 = *(*0x20 + -0x28);\n            }\n            iVar2 = iVar2 + 1;\n        } while( true );\n    }\n    goto code_r0x00411ddd;\ncode_r0x00411dcf:\n    *(*0x20 + -0x68) = 0x411ddc;\n    in_RAX = fcn.00458f20(0x44);\ncode_r0x00411ddd:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x411de7;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00411c00;\n}\n",
        "token_count": 1256
    },
    "00412340": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.00412340(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *in_RAX;\n            uVar2 = uVar1 >> 1;\n            if (uVar2 < 0x44) {\n                *(*0x20 + -0x10) = *(uVar2 + 0x4d9500);\n                *(*0x20 + -0x18) = *(uVar2 * 2 + 0x4d96c0);\n                *(*0x20 + -0x40) = 0x412397;\n                iVar3 = fcn.004214c0(uVar1);\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x20) = iVar3;\n                    *(iVar3 + 0x70) =\n                         *(*0x20 + -0x18) * (*(*0x20 + -0x10) * 0x2000 * *(iVar3 + 0x5c) >> 0x20) + *(iVar3 + 0x18);\n                    *(*0x20 + -0x40) = 0x4123cd;\n                    fcn.004104e0();\n                    return *(*0x20 + -0x20);\n                }\n                return 0;\n            }\n            *(*0x20 + -0x40) = 0x4123f2;\n            in_RAX = fcn.00458f20(0x44);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4123fd;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 533
    },
    "0041a5e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.0041a5e0(int64_t arg1)\n\n{\n    ulong uVar1;\n    int32_t *in_RAX;\n    int64_t iVar2;\n    int32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_EBX < 0) {\n        unaff_EBX = -1;\n    }\n    *(in_RAX + 4) = 0x400000;\n    *(in_RAX + 0x10) = 0xffffffffffffffff;\n    *(in_RAX + 4) = ((unaff_EBX << 0x16) >> 1) / 0x32;\n    *in_RAX = unaff_EBX;\n    uVar1 = *(in_RAX + 2);\n    iVar2 = arg1;\n    if (-1 < arg1) {\n        iVar2 = *(in_RAX + 2);\n        *(in_RAX + 2) = arg1;\n    }\n    fcn.0041b8c0(iVar2, uVar1);\n    return;\n}\n",
        "token_count": 282
    },
    "0041b8c0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nuint64_t fcn.0041b8c0(void)\n\n{\n    uint64_t uVar1;\n    int32_t *in_RAX;\n    uint64_t uVar2;\n    char unaff_BL;\n    double dVar3;\n    \n    if (unaff_BL == '\\0') {\n        *(in_RAX + 0xe) = *(in_RAX + 0x14) + 0x100000;\n    }\n    else {\n        *(in_RAX + 0xe) = 0;\n    }\n    if (*in_RAX < 0) {\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        uVar2 = ((*(in_RAX + 0x1a) + *(in_RAX + 0x20) + *(in_RAX + 0x1e)) * *in_RAX >> 1) / 0x32 + *(in_RAX + 0x20);\n    }\n    if (uVar2 < *(in_RAX + 4)) {\n        uVar2 = *(in_RAX + 4);\n    }\n    *(in_RAX + 0xc) = uVar2;\n    uVar2 = *(in_RAX + 0x1a) + *(in_RAX + 0x18) + *(in_RAX + 0x1e);\n    if (uVar2 < 0) {\n        dVar3 = uVar2 & 1 | uVar2 >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = uVar2;\n    }\n    dVar3 = dVar3 * *0x48f5f8 * *0x48f5d8 * *(in_RAX + 8);\n    if (*0x48f640 <= dVar3) {\n        uVar2 = dVar3 - *0x48f640 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar3;\n    }\n    uVar1 = *(in_RAX + 6);\n    *(in_RAX + 6) = uVar2;\n    return uVar1;\n}\n",
        "token_count": 476
    },
    "0041be80": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0041be80(uint64_t arg1, ulong arg2)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    double dVar3;\n    double dVar4;\n    double dVar5;\n    \n    uVar1 = *0x544ca0;\n    dVar3 = *0x48f618 * in_RAX;\n    if (*0x48f640 <= dVar3) {\n        *0x544ca8 = dVar3 - *0x48f640 | 0x8000000000000000;\n    }\n    else {\n        *0x544ca8 = dVar3;\n    }\n    if (*0x545420 <= *0x544ca8) {\n        *0x544ca8 = 0xffffffffffffffff;\n    }\n    if (arg1 == 0) {\n        *0x544ca0 = 0xffffffffffffffff;\n        return uVar1;\n    }\n    if (unaff_RBX < 0) {\n        dVar3 = unaff_RBX & 1 | unaff_RBX >> 1;\n        dVar3 = dVar3 + dVar3;\n    }\n    else {\n        dVar3 = unaff_RBX;\n    }\n    if (arg1 < 0) {\n        dVar4 = arg1 & 1 | arg1 >> 1;\n        dVar4 = dVar4 + dVar4;\n    }\n    else {\n        dVar4 = arg1;\n    }\n    if (*0x5484f0 < 0) {\n        dVar5 = *0x5484f0 & 1 | *0x5484f0 >> 1;\n        dVar5 = dVar5 + dVar5;\n    }\n    else {\n        dVar5 = *0x5484f0;\n    }\n    dVar5 = dVar5 * (dVar3 / dVar4);\n    if (*0x48f640 <= dVar5) {\n        uVar2 = dVar5 - *0x48f640 | 0x8000000000000000;\n    }\n    else {\n        uVar2 = dVar5;\n    }\n    *0x544ca0 = -*0x544b48 & uVar2 + uVar2 / 10 + -1 + *0x544b48;\n    if ((*0x544ca0 < *0x545408 + *0x5453f8) && (*0x544b48 <= (*0x545408 + *0x5453f8) - *0x544ca0)) {\n        uVar1 = 0x544ca0;\n    }\n    else {\n        *0x544ca0 = 0xffffffffffffffff;\n    }\n    return uVar1;\n}\n",
        "token_count": 617
    },
    "00421f60": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nvoid fcn.00421f60(ulong noname_0, ulong noname_1, uint64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    char cVar3;\n    ulong in_RAX;\n    ulong uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uint8_t *unaff_RSI;\n    uchar unaff_DIL;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = noname_0;\n            *(*0x20 + 0x19) = unaff_DIL;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x421fa5;\n            fcn.00422a40(arg3);\n            *(*0x20 + -0x38) = 0x421fb9;\n            cVar3 = fcn.00421760(*(*0x20 + 0x28));\n            if (cVar3 == '\\0') {\n                iVar9 = *(*0x20 + 0x10);\n            }\n            else {\n                iVar9 = *(*0x20 + 0x10);\n                *(iVar9 + 100) = 1;\n            }\n            if (*(*0x20 + 0x18) == '\\0') {\n                uVar1 = *(*0x20 + 0x19);\n                *(iVar9 + 0x62) = uVar1;\n                iVar2 = *(*0x20 + 0x28);\n                if (uVar1 >> 1 == 0) {\n                    *(iVar9 + 0x68) = iVar2 << 0xd;\n                    *(iVar9 + 0x38) = 1;\n                    *(iVar9 + 0x5c) = 0;\ncode_r0x0042207f:\n                    *(iVar9 + 0x30) = 0;\n                    *(iVar9 + 0x98) = 0;\n                    *(iVar9 + 0x40) = 0xffffffffffffffff;\n                    *(*0x20 + -0x38) = 0x4220a5;\n                    uVar4 = fcn.00423180();\n                    *(*(*0x20 + 0x10) + 0x50) = uVar4;\n                    *(*0x20 + -0x38) = 0x4220b7;\n                    uVar4 = fcn.004234a0();\n                    iVar9 = *(*0x20 + 0x10);\n                    *(iVar9 + 0x48) = uVar4;\n                    *(iVar9 + 0x58) = *(*(*0x20 + 8) + 0x10118);\n                    *(iVar9 + 99) = 1;\n                    goto code_r0x004220dd;\n                }\n                unaff_RBX = uVar1 >> 1;\n                if (unaff_RBX < 0x44) {\n                    uVar6 = *(unaff_RBX * 2 + 0x4d96c0);\n                    *(iVar9 + 0x68) = uVar6;\n                    if (uVar6 != 0) {\n                        *(iVar9 + 0x38) = (iVar2 << 0xd) / uVar6;\n                        *(iVar9 + 0x5c) = *(unaff_RBX * 4 + 0x4d9980);\n                        goto code_r0x0042207f;\n                    }\n                    goto code_r0x004221a5;\n                }\n            }\n            else {\n                *(iVar9 + 0x28) = 0;\n                *(iVar9 + 0x38) = 0;\n                *(iVar9 + 0x70) = *(iVar9 + 0x20) * 0x2000 + *(iVar9 + 0x18);\n                unaff_RSI = iVar9 + 99;\n                uVar1 = *unaff_RSI;\n                *unaff_RSI = 2;\n                arg3 = uVar1;\ncode_r0x004220dd:\n                unaff_RBX = *(iVar9 + 0x18);\n                *(*0x20 + -0x38) = 0x4220eb;\n                fcn.00421660(*(*0x20 + 0x28));\n                if (*(*0x20 + 0x18) != '\\0') goto code_r0x00422179;\n                uVar6 = *(*(*0x20 + 0x10) + 0x18);\n                uVar5 = uVar6 + 0x800000000000 >> 0x2a;\n                if (uVar5 < 0x40) {\n                    puVar7 = *(*(uVar5 * 8 + 0x516e30) + (uVar6 + 0x800000000000 >> 0x16 & 0xfffff) * 8) +\n                             (uVar6 >> 0x10 & 0x3f) + 0x11400;\n                    LOCK();\n                    *puVar7 = *puVar7 | 1 << (uVar6 >> 0xd & 7);\n                    LOCK();\n                    *(*(*0x20 + 8) + 0x10138) = *(*(*0x20 + 8) + 0x10138) + *(*0x20 + 0x28);\ncode_r0x00422179:\n                    *(*0x20 + -0x38) = 0x42217e;\n                    fcn.00458680();\n                    return;\n                }\n                *(*0x20 + -0x38) = 0x4221a5;\n                fcn.00458f40(0x40);\ncode_r0x004221a5:\n                *(*0x20 + -0x38) = 0x4221aa;\n                fcn.0042e760();\n            }\n            unaff_DIL = iVar9;\n            noname_0._0_1_ = 0x44;\n            *(*0x20 + -0x38) = 0x4221b7;\n            in_RAX = fcn.00458f20(0x44);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        puVar8[0x18] = noname_0;\n        puVar8[0x19] = unaff_DIL;\n        *(puVar8 + 0x20) = unaff_RSI;\n        *(puVar8 + 0x28) = arg3;\n        *(puVar8 + -8) = 0x4221da;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        noname_0._0_1_ = puVar8[0x18];\n        unaff_DIL = puVar8[0x19];\n        unaff_RSI = *(puVar8 + 0x20);\n        arg3 = *(puVar8 + 0x28);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1772
    },
    "0043e8e0": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong fcn.0043e8e0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong in_RAX;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    ulong unaff_RBP;\n    int32_t unaff_EDI;\n    int32_t iVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar7 = *0x20;\n        iVar8 = unaff_EDI;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x3b0 && *0x20 + -0x3b0 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x430;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x410) = in_XMM15;\n            iVar8 = *0x20 + -0x408;\n            *(*0x20 + -0x440) = *0x20 + -8;\n            *(*0x20 + -0x438) = 0x43e92f;\n            iVar4 = fcn.00459060();\n            unaff_RBP = *(*0x20 + -0x440);\n            if (unaff_EDI - arg1 >> 1 == 0x80) {\n                for (uVar6 = 0; uVar6 < 0x80; uVar6 = uVar6 + 1) {\n                    *(*0x20 + uVar6 * 8 + -0x410) = *(iVar4 + 0x198 + (uVar6 + arg1 & 0xff) * 8);\n                }\n                LOCK();\n                if (arg1 != *(iVar4 + 400)) {\n                    return 0;\n                }\n                *(iVar4 + 400) = arg1 + 0x80;\n                *(*0x20 + -0x10) = unaff_RBX;\n                uVar5 = 0;\n                while( true ) {\n                    if (0x7f < uVar5) {\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x420) = *(*0x20 + -0x410);\n                        *(*0x20 + -0x418) = *(*0x20 + -0x10);\n                        *(*0x20 + -0x438) = 0x43e9fc;\n                        fcn.00409860();\n                        iVar4 = *(*0x20 + -0x418);\n                        uVar1 = *(*0x20 + -0x420);\n                        uVar2 = *0x4f2708;\n                        iVar3 = *0x4f2710;\n                        if ((iVar4 != 0) && (*(iVar4 + 0xa0) = 0,  uVar2 = uVar1,  iVar3 = iVar4,  *0x4f2710 != 0)) {\n                            *(*0x4f2710 + 0xa0) = uVar1;\n                            uVar2 = *0x4f2708;\n                        }\n                        *0x4f2710 = iVar3;\n                        *0x4f2708 = uVar2;\n                        *0x4f2718 = *0x4f2718 + 0x81;\n                        *(*0x20 + -0x420) = in_XMM15;\n                        *(*0x20 + -0x438) = 0x43ea5b;\n                        fcn.00409a80();\n                        return 1;\n                    }\n                    iVar4 = uVar5 * 8;\n                    uVar5 = uVar5 + 1;\n                    if (0x80 < uVar5) break;\n                    *(*(*0x20 + iVar4 + -0x410) + 0xa0) = *(*0x20 + uVar5 * 8 + -0x410);\n                }\n                arg1._0_4_ = 0x81;\n                *(*0x20 + -0x438) = 0x43ea7a;\n                fcn.00458f20(0x81);\n            }\n            unaff_RBX = 0x1e;\n            *(*0x20 + -0x438) = 0x43ea8b;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + 0x1c) = iVar8;\n        *(puVar7 + -8) = 0x43eaa5;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        unaff_EDI = *(puVar7 + 0x1c);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1175
    },
    "0044c880": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c880(void)\n\n{\n    uint64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        in_RAX = in_RAX & 0xff;\n    }\n    if ((in_RAX & 0x80) != 0) {\n        fcn.0044b220(0);\n    }\n    fcn.0044b220(0);\n    return;\n}\n",
        "token_count": 135
    },
    "00451700": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.00451700(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        puVar7 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -8;\n            puVar6 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if (in_RAX == 0) {\n                return 0;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                iVar4 = iVar3;\n                uVar1 = *(in_RAX + iVar4 + 1);\n                uVar2 = iVar4 * 7;\n                if (uVar2 < 0) goto code_r0x004517c0;\n                uVar5 = uVar5 + ((uVar1 & 0x7f) << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n                iVar3 = iVar4 + 1;\n            } while ((uVar1 & 0x80) != 0);\n            if (uVar5 == 0) {\n                return 0;\n            }\n            iVar3 = in_RAX + iVar4 + 2;\n            if (-1 < uVar5) {\n                if (uVar5 <= -iVar3) {\n                    return iVar3;\n                }\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x10) = 0x4517b5;\n                    fcn.00452d00();\n                }\n                *(*0x20 + -0x10) = 0x4517ba;\n                fcn.00452d40();\n            }\n            *(*0x20 + -0x10) = 0x4517bf;\n            fcn.00452d00();\ncode_r0x004517c0:\n            *(*0x20 + -0x10) = 0x4517c5;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x4517d0;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n        unaff_RBP = puVar7;\n    } while( true );\n}\n",
        "token_count": 636
    },
    "004517e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint8_t * fcn.004517e0(void)\n\n{\n    int64_t iVar1;\n    uint8_t *puVar2;\n    uint64_t uVar3;\n    uint8_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar *puVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        puVar9 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar9 = *0x20 + -8;\n            puVar8 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if ((*in_RAX & 2) == 0) {\n                return NULL;\n            }\n            iVar6 = 0;\n            iVar5 = 0;\n            do {\n                iVar4 = iVar5;\n                uVar7 = iVar4 * 7;\n                if (uVar7 < 0) goto code_r0x004518ea;\n                iVar6 = iVar6 + ((in_RAX[iVar4 + 1] & 0x7f) << (uVar7 & 0x3f) & -(uVar7 < 0x40));\n                iVar5 = iVar4 + 1;\n            } while ((in_RAX[iVar4 + 1] & 0x80) != 0);\n            iVar5 = 0;\n            uVar7 = 0;\n            while( true ) {\n                iVar1 = iVar6 + iVar4 + iVar5;\n                uVar3 = iVar5 * 7;\n                if (uVar3 < 0) break;\n                uVar7 = uVar7 + ((in_RAX[iVar1 + 2] & 0x7f) << (uVar3 & 0x3f) & -(uVar3 < 0x40));\n                if ((in_RAX[iVar1 + 2] & 0x80) == 0) {\n                    puVar2 = in_RAX + iVar1 + 3;\n                    if (-1 < uVar7) {\n                        if (uVar7 <= -puVar2) {\n                            return puVar2;\n                        }\n                        if (puVar2 != NULL) {\n                            *(*0x20 + -0x10) = 0x4518d8;\n                            fcn.00452d00();\n                        }\n                        *(*0x20 + -0x10) = 0x4518dd;\n                        fcn.00452d40();\n                    }\n                    *(*0x20 + -0x10) = 0x4518e5;\n                    fcn.00452d00();\n                    break;\n                }\n                iVar5 = iVar5 + 1;\n            }\n            *(*0x20 + -0x10) = 0x4518ea;\n            fcn.0042e700();\ncode_r0x004518ea:\n            *(*0x20 + -0x10) = 0x4518ef;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x4518fa;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n        unaff_RBP = puVar9;\n    } while( true );\n}\n",
        "token_count": 806
    },
    "00451920": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong fcn.00451920(void)\n\n{\n    uint64_t uVar1;\n    uint8_t *in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == NULL) || ((*in_RAX & 4) == 0)) {\n                return 0;\n            }\n            iVar6 = 0;\n            iVar7 = 0;\n            do {\n                iVar3 = iVar7;\n                uVar1 = iVar3 * 7;\n                if (uVar1 < 0) goto code_r0x00451a60;\n                iVar6 = ((in_RAX[iVar3 + 1] & 0x7f) << (uVar1 & 0x3f) & -(uVar1 < 0x40)) + iVar6;\n                iVar7 = iVar3 + 1;\n            } while ((in_RAX[iVar3 + 1] & 0x80) != 0);\n            iVar7 = iVar6 + 2 + iVar3;\n            if ((*in_RAX & 2) == 0) {\ncode_r0x004519c2:\n                *(*0x20 + -0xc) = 0;\n                if (*0x20 + -0xc != in_RAX + iVar7) {\n                    *(*0x20 + -0xc) = *(in_RAX + iVar7);\n                }\n                *(*0x20 + -0x28) = 0x4519ed;\n                fcn.00450fa0();\n                *(*0x20 + -0x28) = 0x4519f2;\n                uVar2 = fcn.00451700();\n                return uVar2;\n            }\n            iVar7 = 0;\n            iVar4 = 0;\n            while( true ) {\n                uVar1 = iVar7 * 7;\n                if (uVar1 < 0) break;\n                iVar4 = iVar4 + ((in_RAX[iVar6 + iVar3 + iVar7 + 2] & 0x7f) << (uVar1 & 0x3f) & -(uVar1 < 0x40));\n                if ((in_RAX[iVar6 + iVar3 + iVar7 + 2] & 0x80) == 0) {\n                    iVar7 = iVar4 + iVar7 + 3 + iVar6 + iVar3;\n                    goto code_r0x004519c2;\n                }\n                iVar7 = iVar7 + 1;\n            }\n            *(*0x20 + -0x28) = 0x451a5c;\n            fcn.0042e700();\ncode_r0x00451a60:\n            *(*0x20 + -0x28) = 0x451a65;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x451a70;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 816
    },
    "0045ec20": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nint64_t fcn.0045ec20(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        puVar7 = unaff_RBP;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -8;\n            puVar6 = *0x20 + -8;\n            *(*0x20 + -8) = unaff_RBP;\n            if (in_RAX == 0) {\n                return 0;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                iVar4 = iVar3;\n                uVar1 = *(in_RAX + iVar4 + 1);\n                uVar2 = iVar4 * 7;\n                if (uVar2 < 0) goto code_r0x0045eccf;\n                uVar5 = uVar5 + ((uVar1 & 0x7f) << (uVar2 & 0x3f) & -(uVar2 < 0x40));\n                iVar3 = iVar4 + 1;\n            } while ((uVar1 & 0x80) != 0);\n            iVar3 = in_RAX + iVar4 + 2;\n            if (-1 < uVar5) {\n                if (uVar5 <= -iVar3) {\n                    return iVar3;\n                }\n                if (iVar3 != 0) {\n                    *(*0x20 + -0x10) = 0x45ecc5;\n                    fcn.00452d00();\n                }\n                *(*0x20 + -0x10) = 0x45ecca;\n                fcn.00452d40();\n            }\n            *(*0x20 + -0x10) = 0x45eccf;\n            fcn.00452d00();\ncode_r0x0045eccf:\n            *(*0x20 + -0x10) = 0x45ecd4;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + -8) = 0x45ecdf;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        *0x20 = puVar6;\n        unaff_RBP = puVar7;\n    } while( true );\n}\n",
        "token_count": 616
    },
    "0043e1e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint64_t fcn.0043e1e0(void)\n\n{\n    int32_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        iVar2 = *0x4f2708;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f2718 == 0) {\n                return 0;\n            }\n            if (*0x544a28 != 0) {\n                if (*0x544a28 == -1) {\n                    iVar1 = -*0x4f2718;\n                }\n                else {\n                    iVar1 = *0x4f2718 / *0x544a28;\n                }\n                iVar3 = iVar1 + 1;\n                if (*0x4f2718 < iVar1 + 1) {\n                    iVar3 = *0x4f2718;\n                }\n                if ((unaff_EBX < 1) || (iVar3 <= unaff_EBX)) {\n                    unaff_EBX = iVar3;\n                }\n                if (0x80 < unaff_EBX) {\n                    unaff_EBX = 0x80;\n                }\n                *0x4f2718 = *0x4f2718 - unaff_EBX;\n                if ((*0x4f2708 != 0) && (*0x4f2708 = *(*0x4f2708 + 0xa0),  *0x4f2708 == 0)) {\n                    *0x4f2710 = 0;\n                }\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x18) = in_RAX;\n                while( true ) {\n                    if (unaff_EBX + -1 < 1) break;\n                    *(*0x20 + -0x1c) = unaff_EBX + -1;\n                    if ((*0x4f2708 != 0) && (*0x4f2708 = *(*0x4f2708 + 0xa0),  *0x4f2708 == 0)) {\n                        *0x4f2710 = 0;\n                    }\n                    *(*0x20 + -0x40) = 0x43e2a8;\n                    fcn.0043e7e0(0);\n                    unaff_EBX = *(*0x20 + -0x1c);\n                    iVar2 = *(*0x20 + -0x10);\n                }\n                return iVar2;\n            }\n            *(*0x20 + -0x40) = 0x43e305;\n            in_RAX = fcn.0042e760();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x43e314;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 798
    },
    "00447f80": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00447f80(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    ulong uVar2;\n    uint64_t uVar3;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                return 0x4758e9;\n            }\n            arg1_00 = *(unaff_RBX + 0x28);\n            uVar3 = arg1 + *(in_RAX + 0x20);\n            if (uVar3 < arg1_00) {\n                uVar1 = *(*(unaff_RBX + 0x20) + uVar3 * 4);\n                if (uVar1 == 0xffffffff) {\n                    return 0x4758e9;\n                }\n                uVar3 = *(unaff_RBX + 0x40);\n                arg1_00 = *(unaff_RBX + 0x38);\n                if (uVar1 < uVar3) {\n                    *(*0x20 + -0x20) = uVar1 + arg1_00;\n                    *(*0x20 + -0x38) = 0x447fd9;\n                    uVar2 = fcn.004466c0();\n                    *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                    *(*0x20 + -0x10) = uVar2;\n                    return *(*0x20 + -0x18);\n                }\n                *(*0x20 + -0x38) = 0x44802e;\n                fcn.00458f20(uVar3);\n            }\n            *(*0x20 + -0x38) = 0x448038;\n            in_RAX = fcn.00458f20(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x44804c;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 703
    },
    "00448060": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.00448060(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    ulong uVar3;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_RAX != 0) {\n        uVar1 = fcn.004477a0(*(in_RAX + 0x14));\n        iVar2 = fcn.004477a0(*(in_RAX + 0x18));\n        if (((uVar1 != 0xffffffff) && (iVar2 != -1)) && (*(unaff_RBX + 0x40) != uVar1 && uVar1 <= *(unaff_RBX + 0x40)))\n        {\n            uVar3 = fcn.00447f80(uVar1);\n            return uVar3;\n        }\n        return 0x4758e9;\n    }\n    return 0x4758e9;\n}\n",
        "token_count": 263
    },
    "00451240": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint64_t fcn.00451240(ulong param_1, int64_t param_2)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 0) || (unaff_EBX == 0xffffffff)) {\n                return 0;\n            }\n            for (iVar2 = 0x4d9aa0; iVar2 != 0; iVar2 = *(iVar2 + 0x230)) {\n                if ((*(iVar2 + 0x128) < in_RAX || *(iVar2 + 0x128) == in_RAX) &&\n                   (in_RAX <= *(iVar2 + 0x130) && *(iVar2 + 0x130) != in_RAX)) goto code_r0x0045129c;\n            }\n            iVar2 = 0;\ncode_r0x0045129c:\n            *(*0x20 + 0x10) = unaff_EBX;\n            if (iVar2 == 0) {\n                *(*0x20 + -0x38) = in_RAX;\n                *(*0x20 + -0x58) = 0x45131c;\n                fcn.00409860();\n                *(*0x20 + -0x58) = 0x451333;\n                puVar1 = fcn.0040db00(*(*0x20 + 0x10));\n                uVar3 = *puVar1;\n                *(*0x20 + -0x20) = uVar3;\n                *(*0x20 + -0x58) = 0x45134a;\n                fcn.00409a80();\n                if (*(*0x20 + -0x20) != 0) {\n                    return *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x58) = 0x451359;\n                fcn.00431980();\n                *(*0x20 + -0x58) = 0x45136a;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x451376;\n                fcn.004320e0();\n                *(*0x20 + -0x58) = 0x451387;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x451391;\n                fcn.004320e0();\n                *(*0x20 + -0x58) = 0x4513a5;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x4513aa;\n                fcn.00431a00();\n                iVar2 = 0x4d9aa0;\n                while (iVar2 != 0) {\n                    *(*0x20 + -0x18) = iVar2;\n                    uVar3 = *(iVar2 + 0x128);\n                    *(*0x20 + -0x28) = uVar3;\n                    param_2 = *(iVar2 + 0x130);\n                    *(*0x20 + -0x30) = param_2;\n                    *(*0x20 + -0x58) = 0x4513df;\n                    fcn.00431980();\n                    *(*0x20 + -0x58) = 0x4513f0;\n                    fcn.00432280();\n                    *(*0x20 + -0x58) = 0x4513fa;\n                    fcn.004320e0();\n                    *(*0x20 + -0x58) = 0x45140b;\n                    fcn.00432280();\n                    *(*0x20 + -0x58) = 0x451415;\n                    fcn.004320e0();\n                    *(*0x20 + -0x58) = 0x45141a;\n                    fcn.00431be0();\n                    *(*0x20 + -0x58) = 0x45141f;\n                    fcn.00431a00();\n                    iVar2 = *(*(*0x20 + -0x18) + 0x230);\n                }\n                *(*0x20 + -0x58) = 0x451445;\n                fcn.00430040();\n            }\n            else {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x58) = 0x4512c5;\n                puVar1 = fcn.0040db00(unaff_EBX);\n                if (*puVar1 != 0) {\n                    return *puVar1;\n                }\n                param_2 = *(*(*0x20 + -0x10) + 0x128);\n                uVar3 = *(*(*0x20 + -0x10) + 0x130);\n                if (param_2 + *(*0x20 + 0x10) <= uVar3) {\n                    return param_2 + *(*0x20 + 0x10);\n                }\n            }\n            *(*0x20 + -0x28) = param_2;\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x58) = 0x451454;\n            fcn.00431980();\n            *(*0x20 + -0x58) = 0x451465;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x451471;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x451485;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x45148f;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4514a5;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4514af;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4514b4;\n            fcn.00431be0();\n            *(*0x20 + -0x58) = 0x4514b9;\n            fcn.00431a00();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x4514ca;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x4514d9;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1654
    },
    "00402880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00402880(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            if (*(in_RAX + 0x18) != NULL) {\n                if ((*(in_RAX + 0x17) & 0x20) != 0) {\n                    return in_RAX & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(in_RAX + 0x18);\n                *(*0x20 + -0x38) = 0x4028cc;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4028ea;\n            fcn.00450e00();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x402905;\n            fcn.00445d60(0x1c);\n            *(*0x20 + -0x38) = 0x40290a;\n            unaff_RBX = fcn.004093e0();\n            *(*0x20 + -0x38) = 0x402919;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40292e;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "00402960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00402960(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0) {\n                return 1;\n            }\n            uVar2 = *(in_RAX + 8);\n            if (*(uVar2 + 0x18) != NULL) {\n                if ((*(uVar2 + 0x17) & 0x20) != 0) {\n                    return uVar2 & 0xffffffffffffff00 | unaff_RBX == arg1;\n                }\n                pcVar1 = **(uVar2 + 0x18);\n                *(*0x20 + -0x38) = 0x4029af;\n                uVar2 = (*pcVar1)();\n                return uVar2;\n            }\n            *(*0x20 + -0x38) = 0x4029cd;\n            fcn.00450e00();\n            arg1 = 0x1c;\n            *(*0x20 + -0x38) = 0x4029e6;\n            fcn.00445d60(0x1c);\n            *(*0x20 + -0x38) = 0x4029eb;\n            unaff_RBX = fcn.004093e0();\n            *(*0x20 + -0x38) = 0x4029fa;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x402a0f;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 587
    },
    "00402ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.00402ea0(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    uint32_t uStack32;\n    \n    if (in_RAX == 0) {\n        fcn.00430040();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0x100) = *(iVar2 + 0x100) + 1;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + 1;\n    **(iVar2 + 0x110) = 0;\n    fcn.004546a0();\n    while( true ) {\n        LOCK();\n        if (*(iVar2 + 0x330) == 0) break;\n        fcn.004567a0();\n    }\n    *(iVar2 + 0x330) = 1;\n    *(iVar2 + 0xe8) = 1;\n    fcn.004586a0();\n    *(iVar2 + 0xe8) = 0;\n    *(iVar2 + 0x108) = *(iVar2 + 0x108) + -1;\n    uVar1 = *(iVar2 + 0x330);\n    *(iVar2 + 0x330) = 0;\n    fcn.004546e0(iVar2, uVar1);\n    return uStack32;\n}\n",
        "token_count": 365
    },
    "004049e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004049e0(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004102a0(arg1);\n    fcn.00459880(*in_RAX);\n    return;\n}\n",
        "token_count": 106
    },
    "00404a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404a60(ulong arg1)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004102a0(*(unaff_RBX + 0x18));\n    fcn.00459880(*in_RAX);\n    return;\n}\n",
        "token_count": 123
    },
    "00409260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00409260(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = fcn.0040b060(1, *in_RAX);\n    fcn.0040f2c0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "004092e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004092e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = fcn.0040b060(0, *in_RAX, param_3, param_4, unaff_RBX);\n    fcn.00459880(*in_RAX);\n    return uVar1;\n}\n",
        "token_count": 160
    },
    "00415f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00415f60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x38) = 0x415f85;\n            fcn.00433660();\n            *(*0x20 + -0x38) = 0x415f93;\n            fcn.00409860();\n            *(*0x20 + -0x20) = *0x517080;\n            *(*0x20 + -0x10) = *0x517078;\n            *(*0x20 + -0x38) = 0x415fb9;\n            fcn.00409a80();\n            iVar2 = *(*0x20 + -0x20);\n            iVar3 = *(*0x20 + -0x10);\n            iVar1 = 0;\n            while( true ) {\n                if (iVar2 <= iVar1) {\n                    *0x4f2140 = 0;\n                    *0x4f21e0 = *0x545350;\n                    return;\n                }\n                if (0x3f < *(iVar3 + iVar1 * 8) >> 0x14) break;\n                *(*0x20 + -0x18) = iVar1;\n                *(*0x20 + -0x38) = 0x415ff9;\n                fcn.00459580();\n                iVar1 = *(*0x20 + -0x18) + 1;\n                iVar2 = *(*0x20 + -0x20);\n                iVar3 = *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x38) = 0x416058;\n            fcn.00458f40(0x40);\n        }\n        *(puVar4 + -8) = 0x41605e;\n        fcn.0045b2e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 547
    },
    "00418200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.00418200(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar2 = *0x4f21f8;\n    iVar1 = *0x4f21f0;\n    if (*0x544a1c == 0) {\n        fcn.00409a80();\n        return 1;\n    }\n    *(unaff_R14 + 0xa0) = 0;\n    iVar3 = unaff_R14;\n    if (*0x4f21f8 != 0) {\n        *(*0x4f21f8 + 0xa0) = unaff_R14;\n        iVar3 = *0x4f21f0;\n    }\n    *0x4f21f0 = iVar3;\n    if (*0x5453a0 < 1) {\n        *0x4f21f8 = unaff_R14;\n        fcn.00432b60(0xb);\n        return 1;\n    }\n    *0x4f21f0 = iVar1;\n    *0x4f21f8 = iVar2;\n    if (iVar2 != 0) {\n        *(iVar2 + 0xa0) = 0;\n    }\n    fcn.00409a80();\n    return 0;\n}\n",
        "token_count": 357
    },
    "00420d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00420d00(ulong param_1, ulong param_2, ulong param_3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00413340(0x47cc18);\n    fcn.00413340(0);\n    fcn.00413340(0);\n    fcn.00413340(0);\n    fcn.00413340(0);\n    fcn.00413340(0);\n    *(in_RAX + 0x16a50) = 0;\n    for (iVar1 = 0; iVar1 < 0x88; iVar1 = iVar1 + 1) {\n        *(in_RAX + 0x10410 + iVar1 * 0xc0) = iVar1;\n    }\n    fcn.00423660(0x5474b8, in_RAX + 8, param_3);\n    return;\n}\n",
        "token_count": 262
    },
    "00422aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00422aa0(void)\n\n{\n    uchar (**ppauVar1) [16];\n    uchar (**in_RAX) [16];\n    uchar (*unaff_RBX) [16];\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            ppauVar1 = *unaff_RBX[1];\n            if (in_RAX == ppauVar1) {\n                if (*in_RAX == unaff_RBX) {\n                    *in_RAX = **unaff_RBX;\n                }\n                else {\n                    **(*unaff_RBX + 8) = **unaff_RBX;\n                }\n                if (in_RAX[1] == unaff_RBX) {\n                    in_RAX[1] = *(*unaff_RBX + 8);\n                }\n                else {\n                    *(**unaff_RBX + 8) = *(*unaff_RBX + 8);\n                }\n                *unaff_RBX = in_XMM15;\n                *unaff_RBX[1] = 0;\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = ppauVar1;\n            *(*0x20 + -0x18) = *unaff_RBX[2];\n            *(*0x20 + -0x20) = *(*unaff_RBX + 8);\n            *(*0x20 + -0x38) = 0x422b37;\n            fcn.00431980();\n            *(*0x20 + -0x38) = 0x422b48;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422b52;\n            fcn.00431f80();\n            *(*0x20 + -0x38) = 0x422b65;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422b6f;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422b85;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422b8f;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422ba5;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422baf;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422bc5;\n            fcn.00432280();\n            *(*0x20 + -0x38) = 0x422bcf;\n            fcn.00432240();\n            *(*0x20 + -0x38) = 0x422bd4;\n            fcn.00431be0();\n            *(*0x20 + -0x38) = 0x422bd9;\n            fcn.00431a00();\n            unaff_RBX = 0x10;\n            *(*0x20 + -0x38) = 0x422bea;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x422bfa;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 931
    },
    "004273e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004273e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00426ac0(arg1);\n    fcn.00426bc0(arg1);\n    return;\n}\n",
        "token_count": 98
    },
    "0042d1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0042d1a0(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    fcn.00409860();\n    if (*(iVar1 + 0x310) != 0) {\n        fcn.0042d480();\n        *(iVar1 + 0x310) = 0;\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 108
    },
    "00431800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00431800(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    uint64_t arg1_00;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    int64_t arg1_01;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x38) = 0x43182c;\n            fcn.00431980();\n            if (*0x544a44 != 0) {\ncode_r0x00431849:\n                *(*0x20 + -0x38) = 0x43184e;\n                fcn.00431a00();\n                return;\n            }\n            arg1_00 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + 8);\n            uVar2 = 0;\n            while( true ) {\n                if (arg1_00 <= uVar2) goto code_r0x00431849;\n                if (0x200 < *0x544b50) goto code_r0x00431938;\n                iVar1 = *0x544b50 - 0x200;\n                if (arg1_00 < uVar2) break;\n                iVar3 = arg1_00 - uVar2;\n                arg1_01 = -iVar1;\n                if (-iVar3 != iVar1 && iVar3 <= -iVar1) {\n                    arg1_01 = iVar3;\n                }\n                unaff_RBX = iVar6 + (uVar2 - iVar4 >> 0x3f & uVar2);\n                if (unaff_RBX != (iVar1 >> 0x3f & *0x544b50) + 0x545480) {\n                    *(*0x20 + -0x10) = uVar2;\n                    *(*0x20 + -0x18) = arg1_01;\n                    *(*0x20 + -0x38) = 0x43190e;\n                    fcn.00459880(arg1_01);\n                    iVar4 = *(*0x20 + 0x18);\n                    iVar6 = *(*0x20 + 8);\n                    arg1_00 = *(*0x20 + 0x10);\n                    arg1_01 = *(*0x20 + -0x18);\n                    uVar2 = *(*0x20 + -0x10);\n                }\n                *0x544b50 = (*0x544b50 + arg1_01) % 0x200;\n                uVar2 = arg1_01 + uVar2;\n            }\n            *(*0x20 + -0x38) = 0x431938;\n            fcn.00458fe0(arg1_00);\ncode_r0x00431938:\n            arg1 = 0x200;\n            *(*0x20 + -0x38) = 0x431945;\n            in_RAX = fcn.00458fe0(0x200);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + -8) = 0x43195a;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 967
    },
    "0043ab40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043ab40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 82
    },
    "0043e5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.0043e5e0(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int32_t *piVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t arg1;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f26f0 == NULL) {\n                return 0;\n            }\n            *(*0x20 + -0x10) = *0x4f26f0;\n            piVar3 = *0x4f26f0;\n            if (in_RAX == 0) {\n                *(*0x20 + -0x38) = 0x43e619;\n                fcn.0045a8a0();\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                in_RAX = *(*0x20 + -0x30);\n                piVar3 = *(*0x20 + -0x10);\n            }\n            iVar2 = *piVar3;\n            uVar5 = iVar2 % 0x20;\n            if (-1 < uVar5) {\n                uVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                arg1 = *0x4f1d38;\n                if (uVar6 < *0x4f1d38) {\n                    puVar1 = *0x4f1d30 + uVar6 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 | 1 << (uVar5 & 0x1f) & -(uVar5 < 0x20);\n                    arg1 = *0x4f1cf8;\n                    iVar2 = *piVar3;\n                    uVar5 = iVar2 % 0x20;\n                    if (-1 < uVar5) {\n                        uVar6 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                        if (uVar6 < *0x4f1cf8) {\n                            *(*0x20 + -0x18) = in_RAX;\n                            puVar1 = *0x4f1cf0 + uVar6 * 4;\n                            LOCK();\n                            *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\n                            *0x4f26f0 = *(piVar3 + 2);\n                            LOCK();\n                            *0x4f26f8 = *0x4f26f8 + -1;\n                            *(*0x20 + -0x38) = 0x43e72e;\n                            fcn.00416ac0(in_RAX);\n                            return *(*0x20 + -0x10);\n                        }\n                        *(*0x20 + -0x38) = 0x43e753;\n                        fcn.00458f20(*0x4f1cf8);\n                    }\n                    *(*0x20 + -0x38) = 0x43e758;\n                    fcn.0042e700();\n                }\n                *(*0x20 + -0x38) = 0x43e765;\n                fcn.00458f20(arg1);\n            }\n            *(*0x20 + -0x38) = 0x43e76a;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x43e775;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 958
    },
    "0043ff20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0043ff20(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        uVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RDI < 0) {\n                unaff_RDI = 0;\n            }\n            while( true ) {\n                if (unaff_RBX <= unaff_RDI) {\n                    return;\n                }\n                *(*0x20 + -0x18) = unaff_RDI;\n                if (0x10 < unaff_RDI) {\n                    unaff_RDI = 0x10;\n                }\n                *(*0x20 + -0x10) = unaff_RDI;\n                *(*0x20 + -0x38) = 0x43ff77;\n                fcn.0045a8a0();\n                unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                uVar3 = *(*0x20 + -0x30);\n                arg1 = *(*0x20 + 0x10);\n                if (arg1 <= *(*0x20 + -0x18) - *(*0x20 + -0x10)) break;\n                *(*0x20 + -0x38) = 0x43ffb2;\n                uVar1 = fcn.00458960(*(*0x20 + -0x10));\n                unaff_RBX = *(*0x20 + 0x10);\n                arg1 = *(*0x20 + 8);\n                iVar2 = 0;\n                for (unaff_RDI = *(*0x20 + -0x18); (iVar2 < 8 && (unaff_RDI < unaff_RBX)); unaff_RDI = unaff_RDI + 1) {\n                    if (unaff_RBX <= unaff_RDI) {\n                        *(*0x20 + -0x38) = 0x440005;\n                        fcn.00458f20(unaff_RBX);\n                        goto code_r0x00440005;\n                    }\n                    *(arg1 + unaff_RDI) = uVar1;\n                    iVar2 = iVar2 + 1;\n                    uVar1 = uVar1 >> 8;\n                }\n            }\ncode_r0x00440005:\n            *(*0x20 + -0x38) = 0x44000d;\n            in_RAX = fcn.00458f20(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = uVar3;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + -8) = 0x440027;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 878
    },
    "00447da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.00447da0(void)\n\n{\n    int32_t iVar1;\n    uint64_t arg1;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if ((in_RAX == 0) || (iVar1 = *(in_RAX + 4),  iVar1 == 0)) {\n                iVar3 = 0;\n                goto code_r0x00447de4;\n            }\n            arg1 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (iVar1 < arg1) {\n                iVar3 = unaff_RBX + iVar1;\ncode_r0x00447de4:\n                *(*0x20 + -0x20) = iVar3;\n                *(*0x20 + -0x38) = 0x447df1;\n                uVar2 = fcn.004466c0();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar2;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x447e1a;\n            in_RAX = fcn.00458f20(arg1);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x447e2a;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 557
    },
    "00447ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.00447ee0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x30;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (in_RAX == 0) {\n                iVar2 = 0;\n                goto code_r0x00447f1d;\n            }\n            arg1_00 = *(unaff_RBX + 0x10);\n            unaff_RBX = *(unaff_RBX + 8);\n            if (arg1 < arg1_00) {\n                iVar2 = unaff_RBX + arg1;\ncode_r0x00447f1d:\n                *(*0x20 + -0x20) = iVar2;\n                *(*0x20 + -0x38) = 0x447f2a;\n                uVar1 = fcn.004466c0();\n                *(*0x20 + -0x18) = *(*0x20 + -0x20);\n                *(*0x20 + -0x10) = uVar1;\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x38) = 0x447f56;\n            in_RAX = fcn.00458f20(arg1_00);\n            arg1._0_4_ = arg1_00;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x447f6a;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 591
    },
    "00449cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00449cc0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong *puVar2;\n    ulong in_RAX;\n    int64_t noname_1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    noname_1 = 0;\ncode_r0x00449cf1:\n    if (arg1 <= noname_1) {\n        return;\n    }\n    puVar2 = *(unaff_RBX + noname_1 * 8);\ncode_r0x00449dda:\n    iVar1 = *(puVar2 + 8);\n    switch(iVar1) {\n    case 0:\n    case 5:\n        fcn.0044afe0();\n        goto code_r0x00449dda;\n    case 1:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 9;\n            *puVar2 = 0;\n            fcn.00448fe0(arg1, noname_1, in_RAX, 9);\n            LOCK();\n            if (*(puVar2 + 8) == 9) {\n                *(puVar2 + 8) = 1;\n            }\n            else {\n                fcn.0044afe0();\n            }\n            goto code_r0x00449ceb;\n        }\n        goto code_r0x00449dda;\n    case 2:\n    case 4:\n    case 9:\n        fcn.0044afe0();\n        goto code_r0x00449dda;\n    case 3:\n        LOCK();\n        if (iVar1 == *(puVar2 + 8)) {\n            *(puVar2 + 8) = 5;\n            *puVar2 = 0;\n            goto code_r0x00449ceb;\n        }\n        goto code_r0x00449dda;\n    case 6:\n        fcn.004567a0();\n        goto code_r0x00449dda;\n    case 7:\n    case 8:\n        break;\n    default:\n        fcn.0044afe0();\n        goto code_r0x00449dda;\n    }\n    LOCK();\n    if (iVar1 == *(puVar2 + 8)) goto code_r0x00449e72;\n    goto code_r0x00449dda;\ncode_r0x00449e72:\n    *(puVar2 + 8) = 9;\n    puVar2[1] = puVar2[7];\n    *puVar2 = 0;\n    fcn.00448fe0(puVar2[7], noname_1, in_RAX, 9);\n    LOCK();\n    if (*(puVar2 + 8) == 9) {\n        *(puVar2 + 8) = 1;\n    }\n    else {\n        fcn.0044afe0();\n    }\ncode_r0x00449ceb:\n    noname_1 = noname_1 + 1;\n    goto code_r0x00449cf1;\n}\n",
        "token_count": 710
    },
    "0044a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0044a200(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int64_t noname_0;\n    int64_t unaff_RBX;\n    int64_t noname_1;\n    ulong in_R8;\n    ulong in_R9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (noname_1 = 0; noname_1 < arg1; noname_1 = noname_1 + 1) {\n        noname_0 = *(unaff_RBX + noname_1 * 8);\n        fcn.00448fe0(noname_0, noname_1, in_R8, in_R9);\n        LOCK();\n        piVar1 = noname_0 + 0x40;\n        if (*piVar1 == 9) {\n            *piVar1 = 1;\n        }\n        else {\n            fcn.0044afe0();\n        }\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0044c820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *(unaff_R14 + 0xe0) = *(*(unaff_R14 + 0x30) + 0xa0);\n    fcn.0044b220(0);\n    return;\n}\n",
        "token_count": 115
    },
    "0044f460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f460(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0044f560(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "0044f4c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0044f4c0(ulong arg1)\n\n{\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(*(unaff_RDI + 0x30) + 0x2b0) != 0) {\n        fcn.0044f560(0);\n        return;\n    }\n    fcn.0044f560(arg1);\n    return;\n}\n",
        "token_count": 141
    },
    "00454be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454be0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00440360(3);\n    return;\n}\n",
        "token_count": 86
    },
    "00455500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00455500(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t in_GS_OFFSET;\n    uchar auStackX8 [16];\n    int64_t iStackX24;\n    ulong uStackX32;\n    \n    iStackX24 = 0;\n    uStackX32 = 0;\n    piVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = **(in_GS_OFFSET + *0x544bc0);\n    *(*(iVar2 + 0x30) + 0x130) = iVar2;\n    *(iVar2 + 0xe8) = *(iVar2 + 0x30);\n    iVar2 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar2 + 0x2c0) = _sym.imp.kernel32.dll_GetProcAddress;\n    *(iVar2 + 0x2c8) = 2;\n    *(iVar2 + 0x2d0) = auStackX8;\n    fcn.00402ea0(iVar2 + 0x2c0);\n    iStackX24 = *(iVar2 + 0x2d8);\n    if (iStackX24 == 0) {\n        uStackX32 = *(iVar2 + 0x2e8);\n    }\n    fcn.0043b8e0();\n    return;\n}\n",
        "token_count": 347
    },
    "0045a3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0045a3c0(void)\n\n{\n    (*_sym.imp.kernel32.dll_GetStdHandle)();\n    (*_sym.imp.kernel32.dll_WriteFile)();\n    fcn.004588c0();\n    return;\n}\n",
        "token_count": 50
    },
    "0045a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a7a0(void)\n\n{\n    int32_t iStackX8;\n    uchar auStack48 [32];\n    int64_t iStack16;\n    uchar *puStack8;\n    \n    puStack8 = auStack48;\n    iStack16 = iStackX8;\n    (**0x4f1570)(0xffffffffffffffff, 0);\n    return;\n}\n",
        "token_count": 86
    },
    "0045a880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0045a880(void)\n\n{\n    (*_sym.imp.kernel32.dll_SwitchToThread)();\n    return;\n}\n",
        "token_count": 29
    },
    "0045a900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0045a900(void)\n\n{\n    uint64_t uVar1;\n    \n    uVar1 = (*_sym.imp.kernel32.dll_TlsAlloc)();\n    if (0x3f < uVar1) {\n        *(*0x20 + -8) = 0x45a92c;\n        fcn.004588c0();\n    }\n    *0x544bc0 = uVar1 * 8 + 0x1480;\n    return;\n}\n",
        "token_count": 104
    },
    "004600e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004600e0(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RDX;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00402500(arg1, in_RDX);\n    if (iStack24 != -1) {\n        return 0;\n    }\n    uVar1 = fcn.00441da0(unaff_RBX);\n    return uVar1;\n}\n",
        "token_count": 155
    },
    "004104e0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.004104e0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    char unaff_BL;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_BL == '\\0') && ((*(in_RAX + 0x62) & 1) == 0)) {\n        if (*(in_RAX + 0x68) == 8) {\n            noname_1 = *(in_RAX + 0x20) << 0xd;\n            uVar1 = *(in_RAX + 0x18) >> 3 & 0x3f;\n            for (uVar2 = 0; uVar2 < noname_1 >> 3; uVar2 = uVar2 + 0x40) {\n                fcn.00410640(uVar1, noname_1, 0x40);\n            }\n            fcn.00410820(uVar1, noname_1, noname_1);\n            return;\n        }\n        return;\n    }\n    uVar1 = *(in_RAX + 0x18) >> 3 & 0x3f;\n    fcn.00410820(uVar1, uVar1, *(in_RAX + 0x20) << 0xd);\n    return;\n}\n",
        "token_count": 351
    },
    "00421660": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00421660(uint64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t in_RAX;\n    uint64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong unaff_RDI;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    \n    uVar2 = unaff_RBX + 0x800000000000 >> 0x2a;\n    if (0x3f < uVar2) {\ncode_r0x00421739:\n        fcn.00458f40(0x40);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar3 = *(*(in_RAX + 0x10170 + uVar2 * 8) + (unaff_RBX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n    uVar2 = 0;\n    do {\n        if (arg1 <= uVar2) {\n            return;\n        }\n        uVar6 = (unaff_RBX >> 0xd) + uVar2 & 0x1ff;\n        if (uVar6 == 0) {\n            uVar4 = uVar2 * 0x2000 + unaff_RBX + 0x800000000000;\n            uVar5 = uVar4 >> 0x2a;\n            if (0x3f < uVar5) {\n                fcn.00458f40(0x40);\n                goto code_r0x00421739;\n            }\n            iVar3 = *(*(in_RAX + 0x10170 + uVar5 * 8) + (uVar4 >> 0x16 & 0xfffff) * 8);\n        }\n        *(iVar3 + 0x10400 + uVar6 * 8) = unaff_RDI;\n        uVar2 = uVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00421760": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nuint64_t fcn.00421760(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint64_t in_R10;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        uVar5 = in_R10;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar5 = 0;\n            while( true ) {\n                uVar4 = uVar5;\n                if (arg1 == 0) {\n                    return uVar5;\n                }\n                uVar8 = unaff_RBX + 0x800000000000U >> 0x2a;\n                uVar5 = in_R10;\n                if (0x3f < uVar8) break;\n                iVar2 = *(*(in_RAX + 0x10170 + uVar8 * 8) + (unaff_RBX + 0x800000000000U >> 0x16 & 0xfffff) * 8);\n                uVar9 = *(iVar2 + 0x114c8);\n                uVar6 = unaff_RBX & 0x3fffff;\n                uVar8 = arg1 * 0x2000 + uVar6;\n                uVar5 = in_R10 & 0xffffff00 | uVar6 < uVar9 | uVar4;\n                if (0x400000 < uVar8) {\n                    uVar8 = 0x400000;\n                }\n                while (uVar9 < uVar8) {\n                    LOCK();\n                    puVar1 = iVar2 + 0x114c8;\n                    uVar3 = *puVar1;\n                    *puVar1 = *puVar1 ^ (uVar9 == uVar3) * (*puVar1 ^ uVar8);\n                    if (uVar9 == uVar3) break;\n                    uVar9 = *(iVar2 + 0x114c8);\n                    if ((uVar9 <= uVar8) && (uVar6 < uVar9)) {\n                        unaff_RBX = 0x33;\n                        *(*0x20 + -0x20) = 0x42186c;\n                        fcn.00430040();\n                        goto code_r0x0042186c;\n                    }\n                }\n                unaff_RBX = (uVar8 - uVar6) + unaff_RBX;\n                arg1 = arg1 - (uVar8 - uVar6 >> 0xd);\n                in_R10 = uVar5;\n            }\ncode_r0x0042186c:\n            arg1 = 0x40;\n            *(*0x20 + -0x20) = 0x421879;\n            in_RAX = fcn.00458f40(0x40);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x42188e;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n        in_R10 = uVar5;\n    } while( true );\n}\n",
        "token_count": 900
    },
    "00422200": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.00422200(void)\n\n{\n    uint64_t uVar1;\n    ulong uVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t iVar5;\n    int64_t arg1;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar5 = (unaff_RBX + 0x1ffU & 0xfffffffffffffe00) * 0x2000;\n    uVar1 = iVar5 + *(in_RAX + 0x10400);\n    uVar6 = -*0x544b48 & *0x544b48 + -1 + uVar1;\n    if ((*(in_RAX + 0x10408) < uVar6) || (uVar1 < *(in_RAX + 0x10400))) {\n        iVar3 = fcn.0040a520(in_RAX + 0x10390);\n        uVar2 = *0x5453f8;\n        if (iVar3 == 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00432280();\n            fcn.00431f80(uVar2);\n            fcn.00432280();\n            fcn.00431a00();\n            return 0;\n        }\n        if (iVar3 == *(in_RAX + 0x10408)) {\n            *(in_RAX + 0x10408) = iVar3 + iVar5;\n            arg1 = 0;\n        }\n        else {\n            arg1 = *(in_RAX + 0x10408) - *(in_RAX + 0x10400);\n            if (arg1 == 0) {\n                arg1 = 0;\n            }\n            else {\n                fcn.004129e0(0x545400);\n                iVar4 = fcn.00429b00();\n                LOCK();\n                *(iVar4 + 8) = *(iVar4 + 8) + arg1;\n                fcn.00429be0();\n                fcn.004237e0(arg1);\n            }\n            *(in_RAX + 0x10400) = iVar3;\n            *(in_RAX + 0x10408) = iVar3 + iVar5;\n        }\n        uVar6 = -*0x544b48 & *(in_RAX + 0x10400) + iVar5 + *0x544b48 + -1;\n    }\n    else {\n        arg1 = 0;\n    }\n    iVar5 = *(in_RAX + 0x10400);\n    *(in_RAX + 0x10400) = uVar6;\n    iVar5 = uVar6 - iVar5;\n    fcn.004129e0(0x545400);\n    iVar3 = fcn.00429b00();\n    LOCK();\n    *(iVar3 + 8) = *(iVar3 + 8) + iVar5;\n    fcn.00429be0();\n    fcn.004237e0(iVar5);\n    return arg1 + iVar5;\n}\n",
        "token_count": 742
    },
    "00423a20": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nvoid fcn.00423a20(int64_t arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t unaff_RBX;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    uchar unaff_SIL;\n    uint64_t unaff_RDI;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    uint64_t noname_1;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x38 && *0x20 + -0x38 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0xb8;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            uVar10 = unaff_RBX + 0x800000000000;\n            *(*0x20 + -0x20) = uVar10;\n            uVar11 = uVar10 >> 0x16;\n            *(*0x20 + -0x28) = uVar11;\n            uVar9 = arg1 * 0x2000 + unaff_RBX + 0x7fffffffffff;\n            *(*0x20 + -0x30) = uVar9;\n            uVar9 = uVar9 >> 0x16;\n            if (uVar9 == uVar11) {\n                uVar5 = *(in_RAX + 0x68);\n                noname_1 = *(in_RAX + 0x60);\n                uVar7 = unaff_RBX;\n                if (uVar5 <= uVar11) goto code_r0x00423e45;\n                noname_1 = *(noname_1 + uVar11 * 8);\n                if (0x1fff < uVar10 >> 0x23) goto code_r0x00423e38;\n                *(*0x20 + -0x90) = noname_1;\n                iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                *(*0x20 + -0xc0) = 0x423c2f;\n                iVar1 = fcn.00426f00(iVar1 + (uVar11 & 0x1fff) * 0x80, noname_1, uVar9);\n                if (iVar1 == *(*0x20 + -0x90)) {\n                    return;\n                }\n                iVar6 = *(*0x20 + 8);\n                uVar11 = *(iVar6 + 0x68);\n                uVar9 = *(iVar6 + 0x60);\n                if (uVar11 <= *(*0x20 + -0x28)) goto code_r0x00423e30;\n                *(uVar9 + *(*0x20 + -0x28) * 8) = iVar1;\n                goto code_r0x00423c72;\n            }\n            *(*0x20 + -0x38) = uVar9;\n            if (unaff_RDI != '\\0') {\n                uVar5 = *(in_RAX + 0x68);\n                unaff_RBX = *(in_RAX + 0x60);\n                if (uVar10 >> 0x23 < 0x2000) {\n                    *(*0x20 + 0x21) = unaff_SIL;\n                    *(*0x20 + -0x80) = uVar5;\n                    *(*0x20 + -0x10) = unaff_RBX;\n                    iVar1 = *(in_RAX + 0x78 + (uVar10 >> 0x23) * 8);\n                    *(*0x20 + -0xc0) = 0x423b1f;\n                    uVar2 = fcn.00426f00(iVar1 + (uVar11 & 0x1fff) * 0x80, uVar5, uVar9);\n                    uVar11 = *(*0x20 + -0x80);\n                    uVar5 = *(*0x20 + -0x28);\n                    if (uVar5 < uVar11) {\n                        *(*(*0x20 + -0x10) + uVar5 * 8) = uVar2;\n                        unaff_RDI = *(*0x20 + 8);\n                        uVar11 = *(unaff_RDI + 0x70);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        if (unaff_RBX <= uVar11) {\n                            if (uVar5 + 1 <= unaff_RBX) {\n                                iVar1 = ((uVar5 + 1) * 8 & -((uVar11 - uVar5) + -1) >> 0x3f) + *(unaff_RDI + 0x60);\n                                uVar7 = (unaff_RBX - uVar5) - 1;\n                                noname_1 = *(*0x20 + 0x21);\n                                if (*(*0x20 + 0x21) != 0) {\n                                    if (uVar7 == 0) goto code_r0x00423e4d;\n                                    uVar7 = uVar7 * 8;\n                                    *(*0x20 + -0xc0) = 0x423bbd;\n                                    fcn.00459580();\n                                    unaff_RDI = *(*0x20 + 8);\n                                    unaff_RBX = *(*0x20 + -0x38);\n                                    goto code_r0x00423e4d;\n                                }\n                                noname_1 = 0;\n                                goto code_r0x00423ed6;\n                            }\n                            *(*0x20 + -0xc0) = 0x423eed;\n                            fcn.00459000(unaff_RBX);\n                        }\n                        uVar5 = uVar11;\n                        *(*0x20 + -0xc0) = 0x423ef8;\n                        uVar11 = unaff_RBX;\n                        fcn.00458fc0(unaff_RBX, uVar5);\n                    }\n                    *(*0x20 + -0xc0) = 0x423f05;\n                    fcn.00458f40(uVar11);\n                }\n                uVar11 = 0x2000;\n                *(*0x20 + -0xc0) = 0x423f12;\n                uVar2 = fcn.00458f40(0x2000);\n                goto code_r0x00423f12;\n            }\n            uVar5 = *(in_RAX + 0x68);\n            *(*0x20 + -0x88) = uVar5;\n            *(*0x20 + -0x18) = *(in_RAX + 0x60);\n            while( true ) {\n                unaff_SIL = uVar5;\n                if (uVar9 < uVar11) goto code_r0x00423ea3;\n                if (0x1fff < uVar11 >> 0xd) goto code_r0x00423f99;\n                *(*0x20 + -0x50) = uVar11;\n                iVar1 = *(in_RAX + 0x78 + (uVar11 >> 0xd) * 8);\n                iVar6 = (uVar11 & 0x1fff) * 0x80;\n                *(*0x20 + -0xc0) = 0x423f7f;\n                uVar2 = fcn.00426f00(iVar1 + iVar6, iVar6, uVar9);\n                uVar11 = *(*0x20 + -0x50);\n                uVar5 = *(*0x20 + -0x88);\n                if (uVar5 <= uVar11) break;\ncode_r0x00423f12:\n                *(*(*0x20 + -0x18) + uVar11 * 8) = uVar2;\n                uVar11 = uVar11 + 1;\n                uVar9 = *(*0x20 + -0x38);\n                in_RAX = *(*0x20 + 8);\n            }\n            *(*0x20 + -0xc0) = 0x423f99;\n            fcn.00458f40(uVar5);\ncode_r0x00423f99:\n            arg1 = 0x2000;\n            *(*0x20 + -0xc0) = 0x423fa6;\n            in_RAX = fcn.00458f40(0x2000);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + 0x18) = arg1;\n        puVar8[0x20] = unaff_RDI;\n        puVar8[0x21] = unaff_SIL;\n        *(puVar8 + -8) = 0x423fc5;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        arg1 = *(puVar8 + 0x18);\n        unaff_RDI = puVar8[0x20];\n        unaff_SIL = puVar8[0x21];\n        *0x20 = puVar8;\n    } while( true );\ncode_r0x00423ea3:\n    iVar6 = *(*0x20 + 8);\ncode_r0x00423c72:\n    uVar10 = *(*0x20 + -0x20);\n    unaff_RBX = *(*0x20 + -0x30);\n    iVar1 = 3;\n    cVar3 = '\\x01';\ncode_r0x00423c97:\n    if ((iVar1 < 0) || (cVar3 == '\\0')) {\n        return;\n    }\n    *(*0x20 + -0x68) = iVar1;\n    uVar11 = *(iVar1 * 8 + 0x4d9480);\n    uVar9 = -(uVar11 < 0x40);\n    uVar5 = *(iVar1 * 8 + 0x4d9408);\n    *(*0x20 + -0x70) = uVar5;\n    unaff_RDI = *(iVar1 * 8 + 0x4d9448);\n    *(*0x20 + -0x78) = unaff_RDI;\n    uVar4 = uVar11;\n    uVar11 = uVar10 >> (uVar4 & 0x3f) & uVar9;\n    iVar12 = (unaff_RBX >> (uVar4 & 0x3f) & uVar9) + 1;\n    *(*0x20 + -0x58) = iVar12;\n    cVar3 = '\\0';\n    while( true ) {\n        if (iVar12 <= uVar11) goto code_r0x00423c8e;\n        *(*0x20 + -0x60) = uVar11;\n        *(*0x20 + -0x91) = cVar3;\n        noname_1 = *(iVar6 + 0x28 + iVar1 * 0x18);\n        uVar9 = uVar11 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        *(*0x20 + -0x40) = *(*0x20 + -0x60) + 1;\n        uVar11 = *(*0x20 + -0x60) + 1 << (uVar5 & 0x3f) & -(uVar5 < 0x40);\n        if (noname_1 < uVar11) break;\n        if (uVar11 < uVar9) {\ncode_r0x00423e17:\n            *(*0x20 + -0xc0) = 0x423e25;\n            fcn.00458fe0(uVar11);\n            break;\n        }\n        *(*0x20 + -0x48) = iVar1 * 3;\n        iVar1 = noname_1 - uVar9;\n        unaff_RBX = uVar11 - uVar9;\n        noname_1 = -iVar1 >> 0x3f;\n        *(*0x20 + -0xc0) = 0x423dcd;\n        uVar11 = unaff_RBX;\n        iVar12 = fcn.00425800(iVar1, uVar10, uVar9 << 3 & noname_1);\n        iVar6 = *(*0x20 + 8);\n        uVar10 = *(iVar6 + 8 + *(*0x20 + -0x48) * 8);\n        iVar1 = *(iVar6 + *(*0x20 + -0x48) * 8);\n        uVar9 = *(*0x20 + -0x60);\n        if (uVar10 <= uVar9) {\n            *(*0x20 + -0xc0) = 0x423e17;\n            fcn.00458f20(uVar10);\n            goto code_r0x00423e17;\n        }\n        if (*(iVar1 + uVar9 * 8) == iVar12) {\n            cVar3 = *(*0x20 + -0x91);\n        }\n        else {\n            *(iVar1 + uVar9 * 8) = iVar12;\n            cVar3 = '\\x01';\n        }\n        iVar1 = *(*0x20 + -0x68);\n        iVar12 = *(*0x20 + -0x58);\n        uVar5 = *(*0x20 + -0x70);\n        unaff_RDI = *(*0x20 + -0x78);\n        uVar11 = *(*0x20 + -0x40);\n        uVar10 = *(*0x20 + -0x20);\n        unaff_RBX = *(*0x20 + -0x30);\n    }\n    *(*0x20 + -0xc0) = 0x423e30;\n    fcn.00458fa0(uVar11, noname_1);\ncode_r0x00423e30:\n    *(*0x20 + -0xc0) = 0x423e38;\n    fcn.00458f40(uVar11);\ncode_r0x00423e38:\n    uVar5 = 0x2000;\n    *(*0x20 + -0xc0) = 0x423e45;\n    fcn.00458f40(0x2000);\n    uVar7 = unaff_RBX;\ncode_r0x00423e45:\n    unaff_RBX = uVar9;\n    *(*0x20 + -0xc0) = 0x423e4d;\n    fcn.00458f40(uVar5);\ncode_r0x00423e4d:\n    do {\n        if (*(*0x20 + -0x30) >> 0x23 < 0x2000) {\n            uVar2 = *(unaff_RDI + 0x78 + (*(*0x20 + -0x30) >> 0x23) * 8);\n            unaff_RBX = (unaff_RBX & 0x1fff) << 7;\n            *(*0x20 + -0xc0) = 0x423e85;\n            uVar2 = fcn.00426f00(uVar2, noname_1, unaff_RBX);\n            noname_1 = *(*0x20 + -0x38);\n            if (noname_1 < *(*0x20 + -0x80)) goto code_r0x00423e97;\n            *(*0x20 + -0xc0) = 0x423eb8;\n            fcn.00458f40(*(*0x20 + -0x80));\n        }\n        *(*0x20 + -0xc0) = 0x423ec5;\n        iVar1 = fcn.00458f40(0x2000);\n        do {\n            *(iVar1 + noname_1 * 8) = 0x8000040000200;\n            noname_1 = noname_1 + 1;\ncode_r0x00423ed6:\n        } while (noname_1 < uVar7);\n    } while( true );\ncode_r0x00423c8e:\n    iVar1 = iVar1 + -1;\n    goto code_r0x00423c97;\ncode_r0x00423e97:\n    *(*(*0x20 + -0x10) + noname_1 * 8) = uVar2;\n    goto code_r0x00423ea3;\n}\n",
        "token_count": 3740
    },
    "004244a0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.004244a0(ulong param_1, ulong param_2, uchar *param_3, uchar *param_4)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBX;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    uint64_t uVar8;\n    uchar *puVar9;\n    uint64_t uVar10;\n    int64_t in_R11;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint64_t unaff_R13;\n    int64_t unaff_R14;\n    uint64_t unaff_R15;\n    uchar in_XMM15 [16];\n    \n    while (puVar12 = *0x20 + -0xa0,  puVar7 = *0x20,  puVar12 < *(unaff_R14 + 0x10) || puVar12 == *(unaff_R14 + 0x10)) {\ncode_r0x00425059:\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + -8) = 0x425068;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        *0x20 = puVar7;\n    }\n    puVar7 = *0x20 + -0x120;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + -0x30) = *0x4d92d0;\n    *(*0x20 + -0x28) = *0x4d92b8;\n    *(*0x20 + -0x18) = in_XMM15;\n    *(*0x20 + -0x18) = 0x425080;\n    *(*0x20 + -0x10) = *0x20 + -0x30;\n    iVar4 = 0;\n    uVar8 = 0;\n    puVar9 = NULL;\n    uVar10 = 0xffffffffffffffff;\ncode_r0x00424551:\n    if (4 < iVar4) {\n        puVar2 = uVar8 >> 0xd;\n        if (puVar2 < 0x2000) {\n            *(*0x20 + -0x38) = uVar8;\n            uVar8 = (uVar8 & 0x1fff) << 7;\n            *(*0x20 + -0x128) = 0x4246a5;\n            iVar4 = fcn.004270e0(0);\n            if (iVar4 != -1) {\n                *(*0x20 + -0x90) = iVar4;\n                *(*0x20 + -0x48) = *(*0x20 + -0x38) << 0x16;\n                *(*0x20 + -0x128) = 0x424703;\n                (**(*0x20 + -0x18))(*(*0x20 + -0x38) << 0x16, *0x20 + -0x18, 0xffff800000000000);\n                *(*0x20 + -0x128) = 0x424718;\n                fcn.004243c0();\n                return *(*0x20 + -0x90) * 0x2000 + *(*0x20 + -0x48) + -0x800000000000;\n            }\n            uVar10 = *(*(*0x20 + 8) + 0x68);\n            puVar2 = *(*(*0x20 + 8) + 0x60);\n            if (*(*0x20 + -0x38) < uVar10) {\n                uVar8 = *(puVar2 + *(*0x20 + -0x38) * 8);\n                uVar10 = uVar8 & 0x1fffff;\n                if ((uVar8 & 0x8000000000000000) != 0) {\n                    uVar10 = 0x200000;\n                }\n                if (uVar8 < 0) {\n                    uVar6 = 0x200000;\n                }\n                else {\n                    uVar6 = uVar8 >> 0x15 & 0x1fffff;\n                }\n                *(*0x20 + -0x100) = uVar6;\n                *(*0x20 + -0xf8) = uVar10;\n                if (-1 < uVar8) goto code_r0x004248c5;\n                uVar8 = 0x200000;\n                do {\n                    *(*0x20 + -0x108) = uVar8;\n                    *(*0x20 + -0x128) = 0x4247ca;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x4247db;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x4247e5;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x4247f6;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424805;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x424816;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424825;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424836;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424845;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424856;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424865;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424876;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x42487b;\n                    fcn.00431a00();\n                    *(*0x20 + -0x128) = 0x424885;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x424896;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x4248a5;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x4248aa;\n                    fcn.00431be0();\n                    *(*0x20 + -0x128) = 0x4248af;\n                    fcn.00431a00();\n                    *(*0x20 + -0x128) = 0x4248c5;\n                    fcn.00430040();\ncode_r0x004248c5:\n                    uVar8 = uVar8 >> 0x2a & 0x1fffff;\n                } while( true );\n            }\n            *(*0x20 + -0x128) = 0x4248f0;\n            fcn.00458f20(uVar10);\n        }\n        *(*0x20 + -0x128) = 0x4248fd;\n        fcn.00458f40(0x2000);\n        goto code_r0x004248fd;\n    }\n    param_3 = 0x4d9400;\n    uVar6 = *(iVar4 * 8 + 0x4d9400);\n    uVar1 = -(uVar6 < 0x40);\n    uVar3 = uVar6;\n    puVar11 = 1 << (uVar3 & 0x3f) & uVar1;\n    unaff_R13 = 0x4d9440;\n    unaff_R15 = *(iVar4 * 8 + 0x4d9440);\n    puVar5 = uVar8 << (uVar3 & 0x3f) & uVar1;\n    puVar12 = *(in_RAX + 0x10 + iVar4 * 0x18);\n    param_4 = *(in_RAX + iVar4 * 0x18);\n    puVar2 = puVar5 + puVar11;\n    in_R11 = iVar4;\n    if (puVar2 <= puVar12) {\n        if (puVar5 <= puVar2) {\n            *(*0x20 + -0x70) = puVar5;\n            *(*0x20 + -0xa8) = uVar10;\n            *(*0x20 + -0xa0) = puVar9;\n            uVar8 = 0x4d9480;\n            uVar10 = *(iVar4 * 8 + 0x4d9480);\n            param_4 = param_4 + (*(*0x20 + -0x70) << 3 & puVar5 - puVar12 >> 0x3f);\n            uVar10 = *(in_RAX + 0x10078) + 0x800000000000U >> (uVar10 & 0x3f) & -(uVar10 < 0x40);\n            param_3 = *(*0x20 + -0x70);\n            if ((-puVar11 & uVar10) == param_3) {\n                puVar12 = puVar11 + -1 & uVar10;\n            }\n            else {\n                puVar12 = NULL;\n            }\n            *(*0x20 + -0x38) = iVar4;\n            *(*0x20 + -0x40) = puVar11;\n            *(*0x20 + -0xb0) = unaff_R15;\n            *(*0x20 + -0x20) = param_4;\n            *(*0x20 + -0x98) = puVar12;\n            puVar9 = NULL;\n            unaff_R13 = 0;\n            puVar2 = puVar11;\n            do {\n                if (puVar2 <= puVar12) {\ncode_r0x00424b8e:\n                    if (unaff_RBX <= puVar9) {\n                        *(*0x20 + -0x68) = unaff_R13;\n                        *(*0x20 + -0x58) = *(uVar8 + in_R11 * 8);\n                        *(*0x20 + -0x128) = 0x424e70;\n                        fcn.004243c0();\n                        return (-(*(*0x20 + -0x58) < 0x40) & *(*0x20 + -0x70) << (*(*0x20 + -0x58) & 0x3f)) +\n                               *(*0x20 + -0x68) * 0x2000 + -0x800000000000;\n                    }\n                    if (in_R11 == 0) {\n                        return 0;\n                    }\n                    uVar8 = *(*0x20 + -0xa0);\n                    uVar10 = uVar8 & 0x1fffff;\n                    unaff_R13 = 0x200000;\n                    if ((uVar8 & 0x8000000000000000) != 0) {\n                        uVar10 = 0x200000;\n                    }\n                    if (uVar8 < 0) {\n                        unaff_R15 = 0x200000;\n                    }\n                    else {\n                        unaff_R15 = uVar8 >> 0x15 & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd0) = unaff_R15;\n                    *(*0x20 + -200) = uVar10;\n                    if (uVar8 < 0) {\n                        puVar9 = 0x200000;\n                    }\n                    else {\n                        puVar9 = uVar8 >> 0x2a & 0x1fffff;\n                    }\n                    *(*0x20 + -0xd8) = puVar9;\n                    *(*0x20 + -0x128) = 0x424c2e;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x424c3f;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424c53;\n                    fcn.00432080(*(*0x20 + -0x38) + -1);\n                    *(*0x20 + -0x128) = 0x424c65;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424c6f;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x424c85;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424c8f;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424ca5;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424caf;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424cc5;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424ccf;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424cd4;\n                    fcn.00431be0();\n                    *(*0x20 + -0x128) = 0x424cd9;\n                    fcn.00431a00();\n                    *(*0x20 + -0x128) = 0x424cde;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x424cef;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424cfc;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x424d0d;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424d1a;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424d2b;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424d38;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x424d3d;\n                    fcn.00431be0();\n                    *(*0x20 + -0x128) = 0x424d45;\n                    fcn.00431a00();\n                    *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x10078);\n                    *(*0x20 + -0x128) = 0x424d65;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x424d76;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424d85;\n                    fcn.004320e0();\n                    *(*0x20 + -0x128) = 0x424d96;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424da5;\n                    fcn.00432080();\n                    *(*0x20 + -0x128) = 0x424daa;\n                    fcn.00431be0();\n                    *(*0x20 + -0x128) = 0x424daf;\n                    fcn.00431a00();\n                    *(*0x20 + -0x58) = *(*(*0x20 + -0x38) * 8 + 0x4d9480);\n                    puVar2 = *(*(*0x20 + -0x38) * 8 + 0x4d9400);\n                    *(*0x20 + -0x60) = puVar2;\n                    *(*0x20 + -0x128) = 0x424de5;\n                    fcn.00431980();\n                    *(*0x20 + -0x128) = 0x424df6;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424e05;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424e16;\n                    fcn.00432280();\n                    *(*0x20 + -0x128) = 0x424e25;\n                    fcn.00431f80();\n                    *(*0x20 + -0x128) = 0x424e2a;\n                    fcn.00431be0();\n                    *(*0x20 + -0x128) = 0x424e2f;\n                    fcn.00431a00();\n                    iVar4 = 0;\n                    while (iVar4 < *(*0x20 + -0x40)) {\n                        uVar8 = *(*(*0x20 + -0x20) + iVar4 * 8);\n                        uVar10 = uVar8 & 0x1fffff;\n                        param_3 = 0x200000;\n                        if ((uVar8 & 0x8000000000000000) != 0) {\n                            uVar10 = 0x200000;\n                        }\n                        if (uVar8 < 0) {\n                            param_4 = 0x200000;\n                        }\n                        else {\n                            param_4 = uVar8 >> 0x15 & 0x1fffff;\n                            puVar9 = param_4;\n                        }\n                        *(*0x20 + -0x88) = iVar4;\n                        *(*0x20 + -0xe8) = param_4;\n                        *(*0x20 + -0xe0) = uVar10;\n                        if (uVar8 < 0) {\n                            uVar8 = 0x200000;\n                        }\n                        else {\n                            uVar8 = uVar8 >> 0x2a & 0x1fffff;\n                        }\n                        *(*0x20 + -0xf0) = uVar8;\n                        *(*0x20 + -0x128) = 0x424ecb;\n                        fcn.00431980();\n                        *(*0x20 + -0x128) = 0x424edc;\n                        fcn.00432280();\n                        *(*0x20 + -0x128) = 0x424ee9;\n                        fcn.00432080();\n                        *(*0x20 + -0x128) = 0x424efa;\n                        fcn.00432280();\n                        puVar2 = *(*0x20 + -0x88) + *(*0x20 + -0x70);\n                        *(*0x20 + -0x128) = 0x424f16;\n                        fcn.00432080();\n                        *(*0x20 + -0x128) = 0x424f27;\n                        fcn.00432280();\n                        *(*0x20 + -0x128) = 0x424f31;\n                        fcn.00431f80();\n                        *(*0x20 + -0x128) = 0x424f45;\n                        fcn.00432280();\n                        *(*0x20 + -0x128) = 0x424f4f;\n                        fcn.00431f80();\n                        *(*0x20 + -0x128) = 0x424f65;\n                        fcn.00432280();\n                        *(*0x20 + -0x128) = 0x424f6f;\n                        fcn.00431f80();\n                        *(*0x20 + -0x128) = 0x424f85;\n                        fcn.00432280();\n                        *(*0x20 + -0x128) = 0x424f8a;\n                        fcn.00431a00();\n                        iVar4 = *(*0x20 + -0x88) + 1;\n                    }\n                    unaff_RBX = 0x10;\n                    *(*0x20 + -0x128) = 0x42503d;\n                    fcn.00430040();\ncode_r0x0042503d:\n                    *(*0x20 + -0x128) = 0x425048;\n                    fcn.00458f20(puVar2);\n                    puVar12 = puVar9;\n                    break;\n                }\n                if (puVar2 <= puVar12) goto code_r0x0042503d;\n                puVar5 = *(param_4 + puVar12 * 8);\n                if (puVar5 == NULL) {\n                    puVar9 = NULL;\n                    goto code_r0x004248fd;\n                }\n                *(*0x20 + -0x80) = puVar12;\n                *(*0x20 + -0x50) = puVar5;\n                *(*0x20 + -0x68) = unaff_R13;\n                *(*0x20 + -0xb8) = puVar9;\n                uVar10 = puVar5 & 0x1fffff;\n                if ((puVar5 & 0x8000000000000000) != 0) {\n                    uVar10 = 0x200000;\n                }\n                *(*0x20 + -0xc0) = uVar10;\n                uVar8 = *(uVar8 + in_R11 * 8);\n                unaff_R13 = -(uVar8 < 0x40);\n                *(*0x20 + -0x78) = param_3 + puVar12;\n                in_R11 = 1 << (unaff_R15 & 0x3f);\n                *(*0x20 + -0x128) = 0x4249c7;\n                (**(*0x20 + -0x18))(uVar8, *0x20 + -0x18, \n                                    (param_3 + puVar12 << (uVar8 & 0x3f) & unaff_R13) - 0x800000000000);\n                iVar4 = *(*0x20 + -0xb8);\n                puVar9 = iVar4 + *(*0x20 + -0xc0);\n                unaff_RBX = *(*0x20 + 0x10);\n                if (unaff_RBX <= puVar9) {\n                    unaff_R13 = *(*0x20 + -0x68);\n                    if (iVar4 == 0) {\n                        unaff_R13 = *(*0x20 + -0x80) << (*(*0x20 + -0xb0) & 0x3f) & -(*(*0x20 + -0xb0) < 0x40);\n                    }\n                    uVar8 = 0x4d9480;\n                    param_4 = *(*0x20 + -0x20);\n                    in_R11 = *(*0x20 + -0x38);\n                    param_3 = *(*0x20 + -0x70);\n                    goto code_r0x00424b8e;\n                }\n                puVar9 = *(*0x20 + -0x50);\n                if (puVar9 < 0) {\n                    puVar2 = 0x200000;\n                    param_4 = puVar5;\n                }\n                else {\n                    puVar2 = puVar9 >> 0x15 & 0x1fffff;\n                    param_4 = puVar9;\n                }\n                if (unaff_RBX <= puVar2) goto code_r0x00424530;\n                if (iVar4 == 0) {\n                    uVar8 = *(*0x20 + -0xb0);\n                }\n                else {\n                    uVar8 = *(*0x20 + -0xb0);\n                    uVar10 = 1 << (uVar8 & 0x3f) & -(uVar8 < 0x40);\n                    if (uVar10 <= *(*0x20 + -0xc0)) {\n                        puVar9 = iVar4 + uVar10;\n                        puVar2 = *(*0x20 + -0x40);\n                        uVar8 = 0x4d9480;\n                        param_4 = *(*0x20 + -0x20);\n                        in_R11 = *(*0x20 + -0x38);\n                        puVar12 = *(*0x20 + -0x80);\n                        unaff_R15 = *(*0x20 + -0xb0);\n                        unaff_R13 = *(*0x20 + -0x68);\n                        param_3 = *(*0x20 + -0x70);\n                        goto code_r0x004248fd;\n                    }\n                }\n                if (puVar9 < 0) {\n                    puVar9 = 0x200000;\n                }\n                else {\n                    puVar9 = puVar9 >> 0x2a & 0x1fffff;\n                }\n                puVar12 = *(*0x20 + -0x80);\n                unaff_R13 = (-(uVar8 < 0x40) & puVar12 + 1 << (uVar8 & 0x3f)) - puVar9;\n                puVar2 = *(*0x20 + -0x40);\n                param_4 = *(*0x20 + -0x20);\n                in_R11 = *(*0x20 + -0x38);\n                unaff_R15 = *(*0x20 + -0xb0);\n                uVar8 = 0x4d9480;\n                param_3 = *(*0x20 + -0x70);\ncode_r0x004248fd:\n                puVar12 = puVar12 + 1;\n            } while( true );\n        }\n        *(*0x20 + -0x128) = 0x425050;\n        fcn.00458fe0(puVar2);\n    }\n    *(*0x20 + -0x128) = 0x425058;\n    in_RAX = fcn.00458fa0(puVar2, puVar12);\n    goto code_r0x00425059;\ncode_r0x00424530:\n    iVar4 = *(*0x20 + -0x38) + 1;\n    in_RAX = *(*0x20 + 8);\n    uVar8 = *(*0x20 + -0x78);\n    uVar10 = uVar8;\n    param_3 = puVar9;\n    goto code_r0x00424551;\n}\n",
        "token_count": 5948
    },
    "004264a0": {
        "rules": [
            "encrypt data using HC-128/01272f7612224ac7bcc403d9d7459f40"
        ],
        "decompiled_code": "\nint64_t fcn.004264a0(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar3 = in_RAX[1];\n    uVar2 = unaff_RBX - 1;\n    uVar1 = 1;\n    do {\n        if (uVar2 == 0) {\ncode_r0x004264fb:\n            uVar2 = 0;\n            if (uVar3 != 0) {\n                for (; (uVar3 >> uVar2 & 1) == 0; uVar2 = uVar2 + 1) {\n                }\n            }\n            if (uVar3 == 0) {\n                uVar2 = 0x40;\n            }\ncode_r0x00426508:\n            if (uVar2 < 0x40) {\n                uVar3 = (-(unaff_RBX < 0x40) & 1 << (unaff_RBX & 0x3f)) - 1 << (uVar2 & 0x3f);\n                if (*0x5449f2 == '\\0') {\n                    fcn.00402120();\n                }\n                else {\n                    popcnt(in_RAX[2] & uVar3);\n                }\n                uVar3 = ~uVar3;\n                in_RAX[1] = in_RAX[1] & uVar3;\n                in_RAX[2] = in_RAX[2] & uVar3;\n                return uVar2 * 0x2000 + *in_RAX;\n            }\n            return 0;\n        }\n        if (uVar2 <= uVar1) {\n            uVar3 = uVar3 >> (uVar2 & 0x3f) & uVar3;\n            goto code_r0x004264fb;\n        }\n        uVar3 = uVar3 & uVar3 >> (uVar1 & 0x3f);\n        if (uVar3 == 0) {\n            uVar2 = 0x40;\n            goto code_r0x00426508;\n        }\n        uVar2 = uVar2 - uVar1;\n        uVar1 = uVar1 << 1;\n    } while( true );\n}\n",
        "token_count": 568
    },
    "00402d81": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuchar fcn.00402d81(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x516e30);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 != 0) {\n        return *(iVar2 + 0x65);\n    }\n    return 0;\n}\n",
        "token_count": 250
    },
    "004114c0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nulong fcn.004114c0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = fcn.00421600(2, (in_RAX + 0x3fU >> 6) + 0x1fff >> 0xd);\n    fcn.004110c0();\n    return uVar1;\n}\n",
        "token_count": 139
    },
    "004196e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004196e0(uint64_t param_1)\n\n{\n    uint64_t uVar1;\n    int64_t *piVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *unaff_RBX;\n    uchar *puVar6;\n    uchar *unaff_RBP;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar6 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar6 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar4 = in_RAX + 0x800000000000 >> 0x2a;\n            if (uVar4 < 0x40) {\n                iVar5 = *(*(*(uVar4 * 8 + 0x516e30) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8) + 0x10400 +\n                         (in_RAX >> 0xd & 0x1ff) * 8);\n                uVar4 = *(iVar5 + 0x68);\n                if (uVar4 != 0) {\n                    if ((*(iVar5 + 0x62) & 1) == 0) {\n                        *(*0x20 + -0x10) = in_RAX;\n                        *(*0x20 + 0x10) = unaff_RBX;\n                        if (uVar4 < 0x20001) goto code_r0x004197a9;\n                        if (*(iVar5 + 0x18) != in_RAX) {\ncode_r0x004198c1:\n                            uVar4 = (*(iVar5 + 0x68) + *(iVar5 + 0x18)) - in_RAX;\n                            param_1 = 0x20000;\n                            if (0x20000 < uVar4) {\n                                uVar4 = 0x20000;\n                            }\ncode_r0x004197a9:\n                            *(*0x20 + -0x40) = uVar4;\n                            *(*0x20 + -0x90) = 0x4197b9;\n                            iVar3 = fcn.0040fb20();\n                            iVar5 = *(*0x20 + -0x10);\n                            piVar7 = *(*0x20 + -0x40);\n                            iVar8 = 0;\n                            do {\n                                if (param_1 == 0) {\n                                    piVar9 = NULL;\n                                }\n                                else {\n                                    uVar1 = 0;\n                                    if (param_1 != 0) {\n                                        for (; (param_1 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                                        }\n                                    }\n                                    param_1 = param_1 ^ 1 << (uVar1 & 0x3f);\n                                    piVar9 = iVar3 + uVar1 * 8;\n                                }\n                                piVar2 = piVar7;\n                                if (piVar9 == NULL) {\n                                    *(*0x20 + -0x50) = iVar8;\n                                    *(*0x20 + -0x90) = 0x4197f1;\n                                    iVar3 = fcn.0040fc40(param_1, iVar5);\n                                    if (piVar7 == NULL) {\n                                        iVar5 = *(*0x20 + 0x10);\n                                        piVar7 = iVar5 + 0x10;\n                                        *piVar7 = *piVar7 + *(*0x20 + -0x40);\n                                        piVar7 = iVar5 + 0x18;\n                                        *piVar7 = *piVar7 + *(*0x20 + -0x50);\n                                        return;\n                                    }\n                                    iVar5 = *(*0x20 + -0x10);\n                                    piVar2 = *(*0x20 + -0x40);\n                                    piVar9 = piVar7;\n                                }\n                                piVar7 = piVar2;\n                                iVar8 = piVar9 - iVar5;\n                                if ((*piVar9 != 0) && (piVar7 <= *piVar9 - iVar5)) {\n                                    *(*0x20 + -0x18) = iVar8;\n                                    *(*0x20 + -0x38) = in_RAX;\n                                    *(*0x20 + -0x28) = param_1;\n                                    *(*0x20 + -0x30) = uVar4;\n                                    *(*0x20 + -0x20) = iVar3;\n                                    *(*0x20 + -0x90) = 0x41984c;\n                                    iVar3 = fcn.0040f9c0(iVar8);\n                                    if (iVar3 != 0) {\n                                        *(*0x20 + -0x90) = 0x41986e;\n                                        fcn.00419ca0(*(*0x20 + -0x18), iVar5, iVar8);\n                                    }\n                                    iVar3 = *(*0x20 + -0x20);\n                                    param_1 = *(*0x20 + -0x28);\n                                    iVar5 = *(*0x20 + -0x10);\n                                    uVar4 = *(*0x20 + -0x30);\n                                    piVar7 = *(*0x20 + -0x40);\n                                    in_RAX = *(*0x20 + -0x38);\n                                    iVar8 = *(*0x20 + -0x18);\n                                }\n                                iVar8 = iVar8 + 8;\n                            } while( true );\n                        }\n                        *(*0x20 + -0x58) = iVar5;\n                        uVar4 = in_RAX;\ncode_r0x004198ec:\n                        uVar4 = uVar4 + 0x20000;\n                        if (*(iVar5 + 0x68) + *(iVar5 + 0x18) <= uVar4) goto code_r0x004198c1;\n                        iVar3 = *unaff_RBX;\n                        if (iVar3 == 0) {\ncode_r0x0041991e:\n                            *(*0x20 + -0x48) = uVar4;\n                            *(*0x20 + -0x90) = 0x41992e;\n                            fcn.0041fc40();\n                            uVar4 = *(*0x20 + -0x48);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            in_RAX = *(*0x20 + -0x10);\n                            iVar5 = *(*0x20 + -0x58);\n                            goto code_r0x004198ec;\n                        }\n                        uVar1 = *(iVar3 + 0x10);\n                        if (uVar1 == 0xfd) goto code_r0x0041991e;\n                        if (uVar1 < 0xfd) {\n                            *(iVar3 + 0x18 + uVar1 * 8) = uVar4;\n                            *(iVar3 + 0x10) = *(iVar3 + 0x10) + 1;\n                            goto code_r0x004198ec;\n                        }\n                        *(*0x20 + -0x90) = 0x419951;\n                        fcn.00458f20(0xfd);\n                    }\n                    *(*0x20 + -0x90) = 0x419965;\n                    fcn.00430040();\n                }\n                unaff_RBX = 0x11;\n                *(*0x20 + -0x90) = 0x419976;\n                fcn.00430040();\n            }\n            param_1 = 0x40;\n            *(*0x20 + -0x90) = 0x419985;\n            in_RAX = fcn.00458f40(0x40);\n        }\n        *(puVar6 + 8) = in_RAX;\n        *(puVar6 + 0x10) = unaff_RBX;\n        *(puVar6 + -8) = 0x419995;\n        fcn.004568e0();\n        in_RAX = *(puVar6 + 8);\n        unaff_RBX = *(puVar6 + 0x10);\n        *0x20 = puVar6;\n    } while( true );\n}\n",
        "token_count": 1868
    },
    "0041d480": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d480(void)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint64_t *in_RAX;\n    uint64_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar5 = *in_RAX;\n    uVar8 = uVar5;\n    if (uVar5 < 0) {\n        uVar8 = -uVar5;\n    }\n    if (*0x4d92d0 == uVar8 - 0x800000000000) {\n        return 0;\n    }\n    uVar9 = uVar8 >> 0x19;\n    while( true ) {\n        iVar6 = uVar9;\n        if (iVar6 < *(in_RAX + 4)) {\n            do {\n                uVar5 = *in_RAX;\n                if (uVar5 < 0) {\n                    return 0;\n                }\n                LOCK();\n                uVar8 = *in_RAX;\n                *in_RAX = *in_RAX ^ (uVar5 == uVar8) * (*in_RAX ^ *0x4d92d0 + 0x800000000000U);\n            } while (uVar5 != uVar8);\n            return 0;\n        }\n        if (in_RAX[2] <= iVar6) break;\n        uVar1 = *(in_RAX[1] + iVar6);\n        if (uVar1 != 0) {\n            uVar7 = uVar1 + uVar1 + 1;\n            uVar3 = 0x1f;\n            if (uVar7 != 0) {\n                for (; uVar7 >> uVar3 == 0; uVar3 = uVar3 - 1) {\n                }\n            }\n            uVar9 = (uVar3 + iVar6 * 8) - 1;\n            if (uVar9 != uVar8 >> 0x16) {\n                if (uVar5 < 0) {\n                    LOCK();\n                    *in_RAX = *in_RAX ^ (-*in_RAX == uVar8) * (*in_RAX ^ uVar9 * 0x400000 + 0x3fe000);\n                }\n                else {\n                    uVar5 = uVar9 * 0x400000 + 0x3fe000;\n                    do {\n                        uVar8 = *in_RAX;\n                        if (uVar8 < uVar5) {\n                            return uVar9;\n                        }\n                        LOCK();\n                        uVar2 = *in_RAX;\n                        *in_RAX = *in_RAX ^ (uVar8 == uVar2) * (*in_RAX ^ uVar5);\n                    } while (uVar8 != uVar2);\n                }\n                return uVar9;\n            }\n            return uVar9;\n        }\n        uVar9 = iVar6 - 1;\n    }\n    fcn.00458f20(in_RAX[2]);\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 709
    },
    "004237e0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/3c11c79f25554a4cae0a51d287295f58"
        ],
        "decompiled_code": "\nvoid fcn.004237e0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x60;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            uVar3 = arg1 + 0x3fffff + unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x38) = uVar3;\n            *(*0x20 + -0x40) = unaff_RBX & 0xffffffffffc00000;\n            *(*0x20 + -0x68) = 0x423830;\n            fcn.00425b20(uVar3);\n            iVar2 = *(*0x20 + 8);\n            iVar1 = *(*0x20 + -0x40);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            if ((*(iVar2 + 0x10080) == 0) || (uVar3 < *(iVar2 + 0x10080))) {\n                *(iVar2 + 0x10080) = uVar3;\n            }\n            *(*0x20 + -0x10) = iVar1 + 0x800000000000U;\n            *(*0x20 + -0x18) = uVar3;\n            iVar1 = *(*0x20 + -0x38);\n            uVar3 = iVar1 + 0x800000000000U >> 0x16;\n            *(*0x20 + -0x20) = uVar3;\n            if (*(iVar2 + 0x10088) < uVar3) {\n                *(iVar2 + 0x10088) = uVar3;\n            }\n            *(*0x20 + -0x68) = 0x42389d;\n            fcn.00428aa0();\n            *(*0x20 + -0x68) = 0x4238bd;\n            fcn.00428f00(iVar1);\n            iVar2 = *(*0x20 + 8);\n            if (*(*0x20 + -0x10) < *(iVar2 + 0x10078) + 0x800000000000U) {\n                unaff_RBX = *(*0x20 + -0x40);\n                *(iVar2 + 0x10078) = unaff_RBX;\n            }\n            else {\n                unaff_RBX = *(*0x20 + -0x40);\n            }\n            uVar3 = *(*0x20 + -0x20);\n            uVar5 = *(*0x20 + -0x18);\ncode_r0x00423945:\n            if (uVar3 <= uVar5) {\n                *(*0x20 + -0x68) = 0x4239ba;\n                fcn.00423a20(*(*0x20 + 0x18) >> 0xd);\n                return;\n            }\n            uVar3 = uVar5 >> 0xd;\n            if (0x1fff < uVar3) goto code_r0x004239d5;\n            *(*0x20 + -0x28) = uVar5;\n            if (*(iVar2 + 0x78 + uVar3 * 8) != 0) {\ncode_r0x00423904:\n                *(*0x20 + -0x68) = 0x42392b;\n                fcn.00426ac0(0x200);\n                uVar5 = *(*0x20 + -0x28) + 1;\n                uVar3 = *(*0x20 + -0x20);\n                iVar2 = *(*0x20 + 8);\n                unaff_RBX = *(*0x20 + -0x40);\n                goto code_r0x00423945;\n            }\n            *(*0x20 + -0x30) = uVar3;\n            *(*0x20 + -0x68) = 0x42397f;\n            iVar2 = fcn.004127c0();\n            if (iVar2 != 0) {\n                *(*(*0x20 + 8) + 0x78 + *(*0x20 + -0x30) * 8) = iVar2;\n                goto code_r0x00423904;\n            }\n            unaff_RBX = 0x18;\n            *(*0x20 + -0x68) = 0x4239d5;\n            fcn.00430040();\ncode_r0x004239d5:\n            arg1 = 0x2000;\n            *(*0x20 + -0x68) = 0x4239e5;\n            in_RAX = fcn.00458f40(0x2000);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x4239fa;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1316
    },
    "00403dc0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00403dc0(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t *puVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    char cVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint64_t unaff_RSI;\n    uint64_t unaff_RDI;\n    uint64_t in_R8;\n    int64_t unaff_R14;\n    int64_t iStackX8;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n        iStackX8 = in_RAX;\n    }\n    uVar9 = *(in_RAX + 8);\n    if (uVar9 == 0) {\n        return;\n    }\n    if (uVar9 <= arg1) {\n        return;\n    }\n    if (uVar9 - arg1 < unaff_RDI) {\n        unaff_RDI = uVar9 - arg1;\n    }\n    if ((*(in_RAX + 0x17) & 0x40) != 0) {\n        uVar7 = *(in_RAX + 0x17) & 0x1f;\n        uVar9 = uVar7;\n        cVar6 = uVar7;\n        if (cVar6 == '\\x11') {\n            iStackX8 = in_RAX;\n            for (uVar9 = 0; uVar9 <= *(in_RAX + 0x40) && *(in_RAX + 0x40) != uVar9; uVar9 = uVar9 + 1) {\n                if (arg1 <= **(in_RAX + 0x30) && **(in_RAX + 0x30) != arg1) {\n                    fcn.00403dc0(arg1);\n                    in_RAX = iStackX8;\n                }\n                uVar4 = **(in_RAX + 0x30);\n                uVar5 = arg1;\n                if (uVar4 < arg1) {\n                    uVar5 = uVar4;\n                }\n                unaff_RSI = uVar4 - uVar5;\n                arg1 = arg1 - uVar5;\n                if (unaff_RDI <= unaff_RSI) {\n                    return;\n                }\ncode_r0x00403f0f:\n                unaff_RDI = unaff_RDI - unaff_RSI;\n            }\n        }\n        else {\n            if (cVar6 != '\\x19') {\n                in_RAX = fcn.00430040();\n                arg1 = in_R8;\n                goto code_r0x00403f0f;\n            }\n            iVar8 = *(in_RAX + 0x38);\n            iVar1 = *(in_RAX + 0x40);\n            for (iVar3 = 0; iVar3 < iVar1; iVar3 = iVar3 + 1) {\n                puVar2 = *(iVar8 + 8);\n                if (arg1 <= *puVar2 && *puVar2 != arg1) {\n                    fcn.00403dc0(arg1);\n                }\n                uVar9 = *puVar2;\n                uVar4 = arg1;\n                if (uVar9 < arg1) {\n                    uVar4 = uVar9;\n                }\n                arg1 = arg1 - uVar4;\n                if (unaff_RDI <= uVar9 - uVar4) {\n                    return;\n                }\n                iVar8 = iVar8 + 0x18;\n                unaff_RDI = unaff_RDI - (uVar9 - uVar4);\n            }\n        }\n        return;\n    }\n    fcn.00403ce0(arg1);\n    return;\n}\n",
        "token_count": 863
    },
    "0040bc20": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040bc20(void)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    double dVar3;\n    int64_t in_RAX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    double dVar5;\n    \n    if (in_RAX < 0x7000001) {\n        if (in_RAX == 0) {\n            return 0;\n        }\n    }\n    else {\n        in_RAX = 0x7000000;\n    }\n    uVar4 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar2 = ZEXT816(uVar4) * ZEXT816(uVar4 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar4;\n    dVar3 = (((SUB164(auVar2, 0) ^ SUB164(auVar2 >> 0x40, 0)) << 0x1a) >> 0x20) + 1;\n    uVar4 = SUB124(ZEXT812(dVar3) >> 0x20, 0) >> 0xf & 0x1f;\n    dVar5 = *(uVar4 * 8 + 0x4d9860);\n    if (uVar4 + 1 < 0x21) {\n        dVar5 = (((dVar3 >> 0x34 & 0x7ff) - 0x3ff) + dVar5 +\n                *0x48f5a8 * (dVar3 >> 0x1b & 0xfffff) * (*(uVar4 * 8 + 0x4d9868) - dVar5)) - *0x48f610;\n        if (0.0 < dVar5) {\n            dVar5 = 0.0;\n        }\n        return dVar5 * in_RAX * *0x48f660 + 1;\n    }\n    fcn.00458f40(0x21);\n    pcVar1 = swi(3);\n    uVar4 = (*pcVar1)();\n    return uVar4;\n}\n",
        "token_count": 507
    },
    "004489a0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.004489a0(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    char cVar5;\n    int64_t *in_RAX;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    ulong *unaff_RBX;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    int64_t iVar12;\n    int64_t unaff_R14;\n    bool bVar13;\n    bool bVar14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x30 && *0x20 + -0x30 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0xb0;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = (*(unaff_RBX + 0x17) & 0x1f) - 1;\n            *(*0x20 + 8) = in_RAX;\n            switch(iVar7) {\n            case 0:\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 0xb:\n            case 0x15:\n            case 0x19:\n                uVar1 = *unaff_RBX;\n                iVar7 = in_RAX[6];\n                bVar14 = SBORROW8(*0x4d92a0, iVar7);\n                iVar6 = *0x4d92a0 - iVar7;\n                bVar13 = *0x4d92a0 == iVar7;\n                if (iVar7 < *0x4d92a0) {\n                    *(*0x20 + -0x30) = in_XMM15;\n                    *(*0x20 + -0x28) = in_XMM15;\n                    *(*0x20 + -0x18) = in_XMM15;\n                    *(*0x20 + -0x30) = 2;\n                    *(*0x20 + -0x28) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x18) = in_RAX[6];\n                    *(*0x20 + -0x10) = uVar1;\n                    uVar9 = in_RAX[1] + 1;\n                    iVar8 = *in_RAX;\n                    uVar11 = in_RAX[2];\n                    iVar6 = iVar8;\n                    iVar12 = *0x4d92a0;\n                    if (uVar11 < uVar9) {\n                        *(*0x20 + -0x60) = iVar7;\n                        *(*0x20 + -0x68) = *0x4d92a0;\n                        *(*0x20 + -0xb8) = 0x448bb9;\n                        iVar6 = fcn.00441fe0(uVar11);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = uVar11;\n                        if (*0x544c10 == 0) {\n                            *in_RAX = iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x448bd8;\n                            iVar6 = fcn.00458a80(uVar11, iVar8, iVar7, iVar12);\n                        }\n                        iVar7 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                    }\n                    in_RAX[1] = uVar9;\n                    *(iVar6 + -0x28 + uVar9 * 0x28) = *(*0x20 + -0x30);\n                    iVar6 = iVar6 + uVar9 * 0x28;\n                    uVar2 = *(*0x20 + -0x24);\n                    uVar3 = *(*0x20 + -0x20);\n                    uVar4 = *(*0x20 + -0x1c);\n                    *(iVar6 + -0x20) = *(*0x20 + -0x28);\n                    *(iVar6 + -0x1c) = uVar2;\n                    *(iVar6 + -0x18) = uVar3;\n                    *(iVar6 + -0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x14);\n                    uVar3 = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0xc);\n                    *(iVar6 + -0x10) = *(*0x20 + -0x18);\n                    *(iVar6 + -0xc) = uVar2;\n                    *(iVar6 + -8) = uVar3;\n                    *(iVar6 + -4) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar7);\n                    iVar6 = iVar12 - iVar7;\n                    bVar13 = iVar12 == iVar7;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar6 < 0);\n            case 5:\n            case 10:\n                uVar1 = *unaff_RBX;\n                iVar7 = in_RAX[6];\n                bVar14 = SBORROW8(*0x4d92a0, iVar7);\n                iVar6 = *0x4d92a0 - iVar7;\n                bVar13 = *0x4d92a0 == iVar7;\n                if (iVar7 < *0x4d92a0) {\n                    *(*0x20 + -0x58) = in_XMM15;\n                    *(*0x20 + -0x50) = in_XMM15;\n                    *(*0x20 + -0x40) = in_XMM15;\n                    *(*0x20 + -0x58) = 2;\n                    *(*0x20 + -0x50) = in_RAX[3] + arg1;\n                    *(*0x20 + -0x40) = in_RAX[6];\n                    *(*0x20 + -0x38) = uVar1;\n                    uVar9 = in_RAX[1] + 1;\n                    iVar8 = *in_RAX;\n                    uVar11 = in_RAX[2];\n                    iVar6 = iVar8;\n                    iVar12 = *0x4d92a0;\n                    if (uVar11 < uVar9) {\n                        *(*0x20 + -0x60) = iVar7;\n                        *(*0x20 + -0x68) = *0x4d92a0;\n                        *(*0x20 + -0xb8) = 0x448a6f;\n                        iVar6 = fcn.00441fe0(uVar11);\n                        in_RAX = *(*0x20 + 8);\n                        in_RAX[2] = uVar11;\n                        if (*0x544c10 == 0) {\n                            *in_RAX = iVar6;\n                        }\n                        else {\n                            *(*0x20 + -0xb8) = 0x448a8e;\n                            iVar6 = fcn.00458a80(uVar11, iVar8, iVar7, iVar12);\n                        }\n                        iVar7 = *(*0x20 + -0x60);\n                        iVar12 = *(*0x20 + -0x68);\n                    }\n                    in_RAX[1] = uVar9;\n                    *(iVar6 + -0x28 + uVar9 * 0x28) = *(*0x20 + -0x58);\n                    iVar6 = iVar6 + uVar9 * 0x28;\n                    uVar2 = *(*0x20 + -0x4c);\n                    uVar3 = *(*0x20 + -0x48);\n                    uVar4 = *(*0x20 + -0x44);\n                    *(iVar6 + -0x20) = *(*0x20 + -0x50);\n                    *(iVar6 + -0x1c) = uVar2;\n                    *(iVar6 + -0x18) = uVar3;\n                    *(iVar6 + -0x14) = uVar4;\n                    uVar2 = *(*0x20 + -0x3c);\n                    uVar3 = *(*0x20 + -0x38);\n                    uVar4 = *(*0x20 + -0x34);\n                    *(iVar6 + -0x10) = *(*0x20 + -0x40);\n                    *(iVar6 + -0xc) = uVar2;\n                    *(iVar6 + -8) = uVar3;\n                    *(iVar6 + -4) = uVar4;\n                    in_RAX[6] = in_RAX[6] + 1;\n                    bVar14 = SBORROW8(iVar12, iVar7);\n                    iVar6 = iVar12 - iVar7;\n                    bVar13 = iVar12 == iVar7;\n                }\n                return in_RAX & 0xffffffffffffff00 | (!bVar13 && bVar14 == iVar6 < 0);\n            case 0x10:\n                if (unaff_RBX[8] == 1) {\n                    *(*0x20 + -0xb8) = 0x448af7;\n                    uVar11 = fcn.004489a0(arg1);\n                    return uVar11;\n                }\n                break;\n            case 0x18:\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar7 = unaff_RBX[8];\n                *(*0x20 + -0x60) = iVar7;\n                uVar11 = 0;\n                while( true ) {\n                    if (iVar7 <= uVar11) {\n                        return 1;\n                    }\n                    iVar6 = unaff_RBX[7];\n                    uVar9 = unaff_RBX[8];\n                    if (uVar9 <= uVar11) break;\n                    *(*0x20 + -0x70) = uVar11;\n                    iVar7 = *(iVar6 + 0x10 + uVar11 * 0x18);\n                    *(*0x20 + -0xb8) = 0x448c90;\n                    cVar5 = fcn.004489a0(iVar7 + arg1);\n                    if (cVar5 == '\\0') {\n                        return 0;\n                    }\n                    uVar11 = *(*0x20 + -0x70) + 1;\n                    iVar7 = *(*0x20 + -0x60);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    arg1 = *(*0x20 + 0x18);\n                }\n                *(*0x20 + -0xb8) = 0x448cc6;\n                fcn.00458f20(uVar9);\n            }\n            *(*0x20 + -0xb8) = 0x448cce;\n            fcn.00450e00();\n            arg1 = 0x16;\n            *(*0x20 + -0xb8) = 0x448cf4;\n            fcn.00445e00(0x16, iVar7, 0x47c251, 0x37);\n            *(*0x20 + -0xb8) = 0x448cf9;\n            unaff_RBX = fcn.004093e0();\n            *(*0x20 + -0xb8) = 0x448d08;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + -8) = 0x448d1d;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 2735
    },
    "00450ea0": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17",
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong fcn.00450ea0(void)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((*(in_RAX + 0x14) & 1) == 0) {\n        iVar3 = 0;\n    }\n    else {\n        switch(*(in_RAX + 0x17) & 0x1f) {\n        case 0x11:\n            iVar3 = in_RAX + 0x48;\n            break;\n        case 0x12:\n            iVar3 = in_RAX + 0x40;\n            break;\n        case 0x13:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x14:\n            iVar3 = in_RAX + 0x50;\n            break;\n        case 0x15:\n            iVar3 = in_RAX + 0x58;\n            break;\n        case 0x16:\n            iVar3 = in_RAX + 0x38;\n            break;\n        case 0x17:\n            iVar3 = in_RAX + 0x38;\n            break;\n        default:\n            iVar3 = in_RAX + 0x30;\n            break;\n        case 0x19:\n            iVar3 = in_RAX + 0x50;\n        }\n    }\n    if (iVar3 != 0) {\n        fcn.00450fa0();\n        uVar1 = fcn.00451700();\n        return uVar1;\n    }\n    uVar2 = *(in_RAX + 0x17) & 0x1f;\n    if (uVar2 == 0x14) {\n        uVar1 = fcn.00451700();\n        return uVar1;\n    }\n    if (uVar2 == 0x19) {\n        uVar1 = fcn.00451700();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 489
    },
    "00452040": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint64_t fcn.00452040(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    char cVar6;\n    ulong in_RAX;\n    ulong uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    ulong unaff_RBX;\n    uchar *puVar14;\n    uchar *unaff_RBP;\n    uint32_t *puVar15;\n    uint64_t uVar16;\n    int64_t iVar17;\n    uint64_t uVar18;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar14 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x98 && *0x20 + -0x98 != *(unaff_R14 + 0x10)) {\n            puVar14 = *0x20 + -0x118;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = arg1;\n            *(*0x20 + -0x18) = in_XMM15;\n            *(*0x20 + -0x18) = in_RAX;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x120) = 0x4520b1;\n            fcn.0040ca00(*0x20 + -0x18);\n            if (arg1 != '\\0') {\n                return 1;\n            }\n            *(*0x20 + -0x120) = 0x4520d5;\n            fcn.0040cc40(*0x20 + -0x18);\n            iVar12 = *(*0x20 + 0x10);\n            if (*(*0x20 + 8) == iVar12) {\n                return 1;\n            }\n            uVar1 = *(*(*0x20 + 8) + 0x17);\n            if ((*(iVar12 + 0x17) & 0x1f) != (uVar1 & 0x1f)) {\n                return 0;\n            }\n            *(*0x20 + -0xfd) = uVar1;\n            *(*0x20 + -0xfe) = uVar1 & 0x1f;\n            *(*0x20 + -0x120) = 0x452116;\n            uVar7 = fcn.00450e00();\n            *(*0x20 + -0x28) = uVar7;\n            *(*0x20 + -0xb0) = uVar1;\n            *(*0x20 + -0x120) = 0x452130;\n            iVar8 = fcn.00450e00();\n            arg1 = *(*0x20 + -0xb0);\n            if (uVar1 != arg1) {\n                return 0;\n            }\n            *(*0x20 + -0x120) = 0x45214e;\n            cVar6 = fcn.004023a0(arg1, iVar12);\n            if (cVar6 == '\\0') {\n                return 0;\n            }\n            iVar10 = *(*0x20 + 8);\n            if ((*(iVar10 + 0x14) & 1) == 0) {\n                puVar15 = NULL;\n            }\n            else {\n                arg1 = 0x48f9e0;\n                switch(*(iVar10 + 0x17) & 0x1f) {\n                case 0x11:\n                    puVar15 = iVar10 + 0x48;\n                    break;\n                case 0x12:\n                    puVar15 = iVar10 + 0x40;\n                    break;\n                case 0x13:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                case 0x14:\n                    puVar15 = iVar10 + 0x50;\n                    break;\n                case 0x15:\n                    puVar15 = iVar10 + 0x58;\n                    break;\n                case 0x16:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                case 0x17:\n                    puVar15 = iVar10 + 0x38;\n                    break;\n                default:\n                    arg1 = 0x48f9e0;\n                    puVar15 = iVar10 + 0x30;\n                    break;\n                case 0x19:\n                    puVar15 = iVar10 + 0x50;\n                }\n            }\n            iVar17 = *(*0x20 + 0x10);\n            if ((*(iVar17 + 0x14) & 1) == 0) {\n                iVar13 = 0;\n            }\n            else {\n                arg1 = 0x48fa40;\n                switch(*(iVar17 + 0x17) & 0x1f) {\n                case 0x11:\n                    iVar13 = iVar17 + 0x48;\n                    break;\n                case 0x12:\n                    iVar13 = iVar17 + 0x40;\n                    break;\n                case 0x13:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                case 0x14:\n                    iVar13 = iVar17 + 0x50;\n                    break;\n                case 0x15:\n                    iVar13 = iVar17 + 0x58;\n                    break;\n                case 0x16:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                case 0x17:\n                    iVar13 = iVar17 + 0x38;\n                    break;\n                default:\n                    arg1 = 0x48fa40;\n                    iVar13 = iVar17 + 0x30;\n                    break;\n                case 0x19:\n                    iVar13 = iVar17 + 0x50;\n                }\n            }\n            if (puVar15 == NULL) {\n                if (iVar13 != 0) {\n                    return 0;\n                }\n            }\n            else {\n                if (iVar13 == 0) {\n                    return 0;\n                }\n                *(*0x20 + -0x88) = iVar13;\n                uVar4 = *puVar15;\n                *(*0x20 + -0x120) = 0x45225f;\n                fcn.00450fa0();\n                *(*0x20 + -0x120) = 0x452265;\n                uVar7 = fcn.00451700();\n                *(*0x20 + -0x68) = uVar7;\n                *(*0x20 + -0xe8) = uVar4;\n                uVar4 = **(*0x20 + -0x88);\n                *(*0x20 + -0x120) = 0x45228b;\n                fcn.00450fa0();\n                *(*0x20 + -0x120) = 0x452290;\n                iVar8 = fcn.00451700();\n                arg1 = *(*0x20 + -0xe8);\n                if (uVar4 != arg1) {\n                    return 0;\n                }\n                *(*0x20 + -0x120) = 0x4522ae;\n                cVar6 = fcn.004023a0(arg1, iVar12);\n                if (cVar6 == '\\0') {\n                    return 0;\n                }\n                iVar10 = *(*0x20 + 8);\n                iVar17 = *(*0x20 + 0x10);\n            }\n            if (*(*0x20 + -0xfe) - 1U < 0x10) {\n                return 1;\n            }\n            switch(*(*0x20 + -0xfd) & 0x1f) {\n            case 0x11:\n                *(*0x20 + -0x120) = 0x45230f;\n                cVar6 = fcn.00452040(*(*0x20 + -0x20));\n                if (cVar6 == '\\0') {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = *(*(*0x20 + 8) + 0x40) & 0xffffffffffffff00 |\n                            *(*(*0x20 + 0x10) + 0x40) == *(*(*0x20 + 8) + 0x40);\n                }\n                return uVar9 & 0xffffffff;\n            case 0x12:\n                if (*(iVar17 + 0x38) == *(iVar10 + 0x38)) {\n                    *(*0x20 + -0x120) = 0x452367;\n                    uVar9 = fcn.00452040(*(*0x20 + -0x20));\n                }\n                else {\n                    uVar9 = 0;\n                }\n                return uVar9;\n            case 0x13:\n                if (*(iVar17 + 0x32) != *(iVar10 + 0x32)) {\n                    return 0;\n                }\n                uVar2 = *(iVar10 + 0x30);\n                arg1 = uVar2;\n                uVar3 = *(iVar17 + 0x30);\n                if (uVar3 != uVar2) {\n                    return 0;\n                }\n                if ((*(iVar10 + 0x14) & 1) == 0) {\n                    iVar12 = 0x38;\n                }\n                else {\n                    iVar12 = 0x48;\n                }\n                if (arg1 < 0x100001) {\n                    if ((*(iVar17 + 0x14) & 1) == 0) {\n                        iVar8 = 0x38;\n                    }\n                    else {\n                        iVar8 = 0x48;\n                    }\n                    *(*0x20 + -0xfa) = uVar2;\n                    *(*0x20 + -0xfc) = uVar3;\n                    *(*0x20 + -0x90) = iVar10 + iVar12;\n                    *(*0x20 + -0x98) = iVar8 + iVar17;\n                    uVar7 = *(*0x20 + -0x20);\n                    uVar9 = 0;\n                    while (uVar16 = uVar3,  uVar9 < arg1) {\n                        if (uVar16 <= uVar9) goto code_r0x00452c6c;\n                        *(*0x20 + -200) = uVar9;\n                        *(*0x20 + -0x120) = 0x452b0e;\n                        cVar6 = fcn.00452040(uVar7);\n                        if (cVar6 == '\\0') {\n                            return 0;\n                        }\ncode_r0x00452aab:\n                        arg1 = *(*0x20 + -0xfa);\n                        uVar3 = *(*0x20 + -0xfc);\n                        uVar7 = *(*0x20 + -0x20);\n                        iVar10 = *(*0x20 + 8);\n                        iVar17 = *(*0x20 + 0x10);\n                        uVar9 = *(*0x20 + -200) + 1;\n                    }\n                    if ((*(iVar10 + 0x14) & 1) == 0) {\n                        iVar12 = 0x38;\n                    }\n                    else {\n                        iVar12 = 0x48;\n                    }\n                    uVar16 = *(iVar10 + 0x30);\n                    uVar9 = (*(iVar10 + 0x32) & 0x7fff) + *(iVar10 + 0x30) & 0xffff;\n                    if (uVar16 <= uVar9) {\n                        iVar13 = uVar9 - uVar16;\n                        iVar8 = uVar16 - 0x100000;\n                        uVar9 = uVar16 << 3;\n                        if ((*(iVar17 + 0x14) & 1) == 0) {\n                            iVar11 = 0x38;\n                        }\n                        else {\n                            iVar11 = 0x48;\n                        }\n                        uVar18 = *(iVar17 + 0x30);\n                        uVar16 = (*(iVar17 + 0x32) & 0x7fff) + *(iVar17 + 0x30) & 0xffff;\n                        if (uVar18 <= uVar16) {\n                            *(*0x20 + -0xf0) = iVar13;\n                            *(*0x20 + -0xa0) = (iVar8 >> 0x3f & uVar9) + iVar10 + iVar12;\n                            uVar16 = uVar16 - uVar18;\n                            *(*0x20 + -0xf8) = uVar16;\n                            *(*0x20 + -0xa8) = iVar17 + iVar11 + (uVar18 << 3 & uVar18 - 0x100000 >> 0x3f);\n                            uVar9 = 0;\n                            while( true ) {\n                                if (iVar13 <= uVar9) {\n                                    return 1;\n                                }\n                                if (uVar16 <= uVar9) break;\n                                *(*0x20 + -0xd0) = uVar9;\n                                *(*0x20 + -0x120) = 0x452c25;\n                                cVar6 = fcn.00452040(uVar7);\n                                if (cVar6 == '\\0') {\n                                    return 0;\n                                }\n                                uVar9 = *(*0x20 + -0xd0) + 1;\n                                iVar13 = *(*0x20 + -0xf0);\n                                uVar16 = *(*0x20 + -0xf8);\n                                uVar7 = *(*0x20 + -0x20);\n                            }\n                            *(*0x20 + -0x120) = 0x452c58;\n                            fcn.00458f20(uVar16);\n                        }\n                        *(*0x20 + -0x120) = 0x452c65;\n                        uVar9 = uVar16;\n                        fcn.00458fe0(uVar16);\n                    }\n                    *(*0x20 + -0x120) = 0x452c6c;\n                    fcn.00458fe0(uVar9);\ncode_r0x00452c6c:\n                    arg1 = uVar16 & 0xffffffff;\n                    *(*0x20 + -0x120) = 0x452c76;\n                    fcn.00458f20(arg1);\n                }\n                *(*0x20 + -0x120) = 0x452c85;\n                fcn.00458f60(arg1, 0x100000);\n            default:\n                *(*0x20 + -0x120) = 0x452c8a;\n                fcn.00431980();\n                *(*0x20 + -0x120) = 0x452c9b;\n                fcn.00432280();\n                *(*0x20 + -0x120) = 0x452ca8;\n                fcn.00431f80();\n                *(*0x20 + -0x120) = 0x452cad;\n                fcn.00431be0();\n                *(*0x20 + -0x120) = 0x452cb2;\n                fcn.00431a00();\n                unaff_RBX = 0x1d;\n                *(*0x20 + -0x120) = 0x452cc5;\n                in_RAX = fcn.00430040();\n                break;\n            case 0x14:\n                uVar7 = *(iVar10 + 0x30);\n                *(*0x20 + -0x120) = 0x45241d;\n                uVar7 = fcn.00451700(uVar7);\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0xb0) = iVar8;\n                uVar7 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x120) = 0x45243e;\n                fcn.00451700();\n                if (iVar8 == *(*0x20 + -0xb0)) {\n                    *(*0x20 + -0x120) = 0x452458;\n                    cVar6 = fcn.004023a0(*(*0x20 + -0xb0), uVar7);\n                    if (cVar6 != '\\0') {\n                        iVar10 = *(*0x20 + 8);\n                        iVar12 = *(iVar10 + 0x40);\n                        iVar8 = *(*0x20 + 0x10);\n                        if (*(iVar8 + 0x40) != iVar12) {\n                            return 0;\n                        }\n                        *(*0x20 + -0xb0) = iVar12;\n                        uVar9 = 0;\n                        goto code_r0x004528c2;\n                    }\n                }\n                return 0;\n            case 0x15:\n                *(*0x20 + -0x120) = 0x4524c5;\n                cVar6 = fcn.00452040(*(*0x20 + -0x20));\n                if (cVar6 == '\\0') {\n                    uVar9 = 0;\n                }\n                else {\n                    *(*0x20 + -0x120) = 0x4524f2;\n                    uVar9 = fcn.00452040(*(*0x20 + -0x20));\n                }\n                return uVar9;\n            case 0x16:\n                *(*0x20 + -0x120) = 0x452517;\n                uVar9 = fcn.00452040(*(*0x20 + -0x20));\n                return uVar9;\n            case 0x17:\n                *(*0x20 + -0x120) = 0x45253c;\n                uVar9 = fcn.00452040(*(*0x20 + -0x20));\n                return uVar9;\n            case 0x18:\n            case 0x1a:\n                return 1;\n            case 0x19:\n                if (*(iVar10 + 0x40) != *(iVar17 + 0x40)) {\n                    return 0;\n                }\n                uVar7 = *(iVar10 + 0x30);\n                *(*0x20 + -0x120) = 0x452566;\n                uVar7 = fcn.00451700(uVar7);\n                *(*0x20 + -0x28) = uVar7;\n                *(*0x20 + -0xb0) = iVar8;\n                uVar7 = *(*(*0x20 + 0x10) + 0x30);\n                *(*0x20 + -0x120) = 0x452587;\n                fcn.00451700();\n                if (iVar8 == *(*0x20 + -0xb0)) {\n                    *(*0x20 + -0x120) = 0x4525a5;\n                    cVar6 = fcn.004023a0(*(*0x20 + -0xb0), uVar7);\n                    if (cVar6 != '\\0') {\n                        iVar12 = *(*0x20 + 8);\n                        iVar8 = *(iVar12 + 0x40);\n                        *(*0x20 + -0xb0) = iVar8;\n                        iVar10 = *(*0x20 + 0x10);\n                        uVar9 = 0;\n                        goto code_r0x00452694;\n                    }\n                }\n                return 0;\n            }\n        }\n        *(puVar14 + 8) = in_RAX;\n        *(puVar14 + 0x10) = unaff_RBX;\n        *(puVar14 + 0x18) = arg1;\n        *(puVar14 + -8) = 0x452cda;\n        fcn.004568e0();\n        in_RAX = *(puVar14 + 8);\n        unaff_RBX = *(puVar14 + 0x10);\n        arg1 = *(puVar14 + 0x18);\n        *0x20 = puVar14;\n    } while( true );\ncode_r0x00452694:\n    if (iVar8 <= uVar9) {\n        return 1;\n    }\n    uVar7 = *(iVar12 + 0x38);\n    uVar16 = *(iVar12 + 0x40);\n    if (uVar16 <= uVar9) {\ncode_r0x004528a0:\n        *(*0x20 + -0x120) = 0x4528a5;\n        fcn.00458f20(uVar16);\n        goto code_r0x004528a5;\n    }\n    uVar5 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar9) {\n        *(*0x20 + -0x120) = 0x45289c;\n        fcn.00458f20(uVar16);\n        goto code_r0x004528a0;\n    }\n    *(*0x20 + -0xb8) = uVar9 * 3;\n    *(*0x20 + -0x30) = uVar5;\n    *(*0x20 + -0x38) = uVar7;\n    *(*0x20 + -0xe0) = uVar9;\n    *(*0x20 + -0x120) = 0x4526ec;\n    uVar7 = fcn.00451700();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xc0) = iVar8;\n    uVar7 = *(*0x20 + -0x30);\n    *(*0x20 + -0x120) = 0x452712;\n    fcn.00451700();\n    if (iVar8 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x452739;\n    cVar6 = fcn.004023a0(*(*0x20 + -0xc0), uVar7);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    iVar12 = *(*(*0x20 + -0x30) + 8 + *(*0x20 + -0xb8) * 8);\n    *(*0x20 + -0x120) = 0x452774;\n    cVar6 = fcn.00452040(*(*0x20 + -0x20));\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x452792;\n    uVar7 = fcn.004517e0();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xc0) = iVar12;\n    uVar7 = *(*0x20 + -0x30);\n    *(*0x20 + -0x120) = 0x4527b8;\n    fcn.004517e0();\n    if (iVar12 != *(*0x20 + -0xc0)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x4527d9;\n    cVar6 = fcn.004023a0(*(*0x20 + -0xc0), uVar7);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    iVar12 = *(*0x20 + -0xb8);\n    if (*(*(*0x20 + -0x30) + 0x10 + iVar12 * 8) != *(*(*0x20 + -0x38) + 0x10 + iVar12 * 8)) {\n        return 0;\n    }\n    if (((**(*(*0x20 + -0x30) + iVar12 * 8) & 8) != 0) != ((**(*(*0x20 + -0x38) + iVar12 * 8) & 8) != 0)) {\n        return 0;\n    }\n    uVar9 = *(*0x20 + -0xe0) + 1;\n    iVar8 = *(*0x20 + -0xb0);\n    iVar10 = *(*0x20 + 0x10);\n    iVar12 = *(*0x20 + 8);\n    goto code_r0x00452694;\ncode_r0x004528c2:\n    if (iVar12 <= uVar9) {\n        return 1;\n    }\n    iVar12 = *(iVar10 + 0x38);\n    uVar16 = *(iVar10 + 0x40);\n    if (uVar16 <= uVar9) {\ncode_r0x00452aa6:\n        *(*0x20 + -0x120) = 0x452aab;\n        fcn.00458f20(uVar16);\n        goto code_r0x00452aab;\n    }\n    uVar7 = *(iVar8 + 0x38);\n    uVar16 = *(iVar8 + 0x40);\n    if (uVar16 <= uVar9) {\n        *(*0x20 + -0x120) = 0x452aa6;\n        fcn.00458f20(uVar16);\n        goto code_r0x00452aa6;\n    }\n    *(*0x20 + -0xd8) = uVar9;\n    *(*0x20 + -0x78) = iVar12 + uVar9 * 8;\n    *(*0x20 + -0x40) = uVar7;\n    *(*0x20 + -0x48) = iVar12;\n    *(*0x20 + -0x120) = 0x45291a;\n    uVar7 = fcn.00450fa0();\n    *(*0x20 + -0x50) = uVar7;\n    iVar12 = *(*0x20 + -0x40);\n    *(*0x20 + -0x80) = iVar12 + *(*0x20 + -0xd8) * 8;\n    uVar9 = *(iVar12 + *(*0x20 + -0xd8) * 8);\n    *(*0x20 + -0x120) = 0x452946;\n    uVar7 = fcn.00450fa0();\n    *(*0x20 + -0x58) = uVar7;\n    *(*0x20 + -0x120) = 0x45295b;\n    uVar7 = fcn.00451700();\n    *(*0x20 + -0x60) = uVar7;\n    *(*0x20 + -0xb8) = uVar9;\n    *(*0x20 + -0x120) = 0x452975;\n    iVar8 = fcn.00451700();\n    if (uVar9 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x452999;\n    cVar6 = fcn.004023a0(*(*0x20 + -0xb8), iVar12);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x4529b5;\n    uVar7 = fcn.00451920();\n    *(*0x20 + -0x28) = uVar7;\n    *(*0x20 + -0xb8) = iVar8;\n    *(*0x20 + -0x120) = 0x4529cf;\n    fcn.00451920();\n    if (iVar8 != *(*0x20 + -0xb8)) {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x4529ed;\n    cVar6 = fcn.004023a0(*(*0x20 + -0xb8), iVar12);\n    if (cVar6 == '\\0') {\n        return 0;\n    }\n    *(*0x20 + -0x120) = 0x452a0f;\n    uVar7 = fcn.00451240();\n    *(*0x20 + -0x70) = uVar7;\n    *(*0x20 + -0x120) = 0x452a35;\n    fcn.00451240();\n    *(*0x20 + -0x120) = 0x452a4d;\n    cVar6 = fcn.00452040(*(*0x20 + -0x20));\n    if (cVar6 == '\\0') {\n        return 0;\n    }\ncode_r0x004528a5:\n    uVar9 = *(*0x20 + -0xd8) + 1;\n    iVar12 = *(*0x20 + -0xb0);\n    iVar8 = *(*0x20 + 0x10);\n    iVar10 = *(*0x20 + 8);\n    goto code_r0x004528c2;\n}\n",
        "token_count": 6405
    },
    "004463c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nuint64_t fcn.004463c0(void)\n\n{\n    char cVar1;\n    char *in_RAX;\n    int64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    if (unaff_RBX == 0) {\n        return 0;\n    }\n    cVar1 = *in_RAX;\n    if (cVar1 == '-') {\n        unaff_RBX = unaff_RBX + -1;\n        in_RAX = in_RAX + (-unaff_RBX >> 0x3f & 1);\n    }\n    uVar4 = 0;\n    for (iVar2 = 0; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n        if (9 < in_RAX[iVar2] - 0x30U) {\n            return 0;\n        }\n        if (0x1999999999999999 < uVar4) {\n            return 0;\n        }\n        uVar3 = uVar4 * 10;\n        uVar4 = (in_RAX[iVar2] + uVar4 * 10) - 0x30;\n        if (uVar4 < uVar3) {\n            return 0;\n        }\n    }\n    if (cVar1 != '-') {\n        if (0x7fffffffffffffff < uVar4) {\n            return 0;\n        }\n        if (cVar1 != '-') goto code_r0x00446479;\n    }\n    if (0x8000000000000000 < uVar4) {\n        return 0;\n    }\ncode_r0x00446479:\n    if (cVar1 == '-') {\n        uVar4 = -uVar4;\n    }\n    return uVar4;\n}\n",
        "token_count": 391
    },
    "004095e0": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint64_t fcn.004095e0(void)\n\n{\n    uint64_t *in_RAX;\n    uint64_t uVar1;\n    uint64_t *unaff_RBX;\n    uint64_t uVar2;\n    uint64_t *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = unaff_RBX[1] + 1;\n            unaff_RBX[1] = uVar1;\n            uVar2 = unaff_RBX << 0x10 | uVar1 & 0x7ffff;\n            puVar3 = (uVar2 >> 0x13) * 8;\n            if (unaff_RBX == puVar3) {\n                do {\n                    uVar1 = *in_RAX;\n                    *unaff_RBX = uVar1;\n                    LOCK();\n                    bVar5 = uVar1 == *in_RAX;\n                    *in_RAX = *in_RAX ^ bVar5 * (*in_RAX ^ uVar2);\n                } while (!bVar5);\n                return uVar1 ^ !bVar5 * (uVar1 ^ *in_RAX);\n            }\n            *(*0x20 + -0x20) = uVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x28) = uVar2;\n            *(*0x20 + -0x18) = puVar3;\n            *(*0x20 + -0x40) = 0x409667;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x409678;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x409685;\n            fcn.00432200();\n            *(*0x20 + -0x40) = 0x409696;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4096a5;\n            fcn.004320e0();\n            *(*0x20 + -0x40) = 0x4096b6;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4096c5;\n            fcn.004320e0();\n            *(*0x20 + -0x40) = 0x4096d6;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4096e5;\n            fcn.00432200();\n            *(*0x20 + -0x40) = 0x4096ea;\n            fcn.00431be0();\n            *(*0x20 + -0x40) = 0x4096ef;\n            fcn.00431a00();\n            unaff_RBX = 0xc;\n            *(*0x20 + -0x40) = 0x409705;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x409715;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 875
    },
    "00409740": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid fcn.00409740(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x409767;\n            iVar1 = fcn.0040f9c0(0);\n            if (iVar1 == 0) {\n                if (*(*0x20 + 8) == ((*(*0x20 + 8) << 0x10 | 0x7ffffU) >> 0x13) * 8) {\n                    return;\n                }\n                *(*0x20 + -0x30) = 0x40979a;\n                fcn.00431980();\n                *(*0x20 + -0x10) = *(*0x20 + 8);\n                *(*0x20 + -0x30) = 0x4097a9;\n                fcn.00431980();\n                *(*0x20 + -0x30) = 0x4097ba;\n                fcn.00432280();\n                *(*0x20 + -0x30) = 0x4097c5;\n                fcn.004320e0();\n                *(*0x20 + -0x30) = 0x4097ca;\n                fcn.00431be0();\n                *(*0x20 + -0x30) = 0x4097cf;\n                fcn.00431a00();\n                *(*0x20 + -0x30) = 0x4097e5;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x4097f6;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x409805;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 570
    },
    "004086a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.004086a0(void)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    int64_t iVar5;\n    \n    if (unaff_RBX < 0) {\n        LOCK();\n        *(in_RAX + 0x500) = *(in_RAX + 0x500) + 1;\n        return;\n    }\n    iVar3 = 0x3f;\n    if (unaff_RBX != 0) {\n        for (; unaff_RBX >> iVar3 == 0; iVar3 = iVar3 + -1) {\n        }\n    }\n    if (unaff_RBX == 0) {\n        iVar3 = -1;\n    }\n    iVar5 = iVar3 + 1;\n    if (iVar5 < 9) {\n        uVar4 = 0;\n        iVar5 = 9;\n    }\n    else {\n        uVar4 = iVar3 - 7;\n    }\n    if (uVar4 < 0x28) {\n        uVar4 = (unaff_RBX >> ((iVar5 - 3U | ~-(iVar5 - 3U < 0x40)) & 0x3f) & 3) + uVar4 * 4;\n        if (uVar4 < 0xa0) {\n            piVar1 = in_RAX + uVar4 * 8;\n            LOCK();\n            *piVar1 = *piVar1 + 1;\n            return;\n        }\n        fcn.00458f40(0xa0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    LOCK();\n    *(in_RAX + 0x508) = *(in_RAX + 0x508) + 1;\n    return;\n}\n",
        "token_count": 421
    },
    "004349e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t fcn.004349e0(ulong arg1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((unaff_EBX == 9) && (arg1 == 4)) {\n                *(in_RAX + 0xb0) = 0x1c;\n                uVar3 = 0;\n                LOCK();\n                puVar1 = in_RAX + 0x90;\n                uVar2 = *puVar1;\n                if (uVar2 == 9) {\n                    *puVar1 = 4;\n                }\n                else {\n                    uVar3 = *puVar1;\n                }\n                return uVar3 & 0xffffff00 | uVar2 == 9;\n            }\n            unaff_EBX = 0x10;\n            *(*0x20 + -0x20) = 0x434a38;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + 0x14) = arg1;\n        *(puVar4 + -8) = 0x434a4b;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x14);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 489
    },
    "00449180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nulong fcn.00449180(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    do {\n        iVar2 = *(in_RAX + 8);\n        switch(iVar2) {\n        case 0:\n            return 0;\n        case 1:\n        case 8:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044afe0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x229c) = *(iVar4 + 0x229c) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        case 2:\n        case 9:\n            fcn.004567a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            break;\n        case 3:\n        case 4:\n        case 5:\n            return 0;\n        case 6:\n            fcn.004567a0();\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            break;\n        case 7:\n            piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n            *piVar1 = *piVar1 + 1;\n            iVar3 = *(unaff_R14 + 0x30);\n            LOCK();\n            if (iVar2 == *(in_RAX + 8)) {\n                *(in_RAX + 8) = 6;\n                iVar4 = *in_RAX;\n                LOCK();\n                if (*(in_RAX + 8) == 6) {\n                    *(in_RAX + 8) = 3;\n                }\n                else {\n                    fcn.0044afe0();\n                }\n                iVar2 = *(iVar3 + 0xd8);\n                *(iVar3 + 0xd8) = iVar2 + -1;\n                if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                    *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n                }\n                LOCK();\n                *(iVar4 + 0x229c) = *(iVar4 + 0x229c) + 1;\n                return 1;\n            }\n            iVar2 = *(iVar3 + 0xd8);\n            *(iVar3 + 0xd8) = iVar2 + -1;\n            if ((iVar2 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n                *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n            }\n            break;\n        default:\n            fcn.0044afe0();\n        }\n    } while( true );\n}\n",
        "token_count": 945
    },
    "004497c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuchar fcn.004497c0(int64_t *arg1, ulong noname_1, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    uint64_t *puVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    char cVar7;\n    int64_t *in_RAX;\n    int32_t iVar8;\n    int64_t iVar9;\n    ulong arg2;\n    uint64_t unaff_RBX;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x28) = unaff_RSI;\n            *(*0x20 + 0x30) = arg3;\n            if (0 < unaff_RBX) {\n                if (-1 < arg1) break;\n                *(*0x20 + -0x48) = 0x449c5b;\n                fcn.00430040();\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x48) = 0x449c6c;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        *(puVar10 + 0x20) = unaff_RDI;\n        *(puVar10 + 0x28) = unaff_RSI;\n        *(puVar10 + 0x30) = arg3;\n        *(puVar10 + 0x38) = arg4;\n        *(puVar10 + -8) = 0x449c95;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_RDI = *(puVar10 + 0x20);\n        unaff_RSI = *(puVar10 + 0x28);\n        arg3 = *(puVar10 + 0x30);\n        arg4 = *(puVar10 + 0x38);\n        *0x20 = puVar10;\n    } while( true );\n    *(*0x20 + 0x38) = arg4;\n    *(*0x20 + 0x20) = unaff_RDI;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x10) = unaff_RBX;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x30) = arg3;\n    *(*0x20 + -0x10) = unaff_RSI;\ncode_r0x0044981c:\n    iVar8 = *(in_RAX + 8);\n    switch(iVar8) {\n    case 0:\n    case 5:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar9 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\x01';\n            arg2 = 0;\n            goto code_r0x00449a72;\n        }\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044981c;\n    case 1:\n    case 7:\n    case 8:\n        piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n        *piVar1 = *piVar1 + 1;\n        iVar9 = *(unaff_R14 + 0x30);\n        LOCK();\n        if (iVar8 == *(in_RAX + 8)) {\n            *(in_RAX + 8) = 6;\n            cVar7 = '\\0';\n            arg2 = 1;\n            goto code_r0x00449a72;\n        }\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044981c;\n    case 2:\n    case 4:\n    case 9:\n        *(*0x20 + -0x40) = 0x47cc98;\n        *(*0x20 + -0x48) = 0x4499d5;\n        fcn.004567a0();\n        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044981c;\n    case 3:\n        break;\n    case 6:\n        *(*0x20 + -0x40) = 0x47cc98;\n        *(*0x20 + -0x48) = 0x449915;\n        fcn.004567a0();\n        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044981c;\n    default:\n        *(*0x20 + -0x48) = 0x449a1a;\n        fcn.0044afe0();\n        arg1 = *(*0x20 + 0x18);\n        unaff_RBX = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + -0x10);\n        unaff_RDI = *(*0x20 + 0x20);\n        arg3 = *(*0x20 + 0x30);\n        arg4 = *(*0x20 + 0x38);\n        in_RAX = *(*0x20 + 8);\n        goto code_r0x0044981c;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    iVar9 = *(unaff_R14 + 0x30);\n    LOCK();\n    if (iVar8 != *(in_RAX + 8)) {\n        iVar8 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        goto code_r0x0044981c;\n    }\n    *(in_RAX + 8) = 6;\n    LOCK();\n    *(*in_RAX + 0x229c) = *(*in_RAX + 0x229c) + -1;\n    cVar7 = '\\0';\n    arg2 = 0;\ncode_r0x00449a72:\n    in_RAX[2] = arg1;\n    if (*0x544c10 == 0) {\n        in_RAX[3] = unaff_RDI;\n    }\n    else {\n        arg1 = in_RAX + 3;\n        *(*0x20 + -0x48) = 0x449a9a;\n        cVar7 = fcn.00458ba0(arg1, unaff_RDI, arg3, arg4);\n    }\n    in_RAX[4] = unaff_RSI;\n    if (*0x544c10 == 0) {\n        in_RAX[5] = arg3;\n    }\n    else {\n        *(*0x20 + -0x48) = 0x449ab9;\n        cVar7 = fcn.00458c00(arg1, arg2, arg3, arg4);\n    }\n    *(*0x20 + -0x28) = iVar9;\n    *(*0x20 + -0x2d) = arg2;\n    in_RAX[6] = arg4;\n    if (cVar7 == '\\0') {\n        in_RAX[7] = unaff_RBX;\n        iVar8 = 8;\n        if (in_RAX[1] != unaff_RBX && unaff_RBX <= in_RAX[1]) {\n            iVar8 = 7;\n        }\n        iVar4 = *in_RAX;\n        if (iVar8 == 7) {\n            do {\n                uVar5 = *(iVar4 + 0x1208);\n                if ((uVar5 != 0) && (uVar5 < unaff_RBX)) break;\n                LOCK();\n                puVar2 = iVar4 + 0x1208;\n                uVar6 = *puVar2;\n                *puVar2 = *puVar2 ^ (uVar5 == uVar6) * (*puVar2 ^ unaff_RBX);\n            } while (uVar5 != uVar6);\n        }\n        LOCK();\n        if (*(in_RAX + 8) == 6) {\n            *(in_RAX + 8) = iVar8;\n        }\n        else {\n            *(*0x20 + -0x2c) = iVar8;\n            *(*0x20 + -0x48) = 0x449bb7;\n            fcn.0044afe0();\n            iVar8 = *(*0x20 + -0x2c);\n            iVar9 = *(*0x20 + -0x28);\n        }\n        iVar3 = *(iVar9 + 0xd8);\n        *(iVar9 + 0xd8) = iVar3 + -1;\n        if ((iVar3 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        if (iVar8 == 7) {\n            *(*0x20 + -0x48) = 0x449c0f;\n            fcn.00438720();\n        }\n    }\n    else {\n        in_RAX[1] = unaff_RBX;\n        iVar9 = *(*(unaff_R14 + 0x30) + 0xa0);\n        *(*0x20 + -0x18) = iVar9;\n        iVar9 = iVar9 + 0x2278;\n        *(*0x20 + -0x20) = iVar9;\n        *(*0x20 + -0x48) = 0x449b1c;\n        fcn.00409860();\n        *(*0x20 + -0x48) = 0x449b2b;\n        fcn.00448fe0(iVar9, arg2, arg3, arg4);\n        *(*0x20 + -0x48) = 0x449b37;\n        fcn.00409a80();\n        LOCK();\n        if (*(*(*0x20 + 8) + 0x40) == 6) {\n            *(*(*0x20 + 8) + 0x40) = 1;\n        }\n        else {\n            *(*0x20 + -0x48) = 0x449b57;\n            fcn.0044afe0();\n        }\n        iVar8 = *(*(*0x20 + -0x28) + 0xd8);\n        *(*(*0x20 + -0x28) + 0xd8) = iVar8 + -1;\n        if ((iVar8 == 1) && (*(unaff_R14 + 0xb1) != '\\0')) {\n            *(unaff_R14 + 0x10) = 0xfffffffffffffade;\n        }\n        *(*0x20 + -0x48) = 0x449b8d;\n        fcn.00438720();\n    }\n    return *(*0x20 + -0x2d);\n}\n",
        "token_count": 3035
    },
    "00449f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nvoid fcn.00449f00(void)\n\n{\n    uint32_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t *noname_0;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t *arg1_00;\n    uint64_t arg4;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x80;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x1208) == 0) || (unaff_RBX < *(in_RAX + 0x1208))) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(in_RAX + 0x1208) = 0;\n            noname_0 = NULL;\n            arg1 = 0;\n            unaff_RBX = 0;\n            iVar3 = 0;\n            while( true ) {\n                arg1_00 = *(in_RAX + 0x2288);\n                if (arg1_00 <= noname_0) {\n                    if (unaff_RBX != 0) {\n                        *(*0x20 + -0x88) = 0x44a1b9;\n                        fcn.0044a200(unaff_RBX);\n                    }\n                    return;\n                }\n                if (arg1_00 <= noname_0) goto code_r0x0044a1d4;\n                arg1_00 = *(*(in_RAX + 0x2280) + noname_0 * 8);\n                if (in_RAX != *arg1_00) break;\n                *(*0x20 + -0x30) = noname_0;\n                *(*0x20 + -0x38) = arg1;\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x40) = unaff_RBX;\n                uVar1 = *(arg1_00 + 8);\n                if (uVar1 < 10) {\n                    *(*0x20 + -0x18) = arg1_00;\n                    switch(uVar1) {\n                    default:\n                        *(*0x20 + -0x88) = 0x44a15c;\n                        fcn.0044afe0();\n                        in_RAX = *(*0x20 + 8);\n                        noname_0 = *(*0x20 + -0x30);\n                        arg1 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 1:\n                        break;\n                    case 3:\n                        LOCK();\n                        if (uVar1 == *(arg1_00 + 8)) {\n                            *(arg1_00 + 8) = 4;\n                            *(*0x20 + -0x88) = 0x449fe5;\n                            iVar3 = fcn.00449400(noname_0, arg1);\n                            LOCK();\n                            if (*(*(*0x20 + -0x18) + 0x40) == 4) {\n                                *(*(*0x20 + -0x18) + 0x40) = 5;\n                            }\n                            else {\n                                *(*0x20 + -0x20) = iVar3;\n                                *(*0x20 + -0x88) = 0x44a00e;\n                                fcn.0044afe0();\n                                iVar3 = *(*0x20 + -0x20);\n                            }\n                            in_RAX = *(*0x20 + 8);\n                            LOCK();\n                            *(in_RAX + 0x229c) = *(in_RAX + 0x229c) + -1;\n                            noname_0 = iVar3 + -1;\n                            arg1 = *(*0x20 + -0x38);\n                            unaff_RBX = *(*0x20 + -0x40);\n                            iVar3 = *(*0x20 + -0x10);\n                        }\n                        break;\n                    case 6:\n                        *(*0x20 + -0x80) = 0x47cc98;\n                        *(*0x20 + -0x88) = 0x44a065;\n                        fcn.004567a0();\n                        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                        noname_0 = *(*0x20 + -0x30) + -1;\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + -0x38);\n                        unaff_RBX = *(*0x20 + -0x40);\n                        iVar3 = *(*0x20 + -0x10);\n                        break;\n                    case 7:\n                    case 8:\n                        LOCK();\n                        bVar5 = uVar1 == *(arg1_00 + 8);\n                        if (bVar5) {\n                            *(arg1_00 + 8) = 9;\n                        }\n                        arg4 = uVar1 & 0xffffff00 | bVar5;\n                        if (bVar5) {\n                            iVar3 = arg1_00[7];\n                            arg1_00[1] = iVar3;\n                            *(*0x20 + -0x88) = 0x44a0cd;\n                            iVar2 = fcn.00449400(noname_0, iVar3);\n                            unaff_RBX = *(*0x20 + -0x40) + 1;\n                            arg1 = *(*0x20 + -0x38);\n                            if (arg1 < unaff_RBX) {\n                                *(*0x20 + -0x28) = iVar2;\n                                *(*0x20 + -0x88) = 0x44a105;\n                                iVar3 = fcn.00441fe0(arg1);\n                                iVar2 = *(*0x20 + -0x28);\n                            }\n                            else {\n                                iVar3 = *(*0x20 + -0x10);\n                            }\n                            if (*0x544c10 == 0) {\n                                *(iVar3 + -8 + unaff_RBX * 8) = *(*0x20 + -0x18);\n                            }\n                            else {\n                                *(*0x20 + -0x88) = 0x44a134;\n                                iVar2 = fcn.00458be0(arg1, iVar3, arg1_00, arg4);\n                            }\n                            noname_0 = iVar2 + -1;\n                            in_RAX = *(*0x20 + 8);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x88) = 0x44a185;\n                    fcn.0044afe0();\n                    in_RAX = *(*0x20 + 8);\n                    noname_0 = *(*0x20 + -0x30);\n                    arg1 = *(*0x20 + -0x38);\n                    unaff_RBX = *(*0x20 + -0x40);\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                noname_0 = noname_0 + 1;\n            }\n            unaff_RBX = 0x13;\n            *(*0x20 + -0x88) = 0x44a1d4;\n            fcn.00430040();\ncode_r0x0044a1d4:\n            *(*0x20 + -0x88) = 0x44a1df;\n            in_RAX = fcn.00458f20(arg1_00);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x44a1ef;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1863
    },
    "0040fb20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040fb20(void)\n\n{\n    code *pcVar1;\n    uint64_t in_RAX;\n    uint32_t uVar2;\n    uint64_t unaff_RBX;\n    int64_t iVar4;\n    bool bVar5;\n    uint32_t uVar3;\n    \n    if (in_RAX + 0x800000000000 >> 0x2a < 0x40) {\n        uVar3 = in_RAX >> 3;\n        uVar2 = uVar3 & 0x7ffff;\n        if (uVar2 >> 6 < 0x2000) {\n            iVar4 = (uVar3 & 0x3f) - 0x40;\n            bVar5 = -(unaff_RBX >> 3) == iVar4;\n            if (((unaff_RBX >> 3 <= -iVar4 && !bVar5) || (bVar5)) || (uVar2 >> 9 < 0x400)) {\n                return;\n            }\n            fcn.00458f40(0x400);\n        }\n        fcn.00458f40(0x2000);\n    }\n    fcn.00458f40(0x40);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 286
    },
    "004199c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004199c0(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_RSI;\n    ulong unaff_RDI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \ncode_r0x004199c0:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x50;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x10) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x28) = unaff_RSI;\n        uVar4 = 0;\n        do {\n            if (unaff_RBX <= uVar4) {\n                return;\n            }\n            if (arg1 == 0) {\ncode_r0x00419a59:\n                *(*0x20 + -0x18) = uVar4;\n                uVar4 = *(in_RAX + uVar4);\n                if (((unaff_RSI == 0) || (uVar4 <= *(unaff_RSI + 0x100) && *(unaff_RSI + 0x100) != uVar4)) ||\n                   (*(unaff_RSI + 0x108) < uVar4 || *(unaff_RSI + 0x108) == uVar4)) {\n                    *(*0x20 + -0x20) = uVar4;\n                    *(*0x20 + -0x58) = 0x419abc;\n                    iVar3 = fcn.00420c60();\n                    if (iVar3 == 0) {\n                        in_RAX = *(*0x20 + 8);\n                        arg1 = *(*0x20 + 0x18);\n                        unaff_RBX = *(*0x20 + 0x10);\n                        unaff_RSI = *(*0x20 + 0x28);\n                        unaff_RDI = *(*0x20 + -0x10);\n                        uVar4 = *(*0x20 + -0x18);\n                    }\n                    else {\n                        iVar2 = *(iVar3 + 0x18);\n                        uVar4 = (*(*0x20 + -0x20) - iVar2) * *(iVar3 + 0x5c);\n                        arg3 = uVar4 >> 0x20;\n                        if ((*(iVar3 + 0x98) < arg3 || *(iVar3 + 0x98) == arg3) &&\n                           ((1 << (uVar4 >> 0x20 & 7) & *((uVar4 >> 0x23) + *(iVar3 + 0x48))) == 0)) {\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                        else {\n                            iVar3 = *(iVar3 + 0x68);\n                            *(*0x20 + -0x58) = 0x419b5a;\n                            fcn.00419ca0(*(*0x20 + -0x18), iVar2 + iVar3 * arg3, arg3);\n                            in_RAX = *(*0x20 + 8);\n                            arg1 = *(*0x20 + 0x18);\n                            unaff_RBX = *(*0x20 + 0x10);\n                            unaff_RSI = *(*0x20 + 0x28);\n                            unaff_RDI = *(*0x20 + -0x10);\n                            uVar4 = *(*0x20 + -0x18);\n                        }\n                    }\n                }\n                else {\n                    *(*0x20 + -0x58) = 0x419a8c;\n                    fcn.0041d900(1);\n                    in_RAX = *(*0x20 + 8);\n                    arg1 = *(*0x20 + 0x18);\n                    unaff_RBX = *(*0x20 + 0x10);\n                    unaff_RSI = *(*0x20 + 0x28);\n                    unaff_RDI = *(*0x20 + -0x10);\n                    uVar4 = *(*0x20 + -0x18);\n                }\n            }\n            else {\n                uVar1 = *((uVar4 >> 6) + arg1);\n                if (uVar1 == 0) {\n                    if ((uVar4 & 0x3f) != 0) goto code_r0x00419baf;\n                    uVar4 = uVar4 + 0x38;\n                }\n                else if ((uVar1 >> (uVar4 >> 3 & 7) & 1) != 0) goto code_r0x00419a59;\n            }\n            uVar4 = uVar4 + 8;\n        } while( true );\n    }\n    goto code_r0x00419bc6;\ncode_r0x00419baf:\n    unaff_RBX = 0xf;\n    *(*0x20 + -0x58) = 0x419bc5;\n    in_RAX = fcn.00430040();\ncode_r0x00419bc6:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + 0x20) = unaff_RDI;\n    *(puVar5 + 0x28) = unaff_RSI;\n    *(puVar5 + -8) = 0x419be5;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    unaff_RDI = *(puVar5 + 0x20);\n    unaff_RSI = *(puVar5 + 0x28);\n    *0x20 = puVar5;\n    goto code_r0x004199c0;\n}\n",
        "token_count": 1518
    },
    "0041f6c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041f6c0(void)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x80) = 0x41f6e5;\n            fcn.00431980();\n            *(*0x20 + -0x40) = *(*(*0x20 + 8) + 0x68);\n            *(*0x20 + -0x48) = *(*(*0x20 + 8) + 0x30);\n            *(*0x20 + -0x80) = 0x41f705;\n            fcn.00431980();\n            *(*0x20 + -0x80) = 0x41f716;\n            fcn.00432280();\n            *(*0x20 + -0x80) = 0x41f725;\n            fcn.00432240();\n            *(*0x20 + -0x80) = 0x41f736;\n            fcn.00432280();\n            *(*0x20 + -0x80) = 0x41f745;\n            fcn.00431f80();\n            *(*0x20 + -0x80) = 0x41f756;\n            fcn.00432280();\n            *(*0x20 + -0x80) = 0x41f765;\n            fcn.00431f80();\n            *(*0x20 + -0x80) = 0x41f776;\n            fcn.00432280();\n            *(*0x20 + -0x80) = 0x41f77b;\n            fcn.00431a00();\n            iVar2 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar2 + 0x50);\n            *(*0x20 + -0x30) = 1;\n            *(*0x20 + -0x28) = 0;\n            *(*0x20 + -0x20) = *(iVar2 + 0x48);\n            *(*0x20 + -0x18) = 1;\n            *(*0x20 + -0x10) = 0;\n            uVar3 = 0;\n            while (uVar3 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar3) {\n                *(*0x20 + -0x58) = uVar3;\n                *(*0x20 + -0x50) = *(iVar2 + 0x68) * uVar3 + *(iVar2 + 0x18);\n                *(*0x20 + -0x80) = 0x41f7f4;\n                fcn.00431980();\n                *(*0x20 + -0x80) = 0x41f7fe;\n                fcn.004320e0();\n                *(*0x20 + -0x80) = 0x41f805;\n                fcn.00431a00();\n                if (*(*(*0x20 + 8) + 0x30) < *(*0x20 + -0x58) || *(*(*0x20 + 8) + 0x30) == *(*0x20 + -0x58)) {\n                    bVar5 = (**(*0x20 + -0x20) & *(*0x20 + -0x18)) != 0;\n                }\n                else {\n                    bVar5 = true;\n                }\n                *(*0x20 + -0x59) = bVar5;\n                if (bVar5 == false) {\n                    *(*0x20 + -0x80) = 0x41f85b;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x41f86c;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x41f871;\n                    fcn.00431a00();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x41f83e;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x41f84f;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x41f854;\n                    fcn.00431a00();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    *(*0x20 + -0x80) = 0x41f8a7;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x41f8b8;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x41f8bd;\n                    fcn.00431a00();\n                }\n                else {\n                    *(*0x20 + -0x80) = 0x41f889;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x41f89a;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x41f89f;\n                    fcn.00431a00();\n                }\n                if ((**(*0x20 + -0x38) & *(*0x20 + -0x30)) == 0) {\n                    uVar1 = 0;\n                }\n                else {\n                    uVar1 = *(*0x20 + -0x59) ^ 1;\n                }\n                *(*0x20 + -0x5a) = uVar1;\n                if (uVar1 != 0) {\n                    *(*0x20 + -0x80) = 0x41f8e9;\n                    fcn.00431980();\n                    *(*0x20 + -0x80) = 0x41f8fa;\n                    fcn.00432280();\n                    *(*0x20 + -0x80) = 0x41f8ff;\n                    fcn.00431a00();\n                }\n                *(*0x20 + -0x80) = 0x41f905;\n                fcn.00431980();\n                *(*0x20 + -0x80) = 0x41f90a;\n                fcn.00431be0();\n                *(*0x20 + -0x80) = 0x41f90f;\n                fcn.00431a00();\n                if (*(*0x20 + -0x5a) != '\\0') {\n                    *(*0x20 + -0x80) = 0x41f945;\n                    fcn.004323e0(0);\n                }\n                if (*(*0x20 + -0x30) == -0x80) {\n                    *(*0x20 + -0x38) = *(*0x20 + -0x38) + 1;\n                    *(*0x20 + -0x30) = 1;\n                }\n                else {\n                    *(*0x20 + -0x30) = *(*0x20 + -0x30) << 1;\n                }\n                *(*0x20 + -0x28) = *(*0x20 + -0x28) + 1;\n                if (*(*0x20 + -0x18) == -0x80) {\n                    *(*0x20 + -0x20) = *(*0x20 + -0x20) + 1;\n                    *(*0x20 + -0x18) = 1;\n                }\n                else {\n                    *(*0x20 + -0x18) = *(*0x20 + -0x18) << 1;\n                }\n                *(*0x20 + -0x10) = *(*0x20 + -0x10) + 1;\n                iVar2 = *(*0x20 + 8);\n                uVar3 = *(*0x20 + -0x58) + 1;\n            }\n            *(*0x20 + -0x80) = 0x41f9a5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41f9b0;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 2009
    },
    "00426f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nuint64_t fcn.00426f00(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    int64_t in_RAX;\n    uint8_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    uVar4 = 0xffffffffffffffff;\n    uVar5 = 0;\n    uVar7 = 0;\n    for (iVar2 = 0; iVar2 < 8; iVar2 = iVar2 + 1) {\n        uVar9 = *(in_RAX + iVar2 * 8);\n        if (uVar9 == 0) {\n            uVar5 = uVar5 + 0x40;\n        }\n        else {\n            iVar6 = 0;\n            if (uVar9 != 0) {\n                for (; (uVar9 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                }\n            }\n            uVar5 = iVar6 + uVar5;\n            if (uVar4 == 0xffffffffffffffff) {\n                uVar4 = uVar5;\n            }\n            if (uVar7 < uVar5) {\n                uVar7 = uVar5;\n            }\n            iVar6 = 0x3f;\n            if (uVar9 != 0) {\n                for (; uVar9 >> iVar6 == 0; iVar6 = iVar6 + -1) {\n                }\n            }\n            if (uVar9 == 0) {\n                iVar6 = -1;\n            }\n            uVar5 = -(iVar6 + -0x3f);\n        }\n    }\n    if (uVar4 == 0xffffffffffffffff) {\n        return 0x8000040000200;\n    }\n    if (uVar7 < uVar5) {\n        uVar7 = uVar5;\n    }\n    if (0x3d < uVar7) {\n        if (uVar7 == 0x200000) {\n            uVar7 = 0x8000000000000000;\n        }\n        else {\n            uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n        }\n        return uVar7;\n    }\n    iVar2 = 0;\n    do {\n        if (7 < iVar2) {\n            if (uVar7 == 0x200000) {\n                uVar7 = 0x8000000000000000;\n            }\n            else {\n                uVar7 = (uVar7 & 0x1fffff) << 0x15 | uVar4 & 0x1fffff | (uVar5 & 0x1fffff) << 0x2a;\n            }\n            return uVar7;\n        }\n        uVar9 = *(in_RAX + iVar2 * 8);\n        iVar6 = 0;\n        if (uVar9 != 0) {\n            for (; (uVar9 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n            }\n        }\n        uVar1 = iVar6;\n        if (uVar9 == 0) {\n            uVar1 = 0;\n        }\n        uVar9 = uVar9 >> (uVar1 & 0x3f);\n        if ((uVar9 & uVar9 + 1) != 0) {\n            uVar3 = 1;\n            uVar8 = uVar7;\ncode_r0x004270b3:\n            do {\n                if (uVar8 != 0) {\n                    if (uVar3 < uVar8) {\n                        uVar9 = uVar9 | uVar9 >> (uVar3 & 0x3f);\n                        if ((uVar9 & uVar9 + 1) == 0) break;\n                        uVar8 = uVar8 - uVar3;\n                        uVar3 = uVar3 << 1;\n                        goto code_r0x004270b3;\n                    }\n                    uVar9 = uVar9 | uVar9 >> (uVar8 & 0x3f);\n                    if ((uVar9 & uVar9 + 1) == 0) break;\n                }\n                uVar8 = ~uVar9;\n                iVar6 = 0;\n                if (uVar8 != 0) {\n                    for (; (uVar8 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                    }\n                }\n                uVar1 = iVar6;\n                if (uVar8 == 0) {\n                    uVar1 = 0;\n                }\n                uVar9 = uVar9 >> (uVar1 & 0x3f);\n                uVar8 = 0;\n                if (uVar9 != 0) {\n                    for (; (uVar9 >> uVar8 & 1) == 0; uVar8 = uVar8 + 1) {\n                    }\n                }\n                if (uVar9 == 0) {\n                    uVar8 = 0x40;\n                }\n                uVar9 = uVar9 >> (uVar8 & 0x3f);\n                uVar7 = uVar8 + uVar7;\n            } while ((uVar9 & uVar9 + 1) != 0);\n        }\n        iVar2 = iVar2 + 1;\n    } while( true );\n}\n",
        "token_count": 1247
    },
    "004271a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nint64_t fcn.004271a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    arg1 = arg1 >> 6;\n    iVar3 = -1;\n    iVar5 = 0;\n    do {\n        if (7 < arg1) {\n            return -1;\n        }\n        uVar1 = *(in_RAX + arg1 * 8);\n        uVar6 = ~uVar1;\n        if (uVar6 == 0) {\n            iVar5 = 0;\n        }\n        else {\n            if (iVar3 == -1) {\n                iVar3 = 0;\n                if (uVar6 != 0) {\n                    for (; (uVar6 >> iVar3 & 1) == 0; iVar3 = iVar3 + 1) {\n                    }\n                }\n                iVar3 = arg1 * 0x40 + iVar3;\n            }\n            iVar7 = 0;\n            if (uVar1 != 0) {\n                for (; (uVar1 >> iVar7 & 1) == 0; iVar7 = iVar7 + 1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar7 = 0x40;\n            }\n            if (unaff_RBX <= iVar7 + iVar5) {\n                return arg1 * 0x40 - iVar5;\n            }\n            uVar4 = unaff_RBX - 1;\n            uVar2 = 1;\n            while (uVar4 != 0) {\n                if (uVar4 <= uVar2) {\n                    uVar6 = uVar6 >> (uVar4 & 0x3f) & uVar6;\n                    break;\n                }\n                uVar6 = uVar6 & uVar6 >> (uVar2 & 0x3f);\n                if (uVar6 == 0) {\n                    uVar4 = 0x40;\n                    goto code_r0x0042722b;\n                }\n                uVar4 = uVar4 - uVar2;\n                uVar2 = uVar2 << 1;\n            }\n            uVar4 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar4 & 1) == 0; uVar4 = uVar4 + 1) {\n                }\n            }\n            if (uVar6 == 0) {\n                uVar4 = 0x40;\n            }\ncode_r0x0042722b:\n            if (uVar4 < 0x40) {\n                return uVar4 + arg1 * 0x40;\n            }\n            iVar5 = 0x3f;\n            if (uVar1 != 0) {\n                for (; uVar1 >> iVar5 == 0; iVar5 = iVar5 + -1) {\n                }\n            }\n            if (uVar1 == 0) {\n                iVar5 = -1;\n            }\n            iVar5 = -(iVar5 + -0x3f);\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 735
    },
    "00429460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00429460(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong unaff_RBX;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = fcn.00429960(in_RAX + 0x20);\n    uVar3 = *(in_RAX + 0x10);\n    uVar4 = iVar1 - 1U >> 9;\n    do {\n        if (uVar4 < uVar3) {\n            iVar5 = *(*(in_RAX + 8) + uVar4 * 8);\ncode_r0x004295ce:\n            *(iVar5 + (iVar1 - 1U & 0x1ff) * 8 + 0x18) = unaff_RBX;\n            return;\n        }\n        fcn.00409860();\n        uVar3 = *(in_RAX + 0x10);\n        if (uVar3 <= uVar4) {\n            iVar2 = *(in_RAX + 8);\n            if (uVar3 == *(in_RAX + 0x18)) {\n                iVar5 = *(in_RAX + 0x18) << 1;\n                if (iVar5 == 0) {\n                    iVar5 = 0x100;\n                }\n                iVar2 = fcn.0040bd80(0x5474b8);\n                if (*(in_RAX + 0x18) != 0) {\n                    fcn.00459880(*(in_RAX + 0x18) << 3);\n                }\n                *(in_RAX + 8) = iVar2;\n                *(in_RAX + 0x18) = iVar5;\n            }\n            iVar5 = fcn.004298c0();\n            *(iVar2 + uVar4 * 8) = iVar5;\n            iVar2 = *(in_RAX + 0x10);\n            *(in_RAX + 0x10) = uVar3 + 1;\n            fcn.00409a80(iVar2);\n            goto code_r0x004295ce;\n        }\n        fcn.00409a80();\n    } while( true );\n}\n",
        "token_count": 546
    },
    "00431f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00431f80(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar *puVar3;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x431fcf;\n            uVar1 = fcn.004591ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (uVar2 = 99; 0 < uVar2; uVar2 = uVar2 - 1) {\n                *(*0x20 + (uVar2 - 0x6c)) = uVar1 + (uVar1 / 10) * -10 + '0';\n                if (uVar1 < 10) break;\n                uVar1 = uVar1 / 10;\n            }\n            if (uVar2 < 0x65) {\n                *(*0x20 + -0x90) = 0x43203f;\n                fcn.00431a60(-(uVar2 - 100));\n                return;\n            }\n            *(*0x20 + -0x90) = 0x43205c;\n            in_RAX = fcn.00458fe0(100);\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + -8) = 0x432067;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 487
    },
    "0045f0e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nulong fcn.0045f0e0(void)\n\n{\n    char cVar1;\n    uint64_t in_RAX;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (-1 < in_RAX) {\n                if (in_RAX == 0) {\n                    return 0x4758e5;\n                }\n                *(*0x20 + -0x50) = in_XMM15;\n                *(*0x20 + -0x4c) = in_XMM15;\n                uVar2 = 0x13;\n                break;\n            }\n            uVar2 = -in_RAX;\n            if (uVar2 == 0) goto code_r0x0045f1f3;\n            *(*0x20 + -0x3c) = in_XMM15;\n            *(*0x20 + -0x38) = in_XMM15;\n            uVar4 = 0x13;\n            while (cVar1 = uVar2,  9 < uVar2) {\n                uVar2 = uVar2 / 10;\n                if (0x13 < uVar4) goto code_r0x0045f29d;\n                *(*0x20 + (uVar4 - 0x3c)) = cVar1 + uVar2 * -10 + '0';\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar4 < 0x14) goto code_r0x0045f25a;\n            *(*0x20 + -0x80) = 0x45f29d;\n            fcn.00458f20(0x14);\ncode_r0x0045f29d:\n            *(*0x20 + -0x80) = 0x45f2aa;\n            in_RAX = fcn.00458f20(0x14);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + -8) = 0x45f2b5;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        *0x20 = puVar5;\n    } while( true );\ncode_r0x0045f16d:\n    cVar1 = in_RAX;\n    if (in_RAX < 10) goto code_r0x0045f1a0;\n    in_RAX = in_RAX / 10;\n    if (0x13 < uVar2) goto code_r0x0045f1e6;\n    *(*0x20 + (uVar2 - 0x50)) = cVar1 + in_RAX * -10 + '0';\n    uVar2 = uVar2 - 1;\n    goto code_r0x0045f16d;\ncode_r0x0045f25a:\n    *(*0x20 + (uVar4 - 0x3c)) = cVar1 + '0';\n    *(*0x20 + -0x80) = 0x45f285;\n    fcn.00445fe0(-(uVar4 - 0x14));\n    goto code_r0x0045f1f3;\ncode_r0x0045f1a0:\n    if (uVar2 < 0x14) {\n        *(*0x20 + (uVar2 - 0x50)) = cVar1 + '0';\n        *(*0x20 + -0x80) = 0x45f1ce;\n        uVar3 = fcn.00445fe0(-(uVar2 - 0x14));\n        return uVar3;\n    }\n    *(*0x20 + -0x80) = 0x45f1e6;\n    fcn.00458f20(0x14);\ncode_r0x0045f1e6:\n    *(*0x20 + -0x80) = 0x45f1f3;\n    fcn.00458f20(0x14);\ncode_r0x0045f1f3:\n    *(*0x20 + -0x80) = 0x45f20c;\n    uVar3 = fcn.00445d60(1);\n    return uVar3;\n}\n",
        "token_count": 1059
    },
    "0040a520": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t ** fcn.0040a520(uint64_t **arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t **ppuVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t *piVar6;\n    uint64_t **ppuVar7;\n    uint64_t arg2;\n    uint64_t **ppuVar8;\n    int64_t unaff_RBX;\n    uint64_t **ppuVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    uint64_t uVar11;\n    uchar unaff_DIL;\n    int64_t iVar12;\n    uint64_t **ppuVar13;\n    uint64_t **in_R11;\n    ulong uVar14;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    bool bVar15;\n    \n    while (puVar10 = *0x20,  ppuVar3 = in_R11, \n          *0x20 + -0x28 < *(unaff_R14 + 0x10) || *0x20 + -0x28 == *(unaff_R14 + 0x10)) {\ncode_r0x0040aca6:\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + 0x10) = unaff_RBX;\n        *(puVar10 + 0x18) = arg1;\n        puVar10[0x20] = unaff_DIL;\n        *(puVar10 + -8) = 0x40acbf;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        unaff_RBX = *(puVar10 + 0x10);\n        arg1 = *(puVar10 + 0x18);\n        unaff_DIL = puVar10[0x20];\n        *0x20 = puVar10;\n        in_R11 = ppuVar3;\n    }\n    puVar10 = *0x20 + -0xa8;\n    *(*0x20 + -8) = unaff_RBP;\n    unaff_RBP = *0x20 + -8;\n    *(*0x20 + 8) = in_RAX;\n    *(*0x20 + 0x18) = arg1;\n    *(*0x20 + 0x20) = unaff_DIL;\n    ppuVar9 = unaff_RBX + 0x3fffffU & 0xffffffffffc00000;\n    *(*0x20 + -0x78) = ppuVar9;\n    if (arg1 == in_RAX + 0x10390) {\n        unaff_DIL = 0;\n        *(*0x20 + -0xb0) = 0x40a5a7;\n        ppuVar3 = fcn.0040c160(0x400000);\n        if (ppuVar3 != NULL) {\n            ppuVar7 = *(*0x20 + -0x78);\n            goto code_r0x0040a5d6;\n        }\n        ppuVar7 = *(*0x20 + 0x18);\n        arg1 = *(*0x20 + -0x78);\n        unaff_DIL = *(*0x20 + 0x20);\n        in_RAX = *(*0x20 + 8);\n    }\n    else {\n        ppuVar3 = NULL;\n        ppuVar7 = arg1;\n        arg1 = ppuVar9;\n    }\ncode_r0x0040a956:\n    ppuVar9 = *ppuVar7;\n    if (ppuVar9 == NULL) {\n        ppuVar7 = NULL;\ncode_r0x0040aa8b:\n        if (ppuVar7 == NULL) {\n            *(*0x20 + -0xb0) = 0x40aaa5;\n            iVar4 = fcn.0040ace0(0x400000);\n            if (iVar4 == 0) {\n                return NULL;\n            }\n            *(*0x20 + -0x10) = iVar4;\n            *(*0x20 + -0x38) = arg1;\n            *(*0x20 + -0x28) = *(*0x20 + 8) + 0x16b80;\n            *(*0x20 + -0xb0) = 0x40aada;\n            puVar5 = fcn.00413460();\n            *puVar5 = *(*0x20 + -0x10);\n            *(puVar5 + 1) = 1;\n            puVar5[2] = *0x517050;\n            *(*0x20 + -0xb0) = 0x40ab08;\n            *0x517050 = puVar5;\n            piVar6 = fcn.00413460();\n            arg1 = *(*0x20 + -0x10);\n            ppuVar7 = *(*0x20 + -0x38);\n            *piVar6 = ppuVar7 + arg1;\n            piVar6[2] = *0x517050;\n            unaff_DIL = *(*0x20 + 0x20);\n            ppuVar3 = arg1;\n            *0x517050 = piVar6;\n        }\n        ppuVar13 = ppuVar7 + ppuVar3;\n        if (ppuVar13 < ppuVar3) {\n            iVar4 = 0x1c;\n            uVar14 = 0x479508;\n        }\n        else if (ppuVar3 + 0x100000000000 >> 0x16 < 0x4000000) {\n            bVar15 = 0x3ffffff < ppuVar13 + 0x7fffffffffffU >> 0x16;\n            iVar4 = 0;\n            if (bVar15) {\n                iVar4 = 0x20;\n            }\n            uVar14 = 0;\n            if (bVar15) {\n                uVar14 = 0x479e7a;\n            }\n        }\n        else {\n            iVar4 = 0x21;\n            uVar14 = 0x47a19c;\n        }\n        if (iVar4 == 0) {\n            ppuVar9 = ppuVar7;\n            in_R11 = ppuVar3;\n            if ((ppuVar3 & 0x3fffff) == 0) {\ncode_r0x0040a5d6:\n                arg1 = ppuVar9;\n                *(*0x20 + -0x10) = ppuVar3;\n                *(*0x20 + -0x38) = ppuVar7;\n                uVar11 = ppuVar3 + 0x100000000000 >> 0x16;\n                iVar4 = *(*0x20 + 8);\n                do {\n                    if (ppuVar3 + ppuVar7 + 0x7fffffffffffU >> 0x16 < uVar11) {\n                        return ppuVar3;\n                    }\n                    ppuVar9 = uVar11 >> 0x14;\n                    ppuVar3 = in_R11;\n                    if (0x3f < ppuVar9) goto code_r0x0040a916;\n                    *(*0x20 + -0x40) = uVar11;\n                    iVar2 = *(iVar4 + 0x10170 + ppuVar9 * 8);\n                    ppuVar9 = iVar4 + ppuVar9 * 8 + 0x10170;\n                    if (iVar2 == 0) {\n                        *(*0x20 + -0x18) = ppuVar9;\n                        *(*0x20 + -0xa8) = _sym.imp.kernel32.dll_VirtualAlloc;\n                        *(*0x20 + -0xa0) = 0;\n                        *(*0x20 + -0x98) = 0x800000;\n                        *(*0x20 + -0x90) = 0x3000;\n                        *(*0x20 + -0x88) = 4;\n                        *(*0x20 + -0xb0) = 0x40a6b8;\n                        fcn.0042d600();\n                        unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                        iVar2 = *(*0x20 + -0x80);\n                        if (iVar2 == 0) goto code_r0x0040a905;\n                        **(*0x20 + -0x18) = iVar2;\n                        uVar11 = *(*0x20 + -0x40);\n                    }\n                    uVar11 = uVar11 & 0xfffff;\n                    in_R11 = *(iVar2 + uVar11 * 8);\n                    if (in_R11 != NULL) goto code_r0x0040a8f0;\n                    *(*0x20 + -0x20) = iVar2 + uVar11 * 8;\n                    arg1 = 0x114d0;\n                    unaff_DIL = 0xb8;\n                    *(*0x20 + -0xb0) = 0x40a751;\n                    iVar2 = fcn.0040c160(8);\n                    if (iVar2 == 0) {\n                        arg1 = 0x8;\n                        *(*0x20 + -0xb0) = 0x40a76c;\n                        iVar2 = fcn.0040bd80(0x5474b8);\n                        if (iVar2 == 0) goto code_r0x0040a8df;\n                    }\n                    ppuVar9 = *(*0x20 + 0x20);\n                    if (*(*0x20 + 0x20) == 0) {\n                        iVar4 = *(*0x20 + 8);\n                        iVar12 = *(*0x20 + -0x40);\n                    }\n                    else {\n                        iVar4 = *(*0x20 + 8);\n                        iVar12 = *(iVar4 + 0x103c8);\n                        if (*(iVar4 + 0x103c0) == iVar12) {\n                            *(*0x20 + -0x68) = iVar2;\n                            iVar12 = iVar12 << 4;\n                            if (iVar12 == 0) {\n                                iVar12 = *0x544b48;\n                            }\n                            *(*0x20 + -0x70) = iVar12;\n                            *(*0x20 + -0xb0) = 0x40a7db;\n                            iVar4 = fcn.0040bd80(0x5474b8);\n                            if (iVar4 == 0) goto code_r0x0040a8ce;\n                            iVar2 = *(*0x20 + 8);\n                            arg1 = *(iVar2 + 0x103b8);\n                            *(iVar2 + 0x103b8) = iVar4;\n                            *(iVar2 + 0x103c8) = *(*0x20 + -0x70) >> 3;\n                            iVar4 = *(iVar2 + 0x103c0);\n                            if (*(iVar2 + 0x103c0) < *(iVar2 + 0x103c0)) {\n                                iVar4 = *(iVar2 + 0x103c0);\n                            }\n                            if (*(iVar2 + 0x103b8) != arg1) {\n                                *(*0x20 + -0xb0) = 0x40a839;\n                                fcn.00459880(iVar4 << 3);\n                            }\n                            iVar2 = *(*0x20 + -0x68);\n                            ppuVar9 = *(*0x20 + 0x20);\n                            iVar4 = *(*0x20 + 8);\n                        }\n                        uVar1 = *(iVar4 + 0x103c0);\n                        arg2 = *(iVar4 + 0x103c8);\n                        uVar11 = uVar1 + 1;\n                        if (arg2 < uVar11) goto code_r0x0040a8c6;\n                        *(iVar4 + 0x103c0) = uVar11;\n                        arg2 = *(iVar4 + 0x103b8);\n                        if (uVar11 <= uVar1) goto code_r0x0040a8bb;\n                        iVar12 = *(*0x20 + -0x40);\n                        *(arg2 + uVar1 * 8) = iVar12;\n                    }\n                    **(*0x20 + -0x20) = iVar2;\n                    uVar11 = iVar12 + 1;\n                    ppuVar3 = *(*0x20 + -0x10);\n                    ppuVar7 = *(*0x20 + -0x38);\n                } while( true );\n            }\n            *(*0x20 + -0xb0) = 0x40ac0b;\n            fcn.00430040();\n        }\n        *(*0x20 + -0x60) = ppuVar3;\n        *(*0x20 + -0x38) = ppuVar13;\n        *(*0x20 + -0x50) = iVar4;\n        *(*0x20 + -0x30) = uVar14;\n        *(*0x20 + -0xb0) = 0x40ac25;\n        fcn.00431980();\n        *(*0x20 + -0xb0) = 0x40ac36;\n        fcn.00432280();\n        *(*0x20 + -0xb0) = 0x40ac45;\n        fcn.004320e0();\n        *(*0x20 + -0xb0) = 0x40ac56;\n        fcn.00432280();\n        *(*0x20 + -0xb0) = 0x40ac65;\n        fcn.004320e0();\n        *(*0x20 + -0xb0) = 0x40ac76;\n        fcn.00432280();\n        *(*0x20 + -0xb0) = 0x40ac85;\n        fcn.00432280();\n        *(*0x20 + -0xb0) = 0x40ac8a;\n        fcn.00431be0();\n        *(*0x20 + -0xb0) = 0x40ac8f;\n        fcn.00431a00();\n        unaff_RBX = 0x2e;\n        *(*0x20 + -0xb0) = 0x40aca5;\n        in_RAX = fcn.00430040();\n        goto code_r0x0040aca6;\n    }\n    *(*0x20 + -0x48) = ppuVar9;\n    ppuVar13 = *ppuVar9;\n    if (*(ppuVar9 + 1) != '\\0') {\n        ppuVar13 = *ppuVar9 - arg1;\n    }\n    ppuVar8 = arg1 + ppuVar13;\n    if (ppuVar8 < ppuVar13) {\n        ppuVar3 = NULL;\n    }\n    else if (ppuVar8 + 0x7fffffffffffU >> 0x16 < 0x4000000) {\n        *(*0x20 + -0x58) = ppuVar13;\n        *(*0x20 + -0x38) = ppuVar8;\n        *(*0x20 + -0xb0) = 0x40a9cd;\n        ppuVar3 = fcn.00412fc0();\n        ppuVar7 = *(*0x20 + 0x18);\n        ppuVar8 = *(*0x20 + -0x38);\n        arg1 = *(*0x20 + -0x78);\n        ppuVar9 = *(*0x20 + -0x48);\n        unaff_DIL = *(*0x20 + 0x20);\n        ppuVar13 = *(*0x20 + -0x58);\n        in_RAX = *(*0x20 + 8);\n    }\n    else {\n        ppuVar3 = NULL;\n    }\n    if (ppuVar3 == ppuVar13) {\n        if (*(ppuVar9 + 1) != '\\0') {\n            ppuVar8 = ppuVar13;\n        }\n        *ppuVar9 = ppuVar8;\n        ppuVar7 = arg1;\n        goto code_r0x0040aa8b;\n    }\n    if (ppuVar3 != NULL) {\n        *(*0x20 + -0x10) = ppuVar3;\n        *(*0x20 + -0xb0) = 0x40aa27;\n        fcn.00412e80();\n        in_RAX = *(*0x20 + 8);\n        ppuVar7 = *(*0x20 + 0x18);\n        arg1 = *(*0x20 + -0x78);\n        ppuVar9 = *(*0x20 + -0x48);\n        unaff_DIL = *(*0x20 + 0x20);\n        ppuVar3 = *(*0x20 + -0x10);\n    }\n    goto code_r0x0040a925;\ncode_r0x0040a8bb:\n    *(*0x20 + -0xb0) = 0x40a8c6;\n    fcn.00458f20(uVar11);\ncode_r0x0040a8c6:\n    *(*0x20 + -0xb0) = 0x40a8ce;\n    fcn.00458fa0(uVar11, arg2);\ncode_r0x0040a8ce:\n    *(*0x20 + -0xb0) = 0x40a8df;\n    fcn.00430040();\ncode_r0x0040a8df:\n    *(*0x20 + -0xb0) = 0x40a8f0;\n    fcn.00430040();\ncode_r0x0040a8f0:\n    *(*0x20 + -0xb0) = 0x40a905;\n    fcn.00430040();\ncode_r0x0040a905:\n    arg1 = 0x27;\n    *(*0x20 + -0xb0) = 0x40a916;\n    fcn.00430040();\n    ppuVar3 = in_R11;\ncode_r0x0040a916:\n    ppuVar7 = 0x40;\n    *(*0x20 + -0xb0) = 0x40a925;\n    in_RAX = fcn.00458f40(0x40);\ncode_r0x0040a925:\n    *ppuVar7 = ppuVar9[2];\n    *(in_RAX + 0x16bb0) = *(in_RAX + 0x16bb0) - *(in_RAX + 0x16b80);\n    *ppuVar9 = *(in_RAX + 0x16b98);\n    *(in_RAX + 0x16b98) = ppuVar9;\n    goto code_r0x0040a956;\n}\n",
        "token_count": 4158
    },
    "00410640": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint64_t fcn.00410640(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t uVar5;\n    uint64_t unaff_RDI;\n    uint32_t uVar4;\n    \n    if (arg1 + arg3 < 0x41) {\n        return in_RAX;\n    }\n    uVar5 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar5 < 0x40) {\n        iVar1 = *(*(uVar5 * 8 + 0x516e30) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n        uVar4 = in_RAX >> 9;\n        uVar3 = uVar4 & 0x1fff;\n        *(iVar1 + uVar3 * 8) =\n             (1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40)) - 1 & *(iVar1 + uVar3 * 8) |\n             unaff_RBX | unaff_RSI << (arg1 & 0x3f) & -(arg1 < 0x40);\n        uVar5 = uVar3 >> 3;\n        if (uVar5 < 0x400) {\n            *(iVar1 + 0x10000 + uVar5) = *(iVar1 + 0x10000 + uVar5) & ~(1 << (uVar4 & 7));\n            return in_RAX + 0x200;\n        }\n        fcn.00458f40(0x400);\n    }\n    fcn.00458f40(0x40);\n    pcVar2 = swi(3);\n    uVar5 = (*pcVar2)();\n    return uVar5;\n}\n",
        "token_count": 460
    },
    "00410780": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00410780(ulong arg1, ulong arg2)\n\n{\n    uint64_t unaff_RSI;\n    uint64_t arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RSI != 0) {\n        for (arg3 = unaff_RSI >> 3; 0x40 < arg3; arg3 = arg3 - 0x40) {\n            fcn.00410640(arg1, arg2, 0x40);\n        }\n        fcn.00410640(arg1, arg2, arg3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00410820": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00410820(uint64_t arg1, ulong noname_1, int64_t arg3)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t in_RAX;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    uint64_t uVar8;\n    uint64_t unaff_RDI;\n    uint32_t uVar5;\n    \n    uVar7 = ((arg3 + unaff_RSI) - in_RAX >> 3) - arg1;\n    if (uVar7 != 0) {\n        uVar8 = -(arg1 - 0x40);\n        if (uVar7 <= uVar8 && -uVar7 != arg1 - 0x40) {\n            uVar8 = uVar7;\n        }\n        arg1 = arg1 + uVar8;\n        uVar7 = uVar7 - uVar8;\n    }\n    uVar8 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar8 < 0x40) {\n        iVar2 = *(*(uVar8 * 8 + 0x516e30) + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n        uVar5 = in_RAX >> 9;\n        uVar4 = uVar5 & 0x1fff;\n        if (unaff_RDI != arg1) {\n            *(iVar2 + uVar4 * 8) =\n                 unaff_RBX |\n                 (-(1 << (arg1 & 0x3f) & -(arg1 < 0x40)) | (1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40)) - 1) &\n                 *(iVar2 + uVar4 * 8);\n        }\n        if (uVar7 == 0) {\n            return;\n        }\n        uVar8 = uVar4 >> 3;\n        if (uVar8 < 0x400) {\n            *(iVar2 + 0x10000 + uVar8) = *(iVar2 + 0x10000 + uVar8) | 1 << (uVar5 & 7);\n            uVar8 = in_RAX + 0x200;\n            while( true ) {\n                uVar6 = uVar8 + 0x800000000000 >> 0x2a;\n                if (0x3f < uVar6) break;\n                iVar2 = *(*(uVar6 * 8 + 0x516e30) + (uVar8 + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n                uVar5 = uVar8 >> 9;\n                uVar4 = uVar5 & 0x1fff;\n                uVar6 = uVar4;\n                if (uVar7 < 0x40) {\n                    puVar1 = iVar2 + uVar6 * 8;\n                    *puVar1 = *puVar1 & -(1 << (uVar7 & 0x3f));\n                    return;\n                }\n                if (uVar7 == 0x40) {\n                    *(iVar2 + uVar6 * 8) = 0;\n                    return;\n                }\n                *(iVar2 + uVar6 * 8) = 0;\n                uVar6 = uVar4 >> 3;\n                if (0x3ff < uVar6) {\n                    fcn.00458f40(0x400);\n                    break;\n                }\n                *(iVar2 + 0x10000 + uVar6) = *(iVar2 + 0x10000 + uVar6) | 1 << (uVar5 & 7);\n                uVar7 = uVar7 - 0x40;\n                uVar8 = uVar8 + 0x200;\n            }\n            fcn.00458f40(0x40);\n        }\n        fcn.00458f40(0x400);\n    }\n    fcn.00458f40(0x40);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 963
    },
    "00445080": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t fcn.00445080(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    char cVar6;\n    int64_t *in_RAX;\n    int64_t iVar7;\n    ulong uVar8;\n    ulong uVar9;\n    uchar *puVar10;\n    uchar *unaff_RBP;\n    int32_t iVar11;\n    int64_t unaff_R14;\n    \n    do {\n        puVar10 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar10 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar7 = *in_RAX;\n            iVar3 = in_RAX[1];\n            iVar1 = *(iVar7 + 8);\n            if (iVar1 != -0x80000000) {\n                return iVar1 + ((iVar1 >> 0x1f) >> 0x1d) >> 3;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = iVar3;\n            *(*0x20 + -0x18) = iVar7;\n            *(*0x20 + -0x78) = 0x4450dd;\n            fcn.00447da0();\n            if (iVar3 == 0x14) {\n                *(*0x20 + -0x78) = 0x445117;\n                cVar6 = fcn.004023a0(0x14, iVar7);\n            }\n            else {\n                if (iVar3 != 0x17) {\n                    return 0;\n                }\n                *(*0x20 + -0x78) = 0x4450fd;\n                cVar6 = fcn.004023a0(0x17, iVar7);\n            }\n            if (cVar6 == '\\0') {\n                return 0;\n            }\n            puVar4 = *(*(*0x20 + 8) + 0x28);\n            if (puVar4 < *(*(*0x20 + 8) + 0x30) + -8) {\n                *(*0x20 + -0x51) = *(puVar4 + 4);\n                *(*0x20 + -0x28) = *puVar4;\n                *(*0x20 + -0x78) = 0x445193;\n                iVar7 = fcn.00447480();\n                piVar5 = *(*0x20 + -0x28);\n                if (*piVar5 == iVar7) {\n                    iVar1 = *piVar5[1];\n                    if (*(*0x20 + -0x51) != '\\0') {\n                        return iVar1;\n                    }\n                    iVar11 = piVar5[2] >> 3;\n                    if (iVar11 < iVar1) {\n                        return iVar11;\n                    }\n                    return iVar1;\n                }\n                uVar9 = *(*0x20 + -0x10);\n                *(*0x20 + -0x78) = 0x4451e7;\n                uVar8 = fcn.00447da0();\n                *(*0x20 + -0x20) = uVar8;\n                *(*0x20 + -0x30) = uVar9;\n                *(*0x20 + -0x78) = 0x4451f6;\n                fcn.00431980();\n                *(*0x20 + -0x78) = 0x445207;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x445216;\n                fcn.00432280();\n                *(*0x20 + -0x78) = 0x44521b;\n                fcn.00431be0();\n                *(*0x20 + -0x78) = 0x445225;\n                fcn.00431a00();\n                *(*0x20 + -0x78) = 0x445236;\n                fcn.00430040();\n            }\n            else {\n                *(*0x20 + -0x78) = 0x44514d;\n                iVar7 = fcn.00447480();\n                if (*(*(*0x20 + 8) + 0x10) == iVar7) {\n                    return 0;\n                }\n            }\n            uVar9 = *(*0x20 + -0x10);\n            *(*0x20 + -0x78) = 0x445245;\n            uVar8 = fcn.00447da0();\n            *(*0x20 + -0x20) = uVar8;\n            *(*0x20 + -0x30) = uVar9;\n            uVar2 = **(*0x20 + -0x18);\n            *(*0x20 + -0x78) = 0x445265;\n            uVar9 = fcn.00447480(uVar2);\n            *(*0x20 + -0x50) = uVar9;\n            iVar7 = *(*0x20 + 8);\n            *(*0x20 + -0x38) = *(iVar7 + 0x28);\n            *(*0x20 + -0x40) = *(iVar7 + 0x30);\n            *(*0x20 + -0x48) = *(iVar7 + 0x10);\n            *(*0x20 + -0x78) = 0x44528f;\n            fcn.00431980();\n            *(*0x20 + -0x78) = 0x4452a5;\n            fcn.00432280();\n            *(*0x20 + -0x78) = 0x4452b4;\n            fcn.00432280();\n            *(*0x20 + -0x78) = 0x4452c5;\n            fcn.00432280();\n            *(*0x20 + -0x78) = 0x4452cf;\n            fcn.004320e0();\n            *(*0x20 + -0x78) = 0x4452e5;\n            fcn.00432280();\n            *(*0x20 + -0x78) = 0x4452ef;\n            fcn.004320e0();\n            *(*0x20 + -0x78) = 0x445305;\n            fcn.00432280();\n            *(*0x20 + -0x78) = 0x445317;\n            fcn.004320e0(*(*0x20 + -0x50));\n            *(*0x20 + -0x78) = 0x44531c;\n            fcn.00431be0();\n            *(*0x20 + -0x78) = 0x445325;\n            fcn.00431a00();\n            *(*0x20 + -0x78) = 0x445336;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar10 + 8) = in_RAX;\n        *(puVar10 + -8) = 0x445345;\n        fcn.004568e0();\n        in_RAX = *(puVar10 + 8);\n        *0x20 = puVar10;\n    } while( true );\n}\n",
        "token_count": 1638
    },
    "00425b20": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00425b20(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    uint64_t arg1_00;\n    int64_t in_RAX;\n    ulong uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg2;\n    int64_t iVar7;\n    uint64_t arg1_01;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x00425b20:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x20 && *0x20 + -0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0xa0;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (((unaff_RBX & 0x3fffff) == 0) && ((arg1 & 0x3fffff) == 0)) {\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = in_XMM15;\n            *(*0x20 + -0x30) = 0x426040;\n            *(*0x20 + -0x28) = in_RAX;\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = 0x425fc0;\n            *(*0x20 + -0x18) = vtable.HHl_Hl_HsHQ.0;\n            *(*0x20 + -0x10) = *0x20 + -0x30;\n            *(*0x20 + -0xa8) = 0x425bea;\n            uVar2 = fcn.00428ce0(vtable.HHl_Hl_HsHQ.0, in_RAX + 0x10090);\n            *(*0x20 + -0x58) = uVar2;\n            iVar6 = 0;\n            do {\n                if (4 < iVar6) {\n                    *(*0x20 + -0xa8) = 0x425ed9;\n                    iVar6 = fcn.004260c0(*(*0x20 + 0x18));\n                    *(*(*0x20 + 8) + 0x10100) = *(*(*0x20 + 8) + 0x10100) + iVar6;\n                    return;\n                }\n                *(*0x20 + -0x60) = iVar6;\n                uVar2 = *(*0x20 + 0x18);\n                *(*0x20 + -0xa8) = 0x425c25;\n                arg1 = fcn.00428aa0();\n                *(*0x20 + -0xa8) = 0x425c4a;\n                iVar3 = (*_vtable.HHl_Hl_HsHQ.0)(uVar2, vtable.HHl_Hl_HsHQ.0);\n                iVar6 = *(*0x20 + -0x60);\n                iVar7 = *(*0x20 + 8);\n                arg2 = *(iVar7 + 0x10 + iVar6 * 0x18);\n                if (*(iVar7 + 8 + iVar6 * 0x18) < arg1) {\n                    if (arg2 < arg1) goto code_r0x00425f1a;\n                    *(iVar7 + 8 + iVar6 * 0x18) = arg1;\n                }\n                iVar1 = *(iVar7 + iVar6 * 0x18);\n                arg2 = -*0x544b48;\n                uVar8 = (*0x544b48 + arg1 * 8) - 1 & arg2;\n                if (*(iVar7 + 8 + iVar6 * 0x18) == 0) goto code_r0x00425f10;\n                arg2 = iVar1 + (iVar3 << 3 & arg2);\n                uVar8 = iVar1 + uVar8;\n                uVar4 = *(*0x20 + -0x58);\n                if (0 < uVar4) {\n                    iVar6 = *(iVar7 + 0x10090);\n                    arg1_01 = *(iVar7 + 0x10098);\n                    if (arg1_01 <= uVar4 - 1) goto code_r0x00425f05;\n                    *(*0x20 + -0x78) = arg2;\n                    *(*0x20 + -0x80) = uVar8;\n                    uVar2 = *((uVar4 - 1) * 0x10 + 8 + iVar6);\n                    *(*0x20 + -0xa8) = 0x425d05;\n                    uVar2 = (**(*0x20 + -0x20))(uVar2, *0x20 + -0x20);\n                    arg1 = *(*0x20 + -0x80);\n                    *(*0x20 + -0xa8) = 0x425d1a;\n                    arg2 = fcn.00428b20(uVar2);\n                    iVar6 = *(*0x20 + -0x60);\n                    iVar7 = *(*0x20 + 8);\n                    uVar4 = *(*0x20 + -0x58);\n                    uVar8 = arg1;\n                }\n                arg1_01 = *(iVar7 + 0x10090);\n                arg1_00 = *(iVar7 + 0x10098);\n                if (uVar4 < arg1_00) {\n                    if (arg1_00 <= uVar4) goto code_r0x00425ef8;\n                    *(*0x20 + -0x70) = uVar8;\n                    *(*0x20 + -0x68) = arg2;\n                    uVar2 = *(uVar4 * 0x10 + 8 + arg1_01);\n                    *(*0x20 + -0xa8) = 0x425d7a;\n                    uVar2 = (**(*0x20 + -0x20))(uVar2, *0x20 + -0x20);\n                    uVar8 = *(*0x20 + -0x70);\n                    *(*0x20 + -0xa8) = 0x425d8f;\n                    arg2 = fcn.00428b20(uVar2);\n                    iVar6 = *(*0x20 + -0x60);\n                }\n                if (arg2 + 0x800000000000 < uVar8 + 0x800000000000) {\n                    iVar7 = uVar8 - arg2;\n                }\n                else {\n                    iVar7 = 0;\n                }\n                if (iVar7 != 0) {\n                    *(*0x20 + -0x38) = arg2 + 0x800000000000;\n                    *(*0x20 + -0x40) = uVar8 + 0x800000000000;\n                    *(*0x20 + -0x48) = uVar8;\n                    *(*0x20 + -0x50) = arg2;\n                    *(*0x20 + -0xa8) = 0x425e07;\n                    fcn.00429a40();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar6 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar6 = 0;\n                    }\n                    LOCK();\n                    *0x545420 = *0x545420 + iVar6;\n                    *(*0x20 + -0xa8) = 0x425e5a;\n                    fcn.00412c20();\n                    if (*(*0x20 + -0x38) < *(*0x20 + -0x40)) {\n                        iVar6 = *(*0x20 + -0x48) - *(*0x20 + -0x50);\n                    }\n                    else {\n                        iVar6 = 0;\n                    }\n                    *(*(*0x20 + 8) + 0x10100) = *(*(*0x20 + 8) + 0x10100) + iVar6;\n                    iVar6 = *(*0x20 + -0x60);\n                }\n                iVar6 = iVar6 + 1;\n            } while( true );\n        }\n        goto code_r0x00425f25;\n    }\n    goto code_r0x00425f86;\ncode_r0x00425ef8:\n    *(*0x20 + -0xa8) = 0x425f05;\n    fcn.00458f20(arg1_00);\ncode_r0x00425f05:\n    *(*0x20 + -0xa8) = 0x425f10;\n    fcn.00458f20(arg1_01);\ncode_r0x00425f10:\n    *(*0x20 + -0xa8) = 0x425f1a;\n    fcn.00458f20(0);\ncode_r0x00425f1a:\n    *(*0x20 + -0xa8) = 0x425f25;\n    fcn.00458fa0(arg1, arg2);\ncode_r0x00425f25:\n    *(*0x20 + -0xa8) = 0x425f2a;\n    fcn.00431980();\n    *(*0x20 + -0xa8) = 0x425f3b;\n    fcn.00432280();\n    *(*0x20 + -0xa8) = 0x425f48;\n    fcn.004320e0();\n    *(*0x20 + -0xa8) = 0x425f59;\n    fcn.00432280();\n    *(*0x20 + -0xa8) = 0x425f66;\n    fcn.004320e0();\n    *(*0x20 + -0xa8) = 0x425f6b;\n    fcn.00431be0();\n    *(*0x20 + -0xa8) = 0x425f70;\n    fcn.00431a00();\n    unaff_RBX = 0x2e;\n    *(*0x20 + -0xa8) = 0x425f85;\n    in_RAX = fcn.00430040();\ncode_r0x00425f86:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + 0x10) = unaff_RBX;\n    *(puVar5 + 0x18) = arg1;\n    *(puVar5 + -8) = 0x425f9a;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    unaff_RBX = *(puVar5 + 0x10);\n    arg1 = *(puVar5 + 0x18);\n    *0x20 = puVar5;\n    goto code_r0x00425b20;\n}\n",
        "token_count": 2517
    },
    "00433fc0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.00433fc0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *0x5449e4 = 1;\n    for (iVar2 = 0; iVar2 < 5; iVar2 = iVar2 + 1) {\n        *0x4f278c = 0x7fffffff;\n        *0x4f2788 = 1;\n        cVar1 = fcn.0043d600();\n        if (cVar1 == '\\0') break;\n        fcn.0042d840();\n    }\n    fcn.0042d840();\n    fcn.0043d600();\n    fcn.0042d840();\n    return;\n}\n",
        "token_count": 213
    },
    "004508a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint64_t fcn.004508a0(void)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    int64_t *piVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n        unaff_RBX = unaff_RBX & 0xff;\n    }\n    uVar2 = fcn.00447600();\n    if (uVar2 == 0) {\n        return 0;\n    }\n    cVar1 = *(uVar2 + 0x28);\n    if ((cVar1 == '\\x11') || (cVar1 == '\\n')) {\n        return 0;\n    }\n    if (cVar1 != '\\x10') {\n        piVar3 = fcn.00447da0();\n        if (unaff_RBX < 8) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = CONCAT71(0x2e656d69746e75, *piVar3 == 0x2e656d69746e7572);\n        }\n        return uVar2 & 0xffffffff;\n    }\n    if (unaff_RBX != '\\0') {\n        return 0;\n    }\n    return uVar2 & 0xffffffffffffff00 | (*0x544a14 >> 1 & 1) == 0;\n}\n",
        "token_count": 341
    },
    "00438340": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nulong fcn.00438340(uint64_t arg1, ulong noname_1, uint64_t arg3)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    bool bVar3;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x20) = unaff_RDI;\n            arg3 = 0;\n            while( true ) {\n                if (unaff_RBX <= arg3) {\n                    return 0;\n                }\n                iVar1 = *(in_RAX + arg3 * 8);\n                uVar2 = arg3 >> 5 & 0x7ffffff;\n                if (unaff_RSI <= uVar2) break;\n                if ((*(unaff_RDI + uVar2 * 4) >> (arg3 & 0x1f) & 1) == 0) {\n                    do {\n                    } while (*(iVar1 + 0x194) != *(iVar1 + 0x194));\n                    bVar3 = *(iVar1 + 0x194) != *(iVar1 + 400) || *(iVar1 + 0x998) != 0;\n                }\n                else {\n                    bVar3 = false;\n                }\n                if (bVar3) {\n                    *(*0x20 + -0x28) = 0x4383f5;\n                    fcn.00409860();\n                    *(*0x20 + -0x28) = 0x4383fc;\n                    iVar1 = fcn.0043e780();\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x10) = iVar1;\n                        *(*0x20 + -0x28) = 0x438418;\n                        fcn.00409a80();\n                        return *(*0x20 + -0x10);\n                    }\n                    *(*0x20 + -0x28) = 0x438435;\n                    fcn.00409a80();\n                    return 0;\n                }\n                arg3 = arg3 + 1;\n            }\n            *(*0x20 + -0x28) = 0x43844b;\n            arg1 = unaff_RSI;\n            in_RAX = fcn.00458f20(unaff_RSI);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + 0x20) = unaff_RDI;\n        *(puVar4 + 0x28) = unaff_RSI;\n        *(puVar4 + 0x30) = arg3;\n        *(puVar4 + -8) = 0x43846f;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1 = *(puVar4 + 0x18);\n        unaff_RDI = *(puVar4 + 0x20);\n        unaff_RSI = *(puVar4 + 0x28);\n        arg3 = *(puVar4 + 0x30);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 874
    },
    "004384a0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nint64_t fcn.004384a0(ulong noname_0, ulong noname_1, ulong noname_2, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t in_RAX;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    int64_t unaff_RBX;\n    uint64_t unaff_RSI;\n    int64_t unaff_RDI;\n    \n    uVar4 = 0;\n    while( true ) {\n        if (unaff_RBX <= uVar4) {\n            return arg4;\n        }\n        iVar3 = *(in_RAX + uVar4 * 8);\n        uVar5 = uVar4 >> 5 & 0x7ffffff;\n        if (unaff_RSI <= uVar5) break;\n        iVar6 = arg4;\n        if ((*(unaff_RDI + uVar5 * 4) >> (uVar4 & 0x1f) & 1) != 0) {\n            iVar1 = *(iVar3 + 0x1200);\n            iVar6 = *(iVar3 + 0x1208);\n            if ((iVar1 != 0) && ((iVar6 == 0 || (iVar1 <= iVar6)))) {\n                iVar6 = iVar1;\n            }\n            if ((iVar6 == 0) || ((arg4 != 0 && (arg4 <= iVar6)))) {\n                iVar6 = arg4;\n            }\n        }\n        uVar4 = uVar4 + 1;\n        arg4 = iVar6;\n    }\n    fcn.00458f20(unaff_RSI);\n    pcVar2 = swi(3);\n    iVar3 = (*pcVar2)();\n    return iVar3;\n}\n",
        "token_count": 400
    },
    "0042c400": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nulong fcn.0042c400(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint64_t arg1_00;\n    uint64_t uVar3;\n    uint64_t arg1_01;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x70;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x78) = 0x42c439;\n            fcn.00409860();\n            unaff_RBX = *(*0x20 + 0x18);\n            if (unaff_RBX < 0x40000001) {\n                *(*0x20 + -0x38) = unaff_RBX;\n                *(*0x20 + -0x20) = *(*0x20 + 0x10);\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = 0x40000000;\n                iVar2 = *(*0x20 + -0x20);\n                *(*0x20 + -0x28) = iVar2;\n                arg1_00 = 0;\n                uVar3 = 0;\n                while (arg1_00 < unaff_RBX) {\n                    uVar1 = *(iVar2 + arg1_00);\n                    if (*(iVar2 + arg1_00) < 0x80) {\n                        arg1_01 = uVar3;\n                        uVar3 = unaff_RBX;\n                        arg1_00 = arg1_00 + 1;\n                    }\n                    else {\n                        *(*0x20 + -0x48) = uVar3;\n                        *(*0x20 + -0x78) = 0x42c4ad;\n                        uVar1 = fcn.00452dc0(arg1_00);\n                        arg1_01 = *(*0x20 + -0x48);\n                        iVar2 = *(*0x20 + -0x28);\n                        uVar3 = *(*0x20 + -0x38);\n                        arg1_00 = unaff_RBX;\n                    }\n                    unaff_RBX = uVar3;\n                    if (0x3e5 < arg1_01) {\n                        if (1000 < arg1_01) goto code_r0x0042c625;\n                        *(*0x20 + -0x4c) = uVar1;\n                        *(*0x20 + -0x40) = arg1_00;\n                        *(*0x20 + -0x78) = 0x42c4f9;\n                        fcn.0042c680(arg1_01);\n                        iVar2 = *(*0x20 + -0x28);\n                        unaff_RBX = *(*0x20 + -0x38);\n                        uVar1 = *(*0x20 + -0x4c);\n                        arg1_00 = *(*0x20 + -0x40);\n                        arg1_01 = 0;\n                    }\n                    if (uVar1 < 0x10000) {\n                        if (999 < arg1_01) goto code_r0x0042c613;\n                        *(arg1_01 * 2 + 0x545ee0) = uVar1;\n                        uVar3 = arg1_01 + 1;\n                    }\n                    else {\n                        if (999 < arg1_01) goto code_r0x0042c606;\n                        *(arg1_01 * 2 + 0x545ee0) = (uVar1 - 0x10000 >> 10 & 0x3ff) + 0xd800;\n                        if (999 < arg1_01 + 1) goto code_r0x0042c5f9;\n                        *(arg1_01 * 2 + 0x545ee2) = (uVar1 - 0x10000 & 0x3ff) + 0xdc00;\n                        uVar3 = arg1_01 + 2;\n                    }\n                }\n                if (uVar3 < 0x3e9) {\n                    *(*0x20 + -0x78) = 0x42c5cf;\n                    fcn.0042c680(uVar3);\n                    *(*0x20 + -0x78) = 0x42c5dd;\n                    fcn.00409a80();\n                    return *(*0x20 + -0x38);\n                }\n                arg1_01 = 1000;\n                *(*0x20 + -0x78) = 0x42c5f9;\n                fcn.00458fa0(uVar3, 1000);\ncode_r0x0042c5f9:\n                *(*0x20 + -0x78) = 0x42c606;\n                fcn.00458f20(1000);\ncode_r0x0042c606:\n                *(*0x20 + -0x78) = 0x42c613;\n                fcn.00458f20(1000);\ncode_r0x0042c613:\n                *(*0x20 + -0x78) = 0x42c625;\n                fcn.00458f20(1000);\ncode_r0x0042c625:\n                *(*0x20 + -0x78) = 0x42c632;\n                fcn.00458fa0(arg1_01, 1000);\n            }\n            *(*0x20 + -0x78) = 0x42c63f;\n            uVar3 = unaff_RBX;\n            in_RAX = fcn.00458f60(unaff_RBX, 0x40000000);\n            arg1._0_4_ = uVar3;\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + 0x18) = arg1;\n        *(puVar4 + -8) = 0x42c653;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        arg1._0_4_ = *(puVar4 + 0x18);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1533
    },
    "0044be00": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.0044be00(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    int32_t iVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong *unaff_RDI;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \ncode_r0x0044be00:\n    puVar3 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar3 = *0x20 + -0x68;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 0x10) = unaff_RBX;\n        if (arg1 == 0) {\n            return 0;\n        }\n        *(*0x20 + 0x18) = arg1;\n        *(*0x20 + -0x48) = unaff_RBX;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x70) = 0x44be4d;\n        iVar1 = fcn.00458960(arg1 << 3);\n        unaff_RDI = *(*(*0x20 + 8) + 0x20 + (iVar1 & 0x1fff) * 8);\n        do {\n            if (unaff_RDI == NULL) {\n                iVar2 = 0;\ncode_r0x0044beb7:\n                if (iVar2 == 0) {\n                    *(*0x20 + -0x4c) = 0;\n                    *(*0x20 + -0x40) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x38) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x28) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x18) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)))\n                    ;\n                    *(*0x20 + -0x40) = 0x44bfc0;\n                    *(*0x20 + -0x38) = *(*0x20 + 8);\n                    *(*0x20 + -0x30) = *0x20 + -0x4c;\n                    *(*0x20 + -0x28) = *(*0x20 + -0x48);\n                    *(*0x20 + -0x20) = *(*0x20 + 0x18);\n                    *(*0x20 + -0x18) = *(*0x20 + 0x20);\n                    *(*0x20 + -0x10) = iVar1;\n                    *(*0x20 + -0x68) = *0x20 + -0x40;\n                    *(*0x20 + -0x70) = 0x44bf2c;\n                    fcn.004567a0();\n                    return *(*0x20 + -0x4c);\n                }\n                return iVar2;\n            }\n            if ((unaff_RDI[1] == iVar1) && (unaff_RBX = unaff_RDI[3],  *(*0x20 + 0x18) == unaff_RBX)) {\n                if (0x80 < unaff_RBX) goto code_r0x0044bf72;\n                iVar4 = 0;\n                while( true ) {\n                    if (unaff_RBX <= iVar4) {\n                        iVar2 = *(unaff_RDI + 2);\n                        goto code_r0x0044beb7;\n                    }\n                    if (*(*(*0x20 + -0x48) + iVar4 * 8) != unaff_RDI[iVar4 + 4]) break;\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            unaff_RDI = *unaff_RDI;\n        } while( true );\n    }\n    goto code_r0x0044bf80;\ncode_r0x0044bf72:\n    *(*0x20 + -0x70) = 0x44bf7f;\n    arg1 = unaff_RBX;\n    in_RAX = fcn.00458f60(unaff_RBX, 0x80);\ncode_r0x0044bf80:\n    *(puVar3 + 8) = in_RAX;\n    *(puVar3 + 0x10) = unaff_RBX;\n    *(puVar3 + 0x18) = arg1;\n    *(puVar3 + 0x20) = unaff_RDI;\n    *(puVar3 + -8) = 0x44bf99;\n    fcn.004568e0();\n    in_RAX = *(puVar3 + 8);\n    unaff_RBX = *(puVar3 + 0x10);\n    arg1 = *(puVar3 + 0x18);\n    unaff_RDI = *(puVar3 + 0x20);\n    *0x20 = puVar3;\n    goto code_r0x0044be00;\n}\n",
        "token_count": 1287
    },
    "004601c0": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint64_t fcn.004601c0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    uint64_t arg1_01;\n    ulong in_RDX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    uint32_t uVar3;\n    int64_t unaff_R14;\n    int64_t iStack96;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00402500(arg1, in_RDX);\n    if (iStack96 != -1) {\n        return 0;\n    }\n    arg1_01 = unaff_RBX * 2 + 1;\n    iVar1 = fcn.00441f00(arg1_01);\n    arg1_00 = 0;\n    uVar2 = 0;\n    while (arg1_00 < unaff_RBX) {\n        uVar3 = *(in_RAX + arg1_00);\n        if (*(in_RAX + arg1_00) < 0x80) {\n            arg1_00 = arg1_00 + 1;\n        }\n        else {\n            uVar3 = fcn.00452dc0(arg1_00);\n            arg1_00 = unaff_RBX;\n        }\n        if ((uVar3 < 0xd800) || (uVar3 - 0xe000 < 0x2000)) {\n            uVar2 = uVar2 + 1;\n            if (arg1_01 < uVar2) {\n                iVar1 = fcn.00441fe0(arg1_01);\n            }\n            *(iVar1 + -2 + uVar2 * 2) = uVar3;\n        }\n        else {\n            uVar3 = uVar3 - 0x10000;\n            if (uVar3 < 0x100000) {\n                uVar2 = uVar2 + 2;\n                if (arg1_01 < uVar2) {\n                    iVar1 = fcn.00441fe0(arg1_01);\n                }\n                *(iVar1 + -4 + uVar2 * 2) = (uVar3 >> 10 & 0x3ff) + 0xd800;\n                *(iVar1 + -2 + uVar2 * 2) = (uVar3 & 0x3ff) + 0xdc00;\n            }\n            else {\n                uVar2 = uVar2 + 1;\n                if (arg1_01 < uVar2) {\n                    iVar1 = fcn.00441fe0(arg1_01);\n                }\n                *(iVar1 + -2 + uVar2 * 2) = 0xfffd;\n            }\n        }\n    }\n    if (arg1_01 < uVar2 + 1) {\n        iVar1 = fcn.00441fe0(arg1_01);\n    }\n    *(iVar1 + -2 + (uVar2 + 1) * 2) = 0;\n    return iVar1;\n}\n",
        "token_count": 703
    },
    "004010a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004010a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00401660();\n    fcn.00401100();\n    return;\n}\n",
        "token_count": 89
    },
    "00402e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00402e00(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    uchar in_AL;\n    unkbyte7 in_RAX;\n    int64_t iVar3;\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *puVar2 = *CONCAT71(in_RAX, in_AL);\n    puVar2[1] = unaff_RBX;\n    iVar3 = *(iVar1 + 0x1260) + 0x10;\n    *(iVar1 + 0x1260) = iVar3;\n    if (*(iVar1 + 0x1268) == iVar3) {\n        fcn.00429d00();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00403660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403660(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint64_t in_RAX;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (in_RAX == 0) {\n        return 0;\n    }\n    cVar2 = func_0x00420bc0();\n    if (cVar2 == '\\0') {\n        if (*0x4f1618 == NULL) {\n            iVar4 = 0;\n            iVar5 = 0;\n        }\n        else {\n            iVar5 = **0x4f1618;\n            iVar4 = (*0x4f1618)[1];\n        }\n        iVar3 = 0;\n        while( true ) {\n            if (iVar4 <= iVar3) {\n                return 0;\n            }\n            iVar1 = *(iVar5 + iVar3 * 8);\n            if (((*(iVar1 + 0xd0) < in_RAX || *(iVar1 + 0xd0) == in_RAX) && (in_RAX < *(iVar1 + 0xd8))) ||\n               ((*(iVar1 + 0xe0) < in_RAX || *(iVar1 + 0xe0) == in_RAX && (in_RAX < *(iVar1 + 0xe8))))) break;\n            iVar3 = iVar3 + 1;\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 320
    },
    "004041c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004041c0(void)\n\n{\n    fcn.00404200(1);\n    return;\n}\n",
        "token_count": 26
    },
    "00404f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404f20(void)\n\n{\n    fcn.00404f60(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00405fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00405fe0(void)\n\n{\n    code *in_RAX;\n    int64_t unaff_R14;\n    uchar uStack50;\n    uchar uStack49;\n    uchar auStack48 [8];\n    uchar *puStack40;\n    uchar auStack32 [16];\n    code **ppcStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    puStack40 = auStack48;\n    uStack50 = 0;\n    auStack32 = CONCAT88(&uStack50, 0x4060a0);\n    ppcStack16 = auStack32;\n    uStack49 = 1;\n    (*in_RAX)();\n    uStack50 = 1;\n    uStack49 = 0;\n    (**ppcStack16)();\n    return;\n}\n",
        "token_count": 222
    },
    "00406100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00406100(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00431be0();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 932
    },
    "00407260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407260(ulong param_1, ulong param_2)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    uint32_t uVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (&stack0xfffffffffffffff8 < *(unaff_R14 + 0x10) || &stack0xfffffffffffffff8 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_RAX != 0) {\n        uVar4 = *(in_RAX + 0x10);\n        if (uVar4 < 0x8d826c96) {\n            if (uVar4 < 0x5272f85d) {\n                if (uVar4 < 0x3e2307d5) {\n                    if (uVar4 == 0x778cdb8) {\n                        if (in_RAX == 0x46b2c0) {\n                            fcn.00431980();\n                            fcn.00432280();\n                            fcn.00431a00();\n                            return;\n                        }\n                    }\n                    else if ((uVar4 == 0x3e2307d4) && (in_RAX == 0x46ae40)) {\n                        fcn.00431980();\n                        fcn.00432080();\n                        fcn.00431a00();\n                        return;\n                    }\n                }\n                else if (uVar4 == 0x43daea34) {\n                    if (in_RAX == 0x46af00) {\n                        fcn.00431980();\n                        fcn.00432080();\n                        fcn.00431a00();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x5272f85c) && (in_RAX == 0x46b480)) {\n                    fcn.00431980();\n                    fcn.00431f80();\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if (uVar4 < 0x6bed3cfb) {\n                if (uVar4 == 0x64fd0d3c) {\n                    if (in_RAX == 0x46b340) {\n                        fcn.00431980();\n                        fcn.00431f80();\n                        fcn.00431a00();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x6bed3cfa) && (in_RAX == 0x46ae80)) {\n                    fcn.00431980();\n                    fcn.00432080();\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x7688f20c) {\n                if (in_RAX == 0x46ab00) {\n                    uVar5 = unaff_RBX[1];\n                    uVar3 = *unaff_RBX;\n                    fcn.00431980();\n                    fcn.00431ee0(uVar3, uVar5);\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x8d826c95) && (uVar5 = 0x46ab80,  in_RAX == 0x46ab80)) {\n                fcn.00431980();\n                fcn.00431c80(uVar5, param_2);\n                fcn.00431a00();\n                return;\n            }\n        }\n        else if (uVar4 < 0x99d6dd44) {\n            if (uVar4 < 0x93592d95) {\n                if (uVar4 == 0x8fc52ddb) {\n                    if (in_RAX == 0x46b400) {\n                        fcn.00431980();\n                        fcn.00431f80();\n                        fcn.00431a00();\n                        return;\n                    }\n                }\n                else if ((uVar4 == 0x93592d94) && (uVar5 = 0x46abc0,  in_RAX == 0x46abc0)) {\n                    fcn.00431980();\n                    fcn.00431c80(uVar5, param_2);\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if (uVar4 == 0x95738979) {\n                if (in_RAX == 0x46b440) {\n                    fcn.00431980();\n                    fcn.00431f80();\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0x99d6dd43) && (in_RAX == 0x46aec0)) {\n                fcn.00431980();\n                fcn.00432080();\n                fcn.00431a00();\n                return;\n            }\n        }\n        else if (uVar4 < 0xc1efe3a3) {\n            if (uVar4 == 0xb00b9f48) {\n                if (in_RAX == 0x46aa40) {\n                    fcn.00431980();\n                    fcn.00431c20();\n                    fcn.00431a00();\n                    return;\n                }\n            }\n            else if ((uVar4 == 0xc1efe3a2) && (in_RAX == 0x46ab40)) {\n                fVar1 = *(unaff_RBX + 4);\n                fVar2 = *unaff_RBX;\n                fcn.00431980();\n                fcn.00431ee0(fVar2, fVar1);\n                fcn.00431a00();\n                return;\n            }\n        }\n        else if (uVar4 == 0xcb735792) {\n            if (in_RAX == 0x46ae00) {\n                fcn.00431980();\n                fcn.00432080();\n                fcn.00431a00();\n                return;\n            }\n        }\n        else if (uVar4 == 0xd9632893) {\n            if (in_RAX == 0x46b380) {\n                fcn.00431980();\n                fcn.00431f80();\n                fcn.00431a00();\n                return;\n            }\n        }\n        else if ((uVar4 == 0xe927f9e3) && (in_RAX == 0x46b3c0)) {\n            fcn.00431980();\n            fcn.00431f80();\n            fcn.00431a00();\n            return;\n        }\n        fcn.004077e0();\n        return;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 1508
    },
    "004077e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004077e0(void)\n\n{\n    float fVar1;\n    float fVar2;\n    ulong uVar3;\n    int64_t in_RAX;\n    int64_t noname_0;\n    ulong uVar4;\n    ulong *unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00450e00();\n    noname_0 = *(in_RAX + 0x17) - 1;\n    uVar4 = 0x48fe20;\n    switch(noname_0) {\n    case 0:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431c20();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 1:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 2:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 3:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 4:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 5:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 6:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 7:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 8:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 9:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 10:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 0xb:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 0xc:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431c80(noname_0, uVar4);\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 0xd:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431c80(noname_0, uVar4);\n        fcn.00432280();\n        fcn.00431a00();\n        break;\n    case 0xe:\n        fVar1 = *unaff_RBX;\n        fVar2 = *(unaff_RBX + 4);\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431ee0(fVar1, fVar2);\n        fcn.00431a00();\n        break;\n    case 0xf:\n        uVar4 = *unaff_RBX;\n        uVar3 = unaff_RBX[1];\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00431ee0(uVar4, uVar3);\n        fcn.00431a00();\n        break;\n    default:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432200();\n        fcn.00431a00();\n        break;\n    case 0x17:\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    return;\n}\n",
        "token_count": 1258
    },
    "00408a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00408a80(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = *(unaff_RBX + 0x10) ^ *(arg1 + 0x10);\n    iVar3 = 1;\n    while( true ) {\n        uVar2 = uVar2 & *in_RAX - 1U;\n        piVar1 = in_RAX[uVar2 + 2];\n        if (piVar1 == NULL) {\n            return NULL;\n        }\n        if ((*piVar1 == unaff_RBX) && (piVar1[1] == arg1)) break;\n        uVar2 = uVar2 + iVar3;\n        iVar3 = iVar3 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 207
    },
    "00408c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408c20(void)\n\n{\n    int64_t *in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t *unaff_RBX;\n    \n    uVar1 = *(*unaff_RBX + 0x10) ^ *(unaff_RBX[1] + 0x10);\n    iVar2 = 1;\n    while( true ) {\n        uVar1 = uVar1 & *in_RAX - 1U;\n        if (unaff_RBX == in_RAX[uVar1 + 2]) {\n            return;\n        }\n        if (in_RAX[uVar1 + 2] == NULL) break;\n        uVar1 = uVar1 + iVar2;\n        iVar2 = iVar2 + 1;\n    }\n    in_RAX[uVar1 + 2] = unaff_RBX;\n    in_RAX[1] = in_RAX[1] + 1;\n    return;\n}\n",
        "token_count": 214
    },
    "004090a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004090a0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    if (*0x4f1618 == NULL) {\n        iVar3 = 0;\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = **0x4f1618;\n        iVar3 = (*0x4f1618)[1];\n    }\n    for (iVar2 = 0; iVar2 < iVar3; iVar2 = iVar2 + 1) {\n        iVar1 = *(*(iVar4 + iVar2 * 8) + 0x180);\n        for (iVar5 = 0; iVar5 < iVar1; iVar5 = iVar5 + 1) {\n            fcn.00408ae0();\n        }\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 269
    },
    "00409360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.00409360(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t *puVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_RAX < 0x100) {\n        puVar1 = in_RAX * 8 + 0x4d9ce0;\n    }\n    else {\n        puVar1 = fcn.0040b060(0);\n        *puVar1 = in_RAX;\n    }\n    return puVar1;\n}\n",
        "token_count": 161
    },
    "00409480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00409480(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX != 0) {\n        iVar1 = fcn.00408780(1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 144
    },
    "00409520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409520(void)\n\n{\n    uint64_t *puVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (puVar1 = *0x4ef010,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (uVar2 = 0; uVar2 <= *puVar1 && *puVar1 != uVar2; uVar2 = uVar2 + 1) {\n        if (puVar1[uVar2 + 2] != 0) {\n            (**in_RAX)(*in_RAX, in_RAX);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00409820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409820(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0040a180();\n    return;\n}\n",
        "token_count": 81
    },
    "00409a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409a40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0040a1c0();\n    return;\n}\n",
        "token_count": 84
    },
    "00409fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409fc0(void)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x40) = 0x409ff7;\n                fcn.0042cae0();\n                *(*0x20 + -0x40) = 0x40a00a;\n                fcn.00409d20(0);\n                return;\n            }\n            unaff_RBX = 0x14;\n            *(*0x20 + -0x40) = 0x40a025;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x40a035;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 408
    },
    "0040a060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0040a060(void)\n\n{\n    uchar uVar1;\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) != unaff_R14) {\n                *(*0x20 + -0x18) = unaff_RBX;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x48) = 0x40a097;\n                fcn.0042cae0();\n                *(*0x20 + -0x48) = 0x40a09c;\n                fcn.0043a080();\n                *(*0x20 + -0x48) = 0x40a0af;\n                uVar1 = fcn.00409d20(0);\n                *(*0x20 + -0x19) = uVar1;\n                *(*0x20 + -0x48) = 0x40a0b8;\n                fcn.004546e0();\n                return *(*0x20 + -0x19);\n            }\n            unaff_RBX = 0x11;\n            *(*0x20 + -0x48) = 0x40a0d8;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x40a0e8;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 506
    },
    "0040a180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a180(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    return;\n}\n",
        "token_count": 81
    },
    "0040a1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a1c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 84
    },
    "0040ace0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ace0(int64_t arg1)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            iVar2 = 0;\n            while( true ) {\n                *(*0x20 + -0x30) = iVar2;\n                *(*0x20 + -0x20) = unaff_RBX + arg1;\n                *(*0x20 + -0x48) = 0x40ad34;\n                uVar1 = fcn.00412fc0();\n                if (uVar1 == 0) {\n                    return 0;\n                }\n                if ((*(*0x20 + 0x18) - 1U & uVar1) == 0) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x28) = uVar1;\n                *(*0x20 + -0x18) = *(*0x20 + 0x18) - 1U;\n                *(*0x20 + -0x48) = 0x40ad72;\n                fcn.00412e80();\n                *(*0x20 + -0x28) = *(*0x20 + -0x18) + *(*0x20 + -0x28) & -*(*0x20 + 0x18);\n                *(*0x20 + -0x48) = 0x40ad9c;\n                uVar1 = fcn.00412fc0();\n                if (uVar1 == *(*0x20 + -0x28)) {\n                    return uVar1;\n                }\n                *(*0x20 + -0x48) = 0x40adb6;\n                fcn.00412e80();\n                arg1 = *(*0x20 + -0x30);\n                if (arg1 == 99) break;\n                iVar2 = arg1 + 1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n            }\n            unaff_RBX = 0x38;\n            *(*0x20 + -0x48) = 0x40ae0f;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + -8) = 0x40ae25;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 794
    },
    "0040ae40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint64_t fcn.0040ae40(ulong param_1, ulong param_2, uint64_t param_3, ulong param_4)\n\n{\n    ulong noname_0;\n    int64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint8_t unaff_BL;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint16_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar3 = unaff_BL;\n            if (uVar3 < 0x88) {\n                *(*0x20 + -0x10) = uVar3;\n                *(*0x20 + 0x10) = unaff_BL;\n                *(*0x20 + 8) = in_RAX;\n                noname_0 = *(in_RAX + 0x28 + uVar3 * 8);\n                *(*0x20 + -0x18) = noname_0;\n                *(*0x20 + -0x48) = 0x40ae8d;\n                uVar1 = fcn.0040f620(noname_0, uVar3, param_3, param_4);\n                iVar2 = *(*0x20 + -0x18);\n                uVar3 = *(iVar2 + 0x38);\n                if (uVar1 == uVar3) {\n                    *(*0x20 + -0x20) = uVar3;\n                    uVar5 = *(iVar2 + 0x60);\n                    if (uVar3 == uVar5) {\n                        *(*0x20 + -0x28) = uVar1;\n                        *(*0x20 + -0x48) = 0x40aec5;\n                        fcn.004117e0();\n                        *(*0x20 + -0x18) = *(*(*0x20 + 8) + 0x28 + *(*0x20 + -0x10) * 8);\n                        *(*0x20 + -0x48) = 0x40aede;\n                        uVar1 = fcn.0040f620(*(*0x20 + -0x10), *(*0x20 + 8), param_3, param_4);\n                        iVar2 = *(*0x20 + -0x18);\n                        goto code_r0x0040aef2;\n                    }\n                }\n                else {\ncode_r0x0040aef2:\n                    if (uVar1 <= *(iVar2 + 0x38) && *(iVar2 + 0x38) != uVar1) {\n                        uVar5 = *(iVar2 + 0x60) + 1;\n                        *(iVar2 + 0x60) = uVar5;\n                        param_3 = *(iVar2 + 0x38);\n                        if (uVar5 <= param_3) {\n                            return uVar1 * *(iVar2 + 0x68) + *(iVar2 + 0x18);\n                        }\n                        *(*0x20 + -0x2a) = uVar5;\n                        *(*0x20 + -0x20) = param_3;\n                        *(*0x20 + -0x48) = 0x40af45;\n                        fcn.00431980();\n                        *(*0x20 + -0x48) = 0x40af56;\n                        fcn.00432280();\n                        *(*0x20 + -0x48) = 0x40af65;\n                        fcn.00431f80();\n                        *(*0x20 + -0x48) = 0x40af76;\n                        fcn.00432280();\n                        *(*0x20 + -0x48) = 0x40af85;\n                        fcn.00431f80();\n                        *(*0x20 + -0x48) = 0x40af8a;\n                        fcn.00431be0();\n                        *(*0x20 + -0x48) = 0x40af8f;\n                        fcn.00431a00();\n                        *(*0x20 + -0x48) = 0x40afa5;\n                        fcn.00430040();\n                    }\n                    uVar5 = iVar2;\n                    *(*0x20 + -0x48) = 0x40afb6;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x2a) = uVar5;\n                *(*0x20 + -0x48) = 0x40afc5;\n                fcn.00431980();\n                *(*0x20 + -0x48) = 0x40afd6;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x40afe5;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x40aff6;\n                fcn.00432280();\n                *(*0x20 + -0x48) = 0x40b005;\n                fcn.00431f80();\n                *(*0x20 + -0x48) = 0x40b00a;\n                fcn.00431be0();\n                *(*0x20 + -0x48) = 0x40b00f;\n                fcn.00431a00();\n                unaff_BL = 0x31;\n                *(*0x20 + -0x48) = 0x40b025;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x48) = 0x40b032;\n            in_RAX = fcn.00458f20(0x88);\n        }\n        *(puVar4 + 8) = in_RAX;\n        puVar4[0x10] = unaff_BL;\n        *(puVar4 + -8) = 0x40b045;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_BL = puVar4[0x10];\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1430
    },
    "0040ba20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ba20(void)\n\n{\n    ulong *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0040b060(1, *in_RAX);\n    return;\n}\n",
        "token_count": 96
    },
    "0040bd80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040bd80(ulong arg1)\n\n{\n    ulong unaff_RBX;\n    int64_t unaff_R14;\n    ulong uStack56;\n    ulong uStack48;\n    ulong *puStack40;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x40be40;\n    puStack40 = &uStack56;\n    auStack24 = CONCAT88(arg1, unaff_RBX);\n    fcn.004567a0();\n    return uStack56;\n}\n",
        "token_count": 167
    },
    "0040c560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint64_t fcn.0040c560(void)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar2 = fcn.0040ba20();\n    uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    *(iVar2 + 0xc) = SUB164(auVar1, 0) ^ SUB164(auVar1 >> 0x40, 0);\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "0040f5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f5c0(void)\n\n{\n    ulong unaff_RBX;\n    \n    fcn.0040fca0(unaff_RBX);\n    fcn.00459580();\n    return;\n}\n",
        "token_count": 48
    },
    "0040fc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040fc40(uint64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    int64_t unaff_RDI;\n    \n    while( true ) {\n        if (arg1 != 0) {\n            iVar1 = 0;\n            if (arg1 != 0) {\n                for (; (arg1 >> iVar1 & 1) == 0; iVar1 = iVar1 + 1) {\n                }\n            }\n            return in_RAX;\n        }\n        unaff_RBX = unaff_RBX + unaff_RDI * -8;\n        if (unaff_RBX == 0) break;\n        in_RAX = fcn.0040fb20();\n        unaff_RDI = unaff_RDI * 8;\n    }\n    return in_RAX + unaff_RDI * 8;\n}\n",
        "token_count": 204
    },
    "004116c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004116c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00411e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411e00(void)\n\n{\n    int32_t iVar1;\n    int64_t in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            iVar1 = *(in_RAX + 0x488);\n            if (iVar1 == *0x516dd8) {\n                return;\n            }\n            if (iVar1 == *0x516dd8 + -2) {\n                *(*0x20 + 8) = in_RAX;\n                *(*0x20 + -0x28) = 0x411e39;\n                fcn.00411c00();\n                *(*0x20 + -0x28) = 0x411e45;\n                fcn.00442c60();\n                *(*(*0x20 + 8) + 0x488) = *0x516dd8;\n                return;\n            }\n            *(*0x20 + -0xc) = *0x516dd8;\n            *(*0x20 + -0x10) = iVar1;\n            *(*0x20 + -0x28) = 0x411e78;\n            fcn.00431980();\n            *(*0x20 + -0x28) = 0x411e89;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x411e94;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x411ea5;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x411eae;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x411eb3;\n            fcn.00431be0();\n            *(*0x20 + -0x28) = 0x411eb8;\n            fcn.00431a00();\n            *(*0x20 + -0x28) = 0x411ec9;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x411ed4;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 623
    },
    "00412420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412420(void)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t uVar6;\n    int64_t unaff_R14;\n    \ncode_r0x00412420:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x40;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + -0x10) = *0x517078;\n        *(*0x20 + -0x18) = *0x517080;\n        iVar2 = 0;\n        iVar4 = *0x517078;\n        iVar3 = *0x517080;\n        do {\n            if (iVar3 <= iVar2) {\n                *0x5449ee = 1;\n                return;\n            }\n            uVar1 = *(iVar4 + iVar2 * 8);\n            uVar6 = uVar1 >> 0x14;\n            if (0x3f < uVar6) goto code_r0x00412518;\n            *(*0x20 + -0x20) = iVar2;\n            iVar3 = *(*(uVar6 * 8 + 0x516e30) + (uVar1 & 0xfffff) * 8);\n            if (*(iVar3 + 0x114c0) == 0) {\n                *(*0x20 + -0x28) = iVar3;\n                *(*0x20 + -0x48) = 0x4124df;\n                iVar3 = fcn.0040bd80(0x5474b8);\n                if (iVar3 == 0) goto code_r0x00412507;\n                *(*(*0x20 + -0x28) + 0x114c0) = iVar3;\n            }\n            else {\n                *(*0x20 + -0x48) = 0x4124c5;\n                fcn.00459580();\n            }\n            iVar2 = *(*0x20 + -0x20) + 1;\n            iVar3 = *(*0x20 + -0x18);\n            iVar4 = *(*0x20 + -0x10);\n        } while( true );\n    }\n    goto code_r0x00412526;\ncode_r0x00412507:\n    *(*0x20 + -0x48) = 0x412518;\n    fcn.00430040();\ncode_r0x00412518:\n    *(*0x20 + -0x48) = 0x412525;\n    fcn.00458f40(0x40);\ncode_r0x00412526:\n    *(puVar5 + -8) = 0x41252b;\n    fcn.004568e0();\n    *0x20 = puVar5;\n    goto code_r0x00412420;\n}\n",
        "token_count": 703
    },
    "00412540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412540(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f20c0 == 0) {\n                if (*0x4f2148 < *0x4f214c) {\n                    bVar1 = true;\n                }\n                else {\n                    bVar1 = false;\n                }\n            }\n            else {\n                bVar1 = true;\n            }\n            if (!bVar1) {\n                *0x5449ee = 0;\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4125a9;\n            fcn.00430040();\n        }\n        *(puVar2 + -8) = 0x4125af;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 301
    },
    "004125c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004125c0(ulong arg1, ulong noname_1, ulong arg3)\n\n{\n    uint64_t in_RAX;\n    uint8_t *puVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint8_t unaff_SIL;\n    uint8_t uVar3;\n    uint8_t *unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            if ((*unaff_RDI & unaff_SIL) != 0) {\n                unaff_RBX = in_RAX + 0x800000000000;\n                if (unaff_RBX >> 0x2a < 0x40) {\n                    puVar1 = *(*(*((unaff_RBX >> 0x2a) * 8 + 0x516e30) + (unaff_RBX >> 0x16 & 0xfffff) * 8) + 0x114c0) +\n                             (in_RAX >> 0x19 & 0xffff);\n                    uVar3 = 1 << (in_RAX >> 0x16 & 7);\n                    if ((uVar3 & *puVar1) != 0) {\n                        return 1;\n                    }\n                    LOCK();\n                    *puVar1 = *puVar1 | uVar3;\n                    return 0;\n                }\n                arg1 = 0x40;\n                *(*0x20 + -0x40) = 0x41267a;\n                in_RAX = fcn.00458f40(0x40);\n            }\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41268e;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x412693;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x4126a5;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4126af;\n            fcn.004320e0();\n            *(*0x20 + -0x40) = 0x4126b4;\n            fcn.00431be0();\n            *(*0x20 + -0x40) = 0x4126b9;\n            fcn.00431a00();\n            *(*0x20 + -0x40) = 0x4126be;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x4126cf;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4126d9;\n            fcn.004320e0();\n            *(*0x20 + -0x40) = 0x4126ea;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x4126f4;\n            fcn.004320e0();\n            *(*0x20 + -0x40) = 0x412705;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x41270a;\n            fcn.00431a00();\n            *(*0x20 + -0x40) = 0x412725;\n            fcn.00419fc0(*(*0x20 + -0x10));\n            arg1 = *(*0x20 + 8);\n            unaff_RDI = 0xffffffffffffffff;\n            *(*0x20 + -0x40) = 0x412745;\n            fcn.00419fc0(arg1);\n            *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n            unaff_RBX = 0x1f;\n            *(*0x20 + -0x40) = 0x412765;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        puVar2[0x28] = unaff_SIL;\n        *(puVar2 + 0x30) = arg3;\n        *(puVar2 + -8) = 0x412789;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        unaff_SIL = puVar2[0x28];\n        arg3 = *(puVar2 + 0x30);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 1245
    },
    "004127c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004127c0(void)\n\n{\n    int64_t in_RAX;\n    ulong uStack16;\n    \n    fcn.00429a40();\n    LOCK();\n    *0x545420 = *0x545420 + in_RAX;\n    fcn.0042d600();\n    return uStack16;\n}\n",
        "token_count": 72
    },
    "00412860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412860(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    *0x545420 = *0x545420 - unaff_RBX;\n    fcn.00412a40(unaff_RBX);\n    return;\n}\n",
        "token_count": 115
    },
    "004128c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004128c0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (iVar1 = *0x545420,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    *0x545420 = *0x545420 + arg1;\n    fcn.00412c20(iVar1);\n    return;\n}\n",
        "token_count": 126
    },
    "00412920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412920(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_RBX;\n    \n    fcn.00429a40();\n    iVar1 = *0x545420;\n    LOCK();\n    *0x545420 = *0x545420 - unaff_RBX;\n    fcn.00412e80(iVar1);\n    return;\n}\n",
        "token_count": 87
    },
    "00412980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412980(void)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    *0x545420 = *0x545420 - unaff_RBX;\n    fcn.00412f80(unaff_RBX);\n    return;\n}\n",
        "token_count": 115
    },
    "004129e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004129e0(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00429a40();\n    return;\n}\n",
        "token_count": 85
    },
    "00412f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412f80(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00412a40();\n    return;\n}\n",
        "token_count": 82
    },
    "00412fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00412fc0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack24;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d600();\n    if (iStack24 != 0) {\n        return iStack24;\n    }\n    fcn.0042d600();\n    return 0;\n}\n",
        "token_count": 122
    },
    "004135a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004135a0(void)\n\n{\n    ulong arg1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *0x4f1e1c = 0x80000000;\n    fcn.0041b9c0();\n    arg1 = fcn.0041ba40();\n    fcn.0041a5e0(arg1);\n    *0x4f21b8 = 0x100000001;\n    return;\n}\n",
        "token_count": 149
    },
    "004151e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004151e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (; *0x544a18 < *0x544a28; *0x544a18 = *0x544a18 + 1) {\n        fcn.0043ab40();\n        fcn.0040a060();\n        *0x4f21c0 = 0;\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00416440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416440(ulong arg1)\n\n{\n    int64_t iVar1;\n    int32_t *in_RAX;\n    char unaff_BL;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                if (*(in_RAX + 8) != unaff_BL) {\n                    *(*0x20 + -0x10) = in_RAX;\n                    *(*0x20 + 0x10) = unaff_BL;\n                    *(*0x20 + -0x28) = 0x416488;\n                    fcn.00416640();\n                    iVar1 = *(*0x20 + -0x10);\n                    *(iVar1 + 0x20) = *(*0x20 + 0x10);\n                    *(iVar1 + 0x21) = 1;\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x4164b4;\n                fcn.00430040();\n            }\n            unaff_BL = '/';\n            *(*0x20 + -0x28) = 0x4164c5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        puVar2[0x10] = unaff_BL;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + -8) = 0x4164d9;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_BL = puVar2[0x10];\n        arg1 = *(puVar2 + 0x18);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 502
    },
    "00416840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416840(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    \n    uVar1 = *(in_RAX + 8);\n    uVar3 = *(in_RAX + 0x10) - uVar1;\n    uVar2 = arg1 - unaff_RBX;\n    if ((0 < uVar2) && (uVar3 <= uVar2)) {\n        *(in_RAX + 0x18) = *(in_RAX + 0x18) + (uVar2 - uVar3);\n        *(in_RAX + 8) = *(in_RAX + 0x10);\n        if (uVar3 != 0) {\n            *(in_RAX + 4) = 1;\n            *(in_RAX + 0x48) = *0x5484d8 + 1;\n        }\n        return;\n    }\n    if ((uVar2 < 0) && (uVar1 <= unaff_RBX - arg1)) {\n        *(in_RAX + 8) = 0;\n    }\n    else {\n        *(in_RAX + 8) = uVar1 - (unaff_RBX - arg1);\n    }\n    if ((uVar2 != 0) && (uVar3 == 0)) {\n        *(in_RAX + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "00416940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416940(ulong arg1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t *in_RAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    ulong unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            if (*in_RAX == 0) {\n                *in_RAX = 1;\n                *(*0x20 + 0x18) = arg1;\n                *(*0x20 + -0x10) = in_RAX;\n                *(*0x20 + -0x28) = 0x416985;\n                fcn.00416640();\n                iVar2 = *(*0x20 + 0x18);\n                iVar4 = *(*0x20 + -0x10);\n                *(iVar4 + 0x4c) = iVar2;\n                puVar5 = iVar2 * 1000000000;\n                *(iVar4 + 0x10) = puVar5;\n                puVar6 = *(iVar4 + 8);\n                if (puVar5 < puVar6) {\n                    *(iVar4 + 8) = puVar5;\n                    uVar1 = *(iVar4 + 4);\n                    *(iVar4 + 4) = 1;\n                    puVar6 = uVar1;\n                    uVar3 = *(iVar4 + 0x48);\n                    *(iVar4 + 0x48) = *0x5484d8 + 1;\n                    puVar5 = uVar3;\n                }\n                else if (puVar6 < puVar5) {\n                    puVar5 = iVar4 + 4;\n                    uVar1 = *puVar5;\n                    *puVar5 = 0;\n                    puVar6 = uVar1;\n                }\n                *(*0x20 + -0x28) = 0x4169d7;\n                fcn.004168e0(puVar5, puVar6);\n                return;\n            }\n            unaff_RBX = 0x28;\n            *(*0x20 + -0x28) = 0x4169f2;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x416a06;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1._0_4_ = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 743
    },
    "00416e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416e60(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f214c <= *0x4f2148) {\n                *(*0x20 + -0x20) = 0;\n                *(*0x20 + -0x18) = in_XMM15;\n                *(*0x20 + -0x18) = 0x416f40;\n                *(*0x20 + -0x10) = *0x20 + -0x20;\n                *(*0x20 + -0x40) = 0x416eb7;\n                fcn.00433720();\n                return;\n            }\n            *(*0x20 + -0x24) = *0x4f2148;\n            *(*0x20 + -0x28) = *0x4f214c;\n            *(*0x20 + -0x40) = 0x416ece;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x416ed7;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x416ee8;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x416ef1;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x416f05;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x416f0a;\n            fcn.00431a00();\n            *(*0x20 + -0x40) = 0x416f1b;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x416f25;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 541
    },
    "00417600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00417600(int64_t arg1)\n\n{\n    uint64_t unaff_RBX;\n    int64_t unaff_RSI;\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (unaff_RBX <= unaff_RSI * 0x40000) {\n        return 0;\n    }\n    iVar1 = 0x40000;\n    if (unaff_RBX < unaff_RSI * 0x40000 + 0x40000U) {\n        iVar1 = unaff_RBX + unaff_RSI * -0x40000;\n    }\n    fcn.00419540(arg1 + unaff_RSI * 0x1000);\n    return iVar1;\n}\n",
        "token_count": 212
    },
    "00418180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418180(void)\n\n{\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    *0x4f21f0 = in_XMM15;\n    fcn.00438800();\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 121
    },
    "00419c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c20(void)\n\n{\n    int64_t iVar1;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    arg3 = 0;\n    iVar1 = fcn.0040f9c0(0);\n    if (iVar1 != 0) {\n        fcn.00419ca0(0, *(unaff_R14 + 0x30), arg3);\n    }\n    return;\n}\n",
        "token_count": 145
    },
    "0041a520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a520(void)\n\n{\n    int64_t noname_1;\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg3;\n    int64_t unaff_R14;\n    \n    while (iVar2 = *0x4f1c78,  iVar1 = *0x4f1c70,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (iVar3 = 0; iVar3 < iVar2; iVar3 = iVar3 + 1) {\n        noname_1 = *(*(iVar1 + iVar3 * 8) + 0x40);\n        if ((noname_1 != 0) && (*(noname_1 + 0x10) != 0)) {\n            arg3 = 0;\n            fcn.0040f9c0(0);\n            fcn.00419ca0(0, noname_1, arg3);\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0041a9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\ndouble fcn.0041a9c0(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    double dVar3;\n    int32_t *in_RAX;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar8 = *in_RAX;\n    iVar1 = *(in_RAX + 0x14);\n    iVar6 = *(in_RAX + 0x16);\n    iVar5 = *(in_RAX + 0x22);\n    iVar2 = *(in_RAX + 0x24);\n    iVar9 = *(in_RAX + 0x26);\n    iVar4 = fcn.0041b5e0();\n    if (iVar8 < 0) {\n        iVar8 = 100000;\n    }\n    iVar9 = iVar5 + iVar2 + iVar9;\n    iVar5 = *(in_RAX + 0x1a) + *(in_RAX + 0x18) + *(in_RAX + 0x1e);\n    iVar6 = iVar6 + *(in_RAX + 0x1c) + *(in_RAX + 0x1e);\n    if (iVar5 < iVar9) {\n        iVar2 = *(in_RAX + 0x10) + ((iVar4 - *(in_RAX + 0x10)) / iVar5) * iVar6;\n        iVar7 = (*0x48f5e0 + iVar8 / *0x48f620) * iVar4;\n        iVar4 = iVar2;\n        iVar5 = iVar6;\n        if (iVar7 < iVar2) {\n            iVar4 = iVar7;\n        }\n    }\n    if (iVar4 < iVar1) {\n        iVar4 = *0x48f5e8 * iVar4;\n        iVar5 = iVar6;\n    }\n    iVar5 = iVar5 - iVar9;\n    if (iVar5 < 1000) {\n        iVar5 = 1000;\n    }\n    iVar4 = iVar4 - iVar1;\n    if (iVar4 < 1) {\n        iVar4 = 1;\n    }\n    *(in_RAX + 0x38) = iVar5 / iVar4;\n    dVar3 = *(in_RAX + 0x3a);\n    *(in_RAX + 0x3a) = iVar4 / iVar5;\n    return dVar3;\n}\n",
        "token_count": 600
    },
    "0041b5e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041b5e0(void)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar2 = *(in_RAX + 0x30);\n    uVar1 = fcn.0041b680();\n    if (uVar2 <= uVar1) {\n        if (uVar2 < *(in_RAX + 0x38)) {\n            uVar2 = *(in_RAX + 0x38);\n        }\n        if ((*(in_RAX + 0x40) == -1) || (uVar1 = *(in_RAX + 0x40) + 0x10000,  uVar1 <= uVar2)) {\n            uVar1 = uVar2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 242
    },
    "0041b720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041b720(void)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x38;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x40) = 0x41b745;\n            uVar1 = fcn.0041b5e0();\n            uVar3 = *(*(*0x20 + 8) + 0x80);\n            if (uVar1 <= uVar3) {\n                return;\n            }\n            if (unaff_RBX < uVar3) {\n                unaff_RBX = uVar3;\n            }\n            uVar2 = uVar1 - uVar3 >> 6;\n            uVar5 = uVar2 * 0x2d + uVar3;\n            if (unaff_RBX < uVar5) {\n                unaff_RBX = uVar5;\n            }\n            uVar3 = uVar3 + uVar2 * 0x3d;\n            if ((uVar1 < 0x400001) || (uVar2 = uVar1 - 0x400000,  uVar1 - 0x400000 <= uVar3)) {\n                uVar2 = uVar3;\n            }\n            uVar3 = *(*(*0x20 + 8) + 0x18);\n            uVar5 = uVar1 - uVar3;\n            if (uVar1 < uVar3) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar2 < unaff_RBX) {\n                uVar2 = unaff_RBX;\n            }\n            if (uVar5 < unaff_RBX) {\n                uVar5 = unaff_RBX;\n            }\n            if (uVar2 < uVar5) {\n                uVar5 = uVar2;\n            }\n            if (uVar5 <= uVar1) {\n                return;\n            }\n            *(*0x20 + -0x10) = uVar1;\n            *(*0x20 + -0x28) = uVar5;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x20) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x41b7f8;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x41b809;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x41b813;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x41b825;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x41b82f;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x41b834;\n            fcn.00431be0();\n            *(*0x20 + -0x40) = 0x41b839;\n            fcn.00431a00();\n            *(*0x20 + -0x40) = 0x41b83e;\n            fcn.00431980();\n            *(*0x20 + -0x40) = 0x41b84f;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x41b859;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x41b86a;\n            fcn.00432280();\n            *(*0x20 + -0x40) = 0x41b874;\n            fcn.00431f80();\n            *(*0x20 + -0x40) = 0x41b879;\n            fcn.00431be0();\n            *(*0x20 + -0x40) = 0x41b87e;\n            fcn.00431a00();\n            unaff_RBX = 0x2d;\n            *(*0x20 + -0x40) = 0x41b88f;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41b89a;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1144
    },
    "0041bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041bb20(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    code *pcVar4;\n    int64_t in_RAX;\n    ulong uVar5;\n    int32_t iVar6;\n    \n    while( true ) {\n        uVar2 = *(in_RAX + 0xd8);\n        iVar6 = uVar2;\n        if (uVar2 >> 0x20 <= iVar6) {\n            return 0;\n        }\n        if (iVar6 < 0) break;\n        LOCK();\n        puVar1 = in_RAX + 0xd8;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | iVar6 + 1));\n        if (uVar2 == uVar3) {\n            return 1;\n        }\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00430040();\n    pcVar4 = swi(3);\n    uVar5 = (*pcVar4)();\n    return uVar5;\n}\n",
        "token_count": 314
    },
    "0041bc00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041bc00(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while( true ) {\n                uVar2 = *(in_RAX + 0xd8);\n                uVar3 = uVar2 - 1;\n                if (uVar3 < 0) break;\n                LOCK();\n                puVar1 = in_RAX + 0xd8;\n                bVar5 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ (uVar2 & 0xffffffff00000000 | uVar3));\n                if (bVar5) {\n                    return uVar2 ^ !bVar5 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + -0x10) = uVar2 >> 0x20;\n            *(*0x20 + -0x18) = uVar2;\n            *(*0x20 + -0x30) = 0x41bc6b;\n            fcn.00431980();\n            *(*0x20 + -0x30) = 0x41bc7c;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x41bc89;\n            fcn.00432080();\n            *(*0x20 + -0x30) = 0x41bc9a;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x41bca7;\n            fcn.00432080();\n            *(*0x20 + -0x30) = 0x41bcac;\n            fcn.00431be0();\n            *(*0x20 + -0x30) = 0x41bcb1;\n            fcn.00431a00();\n            *(*0x20 + -0x30) = 0x41bcc5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x41bcd0;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "0041bce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041bce0(void)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t in_RAX;\n    int32_t unaff_EBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    bool bVar4;\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            while (uVar2 = *(in_RAX + 0xd8),  -1 < uVar2) {\n                LOCK();\n                puVar1 = in_RAX + 0xd8;\n                bVar4 = uVar2 == *puVar1;\n                *puVar1 = *puVar1 ^ bVar4 * (*puVar1 ^ (uVar2 & 0xffffffff | unaff_EBX << 0x20));\n                if (bVar4) {\n                    return uVar2 ^ !bVar4 * (uVar2 ^ *puVar1);\n                }\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            *(*0x20 + -0x10) = uVar2;\n            *(*0x20 + -0x28) = 0x41bd45;\n            fcn.00431980();\n            *(*0x20 + -0x28) = 0x41bd56;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x41bd65;\n            fcn.00432080();\n            *(*0x20 + -0x28) = 0x41bd76;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x41bd85;\n            fcn.00432080();\n            *(*0x20 + -0x28) = 0x41bd8a;\n            fcn.00431be0();\n            *(*0x20 + -0x28) = 0x41bd8f;\n            fcn.00431a00();\n            unaff_EBX = 0x1a;\n            *(*0x20 + -0x28) = 0x41bda5;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_EBX;\n        *(puVar3 + -8) = 0x41bdb4;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_EBX = *(puVar3 + 0x10);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 677
    },
    "0041d900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d900(char param_1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t *piVar2;\n    uint64_t unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((*(in_RAX + 0x100) < unaff_RBX || *(in_RAX + 0x100) == unaff_RBX) &&\n               (unaff_RBX <= *(in_RAX + 0x108) && *(in_RAX + 0x108) != unaff_RBX)) {\n                piVar2 = in_RAX + 0x118;\n                if (param_1 != '\\0') {\n                    piVar2 = in_RAX + 0x128;\n                }\n                *(*0x20 + -0x10) = piVar2;\n                *(*0x20 + 0x10) = unaff_RBX;\n                iVar1 = *piVar2;\n                if (iVar1 == 0) {\n                    *(*0x20 + -0x28) = 0x41d9ad;\n                    iVar1 = fcn.004202c0();\n                    *(iVar1 + 0x10) = in_XMM15;\n                    **(*0x20 + -0x10) = iVar1;\n                    unaff_RBX = *(*0x20 + 0x10);\n                }\n                else if (*(iVar1 + 0x10) == 0xfc) {\n                    iVar1 = *(in_RAX + 0x120);\n                    if (iVar1 == 0) {\n                        *(*0x20 + -0x28) = 0x41d987;\n                        iVar1 = fcn.004202c0();\n                        piVar2 = *(*0x20 + -0x10);\n                        unaff_RBX = *(*0x20 + 0x10);\n                    }\n                    else {\n                        *(in_RAX + 0x120) = 0;\n                    }\n                    *(iVar1 + 0x10) = 0;\n                    *(iVar1 + 0x18) = *piVar2;\n                    *piVar2 = iVar1;\n                }\n                if (*(iVar1 + 0x10) < 0xfc) {\n                    *(iVar1 + 0x20 + *(iVar1 + 0x10) * 8) = unaff_RBX;\n                    *(iVar1 + 0x10) = *(iVar1 + 0x10) + 1;\n                    return;\n                }\n                param_1 = -4;\n                *(*0x20 + -0x28) = 0x41d9eb;\n                fcn.00458f20(0xfc);\n            }\n            unaff_RBX = 0x1b;\n            *(*0x20 + -0x28) = 0x41d9fc;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        puVar3[0x18] = param_1;\n        *(puVar3 + -8) = 0x41da10;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        param_1 = puVar3[0x18];\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 881
    },
    "0041fb41": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041fb41(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    \n    if (*0x4f1e1c == -0x80000000) {\n        *0x516e18 = 0.0;\n    }\n    else {\n        iVar1 = (in_RAX - *0x545350) + -0x100000;\n        if (iVar1 < 0x2000) {\n            iVar1 = 0x2000;\n        }\n        if (*0x516df8 - *0x516e00 < 1) {\n            *0x516e18 = 0.0;\n        }\n        else {\n            *0x516e18 = (*0x516df8 - *0x516e00) / iVar1;\n            *0x516e10 = *0x545350;\n            *0x516e08 = *0x516e00;\n        }\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0041fbe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fbe0(void)\n\n{\n    ulong *in_RAX;\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = fcn.004202c0();\n    *in_RAX = uVar1;\n    iVar2 = fcn.00420600();\n    if (iVar2 == 0) {\n        iVar2 = fcn.004202c0();\n    }\n    in_RAX[1] = iVar2;\n    return;\n}\n",
        "token_count": 162
    },
    "00420540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420540(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00420260();\n    fcn.004095e0();\n    return;\n}\n",
        "token_count": 89
    },
    "004205a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004205a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00420200();\n    fcn.004095e0();\n    return;\n}\n",
        "token_count": 90
    },
    "00420600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00420600(void)\n\n{\n    int64_t *piVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f20c0 == 0) {\n        piVar1 = NULL;\n    }\n    else {\n        piVar1 = (*0x4f20c0 >> 0x13) << 3;\n        *0x4f20c0 = *piVar1;\n        LOCK();\n    }\n    if (piVar1 == NULL) {\n        return NULL;\n    }\n    fcn.00420200();\n    return piVar1;\n}\n",
        "token_count": 181
    },
    "004206a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong fcn.004206a0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x4206c5;\n            iVar2 = fcn.004202c0();\n            iVar1 = *(*0x20 + 8);\n            iVar3 = *(iVar1 + 0x10) / 2;\n            *(iVar1 + 0x10) = *(iVar1 + 0x10) - iVar3;\n            *(iVar2 + 0x10) = iVar3;\n            if (*(iVar1 + 0x10) < 0xfd) {\n                *(*0x20 + -0x10) = iVar2;\n                *(*0x20 + -0x30) = 0x420713;\n                fcn.00459880(iVar3 << 3);\n                *(*0x20 + -0x30) = 0x42071d;\n                fcn.004205a0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x30) = 0x420739;\n            in_RAX = fcn.00458f20(0xfd);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x420745;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 481
    },
    "00420c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00420c60(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t uVar1;\n    int64_t iVar2;\n    bool bVar3;\n    \n    uVar1 = in_RAX + 0x800000000000 >> 0x2a;\n    if (uVar1 < 0x40) {\n        iVar2 = *(uVar1 * 8 + 0x516e30);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = *(iVar2 + (in_RAX + 0x800000000000 >> 0x16 & 0xfffff) * 8);\n            if (iVar2 == 0) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = *(iVar2 + 0x10400 + (in_RAX >> 0xd & 0x1ff) * 8);\n            }\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (iVar2 == 0) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = *(iVar2 + 99) != '\\x01';\n    }\n    if (((!bVar3) && (*(iVar2 + 0x18) < in_RAX || *(iVar2 + 0x18) == in_RAX)) &&\n       (in_RAX <= *(iVar2 + 0x70) && *(iVar2 + 0x70) != in_RAX)) {\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 352
    },
    "004214c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.004214c0(uchar param_1)\n\n{\n    int64_t unaff_R14;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    ulong uStack56;\n    ulong uStack48;\n    uchar auStack24 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uStack56 = 0;\n    uStack48 = 0x421580;\n    fcn.004567a0();\n    return uStack56;\n}\n",
        "token_count": 156
    },
    "00421600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00421600(char param_1)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x18) <= *0x20 && *0x20 != *(unaff_R14 + 0x18)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (param_1 != '\\0') {\n                *(*0x20 + -0x28) = 0x42161f;\n                fcn.004219c0();\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x28) = 0x42163a;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        puVar1[0x18] = param_1;\n        *(puVar1 + -8) = 0x42164e;\n        fcn.0045b2e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        param_1 = puVar1[0x18];\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 366
    },
    "004224e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004224e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 82
    },
    "004225e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004225e0(uchar param_1)\n\n{\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x18) || *0x20 == *(unaff_R14 + 0x18)) {\n        fcn.0045b2e0();\n    }\n    *(unaff_RBX + 100) = 1;\n    fcn.00409860();\n    fcn.00422680(param_1);\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 130
    },
    "00422a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422a40(ulong arg1)\n\n{\n    uint *in_RAX;\n    ulong unaff_RBX;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    *in_RAX = in_XMM15_Da;\n    in_RAX[1] = in_XMM15_Db;\n    in_RAX[2] = in_XMM15_Dc;\n    in_RAX[3] = in_XMM15_Dd;\n    *(in_RAX + 4) = 0;\n    *(in_RAX + 6) = unaff_RBX;\n    *(in_RAX + 8) = arg1;\n    *(in_RAX + 0x18) = 0;\n    *(in_RAX + 0x62) = 0;\n    *(in_RAX + 0x1a) = 0;\n    in_RAX[0x1e] = in_XMM15_Da;\n    in_RAX[0x1f] = in_XMM15_Db;\n    in_RAX[0x20] = in_XMM15_Dc;\n    in_RAX[0x21] = in_XMM15_Dd;\n    *(in_RAX + 0x19) = 0;\n    *(in_RAX + 0xc) = 0;\n    *(in_RAX + 0x26) = 0;\n    in_RAX[0x12] = in_XMM15_Da;\n    in_RAX[0x13] = in_XMM15_Db;\n    in_RAX[0x14] = in_XMM15_Dc;\n    in_RAX[0x15] = in_XMM15_Dd;\n    *(in_RAX + 99) = 0;\n    return;\n}\n",
        "token_count": 406
    },
    "00422f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422f80(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong in_RAX;\n    ulong uVar3;\n    ulong unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x30) = 0x422faf;\n            fcn.00409860();\n            *(*0x20 + -0x30) = 0x422fbb;\n            uVar3 = fcn.00413460();\n            *(*0x20 + -0x18) = uVar3;\n            *(*0x20 + -0x30) = 0x422fce;\n            fcn.00409a80();\n            iVar1 = *(*0x20 + -0x18);\n            *(iVar1 + 10) = 2;\n            *(iVar1 + 0x10) = *(*0x20 + 0x10);\n            *(*0x20 + -0x30) = 0x422fea;\n            cVar2 = fcn.00422d40();\n            if (cVar2 != '\\0') {\n                return;\n            }\n            unaff_RBX = 0x25;\n            *(*0x20 + -0x30) = 0x423009;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x423019;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 534
    },
    "00423180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00423180(void)\n\n{\n    bool bVar1;\n    int64_t *piVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        piVar2 = *0x544cd0;\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar7 = in_RAX + 0x3fU >> 6;\n            if (*0x544cd0 == NULL) {\n                bVar1 = true;\n            }\n            else {\n                bVar1 = 0xfff0 < **0x544cd0 + uVar7 * 8;\n            }\n            if (bVar1) {\n                iVar5 = 0;\ncode_r0x00423213:\n                if (iVar5 != 0) {\n                    return iVar5;\n                }\n                *(*0x20 + -0x10) = uVar7 * 8;\n                *(*0x20 + -0x18) = uVar7;\n                *(*0x20 + -0x48) = 0x423234;\n                fcn.00409860();\n                piVar2 = *0x544cd0;\n                if (*0x544cd0 == NULL) {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = true;\n                }\n                else {\n                    iVar5 = *(*0x20 + -0x18);\n                    bVar1 = 0xfff0 < **0x544cd0 + iVar5 * 8;\n                }\n                if (bVar1) {\n                    iVar5 = 0;\ncode_r0x004232b3:\n                    if (iVar5 != 0) {\n                        *(*0x20 + -0x20) = iVar5;\n                        *(*0x20 + -0x48) = 0x42342b;\n                        fcn.00409a80();\n                        return *(*0x20 + -0x20);\n                    }\n                    *(*0x20 + -0x48) = 0x4232c5;\n                    piVar4 = fcn.004235a0();\n                    piVar2 = *0x544cd0;\n                    if (*0x544cd0 == NULL) {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = true;\n                    }\n                    else {\n                        iVar5 = *(*0x20 + -0x18);\n                        bVar1 = 0xfff0 < **0x544cd0 + iVar5 * 8;\n                    }\n                    if (bVar1) {\n                        iVar9 = *(*0x20 + -0x10);\n                        iVar6 = 0;\ncode_r0x00423340:\n                        if (iVar6 != 0) {\n                            *(*0x20 + -0x28) = iVar6;\n                            piVar4[1] = *0x544cc8;\n                            *(*0x20 + -0x48) = 0x423409;\n                            *0x544cc8 = piVar4;\n                            fcn.00409a80();\n                            return *(*0x20 + -0x28);\n                        }\n                        if (piVar4 == NULL) {\n                            bVar1 = true;\n                        }\n                        else {\n                            bVar1 = 0xfff0 < *piVar4 + iVar5 * 8;\n                        }\n                        if (bVar1) {\n                            iVar5 = 0;\ncode_r0x004233a4:\n                            if (iVar5 != 0) {\n                                *(*0x20 + -0x30) = iVar5;\n                                piVar4[1] = *0x544cd0;\n                                *(*0x20 + -0x48) = 0x4233d5;\n                                *0x544cd0 = piVar4;\n                                fcn.00409a80();\n                                return *(*0x20 + -0x30);\n                            }\n                            *(*0x20 + -0x48) = 0x423458;\n                            fcn.00430040();\n                        }\n                        else {\n                            LOCK();\n                            iVar6 = *piVar4;\n                            *piVar4 = *piVar4 + iVar9;\n                            uVar7 = iVar6 + iVar5 * 8;\n                            if (0xfff0 < uVar7) {\n                                iVar5 = 0;\n                                goto code_r0x004233a4;\n                            }\n                            uVar7 = uVar7 - iVar9;\n                            if (uVar7 < 0xfff0) {\n                                iVar5 = uVar7 + 0x10 + piVar4;\n                                goto code_r0x004233a4;\n                            }\n                        }\n                        *(*0x20 + -0x48) = 0x423465;\n                        fcn.00458f40(0xfff0);\n                    }\n                    else {\n                        iVar9 = *(*0x20 + -0x10);\n                        LOCK();\n                        iVar6 = **0x544cd0;\n                        **0x544cd0 = **0x544cd0 + iVar9;\n                        uVar7 = iVar6 + iVar5 * 8;\n                        if (0xfff0 < uVar7) {\n                            iVar6 = 0;\n                            goto code_r0x00423340;\n                        }\n                        uVar7 = uVar7 - iVar9;\n                        if (uVar7 < 0xfff0) {\n                            iVar6 = uVar7 + 0x10 + piVar2;\n                            goto code_r0x00423340;\n                        }\n                    }\n                    *(*0x20 + -0x48) = 0x423472;\n                    fcn.00458f40(0xfff0);\n                }\n                else {\n                    iVar9 = *(*0x20 + -0x10);\n                    LOCK();\n                    iVar6 = **0x544cd0;\n                    **0x544cd0 = **0x544cd0 + iVar9;\n                    uVar7 = iVar6 + iVar5 * 8;\n                    if (0xfff0 < uVar7) {\n                        iVar5 = 0;\n                        goto code_r0x004232b3;\n                    }\n                    uVar7 = uVar7 - iVar9;\n                    if (uVar7 < 0xfff0) {\n                        iVar5 = piVar2 + uVar7 + 0x10;\n                        goto code_r0x004232b3;\n                    }\n                }\n                *(*0x20 + -0x48) = 0x42347c;\n                fcn.00458f40(0xfff0);\n            }\n            else {\n                LOCK();\n                iVar5 = **0x544cd0;\n                **0x544cd0 = **0x544cd0 + uVar7 * 8;\n                uVar3 = iVar5 + uVar7 * 8;\n                if (0xfff0 < uVar3) {\n                    iVar5 = 0;\n                    goto code_r0x00423213;\n                }\n                uVar3 = uVar3 + uVar7 * -8;\n                if (uVar3 < 0xfff0) {\n                    iVar5 = uVar3 + 0x10 + piVar2;\n                    goto code_r0x00423213;\n                }\n            }\n            *(*0x20 + -0x48) = 0x423486;\n            in_RAX = fcn.00458f40(0xfff0);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + -8) = 0x423491;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 1791
    },
    "004234a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004234a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00423180();\n    return;\n}\n",
        "token_count": 81
    },
    "004234e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004234e0(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    if (*0x544ce0 != 0) {\n        iVar1 = *0x544ce0;\n        if (*0x544cc8 == 0) {\n            *0x544cc8 = *0x544ce0;\n        }\n        else {\n            do {\n                iVar3 = iVar1;\n                iVar1 = *(iVar3 + 8);\n            } while (iVar1 != 0);\n            *(iVar3 + 8) = *0x544cc8;\n            *0x544cc8 = *0x544ce0;\n        }\n    }\n    uVar2 = *0x544cd0;\n    *0x544ce0 = *0x544cd8;\n    *0x544cd8 = *0x544cd0;\n    *0x544cd0 = 0;\n    fcn.00409a80(uVar2);\n    return;\n}\n",
        "token_count": 289
    },
    "004235a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004235a0(void)\n\n{\n    int64_t iVar1;\n    uchar (*pauVar2) [16];\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x544cc8 != 0) {\n                *(*0x20 + -0x18) = *0x544cc8;\n                *0x544cc8 = *(*0x544cc8 + 8);\n                *(*0x20 + -0x30) = 0x4235df;\n                fcn.00459580();\n                pauVar2 = *(*0x20 + -0x18);\n                goto code_r0x00423622;\n            }\n            *(*0x20 + -0x30) = 0x4235f4;\n            fcn.00409a80();\n            *(*0x20 + -0x30) = 0x423605;\n            iVar1 = fcn.004127c0();\n            if (iVar1 != 0) {\n                *(*0x20 + -0x10) = iVar1;\n                *(*0x20 + -0x30) = 0x42361d;\n                fcn.00409860();\n                pauVar2 = *(*0x20 + -0x10);\ncode_r0x00423622:\n                *pauVar2 = in_XMM15;\n                return;\n            }\n            *(*0x20 + -0x30) = 0x423645;\n            fcn.00430040();\n        }\n        *(puVar3 + -8) = 0x42364b;\n        fcn.004568e0();\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00425800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00425800(void)\n\n{\n    code *pcVar1;\n    uint64_t *in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t unaff_RBX;\n    uint64_t uVar4;\n    uint64_t unaff_RDI;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    \n    if (unaff_RBX != 0) {\n        uVar5 = *in_RAX;\n        if (uVar5 < 0) {\n            uVar3 = 0x200000;\n            uVar4 = 0x200000;\n            uVar5 = 0x200000;\n        }\n        else {\n            uVar3 = uVar5 & 0x1fffff;\n            uVar4 = uVar5 >> 0x15 & 0x1fffff;\n            uVar5 = uVar5 >> 0x2a & 0x1fffff;\n        }\n        for (iVar2 = 1; iVar2 < unaff_RBX; iVar2 = iVar2 + 1) {\n            uVar8 = in_RAX[iVar2];\n            if (uVar8 < 0) {\n                uVar6 = 0x200000;\n                uVar7 = 0x200000;\n                uVar8 = 0x200000;\n            }\n            else {\n                uVar6 = uVar8 & 0x1fffff;\n                uVar7 = uVar8 >> 0x15 & 0x1fffff;\n                uVar8 = uVar8 >> 0x2a & 0x1fffff;\n            }\n            if (uVar3 == (iVar2 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40))) {\n                uVar3 = uVar3 + uVar6;\n            }\n            uVar9 = 1 << (unaff_RDI & 0x3f) & -(unaff_RDI < 0x40);\n            if (uVar8 == uVar9) {\n                uVar8 = uVar9 + uVar5;\n            }\n            if (uVar4 < uVar6 + uVar5) {\n                uVar4 = uVar6 + uVar5;\n            }\n            if (uVar4 < uVar7) {\n                uVar4 = uVar7;\n            }\n            uVar5 = uVar8;\n        }\n        if (uVar4 == 0x200000) {\n            uVar5 = 0x8000000000000000;\n        }\n        else {\n            uVar5 = (uVar5 & 0x1fffff) << 0x2a | (uVar4 & 0x1fffff) << 0x15 | uVar3 & 0x1fffff;\n        }\n        return uVar5;\n    }\n    fcn.00458f20(0);\n    pcVar1 = swi(3);\n    uVar5 = (*pcVar1)();\n    return uVar5;\n}\n",
        "token_count": 701
    },
    "00427e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00427e60(void)\n\n{\n    bool bVar1;\n    uchar auVar2 [16];\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_RAX < 1) {\n        in_RAX = 1;\n    }\n    if (*0x544a90 < 1) {\n        bVar1 = true;\n    }\n    else if (in_RAX < *0x544a90) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        bVar1 = in_RAX < SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) %\n                                SEXT816(*0x544a90), 0);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (!bVar1) {\n        fcn.00427f40(unaff_RBX + 1);\n    }\n    return;\n}\n",
        "token_count": 367
    },
    "00428160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428160(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(*(unaff_R14 + 0x30) + 0xa0) != 0) {\n                *(*0x20 + -0x20) = 0x428191;\n                fcn.004281c0();\n                return;\n            }\n            *(*0x20 + -0x20) = 0x4281ac;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x4281b7;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 296
    },
    "00428500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428500(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    uint64_t uVar1;\n    ulong uVar2;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        uVar2 = arg1;\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + -0x58) = 0;\n            *(*0x20 + -0x60) = 0x42853e;\n            uVar1 = fcn.0044cd80(0, arg2, unaff_RDI, 0x20);\n            if (0x1f < uVar1) {\n                return;\n            }\n            if (uVar1 < 0x20) {\n                *(*(*0x20 + 0x20) + uVar1 * 8) = 0;\n                return;\n            }\n            uVar2 = 0x20;\n            *(*0x20 + -0x60) = 0x428569;\n            in_RAX = fcn.00458f20(0x20);\n            unaff_RDI = arg1;\n        }\n        *(puVar3 + 8) = in_RAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = uVar2;\n        *(puVar3 + 0x20) = unaff_RDI;\n        *(puVar3 + -8) = 0x428585;\n        fcn.004568e0();\n        in_RAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1 = *(puVar3 + 0x18);\n        unaff_RDI = *(puVar3 + 0x20);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 538
    },
    "004285a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004285a0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    if (arg1 == 0) {\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432200();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    else {\n        fcn.00450e00();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432200();\n        fcn.00432280();\n        fcn.004320e0();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00432280();\n        fcn.00431a00();\n    }\n    iVar1 = *(*(unaff_R14 + 0x30) + 0x90);\n    if ((iVar1 == 0) || (unaff_R14 == iVar1)) {\n        fcn.00450200();\n        fcn.004567a0();\n    }\n    else {\n        fcn.00450200();\n        fcn.0044f560(0);\n    }\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 416
    },
    "00428840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428840(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432200();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.00431a00();\n    fcn.00450200();\n    fcn.004567a0();\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 236
    },
    "004289e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004289e0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 2;\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431a00();\n    fcn.00450440();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431a00();\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    *(*(unaff_R14 + 0x30) + 0xf9) = 0;\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 220
    },
    "00428aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00428aa0(void)\n\n{\n    uint64_t in_RAX;\n    uint64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_RBX <= unaff_RBX + 0x800000000000 == in_RAX <= in_RAX + 0x800000000000) {\n                return;\n            }\n            unaff_RBX = 0x3c;\n            *(*0x20 + -0x20) = 0x428af0;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + -8) = 0x428b05;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 338
    },
    "00428b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00428b20(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = in_RAX + 0x800000000000;\n            if ((arg1 + 0x800000000000U <= uVar1) && (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                return 0;\n            }\n            if ((arg1 + 0x800000000000U <= uVar1) || (unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U)) {\n                if ((unaff_RBX + 0x800000000000U <= unaff_RDI + 0x800000000000U) ||\n                   (unaff_RDI + 0x800000000000U <= uVar1)) {\n                    unaff_RDI = in_RAX;\n                }\n                return unaff_RDI;\n            }\n            unaff_RBX = 9;\n            *(*0x20 + -0x20) = 0x428bce;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x428be8;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 575
    },
    "00428ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00428ce0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *in_RAX;\n    uint64_t arg1;\n    uint64_t uVar5;\n    int64_t unaff_RBX;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint64_t uVar8;\n    \n    arg1 = in_RAX[1];\n    iVar3 = *in_RAX;\n    uVar6 = 0;\n    uVar1 = arg1;\n    while (uVar5 = uVar1,  8 < uVar5 - uVar6) {\n        iVar7 = (uVar5 - uVar6) / 2;\n        uVar1 = iVar7 + uVar6;\n        if (arg1 <= uVar1) goto code_r0x00428dd0;\n        uVar8 = *(uVar1 * 0x10 + iVar3) + 0x800000000000;\n        uVar2 = unaff_RBX + 0x800000000000;\n        if ((uVar8 <= uVar2) && (uVar2 < *(iVar3 + 8 + uVar1 * 0x10) + 0x800000000000U)) {\n            return uVar6 + iVar7 + 1;\n        }\n        if (uVar8 <= uVar2) {\n            uVar6 = uVar6 + iVar7 + 1;\n            uVar1 = uVar5;\n        }\n    }\n    while( true ) {\n        if (uVar5 <= uVar6) {\n            return uVar5;\n        }\n        if (arg1 <= uVar6) break;\n        if (unaff_RBX + 0x800000000000U < *(uVar6 * 0x10 + iVar3) + 0x800000000000U) {\n            return uVar6;\n        }\n        uVar6 = uVar6 + 1;\n    }\n    arg1 = fcn.00458f20(arg1);\ncode_r0x00428dd0:\n    fcn.00458f20(arg1);\n    pcVar4 = swi(3);\n    uVar6 = (*pcVar4)();\n    return uVar6;\n}\n",
        "token_count": 514
    },
    "00429620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00429620(void)\n\n{\n    uint64_t *puVar1;\n    int64_t *piVar2;\n    int32_t *piVar3;\n    int64_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RAX;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int64_t iVar12;\n    uint64_t uVar13;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    while( true ) {\n        uVar13 = *(in_RAX + 0x20);\n        uVar10 = uVar13 >> 0x20;\n        if (uVar13 <= uVar10) {\n            return 0;\n        }\n        if (*(in_RAX + 0x10) <= uVar13 >> 0x29) break;\n        while (uVar11 = uVar13 >> 0x20,  uVar11 == uVar10) {\n            LOCK();\n            puVar1 = in_RAX + 0x20;\n            uVar7 = *puVar1;\n            *puVar1 = *puVar1 ^ (uVar13 == uVar7) * (*puVar1 ^ (uVar10 + 1 << 0x20 | uVar13 & 0xffffffff));\n            if (uVar13 == uVar7) {\n                piVar4 = *(in_RAX + 8) + (uVar11 >> 9) * 8;\n                iVar8 = *piVar4;\n                piVar2 = iVar8 + (uVar11 & 0x1ff) * 8 + 0x18;\n                iVar12 = *piVar2;\n                while (iVar12 == 0) {\n                    iVar12 = *piVar2;\n                }\n                *piVar2 = 0;\n                LOCK();\n                piVar3 = iVar8 + 0x10;\n                iVar5 = *piVar3;\n                *piVar3 = *piVar3 + 1;\n                if (iVar5 == 0x1ff) {\n                    iVar9 = *piVar4;\n                    *piVar4 = 0;\n                    uVar6 = *(iVar8 + 0x10);\n                    *(iVar8 + 0x10) = 0;\n                    fcn.004095e0(uVar6, iVar9);\n                }\n                return iVar12;\n            }\n            uVar13 = *(in_RAX + 0x20);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 619
    },
    "00429760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429760(void)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RAX;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar6 = *(in_RAX + 0x20);\n            piVar5 = uVar6 >> 0x20;\n            uVar4 = uVar6 >> 0x20;\n            if (uVar6 <= uVar4) {\n                uVar6 = uVar4 >> 9;\n                if (*(in_RAX + 0x10) <= uVar6) goto code_r0x004297ee;\n                piVar5 = *(in_RAX + 8) + uVar6 * 8;\n                iVar2 = *piVar5;\n                if (iVar2 == 0) goto code_r0x004297ee;\n                uVar6 = *(iVar2 + 0x10);\n                if (*(iVar2 + 0x10) != 0) {\n                    uVar6 = *(iVar2 + 0x10);\n                    if (*(iVar2 + 0x10) != 0x200) {\n                        *(*0x20 + 8) = in_RAX;\n                        iVar3 = *piVar5;\n                        *piVar5 = 0;\n                        uVar1 = *(iVar2 + 0x10);\n                        *(iVar2 + 0x10) = 0;\n                        *(*0x20 + -0x30) = 0x4297e7;\n                        fcn.004095e0(uVar1, iVar3);\n                        in_RAX = *(*0x20 + 8);\ncode_r0x004297ee:\n                        *(in_RAX + 0x20) = 0;\n                        *(in_RAX + 0x10) = 0;\n                        return;\n                    }\n                    *(*0x20 + -0x30) = 0x429816;\n                    fcn.00430040();\n                }\n                *(*0x20 + -0x30) = 0x429827;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x10) = uVar6;\n            *(*0x20 + -0x18) = piVar5;\n            *(*0x20 + -0x30) = 0x429836;\n            fcn.00431980();\n            *(*0x20 + -0x30) = 0x429847;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x429851;\n            fcn.00431f80();\n            *(*0x20 + -0x30) = 0x429865;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x429871;\n            fcn.00431f80();\n            *(*0x20 + -0x30) = 0x429876;\n            fcn.00431be0();\n            *(*0x20 + -0x30) = 0x42987b;\n            fcn.00431a00();\n            *(*0x20 + -0x30) = 0x42988c;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + -8) = 0x429897;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 913
    },
    "004298c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * fcn.004298c0(void)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t *in_RAX;\n    uint64_t *puVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    do {\n        uVar1 = *in_RAX;\n        if (uVar1 == 0) {\n            puVar3 = NULL;\n            break;\n        }\n        puVar3 = (uVar1 >> 0x13) << 3;\n        LOCK();\n        uVar2 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar2) * (*in_RAX ^ *puVar3);\n    } while (uVar1 != uVar2);\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040bd80(0x5474b8);\n        return puVar3;\n    }\n    return puVar3;\n}\n",
        "token_count": 262
    },
    "00429960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429960(void)\n\n{\n    int64_t iVar1;\n    int64_t *in_RAX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            LOCK();\n            iVar1 = *in_RAX;\n            *in_RAX = *in_RAX + 1;\n            if (iVar1 + 1 != 0) {\n                return;\n            }\n            *(*0x20 + -0x10) = iVar1 + 1;\n            *(*0x20 + -0x28) = 0x42999e;\n            fcn.00431980();\n            *(*0x20 + -0x28) = 0x4299af;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x4299bd;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x4299ce;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x4299d5;\n            fcn.00431f80();\n            *(*0x20 + -0x28) = 0x4299da;\n            fcn.00431be0();\n            *(*0x20 + -0x28) = 0x4299df;\n            fcn.00431a00();\n            *(*0x20 + -0x28) = 0x4299f0;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + -8) = 0x4299fb;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 505
    },
    "00429a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429a40(void)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t *in_RAX;\n    int64_t unaff_RBX;\n    \n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + unaff_RBX;\n    if (((unaff_RBX < 1) || (unaff_RBX <= unaff_RBX + iVar1)) &&\n       ((-1 < unaff_RBX || (unaff_RBX <= iVar1 + unaff_RBX * 2)))) {\n        return;\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431f80();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00430040();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 220
    },
    "00429be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429be0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t unaff_R14;\n    \n    iVar3 = *(*(unaff_R14 + 0x30) + 0xa0);\n    if (iVar3 == 0) {\n        fcn.00409a80();\n    }\n    else {\n        LOCK();\n        piVar1 = iVar3 + 0x2274;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        if ((iVar2 + 1U & 1) != 0) {\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00431f80();\n            fcn.00431be0();\n            fcn.00431a00();\n            fcn.00430040();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "0042a080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a080(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x544a34 == 0) {\n        fcn.00409860();\n        if (*0x544a34 == 0) {\n            fcn.0042a200();\n            *0x544a34 = 1;\n        }\n        fcn.00409a80();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "0042a200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a200(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    uint in_XMM15_Da;\n    uint in_XMM15_Db;\n    uint in_XMM15_Dc;\n    uint in_XMM15_Dd;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x40;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x40) = _sym.imp.kernel32.dll_CreateIoCompletionPort;\n            *(*0x20 + -0x38) = 0xffffffffffffffff;\n            *(*0x20 + -0x30) = CONCAT412(in_XMM15_Dd, CONCAT48(in_XMM15_Dc, CONCAT44(in_XMM15_Db, in_XMM15_Da)));\n            *(*0x20 + -0x20) = 0xffffffff;\n            *(*0x20 + -0x48) = 0x42a245;\n            fcn.0042d600();\n            *0x4d92a8 = *(*0x20 + -0x18);\n            if (*0x4d92a8 != 0) {\n                return;\n            }\n            *(*0x20 + -0x48) = 0x42a277;\n            fcn.0045a440();\n            in_XMM15_Da = 0;\n            in_XMM15_Db = 0;\n            in_XMM15_Dc = 0;\n            in_XMM15_Dd = 0;\n            unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n            *(*0x20 + -0x10) = *(*0x20 + -0x40);\n            *(*0x20 + -0x48) = 0x42a296;\n            fcn.00431980();\n            *(*0x20 + -0x48) = 0x42a2a7;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x42a2b1;\n            fcn.00431f80();\n            *(*0x20 + -0x48) = 0x42a2c5;\n            fcn.00432280();\n            *(*0x20 + -0x48) = 0x42a2ca;\n            fcn.00431a00();\n            *(*0x20 + -0x48) = 0x42a2db;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x42a2e5;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 675
    },
    "0042a7a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a7a0(ulong arg1)\n\n{\n    uint32_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    uint unaff_EDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            uVar1 = *(unaff_RBX + 0x28);\n            if ((uVar1 == 0x72) || (uVar1 == 0x77)) {\n                *(unaff_RBX + 0x2c) = arg1;\n                *(unaff_RBX + 0x30) = unaff_EDI;\n                *(*0x20 + -0x30) = 0x42a7db;\n                fcn.0042a100(uVar1);\n                return;\n            }\n            *(*0x20 + -0xc) = uVar1;\n            *(*0x20 + -0x30) = 0x42a7ee;\n            fcn.00431980();\n            *(*0x20 + -0x30) = 0x42a7ff;\n            fcn.00432280();\n            *(*0x20 + -0x30) = 0x42a80b;\n            fcn.00432080();\n            *(*0x20 + -0x30) = 0x42a810;\n            fcn.00431be0();\n            *(*0x20 + -0x30) = 0x42a815;\n            fcn.00431a00();\n            unaff_RBX = 0x17;\n            *(*0x20 + -0x30) = 0x42a826;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x1c) = unaff_EDI;\n        *(puVar2 + -8) = 0x42a83e;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1._0_4_ = *(puVar2 + 0x18);\n        unaff_EDI = *(puVar2 + 0x1c);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 649
    },
    "0042a860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042a860(uint64_t arg1)\n\n{\n    uint8_t uVar1;\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            if (arg1 - 1 < arg1) {\n                uVar1 = *((arg1 - 1) + unaff_RBX);\n                arg1 = uVar1;\n                if (uVar1 == 0) {\n                    *(*0x20 + -0x28) = _sym.imp.kernel32.dll_GetProcAddress;\n                    *(*0x20 + -0x20) = in_RAX;\n                    *(*0x20 + -0x18) = unaff_RBX;\n                    *(*0x20 + -0x30) = 0x42a8a9;\n                    fcn.0042d500();\n                    return *(*0x20 + -0x10);\n                }\n                unaff_RBX = 5;\n                *(*0x20 + -0x30) = 0x42a8db;\n                fcn.00430040();\n            }\n            *(*0x20 + -0x30) = 0x42a8e5;\n            in_RAX = fcn.00458f20(arg1);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x42a8ff;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 572
    },
    "0042b5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b5c0(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d600();\n    if (iStack16 != 0) {\n        *0x5449e5 = 1;\n        fcn.0042d480();\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0042baa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042baa0(void)\n\n{\n    fcn.0042d480();\n    return -*0x544b80 * *0x544b78;\n}\n",
        "token_count": 41
    },
    "0042bb20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042bb20(void)\n\n{\n    fcn.0042d480();\n    fcn.0042d480();\n    return 0x195726909;\n}\n",
        "token_count": 40
    },
    "0042bee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bee0(ulong arg1)\n\n{\n    code *pcVar1;\n    int64_t unaff_RBX;\n    \n    if (unaff_RBX != 0) {\n        fcn.0042d500();\n        fcn.0043ff20(arg1);\n        return;\n    }\n    fcn.00458f20(0);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "0042c1c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c1c0(void)\n\n{\n    fcn.00409860();\n    *0x544a08 = 1;\n    fcn.0042d480();\n    return;\n}\n",
        "token_count": 46
    },
    "0042cc40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cc40(void)\n\n{\n    int64_t iStack32;\n    \n    fcn.0042d700();\n    if (iStack32 != 0) {\n        fcn.0042d480();\n        return;\n    }\n    if (*0x544a08 != 0) goto code_r0x0042cd6f;\n    do {\n        fcn.0045a440();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.00432080();\n        fcn.00432280();\n        fcn.00431f80();\n        fcn.00432280();\n        fcn.00431a00();\n        fcn.00430040();\ncode_r0x0042cd6f:\n        fcn.00409860();\n        fcn.00409860();\n    } while( true );\n}\n",
        "token_count": 189
    },
    "0042d240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d240(void)\n\n{\n    int64_t in_RAX;\n    \n    if (*(in_RAX + 0x328) != 0) {\n        fcn.0042d480();\n        *(in_RAX + 0x328) = 0;\n    }\n    if (*(in_RAX + 0x318) != 0) {\n        fcn.0042d480();\n        *(in_RAX + 0x318) = 0;\n    }\n    if (*(in_RAX + 800) != 0) {\n        fcn.0042d480();\n        *(in_RAX + 800) = 0;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0042d420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d420(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    uchar auStackX8 [32];\n    \n    iVar1 = *(unaff_R14 + 0x30);\n    *(iVar1 + 0x280) = 0;\n    *(iVar1 + 0x288) = auStackX8;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 96
    },
    "0042d480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d480(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [8];\n    ulong uStackX24;\n    \n    uStackX24 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 1;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 121
    },
    "0042d500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d500(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [16];\n    ulong uStackX32;\n    \n    uStackX32 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 2;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 121
    },
    "0042d580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d580(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000028;\n    \n    uStack0000000000000028 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 3;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 129
    },
    "0042d600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d600(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 4;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 129
    },
    "0042d680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d680(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000038;\n    \n    uStack0000000000000038 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 5;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 129
    },
    "0042d700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d700(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000040;\n    \n    uStack0000000000000040 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 6;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 129
    },
    "0042d780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d780(void)\n\n{\n    int64_t iVar1;\n    int64_t in_GS_OFFSET;\n    uchar auStackX16 [24];\n    ulong uStack0000000000000048;\n    \n    uStack0000000000000048 = 0;\n    iVar1 = *(**(in_GS_OFFSET + *0x544bc0) + 0x30);\n    *(iVar1 + 0x280) = 7;\n    *(iVar1 + 0x288) = auStackX16;\n    fcn.0042d340();\n    return;\n}\n",
        "token_count": 129
    },
    "0042d840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d840(void)\n\n{\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 25
    },
    "0042f100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042f100(int64_t arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 86
    },
    "00430040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430040(void)\n\n{\n    fcn.004567a0();\n    fcn.00430380();\n    return;\n}\n",
        "token_count": 32
    },
    "00430140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00430140(void)\n\n{\n    fcn.004567a0();\n    fcn.00430380();\n    return;\n}\n",
        "token_count": 32
    },
    "00431980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431980(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar2 = *(unaff_R14 + 0x30);\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + 1;\n    cVar1 = *(iVar2 + 0xe7);\n    *(iVar2 + 0xe7) = cVar1 + '\\x01';\n    if (cVar1 == '\\0') {\n        fcn.00409860();\n    }\n    *(iVar2 + 0xd8) = *(iVar2 + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 202
    },
    "00431ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431ba0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00432280();\n    return;\n}\n",
        "token_count": 81
    },
    "00431be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431be0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00432280();\n    return;\n}\n",
        "token_count": 81
    },
    "00431c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431c20(void)\n\n{\n    char in_AL;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_AL == '\\0') {\n        fcn.00432280();\n    }\n    else {\n        fcn.00432280();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00431ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00431ee0(ulong param_1, ulong param_2)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00431c80(param_1, param_2);\n    fcn.00431c80(param_1, param_2);\n    fcn.00432280();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 147
    },
    "00432080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432080(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (in_RAX < 0) {\n        fcn.00432280();\n    }\n    fcn.00431f80();\n    return;\n}\n",
        "token_count": 110
    },
    "004320e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004320e0(void)\n\n{\n    int64_t iVar1;\n    ulong in_RAX;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uchar *puVar4;\n    ulong unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            *(*0x20 + -0x6c) = in_XMM15;\n            *(*0x20 + -0x98) = *0x20 + -8;\n            *(*0x20 + -0x90) = 0x43212f;\n            uVar2 = fcn.004591ab();\n            unaff_RBP = *(*0x20 + -0x98);\n            for (iVar3 = 99;\n                (0 < iVar3 &&\n                ((*(*0x20 + iVar3 + -0x6c) = *((uVar2 & 0xf) + 0x47708a),  0xf < uVar2 ||\n                 (iVar1 = *0x544b08 + iVar3 + -100,  iVar1 != 0 && SBORROW8(*0x544b08, -(iVar3 + -100)) == iVar1 < 0))))\n                ; iVar3 = iVar3 + -1) {\n                uVar2 = uVar2 >> 4;\n            }\n            if (iVar3 - 1U < 100) {\n                *(*0x20 + iVar3 + -0x6d) = 0x78;\n                if (iVar3 - 2U < 100) {\n                    *(*0x20 + iVar3 + -0x6e) = 0x30;\n                    *(*0x20 + -0x90) = 0x4321b8;\n                    fcn.00431a60(-(iVar3 + -0x66));\n                    return;\n                }\n                *(*0x20 + -0x90) = 0x4321d2;\n                fcn.00458f20(100);\n            }\n            *(*0x20 + -0x90) = 0x4321dc;\n            in_RAX = fcn.00458f20(100);\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x4321e7;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 630
    },
    "00432200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432200(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004320e0();\n    return;\n}\n",
        "token_count": 81
    },
    "00432240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432240(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004320e0();\n    return;\n}\n",
        "token_count": 81
    },
    "00432300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432300(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00432080();\n    fcn.00432280();\n    fcn.00431a00();\n    fcn.004320e0();\n    return;\n}\n",
        "token_count": 141
    },
    "004323e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004323e0(code **arg1)\n\n{\n    int64_t in_RAX;\n    uint64_t uVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    *0x544b08 = 0x10;\n    for (uVar1 = 0; uVar1 + in_RAX < unaff_RBX; uVar1 = uVar1 + 8) {\n        if ((uVar1 & 0xf) == 0) {\n            if (uVar1 != 0) {\n                fcn.00431980();\n                fcn.00431be0();\n                fcn.00431a00();\n            }\n            fcn.00431980();\n            fcn.004320e0();\n            fcn.00432280();\n            fcn.00431a00();\n        }\n        if (arg1 != NULL) {\n            (**arg1)(*arg1, arg1, unaff_RBX);\n        }\n        fcn.00431a60(1);\n        fcn.00431980();\n        fcn.004320e0();\n        fcn.00431a00();\n        fcn.00431980();\n        fcn.00431ba0();\n        fcn.00431a00();\n        puVar2 = fcn.00447600();\n        if (puVar2 != NULL) {\n            fcn.00447da0();\n            uVar3 = fcn.00447480(*puVar2);\n            fcn.00431980();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.00432280();\n            fcn.004320e0(uVar3);\n            fcn.00432280();\n            fcn.00431a00();\n        }\n    }\n    *0x544b08 = 0;\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 509
    },
    "00432ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00432ca0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004567a0();\n    return;\n}\n",
        "token_count": 82
    },
    "00433660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433660(void)\n\n{\n    int64_t iVar1;\n    code **in_RAX;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar1 = *0x4f1c58;\n    for (iVar2 = 0; iVar2 < iVar1; iVar2 = iVar2 + 1) {\n        (**in_RAX)();\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 156
    },
    "00433720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433720(void)\n\n{\n    uint64_t uVar1;\n    code **in_RAX;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x544a78,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (uVar2 = 0; uVar2 < uVar1; uVar2 = uVar2 + 1) {\n        (**in_RAX)(*in_RAX, in_RAX);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00433ac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00433ac0(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f26d0 - *0x4f26e0 <= *0x4f26d8) {\n                return;\n            }\n            *(*0x20 + -0xc) = *0x4f26d8;\n            *(*0x20 + -0x28) = 0x433b05;\n            fcn.00431980();\n            *(*0x20 + -0x28) = 0x433b16;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x433b25;\n            fcn.00432080();\n            *(*0x20 + -0x28) = 0x433b36;\n            fcn.00432280();\n            *(*0x20 + -0x28) = 0x433b3b;\n            fcn.00431a00();\n            *(*0x20 + -0x28) = 0x433b4c;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x433b52;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 395
    },
    "00433b60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00433b60(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*0x4f26d0 <= *0x4f26d0 + 1) {\n                *(*0x20 + -0x10) = *0x4f26d0;\n                *(*0x20 + -0x28) = 0x433b96;\n                *0x4f26d0 = *0x4f26d0 + 1;\n                fcn.00433ac0();\n                return *(*0x20 + -0x10);\n            }\n            *(*0x20 + -0x28) = 0x433bb6;\n            fcn.00430040();\n        }\n        *(puVar1 + -8) = 0x433bbc;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 310
    },
    "00434f80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434f80(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    ulong *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (**(unaff_R14 + 0x30) == unaff_R14) {\n                *(*0x20 + -0x10) = unaff_R14;\n                *(unaff_R14 + 0x48) = unaff_R14;\n                *(unaff_R14 + 0x40) = **0x20;\n                *(unaff_R14 + 0x38) = *0x20 + 8;\n                *(*0x20 + -0x28) = 0x434fc9;\n                fcn.004566c0();\n                *(*0x20 + -0x28) = 0x434fe5;\n                fcn.0042cde0();\n                iVar3 = *(*0x20 + -0x10);\n                if (*(iVar3 + 0x30) == 0x4f22c0) {\n                    *(*0x20 + -0x28) = 0x434ffc;\n                    fcn.00435080();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                ppcVar1 = *(*(iVar3 + 0x30) + 0x88);\n                if (ppcVar1 != NULL) {\n                    pcVar2 = *ppcVar1;\n                    *(*0x20 + -0x28) = 0x43501d;\n                    (*pcVar2)();\n                    iVar3 = *(*0x20 + -0x10);\n                }\n                if (*(iVar3 + 0x30) != 0x4f22c0) {\n                    *(*0x20 + -0x28) = 0x43503e;\n                    fcn.0043c7e0();\n                    *(*(*(*0x20 + -0x10) + 0x30) + 0xa8) = 0;\n                }\n                *(*0x20 + -0x28) = 0x435057;\n                fcn.00438ae0();\n                return;\n            }\n            *(*0x20 + -0x28) = 0x435072;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x435078;\n        fcn.004568e0();\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 652
    },
    "004350c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004350c0(void)\n\n{\n    int64_t unaff_R14;\n    \n    fcn.00409be0();\n    *(*(unaff_R14 + 0x30) + 0x118) = 0;\n    return;\n}\n",
        "token_count": 58
    },
    "00435ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00435ba0(void)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (uVar1 = *0x544a10,  *0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *0x544a10 = 0;\n    if (uVar1 == 0) {\n        uVar2 = fcn.00435ee0();\n        uVar3 = *0x544ab8;\n        *0x544ab8 = uVar2;\n        if (uVar2 == 0) {\n            uVar3 = fcn.00435c20();\n        }\n    }\n    else {\n        for (uVar3 = 0; uVar3 < uVar1; uVar3 = uVar3 + 1) {\n            fcn.00435c20();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "00438720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00438720(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*0x4f26a8 == 0) {\n        if ((*0x4f26b0 == 0) || (in_RAX < *0x4f26b0)) {\n            fcn.0042a300();\n        }\n    }\n    else {\n        fcn.00436ba0();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0043a080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0043a080(void)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    uint64_t *unaff_R14;\n    \n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + 1;\n    *(unaff_R14 + 0xb7) = 1;\n    unaff_R14[2] = 0xfffffffffffffade;\n    *(unaff_R14[6] + 0x26c) = *(*(unaff_R14[6] + 0xa0) + 0x14);\n    *(unaff_R14 + 0xbb) = 1;\n    piVar1 = *(unaff_R14[6] + 0xa0) + 0x14;\n    *piVar1 = *piVar1 + 1;\n    fcn.00439ba0();\n    uVar2 = unaff_R14[7];\n    unaff_R14[0xe] = uVar2;\n    unaff_R14[0xf] = unaff_R14[8];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.004567a0();\n    }\n    fcn.00434500(3);\n    uVar2 = unaff_R14[0xe];\n    if ((uVar2 <= *unaff_R14 && *unaff_R14 != uVar2) || (unaff_R14[1] < uVar2)) {\n        fcn.004567a0();\n    }\n    fcn.004567a0();\n    fcn.00439ba0();\n    *(unaff_R14[6] + 0xd8) = *(unaff_R14[6] + 0xd8) + -1;\n    return;\n}\n",
        "token_count": 426
    },
    "0043a7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043a7c0(void)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar2 = fcn.0043e5e0();\n    cVar1 = *0x4f2798;\n    if (iVar2 != 0 && *0x4f2798 != '\\0') {\n        *0x4f2798 = '\\0';\n        fcn.00409b60(cVar1);\n    }\n    fcn.00409a80();\n    if (iVar2 != 0) {\n        fcn.0043c7e0();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "0043aa00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043aa00(void)\n\n{\n    int32_t in_EAX;\n    int64_t *piVar1;\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = fcn.0040ba20();\n    if (-1 < in_EAX) {\n        uVar2 = 0;\n        while ((1 << (uVar2 & 0x1f) & -(uVar2 < 0x20)) < in_EAX + 0x1000) {\n            uVar2 = uVar2 + 1;\n        }\n        fcn.004567a0();\n        piVar1[2] = *piVar1 + 0x13a0;\n        piVar1[3] = -1;\n        **piVar1 = 0;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0043cac0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cac0(void)\n\n{\n    int32_t in_EAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    *0x4f26cc = *0x4f26cc + in_EAX;\n    if (0 < in_EAX) {\n        fcn.0043cb20();\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 140
    },
    "0043e040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e040(void)\n\n{\n    uint8_t in_AL;\n    uint8_t uVar1;\n    int32_t iVar2;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar2 = *0x4f2738;\n    uVar1 = in_AL ^ 1;\n    if (*0x4f2720 != uVar1) {\n        *0x4f2720 = uVar1;\n        if (in_AL == 0) {\n            fcn.00409a80();\n        }\n        else {\n            *0x4f2738 = 0;\n            if (*0x4f2730 != 0) {\n                *(*0x4f2730 + 0xa0) = 0;\n                if (*0x4f2710 == 0) {\n                    *0x4f2708 = *0x4f2728;\n                }\n                else {\n                    *(*0x4f2710 + 0xa0) = *0x4f2728;\n                }\n                *0x4f2710 = *0x4f2730;\n            }\n            *0x4f2718 = *0x4f2718 + iVar2;\n            *0x4f2728 = in_XMM15;\n            fcn.00409a80();\n            for (; iVar2 != 0 && *0x4f26f8 != 0; iVar2 = iVar2 + -1) {\n                fcn.004365c0();\n            }\n        }\n        return;\n    }\n    fcn.00409a80();\n    return;\n}\n",
        "token_count": 412
    },
    "0043e180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e180(void)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    *(in_RAX + 0x128) = *0x4f26c0;\n    *0x4f26c8 = *0x4f26c8 + 1;\n    *0x4f26c0 = in_RAX;\n    fcn.0043cb20();\n    return;\n}\n",
        "token_count": 147
    },
    "0043e340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e340(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    uint64_t uVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint32_t uVar5;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (*(in_RAX + 0x2298) != 0) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x10) = in_RAX + 0x2278;\n            *(*0x20 + -0x28) = 0x43e385;\n            fcn.00409860();\n            if ((*(*0x20 + 8))[0x8a6] != 0) goto code_r0x0043e3e2;\n            iVar2 = **(*0x20 + 8);\n            uVar5 = iVar2 % 0x20;\n            if (-1 < uVar5) {\n                uVar3 = iVar2 + ((iVar2 >> 0x1f) >> 0x1b) >> 5;\n                if (uVar3 < *0x4f1d38) {\n                    puVar1 = *0x4f1d30 + uVar3 * 4;\n                    LOCK();\n                    *puVar1 = *puVar1 & ~(1 << (uVar5 & 0x1f) & -(uVar5 < 0x20));\ncode_r0x0043e3e2:\n                    *(*0x20 + -0x28) = 0x43e3ec;\n                    fcn.00409a80();\n                    return;\n                }\n                *(*0x20 + -0x28) = 0x43e409;\n                fcn.00458f20(*0x4f1d38);\n            }\n            *(*0x20 + -0x28) = 0x43e40e;\n            in_RAX = fcn.0042e700();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + -8) = 0x43e419;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 619
    },
    "0043e440": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043e440(void)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int64_t in_RAX;\n    uint64_t arg1;\n    int64_t unaff_RBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t unaff_R14;\n    int64_t in_GS_OFFSET;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            do {\n            } while (*(in_RAX + 0x194) != *(in_RAX + 0x194));\n            if ((*(in_RAX + 0x194) == *(in_RAX + 400)) && (*(in_RAX + 0x998) == 0)) {\n                *(*0x20 + 8) = in_RAX;\n                if (unaff_RBX == 0) {\n                    *(*0x20 + -0x28) = 0x43e499;\n                    fcn.0045a8a0();\n                    unaff_R14 = **(in_GS_OFFSET + *0x544bc0);\n                    unaff_RBX = *(*0x20 + -0x20);\n                }\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x28) = 0x43e4be;\n                fcn.0043e340();\n                piVar3 = *(*0x20 + 8);\n                iVar2 = *piVar3;\n                uVar6 = iVar2 % 0x20;\n                if (-1 < uVar6) {\n                    uVar5 = ((iVar2 >> 0x1f) >> 0x1b) + iVar2 >> 5;\n                    arg1 = *0x4f1cf8;\n                    if (uVar5 < *0x4f1cf8) {\n                        puVar1 = *0x4f1cf0 + uVar5 * 4;\n                        LOCK();\n                        *puVar1 = *puVar1 | 1 << (uVar6 & 0x1f) & -(uVar6 < 0x20);\n                        *(piVar3 + 2) = *0x4f26f0;\n                        LOCK();\n                        *0x4f26f8 = *0x4f26f8 + 1;\n                        *0x4f26f0 = piVar3;\n                        if (*(piVar3 + 0x488) >> 0x3d == 0) {\n                            *(piVar3 + 0x488) = *(*0x20 + -0x10) & 0x1fffffffffffffff | 0x8000000000000000;\n                            return;\n                        }\n                        *(*0x20 + -0x28) = 0x43e588;\n                        arg1 = fcn.00430040();\n                    }\n                    *(*0x20 + -0x28) = 0x43e593;\n                    fcn.00458f20(arg1);\n                }\n                *(*0x20 + -0x28) = 0x43e598;\n                fcn.0042e700();\n            }\n            unaff_RBX = 0x23;\n            *(*0x20 + -0x28) = 0x43e5a9;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_RBX;\n        *(puVar4 + -8) = 0x43e5b9;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_RBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 944
    },
    "0043e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0043e780(void)\n\n{\n    int64_t iVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar1 = fcn.0043e5e0();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    *0x4f2700 = 1;\n    return 0;\n}\n",
        "token_count": 127
    },
    "0043e7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0043e7e0(char param_1)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t unaff_R14;\n    bool bVar5;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar4 = unaff_RBX;\n    if (param_1 != '\\0') {\n        do {\n            uVar4 = *(in_RAX + 0x998);\n            LOCK();\n            puVar1 = in_RAX + 0x998;\n            bVar5 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar5 * (*puVar1 ^ unaff_RBX);\n        } while (!bVar5);\n        if (uVar4 == 0) {\n            return uVar4 ^ !bVar5 * (uVar4 ^ *puVar1);\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 0x194);\n        if (uVar2 - *(in_RAX + 400) < 0x100) {\n            *(in_RAX + 0x198 + (uVar2 & 0xff) * 8) = uVar4;\n            *(in_RAX + 0x194) = uVar2 + 1;\n            return in_RAX;\n        }\n        uVar3 = fcn.0043e8e0(*(in_RAX + 400));\n    } while (uVar3 == '\\0');\n    return uVar3;\n}\n",
        "token_count": 407
    },
    "004400a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004400a0(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0xd8;\n    *piVar1 = *piVar1 + 1;\n    LOCK();\n    piVar1 = in_RAX + 0x28;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + 1;\n    if (iVar2 + 1 < 0) {\n        fcn.004567a0();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004412a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004412a0(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d480();\n    fcn.0042d480();\n    return;\n}\n",
        "token_count": 91
    },
    "00441340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441340(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0042d500();\n    if (*0x4f1550 == 0) {\n        fcn.0042d480();\n    }\n    else {\n        fcn.0042d500();\n        fcn.0042d500();\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00441f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00441f00(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar auVar2 [16];\n    uint64_t *in_RAX;\n    uint64_t uVar3;\n    uint64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = *in_RAX;\n    auVar2 = ZEXT816(uVar1) * ZEXT816(arg1);\n    if ((((SUB168(auVar2 >> 0x40, 0) == 0) && (SUB168(auVar2, 0) < 0x1000000000001)) && (-1 < unaff_RBX)) &&\n       (unaff_RBX <= arg1)) {\n        fcn.0040b060(1);\n        return;\n    }\n    do {\n        auVar2 = ZEXT816(uVar1) * ZEXT816(unaff_RBX);\n        uVar3 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) == 0) goto code_r0x00441f78;\n        do {\n            unaff_RBX = 0x48f6b0;\n            uVar3 = fcn.0042f8a0();\ncode_r0x00441f78:\n        } while ((0x1000000000000 < uVar3) || (unaff_RBX < 0));\n        unaff_RBX = 0x48f6c0;\n        fcn.0042f8a0();\n    } while( true );\n}\n",
        "token_count": 397
    },
    "004438e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004438e0(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t *unaff_RBX;\n    \n    uVar1 = *(in_RAX + 0x28);\n    if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n        *(in_RAX + 0x28) = uVar1 + unaff_RBX[2];\n    }\n    for (iVar2 = *(in_RAX + 0x28); iVar2 != 0; iVar2 = *(iVar2 + 0x28)) {\n        uVar1 = *(iVar2 + 0x18);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x18) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 8);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 8) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x20);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x20) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x28);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x28) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x38);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x38) = uVar1 + unaff_RBX[2];\n        }\n        uVar1 = *(iVar2 + 0x30);\n        if ((*unaff_RBX < uVar1 || *unaff_RBX == uVar1) && (uVar1 <= unaff_RBX[1] && unaff_RBX[1] != uVar1)) {\n            *(iVar2 + 0x30) = uVar1 + unaff_RBX[2];\n        }\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "004439e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004439e0(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iVar3 = *(in_RAX + 0x148);\n    if (iVar3 != 0) {\n        iVar4 = 0;\n        for (; iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            if (iVar4 != *(iVar3 + 0x50)) {\n                fcn.00409860();\n            }\n            iVar4 = *(iVar3 + 0x50);\n        }\n        for (iVar3 = *(in_RAX + 0x148); iVar3 != 0; iVar3 = *(iVar3 + 0x40)) {\n            uVar1 = *(iVar3 + 0x18);\n            if ((*arg1 < uVar1 || *arg1 == uVar1) && (uVar1 <= arg1[1] && arg1[1] != uVar1)) {\n                *(iVar3 + 0x18) = uVar1 + arg1[2];\n            }\n        }\n        if (arg1[0x23] == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = arg1[0x23] - (arg1[1] - unaff_RBX);\n            fcn.00459880(iVar3);\n        }\n        iVar2 = 0;\n        for (iVar4 = *(in_RAX + 0x148); iVar4 != 0; iVar4 = *(iVar4 + 0x40)) {\n            if (iVar2 != *(iVar4 + 0x50)) {\n                fcn.00409a80();\n            }\n            iVar2 = *(iVar4 + 0x50);\n        }\n        return iVar3;\n    }\n    return 0;\n}\n",
        "token_count": 491
    },
    "00445020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00445020(void)\n\n{\n    int32_t iVar1;\n    int64_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(*in_RAX + 8) != -0x80000000) {\n        return *(*in_RAX + 8);\n    }\n    iVar1 = fcn.00445080();\n    return iVar1 << 3;\n}\n",
        "token_count": 138
    },
    "00445e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445e00(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00445b20(3);\n    return;\n}\n",
        "token_count": 125
    },
    "00445ee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00445ee0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int64_t unaff_R14;\n    ulong uStack0000000000000030;\n    \n    uStack0000000000000030 = arg3;\n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00445b20(4);\n    return;\n}\n",
        "token_count": 125
    },
    "00446100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446100(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if ((in_RAX == 0) || (0x20 < unaff_RBX)) {\n                *(*0x20 + 0x10) = unaff_RBX;\n                unaff_RBX = 0;\n                *(*0x20 + -0x28) = 0x446146;\n                iVar1 = fcn.0040b060(0);\n                if (-1 < *(*0x20 + 0x10)) {\n                    if (*(*0x20 + 0x10) <= -iVar1) {\n                        return;\n                    }\n                    if (iVar1 != 0) {\n                        *(*0x20 + -0x28) = 0x44617e;\n                        fcn.00452d00();\n                    }\n                    *(*0x20 + -0x28) = 0x446185;\n                    fcn.00452d40();\n                }\n                *(*0x20 + -0x28) = 0x44618a;\n                fcn.00452d00();\ncode_r0x0044618a:\n                *(*0x20 + -0x28) = 0x446194;\n                fcn.00458f20(0);\n            }\n            else if (unaff_RBX < 0x21) {\n                if (unaff_RBX != 0) {\n                    return;\n                }\n                goto code_r0x0044618a;\n            }\n            *(*0x20 + -0x28) = 0x4461a5;\n            in_RAX = fcn.00458f60(unaff_RBX, 0x20);\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + -8) = 0x4461b5;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 603
    },
    "004461e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004461e0(uint64_t arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t unaff_RBX;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    uint64_t unaff_RDI;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint64_t arg1_00;\n    int64_t unaff_R14;\n    \n    do {\n        puVar5 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar5 = *0x20 + -0x78;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x10) = in_RAX;\n            *(*0x20 + -0x54) = 0;\n            iVar1 = 0;\n            iVar4 = 0;\n            while (*(*0x20 + -0x48) = iVar1,  iVar4 < arg1) {\n                *(*0x20 + -0x28) = iVar4;\n                unaff_RDI = *(unaff_RBX + iVar4 * 4);\n                *(*0x20 + -0x80) = 0x446235;\n                iVar1 = fcn.00452fa0(4);\n                iVar1 = *(*0x20 + -0x48) + iVar1;\n                arg1 = *(*0x20 + 0x18);\n                unaff_RBX = *(*0x20 + 0x10);\n                iVar4 = *(*0x20 + -0x28) + 1;\n            }\n            unaff_RBX = iVar1 + 3;\n            *(*0x20 + -0x80) = 0x44626e;\n            uVar2 = fcn.00446100();\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x40) = unaff_RBX;\n            *(*0x20 + -0x18) = arg1;\n            *(*0x20 + -0x38) = unaff_RDI;\n            *(*0x20 + -0x30) = iVar1;\n            iVar4 = *(*0x20 + 0x18);\n            iVar6 = *(*0x20 + -0x48);\n            iVar7 = 0;\n            arg1_00 = 0;\n            while ((iVar7 < iVar4 && (arg1_00 < iVar6))) {\n                if (unaff_RDI < arg1_00) goto code_r0x00446368;\n                *(*0x20 + -0x28) = iVar7;\n                *(*0x20 + -0x50) = arg1_00;\n                *(*0x20 + -0x80) = 0x4462d6;\n                iVar3 = fcn.00452fa0(iVar1 - arg1_00);\n                iVar7 = *(*0x20 + -0x28) + 1;\n                iVar4 = *(*0x20 + 0x18);\n                uVar2 = *(*0x20 + -0x20);\n                unaff_RBX = *(*0x20 + -0x40);\n                iVar1 = *(*0x20 + -0x30);\n                unaff_RDI = *(*0x20 + -0x38);\n                iVar6 = *(*0x20 + -0x48);\n                arg1_00 = *(*0x20 + -0x50) + iVar3;\n            }\n            if (arg1_00 <= unaff_RBX) {\n                return uVar2;\n            }\n            *(*0x20 + -0x80) = 0x446368;\n            fcn.00458f60(arg1_00, unaff_RBX);\ncode_r0x00446368:\n            *(*0x20 + -0x80) = 0x446373;\n            arg1 = unaff_RDI;\n            in_RAX = fcn.00458fe0(unaff_RDI);\n        }\n        *(puVar5 + 8) = in_RAX;\n        *(puVar5 + 0x10) = unaff_RBX;\n        *(puVar5 + 0x18) = arg1;\n        *(puVar5 + 0x20) = unaff_RDI;\n        *(puVar5 + -8) = 0x44638d;\n        fcn.004568e0();\n        in_RAX = *(puVar5 + 8);\n        unaff_RBX = *(puVar5 + 0x10);\n        arg1 = *(puVar5 + 0x18);\n        unaff_RDI = *(puVar5 + 0x20);\n        *0x20 = puVar5;\n    } while( true );\n}\n",
        "token_count": 1129
    },
    "004466c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004466c0(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg2;\n    int64_t iStack56;\n    \n    if (in_RAX != 0) {\n        arg2 = -((in_RAX & 0xfff) - 0x1000);\n        iVar1 = 0;\n        while( true ) {\n            fcn.00402500(in_RAX, arg2);\n            if (iStack56 != -1) break;\n            in_RAX = in_RAX + arg2;\n            iVar1 = iVar1 + arg2;\n            arg2 = 0x1000;\n        }\n        return iStack56 + iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 167
    },
    "00446780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00446780(void)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uchar *puVar5;\n    uchar *unaff_RBP;\n    int64_t iVar6;\n    uint64_t arg1;\n    ulong arg1_00;\n    int64_t unaff_R14;\n    \ncode_r0x00446780:\n    puVar5 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar5 = *0x20 + -0x60;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + -0x18) = 0;\n        iVar1 = 0;\n        uVar2 = 0;\n        while (iVar6 = 0x3fffffffffff,  uVar2 < 0x3fffffffffff) {\n            *(*0x20 + -0x30) = iVar1;\n            if (*(in_RAX + uVar2 * 2) == 0) {\n                *(*0x20 + -0x40) = iVar1 + 4;\n                *(*0x20 + -0x68) = 0x446817;\n                iVar1 = fcn.0040b060(0);\n                uVar2 = *(*0x20 + -0x40);\n                if (uVar2 < 0) goto code_r0x00446934;\n                if (-iVar1 < uVar2) goto code_r0x00446925;\n                *(*0x20 + -0x10) = iVar1;\n                iVar6 = *(*0x20 + 8);\n                iVar4 = *(*0x20 + -0x30);\n                uVar3 = 0;\n                arg1 = 0;\n                goto code_r0x004468b7;\n            }\n            *(*0x20 + -0x20) = uVar2;\n            *(*0x20 + -0x68) = 0x4467c5;\n            iVar1 = fcn.00452fa0(8);\n            iVar1 = *(*0x20 + -0x30) + iVar1;\n            in_RAX = *(*0x20 + 8);\n            uVar2 = *(*0x20 + -0x20) + 1;\n        }\n        goto code_r0x00446939;\n    }\n    goto code_r0x00446946;\ncode_r0x004468b7:\n    arg1_00 = 0x3fffffffffff;\n    if (0x3ffffffffffe < uVar3) goto code_r0x0044691b;\n    if ((*(iVar6 + uVar3 * 2) == 0) || (iVar4 <= arg1)) {\n        if (arg1 < uVar2) {\n            *(iVar1 + arg1) = 0;\n            if (arg1 <= uVar2) {\n                return iVar1;\n            }\n            *(*0x20 + -0x68) = 0x44690b;\n            fcn.00458f60(arg1, uVar2);\n            uVar2 = arg1;\n        }\n        *(*0x20 + -0x68) = 0x446913;\n        fcn.00458f20(uVar2);\ncode_r0x00446913:\n        *(*0x20 + -0x68) = 0x44691b;\n        fcn.00458fe0(uVar2);\n        goto code_r0x0044691b;\n    }\n    if (uVar2 < arg1) goto code_r0x00446913;\n    *(*0x20 + -0x28) = uVar3;\n    *(*0x20 + -0x38) = arg1;\n    *(*0x20 + -0x68) = 0x44687d;\n    iVar1 = fcn.00452fa0((iVar4 - arg1) + 4);\n    uVar3 = *(*0x20 + -0x28) + 1;\n    arg1 = *(*0x20 + -0x38) + iVar1;\n    uVar2 = *(*0x20 + -0x40);\n    iVar6 = *(*0x20 + 8);\n    iVar4 = *(*0x20 + -0x30);\n    iVar1 = *(*0x20 + -0x10);\n    goto code_r0x004468b7;\ncode_r0x0044691b:\n    *(*0x20 + -0x68) = 0x446925;\n    fcn.00458f20(arg1_00);\ncode_r0x00446925:\n    if (iVar1 != 0) {\n        *(*0x20 + -0x68) = 0x44692f;\n        fcn.00452d00();\n    }\n    *(*0x20 + -0x68) = 0x446934;\n    fcn.00452d40();\n    iVar6 = iVar1;\ncode_r0x00446934:\n    *(*0x20 + -0x68) = 0x446939;\n    fcn.00452d00();\ncode_r0x00446939:\n    *(*0x20 + -0x68) = 0x446945;\n    in_RAX = fcn.00458f20(iVar6);\ncode_r0x00446946:\n    *(puVar5 + 8) = in_RAX;\n    *(puVar5 + -8) = 0x446950;\n    fcn.004568e0();\n    in_RAX = *(puVar5 + 8);\n    *0x20 = puVar5;\n    goto code_r0x00446780;\n}\n",
        "token_count": 1309
    },
    "004469a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nuint64_t fcn.004469a0(void)\n\n{\n    uchar auVar1 [16];\n    uint64_t uVar2;\n    int64_t unaff_R14;\n    \n    uVar2 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n    auVar1 = ZEXT816(uVar2) * ZEXT816(uVar2 ^ 0xe7037ed1a0b428db);\n    *(*(unaff_R14 + 0x30) + 0xf0) = uVar2;\n    return SUB168(auVar1, 0) ^ SUB168(auVar1 >> 0x40, 0);\n}\n",
        "token_count": 162
    },
    "004475a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004475a0(void)\n\n{\n    uint *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00447480(*in_RAX);\n    return;\n}\n",
        "token_count": 92
    },
    "00447e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447e40(void)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    uint64_t arg1;\n    uint64_t unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \ncode_r0x00447e40:\n    puVar2 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n        puVar2 = *0x20 + -0x18;\n        *(*0x20 + -8) = unaff_RBP;\n        unaff_RBP = *0x20 + -8;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -0x20) = 0x447e65;\n        iVar1 = fcn.00447da0();\n        arg1 = unaff_RBX;\n        do {\n            arg1 = arg1 - 1;\n            if (arg1 < 1) break;\n        } while (*(arg1 + iVar1) != '/');\n        do {\n            if (unaff_RBX <= arg1) goto code_r0x00447e96;\n            if (unaff_RBX <= arg1) goto code_r0x00447ead;\n            if (*(arg1 + iVar1) == '.') goto code_r0x00447e96;\n            arg1 = arg1 + 1;\n        } while( true );\n    }\n    goto code_r0x00447eb9;\ncode_r0x00447e96:\n    if (arg1 <= unaff_RBX) {\n        return;\n    }\n    *(*0x20 + -0x20) = 0x447ead;\n    fcn.00458f60(arg1, unaff_RBX);\ncode_r0x00447ead:\n    *(*0x20 + -0x20) = 0x447eb8;\n    in_RAX = fcn.00458f20(unaff_RBX);\ncode_r0x00447eb9:\n    *(puVar2 + 8) = in_RAX;\n    *(puVar2 + 0x10) = unaff_RBX;\n    *(puVar2 + -8) = 0x447ec8;\n    fcn.004568e0();\n    in_RAX = *(puVar2 + 8);\n    unaff_RBX = *(puVar2 + 0x10);\n    *0x20 = puVar2;\n    goto code_r0x00447e40;\n}\n",
        "token_count": 587
    },
    "00448180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00448180(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00448060(arg1);\n    return;\n}\n",
        "token_count": 85
    },
    "004481e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004481e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004477a0(*(in_RAX + 0x10));\n    return;\n}\n",
        "token_count": 102
    },
    "00448260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00448260(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    int32_t iVar5;\n    uint *in_RAX;\n    ulong uVar6;\n    int64_t arg1;\n    int64_t iVar7;\n    int64_t unaff_RBX;\n    uchar *puVar8;\n    uchar *unaff_RBP;\n    int64_t iVar9;\n    int64_t unaff_R14;\n    \n    do {\n        puVar8 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar8 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = unaff_RBX;\n            uVar3 = *(unaff_RBX + 0x58);\n            uVar6 = *(unaff_RBX + 0x50);\n            uVar4 = *(unaff_RBX + 0x60);\n            uVar1 = in_RAX[4];\n            if (uVar1 <= uVar3) {\n                *(*0x20 + -0x10) = unaff_RBX;\n                *(*0x20 + -0x18) = in_RAX;\n                *(*0x20 + -0x30) = uVar4;\n                *(*0x20 + -0x20) = uVar6;\n                *(*0x20 + -0x38) = uVar3;\n                *(*0x20 + -0x40) = uVar1;\n                uVar2 = *in_RAX;\n                *(*0x20 + -0x98) = 0x4482db;\n                uVar6 = fcn.00447480(uVar2);\n                *(*0x20 + -0x58) = uVar6;\n                *(*0x20 + -0x60) = 0xffffffff;\n                uVar3 = *(*0x20 + -0x40);\n                arg1 = *(*0x20 + -0x30) - uVar3;\n                iVar9 = *(*0x20 + -0x38) - uVar3;\n                iVar7 = *(*0x20 + -0x20) + (uVar3 & -arg1 >> 0x3f);\n                iVar5 = 0;\n                while( true ) {\n                    *(*0x20 + -0x28) = iVar7;\n                    *(*0x20 + -0x48) = arg1;\n                    *(*0x20 + -0x50) = iVar9;\n                    *(*0x20 + -0x5c) = iVar5;\n                    *(*0x20 + -0x98) = 0x448359;\n                    fcn.00447480();\n                    iVar9 = *(*0x20 + -0x50);\n                    arg1 = *(*0x20 + -0x48);\n                    *(*0x20 + -0x98) = 0x448385;\n                    iVar7 = fcn.00448520(arg1);\n                    if (*0x20 == 'X') break;\n                    iVar5 = *(*0x20 + -0x5c);\n                    if (*(*0x20 + -0x5c) < *(*0x20 + -0x60)) {\n                        iVar5 = *(*0x20 + -0x60);\n                    }\n                }\n                return *(*0x20 + -0x5c);\n            }\n            *(*0x20 + -0x98) = 0x4483a6;\n            in_RAX = fcn.00458fe0(uVar3);\n        }\n        *(puVar8 + 8) = in_RAX;\n        *(puVar8 + 0x10) = unaff_RBX;\n        *(puVar8 + -8) = 0x4483b6;\n        fcn.004568e0();\n        in_RAX = *(puVar8 + 8);\n        unaff_RBX = *(puVar8 + 0x10);\n        *0x20 = puVar8;\n    } while( true );\n}\n",
        "token_count": 962
    },
    "004483e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004483e0(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.004477a0(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 163
    },
    "00448480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00448480(ulong arg1)\n\n{\n    int64_t in_RAX;\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (*(in_RAX + 0x1c) < arg1 || *(in_RAX + 0x1c) == arg1) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.004477a0(*(in_RAX + arg1 * 4 + 0x2c));\n    return uVar1;\n}\n",
        "token_count": 162
    },
    "0044ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0044ab60(void)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00409860();\n    iVar3 = 0x7fffffffffffffff;\n    for (iVar2 = 0; iVar2 < *0x4f1c78; iVar2 = iVar2 + 1) {\n        iVar1 = *(*0x4f1c70 + iVar2 * 8);\n        if (iVar1 != 0) {\n            iVar4 = *(iVar1 + 0x1200);\n            if ((iVar4 == 0) || (iVar3 <= iVar4)) {\n                iVar4 = iVar3;\n            }\n            iVar3 = *(iVar1 + 0x1208);\n            if ((iVar3 == 0) || (iVar4 <= iVar3)) {\n                iVar3 = iVar4;\n            }\n        }\n    }\n    fcn.00409a80();\n    return iVar3;\n}\n",
        "token_count": 279
    },
    "0044b020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044b020(ulong param_1)\n\n{\n    if (*0x4f1620 != NULL) {\n        (***0x4f1620)();\n        return;\n    }\n    fcn.0042c240(param_1);\n    return;\n}\n",
        "token_count": 60
    },
    "0044c180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c180(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0044c1e0();\n    return;\n}\n",
        "token_count": 84
    },
    "0044c300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044c300(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uStack16 = *(*(unaff_R14 + 0x30) + 0xb8);\n    fcn.0044b220(&uStack16);\n    return;\n}\n",
        "token_count": 115
    },
    "0044cba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cba0(void)\n\n{\n    int64_t unaff_R14;\n    uchar auStack16 [8];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0044b220(auStack16);\n    return;\n}\n",
        "token_count": 94
    },
    "0044cc20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044cc20(void)\n\n{\n    int64_t unaff_R14;\n    int64_t iStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    iStack16 = fcn.0041b5e0();\n    if (iStack16 == -1) {\n        iStack16 = 0;\n        fcn.0044b220(&iStack16);\n    }\n    else {\n        fcn.0044b220(&iStack16);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "0044ef80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0044ef80(ulong arg1)\n\n{\n    ulong uVar1;\n    ulong in_RAX;\n    int64_t iVar2;\n    uint8_t uVar3;\n    char cVar4;\n    uchar unaff_BL;\n    uchar *puVar5;\n    uchar *puVar6;\n    ulong unaff_RBP;\n    int64_t unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t iVar7;\n    uint64_t uVar8;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \ncode_r0x0044ef80:\n    puVar6 = *0x20;\n    if (*(unaff_R14 + 0x10) <= *0x20 + -0x208 && *0x20 + -0x208 != *(unaff_R14 + 0x10)) {\n        puVar6 = *0x20 + -0x288;\n        *(*0x20 + -8) = unaff_RBP;\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = unaff_BL;\n        *(*0x20 + 0x20) = unaff_RDI;\n        *(*0x20 + 0x28) = unaff_RSI;\n        *(*0x20 + -0x298) = *0x20 + -8;\n        *(*0x20 + -0x290) = 0x44efef;\n        fcn.00459174();\n        uVar1 = *(*0x20 + -0x298);\n        puVar5 = *0x20 + -0x240;\n        *(*0x20 + -0x290) = 0x44f008;\n        fcn.00450d20(0x20);\n        *(*0x20 + -0x40) = in_XMM15;\n        *(*0x20 + -0x38) = in_XMM15;\n        *(*0x20 + -0x28) = in_XMM15;\n        *(*0x20 + -0x18) = in_XMM15;\n        *(*0x20 + -0x298) = uVar1;\n        *(*0x20 + -0x290) = 0x44f04f;\n        fcn.00459480();\n        unaff_RBP = *(*0x20 + -0x298);\n        cVar4 = *(*0x20 + 0x10);\n        unaff_RSI = *(*0x20 + 8);\n        iVar7 = *(*0x20 + 0x28);\n        uVar8 = *(*0x20 + 0x20);\n        iVar2 = 0;\n        uVar3 = 0;\n        do {\n            unaff_BL = SUB81(puVar5, 0);\n            *(*0x20 + -0x248) = uVar8;\n            if (((0x1f < iVar2) || (unaff_RDI = *(*0x20 + iVar2 * 8 + -0x140),  unaff_RDI == 0)) || (iVar7 <= uVar8)) {\n                if (uVar3 != 0) {\n                    *(*0x20 + -0x40) = 0;\n                    *(*0x20 + -0x290) = 0x44f190;\n                    fcn.00450ca0();\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                return uVar8;\n            }\n            if (unaff_RSI != 0) {\n                if (0xfffff < uVar8) goto code_r0x0044f1a8;\n                *(unaff_RSI + uVar8 * 8) = unaff_RDI;\n            }\n            if (cVar4 != '\\0') {\n                *(*0x20 + -0x250) = iVar2;\n                *(*0x20 + -0x261) = uVar3;\n                *(*0x20 + -600) = *0x4f15e8;\n                if (*0x4f15e8 == 0) {\n                    *(*0x20 + -0x260) = unaff_RDI;\n                    *(*0x20 + -0x290) = 0x44f115;\n                    fcn.00431980();\n                    puVar5 = 0x16;\n                    *(*0x20 + -0x290) = 0x44f126;\n                    fcn.00432280();\n                    *(*0x20 + -0x290) = 0x44f130;\n                    fcn.004320e0();\n                    *(*0x20 + -0x290) = 0x44f135;\n                    fcn.00431be0();\n                    *(*0x20 + -0x290) = 0x44f13a;\n                    fcn.00431a00();\n                    iVar2 = *(*0x20 + -600);\n                    uVar8 = *(*0x20 + -0x248);\n                }\n                else {\n                    puVar5 = iVar7 - uVar8;\n                    *(*0x20 + -0x290) = 0x44f0f4;\n                    iVar2 = fcn.00450aa0(*0x20 + -0x40);\n                    uVar8 = *(*0x20 + -0x248) + iVar2 + -1;\n                    iVar2 = *(*0x20 + -600);\n                }\n                uVar3 = iVar2 != 0 | *(*0x20 + -0x261);\n                iVar2 = *(*0x20 + -0x250);\n                cVar4 = *(*0x20 + 0x10);\n                unaff_RSI = *(*0x20 + 8);\n                iVar7 = *(*0x20 + 0x28);\n            }\n            iVar2 = iVar2 + 1;\n            uVar8 = uVar8 + 1;\n        } while( true );\n    }\n    goto code_r0x0044f1b6;\ncode_r0x0044f1a8:\n    arg1 = 0x100000;\n    *(*0x20 + -0x290) = 0x44f1b5;\n    in_RAX = fcn.00458f20(0x100000);\ncode_r0x0044f1b6:\n    *(puVar6 + 8) = in_RAX;\n    puVar6[0x10] = unaff_BL;\n    *(puVar6 + 0x18) = arg1;\n    *(puVar6 + 0x20) = unaff_RDI;\n    *(puVar6 + 0x28) = unaff_RSI;\n    *(puVar6 + -8) = 0x44f1d3;\n    fcn.004568e0();\n    in_RAX = *(puVar6 + 8);\n    unaff_BL = puVar6[0x10];\n    arg1 = *(puVar6 + 0x18);\n    unaff_RDI = *(puVar6 + 0x20);\n    unaff_RSI = *(puVar6 + 0x28);\n    *0x20 = puVar6;\n    goto code_r0x0044ef80;\n}\n",
        "token_count": 1578
    },
    "0044f2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f2a0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00447da0();\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432280();\n    fcn.00431be0();\n    fcn.00431a00();\n    uVar1 = fcn.00447480();\n    uVar2 = arg1;\n    if (uVar1 < arg1) {\n        uVar2 = arg1 - 1;\n    }\n    fcn.00448060(uVar2);\n    fcn.00431980();\n    fcn.00432280();\n    fcn.00432280();\n    fcn.00432280();\n    fcn.00432080(uVar2 & 0xffffffff);\n    fcn.00431a00();\n    uVar2 = fcn.00447480();\n    if (uVar2 < arg1) {\n        uVar3 = fcn.00447480();\n        fcn.00431980();\n        fcn.00432280();\n        fcn.004320e0(uVar3);\n        fcn.00431a00();\n    }\n    fcn.00431980();\n    fcn.00431be0();\n    fcn.00431a00();\n    return;\n}\n",
        "token_count": 363
    },
    "0044fd20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nulong fcn.0044fd20(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    ulong uStack88;\n    ulong uStack80;\n    ulong *puStack72;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uStack88 = 0;\n    uStack80 = 0x44fe20;\n    puStack72 = &uStack88;\n    fcn.004567a0();\n    return uStack88;\n}\n",
        "token_count": 137
    },
    "0044fea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044fea0(ulong arg1, ulong arg2)\n\n{\n    ulong in_RAX;\n    ulong unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    int64_t unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x58;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x18) = arg1;\n            if (unaff_RDI != 0) {\n                *(*0x20 + -0x58) = 0;\n                *(*0x20 + -0x60) = 0x44fee9;\n                fcn.0044cd80(0, arg2, arg1, unaff_RDI);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x60) = 0x44fefd;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + 0x20) = unaff_RDI;\n        *(puVar1 + 0x28) = unaff_RSI;\n        *(puVar1 + -8) = 0x44ff1c;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        unaff_RDI = *(puVar1 + 0x20);\n        unaff_RSI = *(puVar1 + 0x28);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 496
    },
    "00450680": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450680(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    uchar auStack32 [16];\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00431980();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.004320e0();\n    fcn.00432280();\n    fcn.00431a00();\n    auStack32 = CONCAT88(arg1, 0x450860);\n    fcn.004323e0(auStack32);\n    return;\n}\n",
        "token_count": 205
    },
    "00450ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450ca0(void)\n\n{\n    code *pcVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((*0x544a44 == 0) && (*(*(unaff_R14 + 0x30) + 0x90) == unaff_R14)) {\n        pcVar1 = vtable..0;\n    }\n    else {\n        pcVar1 = 0x47ca18;\n    }\n    (**pcVar1)(pcVar1, pcVar1);\n    return;\n}\n",
        "token_count": 161
    },
    "00450fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00450fa0(ulong param_1, uint64_t param_2)\n\n{\n    ulong uVar1;\n    uint64_t in_RAX;\n    ulong *puVar2;\n    int64_t iVar3;\n    int32_t unaff_EBX;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    uint64_t unaff_RSI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x50;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (unaff_EBX == 0) {\n                return 0;\n            }\n            *(*0x20 + 0x10) = unaff_EBX;\n            for (iVar3 = 0x4d9aa0; iVar3 != 0; iVar3 = *(iVar3 + 0x230)) {\n                param_2 = *(iVar3 + 0x128);\n                if ((param_2 <= in_RAX) && (unaff_RSI = *(iVar3 + 0x130),  in_RAX < unaff_RSI)) {\n                    if (param_2 + unaff_EBX <= unaff_RSI) {\n                        return param_2 + unaff_EBX;\n                    }\n                    goto code_r0x00451176;\n                }\n            }\n            *(*0x20 + -0x30) = in_RAX;\n            *(*0x20 + -0x58) = 0x45102b;\n            fcn.00409860();\n            uVar1 = *0x4f1dd0;\n            *(*0x20 + -0x58) = 0x451045;\n            puVar2 = fcn.0040dca0(*(*0x20 + 0x10));\n            *(*0x20 + -0x31) = uVar1;\n            *(*0x20 + -0x18) = *puVar2;\n            *(*0x20 + -0x58) = 0x451065;\n            fcn.00409a80();\n            if (*(*0x20 + -0x31) != '\\0') {\n                return *(*0x20 + -0x18);\n            }\n            *(*0x20 + -0x58) = 0x451073;\n            fcn.00431980();\n            *(*0x20 + -0x58) = 0x451085;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x451091;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4510a5;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4510af;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4510c5;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4510ca;\n            fcn.00431a00();\n            iVar3 = 0x4d9aa0;\n            while (iVar3 != 0) {\n                *(*0x20 + -0x10) = iVar3;\n                *(*0x20 + -0x20) = *(iVar3 + 0x128);\n                param_2 = *(iVar3 + 0x130);\n                *(*0x20 + -0x28) = param_2;\n                *(*0x20 + -0x58) = 0x451107;\n                fcn.00431980();\n                *(*0x20 + -0x58) = 0x451118;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x451125;\n                fcn.004320e0();\n                *(*0x20 + -0x58) = 0x451136;\n                fcn.00432280();\n                *(*0x20 + -0x58) = 0x451145;\n                fcn.004320e0();\n                *(*0x20 + -0x58) = 0x45114a;\n                fcn.00431be0();\n                *(*0x20 + -0x58) = 0x45114f;\n                fcn.00431a00();\n                iVar3 = *(*(*0x20 + -0x10) + 0x230);\n            }\n            *(*0x20 + -0x58) = 0x451176;\n            fcn.00430040();\ncode_r0x00451176:\n            *(*0x20 + -0x20) = param_2;\n            *(*0x20 + -0x28) = unaff_RSI;\n            *(*0x20 + -0x58) = 0x451185;\n            fcn.00431980();\n            *(*0x20 + -0x58) = 0x451196;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4511a5;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4511b6;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4511c5;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4511d6;\n            fcn.00432280();\n            *(*0x20 + -0x58) = 0x4511e5;\n            fcn.004320e0();\n            *(*0x20 + -0x58) = 0x4511ea;\n            fcn.00431be0();\n            *(*0x20 + -0x58) = 0x4511ef;\n            fcn.00431a00();\n            unaff_EBX = 0x21;\n            *(*0x20 + -0x58) = 0x451205;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar4 + 8) = in_RAX;\n        *(puVar4 + 0x10) = unaff_EBX;\n        *(puVar4 + -8) = 0x451214;\n        fcn.004568e0();\n        in_RAX = *(puVar4 + 8);\n        unaff_EBX = *(puVar4 + 0x10);\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 1501
    },
    "00453100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453100(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t unaff_RBX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            if (unaff_RBX != 0) {\n                *(*0x20 + -0x28) = 0x45312e;\n                fcn.0044b020(unaff_RBX);\n                return;\n            }\n            arg1 = 0;\n            *(*0x20 + -0x28) = 0x453145;\n            in_RAX = fcn.00458f20(0);\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + 0x10) = unaff_RBX;\n        *(puVar1 + 0x18) = arg1;\n        *(puVar1 + -8) = 0x45315a;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        unaff_RBX = *(puVar1 + 0x10);\n        arg1 = *(puVar1 + 0x18);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 384
    },
    "00453500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00453500(ulong param_1, ulong param_2)\n\n{\n    ulong arg3;\n    int64_t iVar1;\n    ulong uVar2;\n    ulong *unaff_RBX;\n    ulong *puVar3;\n    uchar *puVar4;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar3 = unaff_RBX;\n        puVar4 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -0x10 && *0x20 + -0x10 != *(unaff_R14 + 0x10)) {\n            puVar4 = *0x20 + -0x90;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x98) = 0x453533;\n            iVar1 = fcn.00430000();\n            if (iVar1 == 0) {\n                return;\n            }\n            if ((*(iVar1 + 0x10) == 0x778cdb8) && (param_2 = 0x46b2c0,  iVar1 == 0x46b2c0)) {\n                uVar2 = unaff_RBX[1];\n                arg3 = *unaff_RBX;\n                unaff_RBX = 0x479eda;\n                *(*0x20 + -0x98) = 0x453586;\n                fcn.00445e00(0x20, 0x46b2c0, arg3, uVar2);\n                *(*0x20 + -0x98) = 0x45358b;\n                iVar1 = fcn.00430040();\n            }\n            *(*0x20 + -0x18) = iVar1;\n            *(*0x20 + -0x10) = unaff_RBX;\n            *(*0x20 + -0x98) = 0x4535a5;\n            uVar2 = fcn.00450e00();\n            puVar3 = 0x479eda;\n            *(*0x20 + -0x98) = 0x4535cd;\n            fcn.00445e00(0x20, param_2, uVar2, unaff_RBX);\n            *(*0x20 + -0x98) = 0x4535d2;\n            fcn.00430040();\n        }\n        *(puVar4 + -8) = 0x4535d8;\n        fcn.004568e0();\n        unaff_RBX = puVar3;\n        *0x20 = puVar4;\n    } while( true );\n}\n",
        "token_count": 602
    },
    "00454540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nvoid fcn.00454540(void)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    int64_t unaff_RBX;\n    uint64_t uVar3;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if (0 < *0x544b10) {\n        uVar3 = *(*(unaff_R14 + 0x30) + 0xf0) + 0xa0761d6478bd642f;\n        auVar2 = ZEXT816(uVar3) * ZEXT816(uVar3 ^ 0xe7037ed1a0b428db);\n        auVar1 = SEXT816(*0x544b10);\n        *(*(unaff_R14 + 0x30) + 0xf0) = uVar3;\n        if (SUB168((ZEXT816(SUB168(auVar2 >> 0x40, 0) ^ SUB168(auVar2, 0)) & 0xffffffffffffffff) % auVar1, 0) == 0) {\n            fcn.00427f40(unaff_RBX + 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00454640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454640(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00430140();\n    return;\n}\n",
        "token_count": 80
    },
    "004546a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004546a0(void)\n\n{\n    fcn.00439c00();\n    return;\n}\n",
        "token_count": 25
    },
    "004549e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004549e0(void)\n\n{\n    fcn.00458660();\n    return;\n}\n",
        "token_count": 24
    },
    "00454b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454b40(void)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.00450fa0();\n    return;\n}\n",
        "token_count": 82
    },
    "00454b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454b80(ulong arg1)\n\n{\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.004406c0(arg1);\n    return;\n}\n",
        "token_count": 87
    },
    "00454c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454c40(void)\n\n{\n    int64_t in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            if (in_RAX == 0x20) {\n                return;\n            }\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x20) = 0x454c72;\n            fcn.00431980();\n            *(*0x20 + -0x20) = 0x454c85;\n            fcn.00432280();\n            *(*0x20 + -0x20) = 0x454c8f;\n            fcn.00431f80();\n            *(*0x20 + -0x20) = 0x454ca5;\n            fcn.00432280();\n            *(*0x20 + -0x20) = 0x454caf;\n            fcn.00431f80();\n            *(*0x20 + -0x20) = 0x454cb4;\n            fcn.00431be0();\n            *(*0x20 + -0x20) = 0x454cb9;\n            fcn.00431a00();\n            *(*0x20 + -0x20) = 0x454cca;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x454cd5;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 465
    },
    "00454ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00454ce0(void)\n\n{\n    int64_t unaff_R14;\n    ulong uStack16;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    fcn.0045a8a0();\n    return uStack16;\n}\n",
        "token_count": 93
    },
    "00455640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00455640(ulong arg1)\n\n{\n    fcn.00455740(3);\n    return;\n}\n",
        "token_count": 28
    },
    "004556a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004556a0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    fcn.00455740(9);\n    return;\n}\n",
        "token_count": 43
    },
    "00455740": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00455740(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    ulong uVar2;\n    ulong in_RAX;\n    int64_t iVar3;\n    uchar *unaff_RBX;\n    int64_t unaff_R14;\n    uchar auStack56 [32];\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0;\n    if (arg1 < 4) {\n        if (unaff_RBX != auStack56) {\n            fcn.00459880(arg1 << 3);\n        }\n        unaff_RBX = auStack56;\n        iVar3 = 4;\n    }\n    else {\n        iVar3 = arg1;\n        if (0x2a < arg1) goto code_r0x0045589f;\n    }\n    piVar1 = *(unaff_R14 + 0x30) + 0x23c;\n    *piVar1 = *piVar1 + 1;\n    *(*(unaff_R14 + 0x30) + 0x130) = unaff_R14;\n    *(unaff_R14 + 0xe8) = *(unaff_R14 + 0x30);\n    uStack16 = 0x47ccc0;\n    iStack24 = *(unaff_R14 + 0x30);\n    *(iStack24 + 0x2c0) = in_RAX;\n    *(iStack24 + 0x2c8) = arg1;\n    if (iVar3 != 0) {\n        *(iStack24 + 0x2d0) = unaff_RBX;\n        fcn.00402ea0();\n        uVar2 = *(iStack24 + 0x2d8);\n        fcn.0043b8e0();\n        return uVar2;\n    }\n    fcn.00458f20(0);\ncode_r0x0045589f:\n    fcn.0042f8a0();\n    fcn.0042ed40();\n    return 0;\n}\n",
        "token_count": 450
    },
    "00458a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458a80(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong in_RAX;\n    ulong *unaff_RDI;\n    int64_t unaff_R14;\n    \n    iVar1 = *(*(unaff_R14 + 0x30) + 0xa0);\n    puVar2 = *(iVar1 + 0x1260);\n    *(iVar1 + 0x1260) = puVar2 + 2;\n    puVar3 = *(iVar1 + 0x1268);\n    *puVar2 = in_RAX;\n    puVar2[1] = *unaff_RDI;\n    if (puVar2 + 2 == puVar3) {\n        fcn.0045ae60();\n    }\n    *unaff_RDI = in_RAX;\n    return;\n}\n",
        "token_count": 208
    },
    "00459480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459480(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    uVar1 = unaff_RSI[0x15];\n    uVar2 = unaff_RSI[0x16];\n    uVar3 = unaff_RSI[0x17];\n    unaff_RDI[0x14] = unaff_RSI[0x14];\n    unaff_RDI[0x15] = uVar1;\n    unaff_RDI[0x16] = uVar2;\n    unaff_RDI[0x17] = uVar3;\n    uVar1 = unaff_RSI[0x19];\n    uVar2 = unaff_RSI[0x1a];\n    uVar3 = unaff_RSI[0x1b];\n    unaff_RDI[0x18] = unaff_RSI[0x18];\n    unaff_RDI[0x19] = uVar1;\n    unaff_RDI[0x1a] = uVar2;\n    unaff_RDI[0x1b] = uVar3;\n    uVar1 = unaff_RSI[0x1d];\n    uVar2 = unaff_RSI[0x1e];\n    uVar3 = unaff_RSI[0x1f];\n    unaff_RDI[0x1c] = unaff_RSI[0x1c];\n    unaff_RDI[0x1d] = uVar1;\n    unaff_RDI[0x1e] = uVar2;\n    unaff_RDI[0x1f] = uVar3;\n    uVar1 = unaff_RSI[0x21];\n    uVar2 = unaff_RSI[0x22];\n    uVar3 = unaff_RSI[0x23];\n    unaff_RDI[0x20] = unaff_RSI[0x20];\n    unaff_RDI[0x21] = uVar1;\n    unaff_RDI[0x22] = uVar2;\n    unaff_RDI[0x23] = uVar3;\n    uVar1 = unaff_RSI[0x25];\n    uVar2 = unaff_RSI[0x26];\n    uVar3 = unaff_RSI[0x27];\n    unaff_RDI[0x24] = unaff_RSI[0x24];\n    unaff_RDI[0x25] = uVar1;\n    unaff_RDI[0x26] = uVar2;\n    unaff_RDI[0x27] = uVar3;\n    uVar1 = unaff_RSI[0x29];\n    uVar2 = unaff_RSI[0x2a];\n    uVar3 = unaff_RSI[0x2b];\n    unaff_RDI[0x28] = unaff_RSI[0x28];\n    unaff_RDI[0x29] = uVar1;\n    unaff_RDI[0x2a] = uVar2;\n    unaff_RDI[0x2b] = uVar3;\n    uVar1 = unaff_RSI[0x2d];\n    uVar2 = unaff_RSI[0x2e];\n    uVar3 = unaff_RSI[0x2f];\n    unaff_RDI[0x2c] = unaff_RSI[0x2c];\n    unaff_RDI[0x2d] = uVar1;\n    unaff_RDI[0x2e] = uVar2;\n    unaff_RDI[0x2f] = uVar3;\n    uVar1 = unaff_RSI[0x31];\n    uVar2 = unaff_RSI[0x32];\n    uVar3 = unaff_RSI[0x33];\n    unaff_RDI[0x30] = unaff_RSI[0x30];\n    unaff_RDI[0x31] = uVar1;\n    unaff_RDI[0x32] = uVar2;\n    unaff_RDI[0x33] = uVar3;\n    uVar1 = unaff_RSI[0x35];\n    uVar2 = unaff_RSI[0x36];\n    uVar3 = unaff_RSI[0x37];\n    unaff_RDI[0x34] = unaff_RSI[0x34];\n    unaff_RDI[0x35] = uVar1;\n    unaff_RDI[0x36] = uVar2;\n    unaff_RDI[0x37] = uVar3;\n    uVar1 = unaff_RSI[0x39];\n    uVar2 = unaff_RSI[0x3a];\n    uVar3 = unaff_RSI[0x3b];\n    unaff_RDI[0x38] = unaff_RSI[0x38];\n    unaff_RDI[0x39] = uVar1;\n    unaff_RDI[0x3a] = uVar2;\n    unaff_RDI[0x3b] = uVar3;\n    uVar1 = unaff_RSI[0x3d];\n    uVar2 = unaff_RSI[0x3e];\n    uVar3 = unaff_RSI[0x3f];\n    unaff_RDI[0x3c] = unaff_RSI[0x3c];\n    unaff_RDI[0x3d] = uVar1;\n    unaff_RDI[0x3e] = uVar2;\n    unaff_RDI[0x3f] = uVar3;\n    return;\n}\n",
        "token_count": 1741
    },
    "0045951a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045951a(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *unaff_RSI;\n    uint *unaff_RDI;\n    \n    uVar1 = unaff_RSI[1];\n    uVar2 = unaff_RSI[2];\n    uVar3 = unaff_RSI[3];\n    *unaff_RDI = *unaff_RSI;\n    unaff_RDI[1] = uVar1;\n    unaff_RDI[2] = uVar2;\n    unaff_RDI[3] = uVar3;\n    uVar1 = unaff_RSI[5];\n    uVar2 = unaff_RSI[6];\n    uVar3 = unaff_RSI[7];\n    unaff_RDI[4] = unaff_RSI[4];\n    unaff_RDI[5] = uVar1;\n    unaff_RDI[6] = uVar2;\n    unaff_RDI[7] = uVar3;\n    uVar1 = unaff_RSI[9];\n    uVar2 = unaff_RSI[10];\n    uVar3 = unaff_RSI[0xb];\n    unaff_RDI[8] = unaff_RSI[8];\n    unaff_RDI[9] = uVar1;\n    unaff_RDI[10] = uVar2;\n    unaff_RDI[0xb] = uVar3;\n    uVar1 = unaff_RSI[0xd];\n    uVar2 = unaff_RSI[0xe];\n    uVar3 = unaff_RSI[0xf];\n    unaff_RDI[0xc] = unaff_RSI[0xc];\n    unaff_RDI[0xd] = uVar1;\n    unaff_RDI[0xe] = uVar2;\n    unaff_RDI[0xf] = uVar3;\n    uVar1 = unaff_RSI[0x11];\n    uVar2 = unaff_RSI[0x12];\n    uVar3 = unaff_RSI[0x13];\n    unaff_RDI[0x10] = unaff_RSI[0x10];\n    unaff_RDI[0x11] = uVar1;\n    unaff_RDI[0x12] = uVar2;\n    unaff_RDI[0x13] = uVar3;\n    return;\n}\n",
        "token_count": 529
    },
    "0045a7e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045a7e0(void)\n\n{\n    int64_t in_GS_OFFSET;\n    int32_t iStackX8;\n    uchar auStack72 [24];\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = auStack72;\n    iStack24 = iStackX8;\n    uStack32 = *(*(**(in_GS_OFFSET + *0x544bc0) + 0x30) + 0x328);\n    uStack48 = 0;\n    uStack40 = 0;\n    (*_sym.imp.kernel32.dll_SetWaitableTimer)(uStack32, &iStack24, 0, 0);\n    (**0x4f1570)(uStack32, 0, 0);\n    return;\n}\n",
        "token_count": 192
    },
    "0045ae60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045ae60(void)\n\n{\n    fcn.00429d00();\n    return;\n}\n",
        "token_count": 25
    },
    "0045b040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b040(void)\n\n{\n    fcn.0044b020(0x17);\n    return;\n}\n",
        "token_count": 29
    },
    "0045b060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b060(void)\n\n{\n    fcn.0044b020(0x1c);\n    return;\n}\n",
        "token_count": 30
    },
    "0045b100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b100(void)\n\n{\n    fcn.0043ab40();\n    return;\n}\n",
        "token_count": 25
    },
    "0045b140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045b140(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    fcn.0043f560(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 59
    },
    "0045b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b360(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455220();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045b3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b3c0(void)\n\n{\n    ulong uStack24;\n    \n    fcn.004553a0();\n    return uStack24;\n}\n",
        "token_count": 37
    },
    "0045b400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045b400(void)\n\n{\n    ulong uStack24;\n    \n    fcn.00455500();\n    return uStack24;\n}\n",
        "token_count": 34
    },
    "0045e720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e720(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_RAX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    LOCK();\n    iVar1 = *in_RAX;\n    *in_RAX = *in_RAX + -1;\n    if (iVar1 != 1) {\n        fcn.0045e780();\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "0045e780": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045e780(void)\n\n{\n    uint32_t *in_RAX;\n    uint32_t unaff_EBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    if ((unaff_EBX + 1 & 1) == 0) {\n        fcn.00454640();\n    }\n    if ((unaff_EBX >> 2 & 1) == 0) {\n        while ((unaff_EBX >> 3 != 0 && ((unaff_EBX & 7) == 0))) {\n            LOCK();\n            if (unaff_EBX == *in_RAX) {\n                *in_RAX = unaff_EBX - 8 | 2;\n                fcn.00454b80(1);\n                return;\n            }\n            unaff_EBX = *in_RAX;\n        }\n        return;\n    }\n    fcn.00454b80(1);\n    return;\n}\n",
        "token_count": 246
    },
    "0045eaa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045eaa0(uint64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    ulong in_RAX;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t unaff_RBX;\n    uchar *puVar7;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar7 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar7 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x28) = 0x45ead1;\n            iVar5 = fcn.00441f00(unaff_RBX);\n            arg1 = *(*0x20 + 0x10);\n            iVar4 = *(*0x20 + 8);\n            unaff_RBX = 0;\n            for (uVar6 = 0; uVar6 < arg1; uVar6 = uVar6 + 1) {\n                if (arg1 <= uVar6) goto code_r0x0045ebd1;\n                uVar2 = *(iVar4 + uVar6 * 2);\n                if ((uVar2 < 0xd800) || (0xdfff < uVar2)) {\n                    if (arg1 <= unaff_RBX) goto code_r0x0045ebc6;\n                    *(iVar5 + unaff_RBX * 4) = uVar2;\n                }\n                else {\n                    if ((uVar2 < 0xdc00) && (uVar1 = uVar6 + 1,  uVar1 < arg1)) {\n                        if (arg1 <= uVar1) goto code_r0x0045ebbb;\n                        uVar3 = *(iVar4 + 2 + uVar6 * 2);\n                        if ((0xdbff < uVar3) && (uVar3 < 0xe000)) {\n                            if (unaff_RBX < arg1) {\n                                *(iVar5 + unaff_RBX * 4) = ((uVar2 - 0xd800) * 0x400 | uVar3 - 0xdc00) + 0x10000;\n                                uVar6 = uVar1;\n                                goto code_r0x0045eae2;\n                            }\n                            goto code_r0x0045ebb0;\n                        }\n                    }\n                    if (arg1 <= unaff_RBX) goto code_r0x0045eba5;\n                    *(iVar5 + unaff_RBX * 4) = 0xfffd;\n                }\ncode_r0x0045eae2:\n                unaff_RBX = unaff_RBX + 1;\n            }\n            if (unaff_RBX <= arg1) {\n                return;\n            }\n            *(*0x20 + -0x28) = 0x45eba5;\n            fcn.00458fa0(unaff_RBX, arg1);\ncode_r0x0045eba5:\n            *(*0x20 + -0x28) = 0x45ebb0;\n            fcn.00458f20(arg1);\ncode_r0x0045ebb0:\n            *(*0x20 + -0x28) = 0x45ebbb;\n            fcn.00458f20(arg1);\ncode_r0x0045ebbb:\n            *(*0x20 + -0x28) = 0x45ebc6;\n            fcn.00458f20(arg1);\ncode_r0x0045ebc6:\n            *(*0x20 + -0x28) = 0x45ebd1;\n            fcn.00458f20(arg1);\ncode_r0x0045ebd1:\n            *(*0x20 + -0x28) = 0x45ebdc;\n            in_RAX = fcn.00458f20(arg1);\n        }\n        *(puVar7 + 8) = in_RAX;\n        *(puVar7 + 0x10) = unaff_RBX;\n        *(puVar7 + 0x18) = arg1;\n        *(puVar7 + -8) = 0x45ebf1;\n        fcn.004568e0();\n        in_RAX = *(puVar7 + 8);\n        unaff_RBX = *(puVar7 + 0x10);\n        arg1 = *(puVar7 + 0x18);\n        *0x20 = puVar7;\n    } while( true );\n}\n",
        "token_count": 1081
    },
    "0045fbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0045fbc0(ulong arg1)\n\n{\n    ulong uVar1;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    uVar1 = fcn.00455740(arg1);\n    fcn.00409360();\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "00460040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460040(ulong arg1)\n\n{\n    ulong in_RAX;\n    int64_t iVar1;\n    ulong unaff_RBX;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    ulong unaff_RDI;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RDI;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x30) = 0x46006e;\n            iVar1 = fcn.0045fe20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x30) = 0x460090;\n                fcn.0045fbc0(*(*0x20 + 0x18));\n                return;\n            }\n            *(*0x20 + -0x30) = 0x4600a5;\n            in_RAX = fcn.0042f8a0();\n        }\n        *(puVar2 + 8) = in_RAX;\n        *(puVar2 + 0x10) = unaff_RBX;\n        *(puVar2 + 0x18) = arg1;\n        *(puVar2 + 0x20) = unaff_RDI;\n        *(puVar2 + -8) = 0x4600bf;\n        fcn.004568e0();\n        in_RAX = *(puVar2 + 8);\n        unaff_RBX = *(puVar2 + 0x10);\n        arg1 = *(puVar2 + 0x18);\n        unaff_RDI = *(puVar2 + 0x20);\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 508
    },
    "00460460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00460460(ulong arg1)\n\n{\n    int64_t in_RAX;\n    int64_t iVar1;\n    int64_t arg1_00;\n    int64_t unaff_RBX;\n    int64_t unaff_R14;\n    \n    while (*0x20 < *(unaff_R14 + 0x10) || *0x20 == *(unaff_R14 + 0x10)) {\n        fcn.004568e0();\n    }\n    for (iVar1 = 0; (arg1_00 = unaff_RBX,  iVar1 < unaff_RBX && (arg1_00 = iVar1,  *(in_RAX + iVar1 * 2) != 0));\n        iVar1 = iVar1 + 1) {\n    }\n    fcn.0045eaa0(arg1);\n    fcn.004461e0(arg1_00);\n    return;\n}\n",
        "token_count": 200
    },
    "004606c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004606c0(ulong arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    uint in_EAX;\n    int64_t iVar1;\n    ulong uVar2;\n    uint64_t arg1_00;\n    ulong unaff_RBX;\n    uchar *puVar3;\n    uchar *unaff_RBP;\n    ulong unaff_RSI;\n    uint unaff_EDI;\n    ulong in_R10;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        puVar3 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 + -8 && *0x20 + -8 != *(unaff_R14 + 0x10)) {\n            puVar3 = *0x20 + -0x88;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 0x20) = unaff_RSI;\n            *(*0x20 + 8) = in_EAX;\n            *(*0x20 + 0x18) = arg1;\n            *(*0x20 + 0x1c) = unaff_EDI;\n            *(*0x20 + 0x28) = arg3;\n            *(*0x20 + -0x28) = unaff_RBX;\n            if (arg3 == 0) {\n                unaff_RSI = 0;\n            }\n            *(*0x20 + -0x10) = unaff_RSI;\n            *(*0x20 + -0x18) = in_R10;\n            *(*0x20 + -0x20) = *0x4f1830;\n            *(*0x20 + -0x90) = 0x460733;\n            iVar1 = fcn.0045fe20();\n            if (iVar1 == 0) {\n                *(*0x20 + -0x88) = in_XMM15;\n                arg1_00 = *(*0x20 + 8);\n                *(*0x20 + -0x90) = 0x46078b;\n                uVar2 = fcn.004556a0(arg1_00, *(*0x20 + 0x1c), *(*0x20 + 0x1c), *(*0x20 + -0x10));\n                if (((uVar2 == 0) && (arg1_00 != 0)) && (arg1_00 != 0x3e5)) {\n                    *(*0x20 + -0x30) = uVar2;\n                    *(*0x20 + -0x90) = 0x4607ca;\n                    fcn.00409360();\n                    uVar2 = *(*0x20 + -0x30);\n                }\n                return uVar2;\n            }\n            *(*0x20 + -0x90) = 0x460805;\n            in_EAX = fcn.0042f8a0();\n        }\n        *(puVar3 + 8) = in_EAX;\n        *(puVar3 + 0x10) = unaff_RBX;\n        *(puVar3 + 0x18) = arg1;\n        *(puVar3 + 0x1c) = unaff_EDI;\n        *(puVar3 + 0x20) = unaff_RSI;\n        *(puVar3 + 0x28) = arg3;\n        *(puVar3 + 0x30) = arg4;\n        *(puVar3 + 0x38) = in_R10;\n        *(puVar3 + -8) = 0x460830;\n        fcn.004568e0();\n        in_EAX = *(puVar3 + 8);\n        unaff_RBX = *(puVar3 + 0x10);\n        arg1._0_4_ = *(puVar3 + 0x18);\n        unaff_EDI = *(puVar3 + 0x1c);\n        unaff_RSI = *(puVar3 + 0x20);\n        arg3 = *(puVar3 + 0x28);\n        arg4 = *(puVar3 + 0x30);\n        in_R10 = *(puVar3 + 0x38);\n        *0x20 = puVar3;\n    } while( true );\n}\n",
        "token_count": 959
    },
    "00416a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t fcn.00416a20(void)\n\n{\n    uint64_t uVar1;\n    uint64_t *in_RAX;\n    uint64_t unaff_RBX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    \n    while( true ) {\n        uVar1 = *in_RAX;\n        if (uVar1 >> 0x3d == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 & 0x1fffffffffffffff | unaff_RBX & 0xe000000000000000;\n        iVar2 = unaff_RBX - uVar3;\n        if (unaff_RBX < uVar3) {\n            iVar2 = 0;\n        }\n        if (iVar2 == 0) break;\n        LOCK();\n        uVar3 = *in_RAX;\n        *in_RAX = *in_RAX ^ (uVar1 == uVar3) * (*in_RAX ^ (uVar1 & 0xe000000000000000 | unaff_RBX & 0x1fffffffffffffff))\n        ;\n        if (uVar1 == uVar3) {\n            return uVar1 >> 0x3d;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "0041b680": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0041b680(void)\n\n{\n    uint64_t uVar1;\n    int64_t in_RAX;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    \n    do {\n        uVar1 = *(in_RAX + 0x120);\n        iVar2 = *(in_RAX + 0x110) - *(in_RAX + 0x118);\n    } while (uVar1 < iVar2 + *(in_RAX + 0x108));\n    uVar3 = *(in_RAX + 8);\n    iVar4 = 0;\n    if (uVar3 < uVar1) {\n        iVar4 = uVar1 - uVar3;\n    }\n    uVar1 = ((uVar1 - *(in_RAX + 0x108)) - iVar2) + iVar4;\n    if (uVar1 < uVar3) {\n        uVar3 = uVar3 - uVar1;\n        if ((uVar3 < 0x100000) || (uVar3 = uVar3 - 0x100000,  uVar3 < 0x100000)) {\n            uVar3 = 0x100000;\n        }\n        if (uVar3 < *(in_RAX + 0x80)) {\n            uVar3 = *(in_RAX + 0x80);\n        }\n        return uVar3;\n    }\n    return *(in_RAX + 0x80);\n}\n",
        "token_count": 326
    },
    "0041c240": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0041c240(void)\n\n{\n    ulong in_RAX;\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x28;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + -0x30) = 0x41c265;\n            fcn.00409860();\n            if (*(*(*0x20 + 8) + 8) == unaff_R14) {\n                *(*(*0x20 + 8) + 0x10) = 1;\n                *(*0x20 + -0x30) = 0x41c293;\n                fcn.00432b60(0xd);\n                return;\n            }\n            *(*0x20 + -0x30) = 0x41c2ae;\n            in_RAX = fcn.00430040();\n        }\n        *(puVar1 + 8) = in_RAX;\n        *(puVar1 + -8) = 0x41c2b9;\n        fcn.004568e0();\n        in_RAX = *(puVar1 + 8);\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 362
    },
    "00401f00": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401f00(ulong noname_0, ulong arg2)\n\n{\n    int32_t iStackX8;\n    \n    if (iStackX8 == 0) {\n        cpuid_basic_info(0);\n    }\n    else if (iStackX8 == 1) {\n        cpuid_Version_info(1);\n    }\n    else if (iStackX8 == 2) {\n        cpuid_cache_tlb_info(2);\n    }\n    else if (iStackX8 == 3) {\n        cpuid_serial_info(3);\n    }\n    else if (iStackX8 == 4) {\n        cpuid_Deterministic_Cache_Parameters_info(4);\n    }\n    else if (iStackX8 == 5) {\n        cpuid_MONITOR_MWAIT_Features_info(5);\n    }\n    else if (iStackX8 == 6) {\n        cpuid_Thermal_Power_Management_info(6);\n    }\n    else if (iStackX8 == 7) {\n        cpuid_Extended_Feature_Enumeration_info(7);\n    }\n    else if (iStackX8 == 9) {\n        cpuid_Direct_Cache_Access_info(9);\n    }\n    else if (iStackX8 == 10) {\n        cpuid_Architectural_Performance_Monitoring_info(10);\n    }\n    else if (iStackX8 == 0xb) {\n        cpuid_Extended_Topology_info(0xb);\n    }\n    else if (iStackX8 == 0xd) {\n        cpuid_Processor_Extended_States_info(0xd);\n    }\n    else if (iStackX8 == 0xf) {\n        cpuid_Quality_of_Service_info(0xf);\n    }\n    else if (iStackX8 == -0x7ffffffe) {\n        cpuid_brand_part1_info(0x80000002);\n    }\n    else if (iStackX8 == -0x7ffffffd) {\n        cpuid_brand_part2_info(0x80000003);\n    }\n    else if (iStackX8 == -0x7ffffffc) {\n        cpuid_brand_part3_info(0x80000004);\n    }\n    else {\n        cpuid(iStackX8);\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "0042e700": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e700(void)\n\n{\n    uchar *puVar1;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar1 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar1 = *0x20 + -0x20;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x28) = 0x42e72a;\n            fcn.0042df80(0x15);\n            *(*0x20 + -0x28) = 0x42e749;\n            fcn.0042f8a0();\n        }\n        *(puVar1 + -8) = 0x42e74f;\n        fcn.004568e0();\n        *0x20 = puVar1;\n    } while( true );\n}\n",
        "token_count": 239
    },
    "0042e760": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042e760(void)\n\n{\n    int64_t iVar1;\n    uchar *puVar2;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        puVar2 = *0x20;\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            puVar2 = *0x20 + -0x18;\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42e785;\n            fcn.0042e040();\n            iVar1 = *0x4ef080;\n            if (*0x4ef080 != 0) {\n                iVar1 = *(*0x4ef080 + 8);\n            }\n            *(*0x20 + -0x20) = 0x42e7a5;\n            fcn.0042f8a0(iVar1);\n        }\n        *(puVar2 + -8) = 0x42e7ab;\n        fcn.004568e0();\n        *0x20 = puVar2;\n    } while( true );\n}\n",
        "token_count": 286
    },
    "0042ecc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042ecc0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42ece5;\n            fcn.00430040();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42eceb;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 176
    },
    "0042ed00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042ed00(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x42ed25;\n            fcn.00430040();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x42ed2b;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "004333a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004333a0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x4333c5;\n            fcn.00430040();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x4333cb;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "004333e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004333e0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x433405;\n            fcn.00430040();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x43340b;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 175
    },
    "004334e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004334e0(ulong param_1, ulong param_2, ulong param_3, ulong param_4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t arg1;\n    uint64_t uVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int64_t unaff_R14;\n    uchar auStack24 [16];\n    \n    puVar7 = &stack0xfffffffffffffff8;\n    iVar3 = fcn.00430040();\n    puVar5 = auStack24;\n    do {\n        puVar6 = puVar5;\n        if (*(unaff_R14 + 0x10) <= puVar5 && puVar5 != *(unaff_R14 + 0x10)) {\n            puVar6 = puVar5 + -0x50;\n            *(puVar5 + -8) = puVar7;\n            puVar7 = puVar5 + -8;\n            if (*(iVar3 + 0x90) != 0) {\n                *(puVar5 + 8) = iVar3;\n                *(puVar5 + -0x58) = 0x43353b;\n                fcn.00409860();\n                uVar4 = *0x4f1c58 + 1;\n                iVar3 = *0x4f1c50;\n                arg1 = *0x4f1c60;\n                iVar2 = *0x4f1c50;\n                if (*0x4f1c60 < uVar4) {\n                    *(puVar5 + -0x58) = 0x433569;\n                    iVar3 = fcn.00441fe0(*0x4f1c60);\n                    arg1 = *0x4f1c60;\n                    iVar2 = iVar3;\n                    if (*0x544c10 != 0) {\n                        *(puVar5 + -0x58) = 0x43358e;\n                        iVar3 = fcn.00458a80(*0x4f1c60, param_2, param_3, param_4);\n                        iVar2 = *0x4f1c50;\n                    }\n                }\n                *0x4f1c50 = iVar2;\n                *0x4f1c58 = uVar4;\n                if (*0x544c10 == 0) {\n                    param_2 = *(puVar5 + 8);\n                    *(iVar3 + -8 + uVar4 * 8) = param_2;\n                }\n                else {\n                    param_2 = *(puVar5 + 8);\n                    *(puVar5 + -0x58) = 0x4335bc;\n                    fcn.00458ba0(arg1, param_2, param_3, param_4);\n                }\n                if (*0x4f1c58 != 0) {\n                    iVar3 = *0x4f15b8;\n                    if ((*0x4f15b8 != *0x4f1c50) && (iVar3 = *0x4f1c50,  *0x544c10 != '\\0')) {\n                        *(puVar5 + -0x10) = *0x4f1c50;\n                        *(puVar5 + -0x58) = 0x4335f3;\n                        fcn.00402e00();\n                        iVar3 = *(puVar5 + -0x10);\n                    }\n                    *0x4f15b8 = iVar3;\n                    uVar1 = *0x544a78;\n                    *0x544a78 = *0x4f1c58;\n                    *(puVar5 + -0x58) = 0x433625;\n                    fcn.00409a80(uVar1);\n                    return;\n                }\n                *(puVar5 + -0x58) = 0x433639;\n                fcn.00458f20(0);\n            }\n            *(puVar5 + -0x58) = 0x43364a;\n            iVar3 = fcn.00430040();\n        }\n        *(puVar6 + 8) = iVar3;\n        *(puVar6 + -8) = 0x433655;\n        fcn.004568e0();\n        iVar3 = *(puVar6 + 8);\n        puVar5 = puVar6;\n    } while( true );\n}\n",
        "token_count": 971
    },
    "0043ec00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t fcn.0043ec00(void)\n\n{\n    uint64_t *puVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t in_RAX;\n    \n    uVar3 = *(in_RAX + 0x998);\n    if (uVar3 != 0) {\n        LOCK();\n        puVar1 = in_RAX + 0x998;\n        uVar4 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == uVar4) * *puVar1;\n        if (uVar3 == uVar4) {\n            return uVar3;\n        }\n    }\n    do {\n        uVar2 = *(in_RAX + 400);\n        if (uVar2 == *(in_RAX + 0x194)) {\n            return 0;\n        }\n        uVar3 = *(in_RAX + 0x198 + (uVar2 & 0xff) * 8);\n        LOCK();\n    } while (uVar2 != *(in_RAX + 400));\n    *(in_RAX + 400) = uVar2 + 1;\n    return uVar3;\n}\n",
        "token_count": 269
    },
    "0044afe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044afe0(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x44b005;\n            fcn.00430040();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x44b00b;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 177
    },
    "00452d00": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00452d00(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x452d27;\n            fcn.0042f8a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x452d2d;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 180
    },
    "00452d40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00452d40(void)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + -0x20) = 0x452d67;\n            fcn.0042f8a0();\n            *0x20 = *0x20 + -0x18;\n        }\n        *(*0x20 + -8) = 0x452d6d;\n        fcn.004568e0();\n    } while( true );\n}\n",
        "token_count": 180
    },
    "00458660": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458660(void)\n\n{\n    int32_t iStackX8;\n    \n    do {\n        iStackX8 = iStackX8 + -1;\n    } while (iStackX8 != 0);\n    return;\n}\n",
        "token_count": 54
    },
    "00458f20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458f20(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e0f4;\n            fcn.0042df80(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x42e130;\n            arg1 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e13f;\n            in_RAX = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e14f;\n        fcn.004568e0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "00458f40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458f40(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e194;\n            fcn.0042df80(0x12);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 0;\n            *(*0x20 + -0x40) = 0x42e1d0;\n            arg1 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e1df;\n            in_RAX = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e1ef;\n        fcn.004568e0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 456
    },
    "00458f60": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458f60(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e234;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 1;\n            *(*0x20 + -0x40) = 0x42e270;\n            arg2 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e27f;\n            arg1 = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e28f;\n        fcn.004568e0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "00458fa0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458fa0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e374;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x42e3b0;\n            arg2 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e3bf;\n            arg1 = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e3cf;\n        fcn.004568e0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 450
    },
    "00458fc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458fc0(ulong arg1, ulong arg2)\n\n{\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg1;\n            *(*0x20 + 0x10) = arg2;\n            *(*0x20 + -0x40) = 0x42e414;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 2;\n            *(*0x20 + -0x40) = 0x42e450;\n            arg2 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e45f;\n            arg1 = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg1;\n        *(*0x20 + 0x10) = arg2;\n        *(*0x20 + -8) = 0x42e46f;\n        fcn.004568e0();\n        arg1 = *(*0x20 + 8);\n        arg2 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 448
    },
    "00458fe0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00458fe0(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e4b4;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x42e4f0;\n            arg1 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e4ff;\n            in_RAX = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e50f;\n        fcn.004568e0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 458
    },
    "00459000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459000(ulong arg1)\n\n{\n    ulong in_RAX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = in_RAX;\n            *(*0x20 + 0x10) = arg1;\n            *(*0x20 + -0x40) = 0x42e554;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 3;\n            *(*0x20 + -0x40) = 0x42e590;\n            arg1 = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e59f;\n            in_RAX = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = in_RAX;\n        *(*0x20 + 0x10) = arg1;\n        *(*0x20 + -8) = 0x42e5af;\n        fcn.004568e0();\n        in_RAX = *(*0x20 + 8);\n        arg1 = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 453
    },
    "00459020": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459020(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42e5f4;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 1;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x42e630;\n            unaff_RBX = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e63f;\n            arg2 = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42e64f;\n        fcn.004568e0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 466
    },
    "00459040": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00459040(ulong noname_0, ulong arg2)\n\n{\n    ulong unaff_RBX;\n    uchar *unaff_RBP;\n    int64_t unaff_R14;\n    uchar in_XMM15 [16];\n    \n    do {\n        if (*(unaff_R14 + 0x10) <= *0x20 && *0x20 != *(unaff_R14 + 0x10)) {\n            *(*0x20 + -8) = unaff_RBP;\n            unaff_RBP = *0x20 + -8;\n            *(*0x20 + 8) = arg2;\n            *(*0x20 + 0x10) = unaff_RBX;\n            *(*0x20 + -0x40) = 0x42e694;\n            fcn.0042df80(0x19);\n            *(*0x20 + -0x20) = in_XMM15;\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x20) = *(*0x20 + 8);\n            *(*0x20 + -0x10) = 0;\n            *(*0x20 + -0x18) = *(*0x20 + 0x10);\n            *(*0x20 + -0xf) = 4;\n            *(*0x20 + -0x40) = 0x42e6d0;\n            unaff_RBX = fcn.004092e0();\n            *(*0x20 + -0x40) = 0x42e6df;\n            arg2 = fcn.0042f8a0();\n            *0x20 = *0x20 + -0x38;\n        }\n        *(*0x20 + 8) = arg2;\n        *(*0x20 + 0x10) = unaff_RBX;\n        *(*0x20 + -8) = 0x42e6ef;\n        fcn.004568e0();\n        arg2 = *(*0x20 + 8);\n        unaff_RBX = *(*0x20 + 0x10);\n    } while( true );\n}\n",
        "token_count": 466
    },
    "0045b2e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint64_t fcn.0045b2e0(uint64_t param_1)\n\n{\n    uint64_t *puVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t **ppiVar6;\n    ulong *puVar7;\n    uchar uVar8;\n    char cVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    int64_t *arg1;\n    uint64_t arg1_00;\n    uint64_t arg2;\n    ulong uVar12;\n    uchar *puVar13;\n    uchar *puVar14;\n    uchar *puVar15;\n    uint64_t uVar16;\n    int64_t *piVar17;\n    uint64_t arg3;\n    uint64_t arg4;\n    int64_t in_GS_OFFSET;\n    bool bVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uchar auStack24 [16];\n    \n    uVar19 = 0;\n    uVar20 = 0;\n    uVar21 = 0;\n    uVar22 = 0;\n    iVar4 = **(in_GS_OFFSET + *0x544bc0);\n    puVar15 = &stack0xfffffffffffffff8;\n    uVar12 = 0x32;\n    iVar5 = fcn.00430040();\n    puVar13 = auStack24;\n    do {\n        uVar8 = param_1;\n        puVar1 = iVar4 + 0x10;\n        puVar14 = puVar13;\n        if (*puVar1 <= puVar13 + -0x78 && puVar13 + -0x78 != *puVar1) {\n            puVar14 = puVar13 + -0xf8;\n            *(puVar13 + -8) = puVar15;\n            puVar15 = puVar13 + -8;\n            *(puVar13 + 8) = iVar5;\n            *(puVar13 + 0x10) = uVar12;\n            if ((iVar5 != 0) && ((*(iVar5 + 0x17) & 0x1f) == 0x13)) {\n                *(puVar13 + -0x98) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x88) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x78) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                *(puVar13 + -0x68) = CONCAT412(uVar22, CONCAT48(uVar21, CONCAT44(uVar20, uVar19)));\n                if ((*(iVar5 + 0x14) & 1) == 0) {\n                    iVar11 = 0x38;\n                }\n                else {\n                    iVar11 = 0x48;\n                }\n                arg1_00 = *(iVar5 + 0x30);\n                if (arg1_00 < 0x100001) {\n                    *(puVar13 + -0xb0) = iVar5;\n                    *(puVar13 + -0xc0) = iVar11 + iVar5;\n                    *(puVar13 + -0xb8) = uVar12;\n                    *(puVar13 + -200) = arg1_00;\n                    iVar11 = 0;\n                    while (iVar11 < arg1_00) {\n                        *(puVar13 + -0xd0) = iVar11;\n                        *(puVar13 + -0x100) = 0x454e25;\n                        fcn.004486c0();\n                        iVar5 = *(puVar13 + -0xb0);\n                        uVar12 = *(puVar13 + -0xb8);\n                        arg1_00 = *(puVar13 + -200);\n                        iVar11 = *(puVar13 + -0xd0) + 1;\n                    }\n                    arg2 = *(puVar13 + -0x78) + 7U & 0xfffffffffffffff8;\n                    *(puVar13 + -0x78) = arg2;\n                    *(puVar13 + -0x60) = arg2;\n                    uVar2 = *(iVar5 + 0x14);\n                    arg1_00 = uVar2;\n                    uVar3 = *(iVar5 + 0x30);\n                    piVar17 = uVar3;\n                    arg1 = (*(iVar5 + 0x32) & 0x7fff) + uVar3 & 0xffff;\n                    if (piVar17 <= arg1) {\n                        arg4 = uVar3;\n                        arg3 = piVar17 << 3;\n                        uVar16 = piVar17 + -0x20000 >> 0x3f & arg3;\n                        arg1 = arg1 - arg4;\n                        if (arg1 == 0x1) {\n                            if ((uVar2 & 1) == 0) {\n                                iVar11 = 0x38;\n                            }\n                            else {\n                                iVar11 = 0x48;\n                            }\n                            arg1 = *(iVar11 + iVar5 + uVar16);\n                            if (*arg1 == 8) {\n                                if ((uVar2 & 1) == 0) {\n                                    iVar11 = 0x38;\n                                }\n                                else {\n                                    iVar11 = 0x48;\n                                }\n                                uVar10 = *(*(iVar11 + iVar5 + uVar16) + 0x17) & 0x1f;\n                                arg1 = uVar10;\n                                cVar9 = uVar10;\n                                if ((cVar9 != '\\r') && (cVar9 != '\\x0e')) {\n                                    if (*0x4d92a0 == 0) {\n                                        *(puVar13 + -0x78) = arg2 + 8;\n                                    }\n                                    arg1 = (*(puVar13 + -0x78) + 7U & 0xfffffffffffffff8) + *(puVar13 + -0x70);\n                                    if (arg1 < 0x201) {\n                                        *(puVar13 + -0xa8) = 0;\n                                        puVar13[-0xa0] = 0;\n                                        *(puVar13 + -0xa8) = uVar12;\n                                        puVar13[-0xa0] = 0;\n                                        *(puVar13 + -0x100) = 0x454f74;\n                                        fcn.00409860();\n                                        iVar5 = *0x5449c8;\n                                        *(puVar13 + -0x100) = 0x454f8c;\n                                        ppiVar6 = fcn.0040ca00(puVar13 + -0xa8);\n                                        arg1 = *ppiVar6;\n                                        if (iVar5 != '\\0') {\n                                            *(puVar13 + -0xd8) = arg1;\n                                            *(puVar13 + -0x100) = 0x455119;\n                                            fcn.00409a80();\n                                            return *(puVar13 + -0xd8) * 5 + 0x45bd00;\n                                        }\n                                        iVar5 = *0x5449c8;\n                                        if (*0x5449c8 == 0) {\n                                            *(puVar13 + -0x100) = 0x454fa7;\n                                            iVar5 = fcn.0040c560();\n                                            if (*0x544c10 != 0) {\n                                                *(puVar13 + -0x100) = 0x454fc5;\n                                                fcn.00458a80(arg1, arg2, arg3, arg4);\n                                                iVar5 = *0x5449c8;\n                                            }\n                                        }\n                                        *0x5449c8 = iVar5;\n                                        bVar18 = *0x5449d0 < 2000;\n                                        if (*0x5449d0 < 2000) {\n                                            *(puVar13 + -0x108) = puVar15;\n                                            *(puVar13 + -0x100) = 0x454ff3;\n                                            iVar5 = fcn.004591b0();\n                                            puVar15 = *(puVar13 + -0x108);\n                                            *(puVar13 + -0x58) = *(puVar13 + -0xa8);\n                                            *(puVar13 + -0x48) = *(puVar13 + -0x98);\n                                            *(puVar13 + -0x44) = *(puVar13 + -0x94);\n                                            *(puVar13 + -0x40) = *(puVar13 + -0x90);\n                                            *(puVar13 + -0x3c) = *(puVar13 + -0x8c);\n                                            *(puVar13 + -0x38) = *(puVar13 + -0x88);\n                                            *(puVar13 + -0x34) = *(puVar13 + -0x84);\n                                            *(puVar13 + -0x30) = *(puVar13 + -0x80);\n                                            *(puVar13 + -0x2c) = *(puVar13 + -0x7c);\n                                            *(puVar13 + -0x28) = *(puVar13 + -0x78);\n                                            *(puVar13 + -0x24) = *(puVar13 + -0x74);\n                                            *(puVar13 + -0x20) = *(puVar13 + -0x70);\n                                            *(puVar13 + -0x1c) = *(puVar13 + -0x6c);\n                                            *(puVar13 + -0x18) = *(puVar13 + -0x68);\n                                            *(puVar13 + -0x14) = *(puVar13 + -100);\n                                            *(puVar13 + -0x10) = *(puVar13 + -0x60);\n                                            *(puVar13 + -0xc) = *(puVar13 + -0x5c);\n                                            if (bVar18) {\n                                                *(puVar13 + -0xe0) = iVar5;\n                                                *(puVar13 + -200) = iVar5 * 5;\n                                                if (*0x544c10 == 0) {\n                                                    *(puVar13 + -0x108) = puVar15;\n                                                    *(puVar13 + -0x100) = 0x45508f;\n                                                    fcn.0045951a();\n                                                }\n                                                else {\n                                                    *(puVar13 + -0x100) = 0x4550ac;\n                                                    fcn.0040f2c0(puVar13 + -0x58);\n                                                }\n                                                *(puVar13 + -0x100) = 0x4550c5;\n                                                puVar7 = fcn.0040cc40(puVar13 + -0xa8);\n                                                *puVar7 = *(puVar13 + -0xe0);\n                                                *0x5449d0 = *0x5449d0 + 1;\n                                                *(puVar13 + -0x100) = 0x4550e5;\n                                                fcn.00409a80();\n                                                return *(puVar13 + -200) + 0x45bd00;\n                                            }\n                                            arg1 = 0x7d0;\n                                            *(puVar13 + -0x100) = 0x455147;\n                                            fcn.00458f20(2000);\n                                        }\n                                        *(puVar13 + -0x100) = 0x455156;\n                                        fcn.00409a80();\n                                        *(puVar13 + -0x100) = 0x455167;\n                                        fcn.00430040();\n                                    }\n                                    *(puVar13 + -0x100) = 0x45517a;\n                                    fcn.0042f8a0();\n                                }\n                                *(puVar13 + -0x100) = 0x45518d;\n                                fcn.0042f8a0();\n                            }\n                            *(puVar13 + -0x100) = 0x4551a5;\n                            fcn.0042f8a0();\n                        }\n                        *(puVar13 + -0x100) = 0x4551b8;\n                        fcn.0042f8a0();\n                    }\n                    *(puVar13 + -0x100) = 0x4551c5;\n                    fcn.00458fe0(arg1);\n                }\n                *(puVar13 + -0x100) = 0x4551d2;\n                fcn.00458f60(arg1_00, 0x100000);\n                uVar8 = arg1_00;\n            }\n            uVar12 = 0x48f700;\n            *(puVar13 + -0x100) = 0x4551e5;\n            iVar5 = fcn.0042f8a0();\n        }\n        *(puVar14 + 8) = iVar5;\n        *(puVar14 + 0x10) = uVar12;\n        puVar14[0x18] = uVar8;\n        *(puVar14 + -8) = 0x4551f9;\n        fcn.004568e0();\n        iVar5 = *(puVar14 + 8);\n        uVar12 = *(puVar14 + 0x10);\n        param_1 = puVar14[0x18];\n        puVar13 = puVar14;\n    } while( true );\n}\n",
        "token_count": 2947
    }
}