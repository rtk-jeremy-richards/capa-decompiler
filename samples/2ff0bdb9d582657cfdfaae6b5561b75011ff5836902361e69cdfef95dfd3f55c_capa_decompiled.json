{
    "00401000": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00401000(uint32_t **arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    bool bVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    // [00] -r-x section size 24576 named .text\n    bVar3 = false;\n    uVar1 = **arg_8h;\n    if (uVar1 < 0xc0000092) {\n        if (uVar1 < 0xc000008d) {\n            if (uVar1 == 0xc0000005) {\n                pcVar2 = sub.msvcrt.dll_signal(0xb, 0);\n                if (pcVar2 == 0x1) {\n                    sub.msvcrt.dll_signal(0xb, 1);\n                    return 0xffffffff;\n                }\n                if (pcVar2 != NULL) {\n                    (*pcVar2)(0xb);\n                    return 0xffffffff;\n                }\n                return 0;\n            }\n            bVar3 = uVar1 == 0xc000001d;\ncode_r0x0040108c:\n            if (!bVar3) {\n                return 0;\n            }\n            pcVar2 = sub.msvcrt.dll_signal(4, 0);\n            if (pcVar2 == 0x1) {\n                sub.msvcrt.dll_signal(4, 1);\n            }\n            else {\n                if (pcVar2 == NULL) {\n                    return 0;\n                }\n                (*pcVar2)(4);\n            }\n            return 0xffffffff;\n        }\n    }\n    else {\n        if (uVar1 == 0xc0000094) goto code_r0x0040102a;\n        if (0xc0000094 < uVar1) {\n            bVar3 = uVar1 == 0xc0000096;\n            goto code_r0x0040108c;\n        }\n        if (uVar1 != 0xc0000093) {\n            return 0;\n        }\n    }\n    bVar3 = true;\ncode_r0x0040102a:\n    pcVar2 = sub.msvcrt.dll_signal(8, 0);\n    if (pcVar2 == 0x1) {\n        sub.msvcrt.dll_signal(8, 1);\n        if (!bVar3) {\n            return 0xffffffff;\n        }\n        fcn.00406850();\n        return 0xffffffff;\n    }\n    if (pcVar2 != NULL) {\n        (*pcVar2)(8);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 597
    },
    "00401e40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e40(uint arg_8h)\n\n{\n    if (*0x409024 == 0) {\n        sub.USER32.dll_MessageBoxA(0, arg_8h, 0x411690, 0);\n        return;\n    }\n    if (*0x411690 == '\\0') {\n    // WARNING: Could not recover jumptable at 0x00406b18. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.msvcrt.dll_puts)();\n        return;\n    }\n    sub.msvcrt.dll_printf(\"%s: %s\\n\", 0x411690, arg_8h);\n    return;\n}\n",
        "token_count": 151
    },
    "00401eb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.00401eb0(void)\n\n{\n    int32_t iVar1;\n    uint hMem;\n    uint var_bp_4h;\n    \n    iVar1 = sub.KERNEL32.dll_GetLastError();\n    if (*0x409090 != 0) {\n        sub.msvcrt.dll_fprintf(*0x409090, \"Error msg:\\t%s\\n\", 0x411710);\n    }\n    if (iVar1 != 0) {\n        sub.KERNEL32.dll_FormatMessageA(0x1300, 0, iVar1, 0x400, &hMem, 0, 0);\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf(*0x409090, \"Error:\\t\\t%s\\n\", hMem);\n        }\n        iVar1 = sub.msvcrt.dll_strlen(0x411710);\n        *(iVar1 + 0x411710) = 0xa0a;\n        *(iVar1 + 0x411712) = 0;\n        sub.msvcrt.dll_strcat(0x411710, hMem);\n        sub.KERNEL32.dll_LocalFree(hMem);\n    }\n    if (*0x409024 == 0) {\n        sub.USER32.dll_MessageBoxA(0, 0x411710, 0x411690, 0);\n    }\n    else if (*0x411690 == '\\0') {\n        sub.msvcrt.dll_puts(0x411710);\n    }\n    else {\n        sub.msvcrt.dll_printf(\"%s: %s\\n\", 0x411690, 0x411710);\n    }\n    if (*0x411b10 != '\\0') {\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf(*0x409090, \"Open URL:\\t%s\\n\", 0x411b10);\n        }\n        sub.SHELL32.DLL_ShellExecuteA(0, \"open\", 0x411b10, 0, 0, 1);\n    }\n    if (*0x409090 == 0) {\n        return;\n    }\n    sub.msvcrt.dll_fclose(*0x409090);\n    return;\n}\n",
        "token_count": 493
    },
    "00402620": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.00402620(char *arg_8h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    bool bVar3;\n    char cStack349;\n    uint s;\n    uint var_48h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar3 = false;\n    sub.msvcrt.dll_memset(&s, 0, 0x104);\n    if (*arg_8h != '\\0') {\n        sub.msvcrt.dll_strcpy(&s, arg_8h);\n        if (*0x409024 == 0) {\n            iVar1 = sub.msvcrt.dll_strlen(&s);\n            if (*(iVar1 + -1 + &s) != '\\\\') {\n                *(iVar1 + &s) = 0x5c;\n            }\n            pcVar2 = \"bin\\\\javaw.exe\";\n        }\n        else {\n            iVar1 = sub.msvcrt.dll_strlen(&s);\n            if (*(iVar1 + -1 + &s) != '\\\\') {\n                *(iVar1 + &s) = 0x5c;\n            }\n            pcVar2 = \"bin\\\\java.exe\";\n        }\n        sub.msvcrt.dll_strcat(&s, pcVar2);\n        iVar1 = sub.msvcrt.dll__stat(&s, &var_48h);\n        bVar3 = iVar1 == 0;\n        if (!bVar3) {\n            sub.KERNEL32.dll_SetLastError(0);\n        }\n    }\n    if (*0x409090 != 0) {\n        pcVar2 = \"(OK)\";\n        if (bVar3 == false) {\n            pcVar2 = \"(not found)\";\n        }\n        sub.msvcrt.dll_fprintf(*0x409090, \"Check launcher:\\t%s %s\\n\", &s, pcVar2);\n    }\n    return bVar3;\n}\n",
        "token_count": 459
    },
    "004028b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004028b0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_250h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_23ch;\n    uint var_238h;\n    char cStack301;\n    uint s;\n    uint var_bp_ch;\n    \n    if (*0x409090 != 0) {\n        uVar3 = 0x408207;\n        if ((arg_ch & 0x100) == 0) {\n            uVar3 = 0x40820a;\n        }\n        sub.msvcrt.dll_fprintf(*0x409090, \"%s-bit search:\\t%s...\\n\", uVar3, arg_8h);\n    }\n    iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &var_23ch);\n    if (iVar1 != 0) {\n        return;\n    }\n    var_24ch = 0x104;\n    sub.msvcrt.dll_memset(&s, 0, 0x104);\n    sub.msvcrt.dll_memset(&var_238h, 0, 0x104);\n    iVar1 = 0;\n    while( true ) {\n        iVar2 = sub.ADVAPI32.DLL_RegEnumKeyExA(var_23ch, iVar1, &var_238h, &var_24ch, 0, 0, 0, &var_248h);\n        if (iVar2 != 0) break;\n        sub.msvcrt.dll_strcpy();\n        iVar2 = sub.msvcrt.dll_strlen();\n        if (*(iVar2 + -1 + &s) != '\\\\') {\n            *(iVar2 + &s) = 0x5c;\n        }\n        sub.msvcrt.dll_strcat();\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf();\n        }\n        iVar2 = sub.msvcrt.dll_strcmp();\n        if (((-1 < iVar2) &&\n            (((*0x411260 == '\\0' || (iVar2 = sub.msvcrt.dll_strcmp(),  iVar2 < 1)) &&\n             (iVar2 = sub.msvcrt.dll_strcmp(),  0 < iVar2)))) && (iVar2 = fcn.00402730(&s, arg_ch),  iVar2 != 0)) {\n            sub.msvcrt.dll_strcpy();\n            sub.msvcrt.dll_strcpy();\n            *0x4111d4 = arg_ch;\n        }\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf();\n        }\n        var_24ch = 0x104;\n        iVar1 = iVar1 + 1;\n    }\n    sub.ADVAPI32.DLL_RegCloseKey();\n    return;\n}\n",
        "token_count": 667
    },
    "00402ce0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402ce0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint auStack60 [7];\n    uint uStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_10h - 2U < 2) {\n        uStack32 = 0x402d11;\n        fcn.00402b40(arg_ch, 2);\n        if (arg_10h == 3) {\n            return;\n        }\n        arg_ch = 1;\n    }\n    else {\n        uStack32 = 0x402d42;\n        fcn.00402b40(arg_8h, 1);\n        if (arg_10h == 0) {\n            return;\n        }\n        arg_8h = arg_ch;\n        arg_ch = 2;\n    }\n    if (*0x4111d0 == 9) {\n        puVar4 = &stack0xffffffc4;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x1e, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            auStack60[0]._0_1_ = 0;\n        }\n        else {\n            iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n            if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &stack0xffffffc4) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x1e, &stack0xffffffc4);\n                }\n            }\n        }\n        *0x4111d0 = sub.msvcrt.dll_atoi(&stack0xffffffc4);\n    }\n    if (*0x4111d0 == 2) {\n        if (*0x409020 == 0) goto code_r0x00402bae;\n        fcn.004028b0(arg_8h, arg_ch | 0x100);\n        bVar5 = (*0x4111d4 & 0x100) == 0;\ncode_r0x00402b76:\n        if (!bVar5) {\n            return;\n        }\n    }\n    else {\n        if (*0x4111d0 < 3) {\n            if (*0x4111d0 != 1) {\n                return;\n            }\n        }\n        else {\n            if (*0x4111d0 != 3) {\n                bVar5 = *0x4111d0 == 4;\n                goto code_r0x00402b76;\n            }\n            fcn.004028b0(arg_8h, arg_ch);\n            if ((*0x4111d4 != 0) && ((*0x4111d4 & 0x100) == 0)) {\n                return;\n            }\n        }\n        if (*0x409020 == 0) {\n            return;\n        }\n        arg_ch = arg_ch | 0x100;\n    }\ncode_r0x00402bae:\n    fcn.004028b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 931
    },
    "00402d70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402d70(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_ch - 2U < 2) {\n        fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", 2);\n        if (arg_ch != 3) {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", 1);\n        }\n    }\n    else {\n        fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", 1);\n        if (arg_ch != 0) {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", 2);\n        }\n    }\n    if (*0x4111d4 != 0) goto code_r0x00402e20;\n    if (arg_ch - 2U < 2) {\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n        if (arg_ch == 3) {\ncode_r0x00402ed0:\n            if (*0x4111d4 == 0) {\n                return 0;\n            }\n            goto code_r0x00402e20;\n        }\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n    }\n    else {\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n        if (arg_ch == 0) goto code_r0x00402ed0;\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n    }\n    if (*0x4111d4 == 0) {\n        return 0;\n    }\ncode_r0x00402e20:\n    sub.msvcrt.dll_strcpy(arg_8h, 0x411464);\n    if (*0x409090 != 0) {\n        uVar1 = 0x408207;\n        if ((*0x4111d4 & 0x100) == 0) {\n            uVar1 = 0x40820a;\n        }\n        sub.msvcrt.dll_fprintf(*0x409090, \"Runtime used:\\t%s (%s-bit)\\n\", 0x4112e0, uVar1);\n    }\n    return 1;\n}\n",
        "token_count": 510
    },
    "00402f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00402f40(int32_t s1, char *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    bool bVar7;\n    uchar auStackY32924 [32768];\n    uint lpName;\n    uint uStackY32;\n    int32_t iStackY28;\n    uchar *puStackY24;\n    uint uStackY20;\n    uint *var_ch;\n    \n    uStackY20 = 0x402f50;\n    fcn.00406960();\n    var_ch = &fcn.00402f40::lpName;\n    uStackY20 = 0x402f7b;\n    sub.msvcrt.dll_memset();\n    var_ch = &stack0xffff7f64;\n    uStackY20 = 0x402f96;\n    sub.msvcrt.dll_memset();\n    cVar1 = *arg_ch;\n    var_ch = arg_ch;\n    do {\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        uStackY20 = 0x402fb1;\n        iVar2 = sub.msvcrt.dll_strchr();\n        if (iVar2 == 0) {\n            var_ch = s1;\n            uStackY20 = 0x403217;\n            sub.msvcrt.dll_strcat();\n            return 1;\n        }\n        var_ch = iVar2 + 1;\n        uStackY20 = 0x402fcf;\n        iVar2 = sub.msvcrt.dll_strchr();\n        if (iVar2 == 0) {\n            return 0;\n        }\n        var_ch = s1;\n        uStackY20 = 0x402ff4;\n        sub.msvcrt.dll_strncat();\n        var_ch = &fcn.00402f40::lpName;\n        lpName._0_1_ = 0;\n        uStackY20 = 0x40301a;\n        sub.msvcrt.dll_strncat();\n        var_ch = s1;\n        uStackY20 = 0x403030;\n        iVar3 = sub.msvcrt.dll_strlen();\n        bVar7 = iVar3 + s1 == 0;\n        iVar5 = 7;\n        puVar4 = &fcn.00402f40::lpName;\n        pcVar6 = \"EXEDIR\";\n        do {\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            bVar7 = *puVar4 == *pcVar6;\n            puVar4 = puVar4 + 1;\n            pcVar6 = pcVar6 + 1;\n        } while (bVar7);\n        if (bVar7) {\n            var_ch = s1;\n            uStackY20 = 0x403173;\n            sub.msvcrt.dll_strncat();\n        }\n        else {\n            iVar5 = 8;\n            puVar4 = &fcn.00402f40::lpName;\n            pcVar6 = \"EXEFILE\";\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                bVar7 = *puVar4 == *pcVar6;\n                puVar4 = puVar4 + 1;\n                pcVar6 = pcVar6 + 1;\n            } while (bVar7);\n            if (bVar7) {\n                var_ch = s1;\n                uStackY20 = 0x403187;\n                sub.msvcrt.dll_strcat();\n            }\n            else {\n                iVar5 = 4;\n                puVar4 = &fcn.00402f40::lpName;\n                pcVar6 = 0x408311;\n                do {\n                    if (iVar5 == 0) break;\n                    iVar5 = iVar5 + -1;\n                    bVar7 = *puVar4 == *pcVar6;\n                    puVar4 = puVar4 + 1;\n                    pcVar6 = pcVar6 + 1;\n                } while (bVar7);\n                if (bVar7) {\n                    var_ch = 0x104;\n                    uStackY20 = 0x4031a6;\n                    sub.KERNEL32.dll_GetCurrentDirectoryA();\n                }\n                else {\n                    iVar5 = 7;\n                    puVar4 = &fcn.00402f40::lpName;\n                    pcVar6 = \"OLDPWD\";\n                    do {\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        bVar7 = *puVar4 == *pcVar6;\n                        puVar4 = puVar4 + 1;\n                        pcVar6 = pcVar6 + 1;\n                    } while (bVar7);\n                    if (!bVar7) {\n                        iVar5 = 0xb;\n                        puVar4 = &fcn.00402f40::lpName;\n                        pcVar6 = \"JREHOMEDIR\";\n                        do {\n                            if (iVar5 == 0) break;\n                            iVar5 = iVar5 + -1;\n                            bVar7 = *puVar4 == *pcVar6;\n                            puVar4 = puVar4 + 1;\n                            pcVar6 = pcVar6 + 1;\n                        } while (bVar7);\n                        if (!bVar7) {\n                            var_ch = &fcn.00402f40::lpName;\n                            uStackY20 = 0x4030c3;\n                            puVar4 = sub.msvcrt.dll_strstr();\n                            var_ch = &fcn.00402f40::lpName;\n                            if (puVar4 == var_ch) {\n                                uStackY20 = 0x4031e9;\n                                fcn.00402390(var_ch, iVar3 + s1, 0x400);\n                            }\n                            else {\n                                var_ch = &fcn.00402f40::lpName;\n                                uStackY20 = 0x4030f2;\n                                iVar3 = sub.KERNEL32.dll_GetEnvironmentVariableA();\n                                if (iVar3 != 0) {\n                                    puStackY24 = &stack0xffff7f64;\n                                    iStackY28 = s1;\n                                    uStackY32 = 0x403203;\n                                    sub.msvcrt.dll_strcat();\n                                }\n                            }\n                            goto code_r0x00403100;\n                        }\n                    }\n                    var_ch = s1;\n                    uStackY20 = 0x4031c2;\n                    sub.msvcrt.dll_strcat();\n                }\n            }\n        }\ncode_r0x00403100:\n        if (*0x409090 != 0) {\n            var_ch = *0x409090;\n            uStackY20 = 0x403155;\n            sub.msvcrt.dll_fprintf();\n        }\n        var_ch = iVar2 + 1;\n        cVar1 = *(iVar2 + 1);\n    } while( true );\n}\n",
        "token_count": 1537
    },
    "00403e80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.00403e80(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint var_38h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4111e0 == '\\0') {\n        return 0;\n    }\n    puVar4 = &var_38h;\n    for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x12, 0x400);\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        var_38h._0_1_ = 0;\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n            iVar3 = 0;\n            do {\n                cVar1 = *(iVar3 + iVar2);\n                *(iVar3 + &var_38h) = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x12, &var_38h);\n            }\n        }\n    }\n    iVar2 = sub.msvcrt.dll_atoi(&var_38h);\n    if (iVar2 - 2U < 2) {\n        fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", 2);\n        if (iVar2 != 3) {\n            pcVar5 = \"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\";\n            uVar6 = 1;\ncode_r0x00403f90:\n            fcn.00402b40(pcVar5, uVar6);\n        }\n    }\n    else {\n        fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", 1);\n        if (iVar2 != 0) {\n            pcVar5 = \"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\";\n            uVar6 = 2;\n            goto code_r0x00403f90;\n        }\n    }\n    if (*0x4111d4 != 0) goto code_r0x00403fe5;\n    if (iVar2 - 2U < 2) {\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n        if (iVar2 != 3) {\n            pcVar5 = \"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\";\n            uVar6 = 1;\ncode_r0x00403fd2:\n            fcn.00402b40(pcVar5, uVar6);\n        }\n    }\n    else {\n        fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n        if (iVar2 != 0) {\n            pcVar5 = \"SOFTWARE\\\\IBM\\\\Java Development Kit\";\n            uVar6 = 2;\n            goto code_r0x00403fd2;\n        }\n    }\n    if (*0x4111d4 == 0) {\n        return 0;\n    }\ncode_r0x00403fe5:\n    sub.msvcrt.dll_strcpy(0x4090a0, 0x411464);\n    if (*0x409090 != 0) {\n        uVar6 = 0x408207;\n        if ((*0x4111d4 & 0x100) == 0) {\n            uVar6 = 0x40820a;\n        }\n        sub.msvcrt.dll_fprintf(*0x409090, \"Runtime used:\\t%s (%s-bit)\\n\", 0x4112e0, uVar6);\n    }\n    return 1;\n}\n",
        "token_count": 983
    },
    "004040f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.004040f0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint s;\n    uint var_bp_4h;\n    \n    if (*0x4111e0 == '\\0') {\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x66, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            *0x411710 = 0;\n            return;\n        }\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = sub.KERNEL32.dll_LockResource(iVar2);\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar4 = 0;\n        do {\n            cVar1 = *(iVar4 + iVar2);\n            *(iVar4 + 0x411710) = cVar1;\n            iVar4 = iVar4 + 1;\n        } while (cVar1 != '\\0');\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x67, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            *0x411710 = 0;\n        }\n        else {\n            iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n            if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                iVar4 = 0;\n                do {\n                    cVar1 = *(iVar4 + iVar2);\n                    *(iVar4 + 0x411710) = cVar1;\n                    iVar4 = iVar4 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x67, 0x411710);\n                }\n            }\n        }\n        iVar2 = sub.msvcrt.dll_strlen(0x411710);\n        *(iVar2 + 0x411710) = 0x20;\n        sub.msvcrt.dll_strcat(0x411710, 0x4111e0);\n        if (*0x411260 != '\\0') {\n            iVar2 = sub.msvcrt.dll_strlen(0x411710);\n            *(iVar2 + 0x411710) = 0x202d20;\n            sub.msvcrt.dll_strcat(0x411710, 0x411260);\n        }\n        iVar2 = *0x4111d0;\n        if (*0x4111d0 == 1 || *0x4111d0 == 4) {\n            iVar4 = sub.msvcrt.dll_strlen(0x411710);\n            *(iVar4 + 0x411710) = 0x2820;\n            *(iVar4 + 0x411712) = 0;\n            uVar3 = 0x408207;\n            if (iVar2 != 1) {\n                uVar3 = 0x40820a;\n            }\n            sub.msvcrt.dll_strcat(0x411710, uVar3);\n            iVar2 = sub.msvcrt.dll_strlen(0x411710);\n            *(iVar2 + 0x411710) = 0x7469622d;\n            *(iVar2 + 0x411714) = 0x29;\n        }\n        if (*0x4111dc != 0) {\n            sub.msvcrt.dll_memset(&s, 0, 0x400);\n            iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x68, 0x400);\n            if (iVar2 == 0) {\n                sub.KERNEL32.dll_SetLastError(0);\n                s._0_1_ = 0;\n            }\n            else {\n                iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n                if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                    iVar4 = 0;\n                    do {\n                        cVar1 = *(iVar4 + iVar2);\n                        *(iVar4 + &s) = cVar1;\n                        iVar4 = iVar4 + 1;\n                    } while (cVar1 != '\\0');\n                    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                        sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x68, &s);\n                    }\n                    iVar2 = sub.msvcrt.dll_strlen(0x411710);\n                    *(iVar2 + 0x411710) = 10;\n                    sub.msvcrt.dll_strcat(0x411710, &s);\n                }\n            }\n        }\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x15, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            *0x411b10 = 0;\n            return;\n        }\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar2 = sub.KERNEL32.dll_LockResource(iVar2);\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar4 = 0;\n        do {\n            cVar1 = *(iVar4 + iVar2);\n            *(iVar4 + 0x411b10) = cVar1;\n            iVar4 = iVar4 + 1;\n        } while (cVar1 != '\\0');\n    }\n    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n        sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\");\n        return;\n    }\n    return;\n}\n",
        "token_count": 1412
    },
    "00404580": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00404580(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t uVar5;\n    char *pcVar6;\n    uint uVar7;\n    int32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_38h;\n    uint var_bp_ch;\n    \n    puVar4 = &var_38h;\n    for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x20, 0x400);\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        var_38h._0_1_ = 0;\n        uVar5 = *0x10 == 0xa0;\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        uVar5 = iVar2 == 0;\n        if (!uVar5) {\n            iVar2 = sub.KERNEL32.dll_LockResource(iVar2);\n            uVar5 = iVar2 == 0;\n            if (!uVar5) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &var_38h) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                uVar5 = *0x409028 == 0;\n                if ((!uVar5) && (uVar5 = *0x409090 == 0,  !uVar5)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x20, &var_38h);\n                }\n            }\n        }\n    }\n    iVar2 = 5;\n    puVar4 = &var_38h;\n    pcVar6 = 0x40815c;\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        uVar5 = *puVar4 == *pcVar6;\n        puVar4 = puVar4 + 1;\n        pcVar6 = pcVar6 + 1;\n    } while (uVar5);\n    *0x4111d8 = uVar5;\n    iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 2, 0x400);\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        *0x4111e0 = '\\0';\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n            iVar3 = 0;\n            do {\n                cVar1 = *(iVar3 + iVar2);\n                *(iVar3 + 0x4111e0) = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 2, 0x4111e0);\n            }\n        }\n    }\n    iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 3, 0x400);\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        *0x411260 = 0;\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n            iVar3 = 0;\n            do {\n                cVar1 = *(iVar3 + iVar2);\n                *(iVar3 + 0x411260) = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 3, 0x411260);\n            }\n        }\n    }\n    if (*0x4111d8 == 0) {\n        iVar2 = fcn.00403b60(arg_8h, arg_ch);\n        if (iVar2 != 0) {\n            return 1;\n        }\n        var_64h = 0;\n        if (*0x4111e0 == '\\0') goto joined_r0x0040483f;\n        puVar4 = &var_58h;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x12, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            var_58h._0_1_ = 0;\n        }\n        else {\n            iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n            if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &var_58h) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x12, &var_58h);\n                }\n            }\n        }\n        iVar2 = sub.msvcrt.dll_atoi(&var_58h);\n        if (iVar2 - 2U < 2) {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", 2);\n            if (iVar2 != 3) {\n                pcVar6 = \"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\";\n                uVar7 = 1;\ncode_r0x00404b4f:\n                fcn.00402b40(pcVar6, uVar7);\n            }\n        }\n        else {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", 1);\n            if (iVar2 != 0) {\n                pcVar6 = \"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\";\n                uVar7 = 2;\n                goto code_r0x00404b4f;\n            }\n        }\n        if (*0x4111d4 == 0) {\n            if (iVar2 - 2U < 2) {\n                fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n                if (iVar2 != 3) {\n                    pcVar6 = \"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\";\n                    uVar7 = 1;\ncode_r0x00404b91:\n                    fcn.00402b40(pcVar6, uVar7);\n                }\n            }\n            else {\n                fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n                if (iVar2 != 0) {\n                    pcVar6 = \"SOFTWARE\\\\IBM\\\\Java Development Kit\";\n                    uVar7 = 2;\n                    goto code_r0x00404b91;\n                }\n            }\n            if (*0x4111d4 == 0) goto joined_r0x0040483f;\n        }\n        sub.msvcrt.dll_strcpy(0x4090a0, 0x411464);\n        if (*0x409090 != 0) {\n            uVar7 = 0x408207;\n            if ((*0x4111d4 & 0x100) == 0) {\n                uVar7 = 0x40820a;\n            }\n            sub.msvcrt.dll_fprintf(*0x409090, \"Runtime used:\\t%s (%s-bit)\\n\", 0x4112e0, uVar7);\n        }\n        var_64h = 1;\n        goto joined_r0x0040483f;\n    }\n    if (*0x4111e0 != '\\0') {\n        puVar4 = &var_58h;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x12, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            var_58h._0_1_ = 0;\n        }\n        else {\n            iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n            if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &var_58h) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x12, &var_58h);\n                }\n            }\n        }\n        iVar2 = sub.msvcrt.dll_atoi(&var_58h);\n        if (iVar2 - 2U < 2) {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\", 2);\n            if (iVar2 != 3) {\n                pcVar6 = \"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\";\n                uVar7 = 1;\ncode_r0x0040492a:\n                fcn.00402b40(pcVar6, uVar7);\n            }\n        }\n        else {\n            fcn.00402b40(\"SOFTWARE\\\\JavaSoft\\\\Java Runtime Environment\", 1);\n            if (iVar2 != 0) {\n                pcVar6 = \"SOFTWARE\\\\JavaSoft\\\\Java Development Kit\";\n                uVar7 = 2;\n                goto code_r0x0040492a;\n            }\n        }\n        if (*0x4111d4 != 0) {\ncode_r0x004049f4:\n            sub.msvcrt.dll_strcpy(0x4090a0, 0x411464);\n            if (*0x409090 == 0) {\n                return 1;\n            }\n            uVar7 = 0x408207;\n            if ((*0x4111d4 & 0x100) == 0) {\n                uVar7 = 0x40820a;\n            }\n            sub.msvcrt.dll_fprintf(*0x409090, \"Runtime used:\\t%s (%s-bit)\\n\", 0x4112e0, uVar7);\n            return 1;\n        }\n        if (iVar2 - 2U < 2) {\n            fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n            if (iVar2 != 3) {\n                fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n            }\n        }\n        else {\n            fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java2 Runtime Environment\", 1);\n            if (iVar2 != 0) {\n                fcn.00402b40(\"SOFTWARE\\\\IBM\\\\Java Development Kit\", 2);\n            }\n        }\n        if (*0x4111d4 != 0) goto code_r0x004049f4;\n    }\n    var_64h = fcn.00403b60(arg_8h, arg_ch);\njoined_r0x0040483f:\n    if (var_64h != 0) {\n        return var_64h;\n    }\n    fcn.004040f0();\n    return 0;\n}\n",
        "token_count": 2893
    },
    "00405090": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00405090(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint8_t *puVar6;\n    uchar uVar7;\n    uchar uVar8;\n    bool bVar9;\n    uint auStackY66268 [8];\n    uchar auStackY66236 [272];\n    char acStackY65964 [272];\n    char acStackY65692 [128];\n    uchar auStackY65564 [32768];\n    char acStackY32796 [32680];\n    uint uStackY116;\n    int32_t iStackY112;\n    char *pcStackY108;\n    uint *puStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *var_bp_ch;\n    \n    uStack20 = 0x4050a0;\n    fcn.00406960();\n    var_bp_ch = &stack0xffff7fe4;\n    uStack20 = 0x4050d3;\n    sub.msvcrt.dll_memset();\n    var_bp_ch = &stack0xfffeffe4;\n    uStack20 = 0x4050f0;\n    sub.msvcrt.dll_memset();\n    uStack20 = 0x40510d;\n    var_bp_ch = &stack0xfffeff64;\n    sub.msvcrt.dll_memset();\n    var_bp_ch = &stack0xfffefe54;\n    uStack20 = 0x405128;\n    sub.msvcrt.dll_memset();\n    uStack20 = 0x405144;\n    var_bp_ch = &stack0xfffefd44;\n    sub.msvcrt.dll_memset();\n    puVar5 = &stack0xfffefd24;\n    for (iVar3 = 5; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    var_bp_ch = *0x411680;\n    uStack20 = 0x405176;\n    iStack28 = sub.KERNEL32.dll_FindResourceExA();\n    if (iStack28 == 0) {\n        puStack32 = NULL;\n        sub.KERNEL32.dll_SetLastError();\n        auStackY66268[0]._0_1_ = 0;\n        uVar7 = &stack0xffffffe0 < 0x4;\n        uVar8 = *0x10 == 0x24;\n    }\n    else {\n        puStack32 = *0x411680;\n        iVar3 = sub.KERNEL32.dll_LoadResource();\n        uVar7 = 0;\n        uVar8 = iVar3 == 0;\n        if (!uVar8) {\n            iVar3 = sub.KERNEL32.dll_LockResource();\n            uVar7 = 0;\n            uVar8 = iVar3 == 0;\n            if (!uVar8) {\n                iVar4 = 0;\n                do {\n                    cVar1 = *(iVar4 + iVar3);\n                    *(iVar4 + &stack0xfffefd24) = cVar1;\n                    iVar4 = iVar4 + 1;\n                } while (cVar1 != '\\0');\n                uVar7 = 0;\n                uVar8 = *0x409028 == 0;\n                if (!uVar8) {\n                    uVar7 = 0;\n                    uVar8 = *0x409090 == 0;\n                    if (!uVar8) {\n                        puStack32 = &stack0xfffefd24;\n                        sub.msvcrt.dll_fprintf();\n                    }\n                }\n            }\n        }\n    }\n    iVar3 = 5;\n    puVar5 = &stack0xfffefd24;\n    puVar6 = 0x40815c;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        uVar7 = *puVar5 < *puVar6;\n        uVar8 = *puVar5 == *puVar6;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    } while (uVar8);\n    iStack28 = 0xe;\n    bVar9 = (!uVar7 && !uVar8) == uVar7;\n    uStack24 = 0x400;\n    puStack32 = 0xa;\n    iVar3 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar3 == 0) {\n        sub.KERNEL32.dll_SetLastError();\n        acStackY65964[0] = '\\0';\n    }\n    else {\n        iVar3 = sub.KERNEL32.dll_LoadResource();\n        if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n            iVar4 = 0;\n            do {\n                cVar1 = *(iVar4 + iVar3);\n                (&stack0xfffefe54)[iVar4] = cVar1;\n                iVar4 = iVar4 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf();\n            }\n        }\n    }\n    iVar3 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar3 == 0) {\n        sub.KERNEL32.dll_SetLastError();\n        acStackY65692[0] = 0;\ncode_r0x0040561d:\n        if (bVar9) {\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(iVar3 + 0x4091a4) = 0x72616a2d;\n            *(iVar3 + 0x4091a8) = 0x2220;\n            *(iVar3 + 0x4091aa) = 0;\n            sub.msvcrt.dll_strcat();\n            iVar3 = sub.msvcrt.dll_strlen();\n        }\n        else {\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(iVar3 + 0x4091a4) = 0x72616a2d;\n            *(iVar3 + 0x4091a8) = 0x2220;\n            *(iVar3 + 0x4091aa) = 0;\n            sub.msvcrt.dll_strncat();\n            iVar3 = sub.msvcrt.dll_strlen();\n            if (*(iVar3 + 0x4091a3) != '\\\\') {\n                *(iVar3 + 0x4091a4) = 0x5c;\n            }\n            sub.msvcrt.dll_strcat();\n            iVar3 = sub.msvcrt.dll_strlen();\n        }\n        *(iVar3 + 0x4091a4) = 0x22;\n        return;\n    }\n    iVar3 = sub.KERNEL32.dll_LoadResource();\n    if ((iVar3 == 0) || (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 == 0)) goto code_r0x0040561d;\n    iVar4 = 0;\n    do {\n        cVar1 = *(iVar4 + iVar3);\n        (&stack0xfffeff64)[iVar4] = cVar1;\n        iVar4 = iVar4 + 1;\n    } while (cVar1 != '\\0');\n    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n        sub.msvcrt.dll_fprintf();\n    }\n    iVar3 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar3 == 0) {\n        sub.KERNEL32.dll_SetLastError();\n        acStackY32796[0] = 0;\ncode_r0x0040576c:\n        if (*0x409090 != 0) {\n            pcStackY108 = 0x40579b;\n            sub.msvcrt.dll_fwrite();\n        }\n    }\n    else {\n        pcStackY108 = sub.KERNEL32.dll_LoadResource();\n        if (pcStackY108 == NULL) goto code_r0x0040576c;\n        iStackY112 = 0x40539f;\n        iVar3 = sub.KERNEL32.dll_LockResource();\n        if (iVar3 == 0) goto code_r0x0040576c;\n        iVar4 = 0;\n        do {\n            cVar1 = *(iVar4 + iVar3);\n            (&stack0xffff7fe4)[iVar4] = cVar1;\n            iVar4 = iVar4 + 1;\n        } while (cVar1 != '\\0');\n        if ((*0x409028 != 0) && (*0x409090 != 0)) {\n            iStackY112 = *0x409090;\n            pcStackY108 = \"Resource %d:\\t%s\\n\";\n            uStackY116 = 0x405877;\n            sub.msvcrt.dll_fprintf();\n        }\n    }\n    pcStackY108 = 0x405403;\n    fcn.00402f40(&stack0xfffeffe4, &stack0xffff7fe4, arg_8h, arg_ch);\n    pcStackY108 = 0x40540f;\n    iVar3 = sub.msvcrt.dll_strlen();\n    *(iVar3 + 0x4091ac) = 0x22206874;\n    *(iVar3 + 0x4091a4) = 0x616c632d;\n    *(iVar3 + 0x4091a8) = 0x61707373;\n    *(iVar3 + 0x4091b0) = 0;\n    if (bVar9) {\n        pcStackY108 = 0x4057e9;\n        sub.msvcrt.dll_strcat();\n        pcStackY108 = 0x4057f5;\n        iVar3 = sub.msvcrt.dll_strlen();\n    }\n    else {\n        if (acStackY65964[0] == '\\0') goto code_r0x00405447;\n        pcStackY108 = 0x40581c;\n        sub.msvcrt.dll_strcat();\n        pcStackY108 = 0x405828;\n        iVar3 = sub.msvcrt.dll_strlen();\n    }\n    *(iVar3 + 0x4091a4) = 0x3b;\ncode_r0x00405447:\n    pcStackY108 = 0x40545e;\n    iVar3 = sub.msvcrt.dll_strtok();\n    do {\n        if (iVar3 == 0) {\n            pcStackY108 = 0x4055c9;\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(iVar3 + 0x4091a3) = 0;\n            pcStackY108 = 0x4055dc;\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(iVar3 + 0x4091a6) = 0;\n            *(iVar3 + 0x4091a4) = 0x2022;\n            pcStackY108 = 0x4055ff;\n            sub.msvcrt.dll_strcat();\n            return;\n        }\n        if (*0x409090 == 0) {\n            pcStackY108 = 0x40548e;\n            iVar4 = sub.msvcrt.dll_strpbrk();\n            if (iVar4 != 0) goto code_r0x00405496;\ncode_r0x00405729:\n            pcStackY108 = 0x40573e;\n            sub.msvcrt.dll_strcat();\n            pcStackY108 = 0x40574a;\n            iVar3 = sub.msvcrt.dll_strlen();\n            *(iVar3 + 0x4091a4) = 0x3b;\n        }\n        else {\n            pcStackY108 = 0x405710;\n            sub.msvcrt.dll_fprintf();\n            pcStackY108 = 0x405721;\n            iVar4 = sub.msvcrt.dll_strpbrk();\n            if (iVar4 == 0) goto code_r0x00405729;\ncode_r0x00405496:\n            iVar4 = 0;\n            pcStackY108 = 0x4054a9;\n            iVar2 = sub.msvcrt.dll_strrchr();\n            if (iVar2 != 0) {\n                iVar4 = (iVar2 - iVar3) + 1;\n            }\n            auStackY66236[0] = 0;\n            pcStackY108 = 0x4054cf;\n            sub.msvcrt.dll_strncpy();\n            (&stack0xfffefd44)[iVar4] = 0;\n            pcStackY108 = 0x4054ed;\n            iVar3 = sub.msvcrt.dll__findfirst();\n            if (iVar3 != -1) {\n                do {\n                    while( true ) {\n                        pcStackY108 = 0x405522;\n                        sub.msvcrt.dll_strcpy();\n                        pcStackY108 = 0x405538;\n                        sub.msvcrt.dll_strcat();\n                        pcStackY108 = 0x405544;\n                        iVar3 = sub.msvcrt.dll_strlen();\n                        *(iVar3 + 0x4091a4) = 0x3b;\n                        if (*0x409090 == 0) break;\n                        pcStackY108 = 0x405574;\n                        sub.msvcrt.dll_fprintf();\n                        pcStackY108 = 0x405586;\n                        iVar3 = sub.msvcrt.dll__findnext();\n                        if (iVar3 != 0) goto code_r0x00405590;\n                    }\n                    pcStackY108 = 0x405512;\n                    iVar3 = sub.msvcrt.dll__findnext();\n                } while (iVar3 == 0);\n            }\ncode_r0x00405590:\n            pcStackY108 = 0x405598;\n            sub.msvcrt.dll__findclose();\n        }\n        pcStackY108 = 0x4055ad;\n        iVar3 = sub.msvcrt.dll_strtok();\n    } while( true );\n}\n",
        "token_count": 3076
    },
    "00405880": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nvoid __cdecl fcn.00405880(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char acStack32780 [32736];\n    uint uStack44;\n    int32_t iStack40;\n    char *pcStack36;\n    uchar *puStack32;\n    char *pcStack28;\n    int32_t iStack24;\n    uint uStack16;\n    uchar *var_bp_8h;\n    \n    uStack16 = 0x40588f;\n    fcn.00406960();\n    uStack16 = 0x4058af;\n    var_bp_8h = &stack0xffff7ff4;\n    sub.msvcrt.dll_memset();\n    var_bp_8h = *0x411680;\n    uStack16 = 0x4058d7;\n    iVar2 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar2 == 0) {\n        pcStack28 = NULL;\n        puStack32 = 0x405a19;\n        sub.KERNEL32.dll_SetLastError();\n        acStack32780[0] = '\\0';\n    }\n    else {\n        pcStack28 = *0x411680;\n        puStack32 = 0x4058f4;\n        iStack24 = iVar2;\n        pcStack36 = sub.KERNEL32.dll_LoadResource();\n        if (pcStack36 != NULL) {\n            iStack40 = 0x405903;\n            iVar2 = sub.KERNEL32.dll_LockResource();\n            if (iVar2 != 0) {\n                iVar4 = 0;\n                do {\n                    cVar1 = *(iVar4 + iVar2);\n                    (&stack0xffff7ff4)[iVar4] = cVar1;\n                    iVar4 = iVar4 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    puStack32 = 0xd;\n                    pcStack36 = \"Resource %d:\\t%s\\n\";\n                    iStack40 = *0x409090;\n                    uStack44 = 0x405a46;\n                    pcStack28 = &stack0xffff7ff4;\n                    sub.msvcrt.dll_fprintf();\n                }\n                iStack40 = 0x4091a4;\n                uStack44 = 0x40593f;\n                iVar2 = sub.msvcrt.dll_strlen();\n                *(iVar2 + 0x4091a4) = 0x20;\n                iStack40 = 0x4091a4;\n                uStack44 = 0x40595b;\n                pcStack36 = &stack0xffff7ff4;\n                sub.msvcrt.dll_strcat();\n            }\n        }\n    }\n    if (*arg_8h != '\\0') {\n        pcStack28 = arg_8h;\n        puStack32 = &stack0xffff7ff4;\n        do {\n            pcStack36 = 0x40597a;\n            sub.msvcrt.dll_strcpy();\n            pcStack28 = \"--l4j-\";\n            pcStack36 = 0x405986;\n            puStack32 = &stack0xffff7ff4;\n            puVar3 = sub.msvcrt.dll_strstr();\n            while( true ) {\n                if (puVar3 == NULL) {\n                    if (acStack32780[0] == '\\0') {\n                        return;\n                    }\n                    puStack32 = 0x4091a4;\n                    pcStack36 = 0x4059da;\n                    iVar2 = sub.msvcrt.dll_strlen();\n                    *(iVar2 + 0x4091a4) = 0x20;\n                    puStack32 = 0x4091a4;\n                    pcStack36 = 0x4059f6;\n                    pcStack28 = &stack0xffff7ff4;\n                    sub.msvcrt.dll_strcat();\n                    return;\n                }\n                pcStack28 = 0x20;\n                pcStack36 = 0x4059a1;\n                puStack32 = puVar3;\n                iVar2 = sub.msvcrt.dll_strchr();\n                if ((iVar2 != 0) && (*(iVar2 + 1) != '\\0')) break;\n                *puVar3 = 0;\n                pcStack28 = \"--l4j-\";\n                pcStack36 = 0x4059bf;\n                puStack32 = &stack0xffff7ff4;\n                puVar3 = sub.msvcrt.dll_strstr();\n            }\n            pcStack28 = iVar2 + 1;\n            puStack32 = puVar3;\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 1041
    },
    "00405a50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: c\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00405a50(uint arg_bp_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uchar auStackY66620 [32768];\n    uint uStackY33852;\n    uint uStackY33836;\n    uint uStackY33832;\n    uint auStackY33788 [8];\n    ushort auStackY33756 [16384];\n    uint s2;\n    uchar auStackY984 [267];\n    char cStackY717;\n    uint var_2c8h;\n    uint lpMutexAttributes;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1a8h;\n    uint src;\n    uint uStackY200;\n    int32_t iStackY196;\n    uint c;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406960();\n    *0x411680 = sub.KERNEL32.dll_GetModuleHandleA();\n    if (*0x411680 == 0) {\n        return 0;\n    }\n    *0x411698 = 0;\n    *0x411690 = 0x6e75614c;\n    *0x411694 = 0x6a346863;\n    *0x4111d0 = 9;\n    *0x4111d4 = 0;\n    *0x4111d8 = 0;\n    *0x4111dc = 0;\n    sub.msvcrt.dll_memset();\n    iVar2 = sub.KERNEL32.dll_GetModuleFileNameA();\n    if (iVar2 != 0) {\n        iVar2 = sub.msvcrt.dll_strrchr();\n        iVar2 = iVar2 - &fcn.00405a50::src;\n        if (iVar2 != -1) {\n            iVar3 = fcn.00401c10(arg_bp_8h, &fcn.00405a50::src, iVar2);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            sub.KERNEL32.dll_GetModuleHandleA();\n            pcVar4 = sub.KERNEL32.dll_GetProcAddress();\n            if (pcVar4 != NULL) {\n                sub.KERNEL32.dll_GetCurrentProcess();\n                (*pcVar4)();\n            }\n            if (*0x409090 != 0) {\n                sub.msvcrt.dll_fprintf();\n            }\n            iVar3 = sub.KERNEL32.dll_FindResourceExA();\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_SetLastError();\n                *0x411690 = *0x411690 & 0xffffff00;\n            }\n            else {\n                iVar3 = sub.KERNEL32.dll_LoadResource();\n                if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n                    iVar6 = 0;\n                    do {\n                        cVar1 = *(iVar6 + iVar3);\n                        *(iVar6 + 0x411690) = cVar1;\n                        iVar6 = iVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                        sub.msvcrt.dll_fprintf();\n                    }\n                }\n            }\n            iVar3 = sub.KERNEL32.dll_FindResourceExA();\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_SetLastError();\n                *0x411b10 = 0;\n            }\n            else {\n                iVar3 = sub.KERNEL32.dll_LoadResource();\n                if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n                    iVar6 = 0;\n                    do {\n                        cVar1 = *(iVar6 + iVar3);\n                        *(iVar6 + 0x411b10) = cVar1;\n                        iVar6 = iVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                        sub.msvcrt.dll_fprintf();\n                    }\n                }\n            }\n            iVar3 = sub.KERNEL32.dll_FindResourceExA();\n            if (iVar3 == 0) {\n                sub.KERNEL32.dll_SetLastError();\n                *0x411710 = 0;\n            }\n            else {\n                iVar3 = sub.KERNEL32.dll_LoadResource();\n                if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n                    iVar6 = 0;\n                    do {\n                        cVar1 = *(iVar6 + iVar3);\n                        *(iVar6 + 0x411710) = cVar1;\n                        iVar6 = iVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                        sub.msvcrt.dll_fprintf();\n                    }\n                    sub.msvcrt.dll_memset();\n                    iVar3 = sub.KERNEL32.dll_FindResourceExA();\n                    if (iVar3 == 0) {\n                        sub.KERNEL32.dll_SetLastError();\n                        var_1a8h._0_1_ = '\\0';\n                    }\n                    else {\n                        iVar3 = sub.KERNEL32.dll_LoadResource();\n                        if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n                            iVar6 = 0;\n                            do {\n                                cVar1 = *(iVar6 + iVar3);\n                                *(&fcn.00405a50::var_1a8h + iVar6) = cVar1;\n                                iVar6 = iVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                                sub.msvcrt.dll_fprintf();\n                            }\n                        }\n                    }\n                    if (var_1a8h != '\\0') {\n                        lpMutexAttributes = 0xc;\n                        var_1b0h = 1;\n                        var_1b4h = 0;\n                        sub.KERNEL32.dll_CreateMutexA();\n                        iVar3 = sub.KERNEL32.dll_GetLastError();\n                        if (iVar3 == 0xb7) {\n                            if (*0x409090 == 0) {\n                                return 0xb7;\n                            }\n                            sub.msvcrt.dll_fprintf();\n                            return 0xb7;\n                        }\n                    }\n                    sub.msvcrt.dll_memset();\n                    sub.msvcrt.dll_memset();\n                    sub.KERNEL32.dll_GetCurrentDirectoryA();\n                    iVar3 = sub.KERNEL32.dll_FindResourceExA();\n                    if (iVar3 == 0) {\n                        sub.KERNEL32.dll_SetLastError();\n                        s2._0_1_ = 0;\n                    }\n                    else {\n                        iVar3 = sub.KERNEL32.dll_LoadResource();\n                        if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(),  iVar3 != 0)) {\n                            iVar6 = 0;\n                            do {\n                                cVar1 = *(iVar6 + iVar3);\n                                *(&fcn.00405a50::s2 + iVar6) = cVar1;\n                                iVar6 = iVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                                sub.msvcrt.dll_fprintf();\n                            }\n                            sub.msvcrt.dll_strncpy();\n                            iVar3 = sub.msvcrt.dll_strlen();\n                            if ((&stack0xfffffd33)[iVar3] != '\\\\') {\n                                *(&fcn.00405a50::var_2c8h + iVar3) = 0x5c;\n                            }\n                            sub.msvcrt.dll_strcat();\n                            sub.msvcrt.dll__chdir();\n                            if (*0x409090 != 0) {\n                                sub.msvcrt.dll_fprintf();\n                            }\n                        }\n                    }\n                    iVar3 = fcn.00404580(&fcn.00405a50::src, iVar2);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    sub.msvcrt.dll_memset();\n                    sub.msvcrt.dll_strcpy();\n                    iVar3 = sub.msvcrt.dll_strlen();\n                    (&stack0xfffffc28)[iVar3] = 0;\n                    *(&fcn.00405a50::s2 + iVar3) = 0x6e69625c;\n                    sub.msvcrt.dll_memset();\n                    iVar3 = sub.KERNEL32.dll_GetEnvironmentVariableA();\n                    uVar5 = sub.msvcrt.dll_strlen();\n                    if (uVar5 <= 0x7ffeU - iVar3) {\n                        iVar3 = sub.msvcrt.dll_strlen();\n                        *(&stack0xffff7c24 + iVar3) = 0x3b;\n                        sub.msvcrt.dll_strcat();\n                        iVar3 = sub.KERNEL32.dll_SetEnvironmentVariableA();\n                        if (iVar3 != 0) {\n                            fcn.00404ee0(&fcn.00405a50::src, iVar2);\n                            puVar7 = &stack0xffff7c04;\n                            for (iVar3 = 5; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar7 = 0;\n                                puVar7 = puVar7 + 1;\n                            }\n                            iVar3 = sub.KERNEL32.dll_FindResourceExA();\n                            if (iVar3 == 0) {\n                                sub.KERNEL32.dll_SetLastError();\n                                auStackY33788[0]._0_1_ = 0;\n                            }\n                            else {\n                                iVar3 = sub.KERNEL32.dll_LoadResource();\n                                if (iVar3 != 0) {\n                                    iStackY196 = 0x40629c;\n                                    iVar3 = sub.KERNEL32.dll_LockResource();\n                                    if (iVar3 != 0) {\n                                        iVar6 = 0;\n                                        do {\n                                            cVar1 = *(iVar6 + iVar3);\n                                            *(iVar6 + &stack0xffff7c04) = cVar1;\n                                            iVar6 = iVar6 + 1;\n                                        } while (cVar1 != '\\0');\n                                        if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                                            iStackY196 = *0x409090;\n                                            uStackY200 = 0x4062e4;\n                                            sub.msvcrt.dll_fprintf();\n                                        }\n                                    }\n                                }\n                            }\n                            *0x4111c0 = sub.msvcrt.dll_atoi();\n                            if (*0x409024 == 0) {\n                                iVar3 = sub.msvcrt.dll_strlen();\n                                if (*(iVar3 + 0x40909f) != '\\\\') {\n                                    *(iVar3 + 0x4090a0) = 0x5c;\n                                }\n                            }\n                            else {\n                                iVar3 = sub.msvcrt.dll_strlen();\n                                if (*(iVar3 + 0x40909f) != '\\\\') {\n                                    *(iVar3 + 0x4090a0) = 0x5c;\n                                }\n                            }\n                            sub.msvcrt.dll_strcat();\n                            uStackY33852 = 0x40;\n                            sub.KERNEL32.dll_GlobalMemoryStatusEx();\n                            iStackY196 = 0x406391;\n                            fcn.00403230(0x4091a4, 0x19, 0x1a, uStackY33836, uStackY33832, \"-Xms\");\n                            iStackY196 = 0x4063cf;\n                            fcn.00403230(0x4091a4, 0x1b, 0x1c, uStackY33836, uStackY33832, \"-Xmx\");\n                            iStackY196 = 0x4063e4;\n                            sub.msvcrt.dll_memset();\n                            iStackY196 = 0x4063f6;\n                            fcn.004035d0(&stack0xfffefbc4, &fcn.00405a50::src);\n                            iStackY196 = 0x40641a;\n                            fcn.00402f40(0x4091a4, &stack0xfffefbc4, &fcn.00405a50::src, iVar2);\n                            iStackY196 = 0x406426;\n                            fcn.00405090(&fcn.00405a50::src, iVar2);\n                            iStackY196 = 0x406431;\n                            fcn.00405880(arg_bp_8h);\n                            if (*0x409090 != 0) {\n                                iStackY196 = 0x40645e;\n                                sub.msvcrt.dll_fprintf();\n                                if (*0x409090 != 0) {\n                                    iStackY196 = 0x406481;\n                                    sub.msvcrt.dll_fprintf();\n                                    if (*0x409090 != 0) {\n                                        iStackY196 = 0x406497;\n                                        sub.msvcrt.dll_strlen();\n                                        iStackY196 = 0x4064ac;\n                                        sub.msvcrt.dll_fprintf();\n                                        return 1;\n                                    }\n                                }\n                            }\n                            return 1;\n                        }\n                    }\n                }\n            }\n            if (*0x409090 != 0) {\n                sub.msvcrt.dll_fprintf();\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 3001
    },
    "00406860": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406860(void)\n\n{\n    code **ppcVar1;\n    code *pcVar2;\n    \n    pcVar2 = **0x407030;\n    while (pcVar2 != NULL) {\n        (***0x407030)();\n        ppcVar1 = *0x407030 + 1;\n        *0x407030 = *0x407030 + 1;\n        pcVar2 = *ppcVar1;\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00406890": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406890(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *0x406d60;\n    if (*0x406d60 == -1) {\n        iVar2 = 0;\n        iVar1 = *0x406d64;\n        while (iVar1 != 0) {\n            iVar2 = iVar2 + 1;\n            iVar1 = *(iVar2 * 4 + 0x406d64);\n        }\n    }\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        (**(iVar2 * 4 + 0x406d60))();\n    }\n    fcn.004012b0(fcn.00406860);\n    return;\n}\n",
        "token_count": 167
    },
    "004068f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\ncode * fcn.004068f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcStack12;\n    \n    if (*0x409040 == 0) {\n        *0x409040 = 1;\n        iVar2 = *0x406d60;\n        if (*0x406d60 == -1) {\n            iVar2 = 0;\n            iVar1 = *0x406d64;\n            while (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n                iVar1 = *(iVar2 * 4 + 0x406d64);\n            }\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n            (**(iVar2 * 4 + 0x406d60))();\n        }\n        pcStack12 = fcn.00406860;\n        fcn.004012b0();\n    }\n    return pcStack12;\n}\n",
        "token_count": 209
    },
    "00402b40": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402b40(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_38h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4111d0 == 9) {\n        puVar4 = &var_38h;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0x1e, 0x400);\n        if (iVar2 == 0) {\n            sub.KERNEL32.dll_SetLastError(0);\n            var_38h._0_1_ = 0;\n        }\n        else {\n            iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n            if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &var_38h) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0x1e, &var_38h);\n                }\n            }\n        }\n        *0x4111d0 = sub.msvcrt.dll_atoi(&var_38h);\n    }\n    if (*0x4111d0 == 2) {\n        if (*0x409020 == 0) goto code_r0x00402bae;\n        fcn.004028b0(arg_8h, arg_ch | 0x100);\n        bVar5 = (*0x4111d4 & 0x100) == 0;\ncode_r0x00402b76:\n        if (!bVar5) {\n            return;\n        }\n    }\n    else {\n        if (*0x4111d0 < 3) {\n            if (*0x4111d0 != 1) {\n                return;\n            }\n        }\n        else {\n            if (*0x4111d0 != 3) {\n                bVar5 = *0x4111d0 == 4;\n                goto code_r0x00402b76;\n            }\n            fcn.004028b0(arg_8h, arg_ch);\n            if ((*0x4111d4 != 0) && ((*0x4111d4 & 0x100) == 0)) {\n                return;\n            }\n        }\n        if (*0x409020 == 0) {\n            return;\n        }\n        arg_ch = arg_ch | 0x100;\n    }\ncode_r0x00402bae:\n    fcn.004028b0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 777
    },
    "00401150": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00401150\n      noreturn \n               (void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    sub.KERNEL32.dll_SetUnhandledExceptionFilter(fcn.00401000);\n    fcn.00406850();\n    var_8h = 0;\n    sub.msvcrt.dll___getmainargs(0x409004, 0x409000, &var_ch, *0x407010, &var_8h);\n    if (*0x409030 != 0) {\n        *0x407020 = *0x409030;\n        if (_sym.imp.msvcrt.dll__iob != 0) {\n            sub.msvcrt.dll__setmode(*(_sym.imp.msvcrt.dll__iob + 0x10), *0x409030);\n        }\n        if (_sym.imp.msvcrt.dll__iob != -0x20) {\n            sub.msvcrt.dll__setmode(*(_sym.imp.msvcrt.dll__iob + 0x30), *0x409030);\n        }\n        if (_sym.imp.msvcrt.dll__iob != -0x40) {\n            sub.msvcrt.dll__setmode(*(_sym.imp.msvcrt.dll__iob + 0x50), *0x409030);\n        }\n    }\n    piVar1 = sub.msvcrt.dll___p__fmode();\n    *piVar1 = *0x407020;\n    fcn.00406820();\n    puVar2 = sub.msvcrt.dll___p__environ();\n    uVar3 = main(*0x409004, *0x409000, *puVar2);\n    sub.msvcrt.dll__cexit();\n    // WARNING: Subroutine does not return\n    sub.KERNEL32.dll_ExitProcess(uVar3);\n}\n",
        "token_count": 419
    },
    "004013b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.004013b0(uint hInst, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_158h;\n    int32_t var_138h;\n    int32_t var_134h;\n    int32_t var_130h;\n    int32_t var_12ch;\n    uint var_128h;\n    uint s;\n    uint var_98h;\n    uint var_bp_ch;\n    \n    iVar1 = fcn.00405a50(arg_10h);\n    if (iVar1 == 0xb7) {\n        sub.msvcrt.dll_memset(&s, 0, 0x80);\n        iVar1 = fcn.004020a0(0x18, &s);\n        if ((iVar1 != 0) && (iVar1 = sub.USER32.dll_FindWindowExA(0, 0, 0, 0),  iVar1 != 0)) {\n            do {\n                sub.USER32.dll_GetWindowTextA(iVar1, &var_98h, 0x7f);\n                iVar3 = sub.msvcrt.dll_strstr(&var_98h, &s);\n                if (iVar3 != 0) goto code_r0x0040187f;\n                iVar1 = sub.USER32.dll_FindWindowExA(0, iVar1, 0, 0);\n            } while (iVar1 != 0);\n        }\n        iVar1 = 0;\ncode_r0x0040187f:\n        sub.USER32.dll_ShowWindow(iVar1, 5);\n        sub.USER32.dll_SetForegroundWindow(iVar1);\n        fcn.00401bf0();\n        return 2;\n    }\n    if (iVar1 == 1) {\n        iVar1 = fcn.00402180(4);\n        iVar3 = 0;\n        if ((iVar1 != 0) && (iVar1 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-no-splash\"),  iVar1 == 0)) {\n            iVar3 = 1;\n        }\n        iVar1 = 0;\n        *0x409014 = iVar3;\n        *0x409010 = fcn.00402180(0x1f);\n        if ((*0x409010 != 0) ||\n           ((iVar3 = fcn.00402180(0xb),  iVar3 != 0 &&\n            (iVar3 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-dont-wait\"),  iVar3 == 0)))) {\n            iVar1 = 1;\n        }\n        *0x409018 = iVar1;\n        if ((*0x409014 != 0) || (iVar1 != 0)) {\n            *0x409070 = sub.USER32.dll_CreateWindowExA\n                                  (0x80, \"STATIC\", 0x408010, 0x8000000e, 0, 0, 0x80000000, 0x80000000, 0, 0, hInst, 0);\n            if (*0x409014 == 0) goto code_r0x004014cc;\n            puVar4 = &var_128h;\n            for (iVar1 = 2; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            *puVar4 = 0;\n            iVar1 = fcn.004020a0(6, &var_128h);\n            if ((iVar1 != 0) && (*0x407000 = sub.msvcrt.dll_atoi(&var_128h),  899 < *0x407000 - 1U)) {\n                *0x407000 = 0x3c;\n            }\n            iVar1 = fcn.00402180(7);\n            uVar2 = 0;\n            if ((iVar1 != 0) && (iVar1 = sub.msvcrt.dll_strstr(arg_10h, \"--l4j-no-splash-err\"),  iVar1 == 0)) {\n                uVar2 = 1;\n            }\n            *0x409080 = uVar2;\n            *0x409060 = fcn.00402180(5);\n            iVar1 = sub.USER32.dll_LoadImageA(hInst, 1, 0, 0, 0, 0x40);\n            if (iVar1 == 0) goto code_r0x004013d5;\n            sub.USER32.dll_SendMessageA(*0x409070, 0x172, 0, iVar1);\n            sub.USER32.dll_GetWindowRect(*0x409070, &var_138h);\n            iVar1 = sub.USER32.dll_GetSystemMetrics(0);\n            iVar3 = sub.USER32.dll_GetSystemMetrics(1);\n            sub.USER32.dll_SetWindowPos\n                      (*0x409070, 0, (iVar1 - (var_130h - var_138h)) / 2, (iVar3 - (var_12ch - var_134h)) / 2, 0, 0, 1);\n            sub.USER32.dll_ShowWindow(*0x409070, arg_14h);\n            sub.USER32.dll_UpdateWindow(*0x409070);\n        }\n        do {\n            if (*0x409014 == 0) {\ncode_r0x004014cc:\n                if (*0x409018 != 0) goto code_r0x004014d6;\n            }\n            else {\ncode_r0x004014d6:\n                iVar1 = sub.USER32.dll_SetTimer(*0x409070, 1, 1000, fcn.004019d0);\n                if (iVar1 == 0) goto code_r0x004013d5;\n            }\n            iVar1 = fcn.00406580(0, 0x40901c);\n            if (iVar1 == 0) goto code_r0x004013d5;\n            if ((*0x409014 == 0) && (*0x409018 == 0)) {\n                if (*0x409090 != 0) {\n                    sub.msvcrt.dll_fwrite(\"Exit code:\\t0\\n\", 1, 0xd, *0x409090);\n                }\n                fcn.00406550();\n                fcn.00401bf0();\n                return 0;\n            }\n            while (iVar1 = sub.USER32.dll_GetMessageA(&var_158h, 0, 0, 0),  iVar1 != 0) {\n                sub.USER32.dll_TranslateMessage();\n                sub.USER32.dll_DispatchMessageA(&var_158h);\n            }\n            if (((*0x409010 != 0) && (*0x40901c != 0)) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf();\n            }\n            fcn.00406550();\n        } while ((*0x409010 != 0) && (*0x40901c != 0));\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf();\n        }\n        fcn.00401bf0();\n        iVar1 = *0x40901c;\n    }\n    else {\ncode_r0x004013d5:\n        fcn.00401eb0();\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 1657
    },
    "004019d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004019d0(uint arg_8h)\n\n{\n    if (*0x409014 != 0) {\n        if (*0x407000 == 0) {\n            *0x409014 = 0;\n            sub.USER32.dll_ShowWindow(*0x409070, 0);\n            if ((*0x409060 != 0) && (*0x409080 != 0)) {\n                sub.USER32.dll_KillTimer(arg_8h, 1);\n                fcn.00401eb0();\n                sub.USER32.dll_PostQuitMessage(0);\n            }\n        }\n        else {\n            *0x407000 = *0x407000 + -1;\n            if (*0x409060 != 0) {\n                sub.USER32.dll_EnumWindows(fcn.00401950, 0);\n            }\n        }\n    }\n    sub.KERNEL32.dll_GetExitCodeProcess(*0x4111b0, 0x40901c);\n    if (*0x40901c == 0x103) {\n        if (*0x409014 != 0) {\n            return;\n        }\n        if (*0x409018 != 0) {\n            return;\n        }\n    }\n    sub.USER32.dll_KillTimer(*0x409070, 1);\n    sub.USER32.dll_PostQuitMessage(0);\n    return;\n}\n",
        "token_count": 293
    },
    "00401b00": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nbool fcn.00401b00(void)\n\n{\n    *0x411680 = sub.KERNEL32.dll_GetModuleHandleA(0);\n    if (*0x411680 != 0) {\n        *0x411698 = 0;\n        *0x411690 = 0x6e75614c;\n        *0x411694 = 0x6a346863;\n        *0x4111d0 = 9;\n        *0x4111d8 = 0;\n        *0x4111d4 = 0;\n        *0x4111dc = 0;\n    }\n    return *0x411680 != 0;\n}\n",
        "token_count": 145
    },
    "00401db0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid fcn.00401db0(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_bp_4h;\n    \n    uVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"kernel32\");\n    pcVar2 = sub.KERNEL32.dll_GetProcAddress(uVar1, \"IsWow64Process\");\n    if (pcVar2 != NULL) {\n        uVar1 = sub.KERNEL32.dll_GetCurrentProcess();\n        (*pcVar2)(uVar1, 0x409020);\n    }\n    if (*0x409090 != 0) {\n        uVar1 = 0x408102;\n        if (*0x409020 == 0) {\n            uVar1 = 0x408106;\n        }\n        sub.msvcrt.dll_fprintf(*0x409090, \"WOW64:\\t\\t%s\\n\", uVar1);\n    }\n    return;\n}\n",
        "token_count": 215
    },
    "004020a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_8h\n\nuint __cdecl fcn.004020a0(uint32_t arg_8h, uchar *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_bp_8h;\n    \n    iVar2 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, arg_8h & 0xffff, 0x400);\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        *arg_ch = 0;\n    }\n    else {\n        iVar2 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar2);\n        if ((iVar2 != 0) && (iVar2 = sub.KERNEL32.dll_LockResource(iVar2),  iVar2 != 0)) {\n            iVar3 = 0;\n            do {\n                cVar1 = *(iVar3 + iVar2);\n                arg_ch[iVar3] = cVar1;\n                iVar3 = iVar3 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", arg_8h, arg_ch);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 319
    },
    "00402180": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __cdecl fcn.00402180(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uchar uVar6;\n    bool bVar7;\n    uint var_38h;\n    uint var_bp_ch;\n    \n    puVar4 = &var_38h;\n    for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar2 != 0) {\n        iVar2 = sub.KERNEL32.dll_LoadResource();\n        uVar6 = iVar2 == 0;\n        if (!uVar6) {\n            iVar2 = sub.KERNEL32.dll_LockResource(iVar2);\n            uVar6 = iVar2 == 0;\n            if (!uVar6) {\n                iVar3 = 0;\n                do {\n                    cVar1 = *(iVar3 + iVar2);\n                    *(iVar3 + &var_38h) = cVar1;\n                    iVar3 = iVar3 + 1;\n                } while (cVar1 != '\\0');\n                uVar6 = *0x409028 == 0;\n                if ((!uVar6) && (uVar6 = *0x409090 == 0,  !uVar6)) {\n                    sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", arg_8h);\n                }\n            }\n        }\n        iVar2 = 5;\n        puVar4 = &var_38h;\n        pcVar5 = 0x40815c;\n        do {\n            if (iVar2 == 0) {\n                return uVar6;\n            }\n            iVar2 = iVar2 + -1;\n            uVar6 = *puVar4 == *pcVar5;\n            puVar4 = puVar4 + 1;\n            pcVar5 = pcVar5 + 1;\n        } while (uVar6);\n        return uVar6;\n    }\n    sub.KERNEL32.dll_SetLastError();\n    var_38h._0_1_ = 0;\n    iVar2 = 5;\n    bVar7 = *0x10 == 0x70;\n    puVar4 = &var_38h;\n    pcVar5 = 0x40815c;\n    do {\n        if (iVar2 == 0) {\n            return bVar7;\n        }\n        iVar2 = iVar2 + -1;\n        bVar7 = *puVar4 == *pcVar5;\n        puVar4 = puVar4 + 1;\n        pcVar5 = pcVar5 + 1;\n    } while (bVar7);\n    return bVar7;\n}\n",
        "token_count": 646
    },
    "00402390": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nbool __cdecl fcn.00402390(int32_t s1, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_bp_ch;\n    \n    uVar4 = 0x80000000;\n    iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CLASSES_ROOT\");\n    if (iVar1 != s1) {\n        uVar4 = 0x80000001;\n        iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CURRENT_USER\");\n        if (iVar1 != s1) {\n            uVar4 = 0x80000002;\n            iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_LOCAL_MACHINE\");\n            if (iVar1 != s1) {\n                uVar4 = 0x80000003;\n                iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_USERS\");\n                if (iVar1 != s1) {\n                    uVar4 = 0x80000005;\n                    iVar1 = sub.msvcrt.dll_strstr(s1, \"HKEY_CURRENT_CONFIG\");\n                    if (iVar1 != s1) {\n                        return false;\n                    }\n                }\n            }\n        }\n    }\n    iVar1 = sub.msvcrt.dll_strchr(s1, 0x5c);\n    puVar2 = sub.msvcrt.dll_strrchr(s1, 0x5c);\n    *puVar2 = 0;\n    bVar5 = false;\n    if (((*0x409020 != 0) &&\n        (iVar3 = sub.ADVAPI32.DLL_RegOpenKeyExA(uVar4, iVar1 + 1, 0, 0x20119, &var_10h),  iVar3 == 0)) ||\n       (iVar1 = sub.ADVAPI32.DLL_RegOpenKeyExA(uVar4, iVar1 + 1, 0, 0x20019, &var_10h),  iVar1 == 0)) {\n        iVar1 = sub.ADVAPI32.DLL_RegQueryValueExA(var_10h, puVar2 + 1, 0, &var_14h, arg_ch, &arg_10h);\n        bVar5 = iVar1 == 0;\n        sub.ADVAPI32.DLL_RegCloseKey(var_10h);\n    }\n    *puVar2 = 0x5c;\n    return bVar5;\n}\n",
        "token_count": 591
    },
    "00402730": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nint32_t __cdecl fcn.00402730(uint arg_8h, uint32_t arg_ch)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_248h;\n    uint var_244h;\n    uint var_240h;\n    uint var_23ch;\n    uint var_238h;\n    char cStack301;\n    uint s;\n    uint var_bp_ch;\n    \n    iVar3 = 0;\n    sub.msvcrt.dll_memset(&s, 0, 0x104);\n    iVar2 = sub.ADVAPI32.DLL_RegOpenKeyExA(0x80000002, arg_8h, 0, arg_ch & 0x100 | 0x20019, &var_23ch);\n    if (iVar2 == 0) {\n        sub.msvcrt.dll_memset(&var_238h, 0, 0x104);\n        var_240h = 0x104;\n        iVar2 = sub.ADVAPI32.DLL_RegQueryValueExA(var_23ch, \"JavaHome\", 0, &var_244h, &var_238h, &var_240h);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n            do {\n                pcVar1 = &var_238h + iVar2;\n                *(&s + iVar2) = *pcVar1;\n                iVar2 = iVar2 + 1;\n            } while (*pcVar1 != '\\0');\n            if ((arg_ch & 2) != 0) {\n                iVar2 = sub.msvcrt.dll_strlen(&s);\n                if (*(iVar2 + -1 + &s) != '\\\\') {\n                    *(iVar2 + &s) = 0x5c;\n                }\n                sub.msvcrt.dll_strcat(&s, 0x408203);\n            }\n            iVar3 = fcn.00402620(&s);\n        }\n        sub.ADVAPI32.DLL_RegCloseKey(var_23ch);\n        if (iVar3 != 0) {\n            sub.msvcrt.dll_strcpy(0x411464, &s);\n            return iVar3;\n        }\n    }\n    *0x4111dc = 1;\n    return iVar3;\n}\n",
        "token_count": 511
    },
    "00403230": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl\nfcn.00403230(int32_t s1, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_80h;\n    uint var_7ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_38h;\n    uint var_bp_ch;\n    \n    puVar6 = &var_38h;\n    for (iVar3 = 5; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    iVar3 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, arg_ch & 0xffff, 0x400);\n    if (iVar3 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        var_38h._0_1_ = 0;\n    }\n    else {\n        iVar3 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar3);\n        if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(iVar3),  iVar3 != 0)) {\n            iVar4 = 0;\n            do {\n                cVar1 = *(iVar4 + iVar3);\n                *(iVar4 + &var_38h) = cVar1;\n                iVar4 = iVar4 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", arg_ch, &var_38h);\n            }\n        }\n    }\n    iVar3 = sub.msvcrt.dll_atoi(&var_38h);\n    puVar6 = &var_58h;\n    for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    iVar4 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, arg_10h & 0xffff, 0x400);\n    if (iVar4 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        var_58h._0_1_ = 0;\n    }\n    else {\n        iVar4 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar4);\n        if ((iVar4 != 0) && (iVar4 = sub.KERNEL32.dll_LockResource(iVar4),  iVar4 != 0)) {\n            iVar5 = 0;\n            do {\n                cVar1 = *(iVar5 + iVar4);\n                *(iVar5 + &var_58h) = cVar1;\n                iVar5 = iVar5 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", arg_10h, &var_58h);\n            }\n        }\n    }\n    uVar2 = sub.msvcrt.dll_atoi(&var_58h);\n    iVar5 = fcn.00406990(arg_14h * uVar2, (arg_14h * uVar2 >> 0x20) + arg_18h * uVar2 + arg_14h * (uVar2 >> 0x1f), \n                         0x6400000, 0);\n    iVar4 = iVar3;\n    if (iVar3 < iVar5) {\n        iVar4 = iVar5;\n    }\n    if (0 < iVar4) {\n        if ((0x400 < iVar4 & (*0x4111d4 >> 8 ^ 1)) != 0) {\n            if (*0x409090 != 0) {\n                sub.msvcrt.dll_fprintf\n                          (*0x409090, \"Heap limit:\\tReduced %d MB heap size to 32-bit maximum %d MB\\n\", iVar4, 0x400);\n            }\n            iVar4 = 0x400;\n        }\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf\n                      (*0x409090, \"Heap %s:\\tRequested %d MB / %d%%, Available: %d MB, Heap size: %d MB\\n\", arg_1ch, \n                       iVar3, uVar2, arg_14h >> 0x14 | arg_18h << 0xc, iVar4);\n        }\n        sub.msvcrt.dll_strcat(s1, arg_1ch);\n        iVar3 = sub.msvcrt.dll_strlen(s1);\n        sub.msvcrt.dll__itoa(iVar4, iVar3 + s1, 10);\n        iVar3 = sub.msvcrt.dll_strlen(s1);\n        *(iVar3 + s1) = 0x206d;\n        *(iVar3 + 2 + s1) = 0;\n    }\n    return;\n}\n",
        "token_count": 1226
    },
    "00403540": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nvoid __cdecl fcn.00403540(uint arg_8h)\n\n{\n    uint var_48h;\n    uint var_38h;\n    uint var_34h;\n    uint var_bp_4h;\n    \n    var_48h = 0x40;\n    sub.KERNEL32.dll_GlobalMemoryStatusEx(&var_48h);\n    fcn.00403230(arg_8h, 0x19, 0x1a, var_38h, var_34h, \"-Xms\");\n    fcn.00403230(arg_8h, 0x1b, 0x1c, var_38h, var_34h, \"-Xmx\");\n    return;\n}\n",
        "token_count": 170
    },
    "004035d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.004035d0(char *s, uint arg_ch)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint auStack296 [70];\n    uint var_bp_ch;\n    \n    iVar3 = sub.KERNEL32.dll_FindResourceExA(*0x411680, 10, 0xc, 0x400);\n    if (iVar3 == 0) {\n        sub.KERNEL32.dll_SetLastError(0);\n        *s = '\\0';\n    }\n    else {\n        iVar3 = sub.KERNEL32.dll_LoadResource(*0x411680, iVar3);\n        if ((iVar3 != 0) && (iVar3 = sub.KERNEL32.dll_LockResource(iVar3),  iVar3 != 0)) {\n            iVar5 = 0;\n            do {\n                cVar1 = *(iVar5 + iVar3);\n                s[iVar5] = cVar1;\n                iVar5 = iVar5 + 1;\n            } while (cVar1 != '\\0');\n            if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                sub.msvcrt.dll_fprintf(*0x409090, \"Resource %d:\\t%s\\n\", 0xc, s);\n            }\n            iVar3 = sub.msvcrt.dll_strlen(s);\n            *(s + iVar3) = 0x20;\n        }\n    }\n    sub.msvcrt.dll_memset(&var_128h, 0, 0x104);\n    iVar3 = sub.msvcrt.dll_strlen(arg_ch);\n    sub.msvcrt.dll_strncpy(&var_128h, arg_ch, iVar3 + -3);\n    iVar3 = sub.msvcrt.dll_strlen(&var_128h);\n    *(iVar3 + &var_128h) = 0x2e6a346c;\n    *(iVar3 + 4 + &var_128h) = 0x696e69;\n    iVar3 = sub.msvcrt.dll__open(&var_128h, 0);\n    if (iVar3 != -1) {\n        if (*0x409090 != 0) {\n            sub.msvcrt.dll_fprintf(*0x409090, \"Loading:\\t%s\\n\", &var_128h);\n        }\n        iVar5 = sub.msvcrt.dll_strlen(s);\n        pcVar6 = s + iVar5;\n        iVar4 = sub.msvcrt.dll__read(iVar3, pcVar6, 0x7c00 - iVar5);\n        bVar2 = true;\n        iVar5 = iVar4;\n        pcVar7 = pcVar6;\n        if (0 < iVar4) {\n            do {\n                cVar1 = *pcVar6;\n                if (cVar1 == '#') {\n                    bVar2 = false;\n                }\n                else if (cVar1 == '\\r' || cVar1 == '\\n') {\n                    bVar2 = true;\n                    if ((s < pcVar7) && (pcVar7[-1] != ' ')) {\n                        *pcVar7 = ' ';\ncode_r0x00403777:\n                        pcVar7 = pcVar7 + 1;\n                    }\n                }\n                else if (bVar2) {\n                    *pcVar7 = cVar1;\n                    goto code_r0x00403777;\n                }\n                pcVar6 = pcVar6 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *pcVar7 = '\\0';\n        if ((0 < iVar4) && (pcVar7[-1] != ' ')) {\n            iVar5 = sub.msvcrt.dll_strlen(s);\n            *(s + iVar5) = 0x20;\n        }\n        sub.msvcrt.dll__close(iVar3);\n    }\n    return;\n}\n",
        "token_count": 903
    },
    "00403b60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint __cdecl fcn.00403b60(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uchar uVar6;\n    uchar uVar7;\n    uint auStackY33100 [8];\n    char cStackY33068;\n    char cStackY33067;\n    uint s;\n    uint uStackY76;\n    int32_t iStackY72;\n    char *pcStackY68;\n    uint uStackY64;\n    uint *puStackY60;\n    int32_t iStackY56;\n    uint uStackY48;\n    uint var_bp_ch;\n    \n    fcn.00406960();\n    sub.msvcrt.dll_memset();\n    iVar2 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError();\n        return 0;\n    }\n    iVar2 = sub.KERNEL32.dll_LoadResource();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = sub.KERNEL32.dll_LockResource();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = 0;\n    do {\n        cVar1 = *(iVar3 + iVar2);\n        *(iVar3 + &fcn.00403b60::s) = cVar1;\n        iVar3 = iVar3 + 1;\n    } while (cVar1 != '\\0');\n    if ((*0x409028 != 0) && (*0x409090 != 0)) {\n        uStackY48 = 0x403e3c;\n        sub.msvcrt.dll_fprintf();\n    }\n    uStackY48 = 0x403c40;\n    sub.msvcrt.dll_memset();\n    uStackY48 = 0x403c57;\n    fcn.00402f40(&stack0xffff7ed4, &fcn.00403b60::s, arg_8h, arg_ch);\n    if (*0x409090 != 0) {\n        uStackY48 = 0x403e19;\n        sub.msvcrt.dll_fprintf();\n    }\n    if ((cStackY33068 == '\\\\') || (cStackY33067 == ':')) {\n        uStackY48 = 0x403c8a;\n        sub.msvcrt.dll_strcpy();\n    }\n    else {\n        uStackY48 = 0x403dce;\n        sub.msvcrt.dll_strncpy();\n        uStackY48 = 0x403dda;\n        iVar2 = sub.msvcrt.dll_strlen();\n        if (*(iVar2 + 0x40909f) != '\\\\') {\n            *(iVar2 + 0x4090a0) = 0x5c;\n        }\n        uStackY48 = 0x403dff;\n        sub.msvcrt.dll_strcat();\n    }\n    uStackY48 = 0x403c96;\n    iVar2 = fcn.00402620(0x4090a0);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (*0x409020 != 0) {\n        puVar4 = &stack0xffff7eb4;\n        for (iVar2 = 5; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n        uStackY48 = 0x403d36;\n        iVar2 = sub.KERNEL32.dll_FindResourceExA();\n        if (iVar2 == 0) {\n            puStackY60 = NULL;\n            uStackY64 = 0x403e4d;\n            sub.KERNEL32.dll_SetLastError();\n            auStackY33100[0]._0_1_ = 0;\n            uVar6 = &stack0xffffffc4 < 0x4;\n            uVar7 = *0x10 == 0x40;\n        }\n        else {\n            puStackY60 = *0x411680;\n            uStackY64 = 0x403d53;\n            iStackY56 = iVar2;\n            pcStackY68 = sub.KERNEL32.dll_LoadResource();\n            uVar6 = 0;\n            uVar7 = pcStackY68 == NULL;\n            if (!uVar7) {\n                iStackY72 = 0x403d62;\n                iVar2 = sub.KERNEL32.dll_LockResource();\n                uVar6 = 0;\n                uVar7 = iVar2 == 0;\n                if (!uVar7) {\n                    iVar3 = 0;\n                    do {\n                        cVar1 = *(iVar3 + iVar2);\n                        *(iVar3 + &stack0xffff7eb4) = cVar1;\n                        iVar3 = iVar3 + 1;\n                    } while (cVar1 != '\\0');\n                    uVar6 = 0;\n                    uVar7 = *0x409028 == 0;\n                    if (!uVar7) {\n                        uVar6 = 0;\n                        uVar7 = *0x409090 == 0;\n                        if (!uVar7) {\n                            uStackY64 = 0x1d;\n                            pcStackY68 = \"Resource %d:\\t%s\\n\";\n                            iStackY72 = *0x409090;\n                            uStackY76 = 0x403e7a;\n                            puStackY60 = &stack0xffff7eb4;\n                            sub.msvcrt.dll_fprintf();\n                        }\n                    }\n                }\n            }\n        }\n        iVar2 = 5;\n        puVar4 = &stack0xffff7eb4;\n        puVar5 = 0x40815c;\n        do {\n            if (iVar2 == 0) break;\n            iVar2 = iVar2 + -1;\n            uVar6 = *puVar4 < *puVar5;\n            uVar7 = *puVar4 == *puVar5;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        } while (uVar7);\n        *0x4111d4 = 0x104;\n        if ((!uVar6 && !uVar7) == uVar6) goto code_r0x00403ca9;\n    }\n    *0x4111d4 = 4;\ncode_r0x00403ca9:\n    puStackY60 = 0x4090a0;\n    uStackY64 = 0x411464;\n    pcStackY68 = 0x403cc4;\n    sub.msvcrt.dll_strcpy();\n    return 1;\n}\n",
        "token_count": 1480
    },
    "00404ee0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00404ee0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char acStackY65564 [32768];\n    uchar auStackY32796 [32748];\n    uint uStackY48;\n    int32_t iStackY44;\n    char *pcStackY40;\n    uint var_bp_ch;\n    \n    fcn.00406960();\n    sub.msvcrt.dll_memset();\n    sub.msvcrt.dll_memset();\n    iVar2 = sub.KERNEL32.dll_FindResourceExA();\n    if (iVar2 == 0) {\n        sub.KERNEL32.dll_SetLastError();\n        acStackY65564[0] = 0;\n    }\n    else {\n        pcStackY40 = sub.KERNEL32.dll_LoadResource();\n        if (pcStackY40 != NULL) {\n            iStackY44 = 0x404f81;\n            iVar2 = sub.KERNEL32.dll_LockResource();\n            if (iVar2 != 0) {\n                iVar4 = 0;\n                do {\n                    cVar1 = *(iVar4 + iVar2);\n                    (&stack0xfffeffe4)[iVar4] = cVar1;\n                    iVar4 = iVar4 + 1;\n                } while (cVar1 != '\\0');\n                if ((*0x409028 != 0) && (*0x409090 != 0)) {\n                    pcStackY40 = \"Resource %d:\\t%s\\n\";\n                    iStackY44 = *0x409090;\n                    uStackY48 = 0x404fcd;\n                    sub.msvcrt.dll_fprintf();\n                }\n            }\n        }\n    }\n    while( true ) {\n        pcStackY40 = 0x405004;\n        iVar2 = sub.msvcrt.dll_strtok();\n        if (iVar2 == 0) break;\n        pcStackY40 = 0x40501b;\n        puVar3 = sub.msvcrt.dll_strchr();\n        *puVar3 = 0;\n        auStackY32796[0] = 0;\n        pcStackY40 = 0x40503d;\n        fcn.00402f40(&stack0xffff7fe4, puVar3 + 1, arg_8h, arg_ch);\n        if (*0x409090 != 0) {\n            pcStackY40 = 0x40505f;\n            sub.msvcrt.dll_fprintf();\n        }\n        pcStackY40 = 0x404ff1;\n        sub.KERNEL32.dll_SetEnvironmentVariableA();\n    }\n    return;\n}\n",
        "token_count": 593
    },
    "00406550": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00406550(void)\n\n{\n    sub.KERNEL32.dll_CloseHandle(*0x4111b4);\n    sub.KERNEL32.dll_CloseHandle(*0x4111b0);\n    return;\n}\n",
        "token_count": 47
    },
    "00406580": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint fcn.00406580(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    ushort uStack32876;\n    uchar auStack32874 [32766];\n    uint s;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack20;\n    uint *var_bp_ch;\n    \n    uStack20 = 0x406590;\n    fcn.00406960();\n    var_bp_ch = &fcn.00406580::s;\n    puVar3 = 0x4111b0;\n    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    uStack20 = 0x4065c1;\n    sub.msvcrt.dll_memset();\n    s = 0x44;\n    uStack20 = 0x4065e2;\n    var_bp_ch = &stack0xffff7f94;\n    sub.msvcrt.dll_memset();\n    uStack32876 = 0x22;\n    uStack20 = 0x4065ff;\n    var_bp_ch = &stack0xffff7f94;\n    sub.msvcrt.dll_strcat();\n    uStack20 = 0x406607;\n    var_bp_ch = &stack0xffff7f94;\n    iVar2 = sub.msvcrt.dll_strlen();\n    *(&stack0xffff7f94 + iVar2) = 0x2022;\n    (&stack0xffff7f94)[iVar2 + 2] = 0;\n    uStack20 = 0x406623;\n    var_bp_ch = &stack0xffff7f94;\n    sub.msvcrt.dll_strcat();\n    iVar2 = *0x4111c0;\n    var_bp_ch = NULL;\n    uStack20 = 0x406666;\n    iVar1 = sub.KERNEL32.dll_CreateProcessA();\n    if (iVar1 != 0) {\n        if (iVar2 == 0) {\n            _pe_dos_header = 0;\n        }\n        else {\n            uStack52 = 0xffffffff;\n            uStack56 = *0x4111b0;\n            uStack60 = 0x4066b9;\n            sub.KERNEL32.dll_WaitForSingleObject();\n            uStack60 = 0;\n            uStack64 = *0x4111b0;\n            uStack68 = 0x4066d1;\n            sub.KERNEL32.dll_GetExitCodeProcess();\n            uStack72 = *0x4111b4;\n            uStack76 = 0x4066e2;\n            sub.KERNEL32.dll_CloseHandle();\n            uStack76 = *0x4111b0;\n            uStack80 = 0x4066f3;\n            sub.KERNEL32.dll_CloseHandle();\n        }\n        return 1;\n    }\n    _pe_dos_header = 0xffffffff;\n    return 0;\n}\n",
        "token_count": 707
    },
    "null": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid main(void)\n\n{\n    char *arg_10h;\n    uint hInst;\n    char cVar1;\n    uint32_t arg_14h;\n    char *pcVar2;\n    bool bVar3;\n    bool bVar4;\n    uint lpStartupInfo;\n    uint var_2ch;\n    uint var_28h;\n    uint var_bp_4h;\n    \n    fcn.00406960();\n    fcn.004068f0();\n    arg_10h = sub.KERNEL32.dll_GetCommandLineA();\n    sub.KERNEL32.dll_GetStartupInfoA(&lpStartupInfo);\n    if (arg_10h != NULL) {\n        for (; cVar1 = *arg_10h,  cVar1 == ' ' || cVar1 == '\\t'; arg_10h = arg_10h + 1) {\n        }\n        if (cVar1 == '\\\"') {\n            do {\n                pcVar2 = arg_10h;\n                arg_10h = pcVar2 + 1;\n                cVar1 = *arg_10h;\n            } while (cVar1 != '\\\"' && cVar1 != '\\0');\n            if (cVar1 == '\\\"') {\n                arg_10h = pcVar2 + 2;\n                cVar1 = *arg_10h;\n            }\n        }\n        else if (cVar1 != ' ' && cVar1 != '\\t') {\n            do {\n                if (cVar1 == '\\0') break;\n                arg_10h = arg_10h + 1;\n                cVar1 = *arg_10h;\n            } while (cVar1 != ' ' && cVar1 != '\\t');\n        }\n        bVar4 = cVar1 == '\\t';\n        bVar3 = cVar1 == ' ';\n        while (bVar3 | bVar4) {\n            arg_10h = arg_10h + 1;\n            bVar4 = *arg_10h == ' ';\n            bVar3 = *arg_10h == '\\t';\n        }\n    }\n    hInst = sub.KERNEL32.dll_GetModuleHandleA(0);\n    arg_14h = 10;\n    if ((var_2ch & 1) != 0) {\n        arg_14h = var_28h;\n    }\n    fcn.004013b0(hInst, 0, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 555
    },
    "00406990": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.00406990(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_10h <= arg_ch) {\n            if (arg_10h == 0) {\n                arg_10h = 1 / 0;\n            }\n            return (arg_ch % arg_10h << 0x20 | arg_8h) / arg_10h & 0xffffffff | arg_ch / arg_10h << 0x20;\n        }\n        uVar6 = CONCAT44(arg_ch, arg_8h) / arg_10h;\n    }\n    else {\n        uVar6 = 0;\n        if (arg_14h <= arg_ch) {\n            uVar6 = 0x1f;\n            if (arg_14h != 0) {\n                for (; arg_14h >> uVar6 == 0; uVar6 = uVar6 - 1) {\n                }\n            }\n            if ((uVar6 ^ 0x1f) == 0) {\n                uVar6 = 1;\n                if (arg_ch <= arg_14h && arg_8h < arg_10h) {\n                    uVar6 = 0;\n                }\n            }\n            else {\n                uVar5 = uVar6 ^ 0x1f;\n                var_1ch._0_1_ = 0x20 - uVar5;\n                uVar1 = arg_14h << (uVar5 & 0x1f) | arg_10h >> (var_1ch & 0x1f);\n                uVar2 = CONCAT44(arg_ch >> (var_1ch & 0x1f), arg_ch << (uVar5 & 0x1f) | arg_8h >> (var_1ch & 0x1f));\n                uVar3 = uVar2 / uVar1;\n                uVar6 = uVar3;\n                uVar7 = uVar2 % uVar1;\n                iVar4 = (uVar3 & 0xffffffff) * (arg_10h << (uVar5 & 0x1f));\n                uVar8 = iVar4 >> 0x20;\n                if ((uVar7 < uVar8) || (uVar8 == uVar7 && arg_8h << (uVar5 & 0x1f) < iVar4)) {\n                    uVar6 = uVar6 - 1;\n                }\n            }\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 745
    },
    "00401950": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nuint __cdecl fcn.00401950(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t var_8h;\n    uint var_bp_4h;\n    \n    sub.USER32.dll_GetWindowThreadProcessId(arg_8h, &var_8h);\n    if ((*0x4111b8 == var_8h) && (uVar1 = sub.USER32.dll_GetWindowLongA(arg_8h, 0xfffffff0),  (uVar1 & 0x10000000) != 0)\n       ) {\n        *0x409014 = 0;\n        sub.USER32.dll_ShowWindow(*0x409070, 0);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 180
    },
    "00402570": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00402570(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = sub.msvcrt.dll_strlen(arg_8h);\n    if (*(iVar1 + -1 + arg_8h) != '\\\\') {\n        *(iVar1 + arg_8h) = 0x5c;\n    }\n    // WARNING: Could not recover jumptable at 0x00406bb0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.msvcrt.dll_strcat)();\n    return;\n}\n",
        "token_count": 179
    },
    "004025b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004025b0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x409024 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(arg_8h);\n        if (*(iVar1 + -1 + arg_8h) != '\\\\') {\n            *(iVar1 + arg_8h) = 0x5c;\n        }\n        sub.msvcrt.dll_strcat(arg_8h, \"bin\\\\java.exe\");\n        return;\n    }\n    iVar1 = sub.msvcrt.dll_strlen(arg_8h);\n    if (*(iVar1 + -1 + arg_8h) != '\\\\') {\n        *(iVar1 + arg_8h) = 0x5c;\n    }\n    sub.msvcrt.dll_strcat(arg_8h, \"bin\\\\javaw.exe\");\n    return;\n}\n",
        "token_count": 192
    },
    "00402f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f10(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    sub.msvcrt.dll_strcat(arg_8h, arg_ch);\n    iVar1 = sub.msvcrt.dll_strlen(arg_8h);\n    *(iVar1 + arg_8h) = 0x3b;\n    return;\n}\n",
        "token_count": 84
    },
    "00406820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406820(void)\n\n{\n    int32_t *piVar1;\n    \n    for (piVar1 = 0x408510; piVar1 < 0x408510; piVar1 = piVar1 + 2) {\n        *(piVar1[1] + 0x400000) = *(piVar1[1] + 0x400000) + *piVar1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00406960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406960(void)\n\n{\n    uint32_t in_EAX;\n    uint *puVar1;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    puVar1 = &stack0x00000004;\n    for (; 0xfff < in_EAX; in_EAX = in_EAX - 0x1000) {\n        puVar1 = puVar1 + -0x400;\n        *puVar1 = *puVar1;\n    }\n    *(puVar1 - in_EAX) = *(puVar1 - in_EAX);\n    // WARNING: Could not recover jumptable at 0x0040698b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 174
    },
    "00401c10": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00401c10(uint s1, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint auStack33068 [3];\n    ushort auStack33056 [130];\n    uchar auStack32796 [32764];\n    uint uStack32;\n    uchar *puStack28;\n    char *pcStack24;\n    uint uStack20;\n    char *var_ch;\n    \n    uStack20 = 0x401c20;\n    fcn.00406960();\n    uStack20 = 0x401c3d;\n    var_ch = &stack0xffff7fe4;\n    sub.msvcrt.dll_memset();\n    var_ch = \"Launch4j\";\n    uStack20 = 0x401c56;\n    sub.KERNEL32.dll_GetEnvironmentVariableA();\n    pcStack24 = \"--l4j-debug\";\n    puStack28 = s1;\n    uStack32 = 0x401c6d;\n    iVar1 = sub.msvcrt.dll_strstr();\n    if (iVar1 == 0) {\n        pcStack24 = \"debug\";\n        uStack32 = 0x401d77;\n        puStack28 = &stack0xffff7fe4;\n        iVar2 = sub.msvcrt.dll_strstr();\n        iVar1 = *0x409090;\n        if (iVar2 == 0) goto code_r0x00401d13;\n    }\n    uStack20 = 0x104;\n    pcStack24 = NULL;\n    uStack32 = 0x401c97;\n    puStack28 = &stack0xffff7ed4;\n    sub.msvcrt.dll_memset();\n    uStack20 = arg_10h;\n    pcStack24 = arg_ch;\n    uStack32 = 0x401cad;\n    puStack28 = &stack0xffff7ed4;\n    sub.msvcrt.dll_strncpy();\n    uStack32 = 0x401cb5;\n    puStack28 = &stack0xffff7ed4;\n    iVar1 = sub.msvcrt.dll_strlen();\n    *(&stack0xffff7ed4 + iVar1) = 0x75616c5c;\n    *(&stack0xffff7ed4 + iVar1 + 4) = 0x3468636e;\n    *(&stack0xffff7ed4 + iVar1 + 8) = 0x6f6c2e6a;\n    *(&stack0xffff7ed4 + iVar1 + 0xc) = 0x67;\n    pcStack24 = 0x408090;\n    uStack32 = 0x401ce1;\n    puStack28 = &stack0xffff7ed4;\n    iVar1 = sub.msvcrt.dll_fopen();\n    if (iVar1 == 0) {\n        *0x409090 = iVar1;\n        return 0;\n    }\n    pcStack24 = \"--l4j-debug-all\";\n    puStack28 = s1;\n    uStack32 = 0x401d04;\n    *0x409090 = iVar1;\n    iVar2 = sub.msvcrt.dll_strstr();\n    if (iVar2 == 0) {\n        pcStack24 = \"debug-all\";\n        uStack32 = 0x401d98;\n        puStack28 = &stack0xffff7fe4;\n        iVar2 = sub.msvcrt.dll_strstr();\n        *0x409028 = 0;\n        if (iVar2 == 0) goto code_r0x00401d13;\n    }\n    *0x409028 = 1;\ncode_r0x00401d13:\n    if (iVar1 != 0) {\n        uStack20 = 0x4080b7;\n        pcStack24 = \"\\n\\nVersion:\\t%s\\n\";\n        uStack32 = 0x401d31;\n        puStack28 = iVar1;\n        sub.msvcrt.dll_fprintf();\n        if (*0x409090 != 0) {\n            puStack28 = *0x409090;\n            pcStack24 = \"CmdLine:\\t%s %s\\n\";\n            var_ch = s1;\n            uStack20 = arg_ch;\n            uStack32 = 0x401d59;\n            sub.msvcrt.dll_fprintf();\n        }\n    }\n    return 1;\n}\n",
        "token_count": 954
    }
}