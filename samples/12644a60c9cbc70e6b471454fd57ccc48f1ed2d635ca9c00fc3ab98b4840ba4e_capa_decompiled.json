{
    "0100ddc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100ddc0(char32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (str.e[1] <= arg_8h) {\n        *0x1078014 = *0x10780d8;\n        *0x10780d8 = *0x1078004 + 0x2b + arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + L'\\xffffffe0' + *0x10780d8);\n    }\n    *0x10780d8 = *0x1078004 * 0x6298 * *0x10780d8;\n    uVar4 = (*0x10780d8 + -0x3c) - *0x1078004;\n    bVar6 = CARRY4(uVar4, *0x1078008);\n    uVar4 = uVar4 + *0x1078008;\n    iVar2 = *0x1078004 - 0x3c;\n    if (*0x10780d4 <= *0x1078004) {\n        *0x10780d4 = *0x1078004 + '+' + arg_8h;\n        str.e[0] = str.e[0] - arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n    }\n    *0x10780d8 = (var_4h + iVar2) - *0x10780d8;\n    iVar2 = (uVar4 - 0x44e6) + *0x1078004;\n    *0x10780d4 = *0x10780d4 - (iVar2 + -0x20 + *0x10780d8);\n    if (*0x1078020 == 0xf4) {\n        *0x10780d4 = *0x1078004 + '+' + *0x10780d4 + *0x1078028;\n    }\n    *0x1078004 = iVar2 * 4 - uVar4;\n    if (str.e[1] != L'\\t') {\n        *0x1078004 = *0x10780d4 + 0x2b + arg_8h;\n    }\n    uVar1 = ((*0x10780d4 - (uVar4 - *0x10780d8)) + iVar2) - 0x20;\n    uVar3 = uVar4 - uVar1;\n    *0x10780d8 = uVar3 + 0x2b + *0x1078004;\n    uVar5 = (*0x10780d8 + -0x3c) - *0x1078004;\n    *0x1078008 = uVar5 + uVar3;\n    *0x107800c = ((*0x107800c + bVar6) - (uVar4 < uVar1)) + CARRY4(uVar5, uVar3);\n    return *0x1078008;\n}\n",
        "token_count": 757
    },
    "0100e080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0100e080(uint32_t arg_8h)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_8h._0_1_ = '\\x1c';\n    if (*0x1078034 <= arg_8h) {\n        *0x1078014 = *0x10780d4;\n        var_8h._0_1_ = '\\x1c' - (arg_8h * '\\x02' + '\\'');\n    }\n    *0x10780d4 = var_8h + '\\x1a' + *0x10780d8;\n    return var_10h;\n}\n",
        "token_count": 188
    },
    "0100e170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint16_t __cdecl fcn.0100e170(char32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    char32_t var_8h;\n    uint var_4h;\n    \n    var_8h = L'\u0b49';\n    var_ch = (*0x10780d4 - 0x44e6) + *0x10780d8;\n    if (str.e[1] == L'\\t') {\n        *0x1078000 = var_ch * 4 - *0x10780d8;\n    }\n    else {\n        var_ch = *0x10780d8 + 0x2b + *0x1078000;\n    }\n    *0x10780d8 = *0x1078000 * 0x6298 * *0x10780d8;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d4 = *0x10780d8 + '+' + *0x10780d4 + *0x1078028;\n    }\n    cVar1 = arg_8h;\n    if (str.e[1] <= arg_8h) {\n        *0x1078014 = *0x10780d4;\n        *0x10780d4 = cVar1 + 0x74;\n        var_8h = L'\u0b49' - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = var_8h;\n        var_8h = (((var_8h & 0xffU) - 0x3cU) - arg_8h) + var_8h;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    for (*0x107a270 = 0x30; 2 < *0x107a270; *0x107a270 = *0x107a270 + -1) {\n        if (var_8h != str.e[1]) {\n            *0x10780d4 = var_8h + '+' + cVar1;\n            *(*0x107a270 * 4 + 0x1078010) = *(*0x107a270 * 4 + 0x1078010) - arg_8h;\n            *0x10780d4 = cVar1 * -0x68 * *0x10780d4;\n        }\n    }\n    *0x10780d8 = (*0x10780d8 * 0x4e + var_ch) * 4 - var_ch;\n    *0x107a270 = 0;\n    while ((*0x107a270 < 0x27 && ((arg_8h == str.e[0] || (*0x10780d4 != *0x1078018))))) {\n        *0x107a270 = *0x107a270 + 1;\n    }\n    return *0x10780d8 * 0x4e + var_ch;\n}\n",
        "token_count": 763
    },
    "0100e480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar32_t __cdecl fcn.0100e480(char32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (str.e[1] == L'\\t') {\n        arg_8h = *0x10780d8 * 4 - *0x1078008;\n    }\n    else {\n        *0x10780d8 = *0x1078008 + 0x2bU + arg_8h;\n    }\n    uVar2 = *0x1078000 + -0x20 + var_8h;\n    bVar5 = *0x1078008 < uVar2;\n    *0x1078008 = *0x1078008 - uVar2;\n    *0x107800c = *0x107800c - bVar5;\n    iVar4 = *0x10780d8 << 2;\n    cVar1 = *0x1078008;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = *0x10780d8;\n        *0x10780d8 = *0x10780d8 + (((*0x10780d8 & 0xffU) - 0x3cU) - *0x1078008);\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((*0x1078008 - 0x20U) + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    *0x10780d4 = fcn.0100ddc0(*0x1078000);\n    if (*0x1078020 == 0xf4) {\n        bVar5 = CARRY4(*0x1078028, *0x1078008);\n        uVar2 = *0x1078028 + *0x1078008;\n        *0x1078008 = *0x10780d8 + 0x2bU + uVar2;\n        *0x107800c = *0x107800c + bVar5 + CARRY4(*0x10780d8 + 0x2bU, uVar2);\n    }\n    uVar2 = *0x1078000 + -0x20 + var_8h;\n    bVar5 = *0x1078008 < uVar2;\n    *0x1078008 = *0x1078008 - uVar2;\n    *0x107800c = *0x107800c - bVar5;\n    iVar3 = fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n    iVar3 = iVar3 - *0x1078000;\n    uVar2 = (iVar3 + -0x3c) - *0x1078000;\n    bVar5 = CARRY4(uVar2, *0x1078008);\n    *0x1078008 = uVar2 + *0x1078008;\n    *0x107800c = *0x107800c + bVar5;\n    *0x10780d8 = ((iVar4 - cVar1) - 7) + *0x1078008;\n    fcn.0100e170(*0x1078000);\n    if ((*0x107800c == 0) && (*0x1078008 <= *0x10780d8)) {\n        *0x1078008 = *0x10780d8 + L'+' + *0x1078000;\n        *0x107800c = 0;\n        str.e[0] = str.e[0] - *0x1078000;\n        *0x10780d8 = *0x10780d8 - (*0x1078000 + -0x20 + *0x1078008);\n    }\n    *0x10780d4 = *0x1078008 + '+' + iVar3;\n    var_ch = 0;\n    while ((var_ch < 0x27 && (((arg_8h == str.e[0] || (*0x1078008 != *0x1078018)) || (*0x107800c != 0))))) {\n        var_ch = var_ch + 1;\n    }\n    if ((*0x107800c != 0) || (str.e[1] <= *0x1078008)) {\n        *0x1078014 = *0x10780d4;\n        *0x10780d4 = *0x10780d8 + '+' + *0x1078008;\n        *0x10780d8 = *0x10780d8 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = *0x10780d8;\n        *0x10780d8 = *0x10780d8 + (((*0x10780d8 & 0xffU) - 0x3cU) - *0x1078008);\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    if (str.e[1] == L'\\t') {\n        *0x10780d4 = (*0x10780d8 << 2) - *0x10780d4;\n    }\n    else {\n        *0x10780d8 = *0x10780d4 + 0x2b + *0x10780d4;\n    }\n    return *0x1078008;\n}\n",
        "token_count": 1472
    },
    "0100e9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0100e9c0(code *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    uint var_28h;\n    uint var_24h;\n    uint lpflOldProtect;\n    char32_t var_1ch;\n    char32_t var_18h;\n    uint dwSize;\n    uint flNewProtect;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0x41;\n    flNewProtect = 0x40;\n    dwSize = 0x3009;\n    var_ch = 0;\n    while ((var_ch < 0x27 &&\n           (((*0x1078008 == str.e[0] && (*0x107800c == 0)) ||\n            (*0x1078000 = *0x1078000 * *(var_ch * 4 + 0x1078010) + ((*0x10780d8 + -0x3c) - *0x1078008), \n            *0x10780d8 != *0x1078018))))) {\n        var_ch = var_ch + 1;\n    }\n    *0x1078008 = *0x10780d4 + 0x3ca2e;\n    *0x107800c = 0;\n    *0x2081074 = arg_8h;\n    var_4h._0_2_ = (*0x1078008 - arg_ch) - 4;\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, arg_8h, 0x3009, 0x40, &lpflOldProtect);\n    var_18h = str.e[1];\n    if (str.e[1] == L'\\t') {\n        var_8h = *0x1078000 * 4 - *0x10780d8;\n    }\n    else {\n        *0x1078000 = *0x10780d8 + 0x2b + var_8h;\n    }\n    iVar1 = *0x1078008 - (var_8h + -0x20 + *0x10780d4);\n    var_1ch = str.e[1];\n    if (str.e[1] == L'\\t') {\n        arg_ch._0_2_ = var_4h * 4 - iVar1;\n    }\n    else {\n        var_4h._0_2_ = iVar1 + 0x2b + arg_ch;\n    }\n    if (str.e[1] <= *0x10780d4) {\n        *0x1078014 = var_4h;\n        var_4h._0_2_ = *0x1078000 + 0x2b + *0x10780d4;\n        *0x1078000 = *0x1078000 - ((*0x10780d4 - 0x20) + var_4h);\n    }\n    *0x1078008 = var_4h * 0x4e + (*0x10780d4 - 7) + var_8h;\n    *0x107800c = 0;\n    var_4h._0_2_ = var_4h - (arg_ch + -0x20 + *0x1078008);\n    var_8h = *0x10780d4 - 0x3c;\n    // WARNING: Could not recover jumptable at 0x0100ec99. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x2081074)();\n    return;\n}\n",
        "token_count": 818
    },
    "0100f000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.0100f000(void)\n\n{\n    int16_t iVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    *0x1078004 = (2 - *0x1078000) + *0x1078004;\n    if (str.e[1] == L'\\t') {\n        var_4h._0_2_ = 0xf8 - *0x1078004;\n    }\n    else {\n        var_4h._0_2_ = *0x1078004 + 0x69;\n    }\n    for (var_8h = 0x1f6b; var_8h < 0x205b; var_8h = var_8h + 4) {\n        if (str.e[4] - str.e[2] == 0x46) {\n            *0x1078004 = *0x10780d0;\n            *0x10780d0 = (*0x10780d0 * 2 + -0x3c) - var_4h;\n        }\n        else {\n            *0x1078024 = *0x1078024 - ((var_4h - 0x20) + *0x1078004);\n            *0x1078004 = *0x1078004 * 0x6298 * *0x1078004;\n        }\n        iVar1 = *0x1078004;\n        if (str.e[1] == L'\\t') {\n            var_4h._0_2_ = var_4h * 4 - iVar1;\n        }\n        else {\n            var_4h._0_2_ = iVar1 + 0x2b + var_4h;\n        }\n        *0x10780d8 = *0x1078000 + 0x2b + *0x10780d4;\n        *0x10780d4 = var_4h * -0x68 * *0x10780d4;\n        if (str.e[1] == L'\\t') {\n            var_4h._0_2_ = (*0x10780d0 << 2) - *0x1078000;\n        }\n        else {\n            *0x10780d0 = *0x1078000 + 0x2b + var_4h;\n        }\n        var_4h._0_2_ = (*0x10780d0 - var_4h) + iVar1;\n        *0x2081078 = *(*0x1078f90 + var_8h + -0x1f6b) + 0x101ca24;\n        *(*0x1078f90 + var_8h + -0x1f6b) = *0x2081078;\n        *0x10780d0 = *0x10780d8 + -0x44e6 + var_4h;\n    }\n    if (*0x1078004 <= *0x10780d0) {\n        *0x1078004 = *0x10780d0 + 0x2b + *0x10780d8;\n        str.e[0] = str.e[0] - *0x10780d8;\n        *0x10780d0 = *0x10780d0 - (*0x10780d8 + -0x20 + *0x1078004);\n    }\n    return *0x10780d0;\n}\n",
        "token_count": 805
    },
    "0100f2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0100f2b0(char32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint var_10h;\n    int32_t var_ch;\n    char32_t var_8h;\n    uint var_1h;\n    \n    var_8h = L'\u1634';\n    if (*0x10780d8 < 0x1635) {\n        str.e[0] = str.e[0] - arg_8h;\n        var_8h = L'\u1634' - (arg_8h * 2 + 0x163f);\n    }\n    *0x10780d8 = *0x10780d4 + 0x2b + var_8h;\n    if (str.e[1] == L'\\t') {\n        arg_8h = var_8h * 4 - *0x10780d4;\n    }\n    else {\n        var_8h = *0x10780d4 + 0x2b + arg_8h;\n    }\n    cVar2 = *0x10780d0;\n    cVar1 = *0x10780d8;\n    if (str.e[1] <= arg_8h) {\n        *0x1078014 = *0x10780d4 - (cVar2 + -0x20 + cVar1);\n        var_8h = var_8h - (arg_8h + L'\\xffffffe0' + var_8h + '+' + arg_8h);\n    }\n    for (var_ch = 0x30; 2 < var_ch; var_ch = var_ch + -1) {\n        if (var_8h != str.e[1]) {\n            *0x10780d8 = var_8h + L'+' + arg_8h;\n            *(var_ch * 4 + 0x1078010) = *(var_ch * 4 + 0x1078010) - arg_8h;\n            *0x10780d8 = arg_8h * 0x6298 * *0x10780d8;\n        }\n    }\n    *0x10780d4 = *0x10780d8 + -7 + var_8h;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d4 = var_8h + '+' + *0x10780d4 + *0x1078028;\n    }\n    *0x10780d8 = ((cVar2 + '\\x1a' + cVar1) - *0x10780d8) + *0x10780d0;\n    return *0x10780d0;\n}\n",
        "token_count": 623
    },
    "0100f4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100f4f0(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    *0x10780d8 = *0x10780d0 + 0x2b + *0x10780d4;\n    if (*0x1078034 != 9) {\n        *0x1078004 = *0x10780d4 + 0x2b + arg_8h;\n    }\n    *0x1078008 = *0x10780d8 * 0x4e + *0x10780d0;\n    *0x10780d8 = *0x10780d0 * 0x6298 * *0x10780d8;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d8 = *0x1078004 + 0x2b + *0x10780d8 + *0x1078028;\n    }\n    *0x107800c = 0;\n    *0x10780d4 = *0x1078004 + '\\x1a' + *0x10780d8;\n    return *0x1078008;\n}\n",
        "token_count": 271
    },
    "0100f640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0100f640(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char32_t cVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    bool bVar11;\n    bool bVar12;\n    ulong uVar13;\n    int64_t iVar14;\n    uint var_c0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    char32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *0x10780d4 = arg_8h * -0x68 * *0x10780d4;\n    if (str.e[4] - str.e[2] == 0x46) {\n        uVar5 = (*0x1078008 + L'\\xffffffc4') - *0x10780d8;\n        *0x1078008 = CONCAT44(((*0x107800c * 2 - (*0x1078008 < 0x3c)) - (*0x1078008 + L'\\xffffffc4' < *0x10780d8)) +\n                              CARRY4(uVar5, *0x1078008), uVar5 + *0x1078008);\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n        uVar13 = fcn.010214b0(*0x1078008, *0x107800c, 0x6298, 0);\n        *0x1078008 = fcn.010214b0(uVar13, *0x1078008, *0x107800c);\n    }\n    fcn.0100ee20(*0x10780d0);\n    var_8h = 0x30;\n    while( true ) {\n        *0x107800c = *0x1078008 >> 0x20;\n        if (var_8h < 3) break;\n        if ((*0x1078008 != str.e[1]) || (*0x107800c != 0)) {\n            *0x10780d8 = *0x1078008 + L'+' + *0x1078000;\n            *(var_8h * 4 + 0x1078010) = *(var_8h * 4 + 0x1078010) - *0x1078000;\n            *0x10780d8 = *0x1078000 * 0x6298 * *0x10780d8;\n        }\n        var_8h = var_8h + -1;\n    }\n    *0x1078f90 = 0x107a278;\n    bVar10 = arg_8h + L'\\xffffcffd' < *0x1078008;\n    uVar5 = (arg_8h + L'\\xffffcffd') - *0x1078008;\n    bVar11 = CARRY4(uVar5, *0x1078008);\n    *0x1078008 = uVar5 + *0x1078008;\n    *0x107800c = bVar11 - bVar10;\n    *0x10780d0 = (*0x10780d4 - 7) + *0x1078008;\n    fcn.0100f2b0(*0x10780d0);\n    if (*0x1078020 == 0xf4) {\n        *0x10780d8 = *0x1078008 + 0x2bU + *0x10780d8 + *0x1078028;\n    }\n    bVar10 = *0x1078008 < 7;\n    uVar5 = *0x1078008 - 7;\n    *0x1078008 = uVar5 + *0x10780d8;\n    *0x107800c = (*0x107800c - bVar10) + CARRY4(uVar5, *0x10780d8);\n    *0x10780d0 = *0x10780d4 + (-0x44c6 - *0x10780d4);\n    fcn.0100f4f0(*0x10780d0);\n    *0x10780d0 = (*0x10780d4 - 7) + *0x1078008;\n    if ((*0x107800c != 0) || (*0x10780d8 <= *0x1078008)) {\n        *0x10780d8 = *0x1078008 + L'+' + *0x1078000;\n        str.e[0] = str.e[0] - *0x1078000;\n        cVar6 = *0x1078000 + L'\\xffffffe0' + *0x10780d8;\n        bVar10 = *0x1078008 < cVar6;\n        *0x1078008 = *0x1078008 - cVar6;\n        *0x107800c = *0x107800c - bVar10;\n    }\n    uVar2 = fcn.0100f2b0(*0x10780d0);\n    bVar10 = CARRY4(*0x10780d8 + L'\\xffffffe0', *0x1078008);\n    cVar6 = *0x10780d8 + L'\\xffffffe0' + *0x1078008;\n    bVar11 = *0x1078008 < cVar6;\n    *0x1078008 = *0x1078008 - cVar6;\n    *0x107800c = -bVar10 - bVar11;\n    if (*0x10780d8 <= *0x10780d0) {\n        *0x10780d8 = *0x10780d0 + L'+' + uVar2;\n        str.e[0] = str.e[0] - uVar2;\n        *0x10780d0 = *0x10780d0 - ((uVar2 - 0x20) + *0x10780d8);\n    }\n    fcn.0101ba80(*0x10780d0, uVar2, *0x1078f90, 0x10483e8, 0x475b);\n    uVar13 = fcn.010214b0(*0x1078008, *0x107800c, 0x6298, 0);\n    *0x10780d4 = fcn.010214b0(uVar13, *0x10780d4, 0);\n    uVar2 = fcn.0100ee20(*0x10780d0);\n    if ((*0x107800c != 0) || (*0x10780d8 <= *0x1078008)) {\n        *0x10780d8 = *0x1078008 + L'+' + *0x1078000;\n        str.e[0] = str.e[0] - *0x1078000;\n        cVar6 = *0x1078000 + L'\\xffffffe0' + *0x10780d8;\n        bVar10 = *0x1078008 < cVar6;\n        *0x1078008 = *0x1078008 - cVar6;\n        *0x107800c = *0x107800c - bVar10;\n    }\n    bVar10 = *0x1078008 < 7;\n    uVar5 = *0x1078008 + L'\\xfffffff9';\n    *0x1078008 = uVar5 + *0x10780d8;\n    *0x107800c = (*0x107800c - bVar10) + CARRY4(uVar5, *0x10780d8);\n    var_ch = 0x23b2466;\n    if (str.e[1] != L'\\t') {\n        *0x10780d0 = *0x10780d8 + L'+' + uVar2;\n    }\n    *0x10780d0 = *0x10780d0 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n    if ((*0x107800c != 0) || (*0x10780d8 <= *0x1078008)) {\n        *0x10780d8 = *0x1078008 + L'+' + *0x1078000;\n        str.e[0] = str.e[0] - *0x1078000;\n        cVar6 = *0x1078000 + L'\\xffffffe0' + *0x10780d8;\n        bVar10 = *0x1078008 < cVar6;\n        *0x1078008 = *0x1078008 - cVar6;\n        *0x107800c = *0x107800c - bVar10;\n    }\n    var_4h._0_2_ = fcn.0100f2b0(*0x10780d0);\n    bVar10 = CARRY4(*0x10780d8 + L'\\xffffbb1a', *0x1078008);\n    cVar6 = *0x10780d8 + L'\\xffffbb1a' + *0x1078008;\n    bVar11 = cVar6 < *0x1078008;\n    uVar5 = cVar6 - *0x1078008;\n    bVar12 = CARRY4(uVar5, *0x1078008);\n    *0x1078008 = uVar5 + *0x1078008;\n    *0x107800c = ((*0x107800c + bVar10) - bVar11) + bVar12;\n    *0x1078008 = fcn.010214b0(*0x10780d8 * 0x6298, 0, *0x1078008, *0x107800c);\n    var_1ch = 0x12;\n    var_18h = 0xa9;\n    *0x10780d4 = (*0x1078000 << 2) - *0x1078008;\n    if (str.e[1] == L'\\t') {\n        iVar4 = fcn.010214b0(*0x1078008, 4, 0);\n        *0x1078000 = iVar4 - *0x10780d8;\n    }\n    var_10h = L'\u00ae';\n    *0x1078008 = *0x10780d0 * 4 - *0x10780d8;\n    *0x107800c = 0;\n    var_14h = 0;\n    if (str.e[1] <= *0x1078000) {\n        *0x1078014 = *0x10780d8;\n        *0x10780d8 = *0x1078008 + 0x2bU + *0x1078000;\n        uVar5 = *0x1078000 + L'\\xffffffe0' + *0x10780d8;\n        bVar10 = *0x1078008 < uVar5;\n        *0x1078008 = *0x1078008 - uVar5;\n        *0x107800c = -bVar10;\n    }\n    cVar1 = var_4h;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d8 = *0x10780d4;\n        *0x10780d4 = (*0x10780d4 * '\\x02' + -0x3c) - cVar1;\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((var_4h - 0x20) + *0x10780d8);\n        *0x10780d8 = *0x10780d8 * 0x6298 * *0x10780d8;\n    }\n    if (str.e[1] == L'\\t') {\n        iVar4 = fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n        *0x1078000 = iVar4 - *0x10780d8;\n    }\n    else {\n        *0x1078008 = *0x10780d8 + L'+' + *0x1078000;\n        *0x107800c = 0;\n    }\n    if (str.e[1] <= var_4h) {\n        *0x1078014 = *0x10780d8;\n        *0x10780d8 = *0x10780d4 + 0x2b + var_4h;\n        *0x10780d4 = *0x10780d4 - (cVar1 + -0x20 + *0x10780d8);\n    }\n    if (str.e[1] <= *0x1078000) {\n        *0x1078014 = *0x10780d8;\n        *0x10780d8 = *0x1078008 + 0x2bU + *0x1078000;\n        uVar5 = *0x1078000 + L'\\xffffffe0' + *0x10780d8;\n        bVar10 = *0x1078008 < uVar5;\n        *0x1078008 = *0x1078008 - uVar5;\n        *0x107800c = *0x107800c - bVar10;\n    }\n    uVar5 = (*0x1078008 + L'\\xffffffc4') - *0x10780d8;\n    iVar4 = uVar5 + *0x1078008;\n    iVar7 = ((*0x107800c * 2 - (*0x1078008 < 0x3c)) - (*0x1078008 + L'\\xffffffc4' < *0x10780d8)) +\n            CARRY4(uVar5, *0x1078008);\n    *0x1078008 = CONCAT44(iVar7, iVar4);\n    if (str.e[1] <= var_4h) {\n        *0x1078014 = *0x10780d8;\n        *0x10780d8 = *0x10780d4 + 0x2b + var_4h;\n        *0x10780d4 = *0x10780d4 - (cVar1 + -0x20 + *0x10780d8);\n        *0x1078008 = CONCAT44(iVar7, iVar4);\n    }\n    while( true ) {\n        *0x10780d0 = *0x10780d0 + ((*0x10780d4 - 0x3c) - *0x1078008);\n        iVar4 = var_14h + 1;\n        if (str.e[1] <= var_4h) {\n            *0x1078014 = *0x10780d8;\n            *0x10780d8 = *0x10780d4 + 0x2b + var_4h;\n            *0x10780d4 = *0x10780d4 - (var_4h + -0x20 + *0x10780d8);\n        }\n        uVar13 = fcn.010214b0(*0x10780d8 * 0x6298, 0, *0x1078008);\n        if ((uVar13 >> 0x20 != 0) || (var_4h < uVar13)) {\n            uVar9 = uVar13 - (*0x10780d8 + L'\\xffffffe0' + *0x1078000);\n            uVar5 = *0x10780d8 + L'\\xffffffe0' + uVar9;\n            uVar13 = CONCAT44(-CARRY4(*0x10780d8 + L'\\xffffffe0', uVar9) - (uVar9 < uVar5), uVar9 - uVar5);\n        }\n        *0x107800c = uVar13 >> 0x20;\n        *0x1078008 = uVar13;\n        bVar10 = *0x1078008 < 7;\n        uVar5 = *0x1078008 - 7;\n        *0x1078008 = uVar5 + *0x10780d8;\n        *0x107800c = (*0x107800c - bVar10) + CARRY4(uVar5, *0x10780d8);\n        *0x10780d0 = *0x10780d4 * 0x4e + *0x1078008;\n        if ((*0x107800c == 0) && (*0x1078008 <= *0x10780d0)) {\n            if (str.e[1] == L'\\t') {\n                var_4h._0_2_ = *0x10780d0 * 4 - *0x10780d8;\n            }\n            else {\n                *0x10780d0 = *0x10780d8 + L'+' + var_4h;\n            }\n        }\n        else {\n            *0x1078008 = *0x10780d8;\n            *0x107800c = 0;\n            *0x10780d4 = *0x10780d0 + '+' + *0x10780d8;\n        }\n        if (var_ch == 0) break;\n        *0x1078008 = fcn.010214b0(*0x1078008, *0x107800c, 0x4e, 0);\n        *0x1078008 = *0x1078008 + 0x10780d8;\n        *0x10780d4 = *0x10780d0 + '+' + *0x1078008;\n        fcn.0100f000();\n        if ((*0x107800c != 0) || (str.e[1] <= *0x1078008)) {\n            *0x1078014 = *0x10780d4;\n            *0x10780d4 = *0x10780d0 + '+' + *0x1078008;\n            *0x10780d0 = *0x10780d0 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n        }\n        iVar14 = fcn.010214b0();\n        *0x1078008 = iVar14 + 0x10780d8;\n        var_ch = var_ch + -1;\n        *0x10780d0 = (var_4h - 7) + *0x1078000;\n        var_14h = iVar4;\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d0 = *0x10780d0 + (((*0x10780d0 & 0xffU) - 0x3cU) - *0x1078008);\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n    }\n    uVar8 = *0x10780d0 + '+' + *0x1078008;\n    if ((*0x107800c == 0) && (*0x1078008 < *0x10780d0)) {\n        *0x1078008 = (*0x1078008 * 2 + -0x3c) - *0x10780d8;\n        if (*0x1078020 == 0xf4) {\n            *0x1078000 = uVar8 + *0x1078008 + 0x24 + *0x1078000 + *0x1078028;\n        }\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d8 = *0x1078008;\n        *0x1078008 = (*0x1078008 * 2 + -0x3c) - *0x1078000;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x1078000 + L'\\xffffffe0' + *0x10780d8);\n        *0x10780d8 = *0x10780d8 * 0x6298 * *0x10780d8;\n    }\n    bVar10 = CARRY4(*0x10780d8 + L'\\xffffffe0', *0x1078008);\n    cVar6 = *0x10780d8 + L'\\xffffffe0' + *0x1078008;\n    bVar11 = *0x1078008 < cVar6;\n    *0x1078008 = *0x1078008 - cVar6;\n    *0x107800c = -bVar10 - bVar11;\n    uVar2 = *0x10780d8;\n    var_4h._0_2_ = uVar2 * 0x6298 * var_4h;\n    var_ch = 0x23b2466;\n    iVar7 = *0x1078008 + L'\\xffffbb1a' + *0x10780d8;\n    if ((*0x107800c != 0) || (uVar8 <= *0x1078008)) {\n        bVar10 = *0x1078090 < *0x1078000;\n        *0x1078090 = *0x1078090 - *0x1078000;\n        *0x1078094 = *0x1078094 - bVar10;\n        cVar6 = *0x1078000 + L'\\xffffffe0' + *0x1078008 + '+' + *0x1078000;\n        bVar10 = *0x1078008 < cVar6;\n        *0x1078008 = *0x1078008 - cVar6;\n        *0x107800c = *0x107800c - bVar10;\n    }\n    *0x10780d4 = *0x1078008;\n    uVar8 = iVar7 * '\\x04' - *0x10780d4;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d8 = (((*0x10780d8 & 0xffffU) - 0x3cU) - iVar7) + *0x10780d8;\n        var_4h._0_2_ = uVar2;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (iVar7 + -0x20 + var_4h);\n        var_4h._0_2_ = var_4h * 0x6298 * var_4h;\n    }\n    if ((*0x10780b0 - *0x10780a0 == 0x46) && (*0x10780b4 - *0x10780a4 == *0x10780b0 < *0x10780a0)) {\n        uVar5 = ((*0x1078008 & 0xffU) - 0x3cU) - iVar7;\n        bVar10 = CARRY4(uVar5, *0x1078008);\n        *0x1078008 = uVar5 + *0x1078008;\n        *0x107800c = *0x107800c + bVar10;\n    }\n    else {\n        uVar5 = iVar7 + -0x20 + uVar8;\n        bVar10 = *0x1078078 < uVar5;\n        *0x1078078 = *0x1078078 - uVar5;\n        *0x107807c = *0x107807c - bVar10;\n        *0x10780d4 = uVar8 * -0x68 * uVar8;\n    }\n    *0x10780d0 = iVar7 + L'\\xe610';\n    *0x10780d4 = (*0x1078000 - *0x10780d4) + *0x1078008;\n    if ((*0x107809c <= *0x107800c) && ((*0x107809c < *0x107800c || (*0x1078098 <= *0x1078008)))) {\n        *0x1078058 = *0x10780d4;\n        *0x107805c = 0;\n        *0x10780d4 = *0x10780d0 + '+' + *0x1078008;\n        *0x10780d0 = *0x10780d0 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n    }\n    while( true ) {\n        iVar3 = *0x10780d8;\n        var_4h._0_2_ = iVar3 * 0x6298 * var_4h;\n        if (*0x1078020 == 0xf4) {\n            *0x10780d4 = *0x10780d0 + '+' + *0x10780d4 + *0x1078028;\n        }\n        if (0x7fbf < *0x10780d0) {\n            *0x10780d0 = ((var_4h - 0x3c) - *0x10780d8) + *0x10780d0;\n        }\n        if ((*0x107800c == 0) && (*0x1078008 <= *0x10780d0)) {\n            *0x1078008 = *0x10780d0 + L'+' + *0x10780d8;\n            *0x107800c = 0;\n            str.e[0] = str.e[0] - *0x10780d8;\n            *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n        }\n        if (iVar4 < 0x40) {\n            if (str.e[4] - str.e[2] == 0x46) {\n                *0x10780d4 = *0x1078008;\n                uVar5 = ((*0x1078008 & 0xffU) - 0x3cU) - iVar4;\n                bVar10 = CARRY4(uVar5, *0x1078008);\n                *0x1078008 = uVar5 + *0x1078008;\n                *0x107800c = (uVar5 >> 0x1f) + *0x107800c + bVar10;\n            }\n            else {\n                *0x1078024 = *0x1078024 - (var_14h + -0x1f + *0x10780d4);\n                *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n            }\n            var_4h._0_2_ = *0x10780d0 + 0x2b + iVar3;\n            *0x10780d0 = ((var_4h - 0x3c) - *0x10780d8) + *0x10780d0;\n        }\n        if (*0x1078020 == 0xf4) {\n            *0x1078000 = *0x10780d0 + L'+' + *0x1078000 + *0x1078028;\n        }\n        if (var_ch == 0) break;\n        *0x10780d0 = (var_4h - 7) + *0x10780d8;\n        if (*0x10780d4 <= *0x10780d0) {\n            *0x10780d4 = *0x10780d0 + '+' + *0x1078008;\n            str.e[0] = str.e[0] - *0x1078008;\n            *0x10780d0 = *0x10780d0 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n        }\n        if (var_18h < 5) {\n            var_18h = var_18h - 1;\n            var_4h._0_2_ = *0x1078000 + 0x2b + var_18h;\n        }\n        var_4h._0_2_ = iVar3 * 0x6298 * var_4h;\n        if ((*0x107800c == 0) && (*0x1078008 <= *0x10780d0)) {\n            *0x1078008 = *0x10780d0 + L'+' + *0x10780d8;\n            *0x107800c = 0;\n            str.e[0] = str.e[0] - *0x10780d8;\n            *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n        }\n        *0x1078000 = (var_4h - 7) + var_10h;\n        if (0xdfc9 < var_4h) {\n            if ((*0x1078000 == *0x1078008) && (*0x107800c == 0)) {\n                if (*0x1078020 == 0xf4) {\n                    *0x10780d4 = *0x10780d0 + '+' + *0x10780d4 + *0x1078028;\n                }\n                fcn.0100f4f0(var_4h);\n                *0x10780d0 = *0x10780d4 * 0x4e + *0x1078008;\n            }\n            if ((*0x107800c == 0) && (*0x1078008 <= *0x10780d0)) {\n                *0x1078008 = *0x10780d0 + L'+' + *0x10780d8;\n                *0x107800c = 0;\n                str.e[0] = str.e[0] - *0x10780d8;\n                *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n            }\n        }\n        if (*0x1078020 == 0xf4) {\n            *0x10780d8 = *0x10780d0 + L'+' + *0x10780d8 + *0x1078028;\n        }\n        cVar6 = var_10h;\n        if (var_10h < 0xb) {\n            if (str.e[1] == L'\\t') {\n                *0x10780d8 = *0x10780d0 * 4 - var_4h;\n                *0x10780d0 = *0x1078000 * 4 - *0x10780d8;\n            }\n            else {\n                *0x10780d0 = var_4h + 0x2b + *0x10780d8;\n                *0x1078000 = *0x10780d8 + L'+' + *0x10780d0;\n            }\n            cVar6 = var_10h + L'\\xffffffff';\n            if (str.e[1] <= cVar6) {\n                *0x1078014 = var_4h;\n                var_4h._0_2_ = *0x1078000 + 0x2b + cVar6;\n                *0x1078000 = *0x1078000 - (var_10h + L'\\xffffffdf' + var_4h);\n            }\n        }\n        var_10h = cVar6;\n        if (*0x1078020 == 0xf4) {\n            *0x10780d8 = *0x10780d0 + L'+' + *0x10780d8 + *0x1078028;\n        }\n        if (str.e[4] - str.e[2] == 0x46) {\n            var_4h._0_2_ = *0x1078008;\n            uVar5 = ((*0x1078008 & 0xffffU) - 0x3cU) - *0x10780d4;\n            bVar10 = CARRY4(uVar5, *0x1078008);\n            *0x1078008 = uVar5 + *0x1078008;\n            *0x107800c = (uVar5 >> 0x1f) + *0x107800c + bVar10;\n        }\n        else {\n            *0x1078024 = *0x1078024 - ((*0x10780d4 - 0x20) + var_4h);\n            var_4h._0_2_ = var_4h * 0x6298 * var_4h;\n        }\n        if (str.e[1] <= *0x10780d8) {\n            *0x1078014 = *0x1078008;\n            *0x1078008 = *0x10780d0 + L'+' + *0x10780d8;\n            *0x107800c = 0;\n            *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n        }\n        bVar10 = *0x1078008 < 0x3c;\n        cVar6 = *0x1078008 + L'\\xffffffc4';\n        uVar5 = cVar6 - *0x10780d8;\n        bVar11 = CARRY4(uVar5, *0x1078008);\n        *0x1078008 = uVar5 + *0x1078008;\n        *0x107800c = ((*0x107800c * 2 - bVar10) - (cVar6 < *0x10780d8)) + bVar11;\n        *0x10780d8 = *0x1078000 * 0x4e + var_ch;\n        fcn.0100f000();\n        if (str.e[1] == L'\\t') {\n            iVar3 = fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n            var_4h._0_2_ = iVar3 - *0x10780d8;\n        }\n        else {\n            *0x1078008 = *0x10780d8 + 0x2b + var_4h;\n            *0x107800c = 0;\n        }\n        bVar10 = CARRY4(*0x10780d8 - 0x44e6U, *0x1078008);\n        uVar5 = (*0x10780d8 - 0x44e6U) + *0x1078008;\n        bVar11 = uVar5 < *0x1078008;\n        uVar5 = uVar5 - *0x1078008;\n        bVar12 = CARRY4(uVar5, *0x1078008);\n        *0x1078008 = uVar5 + *0x1078008;\n        *0x107800c = ((*0x107800c + bVar10) - bVar11) + bVar12;\n        var_ch = var_ch + -1;\n        if (var_1ch == 0) {\n            if (str.e[4] - str.e[2] == 0x46) {\n                var_4h._0_2_ = *0x10780d0;\n                *0x10780d0 = (((*0x10780d0 & 0xffffU) - 0x3cU) - *0x10780d8) + *0x10780d0;\n            }\n            else {\n                *0x1078024 = *0x1078024 - (*0x10780d8 + -0x20 + var_4h);\n                var_4h._0_2_ = var_4h * 0x6298 * var_4h;\n            }\n            var_1ch = -1;\n            if (*0x1078020 == 0xf4) {\n                bVar10 = CARRY4(*0x1078028, *0x1078008);\n                uVar5 = *0x1078028 + *0x1078008;\n                *0x1078008 = *0x10780d0 + L'+' + uVar5;\n                *0x107800c = *0x107800c + bVar10 + CARRY4(*0x10780d0 + L'+', uVar5);\n            }\n            var_4h._0_2_ = (*0x1078000 - var_4h) - 1;\n        }\n        *0x10780d8 = *0x1078008 + L'\\xffffbb22';\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = *0x10780d8;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x1078008 + L'\\xffffffe0' + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    *0x10780d8 = *0x10780d0 * 4 - *0x1078008;\n    var_8h = 0;\n    while ((var_8h < 0x27 &&\n           ((str.e[0] == L'\\x19' ||\n            (*0x10780d4 = *0x10780d4 * *(var_8h * 4 + 0x1078010) + *0x10780d8 + -0x55,  *0x10780d8 != *0x1078018))))) {\n        var_8h = var_8h + 1;\n    }\n    *0x1078008 = 0x7b0;\n    *0x107800c = 0;\n    iVar4 = *0x10780d0 * 0x4e + *0x10780d8;\n    *0x10780d0 = iVar4;\n    iVar3 = fcn.010214b0(0x7b0, 0, 0x4e, 0);\n    *0x10780d8 = fcn.0100e9c0(*0x1078f90, *0x10780d0);\n    uVar2 = iVar4 + iVar3 + ((*0x1078008 + -0x3c) - *0x10780d0);\n    if ((*0x1078070 == 0xf4) && (*0x1078074 == 0)) {\n        *0x10780d4 = *0x1078008 + '+' + *0x10780d4 + *0x1078080;\n    }\n    uVar13 = fcn.010214b0(*0x1078008, *0x107800c, 0x6298, 0);\n    *0x10780d4 = fcn.010214b0(uVar13, *0x10780d4, 0);\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d8 = *0x1078008;\n        uVar5 = (*0x1078008 - 0x3cU) - uVar2;\n        bVar10 = CARRY4(uVar5, *0x1078008);\n        *0x1078008 = uVar5 + *0x1078008;\n        *0x107800c = *0x107800c + bVar10;\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((uVar2 - 0x20) + *0x10780d8);\n        *0x10780d8 = *0x10780d8 * 0x6298 * *0x10780d8;\n    }\n    return *0x10780d4;\n}\n",
        "token_count": 9350
    },
    "01010fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_2ch\n\nuchar __cdecl fcn.01010fc4(uint arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    char32_t cVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    bool bVar5;\n    bool bVar6;\n    bool bVar7;\n    ulong uVar8;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        *0x10780d0 = *0x10780d4 * 0x4e + *0x1078008;\n        do {\n            *(unaff_EBP + -0xbc) = *0x10780d0;\n            *(unaff_EBP + -0xb8) = 0;\n            if ((*0x107800c <= *(unaff_EBP + -0xb8)) &&\n               ((*0x107800c < *(unaff_EBP + -0xb8) || (*0x1078008 <= *(unaff_EBP + -0xbc))))) {\n                *0x1078008 = *0x10780d0 + 0x2b + *0x10780d8;\n                *0x107800c = 0;\n                str.e[0] = str.e[0] - *0x10780d8;\n                *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n            }\n            do {\n                if (*0x1078020 == 0xf4) {\n                    *0x10780d8 = *0x10780d0 + 0x2b + *0x10780d8 + *0x1078028;\n                }\n                if (*(unaff_EBP + -0x10) < 0xb) {\n                    *(unaff_EBP + -0x44) = str.e[1];\n                    if (*(unaff_EBP + -0x44) == 9) {\n                        *0x10780d8 = *0x10780d0 * 4 - *(unaff_EBP + -4);\n                    }\n                    else {\n                        *0x10780d0 = *(unaff_EBP + -4) + 0x2b + *0x10780d8;\n                    }\n                    *(unaff_EBP + -0x48) = str.e[1];\n                    if (*(unaff_EBP + -0x48) == 9) {\n                        *0x10780d0 = *0x1078000 * 4 - *0x10780d8;\n                    }\n                    else {\n                        *0x1078000 = *0x10780d8 + L'+' + *0x10780d0;\n                    }\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + -1;\n                    if (str.e[1] < *(unaff_EBP + -0x10) || str.e[1] == *(unaff_EBP + -0x10)) {\n                        *0x1078014 = *(unaff_EBP + -4);\n                        *(unaff_EBP + -4) = (*0x1078000 - *(unaff_EBP + -4)) + *(unaff_EBP + -0x10);\n                        *(unaff_EBP + -4) = *0x1078000 + 0x2b + *(unaff_EBP + -0x10);\n                        *0x1078000 = *0x1078000 - (*(unaff_EBP + -0x10) + -0x20 + *(unaff_EBP + -4));\n                    }\n                }\n                if (*0x1078020 == 0xf4) {\n                    *0x10780d8 = *0x10780d0 + 0x2b + *0x10780d8 + *0x1078028;\n                }\n                if (str.e[4] - str.e[2] == 0x46) {\n                    *(unaff_EBP + -4) = (*0x1078008 - *(unaff_EBP + -4)) + *(unaff_EBP + -4);\n                    uVar2 = (*(unaff_EBP + -4) - 0x3c) - *0x10780d4;\n                    bVar5 = CARRY4(uVar2, *0x1078008);\n                    *0x1078008 = uVar2 + *0x1078008;\n                    *0x107800c = (uVar2 >> 0x1f) + *0x107800c + bVar5;\n                }\n                else {\n                    *0x1078024 = *0x1078024 - ((*0x10780d4 - 0x20) + *(unaff_EBP + -4));\n                    *(unaff_EBP + -4) = *(unaff_EBP + -4) * 0x6298 * *(unaff_EBP + -4);\n                }\n                if (str.e[1] <= *0x10780d8) {\n                    *0x1078014 = *0x1078008;\n                    *0x1078008 = *0x10780d0 + 0x2b + *0x10780d8;\n                    *0x107800c = 0;\n                    *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n                }\n                bVar5 = *0x1078008 < 0x3c;\n                cVar3 = *0x1078008 + L'\\xffffffc4';\n                uVar2 = cVar3 - *0x10780d8;\n                bVar6 = CARRY4(uVar2, *0x1078008);\n                *0x1078008 = uVar2 + *0x1078008;\n                *0x107800c = ((*0x107800c * 2 - bVar5) - (cVar3 < *0x10780d8)) + bVar6;\n                *0x10780d8 = *0x1078000 * 0x4e + *(unaff_EBP + -0xc);\n                fcn.0100f000();\n                *(unaff_EBP + -0x4c) = str.e[1];\n                if (*(unaff_EBP + -0x4c) == 9) {\n                    iVar1 = fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n                    *(unaff_EBP + -4) = iVar1 - *0x10780d8;\n                }\n                else {\n                    *0x1078008 = *0x10780d8 + 0x2b + *(unaff_EBP + -4);\n                    *0x107800c = 0;\n                }\n                bVar5 = CARRY4(*0x10780d8 - 0x44e6U, *0x1078008);\n                uVar2 = (*0x10780d8 - 0x44e6U) + *0x1078008;\n                bVar6 = uVar2 < *0x1078008;\n                uVar2 = uVar2 - *0x1078008;\n                bVar7 = CARRY4(uVar2, *0x1078008);\n                *0x1078008 = uVar2 + *0x1078008;\n                *0x107800c = ((*0x107800c + bVar5) - bVar6) + bVar7;\n                *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + -1;\n                if (*(unaff_EBP + -0x1c) == 0) {\n                    if (str.e[4] - str.e[2] == 0x46) {\n                        *(unaff_EBP + -4) = (*0x10780d0 - *(unaff_EBP + -4)) + *(unaff_EBP + -4);\n                        *0x10780d0 = ((*(unaff_EBP + -4) - 0x3c) - *0x10780d8) + *0x10780d0;\n                    }\n                    else {\n                        *0x1078024 = *0x1078024 - (*0x10780d8 + -0x20 + *(unaff_EBP + -4));\n                        *(unaff_EBP + -4) = *(unaff_EBP + -4) * 0x6298 * *(unaff_EBP + -4);\n                    }\n                    *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n                    if (*0x1078020 == 0xf4) {\n                        bVar5 = CARRY4(*0x1078028, *0x1078008);\n                        uVar2 = *0x1078028 + *0x1078008;\n                        *0x1078008 = *0x10780d0 + 0x2b + uVar2;\n                        *0x107800c = *0x107800c + bVar5 + CARRY4(*0x10780d0 + 0x2b, uVar2);\n                    }\n                    *(unaff_EBP + -4) = (*0x1078000 - *(unaff_EBP + -4)) + *(unaff_EBP + -0x1c);\n                }\n                *0x10780d8 = *0x1078008 + L'\\xffffbb22';\n                *(unaff_EBP + -4) = *0x10780d8 * 0x6298 * *(unaff_EBP + -4);\n                if (*0x1078020 == 0xf4) {\n                    *0x10780d4 = *0x10780d0 + '+' + *0x10780d4 + *0x1078028;\n                }\n                if (0x7fbf < *0x10780d0) {\n                    *0x10780d0 = ((*(unaff_EBP + -4) - 0x3c) - *0x10780d8) + *0x10780d0;\n                }\n                *(unaff_EBP + -0xa4) = *0x10780d0;\n                *(unaff_EBP + -0xa0) = 0;\n                if ((*0x107800c <= *(unaff_EBP + -0xa0)) &&\n                   ((*0x107800c < *(unaff_EBP + -0xa0) || (*0x1078008 <= *(unaff_EBP + -0xa4))))) {\n                    *0x1078008 = *0x10780d0 + 0x2b + *0x10780d8;\n                    *0x107800c = 0;\n                    str.e[0] = str.e[0] - *0x10780d8;\n                    *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n                }\n                if (*(unaff_EBP + -0x14) < 0x40) {\n                    *(unaff_EBP + -4) = (*0x10780d0 - *(unaff_EBP + -4)) + *0x10780d8;\n                    if (str.e[4] - str.e[2] == 0x46) {\n                        *0x10780d4 = *0x1078008;\n                        uVar2 = ((*0x1078008 & 0xff) - 0x3c) - *(unaff_EBP + -0x14);\n                        bVar5 = CARRY4(uVar2, *0x1078008);\n                        *0x1078008 = uVar2 + *0x1078008;\n                        *0x107800c = (uVar2 >> 0x1f) + *0x107800c + bVar5;\n                    }\n                    else {\n                        *0x1078024 = *0x1078024 - (*(unaff_EBP + -0x14) + -0x20 + *0x10780d4);\n                        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n                    }\n                    *(unaff_EBP + -4) = *0x10780d0 + 0x2b + *0x10780d8;\n                    *0x10780d0 = ((*(unaff_EBP + -4) - 0x3c) - *0x10780d8) + *0x10780d0;\n                }\n                if (*0x1078020 == 0xf4) {\n                    *0x1078000 = *0x10780d0 + 0x2b + *0x1078000 + *0x1078028;\n                }\n                if (*(unaff_EBP + -0xc) == 0) {\n                    *(unaff_EBP + -4) = *0x1078008 + -7 + *(unaff_EBP + 8);\n                    if (str.e[4] - str.e[2] == 0x46) {\n                        *0x10780d4 = *0x10780d8;\n                    }\n                    else {\n                        *0x1078024 = *0x1078024 - ((*0x1078008 - 0x20) + *0x10780d4);\n                        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n                    }\n                    *(unaff_EBP + -4) = *(unaff_EBP + -4) - (*(unaff_EBP + 8) + -0x20 + *0x1078008);\n                    *0x10780d8 = *0x10780d0 * 4 - *0x1078008;\n                    *(unaff_EBP + -8) = 0;\n                    while ((*(unaff_EBP + -8) < 0x27 &&\n                           ((*(unaff_EBP + -4) == str.e[0] ||\n                            (*0x10780d4 = *0x10780d4 * *(*(unaff_EBP + -8) * 4 + 0x1078010) +\n                                          ((*0x10780d8 + -0x3c) - *(unaff_EBP + -4)),  *0x10780d8 != *0x1078018))))) {\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                    }\n                    *0x1078008 = 0x7b0;\n                    *0x107800c = 0;\n                    iVar4 = *0x10780d0 * 0x4e + *0x10780d8;\n                    *0x10780d0 = iVar4;\n                    iVar1 = fcn.010214b0(0x7b0, 0, 0x4e, 0);\n                    *(unaff_EBP + -4) = iVar4 + iVar1;\n                    *0x10780d8 = fcn.0100e9c0(*0x1078f90, *0x10780d0);\n                    *(unaff_EBP + -4) = *(unaff_EBP + -4) + ((*0x1078008 + -0x3c) - *0x10780d0);\n                    *(unaff_EBP + -0x2c) = 0x20;\n                    if ((*(*(unaff_EBP + -0x2c) + 0x1078050) == 0xf4) && (*(*(unaff_EBP + -0x2c) + 0x1078054) == 0)) {\n                        *0x10780d4 = *0x1078008 + '+' + *0x10780d4 + *0x1078080;\n                    }\n                    uVar8 = fcn.010214b0(*0x1078008, *0x107800c, 0x6298, 0);\n                    *0x10780d4 = fcn.010214b0(uVar8, *0x10780d4, 0);\n                    if (str.e[4] - str.e[2] == 0x46) {\n                        *0x10780d8 = *0x1078008;\n                        uVar2 = (*0x1078008 - 0x3c) - *(unaff_EBP + -4);\n                        bVar5 = CARRY4(uVar2, *0x1078008);\n                        *0x1078008 = uVar2 + *0x1078008;\n                        *0x107800c = *0x107800c + bVar5;\n                    }\n                    else {\n                        *0x1078024 = *0x1078024 - ((*(unaff_EBP + -4) - 0x20) + *0x10780d8);\n                        *0x10780d8 = *0x10780d8 * 0x6298 * *0x10780d8;\n                    }\n                    return *0x10780d4;\n                }\n                *0x10780d0 = (*(unaff_EBP + -4) - 7) + *0x10780d8;\n                if (*0x10780d4 <= *0x10780d0) {\n                    *0x10780d4 = *0x10780d0 + '+' + *0x1078008;\n                    str.e[0] = str.e[0] - *0x1078008;\n                    *0x10780d0 = *0x10780d0 - ((*0x1078008 - 0x20) + *0x10780d4);\n                }\n                if (*(unaff_EBP + -0x18) < 5) {\n                    *(unaff_EBP + -4) = (*0x10780d0 << 2) - *0x10780d8;\n                    *(unaff_EBP + -0x18) = *(unaff_EBP + -0x18) + -1;\n                    *(unaff_EBP + -4) = *0x1078000 + 0x2b + *(unaff_EBP + -0x18);\n                }\n                *(unaff_EBP + -4) = *0x10780d8 * 0x6298 * *(unaff_EBP + -4);\n                *(unaff_EBP + -0xac) = *0x10780d0;\n                *(unaff_EBP + -0xa8) = 0;\n                if ((*0x107800c <= *(unaff_EBP + -0xa8)) &&\n                   ((*0x107800c < *(unaff_EBP + -0xa8) || (*0x1078008 <= *(unaff_EBP + -0xac))))) {\n                    *0x1078008 = *0x10780d0 + 0x2b + *0x10780d8;\n                    *0x107800c = 0;\n                    str.e[0] = str.e[0] - *0x10780d8;\n                    *0x10780d0 = *0x10780d0 - (*0x10780d8 + L'\\xffffffe0' + *0x1078008);\n                }\n                *0x1078000 = (*(unaff_EBP + -4) - 7) + *(unaff_EBP + -0x10);\n            } while (*(unaff_EBP + -4) < 0xdfca);\n            *(unaff_EBP + -0xb4) = *0x1078000;\n            *(unaff_EBP + -0xb0) = 0;\n        } while ((*(unaff_EBP + -0xb4) != *0x1078008) || (*(unaff_EBP + -0xb0) != *0x107800c));\n        if (*0x1078020 == 0xf4) {\n            *0x10780d4 = *0x10780d0 + '+' + *0x10780d4 + *0x1078028;\n        }\n        fcn.0100f4f0(*(unaff_EBP + -4));\n    } while( true );\n}\n",
        "token_count": 4790
    },
    "01012710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint fcn.01012710(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack128;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    char32_t var_18h;\n    int32_t var_14h;\n    uint32_t *puStack20;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1045f20;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack128 = *0x1078124 ^ &stack0xfffffffc;\n    puStack20 = &uStack128;\n    *in_FS_OFFSET = &var_ch_2;\n    var_1ch = 0x231;\n    var_14h = 0;\n    *0x10780d0 = *0x10780d8 * 0x4e + 0x231;\n    var_38h = fcn.01021172(0x7c1);\n    var_4h = 0;\n    var_34h = var_38h;\n    for (var_14h = 0; var_14h < 0x27; var_14h = var_14h + 1) {\n        var_20h = 0x40;\n        if ((*0x10780d8 != *0x1078090) || (*0x1078094 != 0)) {\n            *0x10780d0 = fcn.010214b0(*0x10780d0, 0, *(var_14h * 8 + 0x1078050), *(var_14h * 8 + 0x1078054));\n            *0x10780d0 = ((var_18h + -0x3c) - *0x10780d8) + *0x10780d0;\n            var_24h = 0x10;\n            if ((var_18h == *0x1078060) && (*0x1078064 == 0)) break;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"led Se\", &var_38h, 0x7c1);\n    for (var_14h = 0x30; 2 < var_14h; var_14h = var_14h + -1) {\n        var_28h = 0x48;\n        if ((*0x1078000 != *0x1078098) || (*0x107809c != 0)) {\n            iVar1 = *0x1078000 + 0x2b;\n            uVar2 = *(var_14h * 8 + 0x1078050);\n            *(var_14h * 8 + 0x1078050) = uVar2 - var_1ch;\n            *(var_14h * 8 + 0x1078054) = *(var_14h * 8 + 0x1078054) - (uVar2 < var_1ch);\n            var_18h = var_1ch * 0x6298 * (iVar1 + var_1ch);\n        }\n    }\n    if (*0x1078020 == 0xf4) {\n        *0x10780d8 = var_18h + 0x2b + *0x10780d8 + *0x1078028;\n    }\n    *0x10780d0 = fcn.01012040(var_18h);\n    *0x208103c = (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 5, 5, 0);\n    for (var_14h = 0x30; 2 < var_14h; var_14h = var_14h + -1) {\n        var_2ch = 0x48;\n        if ((*0x10780d0 != *0x1078098) || (*0x107809c != 0)) {\n            uVar4 = *0x10780d4;\n            iVar1 = *0x10780d0 + 0x2b;\n            uVar3 = *0x10780d4;\n            uVar2 = *(var_14h * 8 + 0x1078050);\n            *(var_14h * 8 + 0x1078050) = uVar2 - uVar3;\n            *(var_14h * 8 + 0x1078054) = *(var_14h * 8 + 0x1078054) - (uVar2 < uVar3);\n            var_18h = *0x10780d4 * 0x6298 * (iVar1 + uVar4);\n        }\n    }\n    if (str.e[1] == L'\\t') {\n        *0x1078000 = var_18h * 4 - *0x10780d8;\n    }\n    else {\n        var_18h = *0x10780d8 + 0x2b + *0x1078000;\n    }\n    *0x10780d8 = -0x2b;\n    *0x10780d4 = var_1ch - 0x1a;\n    *0x1078000 = fcn.01011c70(0xffffffd5);\n    var_1ch = var_18h * 0x4e + *0x10780d8;\n    var_4h = 0xffffffff;\n    *0x10780d8 = (*0x10780d0 - *0x10780d8) + var_1ch;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d8 = var_18h + 0x2b + *0x10780d8 + *0x1078028;\n    }\n    var_14h = 0;\n    while ((var_14h < 0x27 &&\n           ((*0x10780d8 == str.e[0] || (*0x10780d8 = *0x10780d0 + L'\\xffffffc4',  *0x10780d0 != *0x1078018))))) {\n        var_14h = var_14h + 1;\n    }\n    var_18h = (*0x10780d4 - 0x44e6) + *0x10780d8;\n    fcn.0100f640(var_1ch);\n    fcn.0100f640(var_18h);\n    for (var_14h = 0x30; 2 < var_14h; var_14h = var_14h + -1) {\n        if (var_18h != str.e[1]) {\n            *(var_14h * 4 + 0x1078010) = *(var_14h * 4 + 0x1078010) - *0x1078000;\n        }\n    }\n    *0x10780d8 = *0x10780d4 * 0x6298 * (*0x10780d0 + 0x2b + *0x1078000);\n    *in_FS_OFFSET = var_ch_2;\n    return 1;\n}\n",
        "token_count": 1766
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nint32_t sym.substance.dll_DllUnregisterServer(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x10780d8 = *0x10780d8 - (*0x10780d0 + -0x1e);\n    *0x1078000 = fcn.01012040(*0x10780d8);\n    iVar1 = *0x10780d8 - 0x1e;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d0 = *0x10780d8;\n        *0x10780d8 = *0x10780d8 - 0x3c;\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((*0x10780d8 - 0x20U) + *0x10780d0);\n        *0x10780d0 = *0x10780d0 * 0x6298 * *0x10780d0;\n    }\n    if (*0x1078020 == 0xf4) {\n        *0x10780d0 = *0x10780d8 + 0x2bU + *0x10780d0 + *0x1078028;\n    }\n    *0x1078000 = fcn.01012040(*0x10780d8);\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d0 = *0x10780d8;\n        *0x10780d8 = *0x10780d8 - 0x3c;\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((*0x10780d8 - 0x20U) + *0x10780d0);\n        *0x10780d0 = *0x10780d0 * 0x6298 * *0x10780d0;\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d0 = *0x10780d8;\n        *0x10780d8 = *0x10780d8 - 0x3c;\n    }\n    else {\n        *0x1078024 = *0x1078024 - ((*0x10780d8 - 0x20U) + *0x10780d0);\n        *0x10780d0 = *0x10780d0 * 0x6298 * *0x10780d0;\n    }\n    arg_8h = (*0x10780d8 - 7U) + *0x1078000;\n    *0x10780d0 = fcn.01012040(arg_8h);\n    uVar2 = fcn.01013d20(0x20811c8, L\"day \", L\"tota\");\n    fcn.01013d20(uVar2);\n    if (*0x10780d0 <= *0x10780d8) {\n        *0x10780d0 = *0x10780d8 * 2 + 0x2b;\n        str.e[0] = str.e[0] - *0x10780d8;\n        *0x10780d8 = 0x20 - *0x10780d0;\n    }\n    if (str.e[1] == L'\\t') {\n        *0x10780d8 = *0x10780d8 * 4 - *0x10780d0;\n    }\n    else {\n        *0x10780d8 = *0x10780d0 + 0x2b + *0x10780d8;\n    }\n    *0x1078000 = fcn.01011790(*0x10780d8);\n    *0x107a270 = 0;\n    while ((*0x107a270 < 0x27 &&\n           ((*0x10780d8 == str.e[0] || (*0x10780d8 = *0x10780d0 + L'\\xffffffc4',  *0x10780d0 != *0x1078018))))) {\n        *0x107a270 = *0x107a270 + 1;\n    }\n    iVar3 = ((-iVar1 + 4) - *0x10780d0) + arg_8h;\n    *0x10780d0 = iVar3;\n    if (str.e[1] <= *0x10780d8) {\n        *0x10780d0 = *0x10780d8 * 2 + 0x2b;\n        *0x10780d8 = L' ' - *0x10780d0;\n        *0x1078014 = iVar3;\n    }\n    *0x1078000 = fcn.01011790(*0x10780d8);\n    if (str.e[1] == L'\\t') {\n        *0x10780d8 = *0x10780d8 * 4 - *0x10780d0;\n    }\n    else {\n        *0x10780d8 = *0x10780d0 + 0x2b + *0x10780d8;\n    }\n    *0x10780d0 = -iVar1 + 0x2f + arg_8h;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d0 = *0x10780d8 + 0x2b + *0x10780d0 + *0x1078028;\n    }\n    return *0x10780d8;\n}\n",
        "token_count": 1320
    },
    "0101e9c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0101e9c0(uchar *param_1)\n\n{\n    char *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    // switch table (10 cases) at 0x101ea1c\n    switch(*param_1) {\n    case 0:\n        pcVar1 = \"null\";\n        break;\n    case 1:\n        pcVar1 = \"object\";\n        break;\n    case 2:\n        pcVar1 = \"array\";\n        break;\n    case 3:\n        pcVar1 = \"string\";\n        break;\n    case 4:\n        pcVar1 = \"boolean\";\n        break;\n    default:\n        pcVar1 = \"number\";\n        break;\n    case 8:\n        pcVar1 = \"binary\";\n        break;\n    case 9:\n        pcVar1 = \"discarded\";\n    }\n    return pcVar1;\n}\n",
        "token_count": 202
    },
    "0102726d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0102726d(uint16_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint arg_8h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_stack_ffffffdc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    do {\n        if ((*arg_8h != *(iVar4 + 0x106cda0)) && (*arg_8h != *(iVar4 + 0x106cda8))) {\n            fcn.010282ba();\n            return in_stack_ffffffdc;\n        }\n        arg_8h_00 = fcn.0102ac58();\n        iVar4 = iVar4 + 2;\n        *arg_8h = arg_8h_00;\n    } while (iVar4 != 6);\n    fcn.0102b7e7(arg_8h_00);\n    uVar2 = fcn.0102ac58();\n    *arg_8h = uVar2;\n    if (uVar2 == 0x28) {\n        uVar2 = fcn.0102ac58();\n        *arg_8h = uVar2;\n        cVar1 = fcn.010273de(arg_8h, arg_ch);\n        if (cVar1 != '\\0') {\n            uVar3 = *arg_8h;\n            fcn.0102b7e7(uVar3);\n            return uVar3;\n        }\n        cVar1 = fcn.0102739e(arg_8h, arg_ch);\n        uVar2 = *arg_8h;\n        uVar3 = uVar2;\n        if (cVar1 != '\\0') {\n            fcn.0102b7e7(uVar3);\n            return uVar3;\n        }\n        if (uVar2 == 0x29) {\ncode_r0x0102738d:\n            if (uVar2 != 0x29) goto code_r0x010272d7;\n        }\n        else {\n            do {\n                uVar2 = uVar3;\n                if (uVar2 == 0) goto code_r0x0102738d;\n                if ((((9 < uVar3 - 0x30) && (0x19 < uVar3 - 0x61)) && (0x19 < uVar3 - 0x41)) && (uVar2 != 0x5f))\n                goto code_r0x010272d7;\n                uVar2 = fcn.0102ac58();\n                *arg_8h = uVar2;\n                uVar3 = uVar2;\n            } while (uVar2 != 0x29);\n        }\n        uVar3 = 4;\n    }\n    else {\ncode_r0x010272d7:\n        cVar1 = fcn.010282ba();\n        uVar3 = (-(cVar1 != '\\0') & 0xfffffffd) + 7;\n    }\n    return uVar3;\n}\n",
        "token_count": 702
    },
    "0100ee20": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0100ee20(int32_t arg_8h)\n\n{\n    uint var_4h;\n    \n    if (*0x10780d8 <= *0x1078004) {\n        *0x10780d8 = *0x1078004 + L'+' + arg_8h;\n        str.e[0] = str.e[0] - arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + -0x20 + *0x10780d8);\n    }\n    *0x10780d8 = (*0x10780d4 - (*0x1078004 + -0x20 + *0x10780d8)) * 4 - *0x10780d0;\n    for (*0x107a270 = 0x30; 2 < *0x107a270; *0x107a270 = *0x107a270 + -1) {\n        if (*0x1078004 != str.e[1]) {\n            *(*0x107a270 * 4 + 0x1078010) = *(*0x107a270 * 4 + 0x1078010) - arg_8h;\n        }\n    }\n    *0x10780d4 = *0x10780d8 * 'N' + *0x10780d0;\n    if (*0x10780d4 <= *0x1078004) {\n        *0x10780d4 = *0x1078004 + '+' + arg_8h;\n        str.e[0] = str.e[0] - arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + -0x20 + *0x10780d4);\n    }\n    *0x10780d8 = *0x10780d0 * 0x6298 * *0x10780d8;\n    return *0x10780d8 * 0x4e + *0x1078004;\n}\n",
        "token_count": 458
    },
    "01012040": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01012040(char32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    *0x10780d8 = *0x1078004 * 0x6298 * *0x10780d8;\n    if (*0x1078020 == 0xf4) {\n        *0x10780d4 = *0x1078004 + '+' + *0x10780d4 + *0x1078028;\n    }\n    fcn.010214b0();\n    cVar1 = arg_8h;\n    if (*0x10780d4 <= *0x1078004) {\n        *0x10780d4 = *0x1078004 + '+' + cVar1;\n        str.e[0] = str.e[0] - arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n    }\n    iVar2 = *0x10780d4 * 4 - *0x1078004;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d8 = *0x1078004;\n        *0x1078004 = (*0x1078004 * 2 + -0x3c) - arg_8h;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (arg_8h + L'\\xffffffe0' + iVar2);\n        *0x10780d8 = iVar2 * 0x6298 * iVar2;\n    }\n    *0x10780d4 = *0x1078004 + '\\x1a' + *0x10780d8;\n    for (var_4h = 0x30; 2 < var_4h; var_4h = var_4h + -1) {\n        if (*0x1078004 != str.e[1]) {\n            *0x10780d4 = *0x1078004 + '+' + cVar1;\n            *(var_4h * 4 + 0x1078010) = *(var_4h * 4 + 0x1078010) - arg_8h;\n            *0x10780d4 = cVar1 * -0x68 * *0x10780d4;\n        }\n    }\n    iVar2 = *0x1078004 * 0x6298;\n    if (str.e[1] <= arg_8h) {\n        *0x1078004 = L'\\xffffffd5' - (arg_8h * 2 + -0x20);\n        *0x1078014 = *0x10780d0 * 0x6298 * iVar2 * *0x10780d8;\n    }\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = *0x1078004;\n        *0x1078004 = (((*0x1078004 & 0xffU) - 0x3cU) - arg_8h) + *0x1078004;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    iVar2 = (*0x10780d4 + 0x2b + *0x1078004) * 0x4e + *0x10780d0;\n    *0x10780d8 = (*0x10780d4 - (iVar2 + 0x2b + *0x10780d0)) + *0x1078004;\n    if (str.e[1] <= arg_8h) {\n        *0x1078014 = *0x10780d4;\n        *0x10780d4 = *0x1078004 + '+' + cVar1;\n        *0x1078004 = *0x1078004 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n    }\n    return iVar2;\n}\n",
        "token_count": 1000
    },
    "0101ba80": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0101ba80(int32_t arg_8h, uint noname_1, uchar *arg_10h, uchar *arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint var_14h;\n    uchar *var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = arg_10h;\n    *0x1078008 = arg_8h + 0x55;\n    *0x107800c = 0;\n    var_10h = arg_14h;\n    iVar3 = fcn.010214b0(*0x10780d4 * 0x6298, 0, *0x1078008, 0);\n    uVar4 = (iVar3 - *0x10780d0) - 0x12;\n    *0x1078008 = uVar4 + 0x2b + *0x10780d0;\n    *0x107800c = 0;\n    if (str.e[4] - str.e[2] == 0x46) {\n        *0x10780d4 = uVar4;\n    }\n    else {\n        *0x1078024 = *0x1078024 - (*0x10780d0 + -0x20 + *0x10780d4);\n        *0x10780d4 = *0x10780d4 * -0x68 * *0x10780d4;\n    }\n    while (iVar5 = arg_18h + -1,  arg_18h != 0) {\n        *var_ch = *var_10h;\n        iVar1 = *0x10780d0;\n        var_ch = var_ch + 1;\n        var_10h = var_10h + 1;\n        cVar2 = fcn.010214b0();\n        arg_18h = iVar5;\n        if (*0x1078020 == 0xf4) {\n            *0x10780d4 = iVar1 + cVar2 + '+' + *0x10780d4 + *0x1078028;\n        }\n    }\n    *0x10780d0 = *0x1078008 + -7 + *0x10780d8;\n    fcn.0100ee20(*0x1078008);\n    fcn.01018690(*0x10780d0, *0x1078008, *0x107800c);\n    fcn.01018820();\n    fcn.010214b0(*0x1078008, *0x107800c, 0x4e, 0);\n    var_8h = 0;\n    while ((var_8h < 0x27 && ((*0x10780d0 == str.e[0] || (*0x10780d4 != *0x1078018))))) {\n        var_8h = var_8h + 1;\n    }\n    uVar4 = *0x10780d0 + -0x44e6 + *0x1078008;\n    iVar5 = 0;\n    var_8h = 0x30;\n    while (2 < var_8h) {\n        if (uVar4 != str.e[1]) {\n            *0x10780d4 = uVar4 + '+' + *0x10780d0;\n            *(var_8h * 4 + 0x1078010) = *(var_8h * 4 + 0x1078010) - *0x10780d0;\n            *0x10780d4 = *0x10780d0 * -0x68 * *0x10780d4;\n        }\n        iVar5 = var_8h + -1;\n        var_8h = iVar5;\n    }\n    return CONCAT44(iVar5, arg_10h);\n}\n",
        "token_count": 903
    },
    "0101ca70": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101ca70(uint arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    uint arg_14h;\n    uint var_70h;\n    uint var_68h;\n    uint var_60h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint *var_18h;\n    uchar var_12h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uchar var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10467f0;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.010171f0(uVar2);\n    if (arg_8h == 2) {\n        uVar3 = fcn.0101e820();\n        fcn.0101e720(uVar3);\n        fcn.010159e0(&var_38h, &var_60h);\n        puVar4 = fcn.0101db20(&var_3ch);\n        uVar3 = *puVar4;\n        puVar4 = &var_40h;\n        puVar5 = fcn.0101c3a0(puVar4);\n        fcn.01015fe0(&var_44h, *puVar5, puVar4, uVar3);\n    }\n    else if (arg_8h == 1) {\n        uVar3 = fcn.0101e7e0();\n        fcn.0101e720(uVar3);\n        var_28h = *var_18h;\n        fcn.0101b9e0(&var_20h);\n        fcn.0101ba10(&var_11h);\n        while (cVar1 = fcn.01018a40(var_11h),  cVar1 != '\\0') {\n            var_30h = fcn.01018b70();\n            uVar3 = fcn.01014540(var_30h + 0x18);\n            fcn.0101e600(uVar3);\n            fcn.01018c00();\n        }\n    }\n    while (cVar1 = fcn.0101dae0(),  cVar1 == '\\0') {\n        uVar3 = fcn.0101c370();\n        uVar3 = fcn.01014540(uVar3);\n        fcn.01016720(uVar3);\n        fcn.0101e540();\n        cVar1 = fcn.0101e070();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.0101e0d0();\n            if (cVar1 != '\\0') {\n                fcn.0101b9e0(&var_24h);\n                fcn.0101ba10(&var_12h);\n                while (cVar1 = fcn.01018a40(var_12h),  cVar1 != '\\0') {\n                    var_34h = fcn.01018b70();\n                    uVar3 = fcn.01014540(var_34h + 0x18);\n                    fcn.0101e600(uVar3);\n                    fcn.01018c00();\n                }\n                fcn.0101c4e0();\n            }\n        }\n        else {\n            puVar4 = fcn.010159e0(&var_48h, &var_60h);\n            uVar3 = *puVar4;\n            puVar4 = &var_4ch;\n            puVar5 = fcn.0101db20(puVar4);\n            arg_14h = *puVar5;\n            puVar5 = &var_50h;\n            puVar6 = fcn.0101c3a0(puVar5);\n            fcn.01015fe0(&var_54h, *puVar6, puVar5, arg_14h);\n            fcn.0101c590(puVar4, uVar3);\n        }\n        fcn.01017ec0();\n    }\n    var_1ch = arg_8h - 1;\n    // switch table (8 cases) at 0x101cd88\n    switch(var_1ch) {\n    case 0:\n        fcn.01016710();\n        fcn.01015ea0(&var_dh, *var_18h);\n        fcn.0101c970(&var_dh, *var_18h, 1);\n        break;\n    case 1:\n        fcn.01016710();\n        fcn.01015eb0(&var_eh, *var_18h);\n        fcn.0101c990(&var_eh, *var_18h, 1);\n        break;\n    case 2:\n        fcn.01016710();\n        fcn.01015e80(&var_fh, *var_18h);\n        fcn.0101c930(&var_fh, *var_18h, 1);\n        break;\n    case 7:\n        fcn.01016710();\n        fcn.01015e90(&var_10h, *var_18h);\n        fcn.0101c950(&var_10h, *var_18h, 1);\n    }\n    fcn.01018200();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 1361
    },
    "0101e070": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0101e070(char *param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *param_1 == '\\x02';\n    return param_1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 69
    },
    "010276ae": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01027ba1)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl\nfcn.010276ae(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint32_t arg_1ch, uint32_t arg_20h, \n            uchar *arg_24h, uint noname_8, uint32_t arg_2ch, uint32_t arg_30h)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t extraout_ECX;\n    uint16_t uVar7;\n    uint64_t uVar8;\n    int64_t iVar9;\n    int32_t var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    cVar2 = fcn.0102b871();\n    if (cVar2 != '\\0') {\n        if ((arg_2ch == 0) || ((1 < arg_2ch && (arg_2ch < 0x25)))) {\n            fcn.01028192(arg_8h);\n            uVar1 = 0;\n            do {\n                uVar4 = fcn.0102ac58();\n                uVar4 = uVar4 & 0xffff;\n                iVar5 = fcn.010340bb(uVar4, 8);\n            } while (iVar5 != 0);\n            var_4h = arg_30h & 0xff;\n            if (uVar4 == 0x2d) {\n                var_4h = var_4h | 2;\ncode_r0x01027743:\n                uVar4 = fcn.0102ac58();\n                uVar4 = uVar4 & 0xffff;\n            }\n            else if (uVar4 == 0x2b) goto code_r0x01027743;\n            iVar5 = 0x30;\n            if ((arg_2ch != 0) && (arg_2ch != 0x10)) goto code_r0x0102799c;\n            uVar7 = uVar4;\n            if (uVar7 < 0x30) goto code_r0x01027924;\n            if (uVar7 < 0x3a) {\ncode_r0x01027785:\n                iVar5 = uVar4 - iVar5;\ncode_r0x01027920:\n                if (iVar5 == -1) goto code_r0x01027924;\n            }\n            else {\n                if (0xff0f < uVar7) {\n                    if (uVar7 < 0xff1a) {\n                        iVar5 = uVar4 - 0xff10;\n                    }\n                    else {\n                        iVar5 = -1;\n                    }\n                    goto code_r0x01027920;\n                }\n                if (0x65f < uVar7) {\n                    if (uVar7 < 0x66a) {\n                        iVar5 = uVar4 - 0x660;\n                        goto code_r0x01027920;\n                    }\n                    iVar5 = 0x6f0;\n                    if ((0x6ef < uVar7) &&\n                       ((uVar7 < 0x6fa ||\n                        ((iVar5 = 0x966,  0x965 < uVar7 &&\n                         ((uVar7 < 0x970 ||\n                          ((iVar5 = 0x9e6,  0x9e5 < uVar7 &&\n                           ((uVar7 < 0x9f0 ||\n                            ((iVar5 = 0xa66,  0xa65 < uVar7 &&\n                             ((uVar7 < 0xa70 ||\n                              ((iVar5 = 0xae6,  0xae5 < uVar7 &&\n                               ((uVar7 < 0xaf0 ||\n                                ((iVar5 = 0xb66,  0xb65 < uVar7 &&\n                                 ((uVar7 < 0xb70 ||\n                                  ((iVar5 = 0xc66,  0xc65 < uVar7 &&\n                                   ((uVar7 < 0xc70 ||\n                                    ((iVar5 = 0xce6,  0xce5 < uVar7 &&\n                                     ((uVar7 < 0xcf0 ||\n                                      ((iVar5 = 0xd66,  0xd65 < uVar7 &&\n                                       ((uVar7 < 0xd70 ||\n                                        ((iVar5 = 0xe50,  0xe4f < uVar7 &&\n                                         ((uVar7 < 0xe5a ||\n                                          ((iVar5 = 0xed0,  0xecf < uVar7 &&\n                                           ((uVar7 < 0xeda ||\n                                            ((iVar5 = 0xf20,  0xf1f < uVar7 &&\n                                             ((uVar7 < 0xf2a ||\n                                              ((iVar5 = 0x1040,  0x103f < uVar7 &&\n                                               ((uVar7 < 0x104a ||\n                                                ((iVar5 = 0x17e0,  0x17df < uVar7 &&\n                                                 ((uVar7 < 0x17ea ||\n                                                  ((iVar5 = 0x1810,  0x180f < uVar7 && (uVar7 < 0x181a))))))))))))))))))\n                                          )))))))))))))))))))))))))))))))))))))))) goto code_r0x01027785;\n                }\ncode_r0x01027924:\n                if (((uVar4 < 0x41) || (0x5a < uVar4)) && (0x19 < uVar4 - 0x61)) {\n                    iVar5 = -1;\n                }\n                else {\n                    uVar6 = uVar4;\n                    if (uVar4 - 0x61 < 0x1a) {\n                        uVar6 = uVar4 - 0x20;\n                    }\n                    iVar5 = uVar6 - 0x37;\n                }\n            }\n            if (iVar5 == 0) {\n                uVar6 = fcn.0102ac58();\n                uVar6 = uVar6 & 0xffff;\n                if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n                    if (arg_2ch == 0) {\n                        arg_2ch = 0x10;\n                    }\n                    uVar4 = fcn.0102ac58();\n                    uVar4 = uVar4 & 0xffff;\n                }\n                else {\n                    if (arg_2ch == 0) {\n                        arg_2ch = 8;\n                    }\n                    fcn.0102b7e7(uVar6);\n                }\n            }\n            else if (arg_2ch == 0) {\n                arg_2ch = 10;\n            }\ncode_r0x0102799c:\n            uVar8 = fcn.010455a0(0xffffffff, 0xffffffff, arg_2ch, arg_2ch >> 0x1f, arg_2ch);\n            do {\n                var_10h = uVar1 >> 0x20;\n                var_8h = uVar1;\n                uVar6 = 0xffffffff;\n                iVar5 = 0x30;\n                uVar7 = uVar4;\n                if (uVar7 < 0x30) {\ncode_r0x01027b55:\n                    if (((uVar4 < 0x41) || (0x5a < uVar4)) && (0x19 < uVar4 - 0x61)) {\n                        uVar6 = 0xffffffff;\n                    }\n                    else {\n                        uVar6 = uVar4;\n                        if (uVar4 - 0x61 < 0x1a) {\n                            uVar6 = uVar4 - 0x20;\n                        }\n                        uVar6 = uVar6 - 0x37;\n                    }\n                }\n                else {\n                    if (uVar7 < 0x3a) {\ncode_r0x01027b4b:\n                        uVar6 = uVar4 - iVar5;\n                    }\n                    else {\n                        iVar5 = 0xff10;\n                        if (uVar7 < 0xff10) {\n                            iVar5 = 0x660;\n                            if ((uVar7 < 0x660) ||\n                               ((0x669 < uVar7 &&\n                                ((iVar5 = 0x6f0,  uVar7 < 0x6f0 ||\n                                 ((0x6f9 < uVar7 &&\n                                  ((iVar5 = 0x966,  uVar7 < 0x966 ||\n                                   ((0x96f < uVar7 &&\n                                    ((iVar5 = 0x9e6,  uVar7 < 0x9e6 ||\n                                     ((0x9ef < uVar7 &&\n                                      ((iVar5 = 0xa66,  uVar7 < 0xa66 ||\n                                       ((0xa6f < uVar7 &&\n                                        ((iVar5 = 0xae6,  uVar7 < 0xae6 ||\n                                         ((0xaef < uVar7 &&\n                                          ((iVar5 = 0xb66,  uVar7 < 0xb66 ||\n                                           ((0xb6f < uVar7 &&\n                                            ((iVar5 = 0xc66,  uVar7 < 0xc66 ||\n                                             ((0xc6f < uVar7 &&\n                                              ((iVar5 = 0xce6,  uVar7 < 0xce6 ||\n                                               ((0xcef < uVar7 &&\n                                                ((iVar5 = 0xd66,  uVar7 < 0xd66 ||\n                                                 ((0xd6f < uVar7 &&\n                                                  ((iVar5 = 0xe50,  uVar7 < 0xe50 ||\n                                                   ((0xe59 < uVar7 &&\n                                                    ((iVar5 = 0xed0,  uVar7 < 0xed0 ||\n                                                     ((0xed9 < uVar7 &&\n                                                      ((iVar5 = 0xf20,  uVar7 < 0xf20 ||\n                                                       ((0xf29 < uVar7 &&\n                                                        ((iVar5 = 0x1040,  uVar7 < 0x1040 ||\n                                                         ((0x1049 < uVar7 &&\n                                                          ((iVar5 = 0x17e0,  uVar7 < 0x17e0 ||\n                                                           ((0x17e9 < uVar7 &&\n                                                            ((iVar5 = 0x1810,  uVar7 < 0x1810 || (0x1819 < uVar7))))))))\n                                                         ))))))))))))))))))))))))))))))))))))))))))))))))))))))\n                            goto code_r0x01027b55;\n                            goto code_r0x01027b4b;\n                        }\n                        if (uVar7 < 0xff1a) goto code_r0x01027b4b;\n                    }\n                    if (uVar6 == 0xffffffff) goto code_r0x01027b55;\n                }\n                if ((uVar6 == 0xffffffff) || (arg_2ch <= uVar6)) goto code_r0x01027bfa;\n                if ((uVar1 < uVar8) || ((uVar8 == uVar1 && ((arg_2ch != 0 || (uVar6 <= extraout_ECX)))))) {\n                    iVar9 = fcn.010214b0(arg_2ch, arg_2ch >> 0x1f, uVar1);\n                    uVar1 = iVar9 + 0x1c;\n                    var_4h = var_4h | 8;\n                }\n                else {\n                    var_4h = var_4h | 0xc;\n                }\n                uVar4 = fcn.0102ac58();\n                uVar4 = uVar4 & 0xffff;\n            } while( true );\n        }\n        puVar3 = fcn.0102e9b5();\n        *puVar3 = 0x16;\n        fcn.01025c2a();\n    }\n    uVar1 = 0;\ncode_r0x01027c8b:\n    if ((arg_24h != NULL) && ((arg_1ch | arg_20h) == 0)) {\n        *arg_24h = 0;\n    }\n    return uVar1;\ncode_r0x01027bfa:\n    fcn.0102b7e7(uVar4);\n    if ((var_4h & 8) == 0) {\n        fcn.0102b051(arg_1ch, arg_20h);\n        uVar1 = 0;\n    }\n    else {\n        cVar2 = fcn.0102644d(var_4h, var_8h, var_10h);\n        if (cVar2 == '\\0') {\n            if ((var_4h & 2) != 0) {\n                uVar1 = CONCAT44(-(var_10h + (var_8h != 0)), -var_8h);\n            }\n        }\n        else {\n            puVar3 = fcn.0102e9b5();\n            *puVar3 = 0x22;\n            if ((var_4h & 1) == 0) {\n                uVar1 = 0xffffffffffffffff;\n            }\n            else if ((var_4h & 2) == 0) {\n                uVar1 = 0x7fffffffffffffff;\n            }\n            else {\n                uVar1 = 0x8000000000000000;\n            }\n        }\n    }\n    if (var_34h != '\\0') {\n        *(var_40h + 0x350) = *(var_40h + 0x350) & 0xfffffffd;\n    }\n    goto code_r0x01027c8b;\n}\n",
        "token_count": 3122
    },
    "0102ccbf": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.0102ccbf(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.0102b892();\n    if (cVar1 != '\\0') {\n        if (*(param_1 + 0x10) == 0) {\ncode_r0x0102ccdf:\n            puVar2 = fcn.0102e9b5();\n            *puVar2 = 0x16;\n            fcn.01025c2a();\n        }\n        else {\n            do {\n                *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n                if (*(param_1 + 0x450) == 2) {\n                    return *(param_1 + 0x18);\n                }\n                *(param_1 + 0x38) = 0;\n                *(param_1 + 0x1c) = 0;\ncode_r0x0102cd85:\n                cVar1 = **(param_1 + 0x10);\n                *(param_1 + 0x31) = cVar1;\n                if (cVar1 != '\\0') {\n                    *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                    if (*(param_1 + 0x18) < 0) goto code_r0x0102cd98;\n                    arg_ch = *(param_1 + 0x1c);\n                    arg_8h = *(param_1 + 0x31);\n                    uVar3 = fcn.0102cbaf(arg_8h, arg_ch);\n                    *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x102cdc3\n                    switch(uVar3) {\n                    case 0:\n                        cVar1 = fcn.0102ce20();\n                        break;\n                    case 1:\n                        *(param_1 + 0x28) = 0xffffffff;\n                        *(param_1 + 0x24) = 0;\n                        *(param_1 + 0x30) = 0;\n                        *(param_1 + 0x20) = 0;\n                        *(param_1 + 0x2c) = 0;\n                        *(param_1 + 0x3c) = 0;\n                        goto code_r0x0102cd85;\n                    case 2:\n                        cVar1 = fcn.0102cde3();\n                        break;\n                    case 3:\n                        cVar1 = fcn.0102d273();\n                        break;\n                    case 4:\n                        goto code_r0x0102cd5f;\n                    case 5:\n                        cVar1 = fcn.0102cecd();\n                        break;\n                    case 6:\n                        cVar1 = fcn.0102cef3();\n                        break;\n                    case 7:\n                        cVar1 = fcn.0102d041(arg_8h, arg_ch, arg_8h, unaff_EBX, unaff_retaddr, param_2, param_3, param_4\n                                             , param_5, param_6, param_7);\n                        break;\n                    case 0xbad1abe1:\n                        goto code_r0x0102ccf2;\n                    default:\n                        goto code_r0x0102ccdf;\n                    }\n                    if (cVar1 == '\\0') {\n                        return 0xffffffff;\n                    }\n                    goto code_r0x0102cd85;\n                }\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x0102cd98:\n                cVar1 = fcn.0102d798();\n            } while (cVar1 != '\\0');\n        }\n    }\ncode_r0x0102ccf2:\n    return 0xffffffff;\ncode_r0x0102cd5f:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x0102cd85;\n}\n",
        "token_count": 962
    },
    "0102eb14": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0102eb14(uint16_t **arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_10h;\n    uint var_ch;\n    uint16_t var_8h [2];\n    uint var_4h;\n    \n    iVar3 = 0x1078360;\n    if ((arg_8h[3] >> 0xc & 1) == 0) {\n        iVar1 = fcn.0102c2fb(arg_8h);\n        if ((iVar1 == -1) || (iVar1 = fcn.0102c2fb(arg_8h),  iVar1 == -2)) {\n            iVar1 = 0x1078360;\n        }\n        else {\n            iVar1 = fcn.0102c2fb(arg_8h);\n            uVar2 = fcn.0102c2fb(arg_8h);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x2081ae8) + (uVar2 & 0x3f) * 0x38;\n        }\n        if (*(iVar1 + 0x29) != '\\0') {\n            puVar4 = &var_4h;\n            do {\n                iVar3 = fcn.0102c11b(arg_8h);\n                if (iVar3 == -1) {\n                    return 0xffff;\n                }\n                *puVar4 = iVar3;\n                puVar4 = puVar4 + 1;\n            } while (puVar4 != &var_4h + 2U);\n            return &var_4h + 2U & 0xffff0000 | var_4h;\n        }\n    }\n    if ((arg_8h[3] >> 0xc & 1) == 0) {\n        iVar1 = fcn.0102c2fb(arg_8h);\n        if ((iVar1 != -1) && (iVar1 = fcn.0102c2fb(arg_8h),  iVar1 != -2)) {\n            iVar3 = fcn.0102c2fb(arg_8h);\n            uVar2 = fcn.0102c2fb(arg_8h);\n            iVar3 = *((iVar3 >> 6) * 4 + 0x2081ae8) + (uVar2 & 0x3f) * 0x38;\n        }\n        if (*(iVar3 + 0x28) < '\\0') {\n            arg_10h = 1;\n            iVar3 = fcn.0102c11b(arg_8h);\n            if (iVar3 != -1) {\n                var_ch._0_1_ = iVar3;\n                iVar3 = fcn.0102e3ea();\n                if (*(iVar3 + var_ch * 2) < 0) {\n                    iVar3 = fcn.0102c11b(arg_8h);\n                    if (iVar3 == -1) {\n                        fcn.0102fab5(var_ch, arg_8h);\n                        return 0xffff;\n                    }\n                    var_ch._1_1_ = iVar3;\n                    arg_10h = 2;\n                }\n                uVar2 = fcn.01034385(var_8h, &var_ch, arg_10h);\n                if (uVar2 != 0xffffffff) {\n                    return uVar2 & 0xffff0000 | var_8h[0];\n                }\n                puVar4 = fcn.0102e9b5();\n                *puVar4 = 0x2a;\n            }\n            return 0xffff;\n        }\n    }\n    if (arg_8h[2] < 2) {\n        uVar2 = fcn.010367f4(arg_8h);\n    }\n    else {\n        arg_8h[2] = arg_8h[2] + -1;\n        uVar2 = **arg_8h;\n        *arg_8h = *arg_8h + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 915
    },
    "010318c7": {
        "rules": [
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010318c7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    char *var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else if ((arg_8h == 2) || (arg_8h == 1)) {\n        fcn.0103d299();\n        iVar1 = 0;\n        fcn.0103ccda(0, 0x20819a8, 0x104);\n        *0x2081ecc = 0x20819a8;\n        var_10h = *0x2081edc;\n        if ((*0x2081edc == NULL) || (**0x2081edc == '\\0')) {\n            var_10h = 0x20819a8;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.01031701(var_10h, 0, 0, &var_4h, &var_ch);\n        piVar3 = fcn.01031878(var_4h, var_ch, 1);\n        piVar4 = piVar3;\n        if (piVar3 == NULL) {\n            puVar2 = fcn.0102e9b5();\n            iVar1 = 0xc;\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.01031701(var_10h, piVar3, piVar3 + var_4h, &var_4h, &var_ch);\n            if (arg_8h == 1) {\n                *0x2081ed0 = var_4h + -1;\n                piVar4 = NULL;\n                *0x2081ed4 = piVar3;\n            }\n            else {\n                var_8h = NULL;\n                iVar1 = fcn.0103cccf(piVar3, &var_8h);\n                piVar3 = var_8h;\n                if (iVar1 == 0) {\n                    *0x2081ed0 = 0;\n                    iVar1 = *var_8h;\n                    while (iVar1 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x2081ed0 = *0x2081ed0 + 1;\n                        iVar1 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    iVar1 = 0;\n                    *0x2081ed4 = piVar3;\n                }\n                fcn.0103379b(var_8h);\n                var_8h = NULL;\n            }\n        }\n        fcn.0103379b(piVar4);\n    }\n    else {\n        puVar2 = fcn.0102e9b5();\n        iVar1 = 0x16;\n        *puVar2 = 0x16;\n        fcn.01025c2a();\n    }\n    return iVar1;\n}\n",
        "token_count": 706
    },
    "01013d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01013d85)\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.01013d20(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    uint var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_70h;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    ushort var_20h;\n    ushort var_1eh;\n    ushort var_1ch;\n    uint var_1ah;\n    ushort var_16h;\n    ushort var_14h;\n    uchar *var_12h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1045fcd;\n    var_ch_3 = *in_FS_OFFSET;\n    *0x10 = &stack0xffffff7c;\n    *in_FS_OFFSET = &var_ch_3;\n    var_24h = 0;\n    arg_ch = fcn.0101e120(var_ch_2);\n    iVar4 = fcn.0101eb50();\n    if (0 < iVar4) {\n        iVar4 = fcn.0101eb50();\n        if ((-1 < iVar4) && ((0xffffffff < iVar4 || (arg_ch < iVar4)))) {\n            uVar5 = fcn.0101eb50();\n            var_50h = uVar5 - arg_ch;\n            var_4ch = (uVar5 >> 0x20) - (uVar5 < arg_ch);\n            goto code_r0x01013dd9;\n        }\n    }\n    var_50h = 0;\n    var_4ch = 0;\ncode_r0x01013dd9:\n    var_40h = var_50h;\n    var_3ch = var_4ch;\n    fcn.01017ae0(var_8h);\n    var_4h = 0;\n    cVar1 = fcn.01018b30();\n    if (cVar1 == '\\0') {\n        var_24h = 4;\n    }\n    else {\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        uVar2 = fcn.0101dca0();\n        if ((uVar2 & 0x1c0) != 0x40) {\n            while( true ) {\n                if ((var_3ch < 0) || ((var_3ch < 1 && (var_40h == 0)))) goto code_r0x01013ed5;\n                var_12h._0_2_ = fcn.0101dc80();\n                fcn.0101e6b0();\n                var_16h = fcn.0101e850(var_12h);\n                var_14h = var_16h;\n                var_1ah._2_2_ = fcn.0101db60();\n                cVar1 = fcn.0101db70(&var_1ah + 2, &var_16h);\n                if (cVar1 != '\\0') break;\n                bVar3 = var_40h == 0;\n                var_40h = var_40h + -1;\n                var_3ch = var_3ch - bVar3;\n            }\n            var_24h = 4;\n        }\ncode_r0x01013ed5:\n        if (var_24h == 0) {\n            fcn.0101e6b0();\n            uVar5 = fcn.0101e8d0(var_ch_2, arg_ch, 0);\n            if ((uVar5 != arg_ch) || (uVar5 >> 0x20 != 0)) {\n                var_24h = 4;\n            }\n        }\n        if (var_24h == 0) {\n            while( true ) {\n                if ((var_3ch < 0) || ((var_3ch < 1 && (var_40h == 0)))) goto code_r0x01013fbf;\n                var_1ah._0_2_ = fcn.0101dc80();\n                fcn.0101e6b0();\n                var_1eh = fcn.0101e850(var_1ah);\n                var_1ch = var_1eh;\n                var_20h = fcn.0101db60();\n                cVar1 = fcn.0101db70(&var_20h, &var_1eh);\n                if (cVar1 != '\\0') break;\n                bVar3 = var_40h == 0;\n                var_40h = var_40h + -1;\n                var_3ch = var_3ch - bVar3;\n            }\n            var_24h = 4;\n        }\ncode_r0x01013fbf:\n        fcn.0101eb10(0, 0);\n        var_4h = 0;\n    }\n    fcn.0101e7b0(var_24h, 0);\n    var_4h = 0xffffffff;\n    fcn.010184b0();\n    *in_FS_OFFSET = var_ch_3;\n    return var_8h;\n}\n",
        "token_count": 1334
    },
    "01014420": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01014420(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h + 0x23 <= arg_8h) {\n        fcn.0101b510();\n    }\n    iVar1 = fcn.01019480(arg_8h + 0x23);\n    if (iVar1 == 0) {\n        fcn.01025c3a();\n    }\n    uVar2 = iVar1 + 0x23U & 0xffffffe0;\n    *(uVar2 - 4) = iVar1;\n    return uVar2;\n}\n",
        "token_count": 168
    },
    "01014d20": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n\nvoid __cdecl fcn.01014d20(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint arg_10h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_20h;\n    uint var_1ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1078124 ^ &stack0xfffffffc;\n    arg_8h_00 = fcn.01015f20(&var_1ch);\n    if (arg_ch < 0) {\n        iVar1 = fcn.010158e0(arg_8h_00, -arg_ch);\n        var_20h = iVar1 + -1;\n        *var_20h = 0x2d;\n    }\n    else {\n        var_20h = fcn.010158e0(arg_8h_00, arg_ch);\n    }\n    arg_10h = fcn.01016710(0);\n    fcn.01013ae0(var_20h, arg_8h_00, arg_10h);\n    fcn.01021495(var_20h);\n    return;\n}\n",
        "token_count": 292
    },
    "01014e70": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.01014e70(uchar *arg_8h)\n\n{\n    uchar *puVar1;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.01026100(arg_8h);\n    var_4h = var_4h + 1;\n    puVar1 = fcn.01025c8b(var_4h, 1);\n    var_8h = puVar1;\n    if (puVar1 == NULL) {\n        fcn.0101eea7();\n    }\n    for (; var_4h != 0; var_4h = var_4h + -1) {\n        *var_8h = *arg_8h;\n        arg_8h = arg_8h + 1;\n        var_8h = var_8h + 1;\n    }\n    return puVar1;\n}\n",
        "token_count": 209
    },
    "01014ee0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.01014ee0(int32_t arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    ushort *var_1ch;\n    int32_t var_18h;\n    ushort *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_28h = 0;\n    var_24h = 0;\n    var_20h = fcn.01026100(arg_8h);\n    var_20h = var_20h + 1;\n    var_8h = 0;\n    var_18h = arg_8h;\n    var_10h = var_20h;\n    while ((var_10h != 0 && (var_ch = fcn.0101f404(&var_4h, var_18h, var_10h, &var_28h, arg_10h),  0 < var_ch))) {\n        var_10h = var_10h - var_ch;\n        var_18h = var_18h + var_ch;\n        var_8h = var_8h + 1;\n    }\n    var_8h = var_8h + 1;\n    var_1ch = fcn.01025c8b(var_8h, 2);\n    if (var_1ch == NULL) {\n        fcn.0101eea7();\n    }\n    var_14h = var_1ch;\n    var_30h = 0;\n    var_2ch = 0;\n    while ((var_8h != 0 && (var_ch = fcn.0101f404(var_14h, arg_8h, var_20h, &var_30h, arg_10h),  0 < var_ch))) {\n        var_10h = var_10h - var_ch;\n        arg_8h = arg_8h + var_ch;\n        var_8h = var_8h + -1;\n        var_14h = var_14h + 1;\n    }\n    *var_14h = 0;\n    return var_1ch;\n}\n",
        "token_count": 528
    },
    "01015790": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01015790(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    puVar1 = fcn.01015fb0(&arg_ch, &arg_14h);\n    iVar2 = fcn.0101c6b0(arg_8h, arg_10h, *puVar1);\n    if (iVar2 == 0) {\n        if (arg_ch < arg_14h) {\n            iVar2 = -1;\n        }\n        else if (arg_14h < arg_ch) {\n            iVar2 = 1;\n        }\n        else {\n            iVar2 = 0;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 184
    },
    "010158e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar * __cdecl fcn.010158e0(char *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = arg_ch;\n    do {\n        arg_8h = arg_8h + -1;\n        *arg_8h = var_8h % 10 + '0';\n        var_8h = var_8h / 10;\n    } while (var_8h != 0);\n    return arg_8h;\n}\n",
        "token_count": 137
    },
    "010161b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.010161b0(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046185;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101ed46(0);\n    var_4h = 0;\n    var_10h = *0x20810b8;\n    uVar3 = fcn.01018ae0(uVar3, uVar1);\n    var_18h = fcn.0101a380(uVar3);\n    if (var_18h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.0101a010(&var_10h, arg_8h);\n            arg_8h_00 = var_10h;\n            if (iVar2 == -1) {\n                fcn.0101b530();\n            }\n            else {\n                fcn.01013ba0(var_10h);\n                var_4h._0_1_ = 1;\n                fcn.0101f083(arg_8h_00);\n                (**(*arg_8h_00 + 4))();\n                *0x20810b8 = var_10h;\n                var_18h = var_10h;\n                fcn.0101e6f0();\n                var_4h = var_4h._1_3_ << 8;\n                fcn.010181b0();\n            }\n        }\n        else {\n            var_18h = var_10h;\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.0101ed9e();\n    *in_FS_OFFSET = var_ch;\n    return var_18h;\n}\n",
        "token_count": 549
    },
    "010162c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.010162c0(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046185;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101ed46(0);\n    var_4h = 0;\n    var_10h = *0x20810b0;\n    uVar3 = fcn.01018ae0(uVar3, uVar1);\n    var_18h = fcn.0101a380(uVar3);\n    if (var_18h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.0101a100(&var_10h, arg_8h);\n            arg_8h_00 = var_10h;\n            if (iVar2 == -1) {\n                fcn.0101b530();\n            }\n            else {\n                fcn.01013ba0(var_10h);\n                var_4h._0_1_ = 1;\n                fcn.0101f083(arg_8h_00);\n                (**(*arg_8h_00 + 4))();\n                *0x20810b0 = var_10h;\n                var_18h = var_10h;\n                fcn.0101e6f0();\n                var_4h = var_4h._1_3_ << 8;\n                fcn.010181b0();\n            }\n        }\n        else {\n            var_18h = var_10h;\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.0101ed9e();\n    *in_FS_OFFSET = var_ch;\n    return var_18h;\n}\n",
        "token_count": 549
    },
    "010163d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.010163d0(uint arg_8h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046185;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = 0;\n    fcn.0101ed46(0);\n    var_4h = 0;\n    var_10h = *0x20810b4;\n    uVar3 = fcn.01018ae0(uVar3, uVar1);\n    var_18h = fcn.0101a380(uVar3);\n    if (var_18h == NULL) {\n        if (var_10h == NULL) {\n            iVar2 = fcn.0101a1f0(&var_10h, arg_8h);\n            arg_8h_00 = var_10h;\n            if (iVar2 == -1) {\n                fcn.0101b530();\n            }\n            else {\n                fcn.01013ba0(var_10h);\n                var_4h._0_1_ = 1;\n                fcn.0101f083(arg_8h_00);\n                (**(*arg_8h_00 + 4))();\n                *0x20810b4 = var_10h;\n                var_18h = var_10h;\n                fcn.0101e6f0();\n                var_4h = var_4h._1_3_ << 8;\n                fcn.010181b0();\n            }\n        }\n        else {\n            var_18h = var_10h;\n        }\n    }\n    var_4h = 0xffffffff;\n    fcn.0101ed9e();\n    *in_FS_OFFSET = var_ch;\n    return var_18h;\n}\n",
        "token_count": 551
    },
    "01017250": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01017250(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint uVar2;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104630f;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar2 = 0;\n    fcn.0101ed46(0);\n    var_4h = 0;\n    fcn.010166d0(uVar2, uVar1);\n    var_4h._0_1_ = 1;\n    fcn.010166d0();\n    var_4h._0_1_ = 2;\n    fcn.010166f0();\n    var_4h._0_1_ = 3;\n    fcn.010166f0();\n    var_4h._0_1_ = 4;\n    fcn.010166d0();\n    var_4h._0_1_ = 5;\n    fcn.010166d0();\n    var_4h = CONCAT31(var_4h._1_3_, 6);\n    if (arg_8h == 0) {\n        fcn.0101ef04(\"bad locale name\");\n    }\n    else {\n        fcn.0101f1b5(in_ECX, arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 391
    },
    "01017320": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.01017320(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    piVar1 = fcn.0101e6b0(*in_ECX);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))();\n    }\n    return in_ECX;\n}\n",
        "token_count": 128
    },
    "01017840": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01017840(uint arg_8h)\n\n{\n    uint uVar1;\n    ulong *in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint in_stack_ffffffa4;\n    uint var_4ch;\n    uint32_t var_30h;\n    ulong *var_2ch;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10463ad;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.01017840::var_ch;\n    var_30h = arg_8h;\n    var_2ch = in_ECX;\n    // switch table (9 cases) at 0x101797c\n    switch(var_30h) {\n    case 0:\n        *in_ECX = 0;\n        break;\n    case 1:\n        uVar1 = fcn.01015d20();\n        *var_2ch = uVar1;\n        break;\n    case 2:\n        uVar1 = fcn.01015dc0();\n        *var_2ch = uVar1;\n        break;\n    case 3:\n        in_stack_ffffffa4 = 0x10178ae;\n        uVar1 = fcn.01015bd0(0x1068200);\n        *var_2ch = uVar1;\n        break;\n    case 4:\n        *in_ECX = 0;\n        break;\n    case 5:\n        *in_ECX = 0;\n        *(in_ECX + 4) = 0;\n        break;\n    case 6:\n        *in_ECX = 0;\n        *(in_ECX + 4) = 0;\n        break;\n    case 7:\n        *in_ECX = 0;\n        break;\n    case 8:\n        uVar1 = fcn.01015c80(var_10h);\n        *var_2ch = uVar1;\n        break;\n    default:\n        *in_ECX = 0;\n        if (arg_8h == 0) {\n            fcn.01016920(\"961c151d2e87f2686a955a9be24d316f1362bf21 3.9.1\");\n            var_4h = 0;\n            fcn.0101c750(&fcn.01017840::var_4ch, 500, &fcn.01017840::var_28h);\n            in_stack_ffffffa4 = 0x10763a4;\n            fcn.01023cbc(&fcn.01017840::var_4ch, 0x10763a4);\n            var_4h = 0xffffffff;\n            fcn.01017ef0();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(in_stack_ffffffa4);\n    return;\n}\n",
        "token_count": 683
    },
    "01017ae0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01017ae0(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar5;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10463ed;\n    var_ch = *in_FS_OFFSET;\n    uVar3 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar5 = arg_8h;\n    fcn.01017320(arg_8h);\n    var_4h = 0;\n    cVar1 = fcn.0101ddb0(iVar5, uVar3);\n    if (cVar1 == '\\0') {\n        *(in_ECX + 4) = 0;\n    }\n    else {\n        iVar4 = fcn.0101e920();\n        if ((iVar4 == 0) || (iVar4 == arg_8h)) {\n            *(in_ECX + 4) = 1;\n        }\n        else {\n            fcn.0101dcc0();\n            uVar2 = fcn.0101ddb0(iVar5, uVar3);\n            *(in_ECX + 4) = uVar2;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 359
    },
    "01017cc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017cc0(int32_t param_1)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 4) != 0) {\n        fcn.0101c9d0(*(param_1 + 4), 1);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 147
    },
    "01017d60": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017d60(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.0101b590();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "01017db0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017db0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (param_1[1] != 0) {\n        fcn.010143d0(param_1[1], uVar1);\n        fcn.010143d0(param_1[1] + 4);\n        fcn.010143d0(param_1[1] + 8);\n        arg_ch = fcn.01014540(param_1[1] + 0x10);\n        fcn.01015e60(*param_1, arg_ch);\n    }\n    fcn.01017e50();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 256
    },
    "01017f50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017f50(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.std::ctype_wchar_t_.0;\n    if (param_1[4] != NULL) {\n        fcn.01025c96(param_1[3]);\n    }\n    fcn.01025c96(param_1[5]);\n    fcn.01018390();\n    return;\n}\n",
        "token_count": 98
    },
    "01018030": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01018030(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 4) != 0) {\n        arg_8h = *(param_1 + 4);\n        fcn.01016710(arg_8h, uVar1);\n        fcn.01018cd0(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 201
    },
    "01018090": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01018090(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 4) != 0) {\n        arg_8h = *(param_1 + 4);\n        fcn.01016710(arg_8h, uVar1);\n        fcn.01018dd0(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 201
    },
    "010180f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.010180f0(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 4) != 0) {\n        arg_8h = *(param_1 + 4);\n        fcn.01016710(arg_8h, uVar1);\n        fcn.01018e00(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 202
    },
    "01018150": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01018150(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if (*(param_1 + 4) != 0) {\n        arg_8h = *(param_1 + 4);\n        fcn.01016710(arg_8h, uVar1);\n        fcn.01018d60(arg_8h);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 201
    },
    "010181b0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.010181b0(int32_t *param_1)\n\n{\n    int32_t arg_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        arg_8h = *param_1;\n        fcn.01016710();\n        fcn.01018f30(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "010182e0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.010182e0(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046450;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    piVar2 = fcn.0101e6b0(uVar1, param_1, *param_1);\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 238
    },
    "01018440": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01018440(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(param_1 + 4) != 0) && (puVar1 = (**(**(param_1 + 4) + 8))(),  puVar1 != NULL)) {\n        (***puVar1)(1);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "01018630": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.01018630(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uchar *in_ECX;\n    uint var_8h;\n    ushort var_4h;\n    uint var_2h;\n    \n    if (*(in_ECX + 4) != 0) {\n        var_2h._0_2_ = fcn.0101e850(arg_8h & 0xffff);\n        var_4h = fcn.0101db60();\n        cVar1 = fcn.0101db70(&var_4h, &var_2h);\n        if (cVar1 == '\\0') {\n            return in_ECX;\n        }\n    }\n    *in_ECX = 1;\n    return in_ECX;\n}\n",
        "token_count": 198
    },
    "01018f30": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01018f30(uint *arg_8h)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h != NULL) {\n        (***arg_8h)(1);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "01019620": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019620(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_ch_00;\n    int32_t arg_8h_00;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.01018220();\n    if (*in_ECX != 0) {\n        fcn.010198a0(*in_ECX, in_ECX[1]);\n        arg_ch_00 = in_ECX[2] - *in_ECX >> 4;\n        arg_8h_00 = *in_ECX;\n        fcn.01019ff0();\n        fcn.0101c9f0(arg_8h_00, arg_ch_00);\n    }\n    *in_ECX = arg_8h;\n    in_ECX[1] = arg_ch * 0x10 + arg_8h;\n    in_ECX[2] = arg_10h * 0x10 + arg_8h;\n    return;\n}\n",
        "token_count": 260
    },
    "01019af0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01019dc8)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.01019af0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    ushort uVar1;\n    uint32_t uVar2;\n    uint8_t **ppuVar3;\n    uint uVar4;\n    ushort *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint arg_18h_00;\n    int32_t arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_1ch_00;\n    uint arg_1ch_01;\n    uint uVar8;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_c0h;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_8ch;\n    uint32_t var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_68h;\n    uint32_t var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    char *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104651b;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_24h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        var_68h = 0;\n    }\n    else {\n        var_68h = 1;\n    }\n    var_44h = var_68h;\n    uVar2 = fcn.0101dca0(var_10h);\n    if ((uVar2 & 0x3000) == 0x3000) {\n        var_6ch = 0x1068418;\n        if (((var_44h + 2U <= arg_24h) && (arg_20h[var_44h] == '0')) &&\n           ((arg_20h[var_44h + 1] == 'x' || (arg_20h[var_44h + 1] == 'X')))) {\n            var_44h = var_44h + 2;\n        }\n    }\n    else {\n        var_6ch = 0x1068414;\n    }\n    var_88h = fcn.010260b0(arg_20h, var_6ch);\n    var_50h._0_2_ = *0x1068364;\n    ppuVar3 = fcn.0102e300();\n    var_50h._0_2_ = var_50h & 0xff00 | **ppuVar3;\n    var_54h = fcn.010260b0(arg_20h, &var_50h);\n    var_78h = fcn.0101dd70(&var_98h);\n    var_4h = 0;\n    var_74h = var_78h;\n    var_7ch = fcn.010161b0(var_78h);\n    var_4h = 0xffffffff;\n    fcn.01018440();\n    fcn.01016ea0(arg_24h, 0);\n    var_4h = 1;\n    uVar4 = fcn.01018a90(0);\n    fcn.0101eae0(arg_20h, arg_20h + arg_24h, uVar4);\n    var_84h = fcn.0101dd70(&var_a0h);\n    var_4h._0_1_ = 2;\n    var_80h = var_84h;\n    var_60h = fcn.010163d0(var_84h);\n    var_4h._0_1_ = 1;\n    fcn.01018440();\n    fcn.0101dde0(&var_40h);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    var_5ch._0_2_ = fcn.0101e900();\n    if (var_54h != arg_24h) {\n        uVar1 = fcn.0101ca30();\n        puVar5 = fcn.01018a90(var_54h);\n        *puVar5 = uVar1;\n    }\n    if (var_54h == arg_24h) {\n        var_70h = var_88h;\n    }\n    else {\n        var_70h = var_54h;\n    }\n    var_58h = var_70h;\n    var_48h = fcn.01018a70(0);\n    while (((*var_48h != '\\x7f' && ('\\0' < *var_48h)) && (*var_48h < var_58h - var_44h))) {\n        var_58h = var_58h - *var_48h;\n        fcn.0101df70(var_58h, 1, var_5ch);\n        if ('\\0' < var_48h[1]) {\n            var_48h = var_48h + 1;\n        }\n    }\n    uVar2 = fcn.0101e800();\n    _var_90h = fcn.0101eb50();\n    if (0 < _var_90h) {\n        uVar6 = fcn.0101eb50();\n        if (uVar2 < uVar6) {\n            var_4ch = fcn.0101eb50();\n            var_4ch = var_4ch - uVar2;\n            goto code_r0x01019df5;\n        }\n    }\n    var_4ch = 0;\ncode_r0x01019df5:\n    var_64h = fcn.0101dca0();\n    var_64h = var_64h & 0x1c0;\n    if ((var_64h == 0x40) || (var_64h == 0x100)) {\n        if (var_64h == 0x100) {\n            uVar8 = 0;\n            uVar4 = fcn.01018a90(0);\n            puVar7 = fcn.0101b230(arg_8h, &var_b8h, arg_10h, arg_14h, uVar4, uVar8);\n            puVar7 = fcn.0101b3c0(arg_8h, &var_c0h, *puVar7, puVar7[1], arg_1ch & 0xffff, var_4ch);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n            var_4ch = 0;\n        }\n        else {\n            uVar8 = 0;\n            uVar4 = fcn.01018a90(0);\n            puVar7 = fcn.0101b230(arg_8h, &var_c8h, arg_10h, arg_14h, uVar4, uVar8);\n            arg_10h = *puVar7;\n            arg_14h = puVar7[1];\n        }\n    }\n    else {\n        puVar7 = fcn.0101b3c0(arg_8h, &var_a8h, arg_10h, arg_14h, arg_1ch & 0xffff, var_4ch);\n        uVar4 = *puVar7;\n        uVar8 = puVar7[1];\n        var_4ch = 0;\n        arg_1ch_01 = 0;\n        arg_18h_00 = fcn.01018a90(0);\n        puVar7 = fcn.0101b230(arg_8h, &var_b0h, uVar4, uVar8, arg_18h_00, arg_1ch_01);\n        arg_10h = *puVar7;\n        arg_14h = puVar7[1];\n    }\n    arg_8h_00 = uVar2 - var_44h;\n    arg_1ch_00 = var_44h;\n    uVar4 = fcn.01018a90(var_44h);\n    puVar7 = fcn.0101b230(arg_8h, &var_d0h, arg_10h, arg_14h, uVar4, arg_1ch_00);\n    uVar4 = *puVar7;\n    uVar8 = puVar7[1];\n    fcn.0101eb10(0, 0);\n    fcn.0101b3c0(arg_8h, arg_ch, uVar4, uVar8, arg_1ch & 0xffff, var_4ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.01017ef0();\n    var_4h = 0xffffffff;\n    fcn.01017f10();\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(arg_8h_00);\n    return;\n}\n",
        "token_count": 2229
    },
    "0101a010": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0101a010(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104657d;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.01021134(0x44, arg_8h_00);\n        var_4h = 0;\n        if (iVar1 == 0) {\n            var_18h = 0;\n        }\n        else {\n            arg_8h_01 = fcn.0101c450(0);\n            arg_8h_02 = fcn.01017250(arg_8h_01);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.01017030(arg_8h_02, arg_8h_01);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar1 != 0) {\n            fcn.01018250();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 2;\n}\n",
        "token_count": 436
    },
    "0101a100": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0101a100(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10465cd;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.01021134(8, arg_8h_00);\n        var_4h = 0;\n        if (iVar1 == 0) {\n            var_18h = 0;\n        }\n        else {\n            arg_8h_01 = fcn.0101c450(0);\n            arg_8h_02 = fcn.01017250(arg_8h_01);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.010170c0(arg_8h_02, arg_8h_01);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar1 != 0) {\n            fcn.01018250();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 435
    },
    "0101a1f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0101a1f0(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_8h_01;\n    uint arg_8h_02;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h;\n    uint var_58h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104661d;\n    var_ch = *in_FS_OFFSET;\n    arg_8h_00 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_8h != NULL) && (*arg_8h == 0)) {\n        iVar1 = fcn.01021134(0x18, arg_8h_00);\n        var_4h = 0;\n        if (iVar1 == 0) {\n            var_18h = 0;\n        }\n        else {\n            arg_10h = 0;\n            arg_8h_01 = fcn.0101c450(0, 1);\n            arg_8h_02 = fcn.01017250(arg_8h_01);\n            var_4h = CONCAT31(var_4h._1_3_, 1);\n            var_18h = fcn.01017130(arg_8h_02, arg_8h_01, arg_10h);\n        }\n        *arg_8h = var_18h;\n        var_4h = 0xffffffff;\n        if (iVar1 != 0) {\n            fcn.01018250();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return 4;\n}\n",
        "token_count": 462
    },
    "0101a790": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nint32_t __cdecl fcn.0101a790(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    in_ECX[1] = in_ECX[1] + 1;\n    piVar1 = *in_ECX;\n    *(arg_10h + 4) = arg_8h;\n    if (arg_8h == piVar1) {\n        *piVar1 = arg_10h;\n        piVar1[1] = arg_10h;\n        piVar1[2] = arg_10h;\n        *(arg_10h + 0xc) = 1;\n    }\n    else {\n        if (arg_ch == 0) {\n            arg_8h[2] = arg_10h;\n            if (arg_8h == piVar1[2]) {\n                piVar1[2] = arg_10h;\n            }\n        }\n        else {\n            *arg_8h = arg_10h;\n            if (arg_8h == *piVar1) {\n                *piVar1 = arg_10h;\n            }\n        }\n        var_4h = arg_10h;\n        while (*(*(var_4h + 4) + 0xc) == '\\0') {\n            if (*(var_4h + 4) == **(*(var_4h + 4) + 4)) {\n                iVar2 = *(*(*(var_4h + 4) + 4) + 8);\n                if (*(iVar2 + 0xc) == '\\0') {\n                    *(*(var_4h + 4) + 0xc) = 1;\n                    *(iVar2 + 0xc) = 1;\n                    *(*(*(var_4h + 4) + 4) + 0xc) = 0;\n                    var_4h = *(*(var_4h + 4) + 4);\n                }\n                else {\n                    if (var_4h == *(*(var_4h + 4) + 8)) {\n                        var_4h = *(var_4h + 4);\n                        fcn.0101ae20(var_4h);\n                    }\n                    *(*(var_4h + 4) + 0xc) = 1;\n                    *(*(*(var_4h + 4) + 4) + 0xc) = 0;\n                    fcn.0101b410(*(*(var_4h + 4) + 4));\n                }\n            }\n            else {\n                iVar2 = **(*(var_4h + 4) + 4);\n                if (*(iVar2 + 0xc) == '\\0') {\n                    *(*(var_4h + 4) + 0xc) = 1;\n                    *(iVar2 + 0xc) = 1;\n                    *(*(*(var_4h + 4) + 4) + 0xc) = 0;\n                    var_4h = *(*(var_4h + 4) + 4);\n                }\n                else {\n                    if (var_4h == **(var_4h + 4)) {\n                        var_4h = *(var_4h + 4);\n                        fcn.0101b410(var_4h);\n                    }\n                    *(*(var_4h + 4) + 0xc) = 1;\n                    *(*(*(var_4h + 4) + 4) + 0xc) = 0;\n                    fcn.0101ae20(*(*(var_4h + 4) + 4));\n                }\n            }\n        }\n        *(piVar1[1] + 0xc) = 1;\n    }\n    return arg_10h;\n}\n",
        "token_count": 896
    },
    "0101a9a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0101abbb)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0101a9a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, char *arg_20h, \n            uint32_t arg_24h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_1ch_00;\n    uint uVar7;\n    uint uVar8;\n    uint var_b8h;\n    uint var_b0h;\n    uint var_a8h;\n    uint var_a0h;\n    uint var_98h;\n    uint var_90h;\n    uint var_88h;\n    uint var_80h;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    int32_t var_58h;\n    uint32_t var_54h;\n    uint var_50h;\n    int32_t var_4ch;\n    char *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10466a8;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    if ((arg_24h == 0) || ((*arg_20h != '+' && (*arg_20h != '-')))) {\n        var_58h = 0;\n    }\n    else {\n        var_58h = 1;\n    }\n    var_44h = var_58h;\n    uVar1 = fcn.0101dca0(var_10h);\n    if (((((uVar1 & 0xe00) == 0x800) && (var_44h + 2U <= arg_24h)) && (arg_20h[var_44h] == '0')) &&\n       ((arg_20h[var_44h + 1] == 'x' || (arg_20h[var_44h + 1] == 'X')))) {\n        var_44h = var_44h + 2;\n    }\n    var_64h = fcn.0101dd70(&var_80h);\n    var_4h = 0;\n    var_60h = var_64h;\n    var_68h = fcn.010161b0(var_64h);\n    var_4h = 0xffffffff;\n    fcn.01018440();\n    fcn.01016ea0(arg_24h, 0);\n    var_4h = 1;\n    uVar2 = fcn.01018a90(0);\n    fcn.0101eae0(arg_20h, arg_20h + arg_24h, uVar2);\n    var_70h = fcn.0101dd70(&var_88h);\n    var_4h._0_1_ = 2;\n    var_6ch = var_70h;\n    var_5ch = fcn.010163d0(var_70h);\n    var_4h._0_1_ = 1;\n    fcn.01018440();\n    fcn.0101dde0(&var_40h);\n    var_4h = CONCAT31(var_4h._1_3_, 3);\n    var_48h = fcn.01018a70(0);\n    if ((*var_48h != '\\x7f') && ('\\0' < *var_48h)) {\n        var_50h._0_2_ = fcn.0101e900();\n        while (((*var_48h != '\\x7f' && ('\\0' < *var_48h)) && (*var_48h < arg_24h - var_44h))) {\n            arg_24h = arg_24h - *var_48h;\n            fcn.0101df70(arg_24h, 1, var_50h);\n            if ('\\0' < var_48h[1]) {\n                var_48h = var_48h + 1;\n            }\n        }\n    }\n    uVar1 = fcn.0101e800();\n    _var_78h = fcn.0101eb50();\n    if (0 < _var_78h) {\n        uVar3 = fcn.0101eb50();\n        if (uVar1 < uVar3) {\n            var_4ch = fcn.0101eb50();\n            var_4ch = var_4ch - uVar1;\n            goto code_r0x0101abe5;\n        }\n    }\n    var_4ch = 0;\ncode_r0x0101abe5:\n    var_54h = fcn.0101dca0();\n    var_54h = var_54h & 0x1c0;\n    if ((var_54h == 0x40) || (var_54h == 0x100)) {\n        if (var_54h == 0x100) {\n            uVar8 = 0;\n            uVar2 = fcn.01018a90(0);\n            puVar4 = fcn.0101b230(arg_8h, &var_a0h, arg_10h, arg_14h, uVar2, uVar8);\n            puVar4 = fcn.0101b3c0(arg_8h, &var_a8h, *puVar4, puVar4[1], arg_1ch & 0xffff, var_4ch);\n            arg_10h = *puVar4;\n            arg_14h = puVar4[1];\n            var_4ch = 0;\n        }\n        else {\n            uVar8 = 0;\n            uVar2 = fcn.01018a90(0);\n            puVar4 = fcn.0101b230(arg_8h, &var_b0h, arg_10h, arg_14h, uVar2, uVar8);\n            arg_10h = *puVar4;\n            arg_14h = puVar4[1];\n        }\n    }\n    else {\n        puVar4 = fcn.0101b3c0(arg_8h, &var_90h, arg_10h, arg_14h, arg_1ch & 0xffff, var_4ch);\n        uVar2 = *puVar4;\n        uVar8 = puVar4[1];\n        var_4ch = 0;\n        uVar7 = 0;\n        uVar5 = fcn.01018a90(0);\n        puVar4 = fcn.0101b230(arg_8h, &var_98h, uVar2, uVar8, uVar5, uVar7);\n        arg_10h = *puVar4;\n        arg_14h = puVar4[1];\n    }\n    iVar6 = uVar1 - var_44h;\n    arg_1ch_00 = var_44h;\n    uVar2 = fcn.01018a90(var_44h);\n    puVar4 = fcn.0101b230(arg_8h, &var_b8h, arg_10h, arg_14h, uVar2, arg_1ch_00);\n    uVar2 = *puVar4;\n    uVar8 = puVar4[1];\n    uVar7 = 0;\n    uVar5 = 0;\n    fcn.0101eb10(0, 0);\n    fcn.0101b3c0(arg_8h, arg_ch, uVar2, uVar8, arg_1ch & 0xffff, var_4ch);\n    var_4h = CONCAT31(var_4h._1_3_, 1);\n    fcn.01017ef0(uVar5, uVar7, iVar6);\n    var_4h = 0xffffffff;\n    fcn.01017f10();\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(uVar7);\n    return;\n}\n",
        "token_count": 1931
    },
    "0101b230": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0101b230(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint16_t *arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t arg_8h;\n    \n    while (arg_1ch != 0) {\n        arg_8h = *arg_18h;\n        fcn.01016710();\n        fcn.01018630(arg_8h);\n        arg_1ch = arg_1ch + -1;\n        fcn.01016710();\n        arg_18h = arg_18h + 1;\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 173
    },
    "0101b3c0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0101b3c0(uint noname_0, uint *arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t arg_8h;\n    \n    while (arg_1ch != 0) {\n        arg_8h = arg_18h & 0xffff;\n        fcn.01016710();\n        fcn.01018630(arg_8h);\n        arg_1ch = arg_1ch + -1;\n        fcn.01016710();\n    }\n    *arg_ch = arg_10h;\n    arg_ch[1] = arg_14h;\n    return arg_ch;\n}\n",
        "token_count": 163
    },
    "0101b560": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101b560(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.01025c96(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 67
    },
    "0101b5d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101b5d0(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046760;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01018220(uVar1);\n    if (*param_1 != 0) {\n        fcn.01019870(*param_1, param_1[1]);\n        arg_ch = param_1[2] - *param_1;\n        arg_8h = *param_1;\n        fcn.01019ff0();\n        fcn.0101c9b0(arg_8h, arg_ch);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 308
    },
    "0101b690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101b690(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    int32_t arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046760;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01018220(uVar1);\n    if (*param_1 != 0) {\n        fcn.010198a0(*param_1, param_1[1]);\n        arg_ch = param_1[2] - *param_1 >> 4;\n        arg_8h = *param_1;\n        fcn.01019ff0();\n        fcn.0101c9f0(arg_8h, arg_ch);\n        *param_1 = 0;\n        param_1[1] = 0;\n        param_1[2] = 0;\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 310
    },
    "0101c550": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c550(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(in_ECX + 0x38) == 0) {\n        var_4h = 4;\n    }\n    else {\n        var_4h = 0;\n    }\n    fcn.0101c610(arg_8h | var_4h, arg_ch & 0xff);\n    return;\n}\n",
        "token_count": 122
    },
    "0101dcc0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0101dcc0(uint param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10468ad;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    iVar3 = fcn.0101e6b0(uVar2);\n    if (iVar3 != 0) {\n        fcn.01017ae0(param_1);\n        var_4h = 0;\n        cVar1 = fcn.01018b30();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.0101e5e0();\n            if (iVar3 == -1) {\n                fcn.0101e7b0(4, 0);\n            }\n        }\n        var_4h = 0xffffffff;\n        fcn.010184b0();\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 301
    },
    "0101e0a0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0101e0a0(char *param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *param_1 == '\\0';\n    return param_1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 70
    },
    "0101e0d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0101e0d0(char *param_1)\n\n{\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *param_1 == '\\x01';\n    return param_1 & 0xffffff00 | var_4h;\n}\n",
        "token_count": 71
    },
    "0101e850": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0101e86f)\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0101e850(uint arg_8h)\n\n{\n    ushort uVar1;\n    ushort *arg_8h_00;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int64_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    iVar3 = fcn.0101b1b0();\n    if (iVar3 < 1) {\n        uVar1 = fcn.0101e940(&arg_8h);\n        uVar2 = (**(*in_ECX + 0xc))(uVar1);\n        var_2h._0_2_ = uVar2;\n    }\n    else {\n        arg_8h_00 = fcn.0101b1e0();\n        *arg_8h_00 = arg_8h;\n        uVar2 = fcn.0101e940(arg_8h_00);\n        var_2h._0_2_ = uVar2;\n    }\n    return uVar2 & 0xffff0000 | var_2h;\n}\n",
        "token_count": 304
    },
    "0101f82b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101f82b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021890(8);\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *(unaff_EBP + -0x10) = 0;\n    if (*(unaff_EBP + 0x10) != 0) {\n        *extraout_ECX = 0x1069128;\n        extraout_ECX[2] = vtable.std::basic_ios_wchar_t__struct_std::char_traits_wchar_t__.0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x10) = 1;\n    }\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(extraout_ECX + *(*extraout_ECX + 4)) = vtable.std::basic_ostream_wchar_t__struct_std::char_traits_wchar_t__.0;\n    *(*(*extraout_ECX + 4) + -4 + extraout_ECX) = *(*extraout_ECX + 4) + -8;\n    fcn.010201c5(arg_8h_00, arg_ch_00);\n    fcn.0102186a();\n    return;\n}\n",
        "token_count": 379
    },
    "0101f996": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101f996(code **param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    *param_1 = vtable.std::basic_filebuf_wchar_t__struct_std::char_traits_wchar_t__.0;\n    if (param_1[0x13] != NULL) {\n        fcn.0101fe81(uVar1);\n    }\n    if (*(param_1 + 0x12) != '\\0') {\n        fcn.0101ff04();\n    }\n    fcn.0101fa38();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 221
    },
    "0101fd63": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101fd63(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0x48) = arg_ch == 1;\n    *(in_ECX + 0x3e) = 0;\n    fcn.0101fd9b();\n    *(in_ECX + 0x4c) = arg_8h;\n    *(in_ECX + 0x40) = *0x2081270;\n    uVar1 = *0x2081274;\n    *(in_ECX + 0x38) = 0;\n    *(in_ECX + 0x44) = uVar1;\n    return;\n}\n",
        "token_count": 167
    },
    "010201c5": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010201c5(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    \n    fcn.0101fdd8();\n    *(in_ECX + 0x3c) = 0;\n    *(in_ECX + 0x38) = arg_8h;\n    uVar1 = fcn.0102085e(0x20);\n    *(in_ECX + 0x40) = uVar1;\n    if (*(in_ECX + 0x38) == 0) {\n        fcn.0101c610(*(in_ECX + 0xc) | 4, 0);\n    }\n    if (arg_ch != '\\0') {\n        fcn.01020bd5(in_ECX);\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "01023df6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.01023df6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h, uint arg_ch, uint noname_19, uint noname_20, \n            uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint *var_40h_2;\n    code *pcStack64;\n    uint32_t uStack60;\n    uint uStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uchar *var_20h_2;\n    int32_t var_1ch_2;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    code *var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_20h_2 = &stack0xfffffffc;\n    puStack40 = &stack0xffffffb8;\n    if (var_3ch == 0x123) {\n        *var_38h = 0x1023eb0;\n        var_8h = 1;\n    }\n    else {\n        pcStack64 = fcn.01023ffc;\n        uStack60 = *0x1078124 ^ &fcn.01023df6::var_40h_2;\n        uStack56 = var_2ch;\n        puStack52 = var_38h;\n        uStack48 = var_28h;\n        uStack44 = var_24h;\n        var_1ch_2 = 0;\n        var_40h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.01023df6::var_40h_2;\n        var_8h = 1;\n        var_18h = var_3ch;\n        var_14h = var_34h;\n        iVar1 = fcn.010245ef();\n        var_4h = *(iVar1 + 8);\n        var_ch = *0x10471b0;\n        (**0x10471b0)();\n        var_10h = var_4h;\n        (*var_4h)(*var_3ch, &fcn.01023df6::var_18h);\n        var_8h = 0;\n        if (var_1ch_2 == 0) {\n            *in_FS_OFFSET = var_40h_2;\n        }\n        else {\n            *var_40h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_40h_2;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 756
    },
    "0102496b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0102496b(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, uint arg_1ch, \n            int32_t arg_20h, int32_t arg_24h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int32_t var_68h;\n    int32_t var_64h;\n    int32_t var_5ch;\n    uint *var_58h;\n    uint var_54h;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    int32_t *var_44h;\n    uint32_t *var_40h;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    int32_t *var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint *var_18h;\n    int32_t var_14h;\n    uint32_t *var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1ch = var_1ch & 0xffffff00;\n    var_1h._0_1_ = '\\0';\n    var_ch = fcn.01025909(arg_ch, arg_14h, arg_18h);\n    if ((var_ch < -1) || (arg_18h[1] <= var_ch)) goto code_r0x01024d1b;\n    if (((*arg_8h != -0x1f928c9d) || (arg_8h[4] != 3)) ||\n       ((((arg_8h[5] != 0x19930520 && (arg_8h[5] != 0x19930521)) && (arg_8h[5] != 0x19930522)) ||\n        (iVar5 = 0,  arg_8h[7] != 0)))) {\n        var_8h = arg_10h;\n        goto code_r0x01024abe;\n    }\n    iVar4 = fcn.010245ef();\n    if (*(iVar4 + 0x10) == 0) {\n        return;\n    }\n    iVar4 = fcn.010245ef();\n    arg_8h = *(iVar4 + 0x10);\n    iVar4 = fcn.010245ef();\n    var_1ch = CONCAT31(var_1ch._1_3_, 1);\n    var_8h = *(iVar4 + 0x14);\n    if ((arg_8h == NULL) ||\n       ((((*arg_8h == -0x1f928c9d && (arg_8h[4] == 3)) &&\n         ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) && (arg_8h[7] == 0))))\n    goto code_r0x01024d1b;\n    iVar4 = fcn.010245ef();\n    if (*(iVar4 + 0x1c) == 0) {\ncode_r0x01024abe:\n        var_34h = arg_18h;\n        var_30h = 0;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) &&\n           ((arg_8h[5] == 0x19930520 || ((arg_8h[5] == 0x19930521 || (arg_8h[5] == 0x19930522)))))) {\n            if (arg_18h[3] != 0) {\n                fcn.01023d28(&var_44h, &var_34h, var_ch, arg_14h, arg_18h, arg_20h);\n                var_2ch = var_44h;\n                var_10h = var_40h;\n                if (var_40h < var_38h) {\n                    var_20h = var_40h * 0x14;\n                    do {\n                        iVar5 = var_ch;\n                        puVar6 = *(*var_2ch + 0x10) + var_20h;\n                        puVar7 = &var_68h;\n                        var_10h = var_40h;\n                        for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n                            *puVar7 = *puVar6;\n                            puVar6 = puVar6 + 1;\n                            puVar7 = puVar7 + 1;\n                        }\n                        if (((var_68h <= iVar5) && (iVar5 <= var_64h)) && (var_14h = 0,  var_5ch != 0)) {\n                            iVar5 = **(arg_8h[7] + 0xc);\n                            var_24h = *(arg_8h[7] + 0xc) + 1;\n                            var_18h = var_58h;\n                            var_28h = iVar5;\n                            do {\n                                var_54h = *var_18h;\n                                uStack84 = var_18h[1];\n                                uStack80 = var_18h[2];\n                                uStack76 = var_18h[3];\n                                iVar4 = iVar5;\n                                piVar8 = var_24h;\n                                var_40h = var_10h;\n                                for (; var_10h = var_40h,  0 < iVar4; iVar4 = iVar4 + -1) {\n                                    iVar5 = fcn.01024e57(&var_54h, *piVar8, arg_8h[7]);\n                                    if (iVar5 != 0) {\n                                        var_1h._0_1_ = '\\x01';\n                                        fcn.010248eb(arg_8h, arg_ch, var_8h, arg_14h, arg_18h, &var_54h, *piVar8, \n                                                     &var_68h, arg_20h, arg_24h);\n                                        var_40h = var_10h;\n                                        goto code_r0x01024bf9;\n                                    }\n                                    piVar8 = piVar8 + 1;\n                                    iVar5 = var_28h;\n                                    var_40h = var_10h;\n                                }\n                                var_14h = var_14h + 1;\n                                var_18h = var_18h + 4;\n                            } while (var_14h != var_5ch);\n                        }\ncode_r0x01024bf9:\n                        var_40h = var_40h + 1;\n                        var_20h = var_20h + 0x14;\n                        var_10h = var_40h;\n                    } while (var_40h < var_38h);\n                }\n            }\n            if (arg_1ch != '\\0') {\n                fcn.010240e3(arg_8h);\n            }\n            if (((var_1h == '\\0') && (0x19930520 < (*arg_18h & 0x1fffffff))) &&\n               ((arg_18h[7] != 0 || (((arg_18h[8] >> 2 & 1) != 0 && (arg_20h == 0)))))) {\n                if ((arg_18h[8] >> 2 & 1) != 0) {\n                    iVar5 = fcn.010245ef();\n                    *(iVar5 + 0x10) = arg_8h;\n                    iVar5 = fcn.010245ef();\n                    *(iVar5 + 0x14) = var_8h;\n                    goto code_r0x01024cb7;\n                }\n                cVar3 = fcn.01025386(arg_8h, arg_18h[7]);\n                if (cVar3 == '\\0') goto code_r0x01024cdc;\n            }\n        }\n        else if (arg_18h[3] != 0) {\n            if (arg_1ch != '\\0') goto code_r0x01024d1b;\n            fcn.01024d21(arg_8h, arg_ch, var_8h, arg_14h, arg_18h, var_ch, arg_20h, arg_24h);\n        }\n        iVar5 = fcn.010245ef();\n        if (*(iVar5 + 0x1c) == 0) {\n            return;\n        }\n    }\n    else {\n        iVar4 = fcn.010245ef();\n        var_10h = *(iVar4 + 0x1c);\n        iVar4 = fcn.010245ef();\n        *(iVar4 + 0x1c) = 0;\n        cVar3 = fcn.01025386(arg_8h, var_10h);\n        puVar2 = var_10h;\n        if (cVar3 != '\\0') goto code_r0x01024abe;\n        arg_18h = puVar2;\n        if (0 < *var_10h) {\n            var_10h = NULL;\n            do {\n                cVar3 = fcn.0102501a(0x1078e00);\n                if (cVar3 != '\\0') goto code_r0x01024cbc;\n                iVar5 = iVar5 + 1;\n                var_10h = var_10h + 4;\n            } while (iVar5 < *puVar2);\n        }\ncode_r0x01024cb7:\n        fcn.010320c2();\ncode_r0x01024cbc:\n        fcn.010240e3(arg_8h);\n        fcn.01025002();\n        fcn.01023cbc(&var_40h, 0x10767dc);\ncode_r0x01024cdc:\n        iVar5 = fcn.010245ef();\n        *(iVar5 + 0x10) = arg_8h;\n        iVar5 = fcn.010245ef();\n        *(iVar5 + 0x14) = var_8h;\n        if (arg_24h == 0) {\n            arg_24h = arg_ch;\n        }\n        fcn.01023f0c(arg_24h, arg_8h);\n        fcn.01025286(arg_ch, arg_14h, arg_18h);\n        arg_8h_00 = fcn.01025443(arg_18h);\n        fcn.010251fd(arg_8h_00);\n    }\ncode_r0x01024d1b:\n    fcn.0102fde9();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 2497
    },
    "01025181": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01025181(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.01023fb4(*(unaff_EBP + -0x34));\n    iVar1 = fcn.010245ef();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.010245ef();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.010241e9(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.010240e3(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "0102529e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0102529e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x10766f8, 0x10);\n    arg_10h_01 = fcn.01025909(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.010245ef();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x01025380;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.01025926(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.01025450(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0102536c();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.01025926(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x01025380:\n    fcn.0102fde9();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 722
    },
    "0102536c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0102536c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.010245ef();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.010245ef();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "01025570": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.01025570(uint param_1, uint param_2, uint param_3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    ushort in_SS;\n    ushort in_FS;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    uStack20 = param_1;\n    uStack24 = param_2;\n    uStack28 = param_3;\n    uStack32 = param_3;\n    uStack36 = 0x10255fd;\n    puVar1 = segment(in_FS, 0);\n    puVar6 = &stack0xffffffdc & 0xffff0000 | *0x10 - 0x28U;\n    puVar5 = segment(in_SS, *0x10 - 0x28U);\n    *puVar5 = *puVar1;\n    *(puVar6 + 8) = *0x1078124 ^ puVar6;\n    uVar2 = segment(in_FS, 0);\n    *uVar2 = puVar6;\n    puVar7 = puVar6;\n    while( true ) {\n        iVar3 = *(puVar7 + 0x30);\n        uVar4 = *(iVar3 + 0xc);\n        if ((uVar4 == 0xfffffffe) || ((*(puVar7 + 0x34) != 0xfffffffe && (uVar4 <= *(puVar7 + 0x34))))) break;\n        puVar1 = (*(iVar3 + 8) ^ **(puVar7 + 0x2c)) + 0x10 + uVar4 * 0xc;\n        *(iVar3 + 0xc) = *puVar1;\n        if (puVar1[1] == 0) {\n            *(puVar7 + -4) = 0x101;\n            *(puVar7 + -8) = 0x10255e1;\n            fcn.01025a5c();\n            *(puVar7 + -8) = 0x10255ee;\n            fcn.01025a7b();\n            puVar7 = puVar7 + -4;\n        }\n    }\n    puVar1 = segment(in_FS, 0);\n    puVar5 = segment(in_SS, puVar7);\n    *puVar1 = *puVar5;\n    return;\n}\n",
        "token_count": 572
    },
    "0102659e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0102659e(int32_t *arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint arg_10h_00;\n    uint arg_14h;\n    bool bVar1;\n    char cVar2;\n    ushort uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t uVar8;\n    int32_t *piVar9;\n    bool bVar10;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    cVar2 = fcn.0102b871();\n    if (cVar2 == '\\0') {\n        return 7;\n    }\n    arg_10h_00 = *(arg_ch + 0x10);\n    arg_14h = *(arg_ch + 0x14);\n    uVar3 = fcn.0102ac58();\n    var_8h = CONCAT22(var_8h._2_2_, uVar3);\n    while (iVar5 = fcn.010340bb(var_8h, 8),  iVar5 != 0) {\n        uVar4 = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | uVar4;\n    }\n    piVar9 = arg_10h + 0xc2;\n    *piVar9 = var_8h == 0x2d;\n    if ((var_8h == 0x2d) || (var_8h == 0x2b)) {\n        var_8h._0_2_ = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | var_8h;\n    }\n    if ((var_8h == 0x49) || (var_8h == 0x69)) {\n        uVar6 = fcn.010271a0(&var_8h, arg_ch, arg_10h_00, arg_14h);\n        return uVar6;\n    }\n    if ((var_8h == 0x4e) || (var_8h == 0x6e)) {\n        uVar6 = fcn.0102726d(&var_8h, arg_ch, arg_10h_00, arg_14h);\n        return uVar6;\n    }\n    var_ch = 0;\n    var_1h._0_1_ = 0;\n    if (var_8h == 0x30) {\n        uVar6 = fcn.0102ac58();\n        uVar6 = uVar6 & 0xffff;\n        if ((uVar6 == 0x78) || (uVar6 == 0x58)) {\n            var_1h._0_1_ = 1;\n            var_8h._0_2_ = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | var_8h;\n        }\n        else {\n            fcn.0102b7e7(uVar6);\n        }\n    }\n    bVar10 = false;\n    var_10h = arg_10h + 2;\n    var_14h = 0;\n    if (var_8h == 0x30) {\n        bVar10 = true;\n        do {\n            var_8h._0_2_ = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | var_8h;\n        } while (var_8h == 0x30);\n    }\n    uVar8 = var_1h;\n    uVar6 = ((var_1h == 0) - 1 & 6) + 9;\n    do {\n        iVar5 = 0x30;\n        if (var_8h < 0x30) {\ncode_r0x010268a9:\n            uVar7 = var_8h;\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar7 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar7 = uVar7 - 0x37;\n            }\n        }\n        else {\n            if (var_8h < 0x3a) {\ncode_r0x01026715:\n                uVar7 = var_8h - iVar5;\n            }\n            else {\n                if (var_8h < 0xff10) {\n                    iVar5 = 0x660;\n                    if ((var_8h < 0x660) ||\n                       ((0x669 < var_8h &&\n                        ((iVar5 = 0x6f0,  var_8h < 0x6f0 ||\n                         ((0x6f9 < var_8h &&\n                          ((iVar5 = 0x966,  var_8h < 0x966 ||\n                           ((0x96f < var_8h &&\n                            ((iVar5 = 0x9e6,  var_8h < 0x9e6 ||\n                             ((0x9ef < var_8h &&\n                              ((iVar5 = 0xa66,  var_8h < 0xa66 ||\n                               ((0xa6f < var_8h &&\n                                ((iVar5 = 0xae6,  var_8h < 0xae6 ||\n                                 ((0xaef < var_8h &&\n                                  ((iVar5 = 0xb66,  var_8h < 0xb66 ||\n                                   ((0xb6f < var_8h &&\n                                    ((iVar5 = 0xc66,  var_8h < 0xc66 ||\n                                     ((0xc6f < var_8h &&\n                                      ((iVar5 = 0xce6,  var_8h < 0xce6 ||\n                                       ((0xcef < var_8h &&\n                                        ((iVar5 = 0xd66,  var_8h < 0xd66 ||\n                                         ((0xd6f < var_8h &&\n                                          ((iVar5 = 0xe50,  var_8h < 0xe50 ||\n                                           ((0xe59 < var_8h &&\n                                            ((iVar5 = 0xed0,  var_8h < 0xed0 ||\n                                             ((0xed9 < var_8h &&\n                                              ((iVar5 = 0xf20,  var_8h < 0xf20 ||\n                                               ((0xf29 < var_8h &&\n                                                ((iVar5 = 0x1040,  var_8h < 0x1040 ||\n                                                 ((0x1049 < var_8h &&\n                                                  ((iVar5 = 0x17e0,  var_8h < 0x17e0 ||\n                                                   ((0x17e9 < var_8h &&\n                                                    ((iVar5 = 0x1810,  var_8h < 0x1810 || (0x1819 < var_8h))))))))))))))\n                                              )))))))))))))))))))))))))))))))))))))))))))))))) goto code_r0x010268a9;\n                    goto code_r0x01026715;\n                }\n                if (var_8h < 0xff1a) {\n                    iVar5 = 0xff10;\n                    goto code_r0x01026715;\n                }\n                uVar7 = 0xffffffff;\n            }\n            if (uVar7 == 0xffffffff) goto code_r0x010268a9;\n        }\n        if (uVar6 < uVar7) goto code_r0x01026900;\n        bVar10 = true;\n        if (var_10h != piVar9) {\n            *var_10h = uVar7;\n            var_10h = var_10h + 1;\n        }\n        var_14h = var_14h + 1;\n        var_8h._0_2_ = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | var_8h;\n    } while( true );\ncode_r0x01026ee6:\n    var_ch = 0x1451;\ncode_r0x01026eee:\n    do {\n        iVar5 = 0x30;\n        if (uVar4 < 0x30) {\ncode_r0x0102709b:\n            uVar7 = uVar4;\n            if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                uVar7 = 0xffffffff;\n            }\n            else {\n                if (uVar7 - 0x61 < 0x1a) {\n                    uVar7 = uVar7 - 0x20;\n                }\n                uVar7 = uVar7 - 0x37;\n            }\n        }\n        else {\n            if (uVar4 < 0x3a) {\ncode_r0x01026f02:\n                uVar7 = uVar4 - iVar5;\n            }\n            else {\n                iVar5 = 0xff10;\n                if (uVar4 < 0xff10) {\n                    iVar5 = 0x660;\n                    if ((uVar4 < 0x660) ||\n                       ((0x669 < uVar4 &&\n                        ((iVar5 = 0x6f0,  uVar4 < 0x6f0 ||\n                         ((0x6f9 < uVar4 &&\n                          ((iVar5 = 0x966,  uVar4 < 0x966 ||\n                           ((0x96f < uVar4 &&\n                            ((iVar5 = 0x9e6,  uVar4 < 0x9e6 ||\n                             ((0x9ef < uVar4 &&\n                              ((iVar5 = 0xa66,  uVar4 < 0xa66 ||\n                               ((0xa6f < uVar4 &&\n                                ((iVar5 = 0xae6,  uVar4 < 0xae6 ||\n                                 ((0xaef < uVar4 &&\n                                  ((iVar5 = 0xb66,  uVar4 < 0xb66 ||\n                                   ((0xb6f < uVar4 &&\n                                    ((iVar5 = 0xc66,  uVar4 < 0xc66 ||\n                                     ((0xc6f < uVar4 &&\n                                      ((iVar5 = 0xce6,  uVar4 < 0xce6 ||\n                                       ((0xcef < uVar4 &&\n                                        ((iVar5 = 0xd66,  uVar4 < 0xd66 ||\n                                         ((0xd6f < uVar4 &&\n                                          ((iVar5 = 0xe50,  uVar4 < 0xe50 ||\n                                           ((0xe59 < uVar4 &&\n                                            ((iVar5 = 0xed0,  uVar4 < 0xed0 ||\n                                             ((0xed9 < uVar4 &&\n                                              ((iVar5 = 0xf20,  uVar4 < 0xf20 ||\n                                               ((0xf29 < uVar4 &&\n                                                ((iVar5 = 0x1040,  uVar4 < 0x1040 ||\n                                                 ((0x1049 < uVar4 &&\n                                                  ((iVar5 = 0x17e0,  uVar4 < 0x17e0 ||\n                                                   ((0x17e9 < uVar4 &&\n                                                    ((iVar5 = 0x1810,  uVar4 < 0x1810 || (0x1819 < uVar4))))))))))))))))\n                                             )))))))))))))))))))))))))))))))))))))))))))))) goto code_r0x0102709b;\n                    goto code_r0x01026f02;\n                }\n                if (uVar4 < 0xff1a) goto code_r0x01026f02;\n                uVar7 = 0xffffffff;\n            }\n            if (uVar7 == 0xffffffff) goto code_r0x0102709b;\n        }\n        if (9 < uVar7) break;\n        uVar4 = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | uVar4;\n    } while( true );\n    if (bVar10) {\n        var_ch = -var_ch;\n    }\n    iVar5 = var_ch;\n    if (!bVar1) {\n        cVar2 = fcn.010282ba();\n        if (cVar2 == '\\0') {\n            return 7;\n        }\n        uVar4 = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | uVar4;\n    }\n    goto code_r0x01027103;\ncode_r0x01026900:\n    if (var_8h == ***(*arg_8h + 0x88)) {\n        uVar4 = fcn.0102ac58();\n        var_8h = var_8h & 0xffff0000 | uVar4;\n        if (var_10h != arg_10h + 2) goto code_r0x0102696a;\n        if (uVar4 != 0x30) goto code_r0x0102696a;\n        do {\n            var_14h = var_14h + -1;\n            uVar4 = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | uVar4;\n        } while (uVar4 == 0x30);\n        do {\n            bVar10 = true;\ncode_r0x0102696a:\n            if (uVar4 < 0x30) goto code_r0x01026bd6;\n            if (uVar4 < 0x3a) {\n                uVar7 = uVar4 - 0x30;\ncode_r0x01026bd1:\n                if (uVar7 == 0xffffffff) goto code_r0x01026bd6;\n            }\n            else {\n                if (0xff0f < uVar4) {\n                    if (uVar4 < 0xff1a) {\n                        uVar7 = uVar4 - 0xff10;\n                    }\n                    else {\n                        uVar7 = 0xffffffff;\n                    }\n                    goto code_r0x01026bd1;\n                }\n                if (0x65f < uVar4) {\n                    if (uVar4 < 0x66a) {\n                        uVar7 = uVar4 - 0x660;\n                    }\n                    else {\n                        if (uVar4 < 0x6f0) goto code_r0x01026bd6;\n                        if (uVar4 < 0x6fa) {\n                            uVar7 = uVar4 - 0x6f0;\n                        }\n                        else {\n                            if (uVar4 < 0x966) goto code_r0x01026bd6;\n                            if (uVar4 < 0x970) {\n                                uVar7 = uVar4 - 0x966;\n                            }\n                            else {\n                                if (uVar4 < 0x9e6) goto code_r0x01026bd6;\n                                if (uVar4 < 0x9f0) {\n                                    uVar7 = uVar4 - 0x9e6;\n                                }\n                                else {\n                                    if (uVar4 < 0xa66) goto code_r0x01026bd6;\n                                    if (uVar4 < 0xa70) {\n                                        uVar7 = uVar4 - 0xa66;\n                                    }\n                                    else {\n                                        if (uVar4 < 0xae6) goto code_r0x01026bd6;\n                                        if (uVar4 < 0xaf0) {\n                                            uVar7 = uVar4 - 0xae6;\n                                        }\n                                        else {\n                                            if (uVar4 < 0xb66) goto code_r0x01026bd6;\n                                            if (uVar4 < 0xb70) {\n                                                uVar7 = uVar4 - 0xb66;\n                                            }\n                                            else {\n                                                if (uVar4 < 0xc66) goto code_r0x01026bd6;\n                                                if (uVar4 < 0xc70) {\n                                                    uVar7 = uVar4 - 0xc66;\n                                                }\n                                                else {\n                                                    if (uVar4 < 0xce6) goto code_r0x01026bd6;\n                                                    if (uVar4 < 0xcf0) {\n                                                        uVar7 = uVar4 - 0xce6;\n                                                    }\n                                                    else {\n                                                        if (uVar4 < 0xd66) goto code_r0x01026bd6;\n                                                        if (uVar4 < 0xd70) {\n                                                            uVar7 = uVar4 - 0xd66;\n                                                        }\n                                                        else {\n                                                            if (uVar4 < 0xe50) goto code_r0x01026bd6;\n                                                            if (uVar4 < 0xe5a) {\n                                                                uVar7 = uVar4 - 0xe50;\n                                                            }\n                                                            else {\n                                                                if (uVar4 < 0xed0) goto code_r0x01026bd6;\n                                                                if (uVar4 < 0xeda) {\n                                                                    uVar7 = uVar4 - 0xed0;\n                                                                }\n                                                                else {\n                                                                    if (uVar4 < 0xf20) goto code_r0x01026bd6;\n                                                                    if (uVar4 < 0xf2a) {\n                                                                        uVar7 = uVar4 - 0xf20;\n                                                                    }\n                                                                    else {\n                                                                        if (uVar4 < 0x1040) goto code_r0x01026bd6;\n                                                                        if (uVar4 < 0x104a) {\n                                                                            uVar7 = uVar4 - 0x1040;\n                                                                        }\n                                                                        else {\n                                                                            if (uVar4 < 0x17e0) goto code_r0x01026bd6;\n                                                                            if (uVar4 < 0x17ea) {\n                                                                                uVar7 = uVar4 - 0x17e0;\n                                                                            }\n                                                                            else {\n                                                                                if ((uVar4 < 0x1810) || (0x1819 < uVar4)\n                                                                                   ) goto code_r0x01026bd6;\n                                                                                uVar7 = uVar4 - 0x1810;\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x01026bd1;\n                }\ncode_r0x01026bd6:\n                uVar7 = uVar4;\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar7 = 0xffffffff;\n                }\n                else {\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar7 = uVar7 - 0x20;\n                    }\n                    uVar7 = uVar7 - 0x37;\n                }\n            }\n            if (uVar6 < uVar7) break;\n            if (var_10h != piVar9) {\n                *var_10h = uVar7;\n                var_10h = var_10h + 1;\n            }\n            uVar4 = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | uVar4;\n        } while( true );\n    }\n    if (!bVar10) {\n        cVar2 = fcn.010282ba();\n        if (cVar2 == '\\0') {\n            return 7;\n        }\n        if (uVar8 != 0) {\n            return 2;\n        }\n        return 7;\n    }\n    uVar6 = var_8h;\n    fcn.0102b7e7(var_8h);\n    uVar4 = fcn.0102ac58();\n    var_8h = var_8h & 0xffff0000 | uVar4;\n    if (uVar4 == 0x45) {\ncode_r0x01026c8b:\n        uVar8 = var_1h ^ 1;\n    }\n    else if (uVar4 == 0x50) {\ncode_r0x01026c86:\n        uVar8 = var_1h;\n    }\n    else {\n        if (uVar4 == 0x65) goto code_r0x01026c8b;\n        uVar8 = 0;\n        if (uVar4 == 0x70) goto code_r0x01026c86;\n    }\n    iVar5 = 0;\n    if (uVar8 != 0) {\n        uVar4 = fcn.0102ac58();\n        bVar10 = uVar4 == 0x2d;\n        var_8h = var_8h & 0xffff0000 | uVar4;\n        if ((uVar4 == 0x2b) || (uVar4 == 0x2d)) {\n            uVar4 = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | uVar4;\n        }\n        bVar1 = false;\n        if (uVar4 != 0x30) goto code_r0x01026cee;\n        do {\n            uVar4 = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | uVar4;\n        } while (uVar4 == 0x30);\n        do {\n            bVar1 = true;\ncode_r0x01026cee:\n            iVar5 = 0x30;\n            if (uVar4 < 0x30) {\ncode_r0x01026e95:\n                uVar7 = uVar4;\n                if (((uVar7 < 0x41) || (0x5a < uVar7)) && (0x19 < uVar7 - 0x61)) {\n                    uVar7 = 0xffffffff;\n                }\n                else {\n                    if (uVar7 - 0x61 < 0x1a) {\n                        uVar7 = uVar7 - 0x20;\n                    }\n                    uVar7 = uVar7 - 0x37;\n                }\n            }\n            else {\n                if (uVar4 < 0x3a) {\ncode_r0x01026cfc:\n                    uVar7 = uVar4 - iVar5;\n                }\n                else {\n                    iVar5 = 0xff10;\n                    if (uVar4 < 0xff10) {\n                        iVar5 = 0x660;\n                        if ((uVar4 < 0x660) ||\n                           ((0x669 < uVar4 &&\n                            ((iVar5 = 0x6f0,  uVar4 < 0x6f0 ||\n                             ((0x6f9 < uVar4 &&\n                              ((iVar5 = 0x966,  uVar4 < 0x966 ||\n                               ((0x96f < uVar4 &&\n                                ((iVar5 = 0x9e6,  uVar4 < 0x9e6 ||\n                                 ((0x9ef < uVar4 &&\n                                  ((iVar5 = 0xa66,  uVar4 < 0xa66 ||\n                                   ((0xa6f < uVar4 &&\n                                    ((iVar5 = 0xae6,  uVar4 < 0xae6 ||\n                                     ((0xaef < uVar4 &&\n                                      ((iVar5 = 0xb66,  uVar4 < 0xb66 ||\n                                       ((0xb6f < uVar4 &&\n                                        ((iVar5 = 0xc66,  uVar4 < 0xc66 ||\n                                         ((0xc6f < uVar4 &&\n                                          ((iVar5 = 0xce6,  uVar4 < 0xce6 ||\n                                           ((0xcef < uVar4 &&\n                                            ((iVar5 = 0xd66,  uVar4 < 0xd66 ||\n                                             ((0xd6f < uVar4 &&\n                                              ((iVar5 = 0xe50,  uVar4 < 0xe50 ||\n                                               ((0xe59 < uVar4 &&\n                                                ((iVar5 = 0xed0,  uVar4 < 0xed0 ||\n                                                 ((0xed9 < uVar4 &&\n                                                  ((iVar5 = 0xf20,  uVar4 < 0xf20 ||\n                                                   ((0xf29 < uVar4 &&\n                                                    ((iVar5 = 0x1040,  uVar4 < 0x1040 ||\n                                                     ((0x1049 < uVar4 &&\n                                                      ((iVar5 = 0x17e0,  uVar4 < 0x17e0 ||\n                                                       ((0x17e9 < uVar4 &&\n                                                        ((iVar5 = 0x1810,  uVar4 < 0x1810 || (0x1819 < uVar4))))))))))))\n                                                   ))))))))))))))))))))))))))))))))))))))))))))))))))\n                        goto code_r0x01026e95;\n                        goto code_r0x01026cfc;\n                    }\n                    if (uVar4 < 0xff1a) goto code_r0x01026cfc;\n                    uVar7 = 0xffffffff;\n                }\n                if (uVar7 == 0xffffffff) goto code_r0x01026e95;\n            }\n            if (9 < uVar7) goto code_r0x01026eee;\n            bVar1 = true;\n            var_ch = var_ch * 10 + uVar7;\n            if (0x1450 < var_ch) goto code_r0x01026ee6;\n            uVar4 = fcn.0102ac58();\n            var_8h = var_8h & 0xffff0000 | uVar4;\n        } while( true );\n    }\ncode_r0x01027103:\n    fcn.0102b7e7(var_8h);\n    piVar9 = arg_10h + 2;\n    if (var_10h != piVar9) {\n        do {\n            if (*(var_10h + -1) != '\\0') break;\n            var_10h = var_10h + -1;\n        } while (var_10h != piVar9);\n        if (var_10h != piVar9) {\n            if (0x1450 < iVar5) {\n                return uVar6;\n            }\n            if (iVar5 < -0x1450) {\n                return uVar6;\n            }\n            iVar5 = iVar5 + (((var_1h == 0) - 1 & 3) + 1) * var_14h;\n            if (0x1450 < iVar5) {\n                return uVar6;\n            }\n            if (-0x1451 < iVar5) {\n                *arg_10h = iVar5;\n                arg_10h[1] = var_10h - piVar9;\n                return var_1h;\n            }\n            return uVar6;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 6104
    },
    "0102ae27": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0102ae27(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint *puVar3;\n    uint in_stack_ffffffe4;\n    uint var_10h;\n    uint uStack16;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    // switch table (10 cases) at 0x102ae73\n    switch(*(param_1 + 0x40)) {\n    case 0:\n        stack0xfffffffc = 0;\n        goto code_r0x0102ae38;\n    case 1:\n        stack0xfffffffc = 1;\n        goto code_r0x0102ae38;\n    case 2:\n        stack0xfffffffc = 1;\n        _auStack8 = 0;\n        break;\n    case 3:\n        stack0xfffffffc = 1;\n        goto code_r0x0102ae52;\n    case 4:\n        stack0xfffffffc = 0;\n        _auStack8 = 8;\n        break;\n    case 5:\n        stack0xfffffffc = 0;\ncode_r0x0102ae52:\n        _auStack8 = 10;\n        break;\n    case 6:\n        stack0xfffffffc = 0;\n        _auStack8 = 0x10;\n        break;\n    case 7:\n        _auStack8 = 0x102aea5;\n        unique0x10000263 = unaff_ESI;\n        fcn.0102afec();\n        _auStack8 = 0x102aead;\n        iVar2 = fcn.0102ad2e();\n        if (iVar2 == 4) {\n            puVar3 = &fcn.0102ae27::var_8h;\n            _var_10h = CONCAT44(uStack16, stack0xfffffffc);\n            _auStack8 = _auStack8 & 0xffffff;\n            var_8h = 0;\n            fcn.0102648e(&stack0xffffffc8, param_1 + 8, *(param_1 + 0x30), *(param_1 + 0x34), &fcn.0102ae27::var_1h);\n            iVar2 = fcn.010264ac(*(param_1 + 0x48), in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, \n                                 in_stack_ffffffe4, puVar3);\n            if ((var_1h == '\\0') || (iVar2 == 1)) {\n                uVar1 = 0;\n            }\n            else if (*(param_1 + 0x28) == '\\0') {\n                uVar1 = fcn.0102806c(&fcn.0102ae27::var_8h);\n            }\n            else {\n                uVar1 = 1;\n            }\n            return uVar1;\n        }\n        if (iVar2 == 8) {\n            puVar3 = &fcn.0102ae27::var_10h;\n            _auStack8 = _auStack8 & 0xffffff;\n            _var_10h = 0;\n            fcn.0102648e(&stack0xffffffc4, param_1 + 8, *(param_1 + 0x30), *(param_1 + 0x34), &fcn.0102ae27::var_1h);\n            iVar2 = fcn.01026525(*(param_1 + 0x48), in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, \n                                 in_stack_ffffffe0, puVar3);\n            if ((var_1h == '\\0') || (iVar2 == 1)) {\n                uVar1 = 0;\n            }\n            else if (*(param_1 + 0x28) == '\\0') {\n                uVar1 = fcn.010280a0(&fcn.0102ae27::var_10h);\n            }\n            else {\n                uVar1 = 1;\n            }\n            return uVar1;\n        }\n        return 0;\n    case 8:\n        stack0xfffffffc = 8;\ncode_r0x0102ae38:\n        _auStack8 = 0x102ae3d;\n        uVar1 = fcn.0102afa4(stack0xfffffffc);\n        return uVar1;\n    case 9:\n        if (*(param_1 + 0x28) == '\\0') {\n            stack0xfffffffc = 0;\n            _auStack8 = *(param_1 + 0xc);\n            var_8h = 0x102ae26;\n            uVar1 = fcn.0102b9ba(_auStack8, 0);\n            return uVar1;\n        }\n        return 1;\n    default:\n        return 0;\n    }\n    var_8h = 0x102ae4f;\n    uVar1 = fcn.0102aecb(_auStack8, stack0xfffffffc);\n    return uVar1;\n}\n",
        "token_count": 1272
    },
    "0102c0d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0102c0d4(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint32_t *puVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x1076858, 0x24);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 0x16;\ncode_r0x0102bfa9:\n        fcn.01025c2a();\n    }\n    else {\n        uVar1 = *(unaff_EBP + 8);\n        if (uVar1 == 0xfffffffe) {\n            puVar2 = fcn.0102e9b5();\n            *puVar2 = 9;\n        }\n        else {\n            if (((uVar1 < 0) || (*0x2081ce8 <= uVar1)) ||\n               ((*(*((uVar1 >> 6) * 4 + 0x2081ae8) + 0x28 + (uVar1 & 0x3f) * 0x38) & 1) == 0)) {\n                puVar2 = fcn.0102e9b5();\n                *puVar2 = 9;\n                goto code_r0x0102bfa9;\n            }\n            puVar2 = fcn.0102bc9d(unaff_EBP + -0x34, *(unaff_EBP + 0xc));\n            *(unaff_EBP + -0x28) = *puVar2;\n            *(unaff_EBP + -0x24) = puVar2[1];\n            *(unaff_EBP + -0x20) = puVar2[2];\n            if (*(unaff_EBP + -0x20) != '\\0') {\n                fcn.01036011(unaff_EBP + -0x1c);\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    *(unaff_EBP + -4) = 0;\n                    *0x2081994 = *0x2081994 + 1;\n                    puVar3 = *(unaff_EBP + -0x1c) + 0xc;\n                    LOCK();\n                    *puVar3 = *puVar3 | *(unaff_EBP + -0x24);\n                    *(*(unaff_EBP + -0x1c) + 0x10) = uVar1;\n                    *(unaff_EBP + -4) = 0xfffffffe;\n                    fcn.0102bf94();\n                    uVar4 = *(unaff_EBP + -0x1c);\n                    goto code_r0x0102bfb0;\n                }\n                puVar2 = fcn.0102e9b5();\n                *puVar2 = 0x18;\n            }\n        }\n    }\n    uVar4 = 0;\ncode_r0x0102bfb0:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar4;\n}\n",
        "token_count": 775
    },
    "0102c6ad": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0102c6ad(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint var_ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x1078124 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.0102e9b5();\n        *puVar1 = 0x16;\n        fcn.01025c2a();\n        goto code_r0x0102c802;\n    }\n    fcn.01028192(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.0102caf9(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    var_ch = 0;\n    iVar2 = fcn.0102ccbf();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x0102c7da;\ncode_r0x0102c825:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x0102c825;\n                    goto code_r0x0102c7da;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x0102c7da:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.0102cb35();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x0102c802:\n    fcn.01021495(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 818
    },
    "0102cef3": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0102cef3(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t iStack12;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) != 0) {\n                return 1;\n            }\n            param_1[7] = 8;\n        }\n        else if (param_1[0xb] == 0) {\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                    return 1;\n                }\n                if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                        return 1;\n                    }\n                    if (((((cVar4 != 'd') && (cVar4 != 'i')) && (cVar4 != 'o')) && ((cVar4 != 'u' && (cVar4 != 'x'))))\n                       && (cVar4 != 'X')) {\n                        return 1;\n                    }\n                    param_1[0xb] = 9;\n                    return 1;\n                }\n                if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                    return 1;\n                }\n                if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                    return 1;\n                }\n                if (cVar4 != 'h') {\n                    return 1;\n                }\n                if (*param_1[4] == 'h') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 1;\n                }\n                else {\n                    uVar7 = 2;\n                }\n            }\n            else {\n                if (cVar4 != 'l') {\n                    if (cVar4 == 't') {\n                        param_1[0xb] = 7;\n                        return 1;\n                    }\n                    if (cVar4 == 'w') {\n                        param_1[0xb] = 0xc;\n                        return 1;\n                    }\n                    if (cVar4 == 'z') {\n                        param_1[0xb] = 6;\n                        return 1;\n                    }\n                    return 1;\n                }\n                if (*param_1[4] == 'l') {\n                    param_1[4] = param_1[4] + 1;\n                    uVar7 = 4;\n                }\n                else {\n                    uVar7 = 3;\n                }\n            }\n            param_1[0xb] = uVar7;\n            return 1;\n        }\n        puVar6 = fcn.0102e9b5();\n        *puVar6 = 0x16;\n        fcn.01025c2a();\n        return 0;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0102d0f3:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x0102d0f7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0102d0fa:\n            cVar4 = fcn.0102d52b(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0102d09f:\n                arg_8h = 0x10;\n                goto code_r0x0102d0fa;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0102d0b3;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0102d087;\n                }\n            }\ncode_r0x0102d103:\n            cVar4 = fcn.0102d34c();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0102d2f2();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0102d103;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0102d0b3:\n            cVar4 = fcn.0102d49b(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0102d70f();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0102d103;\n            if (cVar4 == 'i') goto code_r0x0102d0f3;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0102d67c();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0102d6f0();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0102d09f;\n            }\n            goto code_r0x0102d0f7;\n        }\ncode_r0x0102d087:\n        cVar4 = fcn.0102d727();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    uVar7 = param_1[8];\n    iStack12 = 0;\n    if ((uVar7 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        if ((uVar7 >> 6 & 1) == 0) {\n            if ((uVar7 & 1) == 0) {\n                if ((uVar7 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    arg_ch = 1;\n                    iStack12 = 1;\n                }\n                goto code_r0x0102d189;\n            }\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n        iStack12 = 1;\n        arg_ch = 1;\n    }\ncode_r0x0102d189:\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar7 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&uStack8 + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&uStack8 + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        iStack12 = arg_ch;\n    }\n    arg_14h = param_1 + 6;\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((*(param_1 + 8) & 0xc) == 0) {\n        fcn.0102ca88(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n        arg_ch = iStack12;\n    }\n    fcn.0102d8a3(&uStack8, arg_ch, arg_14h);\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.0102ca88(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0102d7fc(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.0102ca88(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2394
    },
    "0102d041": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0102d041(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    bool bVar3;\n    char cVar4;\n    uchar uVar5;\n    int32_t in_ECX;\n    int32_t arg_ch;\n    int32_t arg_10h;\n    uint arg_8h;\n    uint arg_ch_00;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar4 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x0102d0f3:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\ncode_r0x0102d0f7:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x0102d0fa:\n            cVar4 = fcn.0102d52b(arg_8h, arg_ch_00);\n        }\n        else if (cVar4 < 'Y') {\n            if (cVar4 == 'X') {\n                arg_ch_00 = 1;\ncode_r0x0102d09f:\n                arg_8h = 0x10;\n                goto code_r0x0102d0fa;\n            }\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x0102d0b3;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x0102d087;\n                }\n            }\ncode_r0x0102d103:\n            cVar4 = fcn.0102d34c();\n        }\n        else if (cVar4 == 'Z') {\n            cVar4 = fcn.0102d2f2();\n        }\n        else {\n            if (cVar4 == 'a') goto code_r0x0102d103;\n            if (cVar4 != 'c') {\n                return 0;\n            }\ncode_r0x0102d0b3:\n            cVar4 = fcn.0102d49b(0);\n        }\n    }\n    else if (cVar4 < 'q') {\n        if (cVar4 == 'p') {\n            cVar4 = fcn.0102d70f();\n        }\n        else {\n            if (cVar4 < 'h') goto code_r0x0102d103;\n            if (cVar4 == 'i') goto code_r0x0102d0f3;\n            if (cVar4 == 'n') {\n                cVar4 = fcn.0102d67c();\n            }\n            else {\n                if (cVar4 != 'o') {\n                    return 0;\n                }\n                cVar4 = fcn.0102d6f0();\n            }\n        }\n    }\n    else {\n        if (cVar4 != 's') {\n            if (cVar4 != 'u') {\n                if (cVar4 != 'x') {\n                    return 0;\n                }\n                arg_ch_00 = 0;\n                goto code_r0x0102d09f;\n            }\n            goto code_r0x0102d0f7;\n        }\ncode_r0x0102d087:\n        cVar4 = fcn.0102d727();\n    }\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    arg_ch = 0;\n    var_4h = var_4h._3_1_ << 0x18;\n    uVar1 = *(in_ECX + 0x20);\n    var_8h = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    arg_ch = 1;\n                    var_8h = 1;\n                }\n                goto code_r0x0102d189;\n            }\n            var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n        var_8h = 1;\n        arg_ch = 1;\n    }\ncode_r0x0102d189:\n    cVar4 = *(in_ECX + 0x31);\n    if (((cVar4 == 'x') || (cVar4 == 'X')) && ((uVar1 >> 5 & 1) != 0)) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((bVar2) || (bVar3)) {\n        *(&var_4h + arg_ch) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            uVar5 = 0x58;\n        }\n        else {\n            uVar5 = 0x78;\n        }\n        *(&var_4h + arg_ch + 1) = uVar5;\n        arg_ch = arg_ch + 2;\n        var_8h = arg_ch;\n    }\n    arg_14h = in_ECX + 0x18;\n    arg_10h = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - arg_ch;\n    if ((*(in_ECX + 0x20) & 0xc) == 0) {\n        fcn.0102ca88(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n        arg_ch = var_8h;\n    }\n    fcn.0102d8a3(&var_4h, arg_ch, arg_14h);\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.0102ca88(in_ECX + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.0102d7fc(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.0102ca88(in_ECX + 0x448, 0x20, arg_10h, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1708
    },
    "0102d52b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0102d52b(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint32_t arg_ch_00;\n    bool bVar6;\n    uint var_4h;\n    \n    iVar1 = fcn.0102d29e(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.0102e9b5();\n                *puVar2 = 0x16;\n                uVar3 = fcn.01025c2a();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x0102d5e1;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x0102d5e1;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x0102d5e1:\n    uVar5 = *(in_ECX + 0x20);\n    if ((((uVar5 >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar6 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar6);\n        uVar5 = uVar5 | 0x40;\n        *(in_ECX + 0x20) = uVar5;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = uVar5 & 0xfffffff7;\n        fcn.0102c8bb(*(in_ECX + 0x28));\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    *(in_ECX + 0x3c) = 0;\n    if (iVar1 == 8) {\n        fcn.0102c9fa(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.0102c987(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1130
    },
    "010309ac": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010309ac(int32_t arg_8h, uint32_t arg_ch, int32_t *arg_10h, uint32_t *arg_14h, uint arg_18h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_18h != 0) {\n        if (arg_ch < *arg_14h) {\n            iVar2 = 0;\n            if (arg_ch != 0) {\n                do {\n                    arg_ch = arg_ch - 1;\n                    iVar1 = arg_18h;\n                    if (arg_8h != 0) {\n                        iVar1 = arg_8h % 10 + 0x30;\n                    }\n                    *(*arg_10h + arg_ch * 2) = iVar1;\n                    arg_8h = arg_8h / 10;\n                    iVar2 = iVar2 + 1;\n                } while (arg_ch != 0);\n            }\n            *arg_10h = *arg_10h + iVar2 * 2;\n            *arg_14h = *arg_14h - iVar2;\n        }\n        else {\n            *arg_14h = 0;\n        }\n        return;\n    }\n    fcn.01030a40(arg_8h, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 317
    },
    "010318fe": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.010318fe(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x2081ab0 != 0) {\n        return 0;\n    }\n    fcn.0103d299();\n    arg_8h = fcn.0103d5a6();\n    if (arg_8h == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar1 = fcn.01031951(arg_8h);\n        if (iVar1 == 0) {\n            uVar2 = 0xffffffff;\n        }\n        else {\n            uVar2 = 0;\n            *0x2081ab0 = iVar1;\n            *0x2081abc = iVar1;\n        }\n        fcn.0103379b(0);\n    }\n    fcn.0103379b(arg_8h);\n    return uVar2;\n}\n",
        "token_count": 211
    },
    "0103379b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0103379b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x2081ee4, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.0102e9b5();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.0102e93c(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "01036364": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01036364(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar4;\n    uint *puVar2;\n    uint32_t uVar3;\n    bool bVar5;\n    \n    if (*0x2081ae0 == 0) {\n        if ((arg_8h == NULL) || (arg_ch == NULL)) {\n            puVar2 = fcn.0102e9b5();\n            *puVar2 = 0x16;\n            fcn.01025c2a();\n            uVar3 = 0x7fffffff;\n        }\n        else {\n            if (arg_10h < 0x80000000) {\n                if (arg_10h != 0) {\n                    do {\n                        uVar4 = *arg_8h;\n                        uVar1 = *arg_ch;\n                        if ((uVar4 == 0) || (uVar1 == 0)) break;\n                        arg_8h = arg_8h + 1;\n                        arg_ch = arg_ch + 1;\n                        if ((0x40 < uVar4) && (uVar4 < 0x5b)) {\n                            uVar4 = uVar4 + 0x20;\n                        }\n                        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                            uVar1 = uVar1 + 0x20;\n                        }\n                        bVar5 = uVar4 < uVar1;\n                        if (uVar4 != uVar1) goto code_r0x01040c71;\n                        arg_10h = arg_10h - 1;\n                    } while (arg_10h != 0);\n                    arg_10h = 0;\n                    bVar5 = uVar4 < uVar1;\n                    if (uVar4 != uVar1) {\ncode_r0x01040c71:\n                        arg_10h = 0xffffffff;\n                        if (!bVar5) {\n                            arg_10h = 1;\n                        }\n                    }\n                }\n                return arg_10h;\n            }\n            puVar2 = fcn.0102e9b5();\n            *puVar2 = 0x16;\n            fcn.01025c2a();\n            uVar3 = 0x7fffffff;\n        }\n    }\n    else {\n        uVar3 = fcn.010363d1(arg_8h, arg_ch, arg_10h, 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 571
    },
    "010367f4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nushort __cdecl fcn.010367f4(int32_t *arg_8h)\n\n{\n    uchar uVar1;\n    ushort uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_8h_00;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uchar uVar7;\n    int32_t arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0102e9b5();\n        *puVar4 = 0x16;\n        fcn.01025c2a();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0U) == 0) {\n                fcn.0103a3d0(arg_8h);\n            }\n            iVar3 = arg_8h[2];\n            if (iVar3 != 1) {\n                uVar7 = 0;\n            }\n            else {\n                uVar7 = **arg_8h;\n            }\n            *arg_8h = arg_8h[1];\n            iVar5 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.0102c2fb(arg_8h);\n            iVar5 = fcn.01041185(arg_8h_00, arg_ch, iVar5);\n            arg_8h[2] = iVar5;\n            iVar5 = arg_8h[2];\n            if (((iVar5 != 0) && (iVar5 != 1)) && (iVar5 != -1)) {\n                if ((arg_8h[3] & 6U) == 0) {\n                    iVar5 = fcn.0102c2fb(arg_8h);\n                    if ((iVar5 == -1) || (iVar5 = fcn.0102c2fb(arg_8h),  iVar5 == -2)) {\n                        iVar5 = 0x1078360;\n                    }\n                    else {\n                        iVar5 = fcn.0102c2fb(arg_8h);\n                        uVar6 = fcn.0102c2fb(arg_8h);\n                        iVar5 = *((iVar5 >> 6) * 4 + 0x2081ae8) + (uVar6 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar5 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] >> 8 & 1) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                if (iVar3 != 1) {\n                    uVar2 = **arg_8h;\n                    arg_8h[2] = arg_8h[2] + -2;\n                    *arg_8h = *arg_8h + 2;\n                    return uVar2;\n                }\n                uVar1 = **arg_8h;\n                arg_8h[2] = arg_8h[2] + -1;\n                *arg_8h = *arg_8h + 1;\n                return CONCAT11(uVar1, uVar7);\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (iVar5 != 0) * 8 + 8;\n            arg_8h[2] = 0;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffff;\n}\n",
        "token_count": 948
    },
    "01036882": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.01036882(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint var_1ch;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = fcn.0102bc9d(&var_1ch, arg_ch);\n    var_10h = *puVar1;\n    var_ch = puVar1[1];\n    var_8h = puVar1[2];\n    if (var_8h != '\\0') {\n        iVar2 = fcn.01041c84(&var_4h, arg_8h, var_10h, arg_10h, 0x180);\n        if (iVar2 == 0) {\n            *0x2081994 = *0x2081994 + 1;\n            LOCK();\n            arg_14h[3] = arg_14h[3] | var_ch;\n            arg_14h[2] = 0;\n            arg_14h[7] = 0;\n            arg_14h[1] = 0;\n            *arg_14h = 0;\n            arg_14h[4] = var_4h;\n            return arg_14h;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 326
    },
    "0103857e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0103857e(int32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.0102e9b5();\n        *puVar1 = 0x16;\n        fcn.01025c2a();\n    }\n    else {\n        piVar9 = arg_8h;\n        for (iVar5 = 9; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *piVar9 = -1;\n            piVar9 = piVar9 + 1;\n        }\n        if (arg_ch == NULL) {\n            puVar1 = fcn.0102e9b5();\n            *puVar1 = 0x16;\n            fcn.01025c2a();\n        }\n        else {\n            var_8h = arg_ch[1];\n            var_ch = *arg_ch;\n            if (((var_8h < 0x80000000) || ((-2 < var_8h && (0xffff573f < var_ch)))) &&\n               ((var_8h < 7 || ((var_8h < 8 && (var_ch < 0x9358efe0)))))) {\n                var_1h._0_1_ = '\\0';\n                iVar5 = fcn.01038487(&var_ch, &var_1h);\n                uVar4 = var_ch;\n                arg_8h[5] = iVar5;\n                iVar5 = fcn.01045680(var_ch, var_8h, 0x15180, 0);\n                uVar2 = iVar5 * 0x15180;\n                arg_8h[7] = iVar5;\n                uVar7 = uVar4 - uVar2;\n                var_8h = (var_8h - (iVar5 * 0x15180 >> 0x20)) - (uVar4 < uVar2);\n                iVar6 = 0x106f838;\n                if (var_1h == '\\0') {\n                    iVar6 = 0x106f804;\n                }\n                iVar3 = 1;\n                iVar8 = *(iVar6 + 4);\n                while (iVar8 < iVar5) {\n                    iVar3 = iVar3 + 1;\n                    iVar8 = *(iVar6 + iVar3 * 4);\n                }\n                arg_8h[4] = iVar3 + -1;\n                arg_8h[3] = iVar5 - *(iVar6 + (iVar3 + -1) * 4);\n                iVar6 = fcn.01045680(*arg_ch, arg_ch[1], 0x15180, 0);\n                iVar5 = var_8h;\n                arg_8h[6] = (iVar6 + 4) % 7;\n                iVar6 = fcn.01045680(uVar7, var_8h, 0xe10, 0);\n                arg_8h[2] = iVar6;\n                uVar4 = iVar6 * 0xe10;\n                iVar8 = uVar7 - uVar4;\n                iVar5 = fcn.01045680(iVar8, (iVar5 - (iVar6 * 0xe10 >> 0x20)) - (uVar7 < uVar4), 0x3c, 0);\n                arg_8h[8] = 0;\n                arg_8h[1] = iVar5;\n                *arg_8h = iVar8 + iVar5 * -0x3c;\n                return 0;\n            }\n            puVar1 = fcn.0102e9b5();\n            *puVar1 = 0x16;\n        }\n    }\n    return 0x16;\n}\n",
        "token_count": 942
    },
    "0103ab22": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.0103ab22(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x1076d20, 0x10);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.0102e9b5();\n        *puVar1 = 0x16;\n        fcn.01025c2a();\n        uVar2 = 0xffffffffffffffff;\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        fcn.0102eaec(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0103a5c8(*(unaff_EBP + 8));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -0x1c) = uVar2 >> 0x20;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0103a5be(0x1076d20);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 366
    },
    "0103a5c8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0103a5c8(int32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_10h;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 0x16;\n        fcn.01025c2a();\n        return -1;\n    }\n    arg_8h_00 = fcn.0102c2fb(arg_8h);\n    if (arg_8h[2] < 0) {\n        arg_8h[2] = 0;\n    }\n    iVar5 = fcn.0103acc0(arg_8h_00, 0, 0, 1);\n    arg_10h = iVar5 >> 0x20;\n    if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\ncode_r0x0103a6f3:\n        iVar7 = -1;\n    }\n    else {\n        if ((arg_8h[3] & 0xc0U) == 0) {\n            return iVar5 - arg_8h[2];\n        }\n        iVar3 = arg_8h_00 >> 6;\n        iVar4 = (arg_8h_00 & 0x3f) * 0x38;\n        uVar1 = *(iVar4 + 0x29 + *(iVar3 * 4 + 0x2081ae8));\n        var_4h = var_4h & 0xffffff00 | uVar1;\n        iVar7 = *arg_8h - arg_8h[1];\n        if ((arg_8h[3] & 3U) == 0) {\n            if ((arg_8h[3] >> 2 & 1) == 0) {\n                puVar2 = fcn.0102e9b5();\n                *puVar2 = 0x16;\n                goto code_r0x0103a6f3;\n            }\n        }\n        else {\n            if ((uVar1 == 1) && ((*(iVar4 + 0x2d + *(iVar3 * 4 + 0x2081ae8)) & 2) != 0)) {\n                iVar5 = fcn.0103a90b(arg_8h, iVar5, arg_10h);\n                return iVar5;\n            }\n            if (*(iVar4 + 0x28 + *(iVar3 * 4 + 0x2081ae8)) < '\\0') {\n                iVar6 = fcn.0103aaa4(arg_8h[1], *arg_8h, var_4h);\n                iVar7 = iVar6 + iVar7;\n            }\n        }\n        if (iVar5 != 0) {\n            if ((arg_8h[3] & 1U) == 0) {\n                if (uVar1 == 1) {\n                    iVar7 = fcn.01045680(iVar7, 2, 0);\n                }\n                iVar7 = iVar7 + iVar5;\n            }\n            else {\n                iVar7 = fcn.0103a74c(arg_8h, iVar5, arg_10h, iVar7, iVar7 >> 0x20);\n            }\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 825
    },
    "0103c3de": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0103c3de(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_19h;\n    \n    if (*(unaff_EBP + -0x19) != '\\0') {\n        fcn.0102e3b1(3);\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0103f364": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0103f364(int16_t *arg_8h, int32_t arg_ch, int16_t *arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack24;\n    uint var_4h;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0103f2a1:\n            if (arg_ch != 0) {\n                piVar3 = arg_8h;\n                iVar5 = arg_ch;\n                if ((arg_14h == 0) || (arg_10h != NULL)) {\n                    do {\n                        if (*piVar3 == 0) break;\n                        piVar3 = piVar3 + 1;\n                        iVar5 = iVar5 + -1;\n                    } while (iVar5 != 0);\n                    if (iVar5 != 0) {\n                        if (arg_14h == -1) {\n                            iVar4 = arg_10h - piVar3;\n                            do {\n                                iVar1 = *(iVar4 + piVar3);\n                                *piVar3 = iVar1;\n                                piVar3 = piVar3 + 1;\n                                if (iVar1 == 0) break;\n                                iVar5 = iVar5 + -1;\n                            } while (iVar5 != 0);\n                        }\n                        else {\n                            iVar4 = arg_14h;\n                            if (arg_14h != 0) {\n                                do {\n                                    iVar1 = *arg_10h;\n                                    arg_10h = arg_10h + 1;\n                                    *piVar3 = iVar1;\n                                    piVar3 = piVar3 + 1;\n                                    if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                                    iVar4 = iVar4 + -1;\n                                } while (iVar4 != 0);\n                            }\n                            if (iVar4 == 0) {\n                                *piVar3 = 0;\n                            }\n                        }\n                        if (iVar5 != 0) {\n                            return 0;\n                        }\n                        if (arg_14h == -1) {\n                            arg_8h[arg_ch + -1] = 0;\n                            return 0x50;\n                        }\n                        *arg_8h = 0;\n                        puVar2 = fcn.0102e9b5();\n                        uStack24 = 0x22;\n                        goto code_r0x0103f2bf;\n                    }\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0103f2a1;\n    puVar2 = fcn.0102e9b5();\n    uStack24 = 0x16;\ncode_r0x0103f2bf:\n    *puVar2 = uStack24;\n    fcn.01025c2a();\n    return uStack24;\n}\n",
        "token_count": 701
    },
    "01041649": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.01041649(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    int32_t unaff_EBP;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x1076e60, 0x10);\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.0102e9b5();\n        iVar2 = 0x16;\n        *puVar1 = 0x16;\n        fcn.01025c2a();\n    }\n    else {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.01041c16(unaff_EBP + -0x20, puVar1, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14), *(unaff_EBP + 0x1c));\n        *(unaff_EBP + -0x1c) = iVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.010416de();\n        if (iVar2 != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar2;\n}\n",
        "token_count": 549
    },
    "010416de": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.010416de(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_20h;\n    \n    if (*(unaff_EBP + -0x20) != 0) {\n        if (unaff_EDI != 0) {\n            puVar1 = *((*unaff_ESI >> 6) * 4 + 0x2081ae8) + 0x28 + (*unaff_ESI & 0x3f) * 0x38;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.01040941(*unaff_ESI);\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0104511e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 fcn.0104511e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x1073fa0 | *0x1074010;\n        dVar7 = SUB168(in_XMM0, 0) & *0x1073fa8 | *0x1074018;\n        uVar1 = SUB82(*0x1073fc0 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x1073fd8 & dVar7;\n        dVar9 = (*0x1073fd0 & dVar6) * *(uVar1 + 0x10744b0) - *0x1073fb0;\n        dVar6 = (dVar6 - (*0x1073fd0 & dVar6)) * *(uVar1 + 0x10744b0);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x10744b8);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x10744b8) - *0x1073fb8);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x1074068 * dVar11 + *0x1074078) * dVar11 + *0x1074088) * dVar11 * dVar11 +\n                   ((*0x1074060 * dVar7 + *0x1074070) * dVar7 + *0x1074080) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x1074090 * dVar7 + *(uVar1 + 0x10740a8) + dVar10 * *0x1073fe8 + (dVar8 & *(iVar5 + 0x1073ff8)) +\n                   *(uVar1 + 0x10740a0) + dVar9 + dVar10 * *0x1073fe0 + (dVar6 & *(iVar5 + 0x1073ff0));\n        }\n        dStack12 = -(*0x1074020 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x1074010 == (param_1 & *0x1073fa0 | *0x1074010)) {\n                    return *0x1074048;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x1073fa0;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x0104532a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x1074030);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x1074040;\ncode_r0x0104532a:\n    fcn.010438bf(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1032
    },
    "01045a1e": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.01045a1e(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    unkint10 in_ST0;\n    ulong uStack32;\n    uint16_t uStack24;\n    \n    uStack32._0_4_ = in_ST0;\n    uStack32._4_4_ = in_ST0 >> 0x20;\n    uStack32 = in_ST0;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack32._4_4_ < 0) {\n        if (uStack24 < 0x403e) {\n            uVar2 = 0x3e - uStack24;\n            uVar3 = uStack32._4_4_;\n            if (0x1f < uVar2) {\n                uVar3 = 0;\n                uStack32._0_4_ = uStack32._4_4_;\n            }\n            uVar1 = uStack32 >> (uVar2 & 0x1f) | uVar3 << 0x20 - (uVar2 & 0x1f);\n            uVar3 = uVar3 >> (uVar2 & 0x1f);\n            if (in_ST0 < 0) {\n                bVar4 = uVar1 != 0;\n                uVar1 = -uVar1;\n                uVar3 = -(uVar3 + bVar4);\n            }\n            return CONCAT44(uVar3, uVar1);\n        }\n        if (((uStack24 < 0x403f) && ((uStack32._4_4_ * 2 | uStack32) == 0)) && (in_ST0 < 0)) {\n            return uStack32;\n        }\n    }\n    return 0x8000000000000000;\n}\n",
        "token_count": 459
    },
    "01011c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01011c70(char32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t var_4h;\n    \n    *0x107a270 = 0;\n    while ((*0x107a270 < 0x27 &&\n           ((arg_8h == str.e[0] ||\n            (*0x1078004 = ((*0x10780d8 + -0x3c) - arg_8h) + *0x1078004 * *(*0x107a270 * 4 + 0x1078010), \n            *0x10780d8 != *0x1078018))))) {\n        *0x107a270 = *0x107a270 + 1;\n    }\n    *0x10780d4 = *0x1078004 + '\\x1a' + *0x10780d8;\n    var_4h = in_ECX;\n    if (*0x1078020 == 0xf4) {\n        var_4h = *0x10780d8 + 0x2b + in_ECX + *0x1078028;\n    }\n    *0x10780d8 = *0x1078008 + -0x44e6 + *0x1078004;\n    iVar1 = fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n    *0x107a270 = 0;\n    while ((*0x107a270 < 0x27 &&\n           ((arg_8h == str.e[0] ||\n            (*0x1078004 = (((iVar1 - var_4h) + -0x3c) - arg_8h) + *0x1078004 * *(*0x107a270 * 4 + 0x1078010), \n            iVar1 - var_4h != *0x1078018))))) {\n        *0x107a270 = *0x107a270 + 1;\n    }\n    iVar4 = *0x1078008 + 0x2b + *0x1078004;\n    iVar1 = (var_4h - *0x1078004) + arg_8h;\n    uVar2 = iVar4 * 0x4e + iVar1;\n    iVar4 = iVar1 * 0x6298 * iVar4;\n    uVar3 = (iVar4 + -0x3c) - iVar1;\n    *0x1078008 = uVar3 + uVar2;\n    *0x107800c = CARRY4(uVar3, uVar2);\n    *0x10780d8 = (*0x1078008 - iVar4) + iVar1;\n    *0x1078004 = arg_8h * 0x6298 * iVar1;\n    fcn.010214b0(*0x1078008, *0x107800c, 4, 0);\n    iVar4 = *0x10780d4 * 4 - *0x1078004;\n    *0x10780d4 = iVar4 + -7 + arg_8h;\n    uVar2 = (*0x1078004 - 0x20) + iVar4;\n    bVar5 = *0x1078008 < uVar2;\n    uVar2 = *0x1078008 - uVar2;\n    iVar1 = (*0x1078004 - 7) + arg_8h;\n    if (*0x10780d4 <= *0x1078004) {\n        *0x10780d4 = *0x1078004 + '+' + arg_8h;\n        str.e[0] = str.e[0] - arg_8h;\n        *0x1078004 = *0x1078004 - (arg_8h + L'\\xffffffe0' + *0x10780d4);\n    }\n    iVar4 = (*0x10780d4 - iVar4) + *0x1078004;\n    uVar3 = iVar1 + -0x20 + iVar4;\n    *0x1078008 = uVar2 - uVar3;\n    *0x107800c = (*0x107800c - bVar5) - (uVar2 < uVar3);\n    *0x10780d8 = (*0x1078008 - iVar4) + iVar1;\n    return iVar1;\n}\n",
        "token_count": 1019
    },
    "0101c730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101c730(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01022fe0(arg_8h, arg_ch, arg_10h << 1);\n    return arg_8h;\n}\n",
        "token_count": 62
    },
    "0101e3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101e3c0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01023560(arg_8h, arg_ch, arg_10h << 1);\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "010146f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.010146f0(int32_t *param_1, int32_t param_2, uint param_3)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    uint arg_8h;\n    uint arg_10h;\n    uint arg_ch;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t var_8h;\n    uint var_ch_2;\n    uint var_10h;\n    uint var_ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_3;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046060;\n    var_ch_3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_3;\n    noname_0 = fcn.01019ff0();\n    piVar4 = param_1 + 1;\n    iVar2 = var_8h - *param_1 >> 4;\n    iVar3 = *piVar4 - *param_1 >> 4;\n    iVar1 = fcn.0101e2a0();\n    if (iVar3 == iVar1) {\n        fcn.0101ba60();\n    }\n    iVar3 = iVar3 + 1;\n    arg_8h = fcn.010195c0(iVar3);\n    iVar1 = fcn.0101bef0(arg_8h);\n    var_4h = 0;\n    arg_10h = fcn.01014540(var_ch_2);\n    arg_ch = fcn.01014540(iVar2 * 0x10 + iVar1);\n    fcn.01015ae0(noname_0, arg_ch, arg_10h);\n    if (var_8h == *piVar4) {\n        fcn.0101b9b0(*param_1, *piVar4, iVar1);\n    }\n    else {\n        fcn.0101b950(*param_1, var_8h, iVar1);\n        fcn.0101b950(var_8h, *piVar4, iVar1 + 0x10 + iVar2 * 0x10);\n    }\n    var_4h = 0xffffffff;\n    fcn.01019620(iVar1, iVar3, arg_8h);\n    *in_FS_OFFSET = var_ch_3;\n    return iVar2 * 0x10 + iVar1;\n}\n",
        "token_count": 640
    },
    "010157f0": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nuint __cdecl fcn.010157f0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint arg_18h;\n    uint uVar2;\n    uint arg_14h;\n    uint arg_8h_00;\n    uint arg_10h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_3h;\n    \n    fcn.01014960(&var_30h, arg_ch);\n    cVar1 = fcn.01014dd0(var_28h, arg_ch);\n    if (cVar1 == '\\0') {\n        fcn.010196c0();\n        var_ch = fcn.01019fd0();\n        arg_18h = fcn.01015f50(&var_3h);\n        uVar2 = fcn.01014540(arg_ch);\n        arg_14h = fcn.01015f60(&var_1ch, uVar2);\n        arg_10h = 0x1047247;\n        uVar2 = *var_ch;\n        arg_8h_00 = fcn.01019ff0();\n        var_10h = fcn.01013960(arg_8h_00, uVar2, arg_10h, arg_14h, arg_18h);\n        var_14h = fcn.0101b370();\n        fcn.01017db0();\n        var_18h = fcn.0101a790(var_30h, var_2ch, var_14h);\n        var_3h._1_1_ = 1;\n        fcn.010138e0(&var_18h, &var_3h + 1);\n    }\n    else {\n        var_3h._2_1_ = 0;\n        fcn.010138e0(&var_28h, &var_3h + 2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 497
    },
    "0101f8de": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101f8de(uint noname_0, code *arg_ch)\n\n{\n    code **ppcVar1;\n    code **in_ECX;\n    int32_t iVar2;\n    code **ppcVar3;\n    uint var_30h;\n    uint var_4h;\n    \n    in_ECX[1] = arg_ch;\n    *in_ECX = vtable.std::codecvt_wchar_t__char__struct__Mbstatet_.0;\n    ppcVar1 = fcn.0101f335(&var_30h);\n    ppcVar3 = in_ECX + 2;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *ppcVar3 = *ppcVar1;\n        ppcVar1 = ppcVar1 + 1;\n        ppcVar3 = ppcVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "0101b0d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0101b0d0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x1046720;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    var_4h = 0;\n    cVar1 = fcn.0101ddb0();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.0101dca0();\n        if ((uVar2 & 2) != 0) {\n            fcn.0101e6b0();\n            iVar3 = fcn.0101e5e0();\n            if (iVar3 == -1) {\n                fcn.0101e7b0(4, 0);\n            }\n        }\n    }\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 283
    },
    "0101f796": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0101f796(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021890(8);\n    fcn.0101ed46(0);\n    piVar1 = *0x2081278;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = piVar1;\n    arg_8h_00 = fcn.01018ae0();\n    iVar3 = fcn.0101a380(arg_8h_00);\n    if ((iVar3 == 0) && (piVar1 == NULL)) {\n        iVar3 = fcn.0101fcfd(unaff_EBP + -0x10, *(unaff_EBP + 8));\n        if (iVar3 == -1) {\n            fcn.0101b530();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = *(unaff_EBP + -0x10);\n        *(unaff_EBP + -0x10) = piVar1;\n        *(unaff_EBP + -4) = 1;\n        fcn.0101f083(piVar1);\n        pcVar2 = *(*piVar1 + 4);\n        (**0x10471b0)();\n        (*pcVar2)();\n        *0x2081278 = piVar1;\n    }\n    fcn.0101ed9e();\n    fcn.0102186a();\n    return;\n}\n",
        "token_count": 423
    },
    "01021134": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01021134(int32_t noname_0, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [4];\n    uint var_ch;\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x102114e;\n        iVar2 = fcn.0102e3df();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x1021141;\n        iVar2 = fcn.01031119(noname_0);\n    } while (iVar2 != 0);\n    if (noname_0 != -1) {\n        fcn.0101edc2();\n        fcn.01023cbc(&stack0xffffffec, 0x107641c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.01017500();\n    fcn.01023cbc(&stack0xffffffec, 0x1076244);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 250
    },
    "010245b9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010245b9(int32_t arg_8h)\n\n{\n    if (*0x1078140 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.0102582c(*0x1078140);\n        }\n        fcn.01025867(*0x1078140, 0);\n        fcn.0102459d(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 103
    },
    "010367e9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.010367e9(uint8_t **arg_8h)\n\n{\n    uint8_t uVar1;\n    uint *puVar2;\n    uint arg_8h_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint8_t *arg_ch;\n    \n    if (arg_8h == NULL) {\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 0x16;\n        fcn.01025c2a();\n    }\n    else if (((arg_8h[3] >> 0xd & 1) != 0) && ((arg_8h[3] >> 0xc & 1) == 0)) {\n        if ((arg_8h[3] >> 1 & 1) == 0) {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 1;\n            if ((arg_8h[3] & 0x4c0) == 0) {\n                fcn.0103a3d0(arg_8h);\n            }\n            *arg_8h = arg_8h[1];\n            puVar3 = arg_8h[6];\n            arg_ch = arg_8h[1];\n            arg_8h_00 = fcn.0102c2fb(arg_8h);\n            puVar3 = fcn.01041185(arg_8h_00, arg_ch, puVar3);\n            arg_8h[2] = puVar3;\n            puVar3 = arg_8h[2];\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((arg_8h[3] & 6) == 0) {\n                    iVar4 = fcn.0102c2fb(arg_8h);\n                    if ((iVar4 == -1) || (iVar4 = fcn.0102c2fb(arg_8h),  iVar4 == -2)) {\n                        iVar4 = 0x1078360;\n                    }\n                    else {\n                        iVar4 = fcn.0102c2fb(arg_8h);\n                        uVar5 = fcn.0102c2fb(arg_8h);\n                        iVar4 = *((iVar4 >> 6) * 4 + 0x2081ae8) + (uVar5 & 0x3f) * 0x38;\n                    }\n                    if ((*(iVar4 + 0x28) & 0x82) == 0x82) {\n                        LOCK();\n                        arg_8h[3] = arg_8h[3] | 0x20;\n                    }\n                }\n                if (((arg_8h[6] == 0x200) && ((arg_8h[3] >> 6 & 1) != 0)) && ((arg_8h[3] & 0x100) == 0)) {\n                    arg_8h[6] = 0x1000;\n                }\n                arg_8h[2] = arg_8h[2] + -1;\n                uVar1 = **arg_8h;\n                *arg_8h = *arg_8h + 1;\n                return uVar1;\n            }\n            LOCK();\n            arg_8h[3] = arg_8h[3] | (puVar3 != NULL) * 8 + 8;\n            arg_8h[2] = NULL;\n        }\n        else {\n            LOCK();\n            arg_8h[3] = arg_8h[3] | 0x10;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 820
    },
    "0103f43a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0103f43a(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x0103f3a5:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    piVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if (iVar1 == 0) break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar4);\n                            *piVar4 = iVar1;\n                            piVar4 = piVar4 + 1;\n                            if ((iVar1 == 0) || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar4 = 0;\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.0102e9b5();\n                    uVar6 = 0x22;\n                    goto code_r0x0103f393;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x0103f3a5;\n    puVar2 = fcn.0102e9b5();\n    uVar6 = 0x16;\ncode_r0x0103f393:\n    *puVar2 = uVar6;\n    fcn.01025c2a();\n    return uVar6;\n}\n",
        "token_count": 630
    },
    "01043690": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01043690(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x01043613:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    pcVar4 = arg_8h;\n                    iVar5 = arg_ch;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar5 = iVar5 + -1;\n                        } while (iVar5 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar4[arg_10h - arg_8h];\n                            *pcVar4 = cVar1;\n                            pcVar4 = pcVar4 + 1;\n                            if ((cVar1 == '\\0') || (iVar5 = iVar5 + -1,  iVar5 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar4 = '\\0';\n                        }\n                    }\n                    if (iVar5 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.0102e9b5();\n                    uVar6 = 0x22;\n                    goto code_r0x01043601;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x01043613;\n    puVar2 = fcn.0102e9b5();\n    uVar6 = 0x16;\ncode_r0x01043601:\n    *puVar2 = uVar6;\n    fcn.01025c2a();\n    return uVar6;\n}\n",
        "token_count": 615
    },
    "01044937": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.01044937(void)\n\n{\n    if (*0x1078a60 == -2) {\n        fcn.01044918();\n    }\n    return *0x1078a60 != -1;\n}\n",
        "token_count": 49
    },
    "01044956": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.01044956(void)\n\n{\n    if ((*0x1078a60 != -1) && (*0x1078a60 != -2)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x1078a60);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "01018f90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01018f90(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01017ec0();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "01018fc0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01018fc0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01017ef0();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "01018ff0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01018ff0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01017f30();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 79
    },
    "01019050": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01019050(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01017fa0();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "010190e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010190e0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01018010();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "01019110": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01019110(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01018200();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 77
    },
    "01019170": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01019170(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01017d40();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 78
    },
    "0101fb43": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0101fb43(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0101fa59();\n    if ((arg_8h & 1) != 0) {\n        fcn.01021164(in_ECX + -8);\n    }\n    return in_ECX + -8;\n}\n",
        "token_count": 82
    },
    "0101fcfd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0101fcfd(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint var_44h;\n    uint var_10h;\n    uint var_4h;\n    uint uVar4;\n    \n    uVar4 = 0x38;\n    fcn.01021890();\n    piVar1 = *(unaff_EBP + 8);\n    iVar3 = 0;\n    *(unaff_EBP + -0x10) = 0;\n    if ((piVar1 != NULL) && (*piVar1 == 0)) {\n        iVar2 = fcn.01021134(0x34, uVar4);\n        *(unaff_EBP + -0x10) = iVar2;\n        *(unaff_EBP + -4) = 0;\n        if (iVar2 != 0) {\n            uVar4 = fcn.0101c450();\n            uVar4 = fcn.01017250(uVar4);\n            iVar3 = fcn.0101f8de(uVar4, 0);\n        }\n        *piVar1 = iVar3;\n        if (iVar2 != 0) {\n            fcn.01018250();\n        }\n    }\n    fcn.0102186a();\n    return;\n}\n",
        "token_count": 324
    },
    "0102d6f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0102d6f0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.0102d52b(8, 0);\n    return;\n}\n",
        "token_count": 95
    },
    "01037006": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.01037006(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x1076c38, 0x10);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.0102e9a2();\n        *puVar1 = 0;\n        puVar1 = fcn.0102e9b5();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x2081ce8)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x38;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x2081ae8) + 0x28 + iVar3) & 1) != 0) {\n                fcn.0104088c(lpCriticalSection);\n                uVar2 = 0xffffffff;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x2081ae8) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.0102e9b5();\n                    *puVar1 = 9;\n                    puVar1 = fcn.0102e9a2();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.010370f8(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.010370c5();\n                goto code_r0x010370e8;\n            }\n        }\n        puVar1 = fcn.0102e9a2();\n        *puVar1 = 0;\n        puVar1 = fcn.0102e9b5();\n        *puVar1 = 9;\n        fcn.01025c2a();\n    }\n    uVar2 = 0xffffffff;\ncode_r0x010370e8:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar2;\n}\n",
        "token_count": 682
    },
    "01037727": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01037727(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0102c2fb(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.010376a2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x01037305;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0102ea90(1),  arg_ch != puVar2 && (puVar2 = fcn.0102ea90(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.01041fce(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0103a3d0(arg_ch);\n            }\n            cVar1 = fcn.01037508(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 0x22;\n    }\ncode_r0x01037305:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 533
    },
    "01037732": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01037732(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.0102c2fb(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                cVar1 = fcn.010376a2(arg_ch);\n                arg_ch[2] = 0;\n                if (cVar1 == '\\0') goto code_r0x0103741a;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.0102ea90(1),  arg_ch != puVar2 && (puVar2 = fcn.0102ea90(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.01041fce(arg_8h_00),  iVar3 == 0)))) {\n                fcn.0103a3d0(arg_ch);\n            }\n            cVar1 = fcn.010375d4(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffff;\n            }\n            return arg_8h & 0xffff;\n        }\n        puVar2 = fcn.0102e9b5();\n        *puVar2 = 0x22;\n    }\ncode_r0x0103741a:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 536
    },
    "010195c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.010195c0(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0101c490();\n    uVar2 = fcn.0101e2a0();\n    if ((uVar1 <= uVar2 - (uVar1 >> 1)) && (uVar2 = (uVar1 >> 1) + uVar1,  uVar2 < arg_8h)) {\n        uVar2 = arg_8h;\n    }\n    return uVar2;\n}\n",
        "token_count": 161
    },
    "010219fa": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01021a67)\n// WARNING: Removing unreachable block (ram,0x01021a2c)\n// WARNING: Removing unreachable block (ram,0x01021ade)\n\nuint fcn.010219fa(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x208144c = 0;\n    *0x1078130 = *0x1078130 | 1;\n    iVar3 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar4 = *0x1078130;\n    if (iVar3 != 0) {\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar5 = puVar2[3];\n        if (((piVar1[1] ^ 0x756e6547U | piVar1[3] ^ 0x6c65746eU | piVar1[2] ^ 0x49656e69U) == 0) &&\n           (((((uVar4 = *puVar2 & 0xfff3ff0,  uVar4 == 0x106c0 || (uVar4 == 0x20660)) || (uVar4 == 0x20670)) ||\n             ((uVar4 == 0x30650 || (uVar4 == 0x30660)))) || (uVar4 == 0x30670)))) {\n            *0x2081450 = *0x2081450 | 1;\n        }\n        if (*piVar1 < 7) {\n            uVar6 = 0;\n        }\n        else {\n            iVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            uVar6 = *(iVar3 + 4);\n            if ((uVar6 & 0x200) != 0) {\n                *0x2081450 = *0x2081450 | 2;\n            }\n        }\n        *0x208144c = 1;\n        uVar4 = *0x1078130 | 2;\n        if ((uVar5 & 0x100000) != 0) {\n            uVar4 = *0x1078130 | 6;\n            *0x208144c = 2;\n            if ((((uVar5 & 0x8000000) != 0) && ((uVar5 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x208144c = 3;\n                uVar4 = *0x1078130 | 0xe;\n                if ((uVar6 & 0x20) != 0) {\n                    *0x208144c = 5;\n                    uVar4 = *0x1078130 | 0x2e;\n                    if (((uVar6 & 0xd0030000) == 0xd0030000) && ((in_XCR0 & 0xe0) == 0xe0)) {\n                        *0x1078130 = *0x1078130 | 0x6e;\n                        *0x208144c = 6;\n                        uVar4 = *0x1078130;\n                    }\n                }\n            }\n        }\n    }\n    *0x1078130 = uVar4;\n    return 0;\n}\n",
        "token_count": 846
    },
    "0103cccf": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.0103cccf(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    char *pcVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    char **ppcVar10;\n    char **arg_8h_00;\n    char **var_28h;\n    char **var_24h;\n    uint var_20h;\n    char **var_1ch;\n    char *var_18h;\n    char *var_14h;\n    char *var_10h;\n    char *var_ch;\n    char **var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar3 = fcn.0102e9b5();\n        iVar8 = 0x16;\n        *puVar3 = 0x16;\n        fcn.01025c2a();\n    }\n    else {\n        pcVar7 = NULL;\n        *arg_ch = 0;\n        iVar8 = *arg_8h;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        ppcVar10 = var_28h;\n        while (var_28h = ppcVar10,  iVar8 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar8 = fcn.01044070(iVar8, &var_4h);\n            if (iVar8 == 0) {\n                iVar8 = fcn.0103c8c5(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar8 = fcn.0103c976(*arg_8h, iVar8, &var_28h);\n            }\n            ppcVar10 = var_28h;\n            var_8h = iVar8;\n            if (iVar8 != 0) goto code_r0x0103c876;\n            arg_8h = arg_8h + 1;\n            iVar8 = *arg_8h;\n        }\n        var_4h = NULL;\n        var_ch = (var_24h - ppcVar10 >> 2) + 1;\n        uVar9 = ~-(var_24h < ppcVar10) & (var_24h - ppcVar10) + 3U >> 2;\n        var_8h = ppcVar10;\n        if (uVar9 != 0) {\n            uVar6 = 0;\n            do {\n                pcVar5 = *var_8h;\n                var_10h = pcVar5 + 1;\n                do {\n                    cVar1 = *pcVar5;\n                    pcVar5 = pcVar5 + 1;\n                } while (cVar1 != '\\0');\n                pcVar7 = pcVar5 + pcVar7 + (1 - var_10h);\n                var_8h = var_8h + 1;\n                uVar6 = uVar6 + 1;\n                var_4h = pcVar7;\n            } while (uVar6 != uVar9);\n        }\n        iVar8 = fcn.01031878(var_ch, var_4h, 1);\n        if (iVar8 == 0) {\n            iVar8 = -1;\n            var_8h = 0xffffffff;\n        }\n        else {\n            var_ch = iVar8 + var_ch * 4;\n            var_18h = var_ch;\n            if (ppcVar10 != var_24h) {\n                var_1ch = iVar8 - ppcVar10;\n                var_8h = ppcVar10;\n                do {\n                    var_14h = *var_8h;\n                    var_10h = var_14h;\n                    do {\n                        cVar1 = *var_10h;\n                        var_10h = var_10h + 1;\n                    } while (cVar1 != '\\0');\n                    var_10h = var_10h + (1 - (var_14h + 1));\n                    iVar4 = fcn.01043690(var_ch, var_4h + (var_18h - var_ch), var_14h, var_10h);\n                    if (iVar4 != 0) {\n                        fcn.01025c57(0, 0, 0, 0, 0);\n                        pcVar2 = swi(3);\n                        iVar8 = (*pcVar2)();\n                        return iVar8;\n                    }\n                    *(var_1ch + var_8h) = var_ch;\n                    var_8h = var_8h + 1;\n                    var_ch = var_ch + var_10h;\n                } while (var_8h != var_24h);\n            }\n            var_8h = NULL;\n            *arg_ch = iVar8;\n            iVar8 = 0;\n        }\n        fcn.0103379b(0);\ncode_r0x0103c876:\n        uVar6 = 0;\n        uVar9 = ~-(var_24h < ppcVar10) & var_24h + (3 - ppcVar10) >> 2;\n        arg_8h_00 = ppcVar10;\n        var_1ch = ppcVar10;\n        var_18h = uVar9;\n        if (uVar9 != 0) {\n            do {\n                fcn.0103379b(*ppcVar10);\n                uVar6 = uVar6 + 1;\n                ppcVar10 = ppcVar10 + 1;\n                iVar8 = var_8h;\n                arg_8h_00 = var_28h;\n            } while (uVar6 != uVar9);\n        }\n        fcn.0103379b(arg_8h_00);\n    }\n    return iVar8;\n}\n",
        "token_count": 1347
    },
    "010271a0": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010271a0(int16_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    uint arg_8h_00;\n    ushort extraout_var;\n    int32_t arg_8h_01;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    while ((*arg_8h == *(var_4h + 0x106cd78) || (*arg_8h == *(var_4h + 0x106cd80)))) {\n        iVar2 = fcn.0102ac58();\n        arg_8h_01 = CONCAT22(extraout_var, iVar2);\n        var_4h = var_4h + 2;\n        *arg_8h = iVar2;\n        if (var_4h == 6) {\n            fcn.0102b7e7(arg_8h_01);\n            iVar2 = fcn.0102ac58();\n            *arg_8h = iVar2;\n            while ((*arg_8h == *(L\"INITY\" + iVar3) || (*arg_8h == *(L\"inity\" + iVar3)))) {\n                arg_8h_00 = fcn.0102ac58();\n                iVar3 = iVar3 + 2;\n                *arg_8h = arg_8h_00;\n                if (iVar3 == 10) {\n                    fcn.0102b7e7(arg_8h_00);\n                    return arg_8h_01;\n                }\n            }\n            cVar1 = fcn.010282ba();\n            return (cVar1 == '\\0') * 4 + 3;\n        }\n    }\n    fcn.010282ba();\n    return 7;\n}\n",
        "token_count": 438
    },
    "010273de": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.010273de(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar4 = 0;\n    do {\n        uVar1 = *arg_8h;\n        uVar2 = uVar1;\n        if ((uVar1 != *(L\"SNAN)\" + iVar4)) && (uVar1 != *(L\"snan)\" + iVar4))) goto code_r0x01027417;\n        uVar2 = fcn.0102ac58();\n        iVar4 = iVar4 + 2;\n        *arg_8h = uVar2;\n    } while (iVar4 != 10);\n    uVar3 = 1;\ncode_r0x01027417:\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 214
    },
    "01020ae6": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.01020ae6(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    while (*0x107810c < 10) {\n        iVar1 = *0x107810c * 4;\n        *0x107810c = *0x107810c + 1;\n        pcVar3 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*(iVar1 + 0x20812b0), uVar2);\n        if (pcVar3 != NULL) {\n            (**0x10471b0)();\n            (*pcVar3)();\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 242
    },
    "0103e02d": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0103e02d(uint8_t *arg_8h, uint32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_ch = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            if ((arg_ch & 0xffffff80) == 0) {\n                *arg_8h = arg_ch;\n                return 1;\n            }\n            if ((arg_ch & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((arg_ch & 0xffff0000) == 0) {\n                if ((0xd7ff < arg_ch) && (arg_ch < 0xe000)) {\ncode_r0x0103e0cb:\n                    iVar2 = fcn.0103e0d8(arg_10h);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((arg_ch & 0xffe00000) != 0) || (0x10ffff < arg_ch)) goto code_r0x0103e0cb;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = arg_ch;\n                arg_ch = arg_ch >> 6;\n                arg_8h[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *arg_8h = arg_ch | uVar3;\n            *arg_10h = 0;\n            arg_10h[1] = 0;\n            return iVar2 + 1;\n        }\n        *arg_8h = arg_ch;\n    }\n    *arg_10h = arg_ch;\n    arg_10h[1] = arg_ch;\n    return 1;\n}\n",
        "token_count": 498
    },
    "0104088c": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0104088c(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x2081ae8));\n    return;\n}\n",
        "token_count": 70
    },
    "01040941": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01040941(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x38 + *((lpCriticalSection >> 6) * 4 + 0x2081ae8));\n    return;\n}\n",
        "token_count": 70
    },
    "01001040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001040(void)\n\n{\n    *0x208107c = 0x3067e10;\n    return;\n}\n",
        "token_count": 31
    },
    "01001090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01001090(void)\n\n{\n    *0x2081080 = _sym.imp.KERNEL32.dll_VirtualProtectEx + 0x1562;\n    *0x2081084 = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "010011d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010011d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.0102d92e(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 65
    },
    "010011f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010011f0(uint arg_8h)\n\n{\n    fcn.0102dc02(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "01001210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01001210(uint arg_8h)\n\n{\n    fcn.0102e02e(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "01011790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01011790(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint var_4h;\n    \n    iVar2 = ((*0x1078004 + -0x3c) - arg_8h) + in_ECX;\n    uVar5 = (*0x10780d4 - (arg_8h + -0x20 + *0x10780d8)) - (*0x1078004 + -0x20 + *0x1078004 * -0x68 * *0x10780d8);\n    uVar4 = uVar5 + arg_8h + *0x1078004 * -2 + *0x10780d8 + -0x4d + *0x1078008;\n    *0x1078004 = uVar5 + 0x2b + *0x1078004;\n    *0x10780d4 = *0x1078004 * 'N' + arg_8h;\n    uVar1 = iVar2 + arg_8h + -0x44e6 + (uVar4 - *0x1078004);\n    uVar3 = uVar1 - uVar4;\n    *0x1078008 = uVar3 + uVar4;\n    *0x1078004 = iVar2 + 0x2b + arg_8h;\n    *0x107800c = CARRY4(uVar3, uVar4) - (uVar1 < uVar4);\n    *0x10780d8 = *0x1078008 + *0x10780d4 * -4 + arg_8h * 2 + iVar2 + 0x2b;\n    return *0x1078008;\n}\n",
        "token_count": 430
    },
    "01013860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013860(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01014540(arg_ch);\n    fcn.01016530();\n    return in_ECX;\n}\n",
        "token_count": 60
    },
    "01013890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.01013890(uint arg_8h)\n\n{\n    uint arg_ch;\n    uchar *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0xc) = 0;\n    arg_ch = fcn.01014540(arg_8h);\n    fcn.01016130(in_ECX, arg_ch);\n    fcn.01018220();\n    return in_ECX;\n}\n",
        "token_count": 118
    },
    "010138e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.010138e0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uchar *puVar2;\n    uint *in_ECX;\n    uint var_4h;\n    \n    puVar1 = fcn.01014540(arg_8h);\n    *in_ECX = *puVar1;\n    puVar2 = fcn.01014540(arg_ch);\n    *(in_ECX + 1) = *puVar2;\n    return in_ECX;\n}\n",
        "token_count": 115
    },
    "01013920": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013920(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uchar *puVar1;\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.01014540(arg_ch);\n    puVar1 = fcn.01014540(arg_10h);\n    fcn.01013810(*puVar1);\n    return in_ECX;\n}\n",
        "token_count": 93
    },
    "01013a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01013a50(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    puVar1 = fcn.01014540(arg_ch);\n    *in_ECX = *puVar1;\n    puVar1 = fcn.01014540(arg_10h);\n    in_ECX[1] = *puVar1;\n    return in_ECX;\n}\n",
        "token_count": 112
    },
    "01013a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.01013a90(uint arg_8h)\n\n{\n    uint arg_ch;\n    uchar *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0xc) = 0;\n    arg_ch = fcn.01014540(arg_8h);\n    fcn.01016180(in_ECX, arg_ch);\n    fcn.01018220();\n    return in_ECX;\n}\n",
        "token_count": 119
    },
    "01013ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013ae0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint in_ECX;\n    uint32_t noname_0;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint8_t var_10h;\n    uchar var_fh [3];\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1045f7d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    noname_0 = var_fh[1];\n    uVar2 = arg_10h;\n    fcn.01013860(noname_0, arg_10h);\n    var_4h = 0;\n    fcn.01017240(var_fh, in_ECX, noname_0, uVar2, uVar1);\n    fcn.0101b8d0();\n    fcn.010143d0(&arg_8h, &arg_ch);\n    uVar1 = var_10h;\n    uVar2 = fcn.01014cd0(&arg_ch);\n    arg_8h_00 = fcn.01014cd0(&arg_8h);\n    fcn.01019710(arg_8h_00, uVar2);\n    fcn.01018220(arg_8h_00, uVar2, uVar1);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 393
    },
    "01013be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01013be0(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.01013bd0(var_1h);\n    arg_8h = fcn.01014540(arg_ch);\n    fcn.01013cb0(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 124
    },
    "01013c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013c50(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_14h;\n    uint8_t var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1045fa0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch = fcn.01014540(arg_8h);\n    fcn.01013be0(var_dh, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 160
    },
    "01013cb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01013cb0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.01014540(arg_8h);\n    *in_ECX = uVar1;\n    return in_ECX;\n}\n",
        "token_count": 73
    },
    "01013ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01013ce0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_4h;\n    \n    uVar1 = fcn.01014540(arg_8h);\n    uVar1 = fcn.01014cd0(uVar1);\n    fcn.01016820(uVar1);\n    fcn.01016790(0);\n    return in_ECX;\n}\n",
        "token_count": 98
    },
    "01014050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01014050(uint arg_8h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_01;\n    uint var_94h;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uchar *var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104600d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    cVar1 = fcn.0101e0a0(var_10h);\n    if (cVar1 != '\\0') {\n        *var_5ch = 1;\n        fcn.01017840(1);\n        *(var_5ch + 8) = var_78h;\n        *(var_5ch + 0xc) = var_74h;\n        fcn.01018220();\n    }\n    cVar1 = fcn.0101e0d0();\n    if (cVar1 == '\\0') {\n        arg_8h_00 = fcn.0101e9c0();\n        var_68h = fcn.01016920(arg_8h_00);\n        var_4h = 1;\n        var_64h = var_68h;\n        var_70h = fcn.01014270(&var_40h, \"cannot use operator[] with a string argument with \", var_68h);\n        var_4h._0_1_ = 2;\n        var_6ch = var_70h;\n        fcn.0101c830(&var_94h, 0x131, var_70h);\n        arg_8h_01 = 0x10763e0;\n        fcn.01023cbc(&var_94h, 0x10763e0);\n        var_4h = CONCAT31(var_4h._1_3_, 1);\n        fcn.01017ef0();\n        var_4h = 0xffffffff;\n        fcn.01017ef0();\n    }\n    else {\n        fcn.01016920(arg_8h);\n        var_4h = 0;\n        arg_8h_01 = &var_28h;\n        var_60h = fcn.01018ab0(arg_8h_01);\n        var_4h = 0xffffffff;\n        fcn.01017ef0();\n    }\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(arg_8h_01);\n    return;\n}\n",
        "token_count": 688
    },
    "010141f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.010141f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0101bf50(arg_10h);\n    uVar1 = fcn.01014540(uVar1);\n    fcn.01016820(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "01014230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01014230(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0101c020(arg_10h);\n    uVar1 = fcn.01014540(uVar1);\n    fcn.01016820(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 92
    },
    "01014270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01014270(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0101de20(0, arg_ch);\n    uVar1 = fcn.01014540(uVar1);\n    fcn.01016820(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 93
    },
    "010142b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.010142b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint32_t arg_14h;\n    int32_t arg_1ch;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    uVar1 = fcn.0101e100(arg_ch);\n    arg_14h = fcn.01014540(uVar1);\n    arg_1ch = fcn.0101e800();\n    iVar2 = fcn.0101e1e0();\n    if (iVar2 - arg_1ch < arg_14h) {\n        fcn.0101ba50();\n    }\n    uVar1 = fcn.0101c410();\n    fcn.01016d00(var_2h, arg_10h, arg_ch, arg_14h, uVar1, arg_1ch);\n    return arg_8h;\n}\n",
        "token_count": 262
    },
    "01014370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014370(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.01014540(arg_ch);\n    fcn.01016110(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 72
    },
    "010143a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010143a0(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint var_4h;\n    \n    puVar1 = fcn.01014540(arg_ch);\n    fcn.01016160(arg_8h, *puVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "010144a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.010144a0(uint arg_8h)\n\n{\n    int32_t var_4h;\n    \n    var_4h = fcn.0101bec0(1);\n    fcn.01014500(var_4h, &var_4h);\n    fcn.01014500(var_4h + 4, &var_4h);\n    fcn.01014500(var_4h + 8, &var_4h);\n    *(var_4h + 0xc) = 1;\n    *(var_4h + 0xd) = 1;\n    return var_4h;\n}\n",
        "token_count": 144
    },
    "01014500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014500(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint *puVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.01014540(arg_8h);\n    puVar1 = fcn.01018550(4, arg_ch_00);\n    puVar2 = fcn.01014540(arg_ch);\n    *puVar1 = *puVar2;\n    return;\n}\n",
        "token_count": 115
    },
    "01014550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014550(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046040;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (0xfff < arg_ch) {\n        fcn.01019380(&arg_8h, &arg_ch);\n    }\n    fcn.01021164(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 146
    },
    "010145b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010145b0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046040;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x10) {\n        arg_ch_00 = fcn.01014540(arg_8h);\n        fcn.01015e70(arg_10h, arg_ch_00);\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 185
    },
    "01014620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014620(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.01014540(arg_8h);\n    arg_ch = fcn.01014540(*(in_ECX + 4));\n    fcn.01015ae0(*(in_ECX + 8), arg_ch, arg_10h);\n    *(in_ECX + 4) = *(in_ECX + 4) + 0x10;\n    return;\n}\n",
        "token_count": 132
    },
    "01014670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014670(uint arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    uint noname_0;\n    int32_t in_ECX;\n    int32_t *piVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX + 4;\n    arg_10h = fcn.01014540(arg_8h);\n    arg_ch = fcn.01014540(*piVar1);\n    noname_0 = fcn.01019ff0();\n    fcn.01015ae0(noname_0, arg_ch, arg_10h);\n    fcn.0101b0c0(*piVar1, *piVar1);\n    *piVar1 = *piVar1 + 0x10;\n    return;\n}\n",
        "token_count": 199
    },
    "010148d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010148d0(uint arg_8h)\n\n{\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    fcn.01018220();\n    fcn.01014910(arg_8h, *(*in_ECX + 4));\n    fcn.01014ab0(arg_8h, *in_ECX);\n    return;\n}\n",
        "token_count": 85
    },
    "01014910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01014910(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    while (*(arg_ch + 0xd) == '\\0') {\n        fcn.01014910(arg_8h, *(arg_ch + 8));\n        arg_ch_00 = fcn.01015f30(&arg_ch, arg_ch);\n        fcn.01014b30(arg_8h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "01014960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint * __cdecl fcn.01014960(uint *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *var_18h;\n    uint32_t var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    piVar2 = fcn.01019fd0();\n    var_18h = *(*piVar2 + 4);\n    var_14h = 0;\n    var_10h = *piVar2;\n    var_4h = var_18h;\n    while (*(var_4h + 0xd) == '\\0') {\n        var_18h = fcn.01014540(var_4h + 4);\n        fcn.01019ff0();\n        cVar1 = fcn.01018f70(var_18h, arg_ch);\n        if (cVar1 == '\\0') {\n            var_10h = var_4h;\n            var_4h = *var_4h;\n        }\n        else {\n            var_4h = var_4h[2];\n        }\n        var_14h = cVar1 == '\\0';\n    }\n    *arg_8h = var_18h;\n    arg_8h[1] = var_14h;\n    arg_8h[2] = var_10h;\n    return arg_8h;\n}\n",
        "token_count": 357
    },
    "01014ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014ab0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046040;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.010143d0(arg_ch, uVar1);\n    fcn.010143d0(arg_ch + 4);\n    fcn.010143d0(arg_ch + 8);\n    fcn.0101c910(arg_8h, arg_ch, 1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 194
    },
    "01014b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01014b30(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *in_FS_OFFSET;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046040;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    arg_ch_00 = fcn.01014540(arg_ch + 0x10);\n    fcn.01015e60(arg_8h, arg_ch_00);\n    fcn.01014ab0(arg_8h, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 167
    },
    "01014dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.01014dd0(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    if (*(arg_8h + 0xd) == '\\0') {\n        arg_ch_00 = fcn.01014540(arg_8h + 0x10);\n        fcn.01019ff0();\n        arg_8h = fcn.01018f70(arg_ch, arg_ch_00);\n        if ((arg_8h & 0xff) == 0) {\n            var_4h = 1;\n            goto code_r0x01014e1e;\n        }\n    }\n    var_4h = 0;\ncode_r0x01014e1e:\n    return arg_8h & 0xffffff00 | var_4h;\n}\n",
        "token_count": 198
    },
    "01015000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01015000(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint arg_8h_00;\n    \n    for (; arg_ch != arg_10h; arg_ch = arg_ch + 0x10) {\n        arg_8h_00 = fcn.01014540(arg_ch);\n        fcn.01016710();\n        fcn.01018560(arg_8h_00);\n        fcn.01016710();\n    }\n    *arg_8h = arg_14h;\n    return arg_8h;\n}\n",
        "token_count": 141
    },
    "01015070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint * __cdecl fcn.01015070(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = fcn.0101e240();\n    if (uVar1 < arg_8h) {\n        fcn.0101ba50();\n    }\n    uVar1 = var_4h[5];\n    uVar4 = arg_8h;\n    iVar2 = fcn.01019530(arg_8h);\n    uVar3 = fcn.01019ff0();\n    arg_8h_00 = iVar2 + 1;\n    var_8h = fcn.0101bf20(arg_8h_00);\n    fcn.01018220(arg_8h_00, uVar4, uVar3);\n    var_4h[4] = arg_8h;\n    var_4h[5] = iVar2;\n    uVar3 = fcn.01014540(var_8h);\n    fcn.01018c20(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 8) {\n        fcn.01014500(var_4h, &var_8h);\n    }\n    else {\n        fcn.0101ca10(*var_4h, uVar1 + 1);\n        *var_4h = var_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 405
    },
    "01015210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint * __cdecl fcn.01015210(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = fcn.0101e240();\n    if (uVar1 < arg_8h) {\n        fcn.0101ba50();\n    }\n    uVar1 = var_4h[5];\n    uVar4 = arg_8h;\n    iVar2 = fcn.01019530(arg_8h);\n    uVar3 = fcn.01019ff0();\n    arg_8h_00 = iVar2 + 1;\n    var_8h = fcn.0101bf20(arg_8h_00);\n    fcn.01018220(arg_8h_00, uVar4, uVar3);\n    var_4h[4] = arg_8h;\n    var_4h[5] = iVar2;\n    arg_10h = arg_10h & 0xffff;\n    uVar3 = fcn.01014540(var_8h);\n    fcn.01018ef0(uVar3, arg_8h, arg_10h);\n    if (uVar1 < 8) {\n        fcn.01014500(var_4h, &var_8h);\n    }\n    else {\n        fcn.0101ca10(*var_4h, uVar1 + 1);\n        *var_4h = var_8h;\n    }\n    return var_4h;\n}\n",
        "token_count": 422
    },
    "010152e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.010152e0(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = in_ECX[4];\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    iVar2 = fcn.0101e240();\n    if (iVar2 - var_ch < arg_8h) {\n        fcn.0101ba50();\n    }\n    iVar2 = var_ch + arg_8h;\n    uVar1 = var_4h[5];\n    iVar3 = fcn.01019530(iVar2);\n    fcn.01019ff0();\n    var_10h = fcn.0101bf20(iVar3 + 1);\n    fcn.01018220();\n    var_4h[4] = iVar2;\n    var_4h[5] = iVar3;\n    arg_8h_01 = fcn.01014540(var_10h);\n    if (uVar1 < 8) {\n        fcn.01018c60(arg_8h_01, var_4h, var_ch, arg_10h, arg_14h, arg_18h & 0xffff);\n        fcn.01014500(var_4h, &var_10h);\n    }\n    else {\n        arg_8h_00 = *var_4h;\n        arg_18h = arg_18h & 0xffff;\n        iVar2 = var_ch;\n        arg_ch_00 = fcn.01014540(arg_8h_00);\n        fcn.01018c60(arg_8h_01, arg_ch_00, iVar2, arg_10h, arg_14h, arg_18h);\n        fcn.0101ca10(arg_8h_00, uVar1 + 1);\n        *var_4h = var_10h;\n    }\n    return var_8h;\n}\n",
        "token_count": 571
    },
    "01015410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01015410(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h_01;\n    uint arg_ch_00;\n    uint *in_ECX;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    var_ch = in_ECX[4];\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    iVar2 = fcn.0101e1e0();\n    if (iVar2 - var_ch < arg_8h) {\n        fcn.0101ba50();\n    }\n    iVar2 = var_ch + arg_8h;\n    uVar1 = var_4h[5];\n    iVar3 = fcn.010194a0(iVar2);\n    fcn.01019ff0();\n    var_10h = fcn.0101be90(iVar3 + 1);\n    fcn.01018220();\n    var_4h[4] = iVar2;\n    var_4h[5] = iVar3;\n    arg_8h_01 = fcn.01014540(var_10h);\n    if (uVar1 < 0x10) {\n        fcn.01018d00(arg_8h_01, var_4h, var_ch, arg_10h, arg_14h, arg_18h);\n        fcn.01014500(var_4h, &var_10h);\n    }\n    else {\n        arg_8h_00 = *var_4h;\n        iVar2 = var_ch;\n        arg_ch_00 = fcn.01014540(arg_8h_00);\n        fcn.01018d00(arg_8h_01, arg_ch_00, iVar2, arg_10h, arg_14h, arg_18h);\n        fcn.0101c9b0(arg_8h_00, uVar1 + 1);\n        *var_4h = var_10h;\n    }\n    return var_8h;\n}\n",
        "token_count": 556
    },
    "01015930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01015930(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint uVar4;\n    uint var_24h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104608d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    var_10h = fcn.01014cd0(&arg_8h);\n    iVar2 = fcn.01014cd0(&arg_ch);\n    uVar3 = arg_10h;\n    uVar4 = arg_14h;\n    fcn.01016670(arg_10h, arg_14h);\n    var_4h = 0;\n    for (; var_10h != iVar2; var_10h = var_10h + 0x10) {\n        uVar3 = fcn.01014540(var_10h);\n        fcn.01014620(uVar3);\n    }\n    uVar3 = fcn.0101b3a0(uVar3, uVar4, uVar1);\n    var_4h = 0xffffffff;\n    fcn.01017e70();\n    *in_FS_OFFSET = var_ch;\n    return uVar3;\n}\n",
        "token_count": 376
    },
    "01015a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015a00(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    uint8_t *puVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint uVar3;\n    uint var_4h;\n    \n    fcn.01018550(0x28, arg_ch);\n    uVar3 = extraout_ECX;\n    uVar1 = fcn.01014540(arg_18h);\n    fcn.01013bd0(uVar1, uVar3);\n    uVar3 = extraout_ECX_00;\n    uVar1 = fcn.01014540(arg_14h);\n    fcn.010171c0(uVar1);\n    puVar2 = fcn.01014540(arg_10h);\n    fcn.01013790(*puVar2, uVar1, uVar3);\n    return;\n}\n",
        "token_count": 222
    },
    "01015a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015a70(uchar *arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    \n    *arg_8h = 3;\n    uVar1 = fcn.01015bd0(arg_ch);\n    *(arg_8h + 8) = uVar1;\n    fcn.01018220();\n    return;\n}\n",
        "token_count": 83
    },
    "01015ae0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015ae0(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.01018550(0x10, arg_ch);\n    arg_8h = fcn.01014540(arg_10h);\n    fcn.01016720(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "01015b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015b10(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_8h;\n    uint var_4h;\n    \n    fcn.01018550(0x18, arg_ch);\n    arg_8h = fcn.01014540(arg_10h);\n    fcn.01016920(arg_8h);\n    return;\n}\n",
        "token_count": 91
    },
    "01015b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01015b40(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.01018550(0x10, arg_ch);\n    fcn.01017000(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "01015b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01015b70(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.01018550(8, arg_ch);\n    fcn.010170a0(uVar1);\n    return;\n}\n",
        "token_count": 85
    },
    "01015ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.01015ba0(uint noname_0, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.01018550(0xc, arg_ch);\n    fcn.010171f0(uVar1);\n    return;\n}\n",
        "token_count": 86
    },
    "01015bd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01015bd0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch_00;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10460bd;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01016710(uVar1);\n    fcn.010164e0(&var_dh);\n    arg_ch_00 = &var_14h;\n    uVar2 = fcn.0101be10(&var_dh, 1);\n    fcn.01013c20(uVar2, arg_ch_00);\n    var_4h = 0;\n    uVar2 = fcn.01014540(arg_8h);\n    arg_ch = fcn.0101c4c0();\n    fcn.01015b10(&var_dh, arg_ch, uVar2);\n    uVar2 = fcn.0101b370();\n    var_4h = 0xffffffff;\n    fcn.01018030();\n    *in_FS_OFFSET = var_ch;\n    return uVar2;\n}\n",
        "token_count": 340
    },
    "01015c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01015c80(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10460ed;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01016710(uVar1);\n    fcn.010164e0(&var_dh);\n    arg_ch = &var_14h;\n    uVar2 = fcn.0101be30(&var_dh, 1);\n    fcn.01013c20(uVar2, arg_ch);\n    var_4h = 0;\n    uVar2 = fcn.0101c4c0();\n    fcn.01015b40(&var_dh, uVar2);\n    uVar2 = fcn.0101b370();\n    var_4h = 0xffffffff;\n    fcn.01018090();\n    *in_FS_OFFSET = var_ch;\n    return uVar2;\n}\n",
        "token_count": 305
    },
    "01015d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01015d20(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104611d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01016710(uVar1);\n    fcn.010164e0(&var_dh);\n    arg_ch = &var_14h;\n    uVar2 = fcn.0101be50(&var_dh, 1);\n    fcn.01013c20(uVar2, arg_ch);\n    var_4h = 0;\n    uVar2 = fcn.0101c4c0();\n    fcn.01015b70(&var_dh, uVar2);\n    uVar2 = fcn.0101b370();\n    var_4h = 0xffffffff;\n    fcn.010180f0();\n    *in_FS_OFFSET = var_ch;\n    return uVar2;\n}\n",
        "token_count": 306
    },
    "01015dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.01015dc0(void)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_ch;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uchar var_dh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104614d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01016710(uVar1);\n    fcn.010164e0(&var_dh);\n    arg_ch = &var_14h;\n    uVar2 = fcn.0101be70(&var_dh, 1);\n    fcn.01013c20(uVar2, arg_ch);\n    var_4h = 0;\n    uVar2 = fcn.0101c4c0();\n    fcn.01015ba0(&var_dh, uVar2);\n    uVar2 = fcn.0101b370();\n    var_4h = 0xffffffff;\n    fcn.01018150();\n    *in_FS_OFFSET = var_ch;\n    return uVar2;\n}\n",
        "token_count": 305
    },
    "01015ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01015ec0(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_ECX + 4) == *(in_ECX + 8)) {\n        uVar1 = fcn.01014540(arg_8h);\n        fcn.010146f0(*(in_ECX + 4), uVar1);\n    }\n    else {\n        uVar1 = fcn.01014540(arg_8h);\n        fcn.01014670(uVar1);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "01015f20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01015f20(int32_t arg_8h)\n\n{\n    return arg_8h + 0x15;\n}\n",
        "token_count": 35
    },
    "01015f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01015f60(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.01014540(arg_ch);\n    fcn.01013c50(arg_8h_00);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "01015fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.01015fe0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint arg_ch_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.010143d0(&arg_ch, &arg_10h);\n    var_8h = fcn.01014ce0(&arg_ch);\n    var_4h = fcn.01014ce0(&arg_10h);\n    fcn.01014cf0(&var_8h, &var_4h);\n    puVar1 = fcn.01014540(&arg_14h);\n    var_ch = *puVar1;\n    arg_ch_00 = fcn.01015000(&var_10h, var_8h, var_4h, var_ch);\n    fcn.01015780(&arg_14h, arg_ch_00);\n    *arg_8h = arg_14h;\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "01016070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01016070(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.01014540(arg_8h);\n    var_8h = *puVar2;\n    var_4h = puVar2[1];\n    puVar2 = fcn.01014540(arg_ch);\n    uVar1 = puVar2[1];\n    *arg_8h = *puVar2;\n    arg_8h[1] = uVar1;\n    puVar2 = fcn.01014540(&var_8h);\n    uVar1 = puVar2[1];\n    *arg_ch = *puVar2;\n    arg_ch[1] = uVar1;\n    return;\n}\n",
        "token_count": 193
    },
    "01016110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01016110(uint arg_8h, uint arg_ch)\n\n{\n    fcn.01015a70(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 41
    },
    "01016130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01016130(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.01014540(arg_ch);\n    fcn.01014370(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 65
    },
    "01016160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01016160(uint arg_8h, int32_t arg_ch)\n\n{\n    fcn.01015aa0(arg_8h, arg_ch, arg_ch >> 0x1f);\n    return;\n}\n",
        "token_count": 52
    },
    "01016180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01016180(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    arg_ch_00 = fcn.01014540(arg_ch);\n    fcn.010143a0(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 66
    },
    "01016720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.01016720(uchar *arg_8h)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uchar *in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.01014540(arg_8h);\n    *in_ECX = *puVar2;\n    puVar3 = fcn.01014540(arg_8h + 8);\n    uVar1 = puVar3[1];\n    *(in_ECX + 8) = *puVar3;\n    *(in_ECX + 0xc) = uVar1;\n    fcn.01018220();\n    *arg_8h = 0;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 0;\n    fcn.01018220();\n    return in_ECX;\n}\n",
        "token_count": 216
    },
    "010167f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.010167f0(uint arg_8h)\n\n{\n    uint8_t *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = arg_8h;\n    fcn.01017840(arg_8h);\n    fcn.01018220();\n    return in_ECX;\n}\n",
        "token_count": 76
    },
    "01016820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.01016820(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    uVar1 = fcn.01019ff0();\n    uVar1 = fcn.01014540(uVar1);\n    fcn.01013860(var_2h, uVar1);\n    fcn.010193f0(&var_3h);\n    var_2h._1_1_ = 0;\n    fcn.0101b4b0(arg_8h);\n    return in_ECX;\n}\n",
        "token_count": 171
    },
    "01016880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01016880(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h;\n    uint8_t var_fh [3];\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1045f7d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01019ff0(uVar1);\n    arg_ch = fcn.01014540(var_fh + 1);\n    fcn.01013860(var_fh[0], arg_ch);\n    var_4h = 0;\n    fcn.01017240(&var_10h, in_ECX);\n    fcn.01019750(arg_8h);\n    fcn.01018220();\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 262
    },
    "01016a40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __cdecl fcn.01016a40(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uint32_t var_28h;\n    uint *var_24h;\n    uint32_t var_20h;\n    uint *var_1ch;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uint var_14h;\n    uchar var_10h;\n    uchar var_fh [3];\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104620d;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    uVar3 = fcn.01019ff0(uVar2);\n    fcn.01013860(var_14h, uVar3);\n    var_4h = 0;\n    var_1ch = var_24h;\n    var_2ch = arg_ch;\n    var_30h = arg_10h;\n    fcn.01018220();\n    fcn.01018220();\n    var_20h = *(var_2ch + 0x10);\n    var_28h = *(var_30h + 0x10);\n    var_3ch = *(var_2ch + 0x14);\n    var_40h = *(var_30h + 0x14);\n    var_34h = var_20h + var_28h;\n    var_fh[0] = var_28h <= var_3ch - var_20h;\n    var_fh[2] = var_fh[0];\n    if ((var_fh[0]) && (var_40h <= var_3ch)) {\n        fcn.010193f0(&var_15h);\n        var_10h = 0;\n        uVar3 = 0;\n        fcn.0101b4b0(arg_ch);\n        iVar4 = fcn.0101b040(arg_ch, uVar3);\n        iVar5 = var_28h + 1;\n        uVar3 = fcn.0101b040();\n        fcn.0101c710(iVar4 + var_20h, uVar3, iVar5);\n        var_1ch[4] = var_34h;\n    }\n    else {\n        var_14h._3_1_ = var_20h <= var_40h - var_28h;\n        var_fh[1] = var_14h._3_1_;\n        uVar3 = fcn.01019ff0();\n        uVar3 = fcn.01019ff0(uVar3);\n        cVar1 = fcn.01014490(uVar3);\n        if ((cVar1 == '\\0') || (var_14h._3_1_ == '\\0')) {\n            var_44h = fcn.0101e1e0();\n            if (var_44h - var_20h < var_28h) {\n                fcn.0101ba50();\n            }\n            var_48h = fcn.010194d0(var_34h, 0xf, var_44h);\n            fcn.01017240(&var_17h, var_1ch);\n            iVar4 = var_48h + 1;\n            fcn.01019ff0();\n            var_4ch = fcn.0101be90(iVar4);\n            fcn.01014500(var_1ch, &var_4ch);\n            var_1ch[4] = var_34h;\n            var_1ch[5] = var_48h;\n            iVar4 = fcn.01014540(var_4ch);\n            uVar2 = var_20h;\n            uVar3 = fcn.0101b040();\n            fcn.0101c710(iVar4, uVar3, uVar2);\n            iVar5 = var_28h + 1;\n            uVar3 = fcn.0101b040();\n            fcn.0101c710(iVar4 + var_20h, uVar3, iVar5);\n            fcn.01018220();\n        }\n        else {\n            fcn.010193f0(&var_16h);\n            var_14h._2_1_ = 0;\n            uVar3 = 0;\n            fcn.0101b4b0(arg_10h);\n            var_38h = fcn.01014540(*var_1ch);\n            fcn.0101e3a0(var_38h + var_20h, var_38h, var_28h + 1);\n            uVar2 = var_20h;\n            uVar3 = fcn.0101b040(var_20h, arg_10h, uVar3);\n            fcn.0101c710(var_38h, uVar3, uVar2);\n            var_1ch[4] = var_34h;\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    return var_24h;\n}\n",
        "token_count": 1300
    },
    "01016d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01016d00(uint noname_0, uint arg_ch, uint arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uchar var_11h;\n    uint8_t var_10h;\n    uchar var_fh [3];\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104623d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01019ff0(uVar1);\n    uVar2 = fcn.01014540(var_fh);\n    fcn.01013860(var_10h, uVar2);\n    var_4h = 0;\n    var_28h = arg_14h + arg_1ch;\n    var_20h = 0xf;\n    var_18h = var_1ch;\n    var_24h = var_1ch;\n    fcn.01017240(&var_11h, var_1ch);\n    if (var_20h < var_28h) {\n        uVar2 = fcn.0101e1e0();\n        var_20h = fcn.010194d0(var_28h, 0xf, uVar2);\n        arg_8h = var_20h + 1;\n        fcn.01019ff0();\n        var_2ch = fcn.0101be90(arg_8h);\n        var_24h = fcn.01014540(var_2ch);\n        fcn.01014500(var_18h, &var_2ch);\n    }\n    *(var_18h + 0x10) = var_28h;\n    *(var_18h + 0x14) = var_20h;\n    fcn.0101c710(var_24h, arg_10h, arg_14h);\n    fcn.0101c710(var_24h + arg_14h, arg_18h, arg_1ch);\n    var_fh[2] = 0;\n    fcn.0101c110(var_24h + var_28h, var_fh + 2);\n    fcn.01018220();\n    *in_FS_OFFSET = var_ch;\n    return var_1ch;\n}\n",
        "token_count": 642
    },
    "010175f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.010175f0(code *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    code **in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104637d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01017780(uVar1);\n    var_4h = 0;\n    *in_ECX = vtable.nlohmann::detail::exception.0;\n    in_ECX[3] = arg_8h;\n    fcn.01017ab0(arg_ch);\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 213
    },
    "01017670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __cdecl fcn.01017670(int32_t arg_8h)\n\n{\n    code **in_ECX;\n    uint var_4h;\n    \n    fcn.010176c0(arg_8h);\n    *in_ECX = vtable.nlohmann::detail::exception.0;\n    in_ECX[3] = *(arg_8h + 0xc);\n    fcn.01017a50(arg_8h + 0x10);\n    return in_ECX;\n}\n",
        "token_count": 109
    },
    "01017e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017e70(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.010145b0(*param_1, param_1[1], param_1[2]);\n    return;\n}\n",
        "token_count": 55
    },
    "01017ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01017ec0(uint8_t *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.01018220();\n    fcn.0101ca70(*param_1);\n    return;\n}\n",
        "token_count": 53
    },
    "010183b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.010183b0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.01018370(param_1);\n    fcn.010183d0();\n    return;\n}\n",
        "token_count": 65
    },
    "01018560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01018560(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.01014540(arg_8h);\n    fcn.0101e600(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "01018590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01018590(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.01018220();\n    fcn.010160d0(in_ECX, &arg_8h);\n    fcn.01016070(in_ECX + 8, &arg_10h);\n    fcn.01018220();\n    fcn.01017ec0();\n    return in_ECX;\n}\n",
        "token_count": 124
    },
    "010185f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.010185f0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar1 = fcn.01014540(arg_8h);\n    if (in_ECX != iVar1) {\n        fcn.0101aff0(arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 114
    },
    "01018690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __fastcall fcn.01018690(int32_t *param_1)\n\n{\n    char cVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t arg_1ch;\n    int32_t arg_18h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint32_t *var_12h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046485;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack104 = *0x1078124 ^ &stack0xfffffffc;\n    *0x10 = &uStack104;\n    *in_FS_OFFSET = &var_ch_2;\n    var_1ch = 0;\n    var_18h = param_1;\n    fcn.01017ae0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.01018b30();\n    if (cVar1 != '\\0') {\n        var_24h = fcn.0101dd70(&var_44h);\n        var_4h._0_1_ = 1;\n        var_20h = var_24h;\n        var_2ch = fcn.010162c0(var_24h);\n        var_4h._0_1_ = 0;\n        fcn.01018440();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        var_12h._0_2_ = fcn.0101dc80();\n        arg_8h = fcn.0101e6b0();\n        arg_1ch = var_12h;\n        arg_18h = var_18h + *(*var_18h + 4);\n        var_28h = arg_8h;\n        puVar2 = fcn.010171a0(arg_8h);\n        var_30h = fcn.0101e630(&var_54h, *puVar2, puVar2[1], arg_8h, arg_18h, arg_1ch);\n        cVar1 = fcn.0101dc30();\n        if (cVar1 != '\\0') {\n            var_1ch = var_1ch | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.0101e7b0(var_1ch, 0);\n    var_34h = var_18h;\n    var_4h = 0xffffffff;\n    fcn.010184b0();\n    *in_FS_OFFSET = var_ch_2;\n    return var_34h;\n}\n",
        "token_count": 730
    },
    "01018820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.01018820(int32_t *param_1, uint param_2)\n\n{\n    char cVar1;\n    uint arg_8h;\n    uint *puVar2;\n    uint32_t arg_1ch;\n    int32_t arg_18h;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch_3;\n    uint var_10h;\n    uint var_ch;\n    uint32_t uStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    int32_t *var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t *var_18h;\n    uint32_t *var_12h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10464c5;\n    var_ch_2 = *in_FS_OFFSET;\n    uStack104 = *0x1078124 ^ &stack0xfffffffc;\n    *0x10 = &uStack104;\n    *in_FS_OFFSET = &var_ch_2;\n    var_1ch = 0;\n    var_18h = param_1;\n    fcn.01017ae0(param_1);\n    var_4h = 0;\n    cVar1 = fcn.01018b30();\n    if (cVar1 != '\\0') {\n        var_24h = fcn.0101dd70(&var_44h);\n        var_4h._0_1_ = 1;\n        var_20h = var_24h;\n        var_2ch = fcn.010162c0(var_24h);\n        var_4h._0_1_ = 0;\n        fcn.01018440();\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        var_12h._0_2_ = fcn.0101dc80();\n        arg_8h = fcn.0101e6b0();\n        arg_1ch = var_12h;\n        arg_18h = var_18h + *(*var_18h + 4);\n        var_28h = arg_8h;\n        puVar2 = fcn.010171a0(arg_8h);\n        var_30h = fcn.0101e670(&var_54h, *puVar2, puVar2[1], arg_8h, arg_18h, arg_1ch, var_8h);\n        cVar1 = fcn.0101dc30();\n        if (cVar1 != '\\0') {\n            var_1ch = var_1ch | 4;\n        }\n        var_4h = 0;\n    }\n    fcn.0101e7b0(var_1ch, 0);\n    var_34h = var_18h;\n    var_4h = 0xffffffff;\n    fcn.010184b0();\n    *in_FS_OFFSET = var_ch_2;\n    return var_34h;\n}\n",
        "token_count": 749
    },
    "01018a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01018a70(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.0101b040();\n    return iVar1 + arg_8h;\n}\n",
        "token_count": 60
    },
    "01018ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.01018ab0(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t *piVar1;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_ch = fcn.01014540(arg_8h);\n    piVar1 = fcn.010157f0(&var_ch, arg_ch);\n    return *piVar1 + 0x28;\n}\n",
        "token_count": 94
    },
    "01018b50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.01018b50(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    return *param_1 + 0x10;\n}\n",
        "token_count": 43
    },
    "01018b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.01018b90(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(*param_1 + 8) + 0xd) == '\\0') {\n        iVar1 = fcn.0101afd0(*(*param_1 + 8));\n        *param_1 = iVar1;\n    }\n    else {\n        while ((iVar1 = *(*param_1 + 4),  *(iVar1 + 0xd) == '\\0' && (*param_1 == *(iVar1 + 8)))) {\n            *param_1 = iVar1;\n        }\n        *param_1 = iVar1;\n    }\n    return param_1;\n}\n",
        "token_count": 171
    },
    "01018c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01018c20(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    fcn.0101c730(arg_8h, arg_10h, arg_ch);\n    var_2h._0_2_ = 0;\n    fcn.0101c140(arg_8h + arg_ch * 2, &var_2h);\n    return;\n}\n",
        "token_count": 137
    },
    "01018c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.01018c60(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0101c730(arg_8h, arg_ch, arg_14h);\n    fcn.0101c120(arg_8h + arg_14h * 2, arg_18h, arg_1ch & 0xffff);\n    fcn.0101c730(arg_8h + arg_14h * 2 + arg_18h * 2, arg_ch + arg_14h * 2, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 181
    },
    "01018cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01018cd0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.0101c930(*in_ECX, arg_8h, 1);\n    return;\n}\n",
        "token_count": 58
    },
    "01018d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.01018d00(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0101c710(arg_8h, arg_ch, arg_14h);\n    fcn.0101c710(arg_8h + arg_14h, arg_18h, arg_1ch);\n    fcn.0101c710(arg_8h + arg_14h + arg_1ch, arg_ch + arg_14h, (arg_10h - arg_14h) + 1);\n    return;\n}\n",
        "token_count": 163
    },
    "01018d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01018d60(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.0101c990(*in_ECX, arg_8h, 1);\n    return;\n}\n",
        "token_count": 58
    },
    "01018d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01018d90(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0101c710(arg_8h, arg_10h, arg_ch);\n    var_1h._0_1_ = 0;\n    fcn.0101c110(arg_8h + arg_ch, &var_1h);\n    return;\n}\n",
        "token_count": 134
    },
    "01018dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01018dd0(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.0101c950(*in_ECX, arg_8h, 1);\n    return;\n}\n",
        "token_count": 58
    },
    "01018e00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01018e00(uint arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    fcn.0101c970(*in_ECX, arg_8h, 1);\n    return;\n}\n",
        "token_count": 58
    },
    "01018e30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01018e30(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0101c710(arg_8h, arg_ch, arg_10h);\n    fcn.0101c710(arg_8h + arg_10h, arg_14h, arg_18h);\n    var_1h._0_1_ = 0;\n    fcn.0101c110(arg_10h + arg_18h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 183
    },
    "01018e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.01018e90(int32_t arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0101c710(arg_8h, arg_ch, arg_10h);\n    fcn.0101c0f0(arg_8h + arg_10h, arg_14h, arg_18h & 0xff);\n    var_1h._0_1_ = 0;\n    fcn.0101c110(arg_10h + arg_14h + arg_8h, &var_1h);\n    return;\n}\n",
        "token_count": 191
    },
    "01019380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.01019380(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_ch = *arg_ch + 0x23;\n    iVar1 = *(*arg_8h + -4);\n    uVar2 = *arg_8h - iVar1;\n    if ((uVar2 < 4) || (0x23 < uVar2)) {\n        fcn.01025c3a(4);\n    }\n    *arg_8h = iVar1;\n    return;\n}\n",
        "token_count": 175
    },
    "01019400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_2h\n\nvoid __fastcall fcn.01019400(uint param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puVar1 = fcn.01019fd0();\n    fcn.01017240(&var_2h, puVar1, &var_2h, puVar1, param_1);\n    uVar2 = fcn.01019ff0();\n    uVar2 = fcn.010144a0(uVar2);\n    *puVar1 = uVar2;\n    fcn.01018220();\n    return;\n}\n",
        "token_count": 213
    },
    "010194a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010194a0(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.0101e1e0();\n    fcn.010194d0(arg_8h, *(in_ECX + 0x14), arg_10h);\n    return;\n}\n",
        "token_count": 89
    },
    "01019530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019530(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.0101e240();\n    fcn.01019560(arg_8h, *(in_ECX + 0x14), arg_10h);\n    return;\n}\n",
        "token_count": 85
    },
    "01019710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019710(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    uint var_4h;\n    \n    if (arg_8h != arg_ch) {\n        arg_ch_00 = fcn.01014540(arg_ch - arg_8h);\n        fcn.0101c190(arg_8h, arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "01019870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01019870(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.01019ff0();\n    fcn.010143d0(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 72
    },
    "010198a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010198a0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_10h;\n    uint var_4h;\n    \n    arg_10h = fcn.01019ff0();\n    fcn.010145b0(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 76
    },
    "01019fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01019fd0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.01014540(param_1);\n    return;\n}\n",
        "token_count": 40
    },
    "0101a620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101a620(uint arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t *in_FS_OFFSET;\n    uint uStack188;\n    uint in_stack_ffffff48;\n    uint uVar6;\n    uint var_78h;\n    int32_t var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_3ch;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x104664d;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0101a620::var_ch;\n    var_74h = fcn.0101a410();\n    fcn.0101a330(&fcn.0101a620::var_3ch);\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    var_4h = 0;\n    if (arg_ch == '\\0') {\n        var_70h = *(var_74h + 8);\n    }\n    else {\n        var_70h = 0x1068200;\n    }\n    fcn.0101a330(&fcn.0101a620::var_68h);\n    uVar2 = fcn.01014e70(var_70h);\n    *(in_ECX + 8) = uVar2;\n    puVar4 = &fcn.0101a620::var_3ch;\n    uVar6 = 0;\n    uVar2 = fcn.0101a400();\n    uVar2 = fcn.01014ee0(uVar2, uVar6, puVar4);\n    *(in_ECX + 0x10) = uVar2;\n    puVar4 = &fcn.0101a620::var_3ch;\n    uVar6 = 0;\n    uVar2 = fcn.0101a420();\n    uVar2 = fcn.01014ee0(uVar2, uVar6, puVar4);\n    *(in_ECX + 0x14) = uVar2;\n    if (arg_ch == '\\0') {\n        puVar4 = &fcn.0101a620::var_3ch;\n        puVar5 = &stack0xffffff44;\n        for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        fcn.0101a430(0, var_74h);\n    }\n    else {\n        uVar1 = fcn.01014e30(0x2e, 0, &fcn.0101a620::var_3ch);\n        *(in_ECX + 0xc) = uVar1;\n        uVar1 = fcn.01014e30(0x2c, 0, &fcn.0101a620::var_3ch);\n        *(in_ECX + 0xe) = uVar1;\n    }\n    var_4h = 0xffffffff;\n    fcn.01017d60();\n    *in_FS_OFFSET = var_ch;\n    uStack188 = 0x101a786;\n    fcn.01021495(in_stack_ffffff48);\n    return;\n}\n",
        "token_count": 855
    },
    "0101af90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101af90(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint in_ECX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01014540(in_ECX);\n    uVar2 = fcn.01014540(arg_8h);\n    fcn.01022fe0(uVar1, uVar2, 0x18);\n    return;\n}\n",
        "token_count": 112
    },
    "0101aff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0101aff0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint noname_0;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0101b810();\n    arg_ch = fcn.01019ff0();\n    noname_0 = fcn.01019ff0();\n    fcn.01015050(noname_0, arg_ch);\n    fcn.0101b4e0(arg_8h);\n    return;\n}\n",
        "token_count": 130
    },
    "0101b280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0101b280(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1046740;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    iVar1 = param_1[1];\n    iVar2 = *param_1;\n    uVar3 = var_8h;\n    fcn.01019ff0();\n    uVar3 = fcn.0101bef0(uVar3);\n    var_4h = 0;\n    fcn.0101b9b0(*param_1, param_1[1], uVar3);\n    var_4h = 0xffffffff;\n    fcn.01019620(uVar3, iVar1 - iVar2 >> 4, var_8h);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 322
    },
    "0101b370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101b370(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.01015f30(param_1 + 4, &var_4h);\n    return;\n}\n",
        "token_count": 68
    },
    "0101b810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.0101b810(uint *param_1)\n\n{\n    uint arg_8h;\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    ushort var_eh;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046780;\n    var_ch = *in_FS_OFFSET;\n    uVar2 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01018220(uVar2);\n    cVar1 = fcn.0101adf0();\n    if (cVar1 != '\\0') {\n        arg_8h = *param_1;\n        uVar3 = fcn.01019ff0();\n        fcn.010143d0(param_1, uVar2, uVar3);\n        fcn.0101ca10(arg_8h, param_1[5] + 1);\n    }\n    param_1[4] = 0;\n    param_1[5] = 7;\n    var_eh = 0;\n    fcn.0101c140(param_1, &var_eh);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 339
    },
    "0101b910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0101b910(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_2h;\n    \n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 7;\n    var_2h._0_2_ = 0;\n    fcn.0101c140(param_1, &var_2h);\n    return;\n}\n",
        "token_count": 126
    },
    "0101b950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b950(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.01019ff0();\n    fcn.01015930(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 86
    },
    "0101b980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101b980(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = fcn.01019ff0();\n    fcn.01015930(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 86
    },
    "0101ba30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101ba30(uint *param_1)\n\n{\n    uint var_4h;\n    \n    fcn.01014540(*param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "0101be10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101be10(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.01014c40(arg_ch);\n    fcn.010143e0(arg_8h);\n    return;\n}\n",
        "token_count": 63
    },
    "0101be30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101be30(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.01014c10(arg_ch);\n    fcn.010143e0(arg_8h);\n    return;\n}\n",
        "token_count": 63
    },
    "0101be50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101be50(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.01014be0(arg_ch);\n    fcn.010143e0(arg_8h);\n    return;\n}\n",
        "token_count": 63
    },
    "0101be70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101be70(uint noname_0, uint arg_ch)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.01014ca0(arg_ch);\n    fcn.010143e0(arg_8h);\n    return;\n}\n",
        "token_count": 63
    },
    "0101bec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101bec0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.01014c70(arg_8h);\n    fcn.010143e0(arg_8h_00);\n    return;\n}\n",
        "token_count": 74
    },
    "0101bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101bef0(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.01014c10(arg_8h);\n    fcn.010143e0(arg_8h_00);\n    return;\n}\n",
        "token_count": 74
    },
    "0101c210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101c210(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.01014540(arg_8h);\n    fcn.010185f0(arg_8h_00);\n    return in_ECX;\n}\n",
        "token_count": 82
    },
    "0101c240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0101c240(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    if (arg_8h < *(in_ECX + 0x14) || arg_8h == *(in_ECX + 0x14)) {\n        arg_8h_00 = fcn.0101b080();\n        *(in_ECX + 0x10) = arg_8h;\n        fcn.0101c120(arg_8h_00, arg_8h, arg_ch & 0xffff);\n        var_4h = 0;\n        fcn.0101c140(arg_8h_00 + arg_8h * 2, &var_4h);\n    }\n    else {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.01015210(arg_8h, 0, arg_ch & 0xffff);\n    }\n    return in_ECX;\n}\n",
        "token_count": 287
    },
    "0101c2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c2c0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0101e120(arg_8h);\n    uVar1 = fcn.01014540(uVar1);\n    fcn.0101c2f0(arg_8h, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "0101c2f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0101c2f0(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t in_ECX;\n    uint var_ch;\n    uint var_8h;\n    ushort var_4h;\n    uint var_1h;\n    \n    if (arg_ch < *(in_ECX + 0x14) || arg_ch == *(in_ECX + 0x14)) {\n        arg_8h_00 = fcn.0101b080();\n        *(in_ECX + 0x10) = arg_ch;\n        fcn.0101e3c0(arg_8h_00, arg_8h, arg_ch);\n        var_4h = 0;\n        fcn.0101c140(arg_8h_00 + arg_ch * 2, &var_4h);\n    }\n    else {\n        var_1h._0_1_ = 0;\n        in_ECX = fcn.01015070(arg_ch, 0, arg_8h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 273
    },
    "0101c370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0101c370(int32_t param_1)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    return *(param_1 + 4) + -0x10;\n}\n",
        "token_count": 53
    },
    "0101c3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101c3a0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.01014540(in_ECX);\n    fcn.01016620(*in_ECX, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 84
    },
    "0101c590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101c590(uint *param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046780;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.01018220(uVar1);\n    fcn.010198a0(*param_1, param_1[1]);\n    param_1[1] = *param_1;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 197
    },
    "0101c6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c6d0(int32_t arg_8h)\n\n{\n    uint arg_10h;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch;\n    uint arg_14h;\n    uint var_4h;\n    \n    arg_14h = *(arg_8h + 0x10);\n    arg_10h = fcn.0101b040();\n    arg_ch = *(in_ECX + 0x10);\n    arg_8h_00 = fcn.0101b040();\n    fcn.01015790(arg_8h_00, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 158
    },
    "0101c710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101c710(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01022fe0(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 57
    },
    "0101c750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0101c750(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    char *pcVar3;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10467bd;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    pcVar3 = \"other_error\";\n    var_10h = uVar1;\n    fcn.01016920(\"other_error\");\n    var_4h = 0;\n    uVar2 = fcn.0101e3f0(&var_58h, &var_28h, arg_ch);\n    var_4h._0_1_ = 1;\n    fcn.010141f0(&var_40h, uVar2, arg_10h);\n    var_4h._0_1_ = 3;\n    fcn.01017ef0(pcVar3, uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    fcn.01017ef0();\n    uVar2 = fcn.0101c410();\n    fcn.010179f0(arg_ch, uVar2);\n    var_4h = 0xffffffff;\n    fcn.01017ef0();\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(uVar2);\n    return;\n}\n",
        "token_count": 434
    },
    "0101c830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0101c830(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    char *pcVar3;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10467bd;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    pcVar3 = \"type_error\";\n    var_10h = uVar1;\n    fcn.01016920(\"type_error\");\n    var_4h = 0;\n    uVar2 = fcn.0101e3f0(&var_58h, &var_28h, arg_ch);\n    var_4h._0_1_ = 1;\n    fcn.010141f0(&var_40h, uVar2, arg_10h);\n    var_4h._0_1_ = 3;\n    fcn.01017ef0(pcVar3, uVar1);\n    var_4h = CONCAT31(var_4h._1_3_, 4);\n    fcn.01017ef0();\n    uVar2 = fcn.0101c410();\n    fcn.01017c60(arg_ch, uVar2);\n    var_4h = 0xffffffff;\n    fcn.01017ef0();\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(uVar2);\n    return;\n}\n",
        "token_count": 434
    },
    "0101c910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c910(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01014550(arg_ch, arg_10h * 0x38);\n    return;\n}\n",
        "token_count": 54
    },
    "0101c930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c930(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01014550(arg_ch, arg_10h * 0x18);\n    return;\n}\n",
        "token_count": 54
    },
    "0101c950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c950(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01014550(arg_ch, arg_10h << 4);\n    return;\n}\n",
        "token_count": 52
    },
    "0101c990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c990(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    fcn.01014550(arg_ch, arg_10h * 0xc);\n    return;\n}\n",
        "token_count": 53
    },
    "0101c9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c9d0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.01014550(arg_8h, arg_ch * 0x38);\n    return;\n}\n",
        "token_count": 58
    },
    "0101c9f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101c9f0(uint arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.01014550(arg_8h, arg_ch << 4);\n    return;\n}\n",
        "token_count": 56
    },
    "0101db20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101db20(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch = fcn.01014540(in_ECX);\n    fcn.01016620(*(in_ECX + 4), arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 86
    },
    "0101dbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101dbf0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint *arg_ch_00;\n    uint var_ch;\n    uint var_4h;\n    \n    arg_ch_00 = &var_ch;\n    arg_8h_00 = (**(*in_ECX + 0xc))(arg_ch_00, arg_8h, arg_ch);\n    fcn.010189e0(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 127
    },
    "0101de20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101de20(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0101e100(arg_ch);\n    uVar1 = fcn.01014540(uVar1);\n    fcn.0101de60(arg_8h, arg_ch, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "0101de60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0101de60(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.010196f0(arg_8h);\n    iVar1 = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - iVar1 < arg_10h) {\n        in_ECX = fcn.01015410(arg_10h, 0, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        *(in_ECX + 0x10) = iVar1 + arg_10h;\n        iVar2 = fcn.0101b040();\n        arg_ch_00 = iVar2 + arg_8h;\n        if ((arg_ch_00 < arg_ch + arg_10h) && (arg_ch <= iVar2 + iVar1)) {\n            if (arg_ch < arg_ch_00) {\n                var_10h = arg_ch_00 - arg_ch;\n            }\n            else {\n                var_10h = 0;\n            }\n        }\n        else {\n            var_10h = arg_10h;\n        }\n        fcn.0101e3a0(arg_ch_00 + arg_10h, arg_ch_00, (iVar1 - arg_8h) + 1);\n        fcn.0101c710(arg_ch_00, arg_ch, var_10h);\n        fcn.0101c710(arg_ch_00 + var_10h, arg_ch + arg_10h + var_10h, arg_10h - var_10h);\n    }\n    return in_ECX;\n}\n",
        "token_count": 455
    },
    "0101df70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0101df70(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.010196f0(arg_8h);\n    iVar1 = *(in_ECX + 0x10);\n    if (*(in_ECX + 0x14) - iVar1 < arg_ch) {\n        in_ECX = fcn.010152e0(arg_ch, 0, arg_8h, arg_ch, arg_10h & 0xffff);\n    }\n    else {\n        *(in_ECX + 0x10) = iVar1 + arg_ch;\n        iVar2 = fcn.0101b080();\n        iVar2 = iVar2 + arg_8h * 2;\n        fcn.0101e3c0(iVar2 + arg_ch * 2, iVar2, (iVar1 - arg_8h) + 1);\n        fcn.0101c120(iVar2, arg_ch, arg_10h & 0xffff);\n    }\n    return in_ECX;\n}\n",
        "token_count": 309
    },
    "0101e120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e120(uint arg_8h)\n\n{\n    fcn.01025dd3(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "0101e1a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0101e1a0(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01019ff0();\n    var_8h = fcn.0101e180(uVar1);\n    var_ch = fcn.0101e160();\n    puVar2 = fcn.01015fb0(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 119
    },
    "0101e240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0101e240(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01019ff0();\n    var_ch = fcn.0101e160(uVar1);\n    var_8h = 8;\n    piVar2 = fcn.01015f80(&var_ch, &var_8h);\n    var_10h = *piVar2;\n    var_14h = var_10h + -1;\n    var_18h = fcn.0101e160();\n    puVar3 = fcn.01015fb0(&var_18h, &var_14h);\n    return *puVar3;\n}\n",
        "token_count": 209
    },
    "0101e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0101e2a0(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01019ff0();\n    var_8h = fcn.0101e190(uVar1);\n    var_ch = fcn.0101e160();\n    puVar2 = fcn.01015fb0(&var_ch, &var_8h);\n    return *puVar2;\n}\n",
        "token_count": 119
    },
    "0101e3a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101e3a0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.01023560(arg_8h, arg_ch, arg_10h);\n    return arg_8h;\n}\n",
        "token_count": 58
    },
    "0101e3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_94h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0101e3f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_10h_00;\n    uint arg_10h_01;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_58h;\n    uint var_40h;\n    uint var_28h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x10468f5;\n    var_ch = *in_FS_OFFSET;\n    var_10h = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    arg_10h_01 = 0x1068360;\n    uVar1 = fcn.0101e950(&var_70h, arg_10h);\n    var_4h = 0;\n    arg_10h_00 = 0x1068364;\n    uVar2 = fcn.010142b0(&var_58h, \"[json.exception.\", arg_ch);\n    var_4h._0_1_ = 1;\n    uVar2 = fcn.01014230(&var_40h, uVar2, arg_10h_00);\n    var_4h._0_1_ = 2;\n    uVar1 = fcn.010141b0(&var_28h, uVar2, uVar1);\n    var_4h._0_1_ = 3;\n    fcn.01014230(arg_8h, uVar1, arg_10h_01);\n    var_4h._0_1_ = 2;\n    fcn.01017ef0();\n    var_4h._0_1_ = 1;\n    fcn.01017ef0();\n    var_4h = var_4h._1_3_ << 8;\n    fcn.01017ef0();\n    var_4h = 0xffffffff;\n    fcn.01017ef0();\n    *in_FS_OFFSET = var_ch;\n    fcn.01021495(uVar1);\n    return;\n}\n",
        "token_count": 602
    },
    "0101e540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101e540(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_ch;\n    uint noname_0;\n    int32_t *piVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x1046450;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    piVar2 = param_1 + 4;\n    arg_ch = fcn.01014540(*piVar2 + -0x10);\n    noname_0 = fcn.01019ff0(arg_ch, uVar1);\n    fcn.01015e70(noname_0, arg_ch);\n    *piVar2 = *piVar2 + -0x10;\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 253
    },
    "0101e600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101e600(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.01014540(arg_8h);\n    fcn.01015ec0(arg_8h_00);\n    return;\n}\n",
        "token_count": 73
    },
    "0101e950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0101e950(uint arg_8h, uint arg_ch)\n\n{\n    uint var_4h;\n    \n    fcn.01014d20(arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 54
    },
    "0101ec10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101ec10(uint arg_8h)\n\n{\n    uint in_stack_00000008;\n    \n    fcn.0102619a(arg_8h, in_stack_00000008);\n    return;\n}\n",
        "token_count": 52
    },
    "0101ec30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0101ec30(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    fcn.010261e1(arg_8h, noname_1, arg_10h);\n    return;\n}\n",
        "token_count": 57
    },
    "01022026": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01022036)\n// WARNING: Removing unreachable block (ram,0x01022037)\n// WARNING: Removing unreachable block (ram,0x0102203d)\n// WARNING: Removing unreachable block (ram,0x01022047)\n// WARNING: Removing unreachable block (ram,0x0102204e)\n\nvoid fcn.01022026(void)\n\n{\n    return;\n}\n",
        "token_count": 92
    },
    "01022052": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x01022062)\n// WARNING: Removing unreachable block (ram,0x01022063)\n// WARNING: Removing unreachable block (ram,0x01022069)\n// WARNING: Removing unreachable block (ram,0x01022073)\n// WARNING: Removing unreachable block (ram,0x0102207a)\n\nvoid fcn.01022052(void)\n\n{\n    return;\n}\n",
        "token_count": 91
    },
    "0102739e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0102739e(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = 0;\n    iVar4 = 0;\n    do {\n        uVar1 = *arg_8h;\n        uVar2 = uVar1;\n        if ((uVar1 != *(L\"IND)ind)\u6363s\u5455\u2d468\" + iVar4)) && (uVar1 != *(L\"IND)ind)\u6363s\u5455\u2d468\" + iVar4 + 8)))\n        goto code_r0x010273d7;\n        uVar2 = fcn.0102ac58();\n        iVar4 = iVar4 + 2;\n        *arg_8h = uVar2;\n    } while (iVar4 != 8);\n    uVar3 = 1;\ncode_r0x010273d7:\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 243
    },
    "0102741e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0102741e(uint32_t arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (9 < arg_8h) {\n        return 1;\n    }\n    // switch table (10 cases) at 0x1027562\n    switch(*(arg_8h * 4 + 0x1027562)) {\n    case 0x1027437:\n        uVar2 = fcn.010263c9(arg_ch, arg_10h);\n        break;\n    case 0x1027449:\n        uVar2 = fcn.0102640b(arg_ch, arg_10h);\n        break;\n    case 0x1027456:\n        uVar1 = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        goto code_r0x0102746d;\n    case 0x1027479:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n        goto code_r0x010274a4;\n    case 0x10274a8:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7fffffff;\ncode_r0x0102746d:\n        *arg_10h = uVar1;\ncode_r0x01027472:\n        uVar2 = 0;\n        break;\n    case 0x10274c5:\n        uVar1 = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000 | 1;\ncode_r0x010274a4:\n        *arg_10h = uVar1;\n        goto code_r0x01027472;\n    case 0x10274f5:\n        *arg_10h = 0xffc00000;\n        goto code_r0x01027472;\n    case 0x1027503:\n        *arg_10h = 0;\n        return 1;\n    case 0x102750f:\n        uVar2 = 2;\n        *arg_10h = -(*(arg_ch + 0x308) != '\\0') & 0x80000000;\n        break;\n    case 0x1027530:\n        uVar2 = 3;\n        *arg_10h = ((*(arg_ch + 0x308) == '\\0') - 1 & 0x80000000) + 0x7f800000 | *arg_10h & 0x7f800000;\n    }\n    return uVar2;\n}\n",
        "token_count": 657
    },
    "0102cecd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0102cecd(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    \n    arg_8h = param_1 + 0x28;\n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.0102cc4b(arg_8h);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar1;\n    if (iVar1 < 0) {\n        *arg_8h = -1;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 192
    },
    "0102d273": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0102d273(int32_t param_1)\n\n{\n    int32_t *arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    \n    arg_8h = param_1 + 0x24;\n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.0102cc4b(arg_8h);\n        return uVar1;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar2 = *(*(param_1 + 0x14) + -4);\n    *arg_8h = iVar2;\n    if (iVar2 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        iVar2 = -iVar2;\n        *arg_8h = iVar2;\n    }\n    return CONCAT31(iVar2 >> 8, 1);\n}\n",
        "token_count": 226
    },
    "0102de1d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0102de1d(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0102dddc();\n    iVar1 = fcn.0102de5c(in_ECX + 8, arg_8h * 2);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "0102e369": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102e369(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x2081838);\n    return;\n}\n",
        "token_count": 49
    },
    "0102e3b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102e3b1(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x2081838);\n    return;\n}\n",
        "token_count": 52
    },
    "0102eaec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102eaec(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 42
    },
    "0102eb00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0102eb00(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "0102ff94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0102ff94(int32_t arg_8h, uint32_t arg_ch, uint32_t *arg_10h, uint32_t *arg_14h, uint32_t *arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    char cVar3;\n    uint8_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    uint32_t in_ECX;\n    char32_t *pcVar9;\n    int32_t extraout_ECX;\n    bool bVar10;\n    bool bVar11;\n    uint uVar12;\n    uint32_t uVar13;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = arg_ch & 0xffff;\n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    if (0x5a < uVar5) {\n        while (uVar5 < 0x6f) {\n            if (uVar5 == 0x6e) {\n                pcVar9 = L\"\\n:\\t+%\";\n                goto code_r0x0103022e;\n            }\n            if (uVar5 < 0x66) {\n                if (uVar5 == 0x65) {\n                    uVar5 = arg_10h[3];\n                    if (0x1e < uVar5 - 1) goto code_r0x01030246;\n                    uVar13 = (arg_20h ^ 1) << 5;\n                    goto code_r0x0103028e;\n                }\n                if (uVar5 == 0x61) {\n                    if (6 < arg_10h[6]) goto code_r0x01030246;\n                    pcVar9 = *(arg_1ch + 0xb4 + arg_10h[6] * 4);\n                    goto code_r0x0103022e;\n                }\n                if (uVar5 == 0x62) {\n                    if (0xb < arg_10h[4]) goto code_r0x01030246;\n                    pcVar9 = *(arg_1ch + 0xec + arg_10h[4] * 4);\n                    goto code_r0x0103022e;\n                }\n                if (uVar5 != 99) {\n                    if (uVar5 != 100) {\n                        return 0;\n                    }\n                    uVar5 = arg_10h[3];\n                    if (0x1e < uVar5 - 1) goto code_r0x01030246;\n                    goto code_r0x010300bd;\n                }\n                if ((arg_1ch != 0x106dcb8) || (arg_20h != 0)) {\n                    cVar3 = fcn.01030add(arg_8h, arg_20h & 0xff, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    if (cVar3 == '\\0') goto code_r0x01030114;\n                    fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                    cVar3 = fcn.01030add(arg_8h, 2, arg_10h, arg_14h, arg_18h, arg_1ch);\n                    goto code_r0x010301bc;\n                }\n                cVar3 = fcn.0102ff94(arg_8h, 0x61, arg_10h, arg_14h, arg_18h, 0x106dcb8, 0);\n                if (cVar3 == '\\0') goto code_r0x01030114;\n                fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                cVar3 = fcn.0102ff94(arg_8h, 0x62, arg_10h, arg_14h, arg_18h, 0x106dcb8, 0);\n                if (cVar3 == '\\0') goto code_r0x01030114;\n                fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                cVar3 = fcn.0102ff94(arg_8h, 0x65, arg_10h, arg_14h, arg_18h, 0x106dcb8, 0);\n                if (cVar3 == '\\0') goto code_r0x01030114;\n                fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                cVar3 = fcn.0102ff94(arg_8h, 0x54, arg_10h, arg_14h, arg_18h, 0x106dcb8, 0);\n                if (cVar3 == '\\0') goto code_r0x01030114;\n                fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                arg_20h = 0;\n                uVar12 = 0x59;\n                goto code_r0x010301b1;\n            }\n            if (uVar5 == 0x67) {\n                if (9999 < arg_10h[5] + 0x76c) goto code_r0x01030246;\n                uVar13 = 0x30;\n                uVar12 = 2;\n                iVar6 = fcn.0102ff69(arg_10h[5], arg_10h[6], arg_10h[7]);\n                uVar5 = iVar6 + 0x76c;\n                goto code_r0x0103007c;\n            }\n            if (uVar5 != 0x68) {\n                if (uVar5 == 0x6a) {\n                    uVar5 = arg_10h[7];\n                    if (0x16d < uVar5) goto code_r0x01030246;\n                    uVar12 = 3;\n                }\n                else {\n                    if (uVar5 != 0x6d) {\n                        return 0;\n                    }\n                    uVar5 = arg_10h[4];\n                    if (0xb < uVar5) goto code_r0x01030246;\n                    uVar12 = 2;\n                }\n                uVar13 = (arg_20h != 0) - 1U & 0x30;\n                uVar5 = uVar5 + 1;\n                goto code_r0x0103000f;\n            }\n            arg_ch = 0x62;\n            uVar5 = 0x62;\n        }\n        if (uVar5 < 0x78) {\n            if (uVar5 != 0x77) {\n                if (uVar5 == 0x70) {\n                    if (0x17 < arg_10h[2]) goto code_r0x01030246;\n                    if (arg_10h[2] < 0xc) {\n                        pcVar9 = *(arg_1ch + 0x14c);\n                    }\n                    else {\n                        pcVar9 = *(arg_1ch + 0x150);\n                    }\ncode_r0x0103022e:\n                    fcn.01030aac(pcVar9, arg_14h, arg_18h);\n                    return 1;\n                }\n                if (uVar5 == 0x72) {\n                    if (arg_1ch == 0x106dcb8) {\n                        cVar3 = fcn.0102ff94(arg_8h, 0x49, arg_10h, arg_14h, arg_18h, 0x106dcb8, arg_20h);\n                        if (cVar3 == '\\0') goto code_r0x01030114;\n                        fcn.01030aac(L\":\\t+%\", arg_14h, arg_18h);\n                        cVar3 = fcn.0102ff94(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, 0x106dcb8, arg_20h);\n                        if (cVar3 == '\\0') goto code_r0x01030114;\n                        fcn.01030aac(L\":\\t+%\", arg_14h, arg_18h);\n                        cVar3 = fcn.0102ff94(arg_8h, 0x53, arg_10h, arg_14h, arg_18h, 0x106dcb8, arg_20h);\n                        if (cVar3 == '\\0') goto code_r0x01030114;\n                        fcn.01030aac(L\" /\\n:\\t+%\", arg_14h, arg_18h);\n                        uVar12 = 0x70;\n                        goto code_r0x010301b1;\n                    }\n                    cVar3 = fcn.0102ff94(arg_8h, 0x58, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n                    goto code_r0x010301bc;\n                }\n                if (uVar5 == 0x74) {\n                    pcVar9 = L\"\\t+%\";\n                    goto code_r0x0103022e;\n                }\n                if (uVar5 != 0x75) {\n                    return 0;\n                }\n            }\n            uVar5 = arg_10h[6];\n            if (uVar5 < 7) {\n                if ((uVar5 == 0) && (arg_ch == 0x75)) {\n                    uVar5 = 7;\n                }\n                uVar13 = (arg_20h != 0) - 1U & 0x30;\n                uVar12 = 1;\n                goto code_r0x0103000f;\n            }\n            goto code_r0x01030246;\n        }\n        if (uVar5 != 0x78) {\n            if (uVar5 == 0x79) {\n                uVar5 = arg_10h[5] + 0x76c;\n                if (uVar5 < 10000) {\n                    uVar13 = (arg_20h != 0) - 1U & 0x30;\n                    uVar12 = 2;\ncode_r0x0103007c:\n                    uVar5 = uVar5 % 100;\n                    goto code_r0x0103000f;\n                }\n            }\n            else {\n                if (uVar5 != 0x7a) {\n                    return 0;\n                }\n                fcn.01038cf7();\n                var_4h = 0;\n                iVar6 = fcn.010382d7(&fcn.0102ff94::var_4h);\n                if (iVar6 == 0) {\n                    if (arg_10h[8] != 0) {\n                        var_8h = 0;\n                        iVar6 = fcn.010382ab(&fcn.0102ff94::var_8h);\n                        if (iVar6 != 0) goto code_r0x01030246;\n                        var_4h = var_4h + var_8h;\n                    }\n                    iVar6 = ((var_4h ^ var_4h >> 0x1f) - (var_4h >> 0x1f)) / 0x3c;\n                    pcVar9 = L\"+%\";\n                    if (-1 < var_4h) {\n                        pcVar9 = 0x10695d8;\n                    }\n                    fcn.01030aac(pcVar9, arg_14h, arg_18h);\n                    fcn.010309ac(iVar6 / 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    fcn.010309ac(iVar6 % 0x3c, 2, arg_14h, arg_18h, 0x30);\n                    return 1;\n                }\n            }\n            goto code_r0x01030246;\n        }\n        arg_20h = arg_20h & 0xff;\ncode_r0x01030500:\n        cVar3 = fcn.01030add(arg_8h, arg_20h, arg_10h, arg_14h, arg_18h, arg_1ch);\n        goto code_r0x010301bc;\n    }\n    if (uVar5 == 0x5a) {\n        fcn.01038cf7();\n        iVar6 = 0;\n        var_8h = 0;\n        iVar8 = fcn.01038279();\n        uVar5 = fcn.010398ec(&fcn.0102ff94::var_8h, *arg_14h, *arg_18h, *(iVar8 + (-(arg_10h[8] != 0) & 4)), 0xffffffff\n                             , arg_8h);\n        if (uVar5 == 0) {\ncode_r0x01030956:\n            if (uVar5 == 0x50) {\n                *arg_14h = *arg_14h + *arg_18h * 2;\n                *arg_18h = 0;\n                return 1;\n            }\n            *arg_18h = *arg_18h + (1 - var_8h);\n            *arg_14h = *arg_14h + var_8h * 2 + -2;\n            return 1;\n        }\n        bVar10 = uVar5 < 0x16;\n        bVar11 = uVar5 == 0x16;\n        if (!bVar11) {\n            bVar10 = uVar5 < 0x22;\n            bVar11 = uVar5 == 0x22;\n            if (!bVar11) goto code_r0x01030956;\n        }\n        fcn.01025c57(0, 0, 0, 0, 0);\n        if (bVar10 || bVar11) {\n            *arg_18h = *arg_18h << 3 | *arg_18h >> 0x1d;\n            iVar6 = extraout_ECX;\n        }\n        uVar4 = iVar6;\n        *arg_14h = *arg_14h | uVar4;\n        *arg_14h = *arg_14h + arg_18h;\n        *arg_14h = *arg_14h | uVar4;\n        *arg_14h = *arg_14h | uVar4;\n        *arg_14h = *arg_14h | uVar4;\n        *(arg_14h + -0x1374aa01) = arg_14h + *(arg_14h + -0x1374aa01) + extraout_ECX;\n        var_8h = arg_18h & 0xffff;\n        if (var_8h != 0) {\n            if (arg_ch < *arg_14h) {\n                iVar6 = 0;\n                if (arg_ch != 0) {\n                    do {\n                        arg_ch = arg_ch - 1;\n                        iVar2 = var_8h;\n                        if (arg_8h != 0) {\n                            iVar2 = arg_8h % 10 + 0x30;\n                        }\n                        *(*arg_10h + arg_ch * 2) = iVar2;\n                        arg_8h = arg_8h / 10;\n                        iVar6 = iVar6 + 1;\n                    } while (arg_ch != 0);\n                }\n                var_8h = iVar6 * 2;\n                *arg_10h = *arg_10h + var_8h;\n                *arg_14h = *arg_14h - iVar6;\n            }\n            else {\n                *arg_14h = 0;\n            }\n            return var_8h;\n        }\n        uVar5 = fcn.01030a40(arg_8h, arg_10h, arg_14h);\n        return uVar5;\n    }\n    if (uVar5 < 0x4e) {\n        if (uVar5 == 0x4d) {\n            uVar5 = arg_10h[1];\n            bVar10 = uVar5 < 0x3b;\n            bVar11 = uVar5 == 0x3b;\n            goto code_r0x010306a2;\n        }\n        if (uVar5 < 0x45) {\n            if (uVar5 != 0x44) {\n                if (uVar5 == 0x25) {\n                    pcVar9 = L\"%\";\n                    goto code_r0x0103022e;\n                }\n                if (uVar5 == 0x41) {\n                    if (arg_10h[6] < 7) {\n                        pcVar9 = *(arg_1ch + 0xd0 + arg_10h[6] * 4);\n                        goto code_r0x0103022e;\n                    }\n                }\n                else if (uVar5 == 0x42) {\n                    if (arg_10h[4] < 0xc) {\n                        pcVar9 = *(arg_1ch + 0x11c + arg_10h[4] * 4);\n                        goto code_r0x0103022e;\n                    }\n                }\n                else {\n                    if (uVar5 != 0x43) {\n                        return 0;\n                    }\n                    if (arg_10h[5] + 0x76c < 10000) {\n                        uVar13 = (arg_20h != 0) - 1U & 0x30;\n                        uVar12 = 2;\n                        uVar5 = (arg_10h[5] + 0x76c) / 100;\n                        goto code_r0x0103000f;\n                    }\n                }\n                goto code_r0x01030246;\n            }\n            cVar3 = fcn.0102ff94(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar3 == '\\0') goto code_r0x01030114;\n            fcn.01030aac(L\"/\\n:\\t+%\", arg_14h, arg_18h);\n            cVar3 = fcn.0102ff94(arg_8h, 100, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar3 == '\\0') goto code_r0x01030114;\n            fcn.01030aac(L\"/\\n:\\t+%\", arg_14h, arg_18h);\n            uVar12 = 0x79;\n        }\n        else {\n            if (uVar5 != 0x46) {\n                if (uVar5 == 0x47) {\n                    if (9999 < arg_10h[5] + 0x76c) goto code_r0x01030246;\n                    uVar13 = 0x30;\n                    uVar12 = 4;\n                    iVar6 = fcn.0102ff69(arg_10h[5], arg_10h[6], arg_10h[7]);\n                    uVar5 = iVar6 + 0x76c;\n                    goto code_r0x0103000f;\n                }\n                if (uVar5 != 0x48) {\n                    if (uVar5 != 0x49) {\n                        return 0;\n                    }\n                    if (0x17 < arg_10h[2]) goto code_r0x01030246;\n                    uVar5 = arg_10h[2] % 0xc;\n                    if (uVar5 == 0) {\n                        uVar5 = 0xc;\n                    }\n                    uVar13 = (arg_20h != 0) - 1U & 0x30;\ncode_r0x0103028e:\n                    uVar12 = 2;\n                    goto code_r0x0103000f;\n                }\n                uVar5 = arg_10h[2];\n                bVar10 = uVar5 < 0x17;\n                bVar11 = uVar5 == 0x17;\n                goto code_r0x010306a2;\n            }\n            cVar3 = fcn.0102ff94(arg_8h, 0x59, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar3 == '\\0') goto code_r0x01030114;\n            fcn.01030aac(0x10695d8, arg_14h, arg_18h);\n            cVar3 = fcn.0102ff94(arg_8h, 0x6d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n            if (cVar3 == '\\0') goto code_r0x01030114;\n            fcn.01030aac(0x10695d8, arg_14h, arg_18h);\n            uVar12 = 100;\n        }\n        goto code_r0x010301b1;\n    }\n    if (7 < uVar5 - 0x52) {\n        return 0;\n    }\n    // switch table (8 cases) at 0x103098c\n    switch(*((uVar5 - 0x52) * 4 + 0x103098c)) {\n    case 0x1030777:\n        cVar3 = fcn.0102ff94(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar3 == '\\0') goto code_r0x01030114;\n        fcn.01030aac(L\":\\t+%\", arg_14h, arg_18h);\n        uVar12 = 0x4d;\n        goto code_r0x010301b1;\n    case 0x10307c1:\n        uVar5 = *arg_10h;\n        bVar10 = uVar5 < 0x3c;\n        bVar11 = uVar5 == 0x3c;\ncode_r0x010306a2:\n        if (!bVar10 && !bVar11) {\ncode_r0x01030246:\n            puVar7 = fcn.0102e9b5();\n            *puVar7 = 0x16;\n            fcn.01025c2a();\n            return 0;\n        }\ncode_r0x010300bd:\n        uVar13 = (arg_20h != 0) - 1U & 0x30;\n        uVar12 = 2;\n        break;\n    case 0x10307ce:\n        cVar3 = fcn.0102ff94(arg_8h, 0x48, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar3 == '\\0') goto code_r0x01030114;\n        fcn.01030aac(L\":\\t+%\", arg_14h, arg_18h);\n        cVar3 = fcn.0102ff94(arg_8h, 0x4d, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n        if (cVar3 == '\\0') goto code_r0x01030114;\n        fcn.01030aac(L\":\\t+%\", arg_14h, arg_18h);\n        uVar12 = 0x53;\ncode_r0x010301b1:\n        cVar3 = fcn.0102ff94(arg_8h, uVar12, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\ncode_r0x010301bc:\n        if (cVar3 != '\\0') {\n            return 1;\n        }\ncode_r0x01030114:\n        puVar7 = fcn.0102e9b5();\n        *puVar7 = 0x16;\n        return 0;\n    case 0x103083b:\n        uVar13 = arg_10h[6];\n        if (uVar13 < 7) {\n            if (arg_ch == 0x57) {\n                if (uVar13 == 0) {\n                    uVar13 = 6;\n                }\n                else {\n                    uVar13 = uVar13 - 1;\n                }\n            }\n            uVar1 = arg_10h[7];\n            if (uVar1 < 0x16e) {\n                uVar5 = 0;\n                if ((uVar13 <= uVar1) && (uVar5 = uVar1 / 7,  uVar13 <= uVar1 % 7)) {\n                    uVar5 = uVar5 + 1;\n                }\n                uVar13 = (arg_20h != 0) - 1U & 0x30;\n                uVar12 = 2;\n                break;\n            }\n        }\n        goto code_r0x01030246;\n    case 0x1030896:\n        uVar13 = (arg_20h != 0) - 1U & 0x30;\n        uVar12 = 2;\n        uVar5 = fcn.0102fe8b(arg_10h[5], arg_10h[6], arg_10h[7]);\n        break;\n    case 0x10308c6:\n        arg_20h = 2;\n        goto code_r0x01030500;\n    case 0x10308d9:\n        uVar5 = arg_10h[5] + 0x76c;\n        if (9999 < uVar5) goto code_r0x01030246;\n        uVar13 = (arg_20h != 0) - 1U & 0x30;\n        uVar12 = 4;\n    }\ncode_r0x0103000f:\n    fcn.010309ac(uVar5, uVar12, arg_14h, arg_18h, uVar13);\n    return 1;\n}\n",
        "token_count": 5842
    },
    "010341ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.010341ef(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.0102fb28(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.01032189(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 119
    },
    "01034219": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01034219(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.0102fb28(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.010329b6(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 120
    },
    "01038f89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01038f89(void)\n\n{\n    fcn.0103916e(0, \"AreFileApisANSI\", 0x106e678, \"AreFileApisANSI\");\n    return;\n}\n",
        "token_count": 48
    },
    "01038fa3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01038fa3(void)\n\n{\n    fcn.0103916e(1, \"CompareStringEx\", 0x106e68c, 0x106e694);\n    return;\n}\n",
        "token_count": 47
    },
    "01038fbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01038fbd(void)\n\n{\n    fcn.0103916e(2, \"EnumSystemLocalesEx\", 0x106e694, \"EnumSystemLocalesEx\");\n    return;\n}\n",
        "token_count": 48
    },
    "01038fd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01038fd7(void)\n\n{\n    fcn.0103916e(8, \"GetDateFormatEx\", 0x106e6d0, \"GetDateFormatEx\");\n    return;\n}\n",
        "token_count": 46
    },
    "01038ff1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01038ff1(void)\n\n{\n    fcn.0103916e(0xb, \"GetLocaleInfoEx\", 0x106e6e8, 0x106e6f0);\n    return;\n}\n",
        "token_count": 52
    },
    "0103900b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0103900b(void)\n\n{\n    fcn.0103916e(0xe, \"GetTimeFormatEx\", 0x106e6f4, \"GetTimeFormatEx\");\n    return;\n}\n",
        "token_count": 49
    },
    "01039025": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01039025(void)\n\n{\n    fcn.0103916e(0xf, \"GetUserDefaultLocaleName\", 0x106e70c, \"GetUserDefaultLocaleName\");\n    return;\n}\n",
        "token_count": 49
    },
    "0103903f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0103903f(void)\n\n{\n    fcn.0103916e(0x13, \"IsValidLocaleName\", 0x106e738, \"IsValidLocaleName\");\n    return;\n}\n",
        "token_count": 46
    },
    "01039059": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01039059(void)\n\n{\n    fcn.0103916e(0x15, \"LCIDToLocaleName\", 0x106e75c, \"LCIDToLocaleName\");\n    return;\n}\n",
        "token_count": 50
    },
    "01039073": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.01039073(void)\n\n{\n    fcn.0103916e(0x14, \"LCMapStringEx\", 0x106e754, 0x106e75c);\n    return;\n}\n",
        "token_count": 49
    },
    "0103908d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0103908d(void)\n\n{\n    fcn.0103916e(0x16, \"LocaleNameToLCID\", 0x106e778, \"LocaleNameToLCID\");\n    return;\n}\n",
        "token_count": 50
    },
    "0103c242": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0103c242(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.010334ec();\n    return iVar1 + 8;\n}\n",
        "token_count": 42
    },
    "0103c607": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0103c607(int16_t *arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    if (arg_8h == NULL) {\n        fcn.0102dddc();\n        *(arg_ch + 8) = 0;\n        *(arg_ch + 0xc) = 0;\n    }\n    else {\n        if (*arg_8h != 0) {\n            arg_8h_00 = fcn.01038e24(arg_14h, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n            if (arg_8h_00 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0102e97f(uVar2);\n                piVar3 = fcn.0102e9b5();\n                return *piVar3;\n            }\n            if ((*(arg_ch + 0xc) <= arg_8h_00 && arg_8h_00 != *(arg_ch + 0xc)) &&\n               (iVar1 = fcn.0103cc0c(arg_8h_00),  iVar1 != 0)) {\n                return iVar1;\n            }\n            iVar1 = fcn.01038e24(arg_14h, 0, arg_8h, 0xffffffff, *(arg_ch + 8), *(arg_ch + 0xc), 0, 0);\n            if (iVar1 == 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                fcn.0102e97f(uVar2);\n                piVar3 = fcn.0102e9b5();\n                return *piVar3;\n            }\n            *(arg_ch + 0x10) = iVar1 + -1;\n            return 0;\n        }\n        if ((*(arg_ch + 0xc) == 0) && (iVar1 = fcn.0103cc0c(1),  iVar1 != 0)) {\n            return iVar1;\n        }\n        **(arg_ch + 8) = 0;\n    }\n    *(arg_ch + 0x10) = 0;\n    return 0;\n}\n",
        "token_count": 535
    },
    "0103cc0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0103cc0c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    fcn.0102dddc();\n    iVar1 = fcn.0102de5c(in_ECX + 8, arg_8h);\n    if (iVar1 == 0) {\n        *(in_ECX + 0x14) = 1;\n        iVar1 = 0;\n        *(in_ECX + 0xc) = arg_8h;\n    }\n    else {\n        *(in_ECX + 0xc) = 0;\n        *(in_ECX + 0x14) = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 160
    },
    "0103d987": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0103d987(char *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    char cVar2;\n    code *pcVar3;\n    uint *puVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint uVar9;\n    char *pcVar10;\n    char *pcVar11;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.0102e9b5();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar5 = fcn.01045cb0(arg_8h, 0x3d);\n    pcVar11 = arg_8h;\n    if ((pcVar5 == NULL) || (pcVar5 == arg_8h)) {\ncode_r0x0103d841:\n        puVar4 = fcn.0102e9b5();\n        *puVar4 = 0x16;\n        goto code_r0x0103d84c;\n    }\n    cVar1 = pcVar5[1];\n    fcn.0103d918();\n    uVar9 = 0;\n    if (*0x2081ab0 == NULL) {\n        if ((arg_ch != 0) && (*0x2081ab4 != 0)) {\n            iVar6 = fcn.01031b32();\n            if (iVar6 == 0) goto code_r0x0103d841;\n            fcn.0103d918();\n            goto code_r0x0103d6fe;\n        }\n        if (cVar1 == '\\0') {\n            uVar9 = 0;\n            goto code_r0x0103d84f;\n        }\n        *0x2081ab0 = fcn.0103373e(1, 4);\n        fcn.0103379b(0);\n        if (*0x2081ab0 != NULL) {\n            if (*0x2081ab4 == 0) {\n                *0x2081ab4 = fcn.0103373e(1, 4);\n                fcn.0103379b(0);\n                if (*0x2081ab4 == 0) goto code_r0x0103d84c;\n            }\n            goto code_r0x0103d6fe;\n        }\n    }\n    else {\ncode_r0x0103d6fe:\n        piVar7 = *0x2081ab0;\n        if (*0x2081ab0 != NULL) {\n            iVar6 = fcn.0103d932(arg_8h, pcVar5 - arg_8h);\n            if ((-1 < iVar6) && (*piVar7 != 0)) {\n                fcn.0103379b(piVar7[iVar6]);\n                if (cVar1 == '\\0') {\n                    for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                        piVar7[iVar6] = piVar7[iVar6 + 1];\n                    }\n                    piVar7 = fcn.0103d992(piVar7, iVar6, 4);\n                    fcn.0103379b(0);\n                    if (piVar7 != NULL) {\ncode_r0x0103d7c6:\n                        *0x2081ab0 = piVar7;\n                    }\n                }\n                else {\n                    pcVar11 = NULL;\n                    piVar7[iVar6] = arg_8h;\n                }\n                if (arg_ch != 0) {\n                    pcVar10 = arg_8h;\n                    do {\n                        cVar2 = *pcVar10;\n                        pcVar10 = pcVar10 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = fcn.0103373e(pcVar10 + (2 - (arg_8h + 1)), 1);\n                    if (iVar6 != 0) {\n                        iVar8 = fcn.010320fe(iVar6, pcVar10 + (2 - (arg_8h + 1)), arg_8h);\n                        if (iVar8 != 0) {\n                            fcn.01025c57(0, 0, 0, 0, 0);\n                            pcVar3 = swi(3);\n                            uVar9 = (*pcVar3)();\n                            return uVar9;\n                        }\n                        (pcVar5 + (iVar6 - arg_8h) + 1)[-1] = '\\0';\n                        iVar8 = fcn.01044254(iVar6, -(cVar1 != '\\0') & pcVar5 + (iVar6 - arg_8h) + 1);\n                        if (iVar8 == 0) {\n                            puVar4 = fcn.0102e9b5();\n                            uVar9 = 0xffffffff;\n                            *puVar4 = 0x2a;\n                        }\n                    }\n                    fcn.0103379b(iVar6);\n                }\n                goto code_r0x0103d84f;\n            }\n            if (cVar1 == '\\0') goto code_r0x0103d84f;\n            arg_ch_00 = -iVar6 + 2;\n            if ((-iVar6 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar7 = fcn.0103d992(piVar7, arg_ch_00, 4);\n                fcn.0103379b(0);\n                if (piVar7 != NULL) {\n                    piVar7[-iVar6] = arg_8h;\n                    piVar7[1 - iVar6] = 0;\n                    pcVar11 = NULL;\n                    goto code_r0x0103d7c6;\n                }\n            }\n        }\n    }\ncode_r0x0103d84c:\n    uVar9 = 0xffffffff;\ncode_r0x0103d84f:\n    fcn.0103379b(pcVar11);\n    return uVar9;\n}\n",
        "token_count": 1376
    },
    "01041c84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.01041c84(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.01041649(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 77
    },
    "010435d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nuint __cdecl fcn.010435d2(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.01021d00(0x1076e80, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.0102e369(0xb);\n    *(unaff_EBP + -4) = 0;\n    uVar1 = fcn.0104352c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.01043523();\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "01045997": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.01045997(void)\n\n{\n    unkint10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x401f)) {\n            return uStack28 >> (0x3eU - uStack24 & 0x1f);\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 196
    },
    "01045afc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.01045afc(void)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    unkint10 in_ST0;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    uStack32 = in_ST0;\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    if (in_ST0 < 0) {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n    }\n    else {\n        if (uStack24 < 0x3fff) {\n            return 0;\n        }\n        if ((uStack28 < 0) && (uStack24 < 0x403f)) {\n            uVar1 = 0x3e - uStack24;\n            uVar2 = uStack28;\n            if (0x1f < uVar1) {\n                uVar2 = 0;\n                uStack32 = uStack28;\n            }\n            return CONCAT44(uVar2 >> (uVar1 & 0x1f), uStack32 >> (uVar1 & 0x1f) | uVar2 << 0x20 - (uVar1 & 0x1f));\n        }\n    }\n    return 0xffffffffffffffff;\n}\n",
        "token_count": 316
    },
    "01024099": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01024099(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.01024ee5(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "0101ed9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0101ed9e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *param_1;\n    if (iVar1 != 0) {\n        if (iVar1 < 8) {\n            fcn.01020ad8(iVar1 * 0x18 + 0x20810c8);\n        }\n        return;\n    }\n    fcn.0102e3b1(4);\n    return;\n}\n",
        "token_count": 107
    },
    "010183d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.010183d0(code **param_1)\n\n{\n    uint var_4h;\n    \n    *param_1 = vtable.std::exception.0;\n    fcn.01023c9d(param_1 + 1);\n    return;\n}\n",
        "token_count": 60
    },
    "01018250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.01018250(uint param_1)\n\n{\n    uint32_t uVar1;\n    int32_t *in_FS_OFFSET;\n    uint var_10h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x10461e0;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.0101f200(param_1);\n    fcn.01017ea0(uVar1);\n    fcn.01017ea0();\n    fcn.01017ea0();\n    fcn.01017ea0();\n    fcn.01017ea0();\n    fcn.01017ea0();\n    fcn.0101ed9e();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 211
    },
    "01014c10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.01014c10(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (0xfffffff < arg_8h) {\n        fcn.0101b510(0xfffffff);\n    }\n    return arg_8h << 4;\n}\n",
        "token_count": 108
    },
    "01014c40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.01014c40(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (0xaaaaaaa < arg_8h) {\n        fcn.0101b510(0xaaaaaaa);\n    }\n    return arg_8h * 0x18;\n}\n",
        "token_count": 112
    },
    "01014c70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.01014c70(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (0x4924924 < arg_8h) {\n        fcn.0101b510(0x4924924);\n    }\n    return arg_8h * 0x38;\n}\n",
        "token_count": 114
    },
    "01014ca0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.01014ca0(uint32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_1h;\n    \n    if (0x15555555 < arg_8h) {\n        fcn.0101b510(0x15555555);\n    }\n    return arg_8h * 0xc;\n}\n",
        "token_count": 113
    },
    "0101dae0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0101dae0(uint32_t *param_1)\n\n{\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = *param_1 == param_1[1];\n    return *param_1 & 0xffffff00 | var_8h;\n}\n",
        "token_count": 79
    },
    "01013790": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.01013790(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint in_ECX;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.01013ce0(&arg_ch);\n    return in_ECX;\n}\n",
        "token_count": 83
    },
    "01016ea0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.01016ea0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint in_ECX;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uchar var_fh;\n    uchar var_eh;\n    int32_t var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x1045f7d;\n    var_ch = *in_FS_OFFSET;\n    uVar1 = *0x1078124 ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &var_ch;\n    fcn.010137d0(var_eh, uVar1);\n    var_4h = 0;\n    fcn.01017240(&var_fh, in_ECX);\n    fcn.0101b910();\n    fcn.0101c240(arg_8h, arg_ch & 0xffff);\n    fcn.01018220();\n    *in_FS_OFFSET = var_ch;\n    return in_ECX;\n}\n",
        "token_count": 247
    },
    "01044918": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.01044918(void)\n\n{\n    *0x1078a60 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "0101afd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t ** __cdecl fcn.0101afd0(int32_t **arg_8h)\n\n{\n    for (; *(*arg_8h + 0xd) == '\\0'; arg_8h = *arg_8h) {\n    }\n    return arg_8h;\n}\n",
        "token_count": 63
    },
    "01021172": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.01021172(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStack20 [8];\n    uint uStack12;\n    \n    do {\n        uStack12 = 0x102114e;\n        iVar2 = fcn.0102e3df();\n        if (iVar2 != 0) {\n            return;\n        }\n        uStack12 = 0x1021141;\n        iVar2 = fcn.01031119(param_1);\n    } while (iVar2 != 0);\n    if (param_1 != -1) {\n        fcn.0101edc2();\n        fcn.01023cbc(auStack20, 0x107641c);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.01017500();\n    fcn.01023cbc(auStack20, 0x1076244);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 232
    },
    "0102e3df": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0102e3df(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x2081ee4, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.0103dea6();\n        } while ((iVar1 != 0) && (iVar1 = fcn.01031119(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.0102e9b5();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 197
    },
    "0102ec87": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0102ec87(uint16_t **param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint arg_10h;\n    uint8_t uStack16;\n    uchar uStack15;\n    uint16_t auStack12 [2];\n    uint16_t uStack8;\n    uint16_t uStack6;\n    \n    iVar4 = 0x1078360;\n    if ((param_1[3] >> 0xc & 1) == 0) {\n        iVar1 = fcn.0102c2fb(param_1);\n        if ((iVar1 == -1) || (iVar1 = fcn.0102c2fb(param_1),  iVar1 == -2)) {\n            iVar1 = 0x1078360;\n        }\n        else {\n            iVar1 = fcn.0102c2fb(param_1);\n            uVar2 = fcn.0102c2fb(param_1);\n            iVar1 = *((iVar1 >> 6) * 4 + 0x2081ae8) + (uVar2 & 0x3f) * 0x38;\n        }\n        if (*(iVar1 + 0x29) != '\\0') {\n            puVar5 = &uStack8;\n            do {\n                iVar4 = fcn.0102c11b(param_1);\n                if (iVar4 == -1) {\n                    return 0xffff;\n                }\n                *puVar5 = iVar4;\n                puVar5 = puVar5 + 1;\n            } while (puVar5 != &uStack6);\n            return &uStack6 & 0xffff0000 | uStack8;\n        }\n    }\n    if ((param_1[3] >> 0xc & 1) == 0) {\n        iVar1 = fcn.0102c2fb(param_1);\n        if ((iVar1 != -1) && (iVar1 = fcn.0102c2fb(param_1),  iVar1 != -2)) {\n            iVar4 = fcn.0102c2fb(param_1);\n            uVar2 = fcn.0102c2fb(param_1);\n            iVar4 = *((iVar4 >> 6) * 4 + 0x2081ae8) + (uVar2 & 0x3f) * 0x38;\n        }\n        if (*(iVar4 + 0x28) < '\\0') {\n            arg_10h = 1;\n            iVar4 = fcn.0102c11b(param_1);\n            if (iVar4 != -1) {\n                uStack16 = iVar4;\n                iVar4 = fcn.0102e3ea();\n                if (*(iVar4 + uStack16 * 2) < 0) {\n                    iVar4 = fcn.0102c11b(param_1);\n                    if (iVar4 == -1) {\n                        fcn.0102fab5(uStack16, param_1);\n                        return 0xffff;\n                    }\n                    uStack15 = iVar4;\n                    arg_10h = 2;\n                }\n                uVar2 = fcn.01034385(auStack12, &uStack16, arg_10h);\n                if (uVar2 != 0xffffffff) {\n                    return uVar2 & 0xffff0000 | auStack12[0];\n                }\n                puVar3 = fcn.0102e9b5();\n                *puVar3 = 0x2a;\n            }\n            return 0xffff;\n        }\n    }\n    if (param_1[2] < 2) {\n        uVar2 = fcn.010367f4(param_1);\n    }\n    else {\n        param_1[2] = param_1[2] + -1;\n        uVar2 = **param_1;\n        *param_1 = *param_1 + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 889
    },
    "0103e0f7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0103e0f7(uint8_t *param_1, uint32_t param_2, uint32_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    \n    if (param_1 == NULL) {\n        param_2 = 0;\n    }\n    else {\n        if (param_2 != 0) {\n            if ((param_2 & 0xffffff80) == 0) {\n                *param_1 = param_2;\n                return 1;\n            }\n            if ((param_2 & 0xfffff800) == 0) {\n                uVar3 = 0xc0;\n                iVar4 = 1;\n                iVar2 = iVar4;\n            }\n            else if ((param_2 & 0xffff0000) == 0) {\n                if ((0xd7ff < param_2) && (param_2 < 0xe000)) {\ncode_r0x0103e0cb:\n                    iVar2 = fcn.0103e0d8(param_3);\n                    return iVar2;\n                }\n                iVar4 = 2;\n                uVar3 = 0xe0;\n                iVar2 = iVar4;\n            }\n            else {\n                if (((param_2 & 0xffe00000) != 0) || (0x10ffff < param_2)) goto code_r0x0103e0cb;\n                iVar4 = 3;\n                uVar3 = 0xf0;\n                iVar2 = iVar4;\n            }\n            do {\n                uVar1 = param_2;\n                param_2 = param_2 >> 6;\n                param_1[iVar4] = uVar1 & 0x3f | 0x80;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            *param_1 = param_2 | uVar3;\n            *param_3 = 0;\n            param_3[1] = 0;\n            return iVar2 + 1;\n        }\n        *param_1 = param_2;\n    }\n    *param_3 = param_2;\n    param_3[1] = param_2;\n    return 1;\n}\n",
        "token_count": 503
    }
}