{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0040428c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040428c(uint32_t arg_8h)\n\n{\n    fcn.00404269();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00404700": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404700(uint32_t arg_8h)\n\n{\n    fcn.004046f0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004055cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004055cc(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x40136c;\n    fcn.00404269();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040d4ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040d4ae(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040992b();\n    var_4h = 0;\n    if (*0x801950 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40248c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402480);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x801950 = fcn.004098b9(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402470);\n        *0x801954 = fcn.004098b9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40245c);\n        *0x801958 = fcn.004098b9(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402440);\n        *0x801960 = fcn.004098b9(uVar3);\n        if (*0x801960 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402428);\n            *0x80195c = fcn.004098b9(uVar3);\n        }\n    }\n    if ((*0x80195c != iVar1) && (*0x801960 != iVar1)) {\n        pcVar4 = fcn.00409934(*0x80195c);\n        pcVar5 = fcn.00409934(*0x801960);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040d5f0;\n        }\n    }\n    if ((((*0x801954 != iVar1) && (pcVar4 = fcn.00409934(*0x801954),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x801958 != iVar1 && (pcVar4 = fcn.00409934(*0x801958),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040d5f0:\n    pcVar4 = fcn.00409934(*0x801950);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 812
    },
    "0040e072": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e072(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409328(0x7fc6d0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004073fa();\n        *puVar2 = 0;\n        puVar2 = fcn.004073e7();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xe909a8)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xe909c0;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.0040ff0d(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004073e7();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004073fa();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0040d93f(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.0040e144(0x7fc6d0);\n                goto code_r0x0040e13e;\n            }\n        }\n        puVar2 = fcn.004073fa();\n        *puVar2 = 0;\n        puVar2 = fcn.004073e7();\n        *puVar2 = 9;\n        fcn.004044ec(0, 0, 0, 0, 0);\n    }\ncode_r0x0040e13e:\n    fcn.0040936d();\n    return;\n}\n",
        "token_count": 635
    },
    "0040f53e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nunkbyte5 __fastcall fcn.0040f53e(uint param_1, uchar param_2)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint var_9fh;\n    uint var_90h;\n    \n    *(unaff_EBP + -0xa0) = (*0x7ff13e < ABS(in_ST0)) << 8 | (*0x7ff13e == ABS(in_ST0)) << 0xe;\n    if ((*(unaff_EBP + -0x9f) & 0x41) == 0) {\n        fVar1 = ROUND(in_ST0);\n        *(unaff_EBP + -0xa0) = (fVar1 < 0) << 8 | (fVar1 == 0) << 0xe;\n        fVar1 = in_ST0 - fVar1;\n        *(unaff_EBP + -0xa0) = (fVar1 < 0) << 8 | (fVar1 == 0) << 0xe;\n        f2xm1(ABS(fVar1));\n        return CONCAT14(*(unaff_EBP + -0x9f), in_EAX);\n    }\n    *(unaff_EBP + -0xa0) = (in_ST0 < 0) << 8 | (in_ST0 == 0) << 0xe;\n    if ((*(unaff_EBP + -0x9f) & 1) == 0) {\n        return CONCAT14(param_2, unaff_retaddr);\n    }\n    *(unaff_EBP + -0x90) = 4;\n    return CONCAT14(param_2, unaff_retaddr);\n}\n",
        "token_count": 389
    },
    "0041033e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041033e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe1f8 ^ &stack0xfffffffc;\n    fcn.0040628f(arg_10h);\n    var_14h = fcn.0041180a(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00410d82(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00410397:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004103d7;\n        }\n        if (iVar1 != 2) {\ncode_r0x004103c9:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004103d7;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004103c9;\n        goto code_r0x00410397;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004103d7:\n    fcn.004051ed(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "004103e6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004103e6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x7fe1f8 ^ &stack0xfffffffc;\n    fcn.0040628f(arg_10h);\n    var_14h = fcn.0041180a(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004112c6(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041043f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041047f;\n        }\n        if (iVar1 != 2) {\ncode_r0x00410471:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041047f;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00410471;\n        goto code_r0x0041043f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041047f:\n    fcn.004051ed(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "0041180a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00411acc)\n// WARNING: Removing unreachable block (ram,0x00411a95)\n// WARNING: Removing unreachable block (ram,0x00411e7d)\n// WARNING: Removing unreachable block (ram,0x00411aa4)\n// WARNING: Removing unreachable block (ram,0x00411aac)\n// WARNING: Removing unreachable block (ram,0x00411ab2)\n// WARNING: Removing unreachable block (ram,0x00411ab5)\n// WARNING: Removing unreachable block (ram,0x00411abc)\n// WARNING: Removing unreachable block (ram,0x00411ac6)\n// WARNING: Removing unreachable block (ram,0x00411b21)\n// WARNING: Removing unreachable block (ram,0x00411b1b)\n// WARNING: Removing unreachable block (ram,0x00411b27)\n// WARNING: Removing unreachable block (ram,0x00411b44)\n// WARNING: Removing unreachable block (ram,0x00411b46)\n// WARNING: Removing unreachable block (ram,0x00411b4e)\n// WARNING: Removing unreachable block (ram,0x00411b51)\n// WARNING: Removing unreachable block (ram,0x00411b56)\n// WARNING: Removing unreachable block (ram,0x00411b59)\n// WARNING: Removing unreachable block (ram,0x00411e86)\n// WARNING: Removing unreachable block (ram,0x00411b64)\n// WARNING: Removing unreachable block (ram,0x00411e9d)\n// WARNING: Removing unreachable block (ram,0x00411ea4)\n// WARNING: Removing unreachable block (ram,0x00411b6f)\n// WARNING: Removing unreachable block (ram,0x00411b82)\n// WARNING: Removing unreachable block (ram,0x00411b84)\n// WARNING: Removing unreachable block (ram,0x00411b91)\n// WARNING: Removing unreachable block (ram,0x00411b96)\n// WARNING: Removing unreachable block (ram,0x00411b9c)\n// WARNING: Removing unreachable block (ram,0x00411ba5)\n// WARNING: Removing unreachable block (ram,0x00411bac)\n// WARNING: Removing unreachable block (ram,0x00411bc4)\n// WARNING: Removing unreachable block (ram,0x00411bd5)\n// WARNING: Removing unreachable block (ram,0x00411be3)\n// WARNING: Removing unreachable block (ram,0x00411c22)\n// WARNING: Removing unreachable block (ram,0x00411c2b)\n// WARNING: Removing unreachable block (ram,0x00411e43)\n// WARNING: Removing unreachable block (ram,0x00411c39)\n// WARNING: Removing unreachable block (ram,0x00411c43)\n// WARNING: Removing unreachable block (ram,0x00411e5e)\n// WARNING: Removing unreachable block (ram,0x00411c50)\n// WARNING: Removing unreachable block (ram,0x00411c57)\n// WARNING: Removing unreachable block (ram,0x00411c61)\n// WARNING: Removing unreachable block (ram,0x00411c66)\n// WARNING: Removing unreachable block (ram,0x00411c76)\n// WARNING: Removing unreachable block (ram,0x00411c7b)\n// WARNING: Removing unreachable block (ram,0x00411c85)\n// WARNING: Removing unreachable block (ram,0x00411c8a)\n// WARNING: Removing unreachable block (ram,0x00411c9c)\n// WARNING: Removing unreachable block (ram,0x00411ca9)\n// WARNING: Removing unreachable block (ram,0x00411cb8)\n// WARNING: Removing unreachable block (ram,0x00411cc5)\n// WARNING: Removing unreachable block (ram,0x00411ce2)\n// WARNING: Removing unreachable block (ram,0x00411ce6)\n// WARNING: Removing unreachable block (ram,0x00411ced)\n// WARNING: Removing unreachable block (ram,0x00411cf6)\n// WARNING: Removing unreachable block (ram,0x00411cf9)\n// WARNING: Removing unreachable block (ram,0x00411d0a)\n// WARNING: Removing unreachable block (ram,0x00411d18)\n// WARNING: Removing unreachable block (ram,0x00411d23)\n// WARNING: Removing unreachable block (ram,0x00411d2a)\n// WARNING: Removing unreachable block (ram,0x00411d55)\n// WARNING: Removing unreachable block (ram,0x00411d5a)\n// WARNING: Removing unreachable block (ram,0x00411d65)\n// WARNING: Removing unreachable block (ram,0x00411d6e)\n// WARNING: Removing unreachable block (ram,0x00411d74)\n// WARNING: Removing unreachable block (ram,0x00411d77)\n// WARNING: Removing unreachable block (ram,0x00411d9d)\n// WARNING: Removing unreachable block (ram,0x00411da2)\n// WARNING: Removing unreachable block (ram,0x00411da7)\n// WARNING: Removing unreachable block (ram,0x00411db4)\n// WARNING: Removing unreachable block (ram,0x00411dc5)\n// WARNING: Removing unreachable block (ram,0x00411df6)\n// WARNING: Removing unreachable block (ram,0x00411dcb)\n// WARNING: Removing unreachable block (ram,0x00411df1)\n// WARNING: Removing unreachable block (ram,0x00411dd5)\n// WARNING: Removing unreachable block (ram,0x00411deb)\n// WARNING: Removing unreachable block (ram,0x00411de4)\n// WARNING: Removing unreachable block (ram,0x00411df9)\n// WARNING: Removing unreachable block (ram,0x00411e26)\n// WARNING: Removing unreachable block (ram,0x00411e03)\n// WARNING: Removing unreachable block (ram,0x00411c8e)\n// WARNING: Removing unreachable block (ram,0x00411c6b)\n// WARNING: Removing unreachable block (ram,0x00411e61)\n// WARNING: Removing unreachable block (ram,0x00411ba7)\n// WARNING: Removing unreachable block (ram,0x00411e6b)\n// WARNING: Removing unreachable block (ram,0x00411eac)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0041180a(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004073e7();\n        *puVar2 = 0x16;\n        fcn.004044ec(0, 0, 0, 0, 0);\n        fcn.004051ed(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0041189d. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x411ed2\n    (**0x411ed2)();\n    return;\n}\n",
        "token_count": 1838
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403220(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t *unaff_retaddr;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar auStack8 [8];\n    \n    uVar3 = *param_1;\n    uVar4 = param_1[1];\n    uStack12 = *0x7ff6ec;\n    uStack32 = 0;\n    uStack28 = uVar3;\n    fcn.004031f0();\n    uStack32 = uStack32 + 0x23f;\n    if (*0xe8fffc == 0x14) {\n        (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(auStack8);\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(0, 0, 0x402da0, 0, &stack0xffffffcc);\n    }\n    iStack20 = *0x7ff6f0;\n    uStack16 = *0x7ff6f4;\n    uStack24 = 0x20;\n    do {\n        uVar2 = uVar3 * 0x10 + iStack20;\n        if (*0xe8fffc == 0xfa9) {\n            *0xe8fff8 = 0xedeb2e40;\n        }\n        else if (*0xe8fffc == 0x3eb) {\n            *0xe8cf00 = 0;\n        }\n        uVar1 = uStack28 + uStack32;\n        uStack28 = uVar3 >> 5;\n        *0xe8fff4 = 0xf4ea3dee;\n        fcn.00403200();\n        uVar3 = uStack28 ^ uVar2 ^ uVar1;\n        if (*0xe8fffc == 0x213) {\n            (*_sym.imp.KERNEL32.dll_VirtualQuery)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CreateHardLinkW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetCompressedFileSizeW)(0, &uStack32);\n            (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)(0, 0, 0, 0x402dd4);\n        }\n        uVar4 = uVar4 - uVar3;\n        uStack28 = uVar4;\n        fcn.004031e0();\n        uVar3 = fcn.00403210();\n        uStack28 = uStack28 - 1;\n        uStack32 = uVar3;\n    } while (uStack28 != 0);\n    unaff_retaddr[1] = uVar4;\n    *unaff_retaddr = uVar3;\n    return;\n}\n",
        "token_count": 657
    },
    "004033f0": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.004033f0(void)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint32_t uVar6;\n    \n    fcn.0040f7c0();\n    pcVar5 = _sym.imp.KERNEL32.dll_SetConsoleMode;\n    pcVar4 = _sym.imp.KERNEL32.dll_CreateActCtxW;\n    pcVar3 = _sym.imp.KERNEL32.dll_SetComputerNameW;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCommState;\n    uVar6 = *0xe8cf04;\n    uVar1 = *0xe8fffc >> 3;\n    while (uVar1 != 0) {\n        if (*0xe8fffc == 0x959) {\n            (*pcVar5)();\n            (*pcVar4)();\n            (*pcVar3)();\n            (*_sym.imp.KERNEL32.dll_WriteProfileSectionW)();\n            (*_sym.imp.KERNEL32.dll_SearchPathA)();\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n            (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExW)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n            (*_sym.imp.KERNEL32.dll_WaitForDebugEvent)();\n            (*pcVar2)();\n            (*_sym.imp.KERNEL32.dll_SetThreadPriorityBoost)();\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)();\n            (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n            (*_sym.imp.KERNEL32.dll_IsBadStringPtrA)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExW)();\n            (*_sym.imp.KERNEL32.dll_OpenEventA)();\n        }\n        fcn.00403220();\n        uVar6 = uVar6 - 1;\n        uVar1 = uVar6;\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "00404269": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404269(uint *param_1)\n\n{\n    *param_1 = 0x401274;\n    if (param_1[2] != 0) {\n        fcn.004042ad(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "004048b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004049a8: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004049ad)\n// WARNING: Removing unreachable block (ram,0x004049db)\n// WARNING: Removing unreachable block (ram,0x004049b3)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004048b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409328(0x7fc2f8, 0x18);\n    fcn.0040882f(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x800ef4 != 1) {\n        *0x800ef0 = 1;\n        *0x800eec = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00409934(*0xe91b10);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00409934(*0xe91b0c);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040992b();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00409934(*piVar2);\n                        iVar3 = fcn.0040992b();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00409934(*0xe91b10);\n                        piVar1 = fcn.00409934(*0xe91b0c);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.004047ef(0x401224);\n        }\n        fcn.004047ef(0x40122c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00408755(8);\n    }\n    return;\n}\n",
        "token_count": 789
    },
    "00404efd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404efd(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x404fa8;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00404fd4;\n        uStack36 = *0x7fe1f8 ^ &fcn.00404efd::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00404efd::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00409b80();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00404efd::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 721
    },
    "004051ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051ed(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x7fe1f8) {\n        return;\n    }\n    *0x801700 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x801704 = &arg_8h;\n    *0x801640 = 0x10001;\n    *0x8015e8 = 0xc0000409;\n    *0x8015ec = 1;\n    var_328h = *0x7fe1f8;\n    var_324h = *0x7fe1fc;\n    *0x8015f4 = unaff_retaddr;\n    *0x8016cc = in_GS;\n    *0x8016d0 = in_FS;\n    *0x8016d4 = in_ES;\n    *0x8016d8 = in_DS;\n    *0x8016dc = unaff_EDI;\n    *0x8016e0 = unaff_ESI;\n    *0x8016e4 = unaff_EBX;\n    *0x8016e8 = in_EDX;\n    *0x8016ec = in_ECX;\n    *0x8016f0 = in_EAX;\n    *0x8016f4 = unaff_EBP;\n    *0x8016f8 = unaff_retaddr;\n    *0x8016fc = in_CS;\n    *0x801708 = in_SS;\n    *0x801638 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004098b1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x4022f4);\n    if (*0x801638 == 0) {\n        fcn.004098b1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 836
    },
    "0040569b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040569b(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409328(0x7fc380, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00409b80();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.004046a7();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040be00(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00405761();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.004046a7();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040936d();\n    return;\n}\n",
        "token_count": 565
    },
    "00405761": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00405761(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409b80();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00409b80();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00405a3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a3c(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040513b(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00409b80();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00409b80();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00405114(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.004057c1(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "00406e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406e20(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00408755(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040751e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040751e(void)\n\n{\n    uint unaff_EBX;\n    uint in_stack_fffffd2c;\n    uint in_stack_fffffd30;\n    uint var_2c8h;\n    \n    fcn.00409ee0();\n    fcn.004075aa(unaff_EBX, in_stack_fffffd2c, in_stack_fffffd30);\n    return;\n}\n",
        "token_count": 88
    },
    "0040746c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040746c(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBP;\n    float10 in_ST0;\n    float10 fVar1;\n    uint unaff_retaddr;\n    uint var_9fh;\n    uint var_90h;\n    \n    fVar1 = (1 + ABS(in_ST0)) * (1 - ABS(in_ST0));\n    *(unaff_EBP + -0xa0) = (fVar1 < 0) << 8 | (fVar1 == 0) << 0xe;\n    if ((*(unaff_EBP + -0x9f) & 1) == 0) {\n        return in_EAX;\n    }\n    if (*(unaff_EBP + -0x90) < '\\x01') {\n        *(unaff_EBP + -0x90) = 1;\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 200
    },
    "00410d82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410d82(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00411283;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00410eb7;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00410ebe;\ncode_r0x00410eb7:\n                        do {\n                            var_4h = 1;\ncode_r0x00410ebe:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00410ecc;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00410ecc:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7ff3f4 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7ff3f4 < iVar12) {\n                if (iVar12 < *0x7ff3f0) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x7ff3f0;\n                    uVar5 = 1;\n                }\n                goto code_r0x00411283;\n            }\n            var_10h = *0x7ff3f4 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0041106f;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0041106f:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00411283:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3669
    },
    "004112c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004112c6(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x004117c7;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x7ff410 - 1;\n        iVar4 = *0x7ff410 + (*0x7ff410 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x7ff410 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004113fb;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00411402;\ncode_r0x004113fb:\n                        do {\n                            var_4h = 1;\ncode_r0x00411402:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00411410;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00411410:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x7ff40c - *0x7ff410) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x7ff40c < iVar12) {\n                if (iVar12 < *0x7ff408) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x7ff41c;\n                    iVar4 = *0x7ff414 + (*0x7ff414 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7ff414 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x7ff414 + (*0x7ff414 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x7ff414 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x7ff41c + *0x7ff408;\n                    uVar5 = 1;\n                }\n                goto code_r0x004117c7;\n            }\n            var_10h = *0x7ff40c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x7ff410 - 1;\n            iVar12 = *0x7ff410 + (*0x7ff410 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x7ff410 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004115b3;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004115b3:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x7ff414 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x004117c7:\n    var_20h = iVar12 << (0x1fU - *0x7ff414 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x7ff418 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x7ff418 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3637
    },
    "004031f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004031f0(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "00403200": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403200(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "00403560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403560(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "004035a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004035a0(void)\n\n{\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x402e4c;\n    uStack16 = 0x4035ae;\n    *0xe8ffec = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack16 = 0x801a68;\n    *0x801a68 = 0x56;\n    *0x801a69 = 0x69;\n    *0x801a6a = 0x72;\n    *0x801a6f = 0x50;\n    *0x801a75 = 0x74;\n    *0x801a76 = 0;\n    *0x801a6b = 0x74;\n    *0x801a6c = 0x75;\n    *0x801a6d = 0x61;\n    *0x801a6e = 0x6c;\n    *0x801a70 = 0x72;\n    *0x801a71 = 0x6f;\n    *0x801a72 = 0x74;\n    *0x801a73 = 0x65;\n    *0x801a74 = 99;\n    *0xe8cefc = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0xe8ffec);\n    (**0xe8cefc)(*0xe8cf04, *0xe8fffc, 0x40, &stack0xfffffff0);\n    return;\n}\n",
        "token_count": 343
    },
    "00403670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403670(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    int32_t extraout_EDX;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_000010c8;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    iStack12 = *in_FS_OFFSET;\n    uStack8 = 0x7fc1db;\n    *in_FS_OFFSET = &iStack12;\n    fcn.0040f7c0();\n    iVar6 = 0;\n    pcVar1 = _sym.imp.USER32.dll_GetCaretBlinkTime;\n    if (*0xe8fffc == 0x6a6) {\n        (*_sym.imp.KERNEL32.dll_FoldStringW)();\n        (*_sym.imp.GDI32.dll_CreateDiscardableBitmap)();\n        (*_sym.imp.KERNEL32.dll_ReadConsoleOutputCharacterW)();\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)();\n        fcn.00404182(0x801a68, 0x402d9f, 0);\n        fcn.00403f6f();\n        fcn.004041ef(0x7ff6e0);\n        fcn.00404269();\n        fcn.004043aa();\n        fcn.0040437b(0);\n        fcn.00404391(0, 0);\n        fcn.00404520();\n        fcn.00403fd9();\n        fcn.004049e1(0);\n        pcVar1 = _sym.imp.USER32.dll_GetCaretBlinkTime;\n    }\n    do {\n        if (iVar6 < 0xab98) {\n            (*pcVar1)();\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x139c8);\n    *0xe8fffc = *0xe8fffc + 0x11b1b;\n    fcn.00403580();\n    fcn.004035a0();\n    pcVar4 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteVolumeMountPointA;\n    uVar7 = 0;\n    if (*0xe8fffc != 0) {\n        do {\n            *(*0xe8cf04 + uVar7) = *(*0xe9099c + 0x11b1b + uVar7);\n            if (*0xe8fffc == 0xa8) {\n                (*pcVar4)();\n                (*pcVar1)();\n            }\n            uVar7 = uVar7 + 1;\n        } while (uVar7 < *0xe8fffc);\n    }\n    pcVar5 = _sym.imp.KERNEL32.dll_GetConsoleAliasesW;\n    pcVar3 = _sym.imp.KERNEL32.dll_FindNextVolumeA;\n    pcVar4 = _sym.imp.KERNEL32.dll_VirtualFreeEx;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetDefaultCommConfigW;\n    iStack12 = 0;\n    do {\n        if (*0xe8fffc + iStack12 == 0xe) {\n            fcn.00406bd0();\n            (*pcVar1)();\n            (*pcVar4)();\n            (*pcVar3)();\n            (*pcVar5)();\n            (*_sym.imp.KERNEL32.dll_GlobalSize)();\n            (*_sym.imp.KERNEL32.dll_FindResourceExW)();\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)();\n        }\n        pcVar2 = _sym.imp.GDI32.dll_GetCharABCWidthsW;\n        iStack12 = iStack12 + 1;\n    } while (iStack12 < 0x4f95a3);\n    iVar6 = 0x4f4;\n    do {\n        (*pcVar2)();\n        pcVar1 = _sym.imp.KERNEL32.dll_SetLastError;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    do {\n        (*pcVar1)();\n        if (iVar6 < 0x26c0e8) {\n            uStack4 = 0x3c714104;\n            uStack8 = 0x282d67df;\n        }\n    } while ((iVar6 < 0x2735ca) && (iVar6 = iVar6 + 1,  iVar6 < 0x1f6e7e0));\n    fcn.004033f0();\n    iVar6 = 0;\n    do {\n        if (iVar6 == 0x26) {\n            fcn.00403560();\n            iVar6 = extraout_EDX;\n        }\n        pcVar4 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n        pcVar1 = _sym.imp.KERNEL32.dll_WaitNamedPipeA;\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x409495);\n    iVar6 = 0x7b;\n    do {\n        if (*0xe8fffc == 0x86) {\n            (*pcVar4)();\n            (*pcVar1)();\n        }\n        pcVar5 = _sym.imp.KERNEL32.dll_EnumSystemCodePagesW;\n        pcVar3 = _sym.imp.KERNEL32.dll_MoveFileExW;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    iVar6 = 0x180ef;\n    do {\n        if (*0xe8fffc == 0x1f) {\n            (*pcVar5)();\n            (*pcVar3)();\n        }\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n    fcn.00403660();\n    *in_FS_OFFSET = in_stack_000010c8;\n    return;\n}\n",
        "token_count": 1334
    },
    "004040f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040f0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_2c8h;\n    uint var_8fh;\n    \n    fcn.00407724(arg_8h, arg_ch);\n    fcn.00407724(arg_10h, arg_14h);\n    fcn.00409f47();\n    fcn.004075a3();\n    return;\n}\n",
        "token_count": 105
    },
    "00404552": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00404552(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.00409328(0x7fc298, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004073e7();\n        *puVar1 = 0x16;\n        fcn.004044ec(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040ae3b();\n        fcn.0040af53(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040ae3b();\n        arg_8h_00 = fcn.0040aff0(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040ae3b();\n        uVar4 = fcn.0040796a(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040ae3b();\n        fcn.0040b08c(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004045ee();\n    }\n    fcn.0040936d();\n    return;\n}\n",
        "token_count": 464
    },
    "004045ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004045ee(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ae3b();\n    fcn.0040afc1(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "0040462a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040462a(uint arg_8h, uint arg_ch)\n\n{\n    uint var_2c8h;\n    \n    fcn.00407724(arg_8h, arg_ch);\n    fcn.00409ee0();\n    fcn.004075a3();\n    return;\n}\n",
        "token_count": 69
    },
    "004049e1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049e1(uint arg_8h)\n\n{\n    fcn.004048b5(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "0040b2b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b2cc)\n// WARNING: Removing unreachable block (ram,0x0040b2d2)\n// WARNING: Removing unreachable block (ram,0x0040b2d4)\n\nvoid fcn.0040b2b8(void)\n\n{\n    return;\n}\n",
        "token_count": 71
    },
    "00410d36": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00410d36(void)\n\n{\n    *0x7ff3ec = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x402d68, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0040b1bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040b1bc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00409328(0x7fc590, 0xc);\n    fcn.0040882f(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x8013bc;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x8013b8;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040b200;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.004042ad(arg_8h_00);\ncode_r0x0040b200:\n        fcn.004042ad(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040b223();\n    fcn.0040936d();\n    return;\n}\n",
        "token_count": 396
    }
}