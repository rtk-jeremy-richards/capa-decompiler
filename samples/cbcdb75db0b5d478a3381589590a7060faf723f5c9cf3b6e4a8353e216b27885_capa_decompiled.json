{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 24576 named .text\n    iVar3 = *0x42eb70;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar1 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar1)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectA)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar2 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextA)(uVar4, 0x42e360, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar2)(uVar4, uVar6);\n                (*pcVar1)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x42eb68;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 849
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    char *pcVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int32_t **ppiVar9;\n    int32_t iVar10;\n    uint uVar11;\n    int32_t *piVar12;\n    uint32_t uVar13;\n    int32_t iVar14;\n    uint uVar15;\n    int32_t **ppiVar16;\n    uint *puVar17;\n    int32_t **ppiVar18;\n    bool bVar19;\n    uint in_stack_fffffdf0;\n    uint in_stack_fffffdf4;\n    uint uVar20;\n    uint uVar21;\n    int32_t **ppiVar22;\n    uint lpFindFileData;\n    uint *puStack420;\n    uint *puStack416;\n    uint uStack408;\n    char *pcStack404;\n    int32_t **ppiStack400;\n    uint var_178h;\n    int32_t *lpFileOp;\n    uint var_60h;\n    int32_t var_5ch;\n    int32_t var_58h;\n    uint var_54h;\n    uint var_4ah;\n    uint lpValueName;\n    uint lpRect;\n    int32_t var_38h;\n    int32_t *lplpBuffer;\n    int32_t *lpNumberOfBytesRead;\n    int32_t **nNumberOfBytesToWrite;\n    int32_t *var_28h;\n    int32_t *var_24h;\n    int32_t *dwFileAttributes;\n    int32_t *var_1ch;\n    int32_t *lpLastWriteTime;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint8_t lpBuffer;\n    char *lpNumberOfBytesWritten;\n    int32_t *var_4h;\n    \n    ppiVar9 = *0x40af80;\n    pcVar7 = _sym.imp.USER32.dll_ShowWindow;\n    lplpBuffer = *0x42eb68;\n    uVar15 = 0;\n    ppiVar16 = hWndChildAfter;\n    ppiVar18 = &fcn.00401434::var_28h;\n    for (iVar14 = 7; iVar14 != 0; iVar14 = iVar14 + -1) {\n        *ppiVar18 = *ppiVar16;\n        ppiVar16 = ppiVar16 + 1;\n        ppiVar18 = ppiVar18 + 1;\n    }\n    iVar14 = var_24h * 0x400;\n    var_4h = NULL;\n    ppiVar16 = iVar14 + 0x42f000;\n    ppiVar18 = dwFileAttributes * 0x400 + 0x42f000;\n    *0x409b78 = &fcn.00401434::var_24h;\n    if (0x41 < var_28h - 2U) goto code_r0x0040288b;\n    // switch table (66 cases) at 0x40289d\n    switch(*((var_28h - 2U) * 4 + 0x40289d)) {\n    case 0x401490:\ncode_r0x00401492:\n        fcn.00404daa(in_stack_fffffdf0, in_stack_fffffdf4);\n        return 0x7fffffff;\n    case 0x40149c:\n        *0x42e32c = *0x42e32c + 1;\n        if (*0x42eb68 == NULL) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b7:\n        iVar14 = fcn.0040136d(var_24h);\n        piVar12 = fcn.00401389(iVar14 + -1, 0);\n        return piVar12;\n    case 0x4014ca:\n        fcn.00404daa(var_24h, 0);\n        break;\n    case 0x4014d6:\n        iVar14 = fcn.004029d9(0);\n        if (iVar14 < 2) {\n            iVar14 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar14);\n        break;\n    case 0x4014f0:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(*0x42eb68);\n        break;\n    case 0x4014fe:\n        iVar14 = var_24h * 4;\n        if (var_1ch == NULL) {\n            *(iVar14 + 0x42ec20) = *(iVar14 + 0x42ebe0);\n            uVar15 = fcn.004029d9(1);\n            *(var_24h * 4 + 0x42ebe0) = uVar15;\n        }\n        else {\n            *(iVar14 + 0x42ebe0) = *(iVar14 + 0x42ec20);\n        }\n        break;\n    case 0x401539:\n        puVar1 = var_1ch * 4 + 0x42ebe0;\n        uVar13 = *puVar1;\n        piVar12 = (&fcn.00401434::var_24h)[uVar13 == 0];\n        *puVar1 = uVar13 & lpLastWriteTime;\n        return piVar12;\n    case 0x40155a:\n        goto code_r0x00402833;\n    case 0x401567:\n        if (*0x42e330 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42e330, dwFileAttributes);\n        }\n        if (*0x42e344 != 0) {\n            (*pcVar7)(*0x42e344, var_24h);\n        }\n        break;\n    case 0x401595:\n        uVar15 = fcn.004029f6(0xfffffff0);\n        iVar14 = (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(uVar15, dwFileAttributes);\n        goto code_r0x004015a6;\n    case 0x4015b3:\n        uVar15 = fcn.004029f6(0xfffffff0);\n        puVar3 = fcn.00405593(uVar15);\n        if (puVar3 != NULL) {\n            do {\n                puVar3 = fcn.0040552a(puVar3, 0x5c);\n                uVar2 = *puVar3;\n                *puVar3 = 0;\n                hWndChildAfter = hWndChildAfter & 0xffffff | uVar2 << 0x18;\n                iVar14 = (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(uVar15, 0);\n                if ((iVar14 == 0) &&\n                   ((iVar14 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar14 != 0xb7 ||\n                    (uVar13 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(uVar15),  (uVar13 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *puVar3 = hWndChildAfter._3_1_;\n                puVar3 = puVar3 + 1;\n            } while (hWndChildAfter._3_1_ != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x00402164;\n        fcn.00401423(0xffffffe6);\n        fcn.00405a0c(0x434800, uVar15);\n        (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(uVar15);\n        break;\n    case 0x401634:\n        uVar15 = fcn.004029f6(0);\n        iVar14 = fcn.00405d07(uVar15);\n        lpLastWriteTime = dwFileAttributes;\n        goto joined_r0x004019d4;\n    case 0x401645:\n        uVar15 = fcn.004029f6(0xffffffd0);\n        uVar11 = fcn.004029f6(0xffffffdf);\n        fcn.004029f6(0x13);\n        iVar14 = (*_sym.imp.KERNEL32.dll_MoveFileA)(uVar15, uVar11);\n        if (iVar14 == 0) {\n            if ((var_1ch == NULL) || (iVar14 = fcn.00405d07(uVar15),  iVar14 == 0)) goto code_r0x0040265c;\n            fcn.0040575a(uVar15, uVar11);\n        }\n        goto code_r0x00402164;\n    case 0x401696:\n        ppiVar9 = fcn.004029f6(0);\n        iVar14 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(ppiVar9, 0x400, ppiVar18, &fcn.00401434::hWndChildAfter);\n        if (iVar14 == 0) {\ncode_r0x004016d6:\n            var_4h = 0x1;\n            *ppiVar18 = 0;\n        }\n        else if ((ppiVar9 < hWndChildAfter) && (*hWndChildAfter != '\\0')) {\n            iVar14 = fcn.00405d07(ppiVar9);\n            if (iVar14 == 0) goto code_r0x004016d6;\n            fcn.00405a0c(hWndChildAfter, iVar14 + 0x2c);\n        }\n        if (var_1ch == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameA)(ppiVar18, ppiVar18, 0x400);\n        }\n        break;\n    case 0x4016fa:\n        uVar15 = fcn.004029f6(0xffffffff);\n        iVar14 = (*_sym.imp.KERNEL32.dll_SearchPathA)(0, uVar15, 0, 0x400, ppiVar16, &fcn.00401434::hWndChildAfter);\n        goto code_r0x00401716;\n    case 0x401721:\n        uVar15 = fcn.004029f6(0xffffffef);\n        iVar14 = fcn.00405712(ppiVar16, uVar15);\n        goto code_r0x004015a6;\n    case 0x401734:\n        pcVar5 = fcn.004029f6(0x31);\n        hWndChildAfter = var_24h & 7;\n        lpNumberOfBytesWritten = pcVar5;\n        iVar14 = fcn.0040556c(pcVar5);\n        if (iVar14 == 0) {\n            uVar11 = 0x434800;\n            uVar15 = fcn.00405a0c(0x409b80, 0x434800, pcVar5);\n            uVar15 = fcn.004054ff(uVar15);\n            sub.KERNEL32.dll_lstrcatA(uVar15);\n        }\n        else {\n            uVar11 = 0x409b80;\n            fcn.00405a0c(0x409b80);\n        }\n        fcn.00405c6e(0x409b80);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar14 = fcn.00405d07(0x409b80);\n                uVar13 = 0;\n                if (iVar14 != 0) {\n                    uVar13 = (*_sym.imp.KERNEL32.dll_CompareFileTime)(iVar14 + 0x14, &fcn.00401434::lpLastWriteTime);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar13) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.004056c4(0x409b80);\n            }\n            lplpBuffer = fcn.004056e3(0x409b80, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (lplpBuffer != 0xffffffff) {\n                fcn.00404daa(0xffffffea, lpNumberOfBytesWritten);\n                *0x42ec14 = *0x42ec14 + 1;\n                iVar14 = fcn.00402e5b(var_1ch, lplpBuffer, 0, 0);\n                *0x42ec14 = *0x42ec14 + -1;\n                if ((lpLastWriteTime != 0xffffffff) || (var_14h != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (lplpBuffer, &fcn.00401434::lpLastWriteTime, 0, &fcn.00401434::lpLastWriteTime);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(lplpBuffer);\n                if (-1 < iVar14) goto code_r0x0040288b;\n                if (iVar14 == -2) {\n                    uVar21 = 0xffffffe9;\n                    fcn.00405a2e(0x409b80, 0xffffffe9);\n                    uVar20 = 0x409b80;\n                    sub.KERNEL32.dll_lstrcatA(uVar11, lpNumberOfBytesWritten, 0x409b80);\n                }\n                else {\n                    uVar21 = 0xffffffee;\n                    uVar20 = 0x409b80;\n                    fcn.00405a2e(0x409b80, 0xffffffee);\n                }\n                uVar11 = 0x200010;\n                uVar15 = 0x409b80;\n                goto code_r0x00402209;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.00404daa(0xffffffe2, lpNumberOfBytesWritten);\n                bVar19 = hWndChildAfter == 0x2;\n                goto code_r0x004015a8;\n            }\n            fcn.00405a0c(0x40a380, 0x42f000);\n            fcn.00405a0c(0x42f000, 0x409b80);\n            fcn.00405a2e(0x409f80, var_10h);\n            fcn.00405a0c(0x42f000, 0x40a380);\n            iVar14 = fcn.004052cd();\n        } while (iVar14 == 4);\n        if (iVar14 != 5) {\n            in_stack_fffffdf4 = 0x409b80;\n            in_stack_fffffdf0 = 0xfffffffa;\n            goto code_r0x00401492;\n        }\n        *0x42ebe8 = *0x42ebe8 + 1;\n        goto code_r0x00402894;\n    case 0x4018d8:\n        uVar15 = 0;\n        goto code_r0x0040190f;\n    case 0x4018db:\n        uVar15 = fcn.004029f6(0x31);\n        piVar12 = fcn.004052cd(uVar15, var_24h);\n        if (piVar12 == NULL) goto code_r0x0040265c;\n        if (piVar12 == var_1ch) {\n            return lpLastWriteTime;\n        }\n        if (piVar12 == var_14h) {\n            return var_10h;\n        }\n        break;\n    case 0x40190d:\n        uVar15 = 0xfffffff0;\ncode_r0x0040190f:\n        uVar15 = fcn.004029f6(uVar15);\n        fcn.00405331(uVar15, dwFileAttributes);\n        break;\n    case 0x401922:\n        uVar15 = fcn.004029f6(1);\n        sub.KERNEL32.dll_lstrlenA(uVar15);\n        goto code_r0x00402833;\n    case 0x401934:\n        hWndChildAfter = fcn.004029d9(2);\n        iVar14 = fcn.004029d9(3);\n        nNumberOfBytesToWrite = fcn.004029f6(1);\n        *ppiVar16 = 0;\n        if (((var_1ch == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar10 = sub.KERNEL32.dll_lstrlenA(nNumberOfBytesToWrite),  -1 < iVar14 ||\n            (iVar14 = iVar14 + iVar10,  -1 < iVar14)))) {\n            if (iVar10 < iVar14) {\n                iVar14 = iVar10;\n            }\n            fcn.00405a0c(ppiVar16, nNumberOfBytesToWrite + iVar14);\n            iVar14 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar10 = sub.KERNEL32.dll_lstrlenA(ppiVar16);\n                    hWndChildAfter = iVar14 + iVar10;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(hWndChildAfter + ppiVar16) = 0;\n                }\n            }\n        }\n        break;\n    case 0x4019b5:\n        uVar15 = fcn.004029f6(0x20);\n        uVar11 = fcn.004029f6(0x31);\n        if (var_14h == NULL) {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        }\n        else {\n            iVar14 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(uVar15, uVar11);\n        }\n        goto joined_r0x004019d4;\n    case 0x4019e6:\n        hWndChildAfter = fcn.004029f6(1);\n        iVar10 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsA)(hWndChildAfter, ppiVar16, 0x400);\n        if ((iVar10 == 0) ||\n           ((var_1ch != NULL && (iVar10 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(hWndChildAfter, ppiVar16),  iVar10 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        *(iVar14 + 0x42f3ff) = 0;\n        break;\n    case 0x401a26:\n        uVar13 = fcn.004029d9(0);\n        uVar4 = fcn.004029d9(1);\n        if (var_10h != NULL) {\n            if (uVar13 < uVar4) {\n                return lpLastWriteTime;\n            }\n            if (uVar13 <= uVar4) {\n                return var_1ch;\n            }\n            return var_14h;\n        }\n        if (uVar13 < uVar4) {\n            return lpLastWriteTime;\n        }\n        if (uVar13 <= uVar4) {\n            return var_1ch;\n        }\n        return var_14h;\n    case 0x401a58:\n        fcn.004029d9(1);\n        iVar14 = fcn.004029d9(2);\n        if (0xc < lpLastWriteTime) goto code_r0x00402833;\n    // switch table (13 cases) at 0x4029a5\n        switch(*(lpLastWriteTime * 4 + 0x4029a5)) {\n        case 0x401a79:\n            break;\n        case 0x401a7d:\n            break;\n        case 0x401a81:\n            break;\n        case 0x401a88:\n            goto joined_r0x00401ac3;\n        case 0x401a95:\n            break;\n        case 0x401a99:\n            break;\n        case 0x401a9d:\n            break;\n        case 0x401aa1:\n            break;\n        case 0x401aaa:\n            break;\n        case 0x401ab4:\n            break;\n        case 0x401ac1:\njoined_r0x00401ac3:\n            if (iVar14 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401ad9:\n            break;\n        case 0x401add:\n        }\n        goto code_r0x00402833;\n    case 0x401ae5:\n        uVar15 = fcn.004029f6(1);\n        uVar11 = fcn.004029d9(2);\n        (*_sym.imp.USER32.dll_wsprintfA)(ppiVar16, uVar15, uVar11);\n        break;\n    case 0x401b06:\n        if (var_1ch != NULL) {\n            do {\n                var_1ch = var_1ch + -1;\n                if (ppiVar9 == NULL) goto code_r0x004021fb;\n                ppiVar9 = *ppiVar9;\n            } while (var_1ch != NULL);\n            if (ppiVar9 == NULL) goto code_r0x004021fb;\n            puVar17 = 0x409b80;\n            fcn.00405a0c(0x409b80, ppiVar9 + 1);\n            ppiVar16 = *0x40af80 + 1;\n            fcn.00405a0c(ppiVar9 + 1, ppiVar16);\n            goto code_r0x004027b1;\n        }\n        if (dwFileAttributes != NULL) {\n            if (*0x40af80 != NULL) {\n                fcn.00405a0c(ppiVar16, *0x40af80 + 1);\n                *0x40af80 = *ppiVar9;\n                ppiVar22 = ppiVar16;\n                goto code_r0x00401b75;\n            }\n            goto code_r0x0040265c;\n        }\n        ppiVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x404);\n        fcn.00405a2e(ppiVar9 + 1, var_24h);\n        *ppiVar9 = *0x40af80;\n        *0x40af80 = ppiVar9;\n        break;\n    case 0x401bad:\n        lplpBuffer = fcn.004029d9(3);\n        hWndChildAfter = fcn.004029d9(4);\n        if ((var_10h & 1) != 0) {\n            lplpBuffer = fcn.004029f6(0x33);\n        }\n        if ((var_10h & 2) != 0) {\n            hWndChildAfter = fcn.004029f6(0x44);\n        }\n        if (var_28h == 0x21) {\n            uVar15 = fcn.004029d9();\n            uVar11 = fcn.004029d9(2);\n            if (var_10h >> 2 == 0) {\n                lpNumberOfBytesWritten = (*_sym.imp.USER32.dll_SendMessageA)(uVar15, uVar11, lplpBuffer, hWndChildAfter)\n                ;\n                dwFileAttributes = var_24h;\n            }\n            else {\n                iVar14 = (*_sym.imp.USER32.dll_SendMessageTimeoutA)\n                                   (uVar15, uVar11, lplpBuffer, hWndChildAfter, 0, var_10h >> 2, \n                                    &fcn.00401434::lpNumberOfBytesWritten);\n                var_4h = iVar14 == 0;\n                dwFileAttributes = var_24h;\n            }\n        }\n        else {\n            pcVar5 = fcn.004029f6(1);\n            pcVar6 = fcn.004029f6(0x12);\n            lpNumberOfBytesWritten =\n                 (*_sym.imp.USER32.dll_FindWindowExA)\n                           (lplpBuffer, hWndChildAfter, -(*pcVar5 != '\\0') & pcVar5, -(*pcVar6 != '\\0') & pcVar6);\n            dwFileAttributes = var_24h;\n        }\njoined_r0x004025ef:\n        if (-1 < dwFileAttributes) goto code_r0x00402833;\n        break;\n    case 0x401c6d:\n        uVar15 = fcn.004029d9(0);\n        iVar14 = (*_sym.imp.USER32.dll_IsWindow)(uVar15);\n        lpLastWriteTime = dwFileAttributes;\njoined_r0x004019d4:\n        if (iVar14 == 0) {\n            return var_1ch;\n        }\n        return lpLastWriteTime;\n    case 0x401c8a:\n        uVar15 = fcn.004029d9(2);\n        uVar15 = fcn.004029d9(1, uVar15);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar15);\n        goto code_r0x00402833;\n    case 0x401ca5:\n        uVar15 = fcn.004029d9(0, 0xffffffeb, *0x42eba8 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongA)(uVar15);\n        break;\n    case 0x401cc1:\n        uVar15 = (*_sym.imp.USER32.dll_GetDlgItem)(*0x42eb68, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar15, &fcn.00401434::lpRect);\n        uVar11 = fcn.004029f6(0, 0, var_38h * var_1ch, lplpBuffer * var_1ch, 0x10);\n        uVar11 = (*_sym.imp.USER32.dll_LoadImageA)(0, uVar11);\n        iVar14 = (*_sym.imp.USER32.dll_SendMessageA)(uVar15, 0x172, 0, uVar11);\n        if (iVar14 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar14);\n        }\n        break;\n    case 0x401d1b:\n        uVar15 = (*_sym.imp.USER32.dll_GetDC)(*0x42eb68, 0x5a, 0x48);\n        uVar15 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar15);\n        uVar15 = fcn.004029d9(2, uVar15);\n        *0x40af84 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar15);\n        *0x40af84 = -*0x40af84;\n        *0x40af94 = fcn.004029d9(3);\n        *0x40af98 = var_14h & 1;\n        *0x40af9b = 1;\n        *0x40af99 = var_14h & 2;\n        *0x40af9a = var_14h & 4;\n        fcn.00405a2e(0x40afa0, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectA)(0x40af84);\ncode_r0x00402833:\n        fcn.0040596a(ppiVar16);\n        break;\n    case 0x401d95:\n        uVar15 = fcn.004029d9(0);\n        uVar11 = fcn.004029d9(1);\n        if (lpLastWriteTime == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, uVar11);\n        }\n        break;\n    case 0x401dc1:\n        pcVar5 = fcn.004029f6(0);\n        uVar15 = fcn.004029f6(0x31);\n        pcVar6 = fcn.004029f6(0x22);\n        fcn.004029f6(0x15);\n        fcn.00401423(0xffffffec);\n        iVar14 = (*_sym.imp.SHELL32.dll_ShellExecuteA)\n                           (lplpBuffer, -(*pcVar5 != '\\0') & pcVar5, uVar15, -(*pcVar6 != '\\0') & pcVar6, 0x434800, \n                            lpLastWriteTime);\n        if (iVar14 < 0x21) goto code_r0x0040265c;\n        break;\n    case 0x401e1b:\n        uVar15 = fcn.004029f6(0);\n        uVar11 = 0xffffffeb;\n        fcn.00404daa(0xffffffeb, uVar15);\n        hWndChildAfter = fcn.0040526c(uVar15);\n        pcVar7 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x0040265c;\n        ppiVar9 = hWndChildAfter;\n        if (var_1ch != NULL) {\n            while (iVar14 = (*pcVar7)(hWndChildAfter, 100),  iVar14 == 0x102) {\n                fcn.00405d67(0xf);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::lpNumberOfBytesWritten);\n            if (dwFileAttributes < 0) {\n                ppiVar9 = hWndChildAfter;\n                if (lpNumberOfBytesWritten != NULL) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.0040596a(uVar11, lpNumberOfBytesWritten, ppiVar18);\n                ppiVar9 = hWndChildAfter;\n            }\n        }\ncode_r0x00401e8a:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar9);\n        break;\n    case 0x401e95:\n        uVar15 = fcn.004029f6(2);\n        hWndChildAfter = fcn.00405d07(uVar15);\n        if (hWndChildAfter != NULL) {\n            fcn.0040596a(ppiVar18, hWndChildAfter[5]);\n            goto code_r0x00402833;\n        }\n        *ppiVar16 = 0;\n        *ppiVar18 = 0;\n        goto code_r0x0040265c;\n    case 0x401ec5:\n        nNumberOfBytesToWrite = fcn.004029f6(0xffffffee);\n        lpNumberOfBytesWritten =\n             sub.VERSION.dll_GetFileVersionInfoSizeA(nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesRead);\n        *ppiVar16 = 0;\n        *ppiVar18 = 0;\n        var_4h = 0x1;\n        if ((lpNumberOfBytesWritten != NULL) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, lpNumberOfBytesWritten),  hWndChildAfter != NULL\n           )) {\n            pcStack404 = lpNumberOfBytesWritten;\n            uStack408 = 0;\n            puStack416 = 0x401f10;\n            ppiVar22 = nNumberOfBytesToWrite;\n            ppiStack400 = hWndChildAfter;\n            iVar14 = sub.VERSION.dll_GetFileVersionInfoA();\n            ppiVar9 = hWndChildAfter;\n            if (iVar14 != 0) {\n                puStack416 = &fcn.00401434::lpValueName;\n                puStack420 = &fcn.00401434::lplpBuffer;\n                lpFindFileData = 0x409010;\n                ppiVar22 = hWndChildAfter;\n                iVar14 = sub.VERSION.dll_VerQueryValueA();\n                ppiVar9 = hWndChildAfter;\n                if (iVar14 != 0) {\n                    fcn.0040596a(ppiVar16, lplpBuffer[2]);\n                    fcn.0040596a(ppiVar18, lplpBuffer[3]);\n                    var_4h = NULL;\n                    ppiVar9 = hWndChildAfter;\n                    ppiVar22 = ppiVar18;\n                }\n            }\ncode_r0x00401b75:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar9, ppiVar22);\n        }\n        break;\n    case 0x401f50:\n        var_4h = 0x1;\n        if (-1 < *0x42ec18) {\n            uVar15 = fcn.004029f6(0xfffffff0);\n            hWndChildAfter = fcn.004029f6(1);\n            if (((var_14h != NULL) && (iVar14 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar15),  iVar14 != 0)) ||\n               (iVar14 = (*_sym.imp.KERNEL32.dll_LoadLibraryExA)(uVar15, 0, 8),  iVar14 != 0)) {\n                pcVar7 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar14, hWndChildAfter);\n                if (pcVar7 == NULL) {\n                    fcn.00404daa(0xfffffff7, hWndChildAfter);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_1ch == NULL) {\n                        (*pcVar7)(lplpBuffer, 0x400, 0x42f000, 0x40af80, 0x409000);\n                    }\n                    else {\n                        fcn.00401423(var_1ch);\n                        iVar10 = (*pcVar7)();\n                        if (iVar10 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((lpLastWriteTime == NULL) && (iVar10 = fcn.004034f5(iVar14),  iVar10 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(iVar14);\n                }\n                break;\n            }\n        }\n        goto code_r0x00402164;\n    case 0x402020:\n        lpNumberOfBytesRead = fcn.004029f6(0xfffffff0);\n        uVar15 = fcn.004029f6(0xffffffdf);\n        nNumberOfBytesToWrite = fcn.004029f6(2);\n        lpNumberOfBytesWritten = fcn.004029f6(0xffffffcd);\n        lpValueName = fcn.004029f6(0x45);\n        iVar14 = fcn.0040556c(uVar15);\n        if (iVar14 == 0) {\n            fcn.004029f6(0x21);\n        }\n        iVar14 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x407490, 0, 1, 0x407480, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar14) {\n            iVar14 = (***hWndChildAfter)(hWndChildAfter, 0x4074a0, &fcn.00401434::lplpBuffer);\n            if (-1 < iVar14) {\n                iVar14 = (*(*hWndChildAfter)[0x14])(hWndChildAfter, uVar15);\n                (*(*hWndChildAfter)[9])(hWndChildAfter, 0x434800);\n                uVar13 = var_14h >> 8 & 0xff;\n                if (uVar13 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar13);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_14h >> 0x10);\n                if (*lpNumberOfBytesWritten != '\\0') {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lpNumberOfBytesWritten, var_14h & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, nNumberOfBytesToWrite);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpValueName);\n                if (-1 < iVar14) {\n                    iVar14 = -0x7fffbffb;\n                    iVar10 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (0, 0, lpNumberOfBytesRead, 0xffffffff, 0x409378, 0x400);\n                    if (iVar10 != 0) {\n                        iVar14 = (**(*lplpBuffer + 0x18))(lplpBuffer, 0x409378, 1);\n                    }\n                }\n                (**(*lplpBuffer + 8))(lplpBuffer);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < iVar14) goto code_r0x00402164;\n        }\n        var_4h = 0x1;\n        goto code_r0x00402164;\n    case 0x402172:\n        iVar14 = fcn.004029f6(0);\n        iVar10 = fcn.004029f6(0x11);\n        hWndChildAfter = fcn.004029f6(0x23);\n        iVar8 = fcn.00405d07(iVar14);\n        if (iVar8 != 0) {\n            lpFileOp = lplpBuffer;\n            var_60h = 2;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar14);\n            *(iVar8 + 1 + iVar14) = 0;\n            iVar8 = sub.KERNEL32.dll_lstrlenA(iVar10);\n            *(iVar8 + 1 + iVar10) = 0;\n            var_4ah = hWndChildAfter;\n            var_54h._0_2_ = var_1ch._0_2_;\n            var_5ch = iVar14;\n            var_58h = iVar10;\n            fcn.00404daa(0, hWndChildAfter);\n            iVar14 = (*_sym.imp.SHELL32.dll_SHFileOperationA)(&fcn.00401434::lpFileOp);\n            if (iVar14 == 0) break;\n        }\n        fcn.00404daa(0xfffffff9, 0);\n        goto code_r0x0040265c;\n    case 0x4021f4:\n        if (var_24h != 0xbadf00d) {\ncode_r0x004021fb:\n            uVar21 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar11 = 0;\n            uVar15 = fcn.00405a2e(0, 0xffffffe8);\ncode_r0x00402209:\n            fcn.004052cd(uVar15, uVar11, uVar20, uVar21);\n            return 0x7fffffff;\n        }\n        *0x42ebf4 = *0x42ebf4 + 1;\n        break;\n    case 0x402223:\n        uVar11 = 0;\n        uVar20 = 0;\n        if (var_24h != NULL) {\n            uVar11 = fcn.004029f6(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar20 = fcn.004029f6(0x11);\n        }\n        if (var_14h != NULL) {\n            uVar15 = fcn.004029f6(0x22);\n        }\n        uVar21 = fcn.004029f6(0xffffffcd);\n        iVar14 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(uVar11, uVar20, uVar15, uVar21);\ncode_r0x004015a6:\n        bVar19 = iVar14 == 0;\ncode_r0x004015a8:\n        if (bVar19) goto code_r0x0040265c;\n        break;\n    case 0x402267:\n        hWndChildAfter = 0x7e4e21;\n        uVar15 = fcn.004029f6(1);\n        lpNumberOfBytesRead = fcn.004029f6(0x12);\n        uVar11 = fcn.004029f6(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (uVar15, lpNumberOfBytesRead, &fcn.00401434::hWndChildAfter, ppiVar16, 0x3ff, uVar11);\n        iVar14 = *ppiVar16 - hWndChildAfter;\ncode_r0x00401716:\n        if (iVar14 == 0) {\ncode_r0x00402630:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x4022a7:\n        if (var_14h == NULL) {\n            iVar10 = fcn.00402b00(2);\n            if (iVar10 == 0) goto code_r0x0040265c;\n            uVar15 = fcn.004029f6(0x33);\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar10, uVar15);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar10);\n        }\n        else {\n            uVar15 = fcn.004029f6(0x22);\n            uVar11 = fcn.00402aeb(dwFileAttributes, uVar15, var_14h & 2);\n            iVar14 = fcn.00402a36(uVar11, dwFileAttributes, uVar15);\n        }\n        if (iVar14 != 0) goto code_r0x0040265c;\n        break;\n    case 0x402303:\n        uVar15 = fcn.00402aeb(var_24h);\n        lpNumberOfBytesRead = var_10h;\n        lpValueName = fcn.004029f6(2);\n        uVar11 = fcn.004029f6(0x11);\n        var_4h = 0x1;\n        piVar12 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                            (uVar15, uVar11, 0, 0, 0, *0x42ec10 | 2, 0, &fcn.00401434::hWndChildAfter, 0);\n        if (piVar12 == NULL) {\n            if (var_14h == 0x1) {\n                fcn.004029f6(0x23);\n                iVar14 = sub.KERNEL32.dll_lstrlenA(0x40a380);\n                piVar12 = iVar14 + 1;\n            }\n            if (var_14h == 0x4) {\n                *0x40a380 = fcn.004029d9(3);\n                piVar12 = var_14h;\n            }\n            if (var_14h == 0x3) {\n                piVar12 = fcn.00402e5b(lpLastWriteTime, 0, 0x40a380, 0xc00);\n            }\n            iVar14 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)\n                               (hWndChildAfter, lpValueName, 0, lpNumberOfBytesRead, 0x40a380, piVar12);\n            ppiVar9 = hWndChildAfter;\n            if (iVar14 == 0) {\n                var_4h = NULL;\n            }\n            goto code_r0x0040247d;\n        }\n        break;\n    case 0x4023af:\n        ppiVar9 = fcn.00402b00(0x20019);\n        uVar15 = fcn.004029f6(0x33);\n        *ppiVar16 = 0;\n        if (ppiVar9 == NULL) goto code_r0x0040265c;\n        lpNumberOfBytesWritten = 0x3ff;\n        iVar14 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)\n                           (ppiVar9, uVar15, 0, &fcn.00401434::hWndChildAfter, ppiVar16, \n                            &fcn.00401434::lpNumberOfBytesWritten);\n        if (iVar14 == 0) {\n            if (hWndChildAfter == 0x4) {\n                var_4h = var_14h == NULL;\n                fcn.0040596a();\n            }\n            else {\n                if ((hWndChildAfter != 0x1) && (hWndChildAfter != 0x2)) goto code_r0x00402420;\n                var_4h = var_14h;\n                lpNumberOfBytesWritten[ppiVar16] = '\\0';\n            }\n        }\n        else {\ncode_r0x00402420:\n            *ppiVar16 = 0;\n            var_4h = 0x1;\n        }\ncode_r0x0040247d:\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar9);\n        break;\n    case 0x402427:\n        ppiVar9 = fcn.00402b00(0x20019);\n        uVar15 = fcn.004029d9(3);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_14h == NULL) {\n                iVar10 = (*_sym.imp.ADVAPI32.dll_RegEnumValueA)\n                                   (ppiVar9, uVar15, ppiVar16, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar10 != 0) goto code_r0x0040265c;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(ppiVar9, uVar15, ppiVar16, 0x3ff);\n            }\n            *(iVar14 + 0x42f3ff) = 0;\n            goto code_r0x0040247d;\n        }\n        goto code_r0x0040265c;\n    case 0x402488:\n        if (*ppiVar16 != '\\0') {\n            ppiVar9 = fcn.00405983(ppiVar16);\n            goto code_r0x00401e8a;\n        }\n        break;\n    case 0x40249c:\n        uVar15 = fcn.004029f6(0xffffffed);\n        iVar14 = fcn.004056e3(uVar15, dwFileAttributes, var_1ch);\n        if (iVar14 != -1) goto code_r0x00402833;\ncode_r0x0040265a:\n        *ppiVar16 = 0;\n        goto code_r0x0040265c;\n    case 0x4024be:\n        if (var_1ch == NULL) {\n            uVar15 = fcn.004029f6(0x11);\n            uVar15 = sub.KERNEL32.dll_lstrlenA(uVar15);\n        }\n        else {\n            *0x409f80 = fcn.004029d9(1);\n            uVar15 = 1;\n        }\n        if (*ppiVar16 != '\\0') {\n            puVar17 = &fcn.00401434::hWndChildAfter;\n            uVar21 = 0;\n            uVar20 = 0x409f80;\n            uVar11 = fcn.00405983(ppiVar16);\n            iVar14 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar11, ppiVar16, uVar20, uVar15, puVar17, uVar21);\n            goto code_r0x004015a6;\n        }\ncode_r0x0040265c:\n        var_4h = 0x1;\n        break;\n    case 0x402506:\n        nNumberOfBytesToWrite = NULL;\n        lplpBuffer = fcn.004029d9(2);\n        if (lplpBuffer < 1) break;\n        if (0x3ff < lplpBuffer) {\n            lplpBuffer = 0x3ff;\n        }\n        iVar14 = nNumberOfBytesToWrite;\n        if (*ppiVar16 != '\\0') {\n            hWndChildAfter = hWndChildAfter & 0xffffff;\n            lpNumberOfBytesWritten = fcn.00405983(ppiVar16);\n            iVar14 = nNumberOfBytesToWrite;\n            if (0 < lplpBuffer) {\n                while( true ) {\n                    iVar10 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                       (lpNumberOfBytesWritten, &stack0xfffffff3, 1, &fcn.00401434::lpNumberOfBytesRead\n                                        , 0);\n                    if ((iVar10 == 0) || (lpNumberOfBytesRead != 0x1)) goto code_r0x004025c1;\n                    if (lpLastWriteTime != NULL) {\n                        fcn.0040596a(ppiVar18, lpBuffer);\n                        goto code_r0x00402894;\n                    }\n                    if ((hWndChildAfter._3_1_ == 0xd) || (hWndChildAfter._3_1_ == 10)) break;\n                    *(iVar14 + ppiVar18) = lpBuffer;\n                    iVar14 = iVar14 + 1;\n                    hWndChildAfter = hWndChildAfter & 0xffffff | lpBuffer << 0x18;\n                    if ((lpBuffer == 0) || (lplpBuffer <= iVar14)) goto code_r0x004025c1;\n                }\n                if ((hWndChildAfter._3_1_ == lpBuffer) || ((lpBuffer != 0xd && (lpBuffer != 10)))) {\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(lpNumberOfBytesWritten, 0xffffffff, 0, 1);\n                }\n                else {\n                    *(iVar14 + ppiVar18) = lpBuffer;\n                    iVar14 = iVar14 + 1;\n                }\n            }\n        }\ncode_r0x004025c1:\n        *(iVar14 + ppiVar18) = 0;\n        bVar19 = iVar14 == 0;\n        goto code_r0x004015a8;\n    case 0x4025cb:\n        if (*ppiVar16 != '\\0') {\n            uVar15 = fcn.004029d9(2, 0, lpLastWriteTime);\n            uVar11 = fcn.00405983(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar11, ppiVar16, uVar15);\n            ppiVar16 = ppiVar18;\n            goto joined_r0x004025ef;\n        }\n        break;\n    case 0x4025fa:\n        if (*ppiVar16 != '\\0') {\n            uVar15 = fcn.00405983(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar15);\n        }\n        break;\n    case 0x402614:\n        if (*ppiVar18 != '\\0') {\n            puVar17 = &fcn.00401434::lpFindFileData;\n            uVar15 = fcn.00405983(ppiVar18);\n            iVar14 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(uVar15, ppiVar18, puVar17);\n            if (iVar14 != 0) goto code_r0x0040266f;\n        }\n        goto code_r0x00402630;\n    case 0x40263e:\n        uVar15 = fcn.004029f6(2);\n        iVar14 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(uVar15, &fcn.00401434::lpFindFileData);\n        if (iVar14 == -1) {\n            *ppiVar18 = 0;\n            goto code_r0x0040265a;\n        }\n        fcn.0040596a(ppiVar18, iVar14);\ncode_r0x0040266f:\n        puVar17 = &fcn.00401434::var_178h;\ncode_r0x004027b1:\n        fcn.00405a0c(ppiVar16, puVar17);\n        break;\n    case 0x40267c:\n        lpNumberOfBytesWritten = 0xfffffd66;\n        uVar15 = fcn.004029f6(0xfffffff0);\n        lpValueName = uVar15;\n        iVar14 = fcn.0040556c(uVar15);\n        if (iVar14 == 0) {\n            fcn.004029f6(0xffffffed);\n        }\n        fcn.004056c4(uVar15);\n        hWndChildAfter = fcn.004056e3(uVar15, 0x40000000, 2);\n        pcVar7 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x42eb74;\n            iVar14 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42eb74);\n            if (iVar14 != 0) {\n                fcn.004030af(0);\n                fcn.0040307d(iVar14, nNumberOfBytesToWrite);\n                piVar12 = (*pcVar7)(0x40, var_1ch);\n                lpNumberOfBytesRead = piVar12;\n                if (piVar12 != NULL) {\n                    fcn.00402e5b(dwFileAttributes, 0, piVar12, var_1ch);\n                    for (; *piVar12 != '\\0'; piVar12 = piVar12 + var_38h + 8) {\n                        var_38h = *piVar12;\n                        dwFileAttributes = piVar12[1] + iVar14;\n                        fcn.004056a4();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lpNumberOfBytesRead, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar14, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar14);\n                lpNumberOfBytesWritten = fcn.00402e5b(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lpNumberOfBytesWritten < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpValueName);\n            var_4h = 0x1;\n        }\ncode_r0x00402164:\n        fcn.00401423();\n        break;\n    case 0x40277d:\n        hWndChildAfter = fcn.004029d9(0);\n        if (*0x42eb8c <= hWndChildAfter) goto code_r0x0040265c;\n        iVar14 = hWndChildAfter * 0x418 + *0x42eb88;\n        if (-1 < var_1ch) {\n            ppiVar16 = ppiVar18;\n            if (var_1ch == NULL) {\n                puVar17 = iVar14 + 0x18;\n                goto code_r0x004027b1;\n            }\n            goto code_r0x00402833;\n        }\n        var_1ch = -1 - var_1ch;\n        if (var_1ch == NULL) {\n            fcn.00405a2e(iVar14 + 0x18, var_14h);\n            *(iVar14 + 9) = *(iVar14 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.004029d9(1);\n        }\n        *(iVar14 + var_1ch * 4) = dwFileAttributes;\n        if (lpLastWriteTime != NULL) {\n            fcn.0040117d(hWndChildAfter);\n        }\n        break;\n    case 0x402803:\n        uVar13 = fcn.004029d9(0);\n        if (0x1f < uVar13) goto code_r0x0040265c;\n        if (lpLastWriteTime == NULL) {\n            if (var_1ch == NULL) {\n                fcn.00405a2e(ppiVar18, *(*0x42eb70 + 0x94 + uVar13 * 4));\n            }\n            else {\n                *(*0x42eb70 + 0x94 + uVar13 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_1ch == NULL) {\n                fcn.004012e2(0);\n                ppiVar16 = ppiVar18;\n                goto code_r0x00402833;\n            }\n            fcn.00401299(uVar13);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x402866:\n        (*_sym.imp.USER32.dll_SendMessageA)(*0x42eb68, 0xb, *0x42afe0 & var_24h, 0);\n        if (var_24h != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lplpBuffer, 0, 0);\n        }\n        break;\n    case 0x402896:\n        goto code_r0x00402896;\n    }\ncode_r0x0040288b:\n    *0x42ebe8 = *0x42ebe8 + var_4h;\ncode_r0x00402894:\n    var_24h = NULL;\ncode_r0x00402896:\n    return var_24h;\n}\n",
        "token_count": 12811
    },
    "00402c22": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00402c22(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t arg_ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x42eb6c = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x42eb6c = *0x42eb6c + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x435c00, 0x400);\n    puVar1 = fcn.004056e3(0x435c00, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x409014 = puVar1;\n        return \"Error launching installer\";\n    }\n    *0x409014 = puVar1;\n    hFile = puVar1;\n    fcn.00405a0c(0x434c00, 0x435c00);\n    uVar2 = fcn.00405546(0x434c00);\n    fcn.00405a0c(0x436000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x428b90 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - arg_ch) {\n        uVar4 = (-(*0x42eb74 != 0) & 0x7e00) + 0x200;\n        arg_ch = uVar3;\n        if (uVar4 <= uVar3) {\n            arg_ch = uVar4;\n        }\n        puVar1 = 0x420b90;\n        uVar2 = 0x402cd7;\n        iVar5 = fcn.0040307d(0x420b90, arg_ch);\n        if (iVar5 == 0) {\n            fcn.00402bbe(1);\n            goto code_r0x00402dfa;\n        }\n        if (*0x42eb74 == 0) {\n            uVar2 = 0x1c;\n            puVar1 = &fcn.00402c22::var_28h;\n            fcn.004056a4();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x42ec00 = *0x42ec00 | arg_8h & 2;\n                *0x42eb74 = *0x414b80;\n                if (uVar3 < var_10h) goto code_r0x00402dfa;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < arg_ch) {\n                    arg_ch = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            uVar2 = 0;\n            fcn.00402bbe(0);\n        }\n        if (uVar3 < *0x428b90) {\n            puVar6 = fcn.00405d9a(uVar2, 0x420b90, arg_ch, var_8h);\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x414b80 = *0x414b80 + arg_ch;\n    }\n    fcn.00402bbe(1, puVar1);\n    if (*0x42eb74 != 0) {\n        if (var_4h != 0) {\n            fcn.004030af(*0x414b80);\n            iVar5 = fcn.0040307d(&fcn.00402c22::arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x00402dfa;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004030af(*0x42eb74 + 0x1c);\n        iVar5 = fcn.00402e5b(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x42eb78 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x42eb7c = *0x42eb7c + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x42eb70 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.004056a4(0x42eb80, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402dfa:\n    return \n    \"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1466
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid entry0(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    code *pcVar7;\n    code *pcVar8;\n    code *pcVar9;\n    uint uVar10;\n    uint32_t arg_8h;\n    uint uVar11;\n    char *pcStack456;\n    uint uStack452;\n    int32_t iStack448;\n    uint uStack444;\n    uint uStack440;\n    char *pcStack436;\n    uint uStack432;\n    int32_t iStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    uchar auStack364 [364];\n    \n    arg_8h = 0;\n    uStack404 = 0x40311f;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack404 = 0x8001;\n    uStack408 = 0x40312a;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack408 = 0;\n    uStack412 = 0x403131;\n    *0x42ec18 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack412 = 8;\n    uStack416 = 0x40313d;\n    *0x42eb64 = fcn.00405d2e();\n    uStack416 = 0;\n    puStack424 = &stack0xfffffe94;\n    uStack420 = 0x160;\n    iStack428 = 0;\n    uStack432 = 0x428f98;\n    pcStack436 = 0x403159;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoA)();\n    pcStack436 = \"NSIS Error\";\n    uStack440 = 0x42e360;\n    uStack444 = 0x403168;\n    fcn.00405a0c();\n    uStack444 = 0x40316e;\n    uStack444 = (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    iStack448 = 0x434000;\n    uStack452 = 0x40317a;\n    fcn.00405a0c();\n    uStack452 = 0;\n    pcStack456 = 0x403181;\n    *0x42eb60 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    if (*0x434000 == '\\\"') {\n        uStack432 = CONCAT31(uStack432._1_3_, 0x22);\n    }\n    pcStack456 = uStack432;\n    fcn.0040552a();\n    pcVar3 = (*_sym.imp.USER32.dll_CharNextA)();\n    pcStack436 = pcVar3;\n    while (uVar2 = uStack444,  cVar1 = *pcVar3,  cVar1 != '\\0') {\n        while (cVar1 == ' ') {\n            pcVar3 = pcVar3 + 1;\n            cVar1 = *pcVar3;\n        }\n        uStack444 = CONCAT31(uStack444._1_3_, 0x20);\n        if (*pcVar3 == '\\\"') {\n            pcVar3 = pcVar3 + 1;\n            uStack444 = uVar2 & 0xffffff00 | 0x22;\n        }\n        if (*pcVar3 == '/') {\n            if ((pcVar3[1] == 'S') && ((pcVar3[2] | 0x20U) == 0x20)) {\n                arg_8h = arg_8h | 2;\n            }\n            if ((*(pcVar3 + 1) == 0x4352434e) && ((pcVar3[5] | 0x20U) == 0x20)) {\n                arg_8h = arg_8h | 4;\n            }\n            if (*(pcVar3 + -1) == 0x3d442f20) {\n                *(pcVar3 + -1) = 0;\n                fcn.00405a0c(0x434400, pcVar3 + 3);\n                break;\n            }\n        }\n        pcVar3 = fcn.0040552a();\n        if (*pcVar3 == '\\\"') {\n            pcVar3 = pcVar3 + 1;\n        }\n    }\n    pcVar3 = 0x435400;\n    (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x400, 0x435400);\n    iVar4 = fcn.004030c6();\n    if (iVar4 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)(0x435400, 0x3fb);\n        pcVar3 = \"\\\\Temp\";\n        sub.KERNEL32.dll_lstrcatA(0x435400, \"\\\\Temp\");\n        iVar4 = fcn.004030c6();\n        if (iVar4 == 0) goto code_r0x004032e6;\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x435000);\n    iStack448 = 0x403279;\n    iStack428 = fcn.00402c22(arg_8h);\n    if (iStack428 == 0) {\n        piVar5 = pcVar3;\n        if (*0x42eb7c != 0) {\n            iStack448 = 0;\n            uStack452 = 0x434000;\n            pcStack456 = 0x403290;\n            for (piVar5 = fcn.0040552a(); (0x433fff < piVar5 && (*piVar5 != 0x3d3f5f20)); piVar5 = piVar5 + -1) {\n            }\n            pcStack436 = \"Error launching installer\";\n            if (piVar5 < 0x434000) goto code_r0x00403311;\n            *piVar5 = 0;\n            piVar5 = piVar5 + 1;\n            iVar4 = fcn.004055e0();\n            if (iVar4 == 0) goto code_r0x004032e6;\n            fcn.00405a0c();\n            fcn.00405a0c(0x434800, piVar5);\n            pcStack456 = NULL;\n        }\n        *0x42ec0c = -1;\n        iStack448 = fcn.00403555();\n        pcVar3 = piVar5;\n    }\ncode_r0x004032e6:\n    while( true ) {\n        fcn.0040347b();\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack456 == NULL) break;\n        fcn.004052cd(pcStack456, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403311:\n        pcStack456 = \"~nsu.tmp\";\n        sub.KERNEL32.dll_lstrcatA();\n        pcVar3 = 0x435400;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)();\n        if (iVar4 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x435400, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryA)(0x435400);\n            if (*0x434400 == '\\0') {\n                pcStack456 = 0x434400;\n                fcn.00405a0c();\n            }\n            fcn.00405a0c();\n            *0x42f400 = 0x41;\n            iVar4 = 0x1a;\n            do {\n                fcn.00405a2e(0x428b98, *(*0x42eb70 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileA)(0x428b98);\n                if ((iStack448 != 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_CopyFileA)(0x435c00, 0x428b98, 1),  iVar6 != 0)\n                   ) {\n                    fcn.0040575a(0x428b98, 0);\n                    fcn.00405a2e(0x428b98, *(*0x42eb70 + 0x124));\n                    iVar6 = fcn.0040526c(0x428b98);\n                    if (iVar6 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar6);\n                        iStack448 = 0;\n                    }\n                }\n                *0x42f400 = *0x42f400 + 1;\n                *0x42f400 = *0x42f400 & 0xff00 | *0x42f400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            pcVar3 = NULL;\n            fcn.0040575a(0x435400);\n        }\n    }\n    if (*0x42ebf4 != 0) {\n        uVar11 = 3;\n        pcVar7 = fcn.00405d2e(3);\n        pcVar8 = fcn.00405d2e(4);\n        pcVar9 = fcn.00405d2e(5);\n        if (((pcVar7 != NULL) && (pcVar8 != NULL)) && (pcVar9 != NULL)) {\n            uVar10 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffe38);\n            iVar4 = (*pcVar7)(uVar10);\n            if (iVar4 != 0) {\n                (*pcVar8)(0, \"SeShutdownPrivilege\", &stack0xfffffe40);\n                uStack452 = 2;\n                (*pcVar9)(pcVar3, 0, &stack0xfffffe30, 0, 0, 0);\n            }\n        }\n        iVar4 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0);\n        if (iVar4 == 0) {\n            fcn.0040140b(uVar11, 9);\n        }\n    }\n    if (*0x42ec0c != -1) {\n        iStack448 = *0x42ec0c;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack448);\n    if (*0x409014 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409014);\n        *0x409014 = -1;\n    }\n    fcn.004034c0();\n    fcn.00405331(0x435800, 7);\n    return;\n}\n",
        "token_count": 2381
    },
    "0040347b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040347b(void)\n\n{\n    if (*0x409014 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x409014);\n        *0x409014 = -1;\n    }\n    fcn.004034c0();\n    fcn.00405331(0x435800, 7);\n    return;\n}\n",
        "token_count": 82
    },
    "00403555": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00403555(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint uStack176;\n    int32_t iStack172;\n    int32_t iStack168;\n    int32_t iStack164;\n    int32_t iStack160;\n    uint uStack156;\n    uint uStack152;\n    \n    iVar5 = *0x42eb70;\n    pcVar2 = fcn.00405d2e();\n    if (pcVar2 == NULL) {\n        *0x435000 = 0x7830;\n        fcn.004058f3(0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x429fe0, 0);\n        if (*0x429fe0 == '\\0') {\n            fcn.004058f3(0x80000003, \".DEFAULT\\\\Control Panel\\\\International\", \"Locale\", 0x429fe0, 0);\n        }\n        sub.KERNEL32.dll_lstrcatA();\n    }\n    else {\n        (*pcVar2)();\n        fcn.0040596a();\n    }\n    fcn.0040381e();\n    *0x42ebe0 = *0x42eb78 & 0x20;\n    *0x42ebfc = 0x10000;\n    iVar3 = fcn.004055e0();\n    if ((iVar3 == 0) && (*(iVar5 + 0x48) != 0)) {\n        uVar7 = 0x42db00;\n        fcn.004058f3(*(iVar5 + 0x44), *(iVar5 + 0x48) + *0x42eb98, *(iVar5 + 0x4c) + *0x42eb98, 0x42db00, 0);\n        if (*0x42db00 != '\\0') {\n            if (*0x42db00 == '\\\"') {\n                uVar7 = 0x42db01;\n                puVar4 = fcn.0040552a();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenA();\n            if (((uVar7 < iVar3 + -4 + uVar7) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(),  iVar3 == 0)) &&\n               ((uVar7 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(),  uVar7 == 0xffffffff || ((uVar7 & 0x10) == 0))))\n            {\n                fcn.00405546();\n            }\n            fcn.004054ff();\n            fcn.00405a0c();\n        }\n    }\n    iVar3 = fcn.004055e0();\n    if (iVar3 == 0) {\n        uStack152 = 0x403691;\n        fcn.00405a2e(0x434400, *(iVar5 + 0x118));\n    }\n    uStack152 = 0x8040;\n    uStack156 = 0;\n    iStack160 = 0;\n    iStack164 = 1;\n    iStack168 = 0x67;\n    iStack172 = *0x42eb60;\n    uStack176 = 0x4036a8;\n    *0x42e348 = (*_sym.imp.USER32.dll_LoadImageA)();\n    if (*(iVar5 + 0x50) == -1) {\ncode_r0x00403745:\n        uStack176 = 0;\n        iVar5 = fcn.0040140b();\n        if (iVar5 == 0) {\n            fcn.0040381e();\n            if (*0x42ec00 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x429fb8, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n                iVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"RichEd20\");\n                if (iVar5 == 0) {\n                    (*pcVar2)(\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoA;\n                iVar5 = (*_sym.imp.USER32.dll_GetClassInfoA)(0, \"RichEdit20A\", 0x42e300);\n                if (iVar5 == 0) {\n                    (*pcVar2)(0, \"RichEdit\", 0x42e300);\n                    *0x42e324 = \"RichEdit20A\";\n                    (*_sym.imp.USER32.dll_RegisterClassA)(0x42e300);\n                }\n                uVar6 = (*_sym.imp.USER32.dll_DialogBoxParamA)(*0x42eb60, *0x42e340 + 0x69U & 0xffff, 0, 0x4038eb, 0);\n                fcn.0040140b(5);\n                fcn.004034a5(1);\n                return uVar6;\n            }\n            iVar5 = fcn.00404e7c(0);\n            if (iVar5 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403814;\n            }\n            if (*0x42e32c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar6 = 2;\n    }\n    else {\n        *0x42e324 = &stack0xffffff64;\n        uStack176 = 0x42e300;\n        uStack156 = 0x624e5f;\n        *0x42e304 = fcn.00401000;\n        *0x42e310 = *0x42eb60;\n        *0x42e314 = *0x42e348;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &stack0xffffff64, 0);\n            *0x429fb8 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                                  (0x80, &stack0xffffff50, 0, 0x80000000, iStack172, iStack168, iStack164 - iStack172, \n                                   iStack160 - iStack168, 0, 0, *0x42eb60, 0);\n            goto code_r0x00403745;\n        }\ncode_r0x00403814:\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 1474
    },
    "004046f9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004046f9(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint32_t *var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar2)(arg_8h, 0x408);\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    var_10h = *0x42eb70 + 0x94;\n    var_1ch = *0x42eb88;\n    if (arg_ch == 0x110) {\n        *0x42ebc0 = arg_8h;\n        var_18h = 0;\n        var_ch = 2;\n        *0x429fd4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x42eb8c << 2);\n        var_14h = (*_sym.imp.USER32.dll_LoadBitmapA)(*0x42eb60, 0x6e);\n        *0x429fc8 = 0xffffffff;\n        *0x429fd0 = (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffffc, fcn.00404cfa);\n        *0x429fbc = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x429fbc, var_14h, 0xff00ff);\n        (*pcVar2)(var_4h, 0x1109, 2, *0x429fbc);\n        iVar3 = (*pcVar2)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar2)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(var_14h);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_10h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar4 = fcn.00405a2e(0, iVar7);\n                uVar4 = (*pcVar2)(var_8h, 0x143, 0, uVar4);\n                (*pcVar2)(var_8h, 0x151, uVar4, iVar3);\n            }\n            uVar6 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00403dbe(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00403dbe(arg_8h, 0x16, *(arg_14h + 0x34 + uVar6 * 4));\n        iVar3 = 0;\n        uVar4 = 0;\n        if (*0x42eb8c < 1) {\ncode_r0x0040492b:\n            uVar6 = (*_sym.imp.USER32.dll_GetWindowLongA)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongA)(var_4h, 0xfffffff0, uVar6 & 0xfffffffb);\n        }\n        else {\n            var_14h = var_1ch + 8;\n            do {\n                puVar8 = var_14h + 4;\n                if (*puVar8 != '\\0') {\n                    uVar6 = *var_14h;\n                    var_40h = uVar6 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar4;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar6 & 2) == 0) {\n                        if ((uVar6 & 4) == 0) {\n                            uVar5 = (*pcVar2)(var_4h, 0x1100, 0, &var_50h);\n                            *(*0x429fd4 + iVar3 * 4) = uVar5;\n                        }\n                        else {\n                            uVar4 = (*pcVar2)(var_4h, 0x110a, 3, uVar4);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar4 = (*pcVar2)(var_4h, 0x1100, 0, &var_50h);\n                        var_18h = 1;\n                        *(*0x429fd4 + iVar3 * 4) = uVar4;\n                        uVar4 = *(*0x429fd4 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_14h = var_14h + 0x106;\n            } while (iVar3 < *0x42eb8c);\n            if (var_18h == 0) goto code_r0x0040492b;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.00403df3(var_8h);\n            goto code_r0x00404ce5;\n        }\n        fcn.00403df3(var_4h);\n    }\n    iVar3 = var_1ch;\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x42eb78 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar7 = fcn.00404679(var_4h, arg_ch != 0x413),  -1 < iVar7)\n            ))) {\n            puVar8 = iVar7 * 0x418 + 8 + iVar3;\n            uVar6 = *puVar8;\n            if ((uVar6 & 0x10) == 0) {\n                if ((uVar6 & 0x40) == 0) {\n                    uVar6 = uVar6 ^ 1;\n                }\n                else {\n                    uVar6 = uVar6 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar6 = uVar6 | 1;\n                    }\n                    else {\n                        uVar6 = uVar6 & 0xfffffffe;\n                    }\n                }\n                *puVar8 = uVar6;\n                fcn.0040117d(iVar7);\n                arg_ch = 0x40f;\n                arg_14h = ~*0x42eb78 >> 8 & 1;\n                arg_10h = 1;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x192) {\n                (*pcVar2)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x196) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + iVar3;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x418 + 8 + iVar3;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar2)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x00404ce5;\n        iVar3 = (*pcVar2)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_10h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar2)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = 1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar2)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x429fbc != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x429fbc);\n        }\n        if (*0x429fd4 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x429fd4);\n        }\n        *0x429fbc = 0;\n        *0x429fd4 = 0;\n        *0x42ebc0 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            fcn.0040140b(8);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x429fd4);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_10h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar2)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x429fd4;\n        var_38h = 0xf030;\n        var_ch = 0;\n        if (0 < *0x42eb8c) {\n            puVar8 = *0x42eb88 + 8;\n            do {\n                uVar6 = *(var_1ch + var_ch * 4);\n                if (uVar6 != 0) {\n                    uVar1 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar1 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar1 & 0x40) == 0) {\n                        iVar3 = (uVar1 & 1) + 1;\n                        if ((uVar1 & 0x10) != 0) {\n                            iVar3 = (uVar1 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar1 & 8) * 2 | uVar1 & 0x20;\n                    var_40h = uVar6;\n                    (*pcVar2)(var_4h, 0x1102, (uVar1 >> 5 & 1U) + 1, uVar6);\n                    (*pcVar2)(var_4h, 0x110d, 0, &var_44h);\n                }\n                var_ch = var_ch + 1;\n                puVar8 = puVar8 + 0x106;\n            } while (var_ch < *0x42eb8c);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x42e33c + 0x10) != 0) {\n            uVar4 = fcn.0040464c(5);\n            fcn.00404597(0x3ff, 0xfffffffb, uVar4);\n        }\n    }\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x42eb78 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar2)(uVar4);\n    }\ncode_r0x00404ce5:\n    fcn.00403e25(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3312
    },
    "00404ee8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404ee8(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar9 = *0x42e344;\n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar8 = 0;\n    var_4h = *0x42e344;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar9 = *(*0x42eb70 + 0x5c);\n        iVar8 = *(*0x42eb70 + 0x60);\n        *0x42e330 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x42e328 = (*pcVar1)(arg_8h, 0x3ee);\n        *0x42e344 = (*pcVar1)(arg_8h, 0x3f8);\n        var_4h = *0x42e344;\n        fcn.00403df3(*0x42e330);\n        *0x42e334 = fcn.0040464c(4);\n        *0x42e34c = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x101b, 0, &var_38h);\n        (*pcVar2)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar9) {\n            (*pcVar2)(var_4h, 0x1001, 0, iVar9);\n            (*pcVar2)(var_4h, 0x1026, 0, iVar9);\n        }\n        if (-1 < iVar8) {\n            (*pcVar2)(var_4h, 0x1024, 0, iVar8);\n        }\n        fcn.00403dbe(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x42eb78 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x42e330, 0);\n            if ((*0x42eb78 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x42e330 = 0;\n            }\n            fcn.00403df3(*0x42e328);\n        }\n        uVar3 = (*pcVar1)(arg_8h, 0x3ec);\n        (*pcVar2)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x42eb78 & 4) != 0) {\n            (*pcVar2)(uVar3, 0x409, 0, iVar8);\n            (*pcVar2)(uVar3, 0x2001, 0, iVar9);\n        }\ncode_r0x00405265:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00404e7c, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42e330, 0);\n                (*pcVar1)(iVar9, 8);\n                fcn.00403df3(iVar9);\n                goto code_r0x004050f0;\n            }\n        }\n        else {\ncode_r0x004050f0:\n            if (arg_ch == 0x404) {\n                if (*0x42e32c != 0) {\n                    *0x4293a8 = 2;\n                    fcn.00403d97();\n                    goto code_r0x00405112;\n                }\n                (*pcVar1)(*0x42eb68, 8);\n                if (*0x42ebec == 0) {\n                    fcn.00404daa(*(*0x4297b0 + 0x34), 0);\n                }\n                fcn.00403d97(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == iVar9)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar9, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.00405a2e(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuA)(uVar3, 0, 1, uVar5);\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(iVar9, &var_18h);\n                    }\n                    else {\n                        var_18h = arg_14h;\n                        var_14h = arg_14h >> 0x10;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, var_18h, var_14h, 0, arg_8h, 0);\n                    iVar9 = 1;\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x429fe0;\n                        var_28h = 0xfff;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, arg_8h, &var_40h);\n                            iVar9 = iVar9 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar9);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar9 = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x102d, iVar8, &var_40h);\n                            *(puVar7 + iVar9) = 0xa0d;\n                            puVar7 = puVar7 + iVar9 + 1;\n                            iVar8 = iVar8 + 1;\n                        } while (iVar8 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(1, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405265;\n            }\n        }\ncode_r0x00405112:\n        uVar3 = fcn.00403e25(arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 1985
    },
    "00405331": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405331(char *hFindFile, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint *puVar6;\n    char *pcVar7;\n    uint lpFindFileData;\n    uint var_11ch;\n    uint var_18h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_8h = fcn.004055e0(hFindFile);\n    if ((arg_ch & 8) == 0) {\n        uVar5 = arg_ch & 1;\n        var_4h = uVar5;\n        if ((uVar5 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405a0c(0x42afe8, hFindFile);\n            if (uVar5 == 0) {\n                fcn.00405546(hFindFile);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatA(0x42afe8, 0x409328);\n            }\n            if ((*hFindFile != '\\0') || (*0x42afe8 == '\\\\')) {\n                sub.KERNEL32.dll_lstrcatA(hFindFile, 0x409010);\n            }\n            iVar1 = sub.KERNEL32.dll_lstrlenA(hFindFile);\n            pcVar7 = 0x42afe8;\n            iVar2 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(0x42afe8, &lpFindFileData);\n            if (iVar2 != -1) {\n                do {\n                    puVar6 = &var_11ch;\n                    pcVar3 = fcn.0040552a(&var_11ch, 0x3f);\n                    if ((*pcVar3 != '\\0') && (var_18h != '\\0')) {\n                        puVar6 = &var_18h;\n                    }\n                    if ((*puVar6 != '.') ||\n                       ((*(puVar6 + 1) != '\\0' && ((*(puVar6 + 1) != '.' || (*(puVar6 + 2) != '\\0')))))) {\n                        fcn.00405a0c(hFindFile + iVar1, puVar6);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            fcn.004056c4(hFindFile);\n                            pcVar7 = hFindFile;\n                            iVar4 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(hFindFile);\n                            if (iVar4 == 0) {\n                                if ((arg_ch & 4) == 0) {\n                                    *0x42ebe8 = *0x42ebe8 + 1;\n                                }\n                                else {\n                                    fcn.00404daa(0xfffffff1, hFindFile);\n                                    pcVar7 = hFindFile;\n                                    fcn.0040575a();\n                                }\n                            }\n                            else {\n                                pcVar7 = 0xfffffff2;\n                                fcn.00404daa(0xfffffff2, hFindFile);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            pcVar7 = hFindFile;\n                            fcn.00405331(hFindFile, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileA)(iVar2, &lpFindFileData, pcVar7);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar2);\n            }\n            if (var_4h != 0) {\n                (hFindFile + iVar1)[-1] = '\\0';\n            }\n        }\n        if (var_4h != 0) {\n            if (var_8h != 0) {\n                iVar1 = fcn.00405d07(hFindFile);\n                if (iVar1 == 0) {\n                    return;\n                }\n                fcn.004054ff(hFindFile);\n                fcn.004056c4(hFindFile);\n                iVar1 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryA)(hFindFile);\n                if (iVar1 != 0) {\n                    fcn.00404daa(0xffffffe5, hFindFile);\n                    return;\n                }\n                if ((arg_ch & 4) != 0) {\n                    fcn.00404daa(0xfffffff1, hFindFile);\n                    fcn.0040575a(hFindFile, 0);\n                    return;\n                }\n            }\n            *0x42ebe8 = *0x42ebe8 + 1;\n        }\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(hFindFile);\n        *0x42ebe8 = *0x42ebe8 + (iVar1 == 0);\n    }\n    return;\n}\n",
        "token_count": 1106
    },
    "004055e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.004055e0(uint param_1)\n\n{\n    char *pcVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    char *pcVar5;\n    \n    fcn.00405a0c(0x42b3e8, param_1);\n    pcVar1 = fcn.00405593(0x42b3e8);\n    if ((pcVar1 != NULL) &&\n       ((pcVar5 = pcVar1,  fcn.00405c6e(pcVar1),  (*0x42eb78 & 0x80) == 0 || ((*pcVar1 != '\\0' && (*pcVar1 != '\\\\'))))))\n    {\n        while( true ) {\n            uVar4 = 0x42b3e8;\n            iVar3 = sub.KERNEL32.dll_lstrlenA(0x42b3e8);\n            if (iVar3 <= pcVar1 + -0x42b3e8) {\n                fcn.004054ff(0x42b3e8, uVar4, pcVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(0x42b3e8);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00405d07(0x42b3e8);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            pcVar5 = 0x42b3e8;\n            fcn.00405546();\n        }\n    }\n    return false;\n}\n",
        "token_count": 361
    },
    "004056c4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004056c4(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesA)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0040575a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nvoid fcn.0040575a(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcStack88;\n    int32_t iStack84;\n    char *pcStack80;\n    uchar *puStack76;\n    char *pcStack72;\n    uint uStack68;\n    char *pcStack64;\n    char *pcStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t iStack48;\n    char *pcStack44;\n    \n    pcVar1 = fcn.00405d2e();\n    if ((pcVar1 == NULL) || (iVar2 = (*pcVar1)(),  iVar2 == 0)) {\n        pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameA;\n        *0x42c170 = 0x4c554e;\n        if (param_1 != 0) {\n            fcn.004056e3();\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n            pcStack44 = 0x42c170;\n            iStack48 = param_1;\n            uStack52 = 0x4057b2;\n            iVar2 = (*pcVar1)();\n            if (iVar2 == 0) {\n                return;\n            }\n            if (0x400 < iVar2) {\n                return;\n            }\n        }\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n        pcStack44 = \"%s=%s\\r\\n\";\n        iStack48 = 0x42b7e8;\n        uStack52 = 0x4057f1;\n        pcVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        pcStack44 = 0x405807;\n        fcn.00405a2e(0x42bbe8, *(*0x42eb70 + 0x128));\n        pcStack44 = 0x4;\n        iStack48 = 0xc0000000;\n        uStack52 = 0x42bbe8;\n        uStack56 = 0x405814;\n        pcVar4 = fcn.004056e3();\n        if (pcVar4 != 0xffffffff) {\n            uStack56 = 0;\n            pcStack64 = 0x40582c;\n            pcStack60 = pcVar4;\n            pcVar5 = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            pcStack64 = pcVar5 + 10 + pcVar3;\n            uStack68 = 0x40;\n            pcStack72 = 0x40583b;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if (iVar2 != 0) {\n                puStack76 = &stack0xffffffd4;\n                pcStack72 = NULL;\n                pcStack88 = pcVar4;\n                iStack84 = iVar2;\n                pcStack80 = pcVar5;\n                iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)();\n                if ((iVar6 != 0) && (pcVar5 == pcStack44)) {\n                    pcStack72 = \"[Rename]\\r\\n\";\n                    pcStack80 = 0x405866;\n                    puStack76 = iVar2;\n                    iStack84 = fcn.00405658();\n                    if (iStack84 == 0) {\n                        iStack84 = iVar2 + pcVar5;\n                        pcStack80 = \"[Rename]\\r\\n\";\n                        pcStack88 = 0x405878;\n                        fcn.00405a0c();\n                        pcVar5 = pcVar5 + 10;\n                        pcVar7 = pcVar5;\n                    }\n                    else {\n                        iStack84 = iStack84 + 10;\n                        pcStack80 = 0x409330;\n                        pcStack88 = 0x4058d2;\n                        iVar6 = fcn.00405658();\n                        pcVar7 = pcVar5;\n                        if (iVar6 != 0) {\n                            for (pcVar4 = iVar6 + 1; pcVar4 < pcVar5 + iVar2; pcVar4 = pcVar4 + 1) {\n                                pcVar4[pcVar3] = *pcVar4;\n                            }\n                            pcVar7 = iVar6 + 1 + -iVar2;\n                            pcVar4 = pcStack64;\n                        }\n                    }\n                    pcStack88 = pcVar3;\n                    fcn.004056a4(pcVar7 + iVar2, 0x42b7e8);\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(pcVar4, 0, 0, 0);\n                    (*_sym.imp.KERNEL32.dll_WriteFile)(pcVar4, iVar2, pcVar5 + pcVar3, &stack0xffffffa8, 0);\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar2);\n                }\n            }\n            puStack76 = 0x4058b7;\n            pcStack72 = pcVar4;\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    *0x42ebf0 = *0x42ebf0 + 1;\n    return;\n}\n",
        "token_count": 1182
    },
    "00405d07": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405d07(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, 0x42c030);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x42c030;\n    }\n    return uVar2;\n}\n",
        "token_count": 116
    },
    "0040117d": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x418 + 8 + *0x42eb88);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x42eb8c) {\n            puVar3 = uVar4 * 0x418 + 8 + *0x42eb88;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x106;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x42eb8c);\n        }\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "004012e2": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x42eb70 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x42eb8c == 0;\n            if (*0x42eb8c != 0) {\n                puVar2 = *0x42eb88 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x106;\n                } while (uVar1 < *0x42eb8c);\n                bVar3 = uVar1 == *0x42eb8c;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 394
    },
    "00403f06": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403f06(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    char cVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    char *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar5 = _sym.imp.USER32.dll_SendMessageA;\n    pcVar3 = _sym.imp.USER32.dll_GetDlgItem;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x42e33c - (iVar7 * 4 + 4));\n        }\n        cVar2 = *(iVar7 + *0x42eb98);\n        var_8h = 0;\n        pcVar10 = iVar7 + *0x42eb98 + 1;\n        var_4h = fcn.00403ed2;\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = pcVar10;\n        fcn.00403dbe(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00403dbe(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00403de0(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.00403df3(uVar6);\n        pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x42eb70 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar3)(uVar6, 0x443, 0, iVar7);\n        (*pcVar3)(uVar6, 0x445, 0, 0x4010000);\n        *0x428fa4 = 0;\n        uVar8 = sub.KERNEL32.dll_lstrlenA(pcVar10);\n        (*pcVar3)(uVar6, 0x435, 0, uVar8);\n        (*pcVar3)(uVar6, 0x449, cVar2, &var_ch);\n        *0x429fc0 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x429fc0 != 0)) || (puVar1 = *0x4297b0 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x0040417e;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar5)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00403de0(uVar9 & 1);\n        fcn.00404191();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*pcVar3)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x42db00;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar5)(uVar6, 1099, 0, &var_ch);\n                pcVar4 = _sym.imp.USER32.dll_LoadCursorA;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n                pcVar3 = _sym.imp.USER32.dll_SetCursor;\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteA)(arg_8h, \"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar4)(0, 0x7f00);\n                (*pcVar3)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar5)(*0x42eb68, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar5)(*0x42eb68, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x429fc0 = *0x429fc0 + 1;\n    }\ncode_r0x0040417e:\n    uVar6 = fcn.00403e25(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1376
    },
    "00404daa": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404daa(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x42e344;\n    if (*0x42e344 != 0) {\n        var_8h = *0x42ec14;\n        uVar4 = *0x42ec14 & 1;\n        if (uVar4 == 0) {\n            fcn.00405a2e(0x4297b8, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenA(0x4297b8);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenA(lpString2);\n            if (0x7ff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatA(0x4297b8, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextA)(*0x42e328, 0x4297b8);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x4297b8;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageA)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x1007 - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 + 0x4297b8) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "00405d9a": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\nuint32_t fcn.00405d9a(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x42c574 == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x42c570) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x42c570);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 309
    },
    "00405e08": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00405e08(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x0040681c:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x406857\n        switch(*(*ppuVar1 * 4 + 0x406857)) {\n        case 0x405e80:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x42daf8 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x42c978;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x42cbb4 < piVar4) {\n                                if (piVar4 < 0x42cd78) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x42cdd8) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x42cdf8);\n                        fcn.004068ff(0x42c978, 0x120, 0x101, 0x407388, 0x4073c8, 0x42c974, 0x40936c, 0x42d278, &var_8h);\n                        puVar12 = 0x42c978;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.004068ff(0x42c978, 0x1e, 0, 0x407408, 0x407444, 0x42c970, 0x409370, 0x42d278, &var_8h);\n                        *0x42daf8 = *0x42daf8 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x40936c;\n                    *(arg_8h + 0x21) = *0x409370;\n                    arg_8h[9] = *0x42c974;\n                    arg_8h[10] = *0x42c970;\n                    goto code_r0x00405fd8;\n                }\n                if (uVar14 != 2) goto code_r0x00405eb8;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x405ebf:\n            goto code_r0x00405ebf;\n        case 0x406015:\n            for (; puVar10 < 0x10; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x0040611b;\n            puVar5 = 0xa;\n            goto code_r0x00406121;\n        case 0x40603a:\n            if (var_34h == NULL) {\ncode_r0x0040682c:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x00405ee0;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x004060e7;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406897(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x00406848;\n            }\ncode_r0x004060e7:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.004056a4();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x0040611b:\n                puVar5 = arg_8h[0x149];\ncode_r0x00406121:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x406148:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x00406187;\n            }\n            goto code_r0x00405ebf;\n        case 0x406187:\ncode_r0x00406187:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x0040682c;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x407374] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x407374] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.004068ff(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x0040636a:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x0040682c;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x409348) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x0040682c;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x409348) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x00405ebf;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x00405ebf;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.004068ff(arg_8h + 7, uVar15, 0x101, 0x407388, 0x4073c8, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.004068ff(arg_8h + uVar14 + 0x108, var_14h, 0, 0x407408, 0x407444, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x00405ebf;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x00406454:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x00406467:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x0040682c;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x409348) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x004065ba;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x00405ebf;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x40636a:\n            goto code_r0x0040636a;\n        case 0x406454:\n            goto code_r0x00406454;\n        case 0x406467:\n            goto code_r0x00406467;\n        case 0x4064fd:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x409348) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x40654e:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x409348) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x00405ebf;\ncode_r0x004065ba:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x4065cc:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x0040682c;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x409348) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x406610:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x004066e4;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00406897();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x00406848;\n                }\ncode_r0x004066e4:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x00405fd8:\n            *ppuVar1 = NULL;\n            break;\n        case 0x406716:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x004067b5;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406897(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x004067b5;\n                goto code_r0x00406848;\n            }\ncode_r0x004067b5:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x00405fd8;\n        case 0x4067c7:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x4067d5:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00406897();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x00406848:\n                uVar11 = 0;\n                goto code_r0x00405ec8;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x00405ec8;\n            }\n        }\n    }\n    goto code_r0x00405ebf;\ncode_r0x00405eb8:\n    if (uVar14 == 3) {\ncode_r0x00405ebf:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x00405ec8:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x00405ee0:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00406897(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x0040681c;\n}\n",
        "token_count": 7364
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x42eb88;\n    iVar5 = arg_8h * 0x418 + *0x42eb88;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x42eb8c) {\n        do {\n            puVar1 = arg_8h * 0x418 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x42eb8c);\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "00402e5b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402e5b(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_58h;\n    int32_t var_18h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_10h;\n    uint32_t lpBuffer;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = nNumber;\n    uVar6 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    lpBuffer = arg_10h;\n    if (arg_10h == 0) {\n        lpBuffer = 0x418b88;\n    }\n    if (-1 < nDenominator) {\n        fcn.004030af(*0x42ebb8 + nDenominator);\n    }\n    iVar2 = fcn.0040307d(&nNumber, 4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar6 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar6 = nNumber;\n                    }\n                    iVar2 = fcn.0040307d(0x414b88, 0x414b88);\n                    if (iVar2 == 0) break;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x414b88, uVar6, &arg_10h, 0);\n                    if ((iVar2 == 0) || (uVar6 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar5) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.0040307d(uVar6, uVar5);\n                if (iVar2 != 0) {\n                    return uVar5;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40b4ec = 0;\n            *0x40b4e8 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40afd0 = 8;\n            *0x414b78 = 0x40cb70;\n            *0x414b74 = 0x40cb70;\n            *0x414b70 = 0x414b70;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40afd0 = 8;\n                *0x40b4e8 = 0;\n                *0x40b4ec = 0;\n                *0x414b70 = 0x414b70;\n                *0x414b74 = 0x40cb70;\n                *0x414b78 = 0x40cb70;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.0040307d(0x414b88, 0x414b88);\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40afc0 = 0x414b88;\n                *0x40afc4 = uVar5;\n                while( true ) {\n                    uVar5 = lpBuffer;\n                    *0x40afc8 = lpBuffer;\n                    *0x40afcc = var_8h;\n                    var_18h = fcn.00405e08(0x40afc0);\n                    if (var_18h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar4 = *0x40afc8 - uVar5;\n                    iVar2 = (*pcVar1)();\n                    if (((*0x42ec14 & 1) != 0) && ((200 < iVar2 - var_10h || (nNumber == 0)))) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfA)(&var_58h, \"... %d%%\", uVar3);\n                        fcn.00404daa(0, &var_58h);\n                        var_10h = iVar2;\n                    }\n                    if (iVar4 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, iVar4, &lpNumberOfBytesWritten, 0);\n                        if (iVar2 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar4) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar4;\n                        lpBuffer = *0x40afc8;\n                    }\n                    var_4h = var_4h + iVar4;\n                    if (var_18h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1359
    },
    "00403e25": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403e25(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 455
    },
    "0040464c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040464c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x42eb88;\n    iVar3 = *0x42eb8c;\n    if (*0x42eb8c != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x418;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 167
    },
    "00404e7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00404e7c(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x42eb8c;\n    iVar2 = *0x42eb88;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x42ec18 = *0x42ec18 | uVar1;\n    uVar5 = 0;\n    fcn.00403e0a(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x42ebec = *0x42ebec + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x106;\n        } while (iVar4 != 0);\n    }\n    fcn.00403e0a(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x42ebec;\n}\n",
        "token_count": 311
    },
    "00401389": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x42eb90,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x42e34c = *0x42e34c + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x42e34c, 30000, *0x42e334, 0);\n            (*_sym.imp.USER32.dll_SendMessageA)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 321
    },
    "00404191": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404191(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x428fa0;\n    if (*0x42ebec == 0) {\n        uVar1 = *0x429fd8;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 88
    },
    "00404531": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404531(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (arg_ch == 1) {\n        fcn.004052b1(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x466, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "00404679": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404679(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x110c, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "004052cd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004052cd(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x42ec00 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x42ec08 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x4091dc = *0x42eb68;\n        *0x4091e0 = *0x42eb60;\n        *0x4091e4 = param_1;\n        *0x4091e8 = 0x42e360;\n        *0x4091ec = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectA)(0x4091d8);\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00405593": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar * fcn.00405593(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextA;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextA)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if ((*param_1 == '\\0') || (*piVar2 != 0x5c3a)) {\n        if (*param_1 == 0x5c5c) {\n            iVar5 = 2;\n            do {\n                iVar5 = iVar5 + -1;\n                pcVar4 = fcn.0040552a();\n                if (*pcVar4 == '\\0') goto code_r0x004055d8;\n                pcVar4 = pcVar4 + 1;\n            } while (iVar5 != 0);\n        }\n        else {\ncode_r0x004055d8:\n            pcVar4 = NULL;\n        }\n    }\n    else {\n        pcVar4 = (*pcVar1)(uVar3);\n    }\n    return pcVar4;\n}\n",
        "token_count": 271
    },
    "004058f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004058f3(uint hKey, uint lpcbData, uint lpValueName, uchar *lpType, int32_t samDesired)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x400;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00405a2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405a2e(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint8_t *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint *arg_8h_00;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    int32_t var_4h;\n    \n    puVar6 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x42e33c - (arg_ch * 4 + 4));\n    }\n    puVar7 = *0x42eb98 + arg_ch;\n    arg_8h_00 = 0x42db00;\n    if (arg_8h + -0x10b6c0 < 0x800) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar6;\n    }\n    do {\n        while( true ) {\n            uVar1 = *puVar7;\n            if ((uVar1 == 0) || (0x3ff < arg_8h_00 + -0x10b6c0)) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405a0c(arg_8h, 0x42db00);\n                }\n                return;\n            }\n            puVar5 = puVar7 + 1;\n            if (0xfc < uVar1) break;\n            if (uVar1 == 0xfc) {\n                *arg_8h_00 = *puVar5;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar7 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar1;\n                arg_8h_00 = arg_8h_00 + 1;\n                puVar7 = puVar5;\n            }\n        }\n        uVar2 = puVar7[2];\n        var_ch = uVar2;\n        uVar3 = *puVar5;\n        puVar6 = uVar3;\n        uVar8 = (var_ch & 0x7f) << 7 | puVar6 & 0x7f;\n        var_18h = CONCAT22(uVar3 >> 7, uVar3) | 0x8000;\n        var_10h = CONCAT22(uVar2 >> 7, uVar2) | 0x8000;\n        var_14h = puVar6;\n        if (uVar1 == 0xfe) {\n            iVar9 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                var_4h = 0;\n            }\n            else {\n                var_4h = 1;\n            }\n            if (*0x42ebe4 != 0) {\n                var_10h = 0x4;\n                iVar9 = 4;\n            }\n            if (uVar3 < '\\0') {\n                var_18h = (puVar6 & 0x3f) + *0x42eb98;\n                var_10h = puVar6 & 0x40;\n                var_14h = arg_8h_00;\n                fcn.004058f3(0x80000002, \"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405a2e(arg_8h_00, var_ch);\n                    goto code_r0x00405bca;\n                }\ncode_r0x00405bcf:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatA();\n                }\n            }\n            else {\n                if (puVar6 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x405b57;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n                }\n                else {\n                    if (puVar6 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x405b6a;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n                        iVar9 = 0;\n                    }\n                    while (iVar9 != 0) {\n                        iVar9 = iVar9 + -1;\n                        if ((*0x42eb64 != NULL) && (var_4h != 0)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x42eb64)(*0x42eb68, (&fcn.00405a2e::var_18h)[iVar9]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00405a2e::ppidl;\n                        var_14h = (&fcn.00405a2e::var_18h)[iVar9];\n                        var_18h = *0x42eb68;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x405bb4;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListA)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00405bca:\n                if (*arg_8h_00 != 0) goto code_r0x00405bcf;\n            }\ncode_r0x00405be0:\n            fcn.00405c6e(arg_8h_00);\n        }\n        else if (uVar1 == 0xfd) {\n            if (uVar8 == 0x1d) {\n                fcn.0040596a(arg_8h_00, *0x42eb68);\n            }\n            else {\n                fcn.00405a0c(arg_8h_00, uVar8 * 0x400 + 0x42f000);\n            }\n            if (uVar8 - 0x15 < 7) goto code_r0x00405be0;\n        }\n        else if (uVar1 == 0xff) {\n            fcn.00405a2e(arg_8h_00, -1 - uVar8);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenA();\n        arg_8h_00 = arg_8h_00 + iVar4;\n        puVar7 = puVar7 + 3;\n    } while( true );\n}\n",
        "token_count": 1728
    },
    "00405c6e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405c6e(uint8_t *param_1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.0040556c(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextA;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffffff00 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (pcVar4 = fcn.0040552a(\"*?|<>/\\\":\", uVar3),  *pcVar4 == '\\0')) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.004056a4(puVar6, puVar7, iVar5 - puVar7);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffffff00 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 519
    },
    "004068ff": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.004068ff(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x00406c30;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x42cdf8) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x42cdf8;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x00406c30;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x42cdf8U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x00406c30:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2595
    },
    "004041fc": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.004041fc(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uchar *puVar3;\n    uint32_t arg_10h_00;\n    uint32_t arg_10h_01;\n    int32_t iVar4;\n    ushort *puVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x4297b0;\n    var_4h = *(*0x4297b0 + 0x38);\n    iVar6 = *(*0x4297b0 + 0x3c) * 0x400 + 0x42f000;\n    if (arg_ch == 0x40b) {\n        fcn.004052b1(0x3fb, iVar6);\n        fcn.00405c6e(iVar6);\n    }\n    if (arg_ch == 0x110) {\n        var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar1 = fcn.0040556c(iVar6);\n        if ((iVar1 != 0) && (iVar1 = fcn.00405593(iVar6),  iVar1 == 0)) {\n            fcn.004054ff(iVar6);\n        }\n        *0x42e338 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextA)(var_8h, iVar6);\n        var_44h = *(arg_14h + 0x34);\n        var_48h = 0x1;\n        fcn.00403dbe(arg_8h);\n        fcn.00403dbe(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.00403df3(var_8h);\n        pcVar2 = fcn.00405d2e(7);\n        if (pcVar2 == NULL) goto code_r0x0040451c;\n        (*pcVar2)(var_8h, 1);\n    }\n    iVar1 = var_4h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x0040451c;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar7 = &fcn.004041fc::var_44h;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar7 = 0;\n                puVar7 = puVar7 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x429fe0;\n            var_34h = fcn.00404531;\n            var_30h = iVar6;\n            var_3ch = fcn.00405a2e(0x4293b0, iVar1);\n            var_38h = 0x41;\n            iVar1 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderA)(&fcn.004041fc::var_48h);\n            if (iVar1 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar1);\n                fcn.004054ff(iVar6);\n                if ((*(*0x42eb70 + 0x11c) != 0) && (iVar6 == 0x434400)) {\n                    uVar8 = 0;\n                    fcn.00405a2e(0, *(*0x42eb70 + 0x11c));\n                    iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(0x42db00, 0x429fe0);\n                    if (iVar1 != 0) {\n                        sub.KERNEL32.dll_lstrcatA(uVar8, 0x42db00, 0x434400);\n                    }\n                }\n                *0x429fcc = *0x429fcc + 1;\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x3fb, iVar6);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004052b1(0x3fb, iVar6);\n        iVar1 = fcn.004055e0(iVar6);\n        if (iVar1 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405a0c(0x428fa8, iVar6);\n        puVar5 = NULL;\n        var_44h = 0;\n        var_ch = fcn.00405d2e();\n        if (var_ch != NULL) {\n            do {\n                var_48h = &fcn.004041fc::var_1ch;\n                iVar1 = (*var_ch)(0x428fa8, &fcn.004041fc::var_28h, &fcn.004041fc::var_14h);\n                if (iVar1 != 0) {\n                    var_8h = 1;\n                    arg_10h_00 = var_28h >> 10 | var_24h << 0x16;\n                    goto code_r0x00404488;\n                }\n                if (puVar5 != NULL) {\n                    *puVar5 = 0;\n                }\n                var_44h = 0x428fa8;\n                var_48h = 0x404409;\n                iVar1 = fcn.00405546();\n                puVar5 = iVar1 + -1;\n                *puVar5 = 0x5c;\n            } while (puVar5 != 0x428fa8);\n        }\n        var_48h = iVar6;\n        fcn.00405a0c(0x428fa8);\n        puVar3 = fcn.00405593(0x428fa8);\n        if (puVar3 != NULL) {\n            *puVar3 = 0;\n        }\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceA)\n                          (0x428fa8, &fcn.004041fc::var_10h, &fcn.004041fc::var_18h, &fcn.004041fc::var_ch, \n                           &fcn.004041fc::var_24h);\n        arg_10h_00 = arg_ch;\n        if (iVar6 != 0) {\n            var_44h = 0x400;\n            var_48h = var_ch;\n            arg_10h_00 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h);\n            var_8h = 1;\n        }\ncode_r0x00404488:\n        uVar9 = 5;\n        var_48h = 0x40448f;\n        arg_10h_01 = fcn.0040464c();\n        if ((var_8h != 0) && (arg_10h_00 < arg_10h_01)) {\n            var_4h = 2;\n        }\n        if (*(*0x42e33c + 0x10) != 0) {\n            var_48h = arg_10h_01;\n            fcn.00404597(0x3ff, 0xfffffffb, arg_10h_01);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x400, 0x428f98);\n                uVar9 = arg_8h;\n            }\n            else {\n                uVar9 = 0x400;\n                fcn.00404597(0x400, 0xfffffffc, arg_10h_00);\n            }\n        }\n        *0x42ec04 = var_4h;\n        if (var_4h == 0) {\n            uVar9 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00403de0(var_4h == 0, uVar9);\n        if ((var_4h == 0) && (*0x429fcc == 0)) {\n            fcn.00404191();\n        }\n        *0x429fcc = 0;\n    }\ncode_r0x0040451c:\n    fcn.00403e25(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2167
    },
    "00405983": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405983(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char cVar6;\n    int32_t iVar7;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    var_4h = 1;\n    cVar2 = '\\n';\n    cVar6 = '9';\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_4h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if (('/' < uVar1) && (uVar1 < '8')) {\n            cVar2 = '\\b';\n            cVar6 = '7';\n        }\n        if ((uVar1 & 0xdf) == 0x58) {\n            cVar2 = '\\x10';\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (cVar6 < uVar4)) {\n            if ((cVar2 != '\\x10') || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_4h * iVar7;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        iVar7 = cVar2 * iVar7 + iVar5;\n    } while( true );\n}\n",
        "token_count": 446
    },
    "00402a36": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402a36(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_10ch;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(hKey, lpSubKey, 0, *0x42ec10 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyA;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_10ch, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402ac7;\n            }\n            iVar1 = fcn.00402a36(phkResult, &var_10ch, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.00405d2e(2);\n        if (pcVar2 == NULL) {\n            if ((*0x42ec10 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402ac7:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x42ec10, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 398
    },
    "00402b3b": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402b3b(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_40h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x414b80;\n        if (*0x428b90 <= *0x414b80) {\n            iVar2 = *0x428b90;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x428b90);\n        (*_sym.imp.USER32.dll_wsprintfA)(&var_40h, \"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextA)(arg_8h, &var_40h);\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 0x406, &var_40h);\n    }\n    return 0;\n}\n",
        "token_count": 265
    },
    "00404597": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404597(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char *pcVar8;\n    uint *arg_8h;\n    uint var_40h;\n    uint var_20h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00405a2e(&var_20h, 0xffffffdf);\n    arg_8h = &var_40h;\n    uVar2 = fcn.00405a2e(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = \"%u.%u%s%s\";\n    uVar7 = 0x429fe0;\n    iVar3 = fcn.00405a2e(0x429fe0, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenA(0x429fe0, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfA)(iVar3 + iVar4);\n    sub.USER32.dll_SetDlgItemTextA(*0x42e338, nIDDlgItem, 0x429fe0);\n    return;\n}\n",
        "token_count": 494
    },
    "00406897": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406897(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.004056a4();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 342
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x42eb8c != 0)) {\n        puVar2 = *0x42eb88 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x106;\n        } while (uVar3 < *0x42eb8c);\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "004029f6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004029f6(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405a2e((uVar1 >> 4) * 0x400 + 0x409b80, *(*0x409b78 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00405c6e(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 151
    },
    "00402aeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402aeb(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x42ebe4 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 58
    },
    "0040381e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040381e(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00405983(0x435000);\n    do {\n        if (*0x42eba4 != 0) {\n            puVar3 = *(*0x42eb70 + 100) * *0x42eba4 + *0x42eba0;\n            iVar5 = *0x42eba4;\n            do {\n                puVar3 = puVar3 - *(*0x42eb70 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x42e340 = *(puVar3 + 1);\n                    *0x42ec08 = *(puVar3 + 3);\n                    *0x42e33c = puVar3 + 5;\n                    if (*0x42e33c != NULL) {\n                        fcn.0040596a(0x435000, *puVar3);\n                        uVar2 = fcn.00405a2e(0x42e360, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextA)(*0x429fb8, uVar2);\n                        piVar6 = *0x42eb88;\n                        for (iVar5 = *0x42eb8c; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00405a2e(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x106;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00403dbe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403dbe(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405a2e(0, param_3);\n    sub.USER32.dll_SetDlgItemTextA(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 90
    },
    "00403ed2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ed2(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch, *0x428fa4 + arg_8h, arg_10h);\n    iVar1 = sub.KERNEL32.dll_lstrlenA(arg_ch);\n    *arg_14h = iVar1;\n    *0x428fa4 = *0x428fa4 + iVar1;\n    return 0;\n}\n",
        "token_count": 131
    },
    "004041b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004041b5(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00403dbe(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextA(arg_8h, 1000, *(arg_14h + 0x3c) * 0x400 + 0x42f000);\n    }\n    fcn.00403e25(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 149
    },
    "004054ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004054ff(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, iVar1 + param_1);\n    if (*pcVar2 != '\\\\') {\n        sub.KERNEL32.dll_lstrcatA(param_1, 0x409010);\n    }\n    return param_1;\n}\n",
        "token_count": 115
    },
    "00405546": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00405546(char *param_1)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenA(param_1);\n    pcVar2 = param_1 + iVar1;\n    do {\n        if (*pcVar2 == '\\\\') break;\n        pcVar2 = (*_sym.imp.USER32.dll_CharPrevA)(param_1, pcVar2);\n    } while (param_1 < pcVar2);\n    *pcVar2 = '\\0';\n    return pcVar2 + 1;\n}\n",
        "token_count": 128
    },
    "00405712": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00405712(uchar *arg_8h, uint lpPathName)\n\n{\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    puVar1 = arg_8h;\n    iVar4 = 100;\n    do {\n        iVar4 = iVar4 + -1;\n        arg_8h = 0x61736e;\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        arg_8h._0_3_ = CONCAT12(arg_8h._2_1_ + uVar2 % 0x1a, arg_8h._0_2_);\n        arg_8h = arg_8h & 0xff000000 | arg_8h;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetTempFileNameA)(lpPathName, &arg_8h, 0, puVar1);\n        if (iVar3 != 0) {\n            return puVar1;\n        }\n    } while (iVar4 != 0);\n    *puVar1 = 0;\n    return NULL;\n}\n",
        "token_count": 254
    },
    "0040596a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040596a(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfA)(param_1, 0x407318, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "004056e3": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.004056e3(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileA)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "0040526c": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040526c(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x42bfe8 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x42bfe8, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 145
    },
    "00402b00": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402b00(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004029f6(0x22, 0, *0x42ec10 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402aeb(*(*0x409b78 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 141
    },
    "004034a5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004034a5(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x428f9c; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004034c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004034c0(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x428f9c;\n    fcn.004034a5(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x428f9c = NULL;\n    return;\n}\n",
        "token_count": 148
    },
    "004034f5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004034f5(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x428f9c;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040552a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040552a(char *param_1, char param_2)\n\n{\n    for (; (*param_1 != '\\0' && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextA)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00405658": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00405658(uint param_1, uint param_2)\n\n{\n    uchar uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    int32_t iVar4;\n    \n    iVar2 = sub.KERNEL32.dll_lstrlenA(param_2);\n    iVar4 = unaff_retaddr;\n    while( true ) {\n        iVar3 = sub.KERNEL32.dll_lstrlenA(unaff_retaddr);\n        if (iVar3 < iVar2) {\n            return 0;\n        }\n        uVar1 = *(iVar2 + unaff_retaddr);\n        *(iVar2 + unaff_retaddr) = 0;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(unaff_retaddr, iVar4);\n        *(iVar2 + unaff_retaddr) = uVar1;\n        if (iVar3 == 0) break;\n        unaff_retaddr = (*_sym.imp.USER32.dll_CharNextA)(unaff_retaddr);\n    }\n    return unaff_retaddr;\n}\n",
        "token_count": 234
    },
    "004056a4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004056a4(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (0 < param_3) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00405d67": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d67(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004030c6": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.004030c6(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00405c6e(0x435400);\n    iVar1 = fcn.0040556c(0x435400);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.004054ff(0x435400);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryA)(0x435400, 0);\n    fcn.00405712(0x435000, 0x435400);\n    return;\n}\n",
        "token_count": 124
    },
    "0040307d": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040307d(uint lpBuffer, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_ch;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(*0x409014, lpBuffer, arg_ch, &arg_ch, 0);\n    if ((iVar2 == 0) || (arg_ch != iVar1)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 131
    },
    "00405d2e": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00405d2e(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x409200);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x409204));\n    return;\n}\n",
        "token_count": 148
    }
}